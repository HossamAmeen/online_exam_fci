-- phpMyAdmin SQL Dump
-- version 4.9.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: 21 أبريل 2020 الساعة 12:54
-- إصدار الخادم: 10.4.8-MariaDB
-- PHP Version: 7.2.23

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `online_exam`
--

-- --------------------------------------------------------

--
-- بنية الجدول `classes`
--

CREATE TABLE `classes` (
  `id` int(11) NOT NULL,
  `CLASS_NAME` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `DEPARTEMENT_ID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- بنية الجدول `courses`
--

CREATE TABLE `courses` (
  `id` int(11) NOT NULL,
  `COURSE_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `COURSES_LEVEL` int(11) DEFAULT NULL,
  `DEPARTMENT_ID` int(11) DEFAULT NULL,
  `COURSE_CODE` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `COURSE_IMAGE` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `courses`
--

INSERT INTO `courses` (`id`, `COURSE_NAME`, `COURSES_LEVEL`, `DEPARTMENT_ID`, `COURSE_CODE`, `COURSE_IMAGE`, `created_at`, `updated_at`) VALUES
(10, 'c++', 1, 1, '126824447', '1540846147_a585d7b1dfd8bfe4ab454085a6c6786c.jpg', '2018-10-29 18:49:07', '2018-10-29 18:49:07'),
(11, 'c+++', 1, 3, '1234596', '1540846173_a585d7b1dfd8bfe4ab454085a6c6786c.jpg', '2018-10-29 18:49:33', '2018-10-29 18:49:33'),
(13, 'network', 1, 2, '123456', '1540971031_032b2cc936860b03048302d991c3498f.jpg', '2018-10-31 05:30:31', '2018-10-31 05:30:31'),
(14, 'Laravel', 4, 2, '123456', '1540984858_032b2cc936860b03048302d991c3498f.jpg', '2018-10-31 09:20:58', '2018-10-31 09:20:58'),
(15, 'Java', 2, 4, '1234', '1541845457_453859528b76397a5a12a9d2f36ba702.jpg', '2018-11-10 08:24:17', '2018-11-10 08:24:17'),
(16, 'DS', 2, 4, '211', '1542570089_3843daec1049b4676237d7fa68424f6b.png', '2018-11-18 17:41:29', '2018-11-18 17:41:29'),
(17, 'Data Communication', 2, 2, 'IT231', '1543423995_55a0dece173c7bc87d2b3e562c491a85.jpg', '2018-11-28 14:53:15', '2018-11-28 14:53:15'),
(18, 'تاريخ علم النفس', 1, 5, 'psy3', '1544024909_3843daec1049b4676237d7fa68424f6b.png', '2018-12-05 13:48:29', '2018-12-05 13:48:29'),
(19, 'engineering test', 1, 6, '12345', '1544440781_87d07f90f10c40ed8075f45c042fe6f6.jpg', '2018-12-10 09:19:41', '2018-12-10 09:19:41'),
(20, 'أساسيات برمجة', 1, 8, '111', '1545038783_f264c08f8c1f834dcaa0880afdfbae00.bmp', '2018-12-17 07:26:23', '2018-12-17 07:26:23'),
(21, 'Data Structures and Algorithm', 2, 4, 'CS211', '1548003790_0edee21876184f4d5b9f1cea5eacb671.PNG', '2019-01-20 15:03:10', '2019-01-20 15:03:10'),
(22, 'الكرة الطائرة', 3, 10, '0123', '1548592441_0160694331d33f334dfa17413dbecc76.png', '2019-01-27 10:34:01', '2019-01-27 10:34:01'),
(23, 'nnnnnn', 1, 2, '12345', '1550159872_453859528b76397a5a12a9d2f36ba702.jpg', '2019-02-14 13:49:02', '2019-02-14 13:57:52'),
(24, 'programming fundamental', 1, 4, 'cs101', '1552545964_87d07f90f10c40ed8075f45c042fe6f6.jpg', '2019-03-14 04:46:04', '2019-03-14 04:46:04'),
(25, 'System Analysis and design', 2, 9, 'is212', '1553587916_87d07f90f10c40ed8075f45c042fe6f6.jpg', '2019-03-26 06:11:56', '2019-03-26 06:11:56'),
(26, 'Information system strategy', 3, 9, 'IS342', '1553587968_87d07f90f10c40ed8075f45c042fe6f6.jpg', '2019-03-26 06:12:48', '2019-03-26 06:12:48'),
(27, 'Algorithm Design and Analysis', 3, 4, 'CS311', '', '2019-04-01 06:04:38', '2019-04-01 06:04:38'),
(28, 'العروض التقديمية', 1, 8, 'EDCS2', '', '2019-04-01 06:18:09', '2019-04-01 06:18:09'),
(29, 'الاختبارا ت النفسية', 1, 5, 'edu201', '1555249903_bdad9f658e7a71425912b08df3875713.bmp', '2019-04-14 11:51:43', '2019-04-14 11:51:43'),
(30, 'مختارات فى علم النفس', 1, 5, 'edupsy1', '1555265864_538dcf9d8b98ac9a193a01f25d975ad2.jpg', '2019-04-14 16:17:44', '2019-04-14 16:17:44'),
(31, 'التخطيط الاستراتيجي', 1, 11, 'edu604', '1555935525_571e32a9497bc9ce85a05dda04543fd6.jpg', '2019-04-22 10:18:45', '2019-04-22 10:18:45'),
(32, 'الامتحان الاول', 1, 1, '123456', '1576136715_b596da162d0b6257897c9f948ec9f819.png', '2019-12-12 05:45:15', '2019-12-12 05:45:15'),
(33, 'network 2', 1, 2, '123123', '', '2020-02-02 10:26:11', '2020-02-02 10:26:11'),
(34, 'testcourse1', 1, 12, 'it122', '', '2020-03-14 18:49:16', '2020-03-14 18:49:16'),
(35, 'testcourse2', 1, 12, 'it121', '', '2020-03-14 18:49:45', '2020-03-14 18:49:45');

-- --------------------------------------------------------

--
-- بنية الجدول `departments`
--

CREATE TABLE `departments` (
  `id` int(11) NOT NULL,
  `DEPARTMENT_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `FACULTY_ID` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `departments`
--

INSERT INTO `departments` (`id`, `DEPARTMENT_NAME`, `FACULTY_ID`, `created_at`, `updated_at`) VALUES
(1, 'asd', 1, '2018-09-25 22:34:46', '2018-09-25 22:34:46'),
(2, 'it', 4, '2018-09-25 22:35:20', '2018-09-25 22:35:39'),
(3, 'asd2', 1, '2018-09-25 22:34:46', '2018-09-25 22:34:46'),
(4, 'cs', 4, '2018-09-25 22:35:20', '2018-09-25 22:35:39'),
(5, 'علم النفس', 6, '2018-12-05 13:40:39', '2018-12-05 13:40:39'),
(6, 'engineering test', 7, '2018-12-11 03:36:09', '2018-12-11 03:36:09'),
(7, 'engineering test', 8, '2018-12-11 05:36:09', '2018-12-11 05:36:09'),
(8, 'حاسب آلى', 6, '2018-12-17 07:11:26', '2018-12-17 07:11:26'),
(9, 'IS', 4, '2018-12-17 07:47:55', '2018-12-17 07:47:55'),
(10, 'المناهج وطرق التدريس التربية الرياضية', 9, '2019-01-27 10:31:50', '2019-01-27 10:31:50'),
(11, 'أصول التربية', 6, '2019-04-22 10:17:57', '2019-04-22 10:17:57'),
(12, 'testdep', 10, '2020-03-14 18:48:20', '2020-03-14 18:48:20');

-- --------------------------------------------------------

--
-- بنية الجدول `exams`
--

CREATE TABLE `exams` (
  `id` int(11) NOT NULL,
  `time` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `EXAM_DURATION` int(11) DEFAULT NULL,
  `COURSE_ID` int(11) DEFAULT NULL,
  `STAFF_ID` int(11) DEFAULT NULL,
  `SEMESTER_ID` int(11) DEFAULT NULL,
  `EXAM_TOTAL` double DEFAULT NULL,
  `EXAM_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  `date` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `year_id` int(11) DEFAULT NULL,
  `number_choose_easy_question` int(11) NOT NULL,
  `number_choose_meduim_question` int(11) NOT NULL,
  `number_choose_hard_question` int(11) NOT NULL,
  `number_true_and_false_easy_question` int(11) NOT NULL,
  `number_true_and_false_meduim_question` int(11) NOT NULL,
  `number_true_and_false_hard_question` int(11) NOT NULL,
  `number_write_code_easy_question` int(11) NOT NULL,
  `number_write_code_meduim_question` int(11) NOT NULL,
  `number_write_code_hard_question` int(11) NOT NULL,
  `number_complete_easy_question` int(11) NOT NULL,
  `number_complete_meduim_question` int(11) NOT NULL,
  `number_complete_hard_question` int(11) NOT NULL,
  `number_define_easy_question` int(11) NOT NULL,
  `number_define_meduim_question` int(11) NOT NULL,
  `number_define_hard_question` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `allow_time` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `camera_required` int(11) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `exams`
--

INSERT INTO `exams` (`id`, `time`, `EXAM_DURATION`, `COURSE_ID`, `STAFF_ID`, `SEMESTER_ID`, `EXAM_TOTAL`, `EXAM_NAME`, `type`, `date`, `year_id`, `number_choose_easy_question`, `number_choose_meduim_question`, `number_choose_hard_question`, `number_true_and_false_easy_question`, `number_true_and_false_meduim_question`, `number_true_and_false_hard_question`, `number_write_code_easy_question`, `number_write_code_meduim_question`, `number_write_code_hard_question`, `number_complete_easy_question`, `number_complete_meduim_question`, `number_complete_hard_question`, `number_define_easy_question`, `number_define_meduim_question`, `number_define_hard_question`, `created_at`, `updated_at`, `allow_time`, `camera_required`) VALUES
(19, '11:55', 40, 2, 4, NULL, 20, 'c#', 3, '10/27/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-10-27 14:10:46', '2018-10-27 14:10:46', '', 0),
(20, '09:53', 3, 13, 6, NULL, 20, 'network', 3, '10/31/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-10-31 05:36:49', '2018-10-31 05:36:49', '', 0),
(21, '11:14', 60, 14, 6, NULL, 2, 'Laravel', 1, '11/01/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-10-31 09:28:35', '2018-10-31 09:28:35', '', 0),
(22, '17:13', 3, 13, 7, NULL, 2, 'network', 1, '11/09/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-08 18:00:28', '2018-11-08 18:00:28', '', 0),
(23, '11:55', 20, 15, 8, NULL, 15, 'Java', 2, '10-11-2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-10 07:50:35', '2018-11-10 07:50:35', '', 0),
(24, '00:00', 20, 15, 8, NULL, 10, 'java2', 1, '11/10/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-10 07:59:41', '2018-11-10 07:59:41', '', 0),
(25, '01:00', 10, 15, 9, NULL, 20, 't1', 2, '11/10/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-10 08:22:33', '2018-11-10 08:22:33', '', 0),
(26, '01:00', 10, 15, 10, NULL, 20, 'test3', 2, '11/11/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-11 14:00:45', '2018-11-11 14:00:45', '', 0),
(27, '01:00', 15, 15, 9, NULL, 10, 'Test1', 1, '11/19/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-18 17:48:48', '2018-11-18 17:48:48', '', 0),
(28, '14:00', 10, 15, 9, NULL, 10, 'java quiz 19-11', 1, '11/19/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-19 08:28:12', '2018-11-19 08:28:12', '', 0),
(29, '01:00', 15, 15, 9, NULL, 10, 'quiz 2', 1, '11/25/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-24 08:31:02', '2018-11-24 08:31:02', '', 0),
(30, '10:00', 10, 17, 11, NULL, 5, 'Quiz', 1, '11/29/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-11-28 15:01:27', '2018-11-28 15:01:27', '', 0),
(31, '12:00', 80, 15, 9, NULL, 20, 'midterm 2018-2019', 1, '12/01/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-01 06:48:31', '2018-12-01 06:48:31', '', 0),
(32, '12:01', 10, 15, 9, NULL, 10, 'test f', 1, '12/03/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-03 08:31:27', '2018-12-03 08:31:27', '', 0),
(33, '13:30', 20, 15, 9, NULL, 10, 'test f2', 1, '12/03/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-03 08:38:59', '2018-12-03 08:38:59', '', 0),
(34, '16:05', 90, 15, 9, NULL, 20, 'midterm General 18/19', 2, '12/03/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-03 09:41:31', '2018-12-03 09:41:31', '', 0),
(35, '15:00', 25, 18, 12, NULL, 20, 'اعمال سنة', 2, '12/09/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-05 14:07:22', '2018-12-05 14:07:22', '', 0),
(36, '01:00', 10, 15, 9, NULL, 10, 'test4', 1, '12/11/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-13 07:48:53', '2018-12-13 07:48:53', '', 0),
(37, '12:00', 30, 20, 14, NULL, 15, 'Midterm1', 2, '12/18/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-17 07:53:02', '2018-12-17 07:53:02', '', 0),
(38, '12:40', 60, 20, 14, NULL, 30, 'Practical Exam', 2, '12/18/2018', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2018-12-18 06:32:47', '2018-12-18 06:32:47', '', 0),
(39, '15:36', 10, 15, 9, NULL, 20, 'test10', 2, '01/02/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-01-01 11:36:23', '2019-01-05 04:40:44', '', 0),
(40, '15:25', 30, 21, 10, NULL, 15, 'Data Structures and Algorithms', 2, '01/21/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-01-20 15:25:13', '2019-01-21 11:22:40', '', 0),
(41, '15:44', 30, 21, 10, NULL, 15, 'DS2', 2, '01/21/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-01-21 10:47:39', '2019-01-21 11:47:44', '', 0),
(42, '01:00', 50, 22, 16, NULL, 100, 'test1', 3, '02/09/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-01-27 10:37:33', '2019-01-27 10:37:33', '', 0),
(43, '01:00', 10, 22, 16, NULL, 2, 'test2', 1, '01/30/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-01-27 10:48:38', '2019-01-27 10:48:38', '', 0),
(44, '12:00', 50, 22, 16, NULL, 80, 'الكره الطائره', 1, '02/06/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-04 07:55:44', '2019-02-04 07:55:44', '', 0),
(45, '01:24', 50, 22, 16, NULL, 100, 'Hala', 1, '02/28/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-05 08:24:27', '2019-02-28 09:24:28', '', 0),
(46, '00:00', 50, 22, 16, NULL, 86, 'الكرة الطائرة', 1, '10/02/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-06 04:54:01', '2019-02-06 04:54:01', '', 0),
(47, '01:00', 50, 22, 16, NULL, 100, 'تجربة اولى', 2, '02/28/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-13 11:55:22', '2019-02-13 11:55:22', '', 0),
(48, '21:54', 30, 15, 10, NULL, 30, 'test18-2-2019', 2, '03/11/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-18 15:02:03', '2019-03-11 17:52:05', '', 0),
(49, '12:57', 50, 22, 16, NULL, 86, 'Test  3', 3, '03/27/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-25 04:30:57', '2019-03-27 08:54:55', '', 0),
(50, '11:49', 50, 22, 16, NULL, 86, 'test', 3, '03/27/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-02-25 07:45:34', '2019-03-27 07:47:53', '', 0),
(51, '09:00', 75, 24, 17, NULL, 20, 'c++ general 16-3-2019', 2, '04/04/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-03-14 14:39:46', '2019-04-04 05:28:38', '', 0),
(52, '10:00', 90, 25, 18, NULL, 25, 'Winter- March_2019(Midterm)', 2, '03/31/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-03-26 10:50:17', '2019-03-26 10:51:45', '', 0),
(53, NULL, NULL, 25, 18, NULL, 25, NULL, 2, NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-03-26 10:51:12', '2019-03-26 10:52:38', '', 0),
(54, '12:01', 30, 28, 19, NULL, 30, 'العروض التقديمية', 2, '04/03/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-02 11:46:36', '2019-04-02 11:46:36', '', 0),
(55, '09:05', 90, 24, 17, NULL, 20, 'bio-3-4-2019', 2, '04/04/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-02 12:50:09', '2019-04-04 05:07:39', '', 0),
(56, '21:15', 30, 28, 19, NULL, 30, '2العروض التقديمية', 2, '04/08/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-02 15:30:23', '2019-04-08 17:06:24', '', 0),
(57, '09:20', 90, 24, 17, NULL, 20, 'tester', 2, '04/04/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-04 05:44:16', '2019-04-04 05:44:16', '', 0),
(58, '08:10', 60, 27, 10, NULL, 25, 'Algorithms', 2, '04/09/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-08 17:12:04', '2019-04-09 03:54:43', '', 0),
(59, '14:01', 120, 15, 17, NULL, 20, 'test44', 2, '04/24/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-14 11:36:08', '2019-04-14 11:36:08', '', 0),
(60, '01:00', 90, 29, 20, NULL, 50, 'test23', 2, '04/15/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-14 11:59:24', '2019-04-14 11:59:24', '', 0),
(61, '10:10', 120, 29, 21, NULL, 10, 'مختارات فى علم النفس', 2, '04/17/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-14 16:32:15', '2019-04-14 16:32:15', '', 0),
(62, '10:10', 120, 29, 21, NULL, 10, 'مختارات فى علم النفس', 2, '04/17/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-14 16:33:44', '2019-04-14 16:33:44', '', 0),
(63, '10:10', 120, 29, 21, NULL, 10, 'مختارات فى علم النفس', 2, '04/17/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-14 16:35:57', '2019-04-14 16:35:57', '', 0),
(64, '01:00', 50, 15, 9, NULL, 100, 'Test19', 1, '04/16/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-15 09:48:08', '2019-04-15 09:48:08', '', 0),
(65, '18:50', 30, 31, 20, NULL, 20, 'دبلوم خاصة', 2, '04/22/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-22 12:07:48', '2019-04-22 14:54:28', '', 0),
(66, '21:00', 90, 15, 17, NULL, 20, 'mid1', 2, '04/24/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-23 17:15:18', '2019-04-24 05:00:14', '', 0),
(67, '16:00', 90, 15, 9, NULL, 20, 'java mid-term', 1, '04/24/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-24 04:22:35', '2019-04-24 10:34:21', '', 0),
(68, '08:46', 90, 15, 17, NULL, 20, 'java mid', 2, '04/24/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-24 04:49:10', '2019-04-24 05:08:29', '', 0),
(69, '13:00', 90, 15, 17, NULL, 20, 'java mid', 2, '04/24/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-04-24 04:49:10', '2019-04-24 09:03:59', '', 0),
(70, '11:00', 65, 24, 17, NULL, 20, '2nd mid term', 2, '05/13/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-05-13 04:11:56', '2019-05-13 07:11:14', '', 0),
(71, '14:15', 61, 24, 17, NULL, 20, 'c++ 13-5-2019', 2, '05/13/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-05-13 05:24:24', '2019-05-13 10:25:07', '', 0),
(72, '12:30', 75, 24, 17, NULL, 20, 'bio 13-5-2019', 2, '05/13/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-05-13 07:42:30', '2019-05-13 09:24:03', '', 0),
(73, '01:49', 50, 31, 22, NULL, 40, 'exam # a', 3, '26-Jul-1979', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-07-02 00:24:03', '2019-07-02 14:34:51', '', 0),
(74, '01:49', 50, 31, 22, NULL, 40, 'exam # B', 3, '26-Jul-1979', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-07-02 00:25:18', '2019-07-02 08:41:52', '', 0),
(75, '15:09', 40, 31, 22, NULL, 40, 'exam # C', 3, '08-Oct-2012', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-07-02 00:37:50', '2019-07-02 08:42:34', '', 0),
(76, '09:48', 40, 31, 22, NULL, 20, 'exam # d', 2, '20-Jan-2010', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-07-02 08:36:01', '2019-07-02 08:42:45', '', 0),
(77, '23:11', 40, 31, 22, NULL, 20, 'exam # D', 2, '08-Mar-1990', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-07-02 08:36:54', '2019-07-02 08:42:58', '', 0),
(82, '11:00', 60, 31, 22, NULL, 40, 'الامتحان الاول', 1, '12/12/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2019-12-12 06:08:50', '2019-12-12 06:08:50', '', 0),
(83, '11:50', 60, 31, 22, NULL, 60, 'exam1', 1, '12/12/2019', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-09 07:47:09', '2020-01-09 07:47:09', '', 0),
(84, '11:50', 60, 31, 22, NULL, 40, 'exam 2', 1, '01/09/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-09 08:21:17', '2020-01-09 08:21:17', '', 0),
(85, '11:01', 60, 31, 22, NULL, 60, 'tttttttt', 2, '01/15/2020', NULL, 1, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-14 06:16:15', '2020-01-15 01:44:20', '', 0),
(86, '12:30', 60, 13, 24, NULL, 30, 'network', 3, '01/15/2020', NULL, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-15 10:56:31', '2020-01-15 10:56:31', '', 0),
(87, '01:00', 500, 13, 24, NULL, 30, 'network2', 3, '01/17/2020', NULL, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-15 11:25:39', '2020-01-16 21:23:15', '', 0),
(88, '01:00', 300, 13, 24, NULL, 20, 'test exam with random', 3, '01/18/2020', NULL, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-01-17 10:59:24', '2020-01-17 21:08:52', '', 0),
(89, '03:05', 500, 13, 24, NULL, 5, 'network_test_with ilos', 1, '02/02/2020', NULL, 5, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-02-02 10:04:40', '2020-02-02 10:04:40', '', 0),
(90, '03:30', 23, 33, 25, NULL, 12, 'asd', 1, '02/02/2020', NULL, 5, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-02-02 10:29:31', '2020-02-02 10:29:51', '', 0),
(91, '05:43', 60, 34, 26, NULL, 20, 'Testquiz1', 1, '03/14/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-03-14 19:41:50', '2020-03-14 19:41:50', '05:28', 0),
(92, '05:56', 60, 34, 26, NULL, 20, 'testquiz2', 1, '03/14/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-03-14 19:44:45', '2020-03-14 19:44:45', '05:50', 0),
(93, '06:05', 60, 34, 26, NULL, 20, 'testquiz3', 1, '03/14/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-03-14 19:50:53', '2020-03-14 19:50:53', '05:57', 0),
(94, '16:44', 60, 34, 26, NULL, 30, 'testmid1', 2, '03/14/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-03-14 20:34:33', '2020-03-14 21:20:27', '16:30', 0),
(95, '18:04', 100, 34, 26, NULL, 60, 'testexam2', 3, '04/07/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-07 13:58:55', '2020-04-07 14:04:12', '18:00', 0),
(96, '22:08', 120, 34, 26, NULL, 90, 'testexam4', 3, '04/16/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-16 17:52:42', '2020-04-16 18:01:02', '22:00', 0),
(97, '22:03', 60, 34, 26, NULL, 77, 'testeee', 3, '04/16/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-16 18:04:01', '2020-04-16 18:04:01', '22:00', 0),
(98, '23:16', 60, 34, 26, NULL, 80, 'testexam5', 3, '04/16/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-16 19:11:21', '2020-04-16 19:16:02', '23:00', 0),
(99, '23:22', 33, 34, 26, NULL, 33, 'fssfsfsfsf', 3, '04/16/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-16 19:17:14', '2020-04-16 19:23:01', '23:00', 0),
(100, '00:03', 60, 34, 26, NULL, 54, 'testexam6', 3, '04/17/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-16 20:07:16', '2020-04-16 20:07:16', '00:00', 0),
(101, '10:26', 120, 34, 26, NULL, 90, 'testexam7', 3, '04/17/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-17 06:25:50', '2020-04-17 06:25:50', '10:00', 0),
(102, '11:00', 120, 34, 26, NULL, 90, 'sssss', 3, '04/17/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-17 06:59:40', '2020-04-17 06:59:40', '11:00', 0),
(103, '22:35', 40, 34, 26, NULL, 90, 'testexam8', 3, '04/17/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-17 18:28:19', '2020-04-17 18:28:19', '22:00', 0),
(104, '23:08', 30, 34, 26, NULL, 90, 'testexam9', 3, '04/17/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-17 18:47:01', '2020-04-17 19:09:02', '22:01', 0),
(105, '20:00', 30, 34, 26, NULL, 90, 'asdaddadd', 3, '04/19/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-19 15:46:35', '2020-04-19 15:46:35', '19:22', 1),
(106, '20:00', 45, 34, 26, NULL, 66, 'adadaddadadd', 1, '04/19/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-19 15:48:10', '2020-04-19 15:57:21', '19:00', 0),
(107, '22:46', 30, 34, 26, NULL, 100, 'reporttest', 4, '04/20/2020', NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '2020-04-20 18:38:51', '2020-04-20 18:48:04', '22:44', 0);

-- --------------------------------------------------------

--
-- بنية الجدول `exam_student_model`
--

CREATE TABLE `exam_student_model` (
  `id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `answer` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- إرجاع أو استيراد بيانات الجدول `exam_student_model`
--

INSERT INTO `exam_student_model` (`id`, `student_id`, `exam_id`, `question_id`, `answer`) VALUES
(67, 1236, 88, 613, NULL),
(68, 1236, 88, 622, NULL),
(69, 1236, 88, 615, NULL),
(70, 1236, 88, 623, NULL),
(71, 1236, 88, 618, NULL),
(72, 1236, 88, 620, NULL),
(73, 1237, 88, 618, NULL),
(74, 1237, 88, 620, NULL),
(75, 1237, 88, 622, NULL),
(76, 1237, 88, 613, NULL),
(77, 1237, 88, 615, NULL),
(78, 1237, 88, 623, NULL),
(79, 1238, 94, 627, NULL),
(80, 1238, 94, 625, NULL),
(81, 1238, 94, 629, NULL),
(82, 1238, 94, 626, NULL),
(83, 1238, 94, 630, NULL),
(84, 1238, 94, 628, NULL),
(85, 1238, 94, 631, NULL),
(86, 1238, 95, 646, NULL),
(87, 1238, 95, 649, NULL),
(88, 1238, 95, 647, NULL),
(89, 1238, 95, 645, NULL),
(90, 1238, 95, 648, NULL),
(91, 1238, 102, 646, NULL),
(92, 1238, 102, 645, NULL),
(93, 1239, 102, 646, NULL),
(94, 1239, 102, 645, NULL),
(95, 1238, 103, 646, NULL),
(96, 1238, 103, 645, NULL),
(97, 1238, 104, 660, NULL),
(98, 1238, 104, 665, NULL),
(99, 1238, 104, 663, NULL),
(100, 1238, 104, 661, NULL),
(101, 1238, 104, 662, NULL),
(102, 1238, 104, 664, NULL);

-- --------------------------------------------------------

--
-- بنية الجدول `faculties`
--

CREATE TABLE `faculties` (
  `id` int(11) NOT NULL,
  `FACULTY_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `faculties`
--

INSERT INTO `faculties` (`id`, `FACULTY_NAME`, `created_at`, `updated_at`) VALUES
(1, 'ajjj', '2018-09-25 19:19:49', '2018-09-25 20:22:17'),
(4, 'حاسبات و معلومات', '2018-09-25 20:26:07', '2018-09-25 20:26:07'),
(5, 'asda', '2018-09-25 22:32:37', '2018-09-25 22:32:37'),
(6, 'Education', '2018-12-05 13:39:58', '2018-12-05 13:39:58'),
(7, 'engineering test', '2018-12-11 02:50:44', '2018-12-11 02:50:44'),
(8, 'engineering test', '2018-12-11 04:50:44', '2018-12-11 04:50:44'),
(9, 'كلية التربية الرياضية', '2019-01-27 10:31:14', '2019-01-27 10:31:14'),
(10, 'testfac', '2020-03-14 18:48:02', '2020-03-14 18:48:02');

-- --------------------------------------------------------

--
-- بنية الجدول `ilos`
--

CREATE TABLE `ilos` (
  `id` int(11) NOT NULL,
  `COURSE_ID` int(11) DEFAULT NULL,
  `ILO_TEXT` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `ILO_TYPE_ID` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `ilos`
--

INSERT INTO `ilos` (`id`, `COURSE_ID`, `ILO_TEXT`, `ILO_TYPE_ID`, `created_at`, `updated_at`) VALUES
(8, 13, 'test ilos', 2, '2018-10-29 18:57:01', '2018-10-29 19:20:02'),
(9, 13, 'jasdsjkasdj', 2, '2018-10-31 05:37:55', '2018-10-31 05:37:55'),
(10, 14, 'klkzadsk', 2, '2018-10-31 09:30:07', '2018-10-31 09:30:07'),
(11, 15, 'understand basic java', 3, '2018-10-31 09:30:07', '2018-11-10 08:11:46'),
(12, 15, 'code simple program', 3, '2018-11-10 08:12:28', '2018-11-10 08:12:28'),
(13, 17, 'asd', 3, '2018-11-28 15:03:44', '2018-11-28 15:04:01'),
(14, 18, 'general knowledge', 2, '2018-12-05 14:09:41', '2018-12-05 14:09:41'),
(15, 20, 'Programming basics', 2, '2018-12-18 06:36:51', '2018-12-18 06:36:51'),
(16, 21, 'Discuss a variety of useful algorithms& data structures', 3, '2019-01-20 15:32:45', '2019-01-20 15:32:45'),
(17, 22, 'عام', 2, '2019-01-27 10:43:13', '2019-01-27 10:43:13'),
(18, 24, 'general', 5, '2019-03-14 12:39:33', '2019-04-14 11:46:30'),
(19, 26, 'general', 3, '2019-03-26 10:03:47', '2019-03-26 10:03:47'),
(20, 25, 'general', 3, '2019-03-26 10:04:03', '2019-03-26 10:04:03'),
(21, 28, 'general knowledge', 3, '2019-04-02 12:05:50', '2019-04-02 12:05:50'),
(22, 27, 'Basic and advanced algorithms', 2, '2019-04-08 17:17:27', '2019-04-08 17:17:27'),
(23, 29, 'معرفة عامة', 3, '2019-04-14 11:55:33', '2019-04-14 11:55:33'),
(24, 30, 'المعرفة', 3, '2019-04-14 16:27:02', '2019-04-14 16:27:02'),
(25, 30, 'الذهنية', 4, '2019-04-14 16:27:38', '2019-04-14 16:27:38'),
(26, 30, 'المهنية', 5, '2019-04-14 16:27:58', '2019-04-14 16:28:45'),
(27, 30, 'العامة', 6, '2019-04-14 16:28:16', '2019-04-14 16:28:16'),
(28, 31, 'general', 2, '2019-04-22 12:10:07', '2019-04-22 12:10:07'),
(29, 34, 'ilostest1', 3, '2020-03-14 21:22:06', '2020-03-14 21:22:06'),
(30, 34, 'ilostest2', 3, '2020-03-14 21:22:25', '2020-03-14 21:22:25');

-- --------------------------------------------------------

--
-- بنية الجدول `ilo_types`
--

CREATE TABLE `ilo_types` (
  `id` int(11) NOT NULL,
  `ILO_TYPE_DESCR` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `ilo_types`
--

INSERT INTO `ilo_types` (`id`, `ILO_TYPE_DESCR`, `created_at`, `updated_at`) VALUES
(2, 'ilos', '2018-10-29 18:30:28', '2018-10-29 18:30:28'),
(3, 'A type', '2018-11-10 08:10:08', '2018-11-10 08:10:08'),
(4, 'B type', '2018-11-10 08:10:18', '2018-11-10 08:10:18'),
(5, 'C type', '2018-11-10 08:10:31', '2018-11-10 08:10:31'),
(6, 'D type', '2018-11-10 08:10:45', '2018-11-10 08:10:45');

-- --------------------------------------------------------

--
-- بنية الجدول `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(17, '2014_10_12_000000_create_users_table', 1),
(18, '2014_10_12_100000_create_password_resets_table', 1),
(19, '2018_09_24_201903_create_courses_table', 1),
(20, '2018_09_24_205420_create_departments_table', 1),
(21, '2018_09_24_211454_create_exams_table', 1),
(22, '2018_09_24_212520_create_faculties_table', 1),
(23, '2018_09_24_212644_create_ilo_types_table', 1),
(24, '2018_09_24_212752_create_ilos_table', 1),
(25, '2018_09_24_213031_create_questions_table', 1),
(26, '2018_09_24_213806_create_question_choices_table', 1),
(27, '2018_09_24_214119_create_question_ilos_table', 1),
(28, '2018_09_24_214346_create_question_types_table', 1),
(29, '2018_09_24_214524_create_sas_table', 1),
(30, '2018_09_24_214708_create_semesters_table', 1),
(31, '2018_09_24_214758_create_staff_table', 1),
(32, '2018_09_24_214915_create_staff_courses_table', 1),
(33, '2018_09_25_175813_create_stud_ques_ans_choices_table', 1),
(34, '2018_09_25_175940_create_students_table', 1),
(35, '2018_09_25_180418_create_student_cource_exams_table', 1),
(36, '2018_09_25_184043_create_student_question_answers_table', 1),
(37, '2018_11_08_202950_create_sessions_table', 2);

-- --------------------------------------------------------

--
-- بنية الجدول `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- بنية الجدول `questions`
--

CREATE TABLE `questions` (
  `id` int(11) NOT NULL,
  `QUESTION_TEXT` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `QUESTION_TYPE_ID` int(11) NOT NULL,
  `EXAM_ID` int(11) DEFAULT NULL,
  `POINTS` double DEFAULT NULL,
  `course_id` int(11) DEFAULT NULL,
  `hard` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `questions`
--

INSERT INTO `questions` (`id`, `QUESTION_TEXT`, `QUESTION_TYPE_ID`, `EXAM_ID`, `POINTS`, `course_id`, `hard`, `created_at`, `updated_at`) VALUES
(131, 'java is ok', 2, NULL, 1, 15, 1, '2019-01-05 04:33:53', '2019-01-05 04:33:53'),
(132, 'cx vbx bcxvb', 3, NULL, NULL, 15, 2, '2019-01-05 04:37:15', '2019-01-05 04:37:15'),
(133, 'l;as;ldas', 2, NULL, 5, 15, 1, '2019-01-06 09:43:26', '2019-01-06 09:43:26'),
(134, 'l;as;ldas', 2, NULL, 5, 15, 1, '2019-01-06 09:44:32', '2019-01-06 09:44:32'),
(135, 'java is ok', 2, NULL, NULL, 15, 1, '2019-01-06 12:13:54', '2019-01-06 12:13:54'),
(136, 'jkh kjh; hlh', 1, NULL, 2, 15, 1, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(138, 'bgd dbfs,md glmxf', 2, NULL, 1, 15, 1, '2019-01-06 12:32:22', '2019-01-06 12:32:22'),
(139, 'FIFO stand for', 1, NULL, NULL, 21, 1, '2019-01-20 15:28:47', '2019-01-20 15:28:47'),
(140, 'FIFO stand for', 1, NULL, 1, 21, 1, '2019-01-20 15:35:13', '2019-01-20 15:35:13'),
(141, 'LIFO stand for', 1, NULL, 1, 21, 1, '2019-01-21 07:52:22', '2019-01-21 07:52:22'),
(142, 'Binary search can be applied on doubly linked list', 2, NULL, NULL, 21, 2, '2019-01-21 07:53:35', '2019-01-21 07:53:35'),
(143, 'Binary search can be applied on doubly linked list', 2, NULL, 1, 21, 2, '2019-01-21 07:54:08', '2019-01-21 07:54:08'),
(144, 'Binary search can be applied on doubly linked list', 2, NULL, 1, 21, 2, '2019-01-21 07:54:34', '2019-01-21 07:54:34'),
(145, 'There is no limit on storage used in linked queue', 2, NULL, 1, 21, 2, '2019-01-21 07:55:02', '2019-01-21 07:55:02'),
(146, 'In circular linked list, the last element point to the first element', 2, NULL, 1, 21, 1, '2019-01-21 07:55:30', '2019-01-21 07:55:30'),
(147, 'In queue, the enqueue operation affects the rear pointer', 2, NULL, 1, 21, 1, '2019-01-21 07:55:53', '2019-01-21 07:55:53'),
(148, 'In doubly linked list, each element has two pointers', 2, NULL, 1, 21, 1, '2019-01-21 07:57:26', '2019-01-21 07:57:26'),
(149, 'Binary search can be applied on sorted linked list', 2, NULL, 1, 21, 2, '2019-01-21 08:01:59', '2019-01-21 08:01:59'),
(150, 'To insert an element to a sorted list, we need to find its location first', 2, NULL, 1, 21, 2, '2019-01-21 08:04:06', '2019-01-21 08:04:06'),
(151, 'LIFO strategy used in', 1, NULL, 1, 21, 2, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(152, 'FIFO strategy used in', 1, NULL, NULL, 21, 2, '2019-01-21 08:08:44', '2019-01-21 08:08:44'),
(153, 'FIFO strategy used in', 1, NULL, 1, 21, 2, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(154, 'The complexity of heap sort is', 1, NULL, 1, 21, 1, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(155, 'The average case complexity of quick sort is', 1, NULL, 1, 21, 3, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(156, 'In Binary search tree, the left child value is ........ its parent value.', 1, NULL, NULL, 21, 3, '2019-01-21 08:32:42', '2019-01-21 08:32:42'),
(157, 'In Binary search tree, the left child value is ........ its parent value.', 1, NULL, 1, 21, 3, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(158, 'Any problem can be solved with recursion and vice versa', 2, NULL, 1, 21, 3, '2019-01-21 08:35:10', '2019-01-21 08:35:10'),
(160, 'تم اتشاف الكرة الطائرة سنة', 1, NULL, 2, 22, 2, '2019-01-27 10:40:03', '2019-01-27 10:40:03'),
(161, 'الكرة الطائر لعبة عنف', 2, NULL, 2, 22, 1, '2019-01-27 10:44:24', '2019-01-27 10:44:24'),
(162, 'تاريخ بدء الكرة الطائرة', 1, NULL, 3, 22, 1, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(163, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد.', 2, NULL, 13, 22, 2, '2019-02-04 08:01:29', '2019-02-04 08:01:29'),
(164, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 2, '2019-02-06 04:57:21', '2019-02-06 04:57:21'),
(165, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 2, '2019-02-06 05:02:30', '2019-02-06 05:02:30'),
(166, 'هل مشيبنسا كمشسارجحط', 2, NULL, 1, 22, 1, '2019-02-13 11:52:47', '2019-02-13 11:52:47'),
(167, 'غغغغغغغغغغغغ', 2, NULL, 1, 22, 1, '2019-02-13 11:53:21', '2019-02-13 11:53:21'),
(168, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد.', 2, NULL, 1, 22, 1, '2019-02-13 11:58:02', '2019-02-13 11:58:02'),
(169, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, NULL, 22, 2, '2019-02-13 12:12:33', '2019-02-13 12:12:33'),
(170, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, NULL, 22, 2, '2019-02-13 12:14:43', '2019-02-13 12:14:43'),
(171, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 1, '2019-02-13 12:16:02', '2019-02-13 12:16:02'),
(172, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 1, '2019-02-13 12:16:36', '2019-02-13 12:16:36'),
(173, 'كلما أقترب اللاعب المستقبل من اللاعب المعد كلماارتفع ذراعه حتى مستوى الرأس.', 2, NULL, 1, 22, 1, '2019-02-13 12:18:37', '2019-02-13 12:18:37'),
(174, 'يعتبر إعطاء نموذج لمهارة الارسال من أسفل هي الخطوة الأولي التى يجب إعطاؤها للطلاب عند تعليم المهارة', 2, NULL, 1, 22, 2, '2019-02-13 12:19:48', '2019-02-13 12:19:48'),
(175, 'يمكن للاعب المستقبل للارسال أن يستقبل الكرة بواسطة التمرير من أعلى باليدين.', 2, NULL, 1, 22, 1, '2019-02-13 12:21:54', '2019-02-13 12:21:54'),
(176, 'من النواحي الفنية التى يجب مراعاتها عند استقبال الارسال المرجحة الزائدة للذراعين أماماً ولأعلى للعب الكرة', 2, NULL, 1, 22, 2, '2019-02-13 12:23:05', '2019-02-13 12:23:05'),
(177, 'يمكن استخدام الكرات الطبية مختلفة الأوزان لتنمية القدرة العضلية للذراعين', 2, NULL, 1, 22, 1, '2019-02-13 12:23:55', '2019-02-13 12:23:55'),
(178, 'وجود حوائط وحواجز في فترة التدريب يساعد في امتصاص سرعة الكرة والاقتصاد في الوقت', 2, NULL, 1, 22, 1, '2019-02-13 12:24:43', '2019-02-13 12:24:43'),
(179, 'من مميزات الطريقة الزوجية فى الهجوم سهولة تنفيذ الطريقة دون تعقيد.', 2, NULL, 1, 22, 2, '2019-02-13 12:25:30', '2019-02-13 12:25:30'),
(180, 'يحق للاعب الحر (الليبرو) الإعداد من المنطقة الأمامية أعلي مستوي الشبكة', 2, NULL, 1, 22, 2, '2019-02-13 12:26:28', '2019-02-13 12:26:28'),
(181, 'يتم الهجوم بعد الدفاع فى حالة الكرة السهلة من المنافس فقط.', 2, NULL, 1, 22, 2, '2019-02-13 12:27:27', '2019-02-13 12:27:27'),
(182, 'من النواحى الفنية التى يجب مراعاتها فى مهارة الإعداد ملامسة اليدين للكرة وهما مسطحتان والرسغان مثنيتان أماماً', 2, NULL, 1, 22, 2, '2019-02-13 12:28:44', '2019-02-13 12:28:44'),
(183, 'من عيوب الإرسال من أسفل الأمامي المواجه سهولة الدفاع عنه بسبب بطء سير الكرة نحو ملعب المنافس', 2, NULL, 1, 22, 2, '2019-02-13 12:29:29', '2019-02-13 12:29:29'),
(184, 'وقفة الاستعداد العميقة هى الأكثر استخداماً وتتناسب مع الاستقبال والتمرير والإعداد .', 2, NULL, 1, 22, 2, '2019-02-13 12:31:06', '2019-02-13 12:31:06'),
(185, 'لايصلح أسلوب حل المشكلات إلا لتدريس المهارات المغلقة في الكرة الطائرة.', 2, NULL, 1, 22, 2, '2019-02-13 12:31:56', '2019-02-13 12:31:56'),
(186, 'من خصائص أسلوب المهمة يشارك التلميذ فى تحديد إيقاع درس الكرة الطائرة وعملية التعلم', 2, NULL, 1, 22, 2, '2019-02-13 12:32:45', '2019-02-13 12:32:45'),
(187, 'المرح المبكر أثناء التعلم بالاكتشاف يؤدى إلى الإبداع فى الكرة الطائرة', 2, NULL, 1, 22, 1, '2019-02-13 12:33:31', '2019-02-13 12:33:31'),
(188, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسن من مهارة الإرسال من أعلى.', 2, NULL, 1, 22, 1, '2019-02-13 12:36:17', '2019-02-13 12:36:17'),
(189, 'التعلم التعاوني العمل فيه جماعي والمسئولية مع تقبل المسألة في الكرة الطائرة', 2, NULL, 1, 22, 1, '2019-02-13 12:37:08', '2019-02-13 12:37:08'),
(190, 'من خطوات التدريس فى التعلم التعاونى تحديد الأهداف التعليمية فى الكرة الطائرة.', 2, NULL, 1, 22, 2, '2019-02-13 12:38:10', '2019-02-13 12:38:10'),
(191, 'تحتسب لمسة الصد ضمن اللمسات الثلاث المسموح بها قانوناً.', 2, NULL, 1, 22, 2, '2019-02-13 12:38:56', '2019-02-13 12:38:56'),
(192, 'في حالة تشكيل الاستقبال بثلاث لاعبين يكون على هيئة قوس.', 2, NULL, 1, 22, 1, '2019-02-13 12:39:46', '2019-02-13 12:39:46'),
(194, 'how are you', 2, NULL, 2, 15, 1, '2019-02-15 16:16:53', '2019-02-15 16:16:53'),
(195, 'مهارة الإعداد يقوم بأدائها جميع اللاعبين فى حين أن مهارة التمرير من أعلى يقوم بها لاعب متخصص.', 2, NULL, NULL, 22, 2, '2019-02-20 05:14:16', '2019-02-20 05:14:16'),
(196, 'عند أداء مهارة الإرسال من أعلى مواجه تستقر الكرة على راحة اليد الغير مرسلةباتجاه الذرأع المرسلة.', 2, NULL, NULL, 22, 2, '2019-02-20 05:15:26', '2019-02-20 05:15:26'),
(197, 'الغرض من طريقة العداء أن تساعد الفريق في القيام بحركات الخداع المختلفة', 2, NULL, NULL, 22, 2, '2019-02-20 05:16:25', '2019-02-20 05:16:25'),
(198, 'من مميزات حل المشكلات أثناء تدريس الكرة الطائرة أن جو الدرس تسوده إلاثارة والتشويق.', 2, NULL, NULL, 22, 2, '2019-02-20 05:17:15', '2019-02-20 05:17:15'),
(199, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد.', 2, NULL, 1, 22, 2, '2019-02-20 08:19:00', '2019-02-20 08:19:00'),
(200, 'كلما أقترب اللاعب المستقبل من اللاعب المعد كلماارتفع ذراعه حتى مستوى الرأس.', 2, NULL, 1, 22, 3, '2019-02-20 08:19:49', '2019-02-20 08:19:49'),
(201, 'يعتبر إعطاء نموذج لمهارة الارسال من أسفل هي الخطوة الأولي التى يجب إعطاؤها للطلاب عند تعليم المهارة.', 2, NULL, 1, 22, 1, '2019-02-20 08:20:33', '2019-02-20 08:20:33'),
(202, 'يمكن للاعب المستقبل للارسال أن يستقبل الكرة بواسطة التمرير من أعلى باليدين.', 2, NULL, 1, 22, 2, '2019-02-20 08:21:23', '2019-02-20 08:21:23'),
(203, 'من النواحي الفنية التى يجب مراعاتها عند استقبال الارسال المرجحة الزائدة للذراعين أماماً ولأعلى للعب الكرة.', 2, NULL, 1, 22, 2, '2019-02-20 08:23:04', '2019-02-20 08:23:04'),
(204, 'يمكن استخدام الكرات الطبية مختلفة الأوزان لتنمية القدرة العضلية للذراعين', 2, NULL, 1, 22, 2, '2019-02-20 08:23:55', '2019-02-20 08:23:55'),
(205, 'وجود حوائط وحواجز في فترة التدريب يساعد في امتصاص سرعة الكرة والاقتصاد في الوقت.', 2, NULL, 1, 22, 3, '2019-02-20 08:24:33', '2019-02-20 08:24:33'),
(206, 'من مميزات الطريقة الزوجية فى الهجوم سهولة تنفيذ الطريقة دون تعقيد.', 2, NULL, 1, 22, 2, '2019-02-20 08:25:13', '2019-02-20 08:25:13'),
(207, 'يحق للاعب الحر (الليبرو) الإعداد من المنطقة الأمامية أعلي مستوي الشبكة.', 2, NULL, 1, 22, 3, '2019-02-20 08:25:58', '2019-02-20 08:25:58'),
(208, 'يتم الهجوم بعد الدفاع فى حالة الكرة السهلة من المنافس فقط.', 2, NULL, 1, 22, 3, '2019-02-20 08:26:32', '2019-02-20 08:26:32'),
(209, 'من النواحى الفنية التى يجب مراعاتها فى مهارة الإعداد ملامسة اليدين للكرة وهما مسطحتان والرسغان مثنيتان أماماً.', 2, NULL, 1, 22, 2, '2019-02-20 08:27:18', '2019-02-20 08:27:18'),
(210, 'من عيوب الإرسال من أسفل الأماميالمواجه سهولة الدفاع عنه بسبب بطء سير الكرة نحو ملعب المنافس.', 2, NULL, 1, 22, 1, '2019-02-20 08:27:57', '2019-02-20 08:27:57'),
(211, 'وقفة الاستعداد العميقة هى الأكثر استخداماًوتتناسب مع الاستقبال والتمرير والإعداد .', 2, NULL, 1, 22, 2, '2019-02-20 08:28:39', '2019-02-20 08:28:39'),
(212, 'لايصلح أسلوب حل المشكلات إلا لتدريس المهارات المغلقة في الكرة الطائرة.', 2, NULL, 1, 22, 2, '2019-02-20 08:29:19', '2019-02-20 08:29:19'),
(213, 'من خصائص أسلوب المهمة يشارك التلميذ فى تحديد إيقاع درس الكرة الطائرة وعملية التعلم.', 2, NULL, 1, 22, 2, '2019-02-20 08:30:02', '2019-02-20 08:30:02'),
(214, 'المرح المبكر أثناء التعلم بالاكتشاف يؤدى إلى الإبداع فى الكرة الطائرة.', 2, NULL, 1, 22, 2, '2019-02-20 08:30:37', '2019-02-20 08:30:37'),
(215, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسنمن مهارة الإرسال من أعلى.', 2, NULL, 1, 22, 2, '2019-02-20 08:31:20', '2019-02-20 08:31:20'),
(216, 'التعلم التعاوني العمل فيه جماعي والمسئولية مع تقبل المسألة في الكرة الطائرة.', 2, NULL, 1, 22, 1, '2019-02-20 08:31:53', '2019-02-20 08:31:53'),
(217, 'من خطوات التدريس فى التعلم التعاونى تحديد الأهداف التعليمية فى الكرة الطائرة.', 2, NULL, 1, 22, 3, '2019-02-20 08:32:46', '2019-02-20 08:32:46'),
(218, 'تحتسب لمسة الصد ضمن اللمساتالثلاث المسموح بها قانوناً.', 2, NULL, 1, 22, 2, '2019-02-20 08:33:26', '2019-02-20 08:33:26'),
(219, 'في حالة تشكيل الاستقبال بثلاث لاعبين يكون على هيئة قوس.', 2, NULL, 1, 22, 2, '2019-02-20 08:34:10', '2019-02-20 08:34:10'),
(220, 'مهارة الإعداد يقوم بأدائها جميع اللاعبين فى حين أن مهارة التمرير من أعلى يقوم بها لاعب متخصص.', 2, NULL, 1, 22, 2, '2019-02-20 08:34:51', '2019-02-20 08:34:51'),
(221, 'عند أداء مهارة الإرسال من أعلى مواجه تستقر الكرة على راحة اليد الغير مرسلةباتجاه الذرأع المرسلة.', 2, NULL, 1, 22, 2, '2019-02-20 08:35:28', '2019-02-20 08:35:28'),
(222, 'الغرض من طريقة العداء أن تساعد الفريق في القيام بحركات الخداع المختلفة.', 2, NULL, 1, 22, 3, '2019-02-20 08:36:05', '2019-02-20 08:36:05'),
(223, 'من مميزات حل المشكلات أثناء تدريس الكرة الطائرة أن جو الدرس تسوده إلاثارة والتشويق.', 2, NULL, 1, 22, 2, '2019-02-20 08:36:38', '2019-02-20 08:36:38'),
(224, 'تم إنشاء الاتحاد الدولى ( FIVB) عام 1947م وكان يضم 14 دولة من ضمنها مصر.', 2, NULL, 1, 22, 3, '2019-02-20 08:37:11', '2019-02-20 08:37:11'),
(225, 'الدفاع بيد واحدة من السقوط هو الشكل الوحيد لمثل هذا النوع من الأداء.', 2, NULL, 1, 22, 2, '2019-02-20 08:38:01', '2019-02-20 08:38:01'),
(226, 'يتم لمس الكرة في التمرير من أعلى عن طريق راحة اليد.', 2, NULL, 1, 22, 2, '2019-02-20 08:38:36', '2019-02-20 08:38:36'),
(227, 'الفرنسى بول ليبود أول رئيس للاتحاد الدولى للكرة الطائرة.', 2, NULL, 1, 22, 2, '2019-02-20 08:39:07', '2019-02-20 08:39:07'),
(228, 'مهارة الإعداد تؤدى من الثبات .', 2, NULL, 1, 22, 3, '2019-02-20 08:39:49', '2019-02-20 08:39:49'),
(229, 'يجب فتح كف اليد أثناء الضربه الهجومية وذلك ل', 1, NULL, 1, 22, 3, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(230, 'من مميزات اللاعبين الضاربين فى الطريقة الزوجية للهجوم في الكرة الطائرة', 1, NULL, 1, 22, 2, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(231, 'دخلت الكرة الطائرة الألعاب الأولمبية فى دورة طوكيوعام:', 1, NULL, 1, 22, 2, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(232, 'تؤدى مهارة الإعداد بعد استقبال الكرة من:', 1, NULL, 1, 22, 2, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(233, 'تعتبر مهارة الاستقبال:', 1, NULL, 1, 22, 2, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(234, 'من أنواع الدفاع عن الملعب', 1, NULL, 1, 22, 2, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(235, 'توجد متغيرات خططية موثرة في الأداء التنافسي:', 1, NULL, 1, 22, 1, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(236, 'يمكن استخدام كرات مختلفة الوزن والحجم في تعليم مهارة', 1, NULL, 1, 22, 2, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(237, 'في حالة الصد بثلاثة لاعبين يتم الصدمن مركز.............وهذه الطريقة تستخدمها الفرق المتقدمة', 1, NULL, 1, 22, 2, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(238, 'يمكن استخدام أسلوب حل المشكلات في درس الكرةالطائرة لأنه يعمل على تحسين قدرات التلاميذ:', 1, NULL, 1, 22, 2, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(239, 'من الأخطاء الشائعة في حائط الصد:', 1, NULL, 1, 22, 2, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(240, 'تشكيل الاستقبال بخمس لاعبين على هيئة حرف :', 1, NULL, 1, 22, 3, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(241, 'في حالة الدوران يتجه المعد الذى فى مركز 2 خلفاً لأداء الإرسال ويتجه اللاعب في مركز 1إلى', 1, NULL, 1, 22, 3, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(242, 'أى من الأساليب التى لا تعتمد علي قدرات التلاميذ في درس الكرة الطائرة فيما يتعلق بحدوث التفاهم والتبادل والتوافق السلوكي :', 1, NULL, 1, 22, 2, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(243, 'الطالب  فى التعلم الفردي فى الكرة الطائرة  يتقدم بمعدل:', 1, NULL, 1, 22, 1, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(244, 'الطلاب يتمتعون بحركة ديناميكية عاليةأثناء ممارسة الكرة الطائرة ويلتمس فيهم المعلم روح المنافسة والعمل التشاركي', 1, NULL, 1, 22, 2, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(245, 'من مهارات الكرة الطائرة على الترتيب حسب تسلسل الأداء المهارى', 1, NULL, 1, 22, 1, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(246, '............................الفريق الفائز بالمباراة هو الفريق الذى يحصل على ...................أشواط من إجمالى', 1, NULL, 1, 22, 2, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(247, NULL, 3, NULL, 1, 22, 1, '2019-02-20 10:28:32', '2019-02-20 10:28:32'),
(248, NULL, 1, NULL, 2, 22, 1, '2019-02-20 10:28:46', '2019-02-20 10:28:46'),
(249, '..........تضرب الكرة في الإرسال من أعلي مواجة باليد وهى.................أو', 3, NULL, 2, 22, 2, '2019-02-20 10:32:03', '2019-02-20 10:32:03'),
(250, '...........تضرب الكرة في الإرسال من أعلي مواجة باليد وهى.................أو', 3, NULL, 2, 22, 2, '2019-02-20 10:34:09', '2019-02-20 10:34:09'),
(251, 'من المهارات الوسيطة في الكرة الطائرة', 1, NULL, 1, 22, 2, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(252, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:38:15', '2019-02-20 10:38:15'),
(253, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:38:34', '2019-02-20 10:38:34'),
(254, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:38:49', '2019-02-20 10:38:49'),
(255, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:38:50', '2019-02-20 10:38:50'),
(256, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:38:58', '2019-02-20 10:38:58'),
(257, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:14', '2019-02-20 10:39:14'),
(258, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:29', '2019-02-20 10:39:29'),
(259, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(260, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(261, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(262, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(263, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(264, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(265, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(266, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(267, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(268, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(269, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(270, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(271, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(272, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(273, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(274, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(275, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(276, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(277, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(278, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(279, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(280, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(281, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(282, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(283, 'إذالم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(284, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:43:36', '2019-02-20 10:43:36'),
(285, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:43:38', '2019-02-20 10:43:38'),
(286, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:43:41', '2019-02-20 10:43:41'),
(287, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:43:42', '2019-02-20 10:43:42'),
(288, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:43:58', '2019-02-20 10:43:58'),
(289, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:06', '2019-02-20 10:44:06'),
(290, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:21', '2019-02-20 10:44:21'),
(291, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(292, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(293, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(294, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(295, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(296, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(297, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:29', '2019-02-20 10:44:29'),
(298, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:42', '2019-02-20 10:44:42'),
(299, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(300, 'يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ:', 1, NULL, 1, 22, 2, '2019-02-20 10:44:52', '2019-02-20 10:44:52'),
(301, 'تعتبر أصعب مهارة من الناحية الخططية وأسهل من الناحية الفنية', 1, NULL, 1, 22, 3, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(302, 'يتم استخدام الحائط المستوى فى التدريب على', 1, NULL, 1, 22, 2, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(303, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 2, '2019-02-25 04:34:20', '2019-02-25 04:34:20'),
(304, 'كلما أقترب اللاعب المستقبل من اللاعب المعد كلماارتفع ذراعه حتى مستوى الرأس', 2, NULL, 1, 22, 2, '2019-02-25 04:35:06', '2019-02-25 04:35:06'),
(305, 'يعتبر إعطاء نموذج لمهارة الارسال من أسفل هي الخطوة الأولي التى يجب إعطاؤها للطلاب عند تعليم المهارة', 2, NULL, 1, 22, 1, '2019-02-25 04:35:57', '2019-02-25 04:35:57'),
(306, 'يمكن للاعب المستقبل للارسال أن يستقبل الكرة بواسطة التمرير من أعلى باليدين', 2, NULL, 1, 22, 2, '2019-02-25 04:36:38', '2019-02-25 04:36:38'),
(307, 'من النواحي الفنية التى يجب مراعاتها عند استقبال الارسال المرجحة الزائدة للذراعين أماماً ولأعلى للعب الكرة', 2, NULL, 1, 22, 2, '2019-02-25 04:37:19', '2019-02-25 04:37:19'),
(308, 'يمكن استخدام الكرات الطبية مختلفة الأوزان لتنمية القدرة العضلية للذراعين', 2, NULL, 1, 22, 2, '2019-02-25 04:38:01', '2019-02-25 04:38:01'),
(309, 'وجود حوائط وحواجز في فترة التدريب يساعد في امتصاص سرعة الكرة والاقتصاد في الوقت', 2, NULL, 1, 22, 2, '2019-02-25 04:38:42', '2019-02-25 04:38:42'),
(310, 'من مميزات الطريقة الزوجية فى الهجوم سهولة تنفيذ الطريقة دون تعقيد', 2, NULL, 1, 22, 3, '2019-02-25 04:39:19', '2019-02-25 04:39:19'),
(311, 'يحق للاعب الحر (الليبرو) الإعداد من المنطقة الأمامية أعلي مستوي الشبكة', 2, NULL, 1, 22, 2, '2019-02-25 04:40:02', '2019-02-25 04:40:02'),
(312, 'يتم الهجوم بعد الدفاع فى حالة الكرة السهلة من المنافس فقط', 2, NULL, 1, 22, 2, '2019-02-25 04:40:48', '2019-02-25 04:40:48'),
(313, 'من النواحى الفنية التى يجب مراعاتها فى مهارة الإعداد ملامسة اليدين للكرة وهما مسطحتان والرسغان مثنيتان أماماً', 2, NULL, 1, 22, 2, '2019-02-25 04:41:30', '2019-02-25 04:41:30'),
(314, 'من عيوب الإرسال من أسفل الأمامي المواجه سهولة الدفاع عنه بسبب بطء سير الكرة نحو ملعب المنافس', 2, NULL, 1, 22, 2, '2019-02-25 04:42:13', '2019-02-25 04:42:13'),
(315, 'وقفة الاستعداد العميقة هى الأكثر استخداماً وتتناسب مع الاستقبال والتمرير والإعداد', 2, NULL, 1, 22, 2, '2019-02-25 04:42:53', '2019-02-25 04:42:53'),
(316, 'لايصلح أسلوب حل المشكلات إلا لتدريس المهارات المغلقة في الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 04:43:52', '2019-02-25 04:43:52'),
(317, 'من خصائص أسلوب المهمة يشارك التلميذ فى تحديد إيقاع درس الكرة الطائرة وعملية التعلم', 2, NULL, 1, 22, 2, '2019-02-25 04:45:14', '2019-02-25 04:45:14'),
(318, 'المرح المبكر أثناء التعلم بالاكتشاف يؤدى إلى الإبداع فى الكرة الطائرة', 2, NULL, 1, 22, 1, '2019-02-25 04:45:55', '2019-02-25 04:45:55'),
(319, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسن من مهارة الإرسال من أعلى', 2, NULL, 1, 22, 2, '2019-02-25 04:46:45', '2019-02-25 04:46:45'),
(320, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسن من مهارة الإرسال من أعلى', 2, NULL, 1, 22, 2, '2019-02-25 04:46:45', '2019-02-25 04:46:45'),
(321, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسن من مهارة الإرسال من أعلى', 2, NULL, 1, 22, 2, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(322, 'التعلم التعاوني العمل فيه جماعي والمسئولية مع تقبل المسألة في الكرة الطائرة', 2, NULL, 1, 22, 1, '2019-02-25 04:47:33', '2019-02-25 04:47:33'),
(323, 'من خطوات التدريس فى التعلم التعاونى تحديد الأهداف التعليمية فى الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 04:48:04', '2019-02-25 04:48:04'),
(324, 'تحتسب لمسة الصد ضمن اللمسات الثلاث المسموح بها قانوناً', 2, NULL, 1, 22, 3, '2019-02-25 04:48:39', '2019-02-25 04:48:39'),
(325, 'في حالة تشكيل الاستقبال بثلاث لاعبين يكون على هيئة قوس', 2, NULL, 1, 22, 2, '2019-02-25 04:49:27', '2019-02-25 04:49:27'),
(326, 'مهارة الإعداد يقوم بأدائها جميع اللاعبين فى حين أن مهارة التمرير من أعلى يقوم بها لاعب متخص', 2, NULL, 1, 22, 2, '2019-02-25 04:50:05', '2019-02-25 04:50:05'),
(327, 'عند أداء مهارة الإرسال من أعلى مواجه تستقر الكرة على راحة اليد الغير مرسلة باتجاه الذرأع المرسلة', 2, NULL, 1, 22, 2, '2019-02-25 04:50:39', '2019-02-25 04:50:39'),
(328, 'الغرض من طريقة العداء أن تساعد الفريق في القيام بحركات الخداع المختلفة', 2, NULL, 1, 22, 2, '2019-02-25 04:51:16', '2019-02-25 04:51:16'),
(329, 'من مميزات حل المشكلات  أثناء تدريس الكرة الطائرة أن جو الدرس تسوده إلاثارة والتشويق', 2, NULL, 1, 22, 1, '2019-02-25 04:51:58', '2019-02-25 04:51:58'),
(330, 'عام1947م وكان يضم 14 دولة من ضمنها مصر    (FIVB)تم إنشاء الاتحاد الدولى', 2, NULL, 1, 22, 2, '2019-02-25 05:04:30', '2019-02-28 09:43:17'),
(331, 'الدفاع بيد واحدة من السقوط هو الشكل الوحيد لمثل هذا النوع من الأداء', 2, NULL, 1, 22, 3, '2019-02-25 05:05:06', '2019-02-25 05:05:06'),
(332, 'يتم لمس الكرة في التمرير من أعلى عن طريق راحة اليد', 2, NULL, 1, 22, 2, '2019-02-25 05:05:51', '2019-02-25 05:05:51'),
(333, 'الفرنسى بول ليبود أول رئيس للاتحاد الدولى للكرة الطائرة', 2, NULL, NULL, 22, 2, '2019-02-25 05:06:32', '2019-02-25 05:06:32'),
(334, 'مهارة الإعداد تؤدى من الثبات', 2, NULL, 1, 22, 2, '2019-02-25 05:07:01', '2019-02-25 05:07:01'),
(335, ':يجب فتح كف اليد أثناء الضربه الهجومية وذلك ل', 1, NULL, 1, 22, 2, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(336, ':من مميزات اللاعبين الضاربين فى الطريقة الزوجية للهجوم في الكرة الطائرة', 1, NULL, 1, 22, 2, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(337, ': دخلت الكرة الطائرة الألعاب الأولمبية فى دورة طوكيوعام', 1, NULL, 1, 22, 2, '2019-02-25 05:23:36', '2019-02-25 05:23:36'),
(338, ':تؤدى مهارة الإعداد بعد استقبال الكرة من', 1, NULL, 1, 22, 2, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(339, ': تعتبر مهارة الاستقبال', 1, NULL, 1, 22, 1, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(340, ': من أنواع الدفاع عن الملعب', 1, NULL, 1, 22, 2, '2019-02-25 05:29:02', '2019-02-25 05:29:02'),
(341, ': توجد متغيرات خططية موثرة في الأداء التنافسي', 1, NULL, 1, 22, 3, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(342, ':يمكن استخدام كرات مختلفة الوزن والحجم في تعليم مهارة', 1, NULL, 1, 22, 1, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(343, ': في حالة الصد بثلاثة لاعبين يتم الصدمن مركز.............وهذه الطريقة تستخدمها الفرق المتقدمة', 1, NULL, 1, 22, 3, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(344, ':يمكن استخدام أسلوب حل المشكلات في درس الكرة الطائرة لأنه يعمل على تحسين قدرات التلاميذ', 1, NULL, 1, 22, 1, '2019-02-25 05:36:02', '2019-02-25 05:36:02'),
(345, ':من الأخطاء الشائعة في حائط الصد', 1, NULL, 1, 22, 1, '2019-02-25 05:37:49', '2019-02-25 05:37:49'),
(346, 'تشكيل الاستقبال بخمس لاعبين على هيئة حرف', 1, NULL, 1, 22, 2, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(347, ':في حالة الدوران يتجه المعد الذى فى مركز 2 خلفاً لأداء الإرسال ويتجه اللاعب في مركز 1إلى', 1, NULL, 1, 22, 3, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(348, ':أى من الأساليب التى لا تعتمد علي قدرات التلاميذ في درس الكرة الطائرة فيما يتعلق بحدوث التفاهم والتبادل والتوافق السلوكي', 1, NULL, 1, 22, 3, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(349, ':الطالب  فى التعلم الفردي فى الكرة الطائرة  يتقدم بمعدل', 1, NULL, 1, 22, 2, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(350, ':الطلاب يتمتعون بحركة ديناميكية عالية أثناء ممارسة الكرة الطائرة ويلتمس فيهم المعلم روح المنافسة والعمل التشاركي', 1, NULL, 1, 22, 2, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(351, ':من مهارات الكرة الطائرة على الترتيب حسب تسلسل الأداء المهارى', 1, NULL, 1, 22, 2, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(352, '.........الفريق الفائز بالمباراة هو الفريق الذى يحصل على ......أشواط من إجمالى', 1, NULL, 1, 22, 2, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(353, ':من المهارات الوسيطة في الكرة الطائرة', 1, NULL, 1, 22, 3, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(354, ':إذا لم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(355, ':يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ', 1, NULL, 1, 22, 2, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(356, ':تعتبر أصعب مهارة من الناحية الخططية وأسهل من الناحية الفنية', 1, NULL, 1, 22, 2, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(357, ':يتم استخدام الحائط المستوى فى التدريب على', 1, NULL, 1, 22, 2, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(358, ':من الأجهزة التي تساعد علي تعلم مهارة الضرب الساحق', 1, NULL, 1, 22, 1, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(359, ':يتم أداء نموذج لمهارة الدفاع عن الملعب  عن طريق', 1, NULL, 1, 22, 1, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(360, ':يتم تنمية الإحساس بالكرة في التمريرمن أعلى عن طريق', 1, NULL, 1, 22, 2, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(361, ':يبلغ عدد أعضاء فريق الكرة الطائرة في الملعب', 1, NULL, 1, 22, 2, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(362, ':من أهم الأدوات الخاصة بالحكم الأول فقط', 1, NULL, 1, 22, 3, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(363, '...........تضرب الكرة في الإرسال من أعلي مواجه باليد وهي...............أو', 3, NULL, 1, 22, 1, '2019-02-25 06:23:38', '2019-02-25 06:23:38'),
(364, '..............تضرب الكرة في الإرسال من أعلي مواجه باليد وهي...............أو', 3, NULL, 1, 22, 2, '2019-02-25 06:25:18', '2019-02-25 06:25:18'),
(365, '.يسمح للفريق الواحد بإجراء .................تبديلات في الشوط الواحد', 3, NULL, 1, 22, 2, '2019-02-25 06:26:30', '2019-02-25 06:26:30'),
(366, '..............................يعتبر قاذف الكرات من الأدوات التي تستخدم في الارتقاء بعملية التعلم في مهارة الأعداد بينما تعتبر الكرة الطبية من الأدوات التي تستحدم في تنمية', 3, NULL, 1, 22, 2, '2019-02-25 06:27:43', '2019-02-25 06:27:43'),
(367, '..............................ظهرت الكرة الطائرة عام.........................على يد', 3, NULL, 2, 22, 2, '2019-02-25 06:29:40', '2019-02-25 06:29:40'),
(368, '.يمكن استخدام جهاز دقة الضرب لتعليم مهارة .............من حيث خطوات الاقتراب', 3, NULL, 1, 22, 3, '2019-02-25 06:36:57', '2019-02-25 06:36:57'),
(369, '.يلعب الإرسال قبل مرور ................ثواني', 3, NULL, 1, 22, 2, '2019-02-25 06:37:46', '2019-02-25 06:37:46'),
(370, '...................,..............................أنواع حائط الصد من حيث النوع', 3, NULL, 2, 22, 3, '2019-02-25 06:39:42', '2019-02-25 06:39:42'),
(371, '.................................نجد أن لعبة التمريرات السريعة تلعب دوراً هاماً فى تنمية مهارة', 3, NULL, 1, 22, 2, '2019-02-25 06:41:18', '2019-02-25 06:41:18'),
(372, '..................................من القرارات الأساسية فى تنفيذ درس الكرة الطائرة من خلال التعلم الذاتي يعتمد على', 3, NULL, 1, 22, 3, '2019-02-25 06:42:33', '2019-02-25 06:42:33'),
(373, '...............................يقتصر تخطيط درس الكرة الطائرة على المعلم فقط فى أسل', 3, NULL, 1, 22, 2, '2019-02-25 07:08:56', '2019-02-25 07:08:56'),
(374, '................................الطالب الذي  يقوم بأداء المهمة فى أداء مهارة الإرسال بالمعاونة مع زميله الساند يطلق عليه', 3, NULL, 1, 22, 2, '2019-02-25 07:10:49', '2019-02-25 07:10:49'),
(375, '..........................الحد الأدنى لعدد التلاميذ أثناء تعلم أى مهارة في الكرة الطائرة في التعلم التعاوني', 3, NULL, 1, 22, 1, '2019-02-25 07:11:33', '2019-02-25 07:11:33'),
(376, '..............................يتم اداء حركة التمرير من أسفل عن طريق مد................... حتي يصل اللاعب لوضع', 3, NULL, 2, 22, 2, '2019-02-25 07:12:44', '2019-02-25 07:12:44'),
(377, '......................تشكيل اللاعبين في الكرة الطائرة فى حالة الاستقبال بأربع لاعبين على هي', 3, NULL, 1, 22, 2, '2019-02-25 07:13:35', '2019-02-25 07:13:35'),
(378, 'في الخط الأمامي فإن مركز 3 لابد أن يكون على يمينه مركز ............. وشماله مركز 4 أما بالنسبة للخط الخلفي فنجد أن مركز 6 على يمينه مركز ........... وعلى شماله مركز5', 3, NULL, 2, 22, 1, '2019-02-25 07:14:55', '2019-02-25 07:14:55'),
(379, '........................................تضرب الكرة فى مهارة الإرسال من أسفل المواجه وهى تقريباً فى مستوى', 3, NULL, 1, 22, 3, '2019-02-25 07:16:24', '2019-02-25 07:16:24'),
(380, 'يبلغ ارتفاع الشبكة للرجال ..............متر وللسيدات........متر', 3, NULL, 2, 22, 2, '2019-02-25 07:17:35', '2019-02-25 07:17:35'),
(381, '.يعتبر...............بمثابة الأساس والقاعدة الأساسية فى فريق الكرة الطائرة', 3, NULL, 1, 22, 1, '2019-02-25 07:18:19', '2019-02-25 07:18:19'),
(382, 'يبلغ طول الشبكة ..............متر وعرضها ............. متر', 3, NULL, 2, 22, 2, '2019-02-25 07:20:19', '2019-02-25 07:20:19'),
(383, '........................لعبة الدقة في الإرسال نجد فيه كل لاعب يلعب 10 إرسالات على علامة مرسومة وهى تعمل على تحسين مهارة', 3, NULL, 1, 22, 2, '2019-02-25 07:29:33', '2019-02-25 07:29:33'),
(384, 'أي من الأساليب التعليمية................يتم تقسيم الفصل إلي مجموعات في تعلم مهارة الكرة الطائرة', 3, NULL, 1, 22, 2, '2019-02-25 07:35:38', '2019-02-25 07:35:38'),
(385, '.................لعبة رمى الكرة  عند بدء اللعب يأخذ أحد لاعبى الفريق الكرة ويقوم برميها وهى من الألعاب التى حسنت من مهارة', 3, NULL, 1, 22, 2, '2019-02-25 07:36:40', '2019-02-25 07:36:40'),
(386, 'يقوم الحكم الأول باطلاق صافرته في حالة لمس اللاعب المرسَل لخط النهاية ويتم اعادة أداء الارسال من جديد', 2, NULL, 1, 22, 2, '2019-02-25 07:46:56', '2019-02-25 07:46:56'),
(387, 'كلما أقترب اللاعب المستقبل من اللاعب المعد كلماارتفع ذراعه حتى مستوى الرأس', 2, NULL, 1, 22, 2, '2019-02-25 07:47:23', '2019-02-25 07:47:23'),
(388, 'يعتبر إعطاء نموذج لمهارة الارسال من أسفل هي الخطوة الأولي التى يجب إعطاؤها للطلاب عند تعليم المهارة', 2, NULL, 1, 22, 2, '2019-02-25 07:47:56', '2019-02-25 07:47:56'),
(389, 'يمكن للاعب المستقبل للارسال أن يستقبل الكرة بواسطة التمرير من أعلى باليدين', 2, NULL, 1, 22, 2, '2019-02-25 07:48:30', '2019-02-25 07:48:30'),
(390, 'من النواحي الفنية التى يجب مراعاتها عند استقبال الارسال المرجحة الزائدة للذراعين أماماً ولأعلى للعب الكرة', 2, NULL, 1, 22, 2, '2019-02-25 07:49:05', '2019-02-25 07:49:05'),
(391, 'يمكن استخدام الكرات الطبية مختلفة الأوزان لتنمية القدرة العضلية للذراعين', 2, NULL, 1, 22, 2, '2019-02-25 07:49:34', '2019-02-25 07:49:34'),
(392, 'وجود حوائط وحواجز في فترة التدريب يساعد في امتصاص سرعة الكرة والاقتصاد في الوقت', 2, NULL, 1, 22, 2, '2019-02-25 07:52:05', '2019-02-25 07:52:05'),
(393, 'من مميزات الطريقة الزوجية فى الهجوم سهولة تنفيذ الطريقة دون تعقيد', 2, NULL, 1, 22, 2, '2019-02-25 07:52:43', '2019-02-25 07:52:43'),
(394, 'يحق للاعب الحر (الليبرو) الإعداد من المنطقة الأمامية أعلي مستوي الشبكة', 2, NULL, 1, 22, 2, '2019-02-25 07:53:16', '2019-02-25 07:53:16'),
(395, 'يتم الهجوم بعد الدفاع فى حالة الكرة السهلة من المنافس فقط', 2, NULL, 1, 22, 2, '2019-02-25 07:53:46', '2019-02-25 07:53:46'),
(396, 'من النواحى الفنية التى يجب مراعاتها فى مهارة الإعداد ملامسة اليدين للكرة وهما مسطحتان والرسغان مثنيتان أماماً', 2, NULL, 1, 22, 2, '2019-02-25 07:54:17', '2019-02-25 07:54:17'),
(397, 'من عيوب الإرسال من أسفل الأمامي المواجه سهولة الدفاع عنه بسبب بطء سير الكرة نحو ملعب المنافس', 2, NULL, 1, 22, 2, '2019-02-25 07:54:50', '2019-02-25 07:54:50'),
(398, 'وقفة الاستعداد العميقة هى الأكثر استخداماً وتتناسب مع الاستقبال والتمرير والإعداد', 2, NULL, 1, 22, 3, '2019-02-25 07:55:25', '2019-02-25 07:55:25'),
(399, 'لايصلح أسلوب حل المشكلات إلا لتدريس المهارات المغلقة في الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 07:55:56', '2019-02-25 07:55:56'),
(400, 'من خصائص أسلوب المهمة يشارك التلميذ فى تحديد إيقاع درس الكرة الطائرة وعملية التعلم', 2, NULL, 1, 22, 2, '2019-02-25 07:56:27', '2019-02-25 07:56:27'),
(401, 'المرح المبكر أثناء التعلم بالاكتشاف يؤدى إلى الإبداع فى الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 07:56:57', '2019-02-25 07:56:57'),
(402, 'لعبة إرسال السلة يقف اللاعبين قاطرة تجاه قائم السلة ويقوم كل لاعب بعمل إرسال على لوحة كرة السلة وهي من الألعاب التى تحسن من مهارة الإرسال من أعلى', 2, NULL, 1, 22, 2, '2019-02-25 07:59:09', '2019-02-25 07:59:09'),
(403, 'التعلم التعاوني العمل فيه جماعي والمسئولية مع تقبل المسألة في الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 07:59:37', '2019-02-25 07:59:37'),
(404, 'من خطوات التدريس فى التعلم التعاونى تحديد الأهداف التعليمية فى الكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 08:00:07', '2019-02-25 08:00:07'),
(405, 'تحتسب لمسة الصد ضمن اللمسات الثلاث المسموح بها قانوناً', 2, NULL, 1, 22, 3, '2019-02-25 08:00:37', '2019-02-25 08:00:37'),
(406, 'في حالة تشكيل الاستقبال بثلاث لاعبين يكون على هيئة قوس', 2, NULL, 1, 22, 2, '2019-02-25 08:01:12', '2019-02-25 08:01:12'),
(407, 'مهارة الإعداد يقوم بأدائها جميع اللاعبين فى حين أن مهارة التمرير من أعلى يقوم بها لاعب متخصص', 2, NULL, 1, 22, 2, '2019-02-25 08:02:58', '2019-02-25 08:02:58'),
(408, 'عند أداء مهارة الإرسال من أعلى مواجه تستقر الكرة على راحة اليد الغير مرسلة باتجاه الذرأع المرسلة', 2, NULL, 1, 22, 2, '2019-02-25 08:03:31', '2019-02-25 08:03:31'),
(409, 'الغرض من طريقة العداء أن تساعد الفريق في القيام بحركات الخداع المختلفة', 2, NULL, 1, 22, 2, '2019-02-25 08:03:58', '2019-02-25 08:03:58'),
(410, 'من مميزات حل المشكلات  أثناء تدريس الكرة الطائرة أن جو الدرس تسوده إلاثارة والتشويق', 2, NULL, 1, 22, 2, '2019-02-25 08:04:25', '2019-02-25 08:04:25'),
(411, 'عام 1947م وكان يضم 14 دولة من ضمنها مصر(FIVB)تم إنشاء الاتحاد الدولى', 2, NULL, 1, 22, 2, '2019-02-25 08:09:07', '2019-02-25 08:09:07'),
(412, 'الدفاع بيد واحدة من السقوط هو الشكل الوحيد لمثل هذا النوع من الأداء', 2, NULL, 1, 22, 3, '2019-02-25 08:09:44', '2019-02-25 08:09:44'),
(413, 'يتم لمس الكرة في التمرير من أعلى عن طريق راحة اليد', 2, NULL, 1, 22, 2, '2019-02-25 08:10:13', '2019-02-25 08:10:13'),
(414, 'الفرنسى بول ليبود أول رئيس للاتحاد الدولى للكرة الطائرة', 2, NULL, 1, 22, 2, '2019-02-25 08:10:38', '2019-02-25 08:10:38'),
(415, 'مهارة الإعداد تؤدى من الثبات', 2, NULL, 1, 22, 2, '2019-02-25 08:12:23', '2019-02-25 08:12:23'),
(416, ':يجب فتح كف اليد أثناء الضربه الهجومية وذلك ل', 1, NULL, 1, 22, 2, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(417, ':من مميزات اللاعبين الضاربين فى الطريقة الزوجية للهجوم في الكرة الطائرة', 1, NULL, 1, 22, 2, '2019-02-25 08:21:25', '2019-02-25 08:21:25'),
(418, ':دخلت الكرة الطائرة الألعاب الأولمبية فى دورة طوكيوعام', 1, NULL, 1, 22, 2, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(419, ':تؤدى مهارة الإعداد بعد استقبال الكرة من', 1, NULL, 1, 22, 2, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(420, ':تعتبر مهارة الاستقبال', 1, NULL, 1, 22, 2, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(421, ':من أنواع الدفاع عن الملعب', 1, NULL, 1, 22, 3, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(422, ':توجد متغيرات خططية موثرة في الأداء التنافسي', 1, NULL, 1, 22, 2, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(423, ':يمكن استخدام كرات مختلفة الوزن والحجم في تعليم مهارة', 1, NULL, 1, 22, 2, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(424, '.في حالة الصد بثلاثة لاعبين يتم الصدمن مركز.............وهذه الطريقة تستخدمها الفرق المتقدمة', 1, NULL, 1, 22, 3, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(425, ':يمكن استخدام أسلوب حل المشكلات في درس الكرة الطائرة لأنه يعمل على تحسين قدرات التلاميذ', 1, NULL, 1, 22, 2, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(426, ':من الأخطاء الشائعة في حائط الصد', 1, NULL, 1, 22, 2, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(427, ':تشكيل الاستقبال بخمس لاعبين على هيئة حرف', 1, NULL, 1, 22, 2, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(428, ':في حالة الدوران يتجه المعد الذى فى مركز 2 خلفاً لأداء الإرسال ويتجه اللاعب في مركز 1إلى', 1, NULL, 1, 22, 3, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(429, ':أى من الأساليب التى لا تعتمد علي قدرات التلاميذ في درس الكرة الطائرة فيما يتعلق بحدوث التفاهم والتبادل والتوافق السلوكي', 1, NULL, 1, 22, 2, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(430, 'الطالب  فى التعلم الفردي فى الكرة الطائرة  يتقدم بمعدل', 1, NULL, 1, 22, 2, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(431, ':الطلاب يتمتعون بحركة ديناميكية عالية أثناء ممارسة الكرة الطائرة ويلتمس فيهم المعلم روح المنافسة والعمل التشاركي', 1, NULL, 1, 22, 2, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(432, ':من مهارات الكرة الطائرة على الترتيب حسب تسلسل الأداء المهارى', 1, NULL, 1, 22, 2, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(433, '........الفريق الفائز بالمباراة هو الفريق الذى يحصل على ......أشواط من إجمالى', 1, NULL, 1, 22, 2, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(434, ':من المهارات الوسيطة في الكرة الطائرة', 1, NULL, 1, 22, 2, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(435, ':إذا لم تفرد الركبتان فى المرحلة التمهيدية لمهارة الإعداد الأمامى فإنه من المتوقع أن', 1, NULL, 1, 22, 2, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(436, ':يؤدي الهبوط فى مهارة الضرب الساحق بمرونة بـ', 1, NULL, 1, 22, 2, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(437, ':تعتبر أصعب مهارة من الناحية الخططية وأسهل من الناحية الفنية', 1, NULL, 1, 22, 1, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(438, ':من الأجهزة التي تساعد علي تعلم مهارة الضرب الساحق', 1, NULL, 1, 22, 1, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(439, ':يتم أداء نموذج لمهارة الدفاع عن الملعب  عن طريق', 1, NULL, 1, 22, 2, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(440, ':يتم تنمية الإحساس بالكرة في التمريرمن أعلى عن طريق', 1, NULL, 1, 22, 2, '2019-02-25 09:07:02', '2019-02-25 09:07:02'),
(441, ':يبلغ عدد أعضاء فريق الكرة الطائرة في الملعب', 1, NULL, 1, 22, 2, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(442, ':من أهم الأدوات الخاصة بالحكم الأول فقط', 1, NULL, 1, 22, 2, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(443, ':يتم استخدام الحائط المستوى فى التدريب على', 1, NULL, 1, 22, 2, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(444, '....................تضرب الكرة في الإرسال من أعلي مواجه باليد وهي...............أو', 3, NULL, 1, 22, 2, '2019-02-25 09:16:30', '2019-02-25 09:16:30'),
(445, 'يسمح للفريق الواحد بإجراء .................تبديلات في الشوط الواحد.', 3, NULL, 1, 22, 2, '2019-02-25 09:17:02', '2019-02-25 09:17:02'),
(446, '..............................يعتبر قاذف الكرات من الأدوات التي تستخدم في الارتقاء بعملية التعلم في مهارة الأعداد بينما تعتبر الكرة الطبية من الأدوات التي تستحدم في تنمية', 3, NULL, 1, 22, 2, '2019-02-25 09:18:26', '2019-02-25 09:18:26'),
(447, '...............ظهرت الكرة الطائرة عام .......... على يد', 3, NULL, 2, 22, 2, '2019-02-25 09:19:53', '2019-02-25 09:19:53'),
(448, 'يمكن استخدام جهاز دقة الضرب لتعليم مهارة .............من حيث خطوات الاقتراب', 3, NULL, 1, 22, 2, '2019-02-25 09:20:37', '2019-02-25 09:20:37'),
(449, 'يلعب الإرسال قبل مرور ................ثواني', 3, NULL, 1, 22, 2, '2019-02-25 09:21:18', '2019-02-25 09:21:18'),
(450, '................,...........................أنواع حائط الصد من حيث النوع', 3, NULL, 2, 22, 3, '2019-02-25 09:22:43', '2019-02-25 09:22:43'),
(451, '.................نجد أن لعبة التمريرات السريعة تلعب دوراً هاماً فى تنمية مهارة', 3, NULL, 1, 22, 2, '2019-02-25 09:23:57', '2019-02-25 09:23:57'),
(452, '...................من القرارات الأساسية فى تنفيذ درس الكرة الطائرة من خلال التعلم الذاتي يعتمد على', 3, NULL, 1, 22, 2, '2019-02-25 09:24:44', '2019-02-25 09:24:44'),
(453, '.....................يقتصر تخطيط درس الكرة الطائرة على المعلم فقط فى أسلوب', 3, NULL, 1, 22, 2, '2019-02-25 09:25:36', '2019-02-25 09:25:36'),
(454, '...........................الطالب الذي  يقوم بأداء المهمة فى أداء مهارة الإرسال بالمعاونة مع زميله الساند يطلق عليه', 3, NULL, 1, 22, 2, '2019-02-25 09:26:42', '2019-02-25 09:26:42'),
(455, '.................الطالب الذي  يقوم بأداء المهمة فى أداء مهارة الإرسال بالمعاونة مع زميله الساند يطلق عليه', 3, NULL, 1, 22, 2, '2019-02-25 09:28:23', '2019-02-25 09:28:23'),
(456, '........................الحد الأدنى لعدد التلاميذ أثناء تعلم أى مهارة في الكرة الطائرة في التعلم التعاوني', 3, NULL, 1, 22, 1, '2019-02-25 09:29:05', '2019-02-25 09:29:05'),
(457, '..................يتم اداء حركة التمرير من أسفل عن طريق مد................... حتي يصل اللاعب لوضع', 3, NULL, 2, 22, 2, '2019-02-25 09:30:06', '2019-02-25 09:30:06'),
(458, '...........تشكيل اللاعبين في الكرة الطائرة فى حالة الاستقبال بأربع لاعبين على هيئة', 3, NULL, 1, 22, 2, '2019-02-25 09:30:47', '2019-02-25 09:30:47'),
(459, 'في الخط الأمامي فإن مركز 3 لابد أن يكون على يمينه مركز ............. وشماله مركز 4 أما بالنسبة للخط الخلفي فنجد أن مركز 6 على يمينه مركز ........... وعلى شماله مركز5', 3, NULL, 2, 22, 2, '2019-02-25 09:31:29', '2019-02-25 09:31:29'),
(460, '................تضرب الكرة فى مهارة الإرسال من أسفل المواجه وهى تقريباً فى مستوى', 3, NULL, 1, 22, 2, '2019-02-25 09:32:05', '2019-02-25 09:32:05'),
(461, 'يبلغ ارتفاع الشبكة للرجال ..............متر وللسيدات........متر', 3, NULL, 2, 22, 2, '2019-02-25 09:32:38', '2019-02-25 09:32:38'),
(462, 'يعتبر...............بمثابة الأساس والقاعدة الأساسية فى فريق الكرة الطائرة.', 3, NULL, 1, 22, 2, '2019-02-25 09:33:06', '2019-02-25 09:33:06'),
(463, 'يبلغ طول الشبكة ..............متر وعرضها ............. متر', 3, NULL, 2, 22, 2, '2019-02-25 09:33:41', '2019-02-25 09:33:41'),
(464, '.................لعبة الدقة في الإرسال نجد فيه كل لاعب يلعب 10 إرسالات على علامة مرسومة وهى تعمل على تحسين مهارة', 3, NULL, 1, 22, 1, '2019-02-25 09:34:23', '2019-02-25 09:34:23'),
(465, 'أي من الأساليب التعليمية................يتم تقسيم الفصل إلي مجموعات في تعلم مهارة الكرة الطائرة', 3, NULL, 1, 22, 2, '2019-02-25 09:35:03', '2019-02-25 09:35:03'),
(466, '.................لعبة رمى الكرة  عند بدء اللعب يأخذ أحد لاعبى الفريق الكرة ويقوم برميها وهى من الألعاب التى حسنت من مهارة', 3, NULL, 1, 22, 1, '2019-02-25 09:35:38', '2019-02-25 09:35:38'),
(467, 'What is the output of this code segment:\r\nint i = 15;\r\n	for (int a = 0; a < i; a++)\r\n	{\r\n		cout << a << \"   \";\r\n		a++;\r\n	}', 1, NULL, 2, 24, 1, '2019-03-14 14:42:21', '2019-03-14 14:42:21'),
(468, 'Write a program in C++ to find the Greatest Common Divisor (GCD) of two numbers. GCD means a greatest number which divides both numbers. For example: if the two numbers are 18 and 24, the GCD is 6. Your program should read two integers from the user and output the GCD of these numbers.', 4, NULL, 4, 24, 3, '2019-03-14 14:57:54', '2019-03-15 10:05:25'),
(469, 'int n = 0;\r\nfor(int m = 0; m < 10; m++){\r\n    n += m++;\r\n}\r\ncout << n << endl;', 1, NULL, 2, 24, 2, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(470, 'int n = 5, a = -1, b = 3;\r\n	switch (n % 4) {\r\n	case 0: n++;\r\n		break;\r\n	case 1: n *= a++;\r\n	case 2: n += --b;\r\n	case 3: --n;break;\r\n	default:n++;\r\n	}\r\n	cout << n;', 1, NULL, 2, 24, 2, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(471, 'for (int i = 1; i <= 5; i++) {\r\nf (int j = 1; j <= (5 - i); j++) {\r\ncout<<\" \";\r\n}\r\nfor (int k = 1; k <= i; k++) {\r\ncout<<i;\r\n}\r\ncout<<endl;\r\n}', 1, NULL, NULL, 24, 1, '2019-03-14 16:24:00', '2019-03-14 16:24:00'),
(472, 'for (int i = 1; i <= 5; i++) {\r\nf (int j = 1; j <= (5 - i); j++) {\r\ncout<<\" \";\r\n}\r\nfor (int k = 1; k <= i; k++) {\r\ncout<<i;\r\n}\r\ncout<<endl;\r\n}', 1, NULL, 2, 24, 2, '2019-03-14 16:25:23', '2019-03-14 16:25:23');
INSERT INTO `questions` (`id`, `QUESTION_TEXT`, `QUESTION_TYPE_ID`, `EXAM_ID`, `POINTS`, `course_id`, `hard`, `created_at`, `updated_at`) VALUES
(473, 'for (int i = 3; i < 13; i += 3)\r\n		switch (i - 3) {\r\n		case 0:   cout << i*1;  break;\r\n		case 2:   cout << i*3;  break;\r\n		case 5:   cout << i*6;  break;\r\n		case 9:   cout << i*10;  break;\r\n		case 13:   cout << i*14;  break;\r\n		}', 1, NULL, 2, 24, 3, '2019-03-15 09:39:21', '2019-03-15 09:39:21'),
(474, 'for (int i = 3; i < 13; i += 3)\r\n		switch (i - 3) {\r\n		case 0:   cout << i*1;  break;\r\n		case 2:   cout << i*3;  break;\r\n		case 5:   cout << i*6;  break;\r\n		case 9:   cout << i*10;  break;\r\n		case 13:   cout << i*14;  break;\r\n		}', 1, NULL, 2, 24, 3, '2019-03-15 09:40:39', '2019-03-15 09:40:39'),
(475, 'for (int i = 3; i < 13; i += 3)\r\n		switch (i - 3) {\r\n		case 0:   cout << i*1;  break;\r\n		case 2:   cout << i*3;  break;\r\n		case 5:   cout << i*6;  break;\r\n		case 9:   cout << i*10;  break;\r\n		case 13:   cout << i*14;  break;\r\n		}', 1, NULL, 2, 24, 1, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(476, 'write a loop to print the odd numbers less than 30', 4, NULL, 2, 24, 1, '2019-03-15 09:44:34', '2019-03-15 09:44:34'),
(477, 'Fix errors (if any) and rewrite the code so it prints the first 10 odd numbers\r\nint i =0;\r\nint count =0;\r\nwhile(count <10){\r\n	if(i%2 == 0){\r\n		cout<<i<<endl;\r\n		count++;\r\n	}\r\n}', 4, NULL, 2, 24, 2, '2019-03-15 09:50:25', '2019-03-15 09:50:25'),
(478, 'for (int i = 1; i <= 4; i++) {\r\n		for (int k = 1; k <= i; k++) {\r\n			cout << i;\r\n		}\r\n	}', 1, NULL, 1, 24, 1, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(479, 'Write a C++ program to find the sum of the odd and even numbers separately that their values are less than 100', 4, NULL, 2, 24, 1, '2019-03-15 10:04:10', '2019-03-15 10:04:10'),
(480, 'char N = \'a\';\r\n	int c = N;\r\n	cout<<c + \'3\' << endl;\r\n// ASCII code for \'a\' is 97 and ASCII for \'3\' is 51 and ASCII for \'c\' is 99', 1, NULL, 1, 24, 1, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(481, 'Write a for loop that calculates factorial of a number n. Factorial is calculates as follow:\r\n!n  =  n × n-1 × … × 1', 4, NULL, 2, 24, 3, '2019-03-16 05:22:26', '2019-03-16 05:22:26'),
(482, NULL, 1, NULL, NULL, 22, 1, '2019-03-18 07:19:19', '2019-03-18 07:19:19'),
(483, 'When there are no events, the system is at rest, waiting for the next event to trigger it, everything in the system can be thought of as a response to some trigger event, this is known as;', 1, NULL, 1, 25, 2, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(484, 'Which of the following tools present data or information flow?', 1, NULL, 1, 25, 1, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(485, 'The System Development Life Cycle consist of four phases; Planning, Analysis, Design, and Implementation.  \r\nWhat are the steps involved in the basic Analysis process?', 1, NULL, 1, 25, 2, '2019-03-26 11:03:16', '2019-03-26 11:03:16'),
(486, 'What does the word \"actor\" refer to in the Use Case?', 1, NULL, 1, 25, 1, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(487, 'What is Waterfall methodology?', 1, NULL, NULL, 25, 1, '2019-03-26 11:10:18', '2019-03-26 11:10:18'),
(488, 'What is Waterfall methodology?', 1, NULL, NULL, 25, 1, '2019-03-26 11:10:48', '2019-03-26 11:10:48'),
(489, 'What is Waterfall methodology?', 1, NULL, NULL, 25, 1, '2019-03-26 11:11:12', '2019-03-26 11:11:12'),
(490, NULL, 5, NULL, NULL, 22, 1, '2019-03-28 04:28:32', '2019-03-28 04:28:32'),
(491, 'What is the value of variable n after executing the following C++ statements? \r\n\r\nint n;\r\nn = 8+2*(int)4.5/1.5;', 1, NULL, 2, 24, 2, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(492, 'what is the output of this code\r\n#include <stdio.h>\r\n int main()\r\n {\r\n int x = 1, y=1, sum = 0;\r\n while(x<3)\r\n {\r\n sum = x+ y;\r\n x = y;\r\n y = sum;\r\n }\r\n cout<<\"The sum is \"<<sum;\r\n return 0;\r\n }', 1, NULL, 1, 24, 1, '2019-04-02 13:01:50', '2019-04-03 08:31:06'),
(493, 'int size = 5;\r\n	int arr[] = { 10, 20, 30, 40, 50 };\r\n	int tmp = arr[size - 1];\r\n	for (int i = 1; i < size; i++) {\r\n		arr[i] = arr[i - 1];\r\n	}\r\n	arr[0] = tmp;\r\n	for (int i = 0; i< size; i++)\r\n		cout << arr[i] << \"   \";', 1, NULL, 2, 24, 1, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(494, 'What is the value of variable n after executing the following C++ statements?\r\n	\r\nint a = 5, b = 2, c = 7;\r\nint n;\r\nn = a/b*(c%2 + 4.5);', 3, NULL, 1, 24, 1, '2019-04-02 13:09:57', '2019-04-02 13:10:52'),
(495, 'What is the value of variable n after following C++ statements?\r\n\r\nint n = 5, a = 4, b = 0, c = 8;\r\nif (b<=6 && c>4 || a++==6)\r\nn ++;\r\nif (a!=4 || b>5 || c<=9)\r\nn += a++;', 1, NULL, 2, 24, 2, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(496, 'A Taxi company charges $2.50 on entry into the taxi, an additional\r\n$1.75 per mile for each of the first 10 miles, and an additional $1.00 per mile\r\nfor each mile traveled beyond 10 miles. Write a c++ program that reads an int variable miles contains the miles traveled and displays the amount of money to be paid.', 5, NULL, 4, 24, 2, '2019-04-02 13:15:08', '2019-04-02 13:15:08'),
(497, 'Write a C++ program to ask user to enter 10 integers and store them into an array of integers. Your program should find the second largest number in the array and print it.', 5, NULL, 6, 24, 3, '2019-04-02 13:15:54', '2019-04-02 13:15:54'),
(498, 'Write a C++ program to ask user to enter 10 integers and store them into an array of integers. Your program should find the second largest number in the array and print it.', 5, NULL, 6, 24, 3, '2019-04-02 13:16:20', '2019-04-02 13:16:20'),
(499, 'Write a C++ program to ask user to enter 10 integers and store them into an array of integers. Your program should find the second largest number in the array and print it.', 5, NULL, 6, 24, 2, '2019-04-02 13:16:38', '2019-04-02 13:16:38'),
(500, 'what is the output of this code?\r\n\r\n	for (int i = 1; i <= 5; i++) {\r\n		for(int j = 1; j <= (5 - i); j++) {\r\n			cout << \" \";\r\n		}\r\n		for (int k = 1; k <= i; k++) {\r\n			cout << i;\r\n		}\r\n		cout << \"   \";\r\n	}', 1, NULL, 2, 24, 1, '2019-04-02 13:22:07', '2019-04-02 13:23:31'),
(504, 'من الجيد أن تبدأ انشاء عرض تقديمي بوربوينت من خلال فتح التطبيق واختيار الموضوع والألوان المفضلة لديك', 2, NULL, 1, 28, 1, '2019-04-02 14:55:22', '2019-04-02 14:55:22'),
(505, 'تحديد هدف للعرض التقديمى ليس من الأولويات فى تجهيز العرض', 2, NULL, 1, 28, 1, '2019-04-02 14:56:15', '2019-04-02 14:56:15'),
(506, 'يختلف العرض على حسب الجمهور', 2, NULL, 1, 28, 2, '2019-04-02 14:56:56', '2019-04-02 14:56:56'),
(507, 'يتم بناء مخطط العرض على الورق أو في تطبيق آخر قبل تنفيذه على البوربوينت', 2, NULL, 1, 28, 1, '2019-04-02 14:57:32', '2019-04-02 14:57:32'),
(508, 'للتبديل إلى عرض المخطط التفصيلي(Outline View) ، ابحث عن علامة التبويب عرض (View)على شريط بوربوينت وانقر على عرض المخطط التفصيلي', 2, NULL, 1, 28, 2, '2019-04-02 14:58:12', '2019-04-02 14:58:12'),
(509, 'يمكن إضافة شرائح جديدة من خلال التبويب Home', 2, NULL, 1, 28, 1, '2019-04-02 14:58:51', '2019-04-02 14:58:51'),
(510, 'يمكن إضافة صور للشرائح من خلال التبويب Design', 2, NULL, 1, 28, 2, '2019-04-02 14:59:35', '2019-04-02 14:59:35'),
(511, 'يمكن تعديل/ إضافة أرقام للشرائح من خلال التبويب Design', 2, NULL, 1, 28, 1, '2019-04-02 15:00:03', '2019-04-02 15:00:03'),
(512, 'يجب أن تضع في اعتبارك عند تحديد جمهورك:', 1, NULL, 2, 28, 1, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(513, 'تغييرخلفية وتصميم الشرائح يتم من خلال التبويب', 1, NULL, 2, 28, 2, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(514, 'تغيير حجم النص ونوع خط الكتابة يتم من خلال التبويب', 1, NULL, 2, 28, 1, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(515, 'أسرع طريقة ليفقد جمهورك اهتمامه', 1, NULL, 2, 28, 1, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(516, 'لإضافة مستوى ثان من نقاط المخطط  نضغط', 1, NULL, 2, 28, 1, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(517, 'بعد تحديد الجمهور يجب', 1, NULL, 2, 28, 1, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(518, 'يجب أن تضع في اعتبارك عند تحديد جمهورك', 1, NULL, 2, 28, 1, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(519, 'بناء نقاط الدعم هى الخطوة التالية لـ', 3, NULL, 1, 28, 2, '2019-04-02 15:20:42', '2019-04-02 15:20:42'),
(520, 'المستوى الثاني من خطوطك العريضة هو', 3, NULL, 1, 28, 2, '2019-04-02 15:21:23', '2019-04-02 15:21:23'),
(521, '...........من التصورات الموجودة فى بوربوينت ........ و', 3, NULL, 3, 28, 3, '2019-04-02 15:22:36', '2019-04-02 15:22:36'),
(522, '..........يمكن إدراج مربع نص إلى شريحة من خلال التبويب ....... و', 3, NULL, 3, 28, 3, '2019-04-02 15:23:25', '2019-04-02 15:23:25'),
(523, 'F.......لتشغيل العرض فى بوربوينت نضغط على المفتاح', 3, NULL, 1, 28, 1, '2019-04-02 15:24:50', '2019-04-02 15:24:50'),
(524, 'T(n) = 2T(n/2) + 2^ lg n,  \r\nT(n) = O(......)', 1, NULL, 2, 27, 2, '2019-04-08 17:18:54', '2019-04-08 17:32:54'),
(525, 'T(n) = 2T( √n) + O(lg lg n),  \r\nT(n) = O(......)', 1, NULL, 2, 27, 2, '2019-04-08 17:20:44', '2019-04-08 17:33:06'),
(526, 'T(n) = T(n/5)+ 4T(n/5) + n,  \r\nT(n) =  O(......)', 1, NULL, 2, 27, 1, '2019-04-08 17:22:35', '2019-04-08 17:33:19'),
(527, 'T(n) = T(n/5)+ T(4n/5) + n^2,   \r\nT(n) = O(...)', 1, NULL, 2, 27, 3, '2019-04-08 17:25:23', '2019-04-09 16:51:57'),
(528, 'By applying the quick sort on the next array, \r\n56 | 82 | 92 | 74 | 76 | 68 | 88 | 68 | 48 | 74 | 18 | 94\r\nafter the second round of the partitioning the array will be like:', 1, NULL, 3, 27, 2, '2019-04-08 17:30:19', '2019-04-09 04:25:20'),
(529, 'By applying the construct heap algorithm on the next array, 15 | 19 | 10 | 7 | 17 | 16  ,the resulting array will be', 1, NULL, 4, 27, 2, '2019-04-08 17:42:42', '2019-04-09 03:57:27'),
(530, 'The running time of merge sort is n lgn', 2, NULL, 1, 27, 1, '2019-04-08 17:43:28', '2019-04-08 17:43:28'),
(531, 'Any comparison based search has the lower bound of O(n)', 2, NULL, 1, 27, 1, '2019-04-08 17:44:49', '2019-04-08 17:44:49'),
(532, 'Counting sort is a linear time sorting algorithm', 2, NULL, 1, 27, 1, '2019-04-08 17:47:03', '2019-04-08 17:47:03'),
(533, 'Form these edge set, E = { (1,2), (1,4), (1,5), (3,2), (4,4), (4,5), (5,1), (5,2), (5,3)}, we can say that this graph is diagraph', 2, NULL, 1, 27, 2, '2019-04-08 17:49:19', '2019-04-08 17:49:19'),
(534, 'E = {(1,2), (1,4), (1,5), (2,3), (2,5), (3,5), (4,5)}, This can set represent a directed graph or undirected graph', 2, NULL, 1, 27, 2, '2019-04-08 17:53:24', '2019-04-08 17:53:24'),
(535, 'The adjacency matrix of an undirected graph is unsymetric', 2, NULL, 1, 27, 1, '2019-04-08 17:54:57', '2019-04-08 17:54:57'),
(536, 'Any graph could has many spanning trees', 2, NULL, 1, 27, 1, '2019-04-08 17:55:56', '2019-04-08 17:55:56'),
(537, 'what is the value of x\r\nx =9;\r\nx++;', 1, NULL, 1, 15, 1, '2019-04-14 11:37:27', '2019-04-14 11:37:27'),
(538, 'يعد علم النفس الاكلينيكي أحد فروع علم النفس النظرية', 2, NULL, 1, 29, 2, '2019-04-14 16:39:04', '2019-04-14 16:39:04'),
(539, 'من فروع علم النفس العملية', 1, NULL, 1, 29, 1, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(540, 'يتم تطبيق الفكر الاستراتيجي في البيئة ............', 1, NULL, 2, 31, 2, '2019-04-22 12:11:23', '2019-07-02 08:59:29'),
(541, 'يسبق ............الاستراتيجي آليات التخطيط الاستراتيجي في العمل المدرسي.', 2, NULL, 2, 31, 1, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(542, 'تمثل وزارة التربية والتعليم مستوى التخطيط............', 1, NULL, 2, 31, 1, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(543, 'يتم تحديد الفجوة في التخطيط الاستراتيجي ............', 1, NULL, 2, 31, 1, '2019-04-22 12:12:53', '2019-04-22 12:12:53'),
(544, 'العناصر المرتبطة بعضها ببعض بعلاقات منتظمة لتحقيق أغراض بعينها تعبر عن.............', 1, NULL, 2, 31, 1, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(545, 'يمكن من خلال مخرجات المدرسة تطوير البيئة المجتمعية في المجتمع المحلى والاقليمي.', 2, NULL, 2, 31, 1, '2019-04-22 12:13:40', '2019-04-22 12:13:40'),
(546, 'يحقق الفكر المنظومي الذاتية للمؤسسة والتطوير والتغيير في نفس الوقت.', 2, NULL, 2, 31, 1, '2019-04-22 12:13:59', '2019-04-22 12:13:59'),
(547, 'يحقق الفكر المنظومي الذاتية للمؤسسة والتطوير والتغيير في نفس الوقت.', 2, NULL, 2, 31, 1, '2019-04-22 12:14:19', '2019-04-22 12:14:19'),
(548, 'التخطيط الاستراتيجي يعمل في البيئات المدرسية المستقرة فقط.', 2, NULL, 2, 31, 1, '2019-04-22 12:15:00', '2019-04-22 12:15:00'),
(549, 'تستخدم المدرسة التخطيط الاستراتيجي عندما يكون هناك انخفاض في معدلات التغير في البيئة المدرسية.', 2, NULL, 2, 31, 1, '2019-04-22 12:16:31', '2019-04-22 12:16:31'),
(550, 'التخطيط الاستراتيجي المؤسسي أعم واشمل من التخطيط التعليمي.', 2, NULL, 2, 31, 1, '2019-04-22 12:16:50', '2019-04-22 12:16:50'),
(551, 'يتم تطبيق الفكر الاستراتيجي في البيئة ............', 1, NULL, 2, 31, 1, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(552, 'public class GeometricObject { \r\npublic String toString() { \r\nreturn \"this is a Geometric Shape \"; \r\n} \r\n}\r\npublic class Circle extends GeometricObject { \r\ndouble radius;\r\npublic String toString() { \r\nreturn super.toString() + \"\\nradius is \" + radius; \r\n} \r\n}\r\npublic class Test{\r\npublic static void main(String args){\r\nGeometricObject g = new Circle();\r\nSystem.out.println(g);\r\n}}', 1, NULL, 2, 15, 1, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(553, 'Determine the statements that will be executed if an exception (type is Exception2) occurs in statment3\r\ntry {\r\nstatement1;\r\nstatement2;\r\nstatement3;\r\n}\r\ncatch(Exception1 ex) {\r\nstatement4; }\r\ncatch(Exception2 ex) {\r\n  statement5;\r\n  throw ex;\r\n}\r\nfinally {\r\n  statement6;\r\n}\r\nstatement7;', 1, NULL, 2, 15, 1, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(554, 'public class Test\r\n{\r\n    public static int doStuff(double x, double y)\r\n    {\r\n        return (int)(x / y);\r\n    }\r\n    public static void main(String[] a) {\r\nfloat x = 6.0f;\r\nint y = 11;\r\nx = Test.doStuff(y,x);\r\nSystem.out.print(\"x=\"+x+\", y=\"+y);\r\n}\r\n}', 1, NULL, 2, 15, 1, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(555, 'int num = 1, max = 20;\r\nwhile (num < max)\r\n{ \r\nSystem.out.println(num);\r\nnum += 4;\r\n}', 1, NULL, 2, 15, 1, '2019-04-23 17:39:22', '2019-04-23 17:39:22'),
(556, 'public class Test { \r\n    public static void main(String[] args) { \r\n        A a = new A(); \r\n        a.p(10); \r\n        a.p(10.0); \r\n    } \r\n} \r\nclass B { \r\n    public void p(double i) { \r\n        System.out.println(i * 2); \r\n    } } \r\nclass A extends B { \r\n    public void p(double i) { \r\n        System.out.println(i); \r\n    } }', 1, NULL, 2, 15, 1, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(557, 'class A{\r\n    static int value;\r\n    public A(int v){\r\n        value = v;\r\n    }\r\n    public A(){}\r\n}\r\n class B extends A{\r\n    public B(){\r\n        value = 4;\r\n    }\r\n}\r\npublic class Test{\r\n    public static void main(String[] a){\r\n        B b = new B();\r\n        System.out.println(b.value);\r\n    }\r\n}', 1, NULL, 2, 15, 1, '2019-04-23 17:53:01', '2019-04-23 17:53:01'),
(558, 'class A{\r\n	static int range = 9;\r\n	A(){\r\n		range = 80;\r\n	}\r\n}\r\nclass B extends A{\r\n	void setRange(int r){\r\n		range = r;\r\n	}\r\n}\r\npublic class Test {\r\n    public Test() {\r\n    }\r\n    public static void main(String[] args){\r\n    	A o1 = new A();\r\n    	B o2 = new B();\r\n    	o2.setRange(55);\r\n    	A o3 = new B();\r\n    	System.out.println(o1.range);\r\n    	System.out.println(o2.range);\r\n    	System.out.println(o3.range);\r\n    }   }', 1, NULL, 2, 15, 1, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(559, 'An online trading company gives discount to its customer. It classifies the customer to three categories. The first is registered customer who make a registration on its website. The second category is golden customer who is a registered customer with total purchase amount last year is above 30000. The last category is premium customer who is a registered customer with purchased amount last year is above 100000. The company usually offers discounts to the customer in some occasions. Currently, the company offer 7% discount for registered customer. For golden customer it offers more 4% discount after registered customer discount. For premium users, the company offers 10% after registered customer discount.\r\nHelp the company to calculate the total amount of purchasing. Assume that there are 4 customers buying with these amounts 2000, 1000, 2500, 5600. Assume that the categories of customers are premium, registered, golden, and premium respectively.', 5, NULL, 8, 15, 1, '2019-04-24 04:20:31', '2019-04-24 04:20:31'),
(560, 'A company pays its employees on a weekly basis. The employees are of three types: Salaried employees are paid a fixed weekly salary regardless of the number of hours worked, hourly employees are paid by the hour and receive overtime pay for all hours worked in excess of 40 hours, and commission employees are paid a percentage of their. The company wants to implement a Java application that performs its payroll calculations using polymorphism. The program should take the employees data and calculates the salaries. Employee data depends on the employee type. Salaries employee has only name and salary, hourly employee has name, wage per hour, and commission employee has name sales amount and percentage. The over time for hourly employee is calculated for hours over 40 and the wage will be 1.5 wage. The commission employee salary is calculated as a percentage of his sales amount.', 4, NULL, 8, 15, 1, '2019-04-24 04:21:05', '2019-04-24 04:21:05'),
(561, 'what is the output of the following code:\r\n	int n = 0;\r\n	for (int m = 0; m < 5; m++) {\r\n		n += m++;\r\n	}\r\n	cout << n << endl;', 1, NULL, 2, 24, 1, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(562, 'int foo(int a, int s) {\r\n	if (s <= 1)\r\n		return 5;\r\n	return foo(a, s - 1) + 1;\r\n}\r\nint main() {\r\n	cout << foo(4, 5);\r\n}', 1, NULL, 2, 24, 1, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(563, 'int main() \r\n{ \r\n	int a = 32, *ptr = &a;\r\n	char ch = \'A\', *cho = &ch;\r\n	*cho += a;\r\n	*ptr += ch;\r\n	cout << a << \", \" << ch << endl;\r\n    return 0; \r\n}', 1, NULL, 2, 24, 1, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(564, 'int main() {\r\n	int h = 3;\r\n	int* x = &h;\r\n	int* y = x;\r\n	*y = 13;\r\n	cout << *x << \"  \";\r\n	x = new int[3];\r\n	x[0] = 8;\r\n	cout << *x << \"  \";\r\n	cout << *y;\r\n	}', 1, NULL, 2, 24, 1, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(565, 'int h = 7;\r\nvoid foo(int a, int s) {\r\n	cout << h + a - s<<\"  \";\r\n	int h = a * s + 25;\r\n	cout << h + a - s<< \"  \";\r\n	h = 5;\r\n}\r\nint main() {\r\n	h = 3;\r\n	foo(2, 4);\r\n	cout << h;\r\n}', 1, NULL, 2, 24, 1, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(566, 'int foo(int &a, int& s) {\r\n	s = a++ * s + 1;\r\n	return s;\r\n}\r\nint main() {\r\n	int x = 5, y =3;\r\n	int z = foo(x, y);\r\n	cout << x << \"  \" << y << \"  \" << z;\r\n}', 1, NULL, 2, 24, 1, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(567, 'void reverse(int a[], int size) {\r\n	for (int i = size; i >= 0; i--)\r\n		a[size - i] = a[i];\r\n}\r\nint main() {\r\n	int ar[7];\r\n	for (int i = 0; i < 7; i++)\r\n		ar[i] = i + 2;\r\n	reverse(ar, 5);\r\n	for (int i = 0; i < 7; i++)\r\n		cout << ar[i] << \"  \";\r\n}', 1, NULL, 2, 24, 1, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(568, 'Remove all the unnecessary tests from the nested conditional statement below.\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n cout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\n cout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\n cout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\n cout << \"You are well off.\" << endl;', 4, NULL, 2, 24, 1, '2019-05-13 04:21:13', '2019-05-13 04:21:13'),
(569, 'Rewrite the following code fragment so that it uses a \"do...while...\" loop to accomplish the same task.\r\n int n;\r\n cout << \"Enter a non-negative integer: \";\r\n cin >> n;\r\n while (n < 0)\r\n {\r\n cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n cin >> n;\r\n }', 4, NULL, 2, 24, 1, '2019-05-13 04:21:37', '2019-05-13 04:21:37'),
(570, 'Write a recursive function that calculates factorial of a number n. Factorial is calculates as follow: !n  =  n × n-1 × … × 1', 4, NULL, 2, 24, 1, '2019-05-13 04:21:54', '2019-05-13 04:21:54'),
(571, 'write a recursive function to calculate x power y. Where x and y are positive integers.', 4, NULL, 2, 24, 1, '2019-05-13 07:45:49', '2019-05-13 07:45:49'),
(572, 'int sum = 0;\r\n	for (int i = 1; i <= 5; i++) {\r\n		for (int j = 1; j <= (5 - i); j++) {\r\n			sum += i ;\r\n		}\r\n	}\r\n	cout << sum;', 1, NULL, 2, 24, 1, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(573, 'void myFun(int a[], int size) {\r\n	int t;\r\n	for (int i = 0; i <= size/2 ; i++)\r\n	{		t = a[i];\r\n	a[i] = a[i+ size / 2];\r\n	a[i + size / 2] = t;\r\n}\r\n}\r\nint main() {\r\n	int ar[7];\r\n	for (int i = 0; i < 7; i++)\r\n		ar[i] = i + 2;\r\n	myFun(ar, 7);\r\n	for (int i = 0; i < 7; i++)\r\n		cout << ar[i] << \"  \";\r\n}', 1, NULL, 2, 24, 1, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(574, 'write a function to compute factorial without recursion', 4, NULL, 2, 24, 1, '2019-05-13 08:04:32', '2019-05-13 08:04:32'),
(575, 'test_question', 1, NULL, 1, 31, 1, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(576, 'question #1 - exam # a', 1, NULL, 2, 31, 1, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(577, 'question 2 - exam a', 1, NULL, 3, 31, 1, '2019-07-02 08:52:17', '2019-07-02 08:53:47'),
(578, 'question 5 - exam # a', 1, NULL, 5, 31, 2, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(579, '<p><em><strong>test exam&nbsp;</strong></em></p>', 1, NULL, 40, 31, 1, '2019-07-31 07:35:20', '2019-07-31 07:35:20'),
(580, 'mhvjhvjh', 1, NULL, NULL, 31, 1, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(581, '<p><em><strong>text check</strong></em></p>', 1, NULL, 40, 31, 1, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(582, '<p>السؤال الاول</p>', 1, NULL, 1, 31, 1, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(583, '<p>السؤال التاني</p>', 1, NULL, 2, 31, 1, '2019-12-12 06:16:26', '2019-12-12 06:16:26'),
(584, '<p>السؤال التاني</p>', 1, NULL, 2, 31, 1, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(585, '<p>jkbjkbkj</p>', 1, NULL, 20, 31, 3, '2019-12-15 02:45:26', '2019-12-15 02:45:26'),
(586, '<p>jkbjkbkj</p>', 1, NULL, 20, 31, 3, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(587, '<p>kjvbfkjvbkj</p>', 1, NULL, 20, 31, 3, '2019-12-15 02:53:32', '2019-12-15 02:53:32'),
(588, '<p>lknkln</p>', 1, NULL, 20, 31, 2, '2019-12-15 03:00:24', '2019-12-15 03:00:24'),
(589, '<p>jkbkjbfkjb</p>', 1, NULL, 30, 31, 2, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(590, '<p>kfjvkfjvbkj</p>', 1, NULL, 10, 31, 3, '2019-12-15 03:01:29', '2019-12-15 03:01:29'),
(613, '<p>easy choose</p>', 1, 88, 12, 13, 1, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(614, '<p>easy choose 2</p>', 1, 88, 12, 13, 1, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(615, '<p>meduim choose</p>', 1, 88, 12, 13, 2, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(617, '<p>meduim choose 2</p>', 1, 88, 12, 13, 2, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(618, '<p>meduim choose 2</p>', 1, 88, 12, 13, 2, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(619, '<p>meduim choose 3</p>', 1, 88, 12, 13, 2, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(620, '<p>easy choose 3</p>', 1, 88, 12, 13, 1, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(621, '<p>hard choose</p>', 1, 88, 12, 13, 3, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(622, '<p>hard choose 2</p>', 1, 88, 12, 13, 3, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(623, '<p>easy tre false</p>', 2, 88, 12, 13, 1, '2020-01-17 11:11:41', '2020-01-17 11:11:41'),
(624, '<p>asd</p>', 3, 89, 2, 13, 1, '2020-02-17 08:10:03', '2020-02-17 08:10:03'),
(625, '<p>asddadaadadad</p>', 1, 94, 3, 34, 1, '2020-03-14 21:23:10', '2020-03-14 21:23:10'),
(626, '<p>fdsffsfsfffsdfsfsdffsfsfsf</p>', 1, 94, 4, 34, 1, '2020-03-14 21:23:40', '2020-03-14 21:23:40'),
(627, '<p>fdsfffffsdfffdsff</p>', 2, 94, 2, 34, 1, '2020-03-14 21:24:05', '2020-03-14 21:24:05'),
(628, '<p>dsfsffffsffsfsdfs</p>', 2, 94, 5, 34, 1, '2020-03-14 21:26:15', '2020-03-14 21:26:15'),
(629, '<p>sfsffdfsdfssdfdsfsdfsffsdfs</p>', 5, 94, 6, 34, 2, '2020-03-14 21:27:27', '2020-03-14 21:27:27'),
(630, '<p>hghfhfhfhhhhhg</p>', 5, 94, 7, 34, 3, '2020-03-14 21:27:47', '2020-03-14 21:27:47'),
(631, NULL, 1, 94, 4, 34, 1, '2020-03-14 21:28:36', '2020-03-14 21:28:36'),
(632, NULL, 1, NULL, NULL, 34, 1, '2020-03-19 17:08:01', '2020-03-19 17:08:01'),
(633, NULL, 1, NULL, NULL, 34, 1, '2020-03-19 17:13:16', '2020-03-19 17:13:16'),
(634, '<p>vggfggfgfgffgfgfgggfgfdgdf</p>', 1, 91, NULL, 34, 1, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(635, ' MCQ 3', 1, NULL, 5, NULL, 3, '2020-03-22 13:04:30', '2020-03-22 13:04:30'),
(636, 'TF2', 2, NULL, 4, NULL, 2, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(637, 'Essay', 3, NULL, 3, NULL, 1, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(638, 'Code', 4, NULL, 2, NULL, 2, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(639, 'Definition', 5, NULL, 1, NULL, 3, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(640, ' MCQ 3', 1, NULL, 5, NULL, 3, '2020-03-22 13:09:29', '2020-03-22 13:09:29'),
(641, 'TF2', 2, NULL, 4, NULL, 2, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(642, 'Essay', 3, NULL, 3, NULL, 1, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(643, 'Code', 4, NULL, 2, NULL, 2, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(644, 'Definition', 5, NULL, 1, NULL, 3, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(645, '<p>mcq</p>', 1, 95, 2, 34, 1, '2020-04-07 13:59:37', '2020-04-07 13:59:37'),
(646, '<p>tf</p>', 2, 95, 3, 34, 1, '2020-04-07 14:00:01', '2020-04-07 14:00:01'),
(647, '<p>complete</p>', 3, 95, 2, 34, 1, '2020-04-07 14:01:00', '2020-04-07 14:01:00'),
(648, '<p>code</p>', 4, 95, 5, 34, 1, '2020-04-07 14:01:20', '2020-04-07 14:01:20'),
(649, '<p>define</p>', 5, 95, 5, 34, 1, '2020-04-07 14:01:52', '2020-04-07 14:01:52'),
(650, ' MCQ 3', 1, NULL, 5, NULL, 3, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(651, 'TF2', 2, NULL, 4, NULL, 2, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(652, 'Essay', 3, NULL, 3, NULL, 1, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(653, 'Code', 4, NULL, 2, NULL, 2, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(654, 'Definition', 5, NULL, 1, NULL, 3, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(655, ' MCQ 3', 1, NULL, 5, NULL, 3, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(656, 'TF2', 2, NULL, 4, NULL, 2, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(657, 'Essay', 3, NULL, 3, NULL, 1, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(658, 'Code', 4, NULL, 2, NULL, 2, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(659, 'Definition', 5, NULL, 1, NULL, 3, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(660, '<p>mcq with figure</p>', 1, 104, 2, 34, 1, '2020-04-17 19:01:15', '2020-04-17 19:01:15'),
(661, '<p>MCQ with title figure and options figures</p>', 1, 104, 2, 34, 1, '2020-04-17 19:04:30', '2020-04-17 19:04:30'),
(662, '<p>TF with figure</p>', 2, 104, 2, 34, 1, '2020-04-17 19:05:17', '2020-04-17 19:05:17'),
(663, '<p>complet with figure</p>', 3, 104, 2, 34, 1, '2020-04-17 19:05:44', '2020-04-17 19:05:44'),
(664, '<p>Write code with figure</p>', 4, 104, 5, 34, 1, '2020-04-17 19:06:11', '2020-04-17 19:06:11'),
(665, '<p>define with figure</p>', 5, 104, 3, 34, 1, '2020-04-17 19:06:37', '2020-04-17 19:06:37');

-- --------------------------------------------------------

--
-- بنية الجدول `question_choices`
--

CREATE TABLE `question_choices` (
  `id` int(11) NOT NULL,
  `QUESTION_ID` int(11) DEFAULT NULL,
  `QUESTION_CHOICE_TEXT` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `QUESTION_CHOICE_ISCORRECT` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `question_choices`
--

INSERT INTO `question_choices` (`id`, `QUESTION_ID`, `QUESTION_CHOICE_TEXT`, `QUESTION_CHOICE_ISCORRECT`, `created_at`, `updated_at`) VALUES
(26, 11, 'True', 1, '2018-10-27 14:11:16', '2018-10-27 14:11:16'),
(27, 11, 'False', 0, '2018-10-27 14:11:16', '2018-10-27 14:11:16'),
(28, 12, 'True', 0, '2018-10-27 14:11:37', '2018-10-27 14:11:37'),
(29, 12, 'False', 1, '2018-10-27 14:11:37', '2018-10-27 14:11:37'),
(30, 13, 'choose 1', 1, '2018-10-27 14:12:18', '2018-10-27 14:12:18'),
(31, 13, 'choose 2', 0, '2018-10-27 14:12:18', '2018-10-27 14:12:18'),
(32, 13, 'choose 3', 0, '2018-10-27 14:12:18', '2018-10-27 14:12:18'),
(33, 13, 'choose 4', 0, '2018-10-27 14:12:18', '2018-10-27 14:12:18'),
(34, 14, 'choose 1', 0, '2018-10-27 14:12:48', '2018-10-27 14:12:48'),
(35, 14, 'choose 2', 1, '2018-10-27 14:12:48', '2018-10-27 14:12:48'),
(36, 14, 'choose 3', 0, '2018-10-27 14:12:48', '2018-10-27 14:12:48'),
(37, 14, 'choose 4', 0, '2018-10-27 14:12:48', '2018-10-27 14:12:48'),
(38, 15, 'asd', NULL, '2018-10-27 14:13:22', '2018-10-27 14:13:22'),
(39, 15, 'asd2', NULL, '2018-10-27 14:13:22', '2018-10-27 14:13:22'),
(40, 18, 'right', 1, '2018-10-31 05:38:36', '2018-10-31 05:38:36'),
(41, 18, 'false', 0, '2018-10-31 05:38:36', '2018-10-31 05:38:36'),
(42, 18, 'flase', 0, '2018-10-31 05:38:36', '2018-10-31 05:38:36'),
(43, 18, 'flase', 0, '2018-10-31 05:38:36', '2018-10-31 05:38:36'),
(44, 19, 'True', 1, '2018-10-31 05:39:18', '2018-10-31 05:39:18'),
(45, 19, 'False', 0, '2018-10-31 05:39:18', '2018-10-31 05:39:18'),
(46, 20, 'asd', NULL, '2018-10-31 05:43:25', '2018-10-31 05:43:25'),
(47, 20, NULL, NULL, '2018-10-31 05:43:25', '2018-10-31 05:43:25'),
(48, 21, 'PHP framework', 1, '2018-10-31 09:32:38', '2018-10-31 09:32:38'),
(49, 21, 'Python  framework', 0, '2018-10-31 09:32:38', '2018-10-31 09:32:38'),
(50, 21, 'C++ framework', 0, '2018-10-31 09:32:38', '2018-10-31 09:32:38'),
(51, 21, 'C# framework', 0, '2018-10-31 09:32:38', '2018-10-31 09:32:38'),
(52, 22, 'MVP', 0, '2018-10-31 09:33:53', '2018-10-31 09:33:53'),
(53, 22, 'MVC', 1, '2018-10-31 09:33:53', '2018-10-31 09:33:53'),
(54, 22, 'OOB', 0, '2018-10-31 09:33:53', '2018-10-31 09:33:53'),
(55, 22, 'NOTHING', 0, '2018-10-31 09:33:53', '2018-10-31 09:33:53'),
(56, 23, 'Built in command line tool “Artisan” for creating a code skeleton , database structure and build their migration', 0, '2018-10-31 09:35:10', '2018-10-31 09:35:10'),
(57, 23, 'Laravel is new framework and composer is not so strong in compare to npm (for node.js), ruby gems and python pip.', 1, '2018-10-31 09:35:10', '2018-10-31 09:35:10'),
(58, 23, 'Eloquent ORM with PHP active record implementation', 0, '2018-10-31 09:35:10', '2018-10-31 09:35:10'),
(59, 23, 'Hassles code reusability.', 0, '2018-10-31 09:35:10', '2018-10-31 09:35:10'),
(60, 24, 'NPM', 0, '2018-10-31 09:36:04', '2018-10-31 09:36:04'),
(61, 24, 'PIP', 0, '2018-10-31 09:36:04', '2018-10-31 09:36:04'),
(62, 24, 'composer', 1, '2018-10-31 09:36:04', '2018-10-31 09:36:04'),
(63, 24, 'Download it', 0, '2018-10-31 09:36:04', '2018-10-31 09:36:04'),
(64, 25, 'php artisan make:controller', 1, '2018-10-31 09:37:05', '2018-10-31 09:37:05'),
(65, 25, 'php artisan make:model', 0, '2018-10-31 09:37:05', '2018-10-31 09:37:05'),
(66, 25, 'php artisan make:request', 0, '2018-10-31 09:37:05', '2018-10-31 09:37:05'),
(67, 25, 'php artisan make:migration', 0, '2018-10-31 09:37:05', '2018-10-31 09:37:05'),
(68, 26, 'web.php', 1, '2018-10-31 09:38:14', '2018-10-31 09:38:14'),
(69, 26, 'route.php', 0, '2018-10-31 09:38:14', '2018-10-31 09:38:14'),
(70, 26, 'kernal.php', 0, '2018-10-31 09:38:14', '2018-10-31 09:38:14'),
(71, 26, 'view folder', 0, '2018-10-31 09:38:14', '2018-10-31 09:38:14'),
(72, 27, 'True', 1, '2018-11-08 18:02:43', '2018-11-08 18:02:43'),
(73, 27, 'False', 0, '2018-11-08 18:02:43', '2018-11-08 18:02:43'),
(74, 28, 'True', 0, '2018-11-08 18:03:04', '2018-11-08 18:03:04'),
(75, 28, 'False', 1, '2018-11-08 18:03:04', '2018-11-08 18:03:04'),
(76, 29, 'programming language', 1, '2018-11-10 07:53:55', '2018-11-10 07:53:55'),
(77, 29, 'nothing', 0, '2018-11-10 07:53:55', '2018-11-10 07:53:55'),
(78, 29, 'nothing', 0, '2018-11-10 07:53:55', '2018-11-10 07:53:55'),
(79, 29, 'nothing', 0, '2018-11-10 07:53:55', '2018-11-10 07:53:55'),
(80, 30, 'nothing', 0, '2018-11-10 07:54:18', '2018-11-10 07:54:18'),
(81, 30, 'nothing', 0, '2018-11-10 07:54:18', '2018-11-10 07:54:18'),
(82, 30, 'nothing', 1, '2018-11-10 07:54:18', '2018-11-10 07:54:18'),
(83, 30, 'nothing', 0, '2018-11-10 07:54:18', '2018-11-10 07:54:18'),
(84, 31, 'True', 1, '2018-11-10 07:59:59', '2018-11-10 07:59:59'),
(85, 31, 'False', 0, '2018-11-10 07:59:59', '2018-11-10 07:59:59'),
(86, 32, '12', 0, '2018-11-10 08:24:34', '2018-11-10 08:24:34'),
(87, 32, '10', 1, '2018-11-10 08:24:34', '2018-11-10 08:24:34'),
(88, 32, '14', 0, '2018-11-10 08:24:34', '2018-11-10 08:24:34'),
(89, 32, '4', 0, '2018-11-10 08:24:34', '2018-11-10 08:24:34'),
(90, 33, 'first', 0, '2018-11-10 08:26:53', '2018-11-10 08:26:53'),
(91, 33, 'test', 0, '2018-11-10 08:26:53', '2018-11-10 08:26:53'),
(92, 33, 'ok', 0, '2018-11-10 08:26:53', '2018-11-10 08:26:53'),
(93, 33, '12', 1, '2018-11-10 08:26:53', '2018-11-10 08:26:53'),
(94, 34, 'True', 0, '2018-11-10 08:27:21', '2018-11-10 08:27:21'),
(95, 34, 'False', 1, '2018-11-10 08:27:21', '2018-11-10 08:27:21'),
(96, 35, 'True', 1, '2018-11-10 08:27:54', '2018-11-10 08:27:54'),
(97, 35, 'False', 0, '2018-11-10 08:27:54', '2018-11-10 08:27:54'),
(98, 36, 'java', NULL, '2018-11-10 08:29:10', '2018-11-10 08:29:10'),
(99, 36, NULL, NULL, '2018-11-10 08:29:10', '2018-11-10 08:29:10'),
(100, 37, 'java', NULL, '2018-11-10 08:29:44', '2018-11-10 08:29:44'),
(101, 37, 'test', NULL, '2018-11-10 08:29:45', '2018-11-10 08:29:45'),
(102, 42, 'PL', 1, '2018-11-11 14:11:15', '2018-11-11 14:11:15'),
(103, 42, 'OS', 0, '2018-11-11 14:11:15', '2018-11-11 14:11:15'),
(104, 42, 'TA', 0, '2018-11-11 14:11:15', '2018-11-11 14:11:15'),
(105, 42, 'RA', 0, '2018-11-11 14:11:15', '2018-11-11 14:11:15'),
(106, 43, '3', 0, '2018-11-11 14:11:56', '2018-11-11 14:11:56'),
(107, 43, '11', 1, '2018-11-11 14:11:56', '2018-11-11 14:11:56'),
(108, 43, '6', 0, '2018-11-11 14:11:56', '2018-11-11 14:11:56'),
(109, 43, '4', 0, '2018-11-11 14:11:56', '2018-11-11 14:11:56'),
(110, 44, 'True', 1, '2018-11-11 14:12:33', '2018-11-11 14:12:33'),
(111, 44, 'False', 0, '2018-11-11 14:12:33', '2018-11-11 14:12:33'),
(112, 45, 'True', 0, '2018-11-11 14:13:00', '2018-11-11 14:13:00'),
(113, 45, 'False', 1, '2018-11-11 14:13:00', '2018-11-11 14:13:00'),
(114, 46, 'java', NULL, '2018-11-11 14:14:11', '2018-11-11 14:14:11'),
(115, 46, NULL, NULL, '2018-11-11 14:14:11', '2018-11-11 14:14:11'),
(116, 48, 'string', 0, '2018-11-18 17:50:20', '2018-11-18 17:50:20'),
(117, 48, 'int', 0, '2018-11-18 17:50:20', '2018-11-18 17:50:20'),
(118, 48, 'boolean', 1, '2018-11-18 17:50:20', '2018-11-18 17:50:20'),
(119, 48, 'char', 0, '2018-11-18 17:50:20', '2018-11-18 17:50:20'),
(120, 49, '0 0', 1, '2018-11-18 17:51:50', '2018-11-18 17:51:50'),
(121, 49, '0 1', 0, '2018-11-18 17:51:50', '2018-11-18 17:51:50'),
(122, 49, '1  1', 0, '2018-11-18 17:51:50', '2018-11-18 17:51:50'),
(123, 49, '0 3', 0, '2018-11-18 17:51:50', '2018-11-18 17:51:50'),
(124, 50, 'Hello', 0, '2018-11-18 17:53:03', '2018-11-18 17:53:03'),
(125, 50, 'Compiler error', 1, '2018-11-18 17:53:03', '2018-11-18 17:53:03'),
(126, 50, 'Hello Hello', 0, '2018-11-18 17:53:03', '2018-11-18 17:53:03'),
(127, 50, 'Hello Hello Hello Hello', 0, '2018-11-18 17:53:03', '2018-11-18 17:53:03'),
(128, 52, 'True', 1, '2018-11-19 08:29:08', '2018-11-19 08:29:08'),
(129, 52, 'False', 0, '2018-11-19 08:29:08', '2018-11-19 08:29:08'),
(130, 53, 'True', 1, '2018-11-19 08:34:28', '2018-11-19 08:34:28'),
(131, 53, 'False', 0, '2018-11-19 08:34:28', '2018-11-19 08:34:28'),
(132, 54, '3.0', 0, '2018-11-19 08:43:31', '2018-11-19 08:43:31'),
(133, 54, '6.0', 0, '2018-11-19 08:43:31', '2018-11-19 08:43:31'),
(134, 54, '9.0', 1, '2018-11-19 08:43:31', '2018-11-19 08:43:31'),
(135, 54, '3.3', 0, '2018-11-19 08:43:31', '2018-11-19 08:43:31'),
(136, 55, '15.9', 1, '2018-11-19 08:44:39', '2018-11-19 08:44:39'),
(137, 55, '10.6', 0, '2018-11-19 08:44:39', '2018-11-19 08:44:39'),
(138, 55, '5.3', 0, '2018-11-19 08:44:39', '2018-11-19 08:44:39'),
(139, 55, '15.0', 0, '2018-11-19 08:44:39', '2018-11-19 08:44:39'),
(140, 56, 'overload', NULL, '2018-11-19 08:47:02', '2018-11-19 08:47:02'),
(141, 56, NULL, NULL, '2018-11-19 08:47:02', '2018-11-19 08:47:02'),
(142, 57, '(1) Person\'s no-arg constructor', 0, '2018-11-24 08:37:54', '2018-11-24 08:37:54'),
(143, 57, '(4) Faculty\'s no-arg constructor', 0, '2018-11-24 08:37:54', '2018-11-24 08:37:54'),
(144, 57, '(1) Person\'s no-arg constructor (3) Employee\'s no-arg constructor (4) Faculty\'s no-arg constructor', 0, '2018-11-24 08:37:54', '2018-11-24 08:37:54'),
(145, 57, '(1) Person\'s no-arg constructor (2) Invoke Employee’s overloaded constructor (3) Employee\'s no-arg constructor (4) Faculty\'s no-arg constructor', 1, '2018-11-24 08:37:54', '2018-11-24 08:37:54'),
(146, 58, 'x=0 , y=11', 1, '2018-11-24 08:43:09', '2018-11-24 08:43:09'),
(147, 58, 'x=6 , y=11', 0, '2018-11-24 08:43:09', '2018-11-24 08:43:09'),
(148, 58, 'x=0 , y=0', 0, '2018-11-24 08:43:09', '2018-11-24 08:43:09'),
(149, 58, 'x=0.545, y=11', 0, '2018-11-24 08:43:09', '2018-11-24 08:43:09'),
(150, 59, '1 5 9 13 17 20', 0, '2018-11-24 08:49:24', '2018-11-24 08:49:24'),
(151, 59, '1', 0, '2018-11-24 08:49:24', '2018-11-24 08:49:24'),
(152, 59, '1 5 9 13 17', 1, '2018-11-24 08:49:24', '2018-11-24 08:49:24'),
(153, 59, '1 5 9 13 17 21', 0, '2018-11-24 08:49:24', '2018-11-24 08:49:24'),
(154, 60, 'True', 0, '2018-11-24 08:50:46', '2018-11-24 08:50:46'),
(155, 60, 'False', 1, '2018-11-24 08:50:47', '2018-11-24 08:50:47'),
(156, 61, 'immutable', NULL, '2018-11-24 08:52:17', '2018-11-24 08:52:17'),
(157, 61, NULL, NULL, '2018-11-24 08:52:17', '2018-11-24 08:52:17'),
(158, 62, 'True', 1, '2018-11-28 15:04:22', '2018-11-28 15:04:22'),
(159, 62, 'False', 0, '2018-11-28 15:04:22', '2018-11-28 15:04:22'),
(160, 63, 'True', 1, '2018-11-28 15:05:19', '2018-11-28 15:05:19'),
(161, 63, 'False', 0, '2018-11-28 15:05:19', '2018-11-28 15:05:19'),
(162, 64, 'True', 1, '2018-11-28 15:05:39', '2018-11-28 15:05:39'),
(163, 64, 'False', 0, '2018-11-28 15:05:39', '2018-11-28 15:05:39'),
(164, 65, 'PSK', NULL, '2018-11-28 15:06:21', '2018-11-28 15:06:21'),
(165, 65, 'FSK', NULL, '2018-11-28 15:06:21', '2018-11-28 15:06:21'),
(166, 66, 'protocol stack', 0, '2018-11-28 15:08:10', '2018-11-28 15:08:10'),
(167, 66, 'transport protocol', 0, '2018-11-28 15:08:10', '2018-11-28 15:08:10'),
(168, 66, 'OSI', 0, '2018-11-28 15:08:10', '2018-11-28 15:08:10'),
(169, 66, 'optional', 0, '2018-11-28 15:08:10', '2018-11-28 15:08:10'),
(170, 66, '10  10', 1, '2018-12-01 06:51:01', '2018-12-01 06:51:01'),
(171, 66, '20  20', 0, '2018-12-01 06:51:01', '2018-12-01 06:51:01'),
(172, 66, '10    20', 0, '2018-12-01 06:51:01', '2018-12-01 06:51:01'),
(173, 66, '20    10', 0, '2018-12-01 06:51:02', '2018-12-01 06:51:02'),
(174, 67, '7', 0, '2018-12-01 06:59:31', '2018-12-01 06:59:31'),
(175, 67, '6', 0, '2018-12-01 06:59:31', '2018-12-01 06:59:31'),
(176, 67, '12', 0, '2018-12-01 06:59:31', '2018-12-01 06:59:31'),
(177, 67, 'non of the above', 1, '2018-12-01 06:59:31', '2018-12-01 06:59:31'),
(178, 68, 'Value is: 8', 0, '2018-12-01 07:02:59', '2018-12-01 07:02:59'),
(179, 68, 'Value is: 20', 1, '2018-12-01 07:02:59', '2018-12-01 07:02:59'),
(180, 68, 'Value is: -20', 0, '2018-12-01 07:02:59', '2018-12-01 07:02:59'),
(181, 68, 'Compilation error', 0, '2018-12-01 07:02:59', '2018-12-01 07:02:59'),
(182, 69, '4', 0, '2018-12-01 07:11:21', '2018-12-01 07:11:21'),
(183, 69, '0', 0, '2018-12-01 07:11:21', '2018-12-01 07:11:21'),
(184, 69, '-2.1654016546540', 0, '2018-12-01 07:11:21', '2018-12-01 07:11:21'),
(185, 69, 'Compilation fails.', 1, '2018-12-01 07:11:21', '2018-12-01 07:11:21'),
(186, 70, 'True', 1, '2018-12-01 07:12:00', '2018-12-01 07:12:00'),
(187, 70, 'False', 0, '2018-12-01 07:12:00', '2018-12-01 07:12:00'),
(188, 71, 'True', 0, '2018-12-01 07:12:29', '2018-12-01 07:12:29'),
(189, 71, 'False', 1, '2018-12-01 07:12:29', '2018-12-01 07:12:29'),
(190, 72, 'True', 1, '2018-12-01 07:12:56', '2018-12-01 07:12:56'),
(191, 72, 'False', 0, '2018-12-01 07:12:56', '2018-12-01 07:12:56'),
(192, 77, '7', 0, '2018-12-01 07:30:22', '2018-12-01 07:30:22'),
(193, 77, '6', 0, '2018-12-01 07:30:22', '2018-12-01 07:30:22'),
(194, 77, '12', 0, '2018-12-01 07:30:22', '2018-12-01 07:30:22'),
(195, 77, 'NON of the above', 1, '2018-12-01 07:30:22', '2018-12-01 07:30:22'),
(196, 78, 'java', 1, '2018-12-03 08:32:37', '2018-12-03 08:32:37'),
(197, 78, 'c++', 0, '2018-12-03 08:32:37', '2018-12-03 08:32:37'),
(198, 78, 'python', 0, '2018-12-03 08:32:37', '2018-12-03 08:32:37'),
(199, 78, 'prolog', 0, '2018-12-03 08:32:37', '2018-12-03 08:32:37'),
(200, 79, 'all capital', 0, '2018-12-03 08:33:41', '2018-12-03 08:33:41'),
(201, 79, 'all small', 0, '2018-12-03 08:33:41', '2018-12-03 08:33:41'),
(202, 79, 'any', 1, '2018-12-03 08:33:41', '2018-12-03 08:33:41'),
(203, 79, 'none', 0, '2018-12-03 08:33:41', '2018-12-03 08:33:41'),
(204, 80, 'java', 1, '2018-12-03 08:40:21', '2018-12-03 08:40:21'),
(205, 80, 'c', 0, '2018-12-03 08:40:21', '2018-12-03 08:40:21'),
(206, 80, 'python', 0, '2018-12-03 08:40:21', '2018-12-03 08:40:21'),
(207, 80, 'prolog', 0, '2018-12-03 08:40:21', '2018-12-03 08:40:21'),
(208, 81, 'capital', 0, '2018-12-03 08:41:42', '2018-12-03 08:41:42'),
(209, 81, 'small', 0, '2018-12-03 08:41:42', '2018-12-03 08:41:42'),
(210, 81, 'any', 0, '2018-12-03 08:41:42', '2018-12-03 08:41:42'),
(211, 81, 'none', 0, '2018-12-03 08:41:42', '2018-12-03 08:41:42'),
(212, 82, '9', 0, '2018-12-03 08:42:25', '2018-12-03 08:42:25'),
(213, 82, '8', 0, '2018-12-03 08:42:25', '2018-12-03 08:42:25'),
(214, 82, '10', 1, '2018-12-03 08:42:25', '2018-12-03 08:42:25'),
(215, 82, '11', 0, '2018-12-03 08:42:25', '2018-12-03 08:42:25'),
(216, 83, 'True', 0, '2018-12-03 08:42:48', '2018-12-03 08:42:48'),
(217, 83, 'False', 1, '2018-12-03 08:42:48', '2018-12-03 08:42:48'),
(218, 86, 'Base Derived Base Base', 0, '2018-12-03 09:44:01', '2018-12-03 09:44:01'),
(219, 86, 'Base Derived Base Derived', 0, '2018-12-03 09:44:01', '2018-12-03 09:44:01'),
(220, 86, 'Base Base Derived Base Base', 1, '2018-12-03 09:44:01', '2018-12-03 09:44:01'),
(221, 86, 'Base Derived Derived Base', 0, '2018-12-03 09:44:01', '2018-12-03 09:44:01'),
(222, 87, 'One = 2   two = 2     three = 3;', 1, '2018-12-03 09:44:52', '2018-12-03 09:44:52'),
(223, 87, 'One = 3   two = 2     three = 1;', 0, '2018-12-03 09:44:52', '2018-12-03 09:44:52'),
(224, 87, 'One = 1   two = 1     three = 4;', 0, '2018-12-03 09:44:52', '2018-12-03 09:44:52'),
(225, 87, 'One = 2   two = 1     three = 3;', 0, '2018-12-03 09:44:52', '2018-12-03 09:44:52'),
(226, 88, '(1) Person\'s no-arg constructor  (3) Employee\'s no-arg constructor (4) Faculty\'s no-arg constructor', 0, '2018-12-03 09:50:05', '2018-12-03 09:50:05'),
(227, 88, '(1) Person\'s no-arg constructor (2) Invoke Employee’s overloaded constructor (3) Employee\'s no-arg constructor (4) Faculty\'s no-arg constructor', 0, '2018-12-03 09:50:05', '2018-12-03 09:50:05'),
(228, 88, '(4) Faculty\'s no-arg constructor', 0, '2018-12-03 09:50:05', '2018-12-03 09:50:05'),
(229, 88, 'Error', 1, '2018-12-03 09:50:05', '2018-12-03 09:50:05'),
(230, 89, '80 55 80', 0, '2018-12-03 09:52:29', '2018-12-03 09:52:29'),
(231, 89, '80 80 80', 1, '2018-12-03 09:52:29', '2018-12-03 09:52:29'),
(232, 89, '80 55 55', 0, '2018-12-03 09:52:29', '2018-12-03 09:52:29'),
(233, 89, 'Error', 0, '2018-12-03 09:52:29', '2018-12-03 09:52:29'),
(234, 90, 'True', 1, '2018-12-03 09:53:22', '2018-12-03 09:53:22'),
(235, 90, 'False', 0, '2018-12-03 09:53:22', '2018-12-03 09:53:22'),
(236, 91, 'True', 1, '2018-12-03 09:54:13', '2018-12-03 09:54:13'),
(237, 91, 'False', 0, '2018-12-03 09:54:13', '2018-12-03 09:54:13'),
(238, 92, 'One = 2   two = 1     three = 3;', 0, '2018-12-03 09:58:07', '2018-12-03 09:58:07'),
(239, 92, 'One = 1   two = 1     three = 4;', 0, '2018-12-03 09:58:07', '2018-12-03 09:58:07'),
(240, 92, 'One = 3   two = 2     three = 1;', 0, '2018-12-03 09:58:07', '2018-12-03 09:58:07'),
(241, 92, 'One = 2   two = 2     three = 3;', 1, '2018-12-03 09:58:07', '2018-12-03 09:58:07'),
(242, 93, 'الخصائص السيكولوجية', 0, '2018-12-05 14:11:20', '2018-12-05 14:11:20'),
(243, 93, 'التراكمية الكمية', 0, '2018-12-05 14:11:20', '2018-12-05 14:11:20'),
(244, 93, 'الموضوعية', 1, '2018-12-05 14:11:20', '2018-12-05 14:11:20'),
(245, 93, NULL, 0, '2018-12-05 14:11:20', '2018-12-05 14:11:20'),
(246, 94, 'االاداء العملى و النظرى', 0, '2018-12-05 14:12:01', '2018-12-05 14:12:01'),
(247, 94, 'الريف و الحضر', 0, '2018-12-05 14:12:01', '2018-12-05 14:12:01'),
(248, 94, 'الانسان و الحيوان', 1, '2018-12-05 14:12:01', '2018-12-05 14:12:01'),
(249, 94, NULL, 0, '2018-12-05 14:12:01', '2018-12-05 14:12:01'),
(250, 95, 'جالينيوس', 0, '2018-12-05 14:12:44', '2018-12-05 14:12:44'),
(251, 95, 'ابقراط', 1, '2018-12-05 14:12:44', '2018-12-05 14:12:44'),
(252, 95, 'الكميون', 0, '2018-12-05 14:12:44', '2018-12-05 14:12:44'),
(253, 95, NULL, 0, '2018-12-05 14:12:44', '2018-12-05 14:12:44'),
(254, 96, 'السياسة', 0, '2018-12-05 14:13:17', '2018-12-05 14:13:17'),
(255, 96, 'القانون', 0, '2018-12-05 14:13:17', '2018-12-05 14:13:17'),
(256, 96, 'الجمهورية', 1, '2018-12-05 14:13:17', '2018-12-05 14:13:17'),
(257, 96, NULL, 0, '2018-12-05 14:13:17', '2018-12-05 14:13:17'),
(258, 97, 'الروح', 0, '2018-12-05 14:13:51', '2018-12-05 14:13:51'),
(259, 97, 'العقل', 1, '2018-12-05 14:13:51', '2018-12-05 14:13:51'),
(260, 97, 'اللذة', 0, '2018-12-05 14:13:51', '2018-12-05 14:13:51'),
(261, 97, NULL, 0, '2018-12-05 14:13:51', '2018-12-05 14:13:51'),
(262, 98, 'التوافق', 1, '2018-12-05 14:14:29', '2018-12-05 14:14:29'),
(263, 98, 'التكيفية', 0, '2018-12-05 14:14:29', '2018-12-05 14:14:29'),
(264, 98, 'الهدف', 0, '2018-12-05 14:14:29', '2018-12-05 14:14:29'),
(265, 98, NULL, 0, '2018-12-05 14:14:29', '2018-12-05 14:14:29'),
(266, 99, 'ابقراط', 0, '2018-12-05 14:15:10', '2018-12-05 14:15:10'),
(267, 99, 'الكميون', 1, '2018-12-05 14:15:10', '2018-12-05 14:15:10'),
(268, 99, 'اكسلبيس', 0, '2018-12-05 14:15:10', '2018-12-05 14:15:10'),
(269, 99, NULL, 0, '2018-12-05 14:15:10', '2018-12-05 14:15:10'),
(270, 100, 'True', 1, '2018-12-05 14:15:36', '2018-12-05 14:15:36'),
(271, 100, 'False', 0, '2018-12-05 14:15:36', '2018-12-05 14:15:36'),
(272, 101, 'True', 0, '2018-12-05 14:15:54', '2018-12-05 14:15:54'),
(273, 101, 'False', 1, '2018-12-05 14:15:54', '2018-12-05 14:15:54'),
(274, 102, 'True', 0, '2018-12-05 14:16:15', '2018-12-05 14:16:15'),
(275, 102, 'False', 1, '2018-12-05 14:16:15', '2018-12-05 14:16:15'),
(276, 103, 'True', 0, '2018-12-05 14:16:39', '2018-12-05 14:16:39'),
(277, 103, 'False', 1, '2018-12-05 14:16:39', '2018-12-05 14:16:39'),
(278, 104, 'True', 0, '2018-12-05 14:17:00', '2018-12-05 14:17:00'),
(279, 104, 'False', 1, '2018-12-05 14:17:00', '2018-12-05 14:17:00'),
(280, 105, 'True', 1, '2018-12-05 14:17:24', '2018-12-05 14:17:24'),
(281, 105, 'False', 0, '2018-12-05 14:17:24', '2018-12-05 14:17:24'),
(282, 106, 'True', 0, '2018-12-05 14:17:48', '2018-12-05 14:17:48'),
(283, 106, 'False', 1, '2018-12-05 14:17:48', '2018-12-05 14:17:48'),
(284, 107, 'True', 0, '2018-12-05 14:18:10', '2018-12-05 14:18:10'),
(285, 107, 'False', 1, '2018-12-05 14:18:10', '2018-12-05 14:18:10'),
(286, 108, '1', 0, '2018-12-13 07:50:09', '2018-12-13 07:50:09'),
(287, 108, '2', 0, '2018-12-13 07:50:09', '2018-12-13 07:50:09'),
(288, 108, '3', 1, '2018-12-13 07:50:09', '2018-12-13 07:50:09'),
(289, 108, '4', 0, '2018-12-13 07:50:09', '2018-12-13 07:50:09'),
(290, 109, '1980', 0, '2018-12-16 09:05:00', '2018-12-16 09:05:00'),
(291, 109, '1990', 1, '2018-12-16 09:05:00', '2018-12-16 09:05:00'),
(292, 109, '1002', 0, '2018-12-16 09:05:00', '2018-12-16 09:05:00'),
(293, 109, '0225', 0, '2018-12-16 09:05:01', '2018-12-16 09:05:01'),
(294, 110, '10 bigger', 1, '2018-12-18 06:40:02', '2018-12-18 06:40:02'),
(295, 110, '15 bigger', 0, '2018-12-18 06:40:02', '2018-12-18 06:40:02'),
(296, 110, '5 bigger', 0, '2018-12-18 06:40:02', '2018-12-18 06:40:02'),
(297, 110, NULL, 0, '2018-12-18 06:40:02', '2018-12-18 06:40:02'),
(298, 111, 'invalid', 0, '2018-12-18 06:41:13', '2018-12-18 06:41:13'),
(299, 111, 'error', 0, '2018-12-18 06:41:13', '2018-12-18 06:41:13'),
(300, 111, 'valid', 1, '2018-12-18 06:41:13', '2018-12-18 06:41:13'),
(301, 111, NULL, 0, '2018-12-18 06:41:13', '2018-12-18 06:41:13'),
(302, 112, '0 1 2 3 4 5', 0, '2018-12-18 06:42:39', '2018-12-18 06:42:39'),
(303, 112, '0 1 2 3 4', 1, '2018-12-18 06:42:39', '2018-12-18 06:42:39'),
(304, 112, '1 2 3 4 5', 0, '2018-12-18 06:42:39', '2018-12-18 06:42:39'),
(305, 112, NULL, 0, '2018-12-18 06:42:39', '2018-12-18 06:42:39'),
(306, 113, '8 6 4 2 0', 0, '2018-12-18 06:43:47', '2018-12-18 06:43:47'),
(307, 113, '0 1 2 3 4', 0, '2018-12-18 06:43:47', '2018-12-18 06:43:47'),
(308, 113, '4 3 2 1 0', 1, '2018-12-18 06:43:47', '2018-12-18 06:43:47'),
(309, 113, NULL, 0, '2018-12-18 06:43:47', '2018-12-18 06:43:47'),
(310, 114, '10 bigger', 1, '2018-12-18 06:45:34', '2018-12-18 06:45:34'),
(311, 114, '15 bigger', 0, '2018-12-18 06:45:34', '2018-12-18 06:45:34'),
(312, 114, '5 bigger', 0, '2018-12-18 06:45:34', '2018-12-18 06:45:34'),
(313, 114, NULL, 0, '2018-12-18 06:45:34', '2018-12-18 06:45:34'),
(314, 115, 'invalid', 0, '2018-12-18 06:46:51', '2018-12-18 06:46:51'),
(315, 115, 'valid', 1, '2018-12-18 06:46:51', '2018-12-18 06:46:51'),
(316, 115, 'error', 0, '2018-12-18 06:46:51', '2018-12-18 06:46:51'),
(317, 115, NULL, 0, '2018-12-18 06:46:51', '2018-12-18 06:46:51'),
(318, 116, '1 2 3 4 5', 0, '2018-12-18 06:47:58', '2018-12-18 06:47:58'),
(319, 116, '0 1 2 3 4 5', 0, '2018-12-18 06:47:58', '2018-12-18 06:47:58'),
(320, 116, '0 1 2 3 4', 1, '2018-12-18 06:47:58', '2018-12-18 06:47:58'),
(321, 116, NULL, 0, '2018-12-18 06:47:58', '2018-12-18 06:47:58'),
(322, 117, '0 1 2 3 4', 0, '2018-12-18 06:48:56', '2018-12-18 06:48:56'),
(323, 117, '4 3 2 1 0', 1, '2018-12-18 06:48:56', '2018-12-18 06:48:56'),
(324, 117, '8 6 4 2 0', 0, '2018-12-18 06:48:56', '2018-12-18 06:48:56'),
(325, 117, NULL, 0, '2018-12-18 06:48:56', '2018-12-18 06:48:56'),
(326, 118, '2 4 6 8 10', 0, '2018-12-18 06:50:09', '2018-12-18 06:50:09'),
(327, 118, '1 2 3 4 5', 0, '2018-12-18 06:50:09', '2018-12-18 06:50:09'),
(328, 118, '2 4 6 8 5', 1, '2018-12-18 06:50:09', '2018-12-18 06:50:09'),
(329, 118, NULL, 0, '2018-12-18 06:50:09', '2018-12-18 06:50:09'),
(330, 119, 'equal', 1, '2018-12-18 06:50:54', '2018-12-18 06:50:54'),
(331, 119, 'not equal', 0, '2018-12-18 06:50:54', '2018-12-18 06:50:54'),
(332, 119, 'error', 0, '2018-12-18 06:50:54', '2018-12-18 06:50:54'),
(333, 119, NULL, 0, '2018-12-18 06:50:54', '2018-12-18 06:50:54'),
(334, 120, '55', 0, '2018-12-18 06:55:37', '2018-12-18 06:55:37'),
(335, 120, '56', 1, '2018-12-18 06:55:37', '2018-12-18 06:55:37'),
(336, 120, '65', 0, '2018-12-18 06:55:37', '2018-12-18 06:55:37'),
(337, 120, NULL, 0, '2018-12-18 06:55:37', '2018-12-18 06:55:37'),
(338, 121, '-2', 1, '2018-12-18 06:56:21', '2018-12-18 06:56:21'),
(339, 121, '10', 0, '2018-12-18 06:56:21', '2018-12-18 06:56:21'),
(340, 121, '3', 0, '2018-12-18 06:56:21', '2018-12-18 06:56:21'),
(341, 121, NULL, 0, '2018-12-18 06:56:21', '2018-12-18 06:56:21'),
(342, 122, '75', 0, '2018-12-18 06:57:22', '2018-12-18 06:57:22'),
(343, 122, '84', 1, '2018-12-18 06:57:22', '2018-12-18 06:57:22'),
(344, 122, '48', 0, '2018-12-18 06:57:22', '2018-12-18 06:57:22'),
(345, 122, NULL, 0, '2018-12-18 06:57:22', '2018-12-18 06:57:22'),
(346, 123, '5', 0, '2018-12-18 06:59:51', '2018-12-18 06:59:51'),
(347, 123, '7', 0, '2018-12-18 06:59:51', '2018-12-18 06:59:51'),
(348, 123, '9', 1, '2018-12-18 06:59:51', '2018-12-18 06:59:51'),
(349, 123, '6', 0, '2018-12-18 06:59:51', '2018-12-18 06:59:51'),
(350, 124, 'bye', 1, '2018-12-18 07:00:46', '2018-12-18 07:00:46'),
(351, 124, 'nice', 0, '2018-12-18 07:00:46', '2018-12-18 07:00:46'),
(352, 124, 'bad', 0, '2018-12-18 07:00:46', '2018-12-18 07:00:46'),
(353, 124, NULL, 0, '2018-12-18 07:00:46', '2018-12-18 07:00:46'),
(354, 125, 'the value is two', 0, '2018-12-18 07:05:32', '2018-12-18 07:05:32'),
(355, 125, 'the value is two the value is three', 1, '2018-12-18 07:05:32', '2018-12-18 07:05:32'),
(356, 125, 'the value is one the value is two', 0, '2018-12-18 07:05:32', '2018-12-18 07:05:32'),
(357, 125, NULL, 0, '2018-12-18 07:05:32', '2018-12-18 07:05:32'),
(358, 126, '110 101', 1, '2018-12-18 07:06:47', '2018-12-18 07:06:47'),
(359, 126, '109 100', 0, '2018-12-18 07:06:47', '2018-12-18 07:06:47'),
(360, 126, '110 100', 0, '2018-12-18 07:06:47', '2018-12-18 07:06:47'),
(361, 126, NULL, 0, '2018-12-18 07:06:47', '2018-12-18 07:06:47'),
(362, 127, '1000 99', 0, '2018-12-18 07:08:19', '2018-12-18 07:08:19'),
(363, 127, '990 99', 0, '2018-12-18 07:08:19', '2018-12-18 07:08:19'),
(364, 127, '990 100', 1, '2018-12-18 07:08:19', '2018-12-18 07:08:19'),
(365, 127, NULL, 0, '2018-12-18 07:08:19', '2018-12-18 07:08:19'),
(366, 128, '10 10', 0, '2018-12-18 07:09:25', '2018-12-18 07:09:25'),
(367, 128, '9 11', 1, '2018-12-18 07:09:25', '2018-12-18 07:09:25'),
(368, 128, '9 10', 0, '2018-12-18 07:09:25', '2018-12-18 07:09:25'),
(369, 128, NULL, 0, '2018-12-18 07:09:25', '2018-12-18 07:09:25'),
(370, 129, 'java', 0, '2019-01-05 04:28:46', '2019-01-05 04:28:46'),
(371, 129, 'c', 0, '2019-01-05 04:28:46', '2019-01-05 04:28:46'),
(372, 129, 'prolog', 0, '2019-01-05 04:28:46', '2019-01-05 04:28:46'),
(373, 129, 'python', 0, '2019-01-05 04:28:46', '2019-01-05 04:28:46'),
(374, 130, 'java', 0, '2019-01-05 04:32:50', '2019-01-05 04:32:50'),
(375, 130, 'c', 0, '2019-01-05 04:32:50', '2019-01-05 04:32:50'),
(376, 130, 'prolog', 0, '2019-01-05 04:32:50', '2019-01-05 04:32:50'),
(377, 130, 'python', 0, '2019-01-05 04:32:50', '2019-01-05 04:32:50'),
(378, 131, 'True', 1, '2019-01-05 04:33:53', '2019-01-05 04:33:53'),
(379, 131, 'False', 0, '2019-01-05 04:33:54', '2019-01-05 04:33:54'),
(380, 132, 'cvbcx', NULL, '2019-01-05 04:37:15', '2019-01-05 04:37:15'),
(381, 132, 'cxvbcxv', NULL, '2019-01-05 04:37:15', '2019-01-05 04:37:15'),
(382, 133, 'True', 1, '2019-01-06 09:43:26', '2019-01-06 09:43:26'),
(383, 133, 'False', 0, '2019-01-06 09:43:26', '2019-01-06 09:43:26'),
(384, 134, 'True', 1, '2019-01-06 09:44:32', '2019-01-06 09:44:32'),
(385, 134, 'False', 0, '2019-01-06 09:44:32', '2019-01-06 09:44:32'),
(386, 135, 'True', 1, '2019-01-06 12:13:54', '2019-01-06 12:13:54'),
(387, 135, 'False', 0, '2019-01-06 12:13:54', '2019-01-06 12:13:54'),
(388, 136, 'm,', 0, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(389, 136, 'j', 0, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(390, 136, 'kj', 0, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(391, 136, 'm', 1, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(392, 137, 'True', 1, '2019-01-06 12:31:30', '2019-01-06 12:31:30'),
(393, 137, 'False', 0, '2019-01-06 12:31:30', '2019-01-06 12:31:30'),
(394, 138, 'True', 1, '2019-01-06 12:32:22', '2019-01-06 12:32:22'),
(395, 138, 'False', 0, '2019-01-06 12:32:22', '2019-01-06 12:32:22'),
(396, 139, 'For I For you', 0, '2019-01-20 15:28:47', '2019-01-20 15:28:47'),
(397, 139, 'First In First Out', 1, '2019-01-20 15:28:47', '2019-01-20 15:28:47'),
(398, 139, 'Flay In Flay Out', 0, '2019-01-20 15:28:47', '2019-01-20 15:28:47'),
(399, 139, 'Fake In Fake Out', 0, '2019-01-20 15:28:47', '2019-01-20 15:28:47'),
(412, 142, 'True', 0, '2019-01-21 07:53:35', '2019-01-21 07:53:35'),
(413, 142, 'False', 1, '2019-01-21 07:53:35', '2019-01-21 07:53:35'),
(414, 143, 'True', 0, '2019-01-21 07:54:08', '2019-01-21 07:54:08'),
(415, 143, 'False', 1, '2019-01-21 07:54:08', '2019-01-21 07:54:08'),
(416, 144, 'True', 0, '2019-01-21 07:54:34', '2019-01-21 07:54:34'),
(417, 144, 'False', 1, '2019-01-21 07:54:35', '2019-01-21 07:54:35'),
(418, 145, 'True', 0, '2019-01-21 07:55:02', '2019-01-21 07:55:02'),
(419, 145, 'False', 1, '2019-01-21 07:55:02', '2019-01-21 07:55:02'),
(420, 146, 'True', 1, '2019-01-21 07:55:30', '2019-01-21 07:55:30'),
(421, 146, 'False', 0, '2019-01-21 07:55:30', '2019-01-21 07:55:30'),
(422, 147, 'True', 1, '2019-01-21 07:55:53', '2019-01-21 07:55:53'),
(423, 147, 'False', 0, '2019-01-21 07:55:53', '2019-01-21 07:55:53'),
(424, 148, 'True', 1, '2019-01-21 07:57:26', '2019-01-21 07:57:26'),
(425, 148, 'False', 0, '2019-01-21 07:57:26', '2019-01-21 07:57:26'),
(426, 149, 'True', 0, '2019-01-21 08:01:59', '2019-01-21 08:01:59'),
(427, 149, 'False', 1, '2019-01-21 08:01:59', '2019-01-21 08:01:59'),
(428, 150, 'True', 1, '2019-01-21 08:04:06', '2019-01-21 08:04:06'),
(429, 150, 'False', 0, '2019-01-21 08:04:07', '2019-01-21 08:04:07'),
(434, 151, 'Stack', 1, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(435, 151, 'Queue', 0, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(436, 151, 'List', 0, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(437, 151, 'Array', 0, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(438, 152, 'List', 0, '2019-01-21 08:08:44', '2019-01-21 08:08:44'),
(439, 152, 'Array', 0, '2019-01-21 08:08:44', '2019-01-21 08:08:44'),
(440, 152, 'Queue', 1, '2019-01-21 08:08:44', '2019-01-21 08:08:44'),
(441, 152, 'Stack', 0, '2019-01-21 08:08:44', '2019-01-21 08:08:44'),
(442, 153, 'List', 0, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(443, 153, 'Array', 0, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(444, 153, 'Queue', 1, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(445, 153, 'Stack', 0, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(446, 154, 'n lg n', 1, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(447, 154, 'n', 0, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(448, 154, 'lg n', 0, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(449, 154, 'lg lg n', 0, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(450, 155, 'n', 0, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(451, 155, 'n lg n', 1, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(452, 155, 'n^2', 0, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(453, 155, 'lg n', 0, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(454, 140, 'Find In Find Out', 0, '2019-01-21 08:29:27', '2019-01-21 08:29:27'),
(455, 140, 'First In First Out', 1, '2019-01-21 08:29:27', '2019-01-21 08:29:27'),
(456, 140, 'Flay In Flay Out', 0, '2019-01-21 08:29:27', '2019-01-21 08:29:27'),
(457, 140, 'Fade In Fade Out', 0, '2019-01-21 08:29:27', '2019-01-21 08:29:27'),
(458, 141, 'Long In First Out', 0, '2019-01-21 08:29:38', '2019-01-21 08:29:38'),
(459, 141, 'Lite In Fat Out', 0, '2019-01-21 08:29:38', '2019-01-21 08:29:38'),
(460, 141, 'Last In First Out', 1, '2019-01-21 08:29:38', '2019-01-21 08:29:38'),
(461, 141, 'Line In Font Out', 0, '2019-01-21 08:29:38', '2019-01-21 08:29:38'),
(462, 156, 'equal to', 0, '2019-01-21 08:32:42', '2019-01-21 08:32:42'),
(463, 156, 'less than', 1, '2019-01-21 08:32:42', '2019-01-21 08:32:42'),
(464, 156, 'more than', 0, '2019-01-21 08:32:42', '2019-01-21 08:32:42'),
(465, 156, 'not compared', 0, '2019-01-21 08:32:42', '2019-01-21 08:32:42'),
(466, 157, 'equal to', 0, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(467, 157, 'less than', 1, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(468, 157, 'more than', 0, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(469, 157, 'not compared', 0, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(470, 158, 'True', 0, '2019-01-21 08:35:10', '2019-01-21 08:35:10'),
(471, 158, 'False', 1, '2019-01-21 08:35:10', '2019-01-21 08:35:10'),
(472, 159, NULL, 0, '2019-01-21 10:52:09', '2019-01-21 10:52:09'),
(473, 159, NULL, 0, '2019-01-21 10:52:09', '2019-01-21 10:52:09'),
(474, 159, NULL, 0, '2019-01-21 10:52:09', '2019-01-21 10:52:09'),
(475, 159, NULL, 0, '2019-01-21 10:52:09', '2019-01-21 10:52:09'),
(476, 160, '1950', 1, '2019-01-27 10:40:03', '2019-01-27 10:40:03'),
(477, 160, '2000', 0, '2019-01-27 10:40:03', '2019-01-27 10:40:03'),
(478, 160, '1960', 0, '2019-01-27 10:40:03', '2019-01-27 10:40:03'),
(479, 160, '1900', 0, '2019-01-27 10:40:03', '2019-01-27 10:40:03'),
(480, 161, 'True', 0, '2019-01-27 10:44:24', '2019-01-27 10:44:24'),
(481, 161, 'False', 1, '2019-01-27 10:44:24', '2019-01-27 10:44:24'),
(482, 162, '1950', 0, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(483, 162, '2000', 0, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(484, 162, '1980', 1, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(485, 162, '1600', 0, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(486, 163, 'True', 0, '2019-02-04 08:01:29', '2019-02-04 08:01:29'),
(487, 163, 'False', 1, '2019-02-04 08:01:29', '2019-02-04 08:01:29'),
(488, 164, 'True', 0, '2019-02-06 04:57:21', '2019-02-06 04:57:21'),
(489, 164, 'False', 1, '2019-02-06 04:57:21', '2019-02-06 04:57:21'),
(490, 165, 'True', 0, '2019-02-06 05:02:30', '2019-02-06 05:02:30'),
(491, 165, 'False', 1, '2019-02-06 05:02:30', '2019-02-06 05:02:30'),
(492, 166, 'True', 0, '2019-02-13 11:52:47', '2019-02-13 11:52:47'),
(493, 166, 'False', 1, '2019-02-13 11:52:47', '2019-02-13 11:52:47'),
(494, 167, 'True', 1, '2019-02-13 11:53:21', '2019-02-13 11:53:21'),
(495, 167, 'False', 0, '2019-02-13 11:53:22', '2019-02-13 11:53:22'),
(496, 168, 'True', 1, '2019-02-13 11:58:02', '2019-02-13 11:58:02'),
(497, 168, 'False', 0, '2019-02-13 11:58:02', '2019-02-13 11:58:02'),
(498, 169, 'True', 0, '2019-02-13 12:12:33', '2019-02-13 12:12:33'),
(499, 169, 'False', 1, '2019-02-13 12:12:33', '2019-02-13 12:12:33'),
(500, 170, 'True', 0, '2019-02-13 12:14:43', '2019-02-13 12:14:43'),
(501, 170, 'False', 1, '2019-02-13 12:14:43', '2019-02-13 12:14:43'),
(502, 171, 'True', 0, '2019-02-13 12:16:02', '2019-02-13 12:16:02'),
(503, 171, 'False', 1, '2019-02-13 12:16:02', '2019-02-13 12:16:02'),
(504, 172, 'True', 0, '2019-02-13 12:16:36', '2019-02-13 12:16:36'),
(505, 172, 'False', 1, '2019-02-13 12:16:36', '2019-02-13 12:16:36'),
(506, 173, 'True', 0, '2019-02-13 12:18:37', '2019-02-13 12:18:37'),
(507, 173, 'False', 1, '2019-02-13 12:18:37', '2019-02-13 12:18:37'),
(508, 174, 'True', 1, '2019-02-13 12:19:48', '2019-02-13 12:19:48'),
(509, 174, 'False', 0, '2019-02-13 12:19:48', '2019-02-13 12:19:48'),
(510, 175, 'True', 1, '2019-02-13 12:21:54', '2019-02-13 12:21:54'),
(511, 175, 'False', 0, '2019-02-13 12:21:54', '2019-02-13 12:21:54'),
(512, 176, 'True', 0, '2019-02-13 12:23:06', '2019-02-13 12:23:06'),
(513, 176, 'False', 1, '2019-02-13 12:23:06', '2019-02-13 12:23:06'),
(514, 177, 'True', 1, '2019-02-13 12:23:55', '2019-02-13 12:23:55'),
(515, 177, 'False', 0, '2019-02-13 12:23:55', '2019-02-13 12:23:55'),
(516, 178, 'True', 1, '2019-02-13 12:24:43', '2019-02-13 12:24:43'),
(517, 178, 'False', 0, '2019-02-13 12:24:43', '2019-02-13 12:24:43'),
(518, 179, 'True', 1, '2019-02-13 12:25:30', '2019-02-13 12:25:30'),
(519, 179, 'False', 0, '2019-02-13 12:25:30', '2019-02-13 12:25:30'),
(520, 180, 'True', 0, '2019-02-13 12:26:29', '2019-02-13 12:26:29'),
(521, 180, 'False', 1, '2019-02-13 12:26:29', '2019-02-13 12:26:29'),
(522, 181, 'True', 0, '2019-02-13 12:27:27', '2019-02-13 12:27:27'),
(523, 181, 'False', 1, '2019-02-13 12:27:27', '2019-02-13 12:27:27'),
(524, 182, 'True', 0, '2019-02-13 12:28:44', '2019-02-13 12:28:44'),
(525, 182, 'False', 1, '2019-02-13 12:28:44', '2019-02-13 12:28:44'),
(526, 183, 'True', 1, '2019-02-13 12:29:29', '2019-02-13 12:29:29'),
(527, 183, 'False', 0, '2019-02-13 12:29:30', '2019-02-13 12:29:30'),
(528, 184, 'True', 0, '2019-02-13 12:31:06', '2019-02-13 12:31:06'),
(529, 184, 'False', 1, '2019-02-13 12:31:06', '2019-02-13 12:31:06'),
(530, 185, 'True', 1, '2019-02-13 12:31:56', '2019-02-13 12:31:56'),
(531, 185, 'False', 0, '2019-02-13 12:31:56', '2019-02-13 12:31:56'),
(532, 186, 'True', 1, '2019-02-13 12:32:45', '2019-02-13 12:32:45'),
(533, 186, 'False', 0, '2019-02-13 12:32:45', '2019-02-13 12:32:45'),
(534, 187, 'True', 1, '2019-02-13 12:33:31', '2019-02-13 12:33:31'),
(535, 187, 'False', 0, '2019-02-13 12:33:31', '2019-02-13 12:33:31'),
(536, 188, 'True', 1, '2019-02-13 12:36:17', '2019-02-13 12:36:17'),
(537, 188, 'False', 0, '2019-02-13 12:36:17', '2019-02-13 12:36:17'),
(538, 189, 'True', 1, '2019-02-13 12:37:08', '2019-02-13 12:37:08'),
(539, 189, 'False', 0, '2019-02-13 12:37:08', '2019-02-13 12:37:08'),
(540, 190, 'True', 1, '2019-02-13 12:38:10', '2019-02-13 12:38:10'),
(541, 190, 'False', 0, '2019-02-13 12:38:10', '2019-02-13 12:38:10'),
(542, 191, 'True', 0, '2019-02-13 12:38:56', '2019-02-13 12:38:56'),
(543, 191, 'False', 1, '2019-02-13 12:38:56', '2019-02-13 12:38:56'),
(544, 192, 'True', 1, '2019-02-13 12:39:46', '2019-02-13 12:39:46'),
(545, 192, 'False', 0, '2019-02-13 12:39:46', '2019-02-13 12:39:46'),
(546, 193, 'True', 1, '2019-02-15 15:41:34', '2019-02-15 15:41:34'),
(547, 193, 'False', 0, '2019-02-15 15:41:34', '2019-02-15 15:41:34'),
(548, 194, 'True', 1, '2019-02-15 16:16:53', '2019-02-15 16:16:53'),
(549, 194, 'False', 0, '2019-02-15 16:16:53', '2019-02-15 16:16:53'),
(550, 195, 'True', 0, '2019-02-18 15:04:26', '2019-02-18 15:04:26'),
(551, 195, 'False', 1, '2019-02-18 15:04:26', '2019-02-18 15:04:26'),
(552, 195, 'True', 0, '2019-02-20 05:14:16', '2019-02-20 05:14:16'),
(553, 195, 'False', 1, '2019-02-20 05:14:16', '2019-02-20 05:14:16'),
(554, 196, 'True', 1, '2019-02-20 05:15:26', '2019-02-20 05:15:26'),
(555, 196, 'False', 0, '2019-02-20 05:15:26', '2019-02-20 05:15:26'),
(556, 197, 'True', 1, '2019-02-20 05:16:25', '2019-02-20 05:16:25'),
(557, 197, 'False', 0, '2019-02-20 05:16:25', '2019-02-20 05:16:25'),
(558, 198, 'True', 1, '2019-02-20 05:17:15', '2019-02-20 05:17:15'),
(559, 198, 'False', 0, '2019-02-20 05:17:15', '2019-02-20 05:17:15'),
(560, 199, 'True', 0, '2019-02-20 08:19:00', '2019-02-20 08:19:00'),
(561, 199, 'False', 1, '2019-02-20 08:19:00', '2019-02-20 08:19:00'),
(562, 200, 'True', 0, '2019-02-20 08:19:49', '2019-02-20 08:19:49'),
(563, 200, 'False', 1, '2019-02-20 08:19:49', '2019-02-20 08:19:49'),
(564, 201, 'True', 1, '2019-02-20 08:20:33', '2019-02-20 08:20:33'),
(565, 201, 'False', 0, '2019-02-20 08:20:33', '2019-02-20 08:20:33'),
(566, 202, 'True', 1, '2019-02-20 08:21:23', '2019-02-20 08:21:23'),
(567, 202, 'False', 0, '2019-02-20 08:21:23', '2019-02-20 08:21:23'),
(568, 203, 'True', 0, '2019-02-20 08:23:04', '2019-02-20 08:23:04'),
(569, 203, 'False', 1, '2019-02-20 08:23:04', '2019-02-20 08:23:04'),
(570, 204, 'True', 1, '2019-02-20 08:23:55', '2019-02-20 08:23:55'),
(571, 204, 'False', 0, '2019-02-20 08:23:55', '2019-02-20 08:23:55'),
(572, 205, 'True', 1, '2019-02-20 08:24:33', '2019-02-20 08:24:33'),
(573, 205, 'False', 0, '2019-02-20 08:24:33', '2019-02-20 08:24:33'),
(574, 206, 'True', 1, '2019-02-20 08:25:13', '2019-02-20 08:25:13'),
(575, 206, 'False', 0, '2019-02-20 08:25:13', '2019-02-20 08:25:13'),
(576, 207, 'True', 0, '2019-02-20 08:25:58', '2019-02-20 08:25:58'),
(577, 207, 'False', 1, '2019-02-20 08:25:58', '2019-02-20 08:25:58'),
(578, 208, 'True', 0, '2019-02-20 08:26:32', '2019-02-20 08:26:32'),
(579, 208, 'False', 1, '2019-02-20 08:26:32', '2019-02-20 08:26:32'),
(580, 209, 'True', 0, '2019-02-20 08:27:18', '2019-02-20 08:27:18'),
(581, 209, 'False', 1, '2019-02-20 08:27:18', '2019-02-20 08:27:18'),
(582, 210, 'True', 1, '2019-02-20 08:27:57', '2019-02-20 08:27:57'),
(583, 210, 'False', 0, '2019-02-20 08:27:57', '2019-02-20 08:27:57'),
(584, 211, 'True', 0, '2019-02-20 08:28:39', '2019-02-20 08:28:39'),
(585, 211, 'False', 1, '2019-02-20 08:28:39', '2019-02-20 08:28:39'),
(586, 212, 'True', 1, '2019-02-20 08:29:19', '2019-02-20 08:29:19'),
(587, 212, 'False', 0, '2019-02-20 08:29:19', '2019-02-20 08:29:19'),
(588, 213, 'True', 1, '2019-02-20 08:30:02', '2019-02-20 08:30:02'),
(589, 213, 'False', 0, '2019-02-20 08:30:02', '2019-02-20 08:30:02'),
(590, 214, 'True', 1, '2019-02-20 08:30:37', '2019-02-20 08:30:37'),
(591, 214, 'False', 0, '2019-02-20 08:30:37', '2019-02-20 08:30:37'),
(592, 215, 'True', 1, '2019-02-20 08:31:20', '2019-02-20 08:31:20'),
(593, 215, 'False', 0, '2019-02-20 08:31:20', '2019-02-20 08:31:20'),
(594, 216, 'True', 1, '2019-02-20 08:31:53', '2019-02-20 08:31:53'),
(595, 216, 'False', 0, '2019-02-20 08:31:54', '2019-02-20 08:31:54'),
(596, 217, 'True', 1, '2019-02-20 08:32:46', '2019-02-20 08:32:46'),
(597, 217, 'False', 0, '2019-02-20 08:32:46', '2019-02-20 08:32:46'),
(598, 218, 'True', 0, '2019-02-20 08:33:26', '2019-02-20 08:33:26'),
(599, 218, 'False', 1, '2019-02-20 08:33:26', '2019-02-20 08:33:26'),
(600, 219, 'True', 1, '2019-02-20 08:34:10', '2019-02-20 08:34:10'),
(601, 219, 'False', 0, '2019-02-20 08:34:10', '2019-02-20 08:34:10'),
(602, 220, 'True', 0, '2019-02-20 08:34:51', '2019-02-20 08:34:51'),
(603, 220, 'False', 1, '2019-02-20 08:34:51', '2019-02-20 08:34:51'),
(604, 221, 'True', 1, '2019-02-20 08:35:28', '2019-02-20 08:35:28'),
(605, 221, 'False', 0, '2019-02-20 08:35:28', '2019-02-20 08:35:28'),
(606, 222, 'True', 1, '2019-02-20 08:36:05', '2019-02-20 08:36:05'),
(607, 222, 'False', 0, '2019-02-20 08:36:05', '2019-02-20 08:36:05'),
(608, 223, 'True', 1, '2019-02-20 08:36:38', '2019-02-20 08:36:38'),
(609, 223, 'False', 0, '2019-02-20 08:36:38', '2019-02-20 08:36:38'),
(610, 224, 'True', 1, '2019-02-20 08:37:11', '2019-02-20 08:37:11'),
(611, 224, 'False', 0, '2019-02-20 08:37:11', '2019-02-20 08:37:11'),
(612, 225, 'True', 0, '2019-02-20 08:38:01', '2019-02-20 08:38:01'),
(613, 225, 'False', 1, '2019-02-20 08:38:01', '2019-02-20 08:38:01'),
(614, 226, 'True', 0, '2019-02-20 08:38:36', '2019-02-20 08:38:36'),
(615, 226, 'False', 1, '2019-02-20 08:38:36', '2019-02-20 08:38:36'),
(616, 227, 'True', 1, '2019-02-20 08:39:07', '2019-02-20 08:39:07'),
(617, 227, 'False', 0, '2019-02-20 08:39:07', '2019-02-20 08:39:07'),
(618, 228, 'True', 1, '2019-02-20 08:39:49', '2019-02-20 08:39:49'),
(619, 228, 'False', 0, '2019-02-20 08:39:49', '2019-02-20 08:39:49'),
(620, 229, 'أ‌-	زيادة مساحة الضربة', 0, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(621, 229, 'ب‌-	زيادة قوة الضربة', 0, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(622, 229, 'ج- توجيه الكرة لملعب الفريق المنافس', 0, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(623, 229, 'د-كل ما سبق', 0, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(624, 230, 'أ‌-	يجيد الضرب في جميع المراكز الأمامية', 0, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(625, 230, 'ب‌-	التحكم في الضرب من المنطقة الأمامية.', 0, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(626, 230, 'ج‌-	إتقان أداء أكثر أنواع ضربات الهجوم', 0, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(627, 230, 'د‌-	كل ماسبق', 0, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(628, 231, 'أ‌-	1964م', 1, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(629, 231, 'ب‌-	1946م', 0, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(630, 231, '1850م', 0, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(631, 231, 'د- 1940م', 0, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(632, 232, 'أ‌-	الارسال', 1, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(633, 232, 'ب‌-	الضرب الساحق', 0, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(634, 232, 'ج- التمرير', 0, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(635, 232, 'د- كل ماسبق', 0, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(636, 233, 'أ‌-	مهارة دفاعية', 1, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(637, 233, 'ب‌-	هجومية.', 0, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(638, 233, 'ج- وسطية', 0, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(639, 233, 'د- كل ماسبق.', 0, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(640, 234, 'أ‌-	الدفاع العميق', 0, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(641, 234, 'ب‌-	الدفاع المتوسط', 0, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(642, 234, 'ج- الدفاع العالي', 0, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(643, 234, 'د- الدفاع باليدين من الوقوف', 1, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(644, 235, 'أ‌-	تبديل اللاعبين', 0, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(645, 235, 'ب‌-	التغطية', 0, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(646, 235, 'ج- سرعة اللعب', 0, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(647, 235, 'د- كل ما سبق', 1, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(648, 236, 'أ‌-	الإرسال.', 0, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(649, 236, 'ب‌-	الدفاع.', 0, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(650, 236, '.                         ج- الصد.', 0, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(651, 236, 'د- كل ماسبق', 1, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(652, 237, 'أ-2', 0, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(653, 237, 'ب- 3', 0, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(654, 237, 'ج- 4', 0, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(655, 237, 'د- كل ما سبق', 1, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(656, 238, 'أ‌-	النفسية والعقلية', 0, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(657, 238, 'ب‌-	النفس حركى', 0, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(658, 238, 'ج- الذهنية و الحركية', 1, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(659, 238, 'د- الاجتماعية', 0, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(660, 239, 'أ‌-	التحرك بخطوات أمامية وليس جانبية.', 0, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(661, 239, 'ب‌-	عدم دقة التوقيت مع الوثب واغماض العينين لحظة صد الكرة .', 0, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(662, 239, 'ج-تصادم اللاعبين القائمين بعملية الصد', 0, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(663, 239, 'د‌-	كل ما سبق.', 1, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(664, 240, 'أ‌-	A', 0, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(665, 240, 'ب-  D', 0, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(666, 240, 'ج-C', 0, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(667, 240, 'د- W', 1, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(668, 241, 'مركز2', 0, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(669, 241, 'ب‌-	مركز6', 1, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(670, 241, 'ج- مركز 5', 0, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(671, 241, 'د- مركز4', 0, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(672, 242, 'أ‌-	أسلوب حل المشكلات', 0, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(673, 242, 'ب‌-	أسلوب الاكتشاف', 0, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(674, 242, 'ج- التعلم التعاوني', 0, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(675, 242, '.                    د-أسلوب المهمة', 1, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(676, 243, 'أ‌-	فردى', 1, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(677, 243, 'ب‌-	ثنائي', 0, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(678, 243, 'ج- جماعى', 0, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(679, 243, 'د- ثلاثي', 0, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(680, 244, 'أ‌-	التعلم التبادلي', 1, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(681, 244, 'ب‌-	أسلوب المهمة', 0, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(682, 244, 'ج-حل المشكلات', 0, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(683, 244, '.                         د- أسلوب الاكتشاف', 0, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(684, 245, 'أ‌-	الإرسال- الاستقبال- الضرب الساحق –الدفاع عن الملعب – حائط الصد', 0, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(685, 245, 'ب‌-	 الإرسال- الاستقبال- الإعداد- الضرب الساحق- الصد- الدفاع عن الملعب.', 0, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(686, 245, 'ج-الإرسال من أعلى –التمريرمن اعلى- التمريرمن أسفل- الضرب الساحق', 0, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(687, 245, NULL, 0, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(688, 246, '(4-2)-أ', 0, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(689, 246, '(5-3)-ب', 1, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(690, 246, '(4-3)-ج', 0, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(691, 246, '(2-1)-د', 0, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(692, 247, NULL, NULL, '2019-02-20 10:28:32', '2019-02-20 10:28:32'),
(693, 247, NULL, NULL, '2019-02-20 10:28:32', '2019-02-20 10:28:32'),
(694, 248, NULL, 0, '2019-02-20 10:28:46', '2019-02-20 10:28:46'),
(695, 248, NULL, 0, '2019-02-20 10:28:46', '2019-02-20 10:28:46'),
(696, 248, NULL, 0, '2019-02-20 10:28:46', '2019-02-20 10:28:46'),
(697, 248, NULL, 0, '2019-02-20 10:28:46', '2019-02-20 10:28:46'),
(698, 249, 'مفتوحة', NULL, '2019-02-20 10:32:03', '2019-02-20 10:32:03'),
(699, 249, 'مجوفة', NULL, '2019-02-20 10:32:03', '2019-02-20 10:32:03'),
(700, 250, 'مفتوحة', NULL, '2019-02-20 10:34:09', '2019-02-20 10:34:09'),
(701, 250, 'مجوفة', NULL, '2019-02-20 10:34:09', '2019-02-20 10:34:09'),
(702, 251, 'أ-الإرسال', 0, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(703, 251, 'ب-الدفاع عن الملعب', 0, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(704, 251, 'ج-الصد', 1, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(705, 251, '.د-الضربة الهجومية', 0, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(706, 252, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:38:15', '2019-02-20 10:38:15'),
(707, 252, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:38:16', '2019-02-20 10:38:16'),
(708, 252, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:38:16', '2019-02-20 10:38:16'),
(709, 252, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:38:16', '2019-02-20 10:38:16'),
(710, 253, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:38:34', '2019-02-20 10:38:34'),
(711, 253, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:38:34', '2019-02-20 10:38:34'),
(712, 253, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:38:34', '2019-02-20 10:38:34'),
(713, 253, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:38:34', '2019-02-20 10:38:34'),
(714, 254, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:38:49', '2019-02-20 10:38:49'),
(715, 254, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:38:49', '2019-02-20 10:38:49'),
(716, 254, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:38:49', '2019-02-20 10:38:49'),
(717, 254, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:38:49', '2019-02-20 10:38:49'),
(718, 255, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:38:50', '2019-02-20 10:38:50'),
(719, 255, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:38:50', '2019-02-20 10:38:50'),
(720, 255, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:38:50', '2019-02-20 10:38:50'),
(721, 255, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:38:50', '2019-02-20 10:38:50'),
(722, 256, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:38:58', '2019-02-20 10:38:58'),
(723, 256, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:38:58', '2019-02-20 10:38:58'),
(724, 256, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:38:58', '2019-02-20 10:38:58'),
(725, 256, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:38:58', '2019-02-20 10:38:58'),
(726, 257, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:14', '2019-02-20 10:39:14'),
(727, 257, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:14', '2019-02-20 10:39:14'),
(728, 257, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:14', '2019-02-20 10:39:14'),
(729, 257, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:14', '2019-02-20 10:39:14'),
(730, 258, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:29', '2019-02-20 10:39:29'),
(731, 258, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:29', '2019-02-20 10:39:29');
INSERT INTO `question_choices` (`id`, `QUESTION_ID`, `QUESTION_CHOICE_TEXT`, `QUESTION_CHOICE_ISCORRECT`, `created_at`, `updated_at`) VALUES
(732, 258, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:29', '2019-02-20 10:39:29'),
(733, 258, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:29', '2019-02-20 10:39:29'),
(734, 259, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(735, 259, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(736, 259, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(737, 259, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(738, 260, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(739, 260, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(740, 261, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(741, 260, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(742, 261, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(743, 260, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(744, 261, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(745, 261, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(746, 262, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(747, 262, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(748, 262, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(749, 262, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(750, 263, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(751, 263, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(752, 263, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(753, 263, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(754, 264, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(755, 264, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(756, 264, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(757, 264, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(758, 265, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(759, 265, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(760, 265, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(761, 265, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(762, 266, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(763, 266, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(764, 266, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(765, 266, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(766, 267, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(767, 267, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(768, 267, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(769, 267, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(770, 268, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(771, 268, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(772, 268, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(773, 268, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(774, 269, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(775, 269, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(776, 269, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(777, 269, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(778, 270, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(779, 270, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(780, 270, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(781, 270, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(782, 271, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(783, 271, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(784, 271, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(785, 271, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(786, 272, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(787, 272, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(788, 272, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(789, 272, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(790, 273, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(791, 273, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(792, 273, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(793, 273, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(794, 274, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(795, 274, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(796, 274, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(797, 274, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(798, 275, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(799, 275, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(800, 275, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(801, 275, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(802, 276, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(803, 276, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(804, 276, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(805, 276, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(806, 277, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(807, 277, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(808, 277, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(809, 277, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(810, 278, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(811, 278, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(812, 278, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(813, 279, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(814, 278, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(815, 279, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(816, 279, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(817, 280, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(818, 279, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(819, 280, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(820, 280, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(821, 280, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(822, 281, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(823, 281, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(824, 281, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(825, 281, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(826, 282, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(827, 282, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(828, 282, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(829, 282, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(830, 283, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(831, 283, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(832, 283, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(833, 283, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(834, 284, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:43:36', '2019-02-20 10:43:36'),
(835, 284, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:43:36', '2019-02-20 10:43:36'),
(836, 284, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:43:36', '2019-02-20 10:43:36'),
(837, 284, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:43:36', '2019-02-20 10:43:36'),
(838, 285, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:43:38', '2019-02-20 10:43:38'),
(839, 285, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:43:38', '2019-02-20 10:43:38'),
(840, 285, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:43:38', '2019-02-20 10:43:38'),
(841, 285, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:43:38', '2019-02-20 10:43:38'),
(842, 286, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:43:41', '2019-02-20 10:43:41'),
(843, 286, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:43:41', '2019-02-20 10:43:41'),
(844, 286, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:43:41', '2019-02-20 10:43:41'),
(845, 286, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:43:41', '2019-02-20 10:43:41'),
(846, 287, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:43:42', '2019-02-20 10:43:42'),
(847, 287, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:43:42', '2019-02-20 10:43:42'),
(848, 287, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:43:42', '2019-02-20 10:43:42'),
(849, 287, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:43:42', '2019-02-20 10:43:42'),
(850, 288, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:43:58', '2019-02-20 10:43:58'),
(851, 288, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:43:58', '2019-02-20 10:43:58'),
(852, 288, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:43:58', '2019-02-20 10:43:58'),
(853, 288, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:43:58', '2019-02-20 10:43:58'),
(854, 289, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:06', '2019-02-20 10:44:06'),
(855, 289, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:06', '2019-02-20 10:44:06'),
(856, 289, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:06', '2019-02-20 10:44:06'),
(857, 289, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:06', '2019-02-20 10:44:06'),
(858, 290, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:21', '2019-02-20 10:44:21'),
(859, 290, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:21', '2019-02-20 10:44:21'),
(860, 290, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:21', '2019-02-20 10:44:21'),
(861, 290, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:21', '2019-02-20 10:44:21'),
(862, 291, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(863, 291, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(864, 291, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(865, 291, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(866, 292, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(867, 292, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(868, 292, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(869, 292, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(870, 293, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:22', '2019-02-20 10:44:22'),
(871, 293, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(872, 293, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(873, 293, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(874, 294, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(875, 294, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(876, 294, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(877, 294, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:23', '2019-02-20 10:44:23'),
(878, 295, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(879, 296, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(880, 295, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(881, 296, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(882, 295, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(883, 296, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(884, 295, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:24', '2019-02-20 10:44:24'),
(885, 296, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:25', '2019-02-20 10:44:25'),
(886, 297, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:29', '2019-02-20 10:44:29'),
(887, 297, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:29', '2019-02-20 10:44:29'),
(888, 297, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:29', '2019-02-20 10:44:29'),
(889, 297, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:29', '2019-02-20 10:44:29'),
(890, 298, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:42', '2019-02-20 10:44:42'),
(891, 298, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:42', '2019-02-20 10:44:42'),
(892, 298, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:42', '2019-02-20 10:44:42'),
(893, 298, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:42', '2019-02-20 10:44:42'),
(894, 299, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(895, 299, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(896, 299, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(897, 299, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(898, 300, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-20 10:44:52', '2019-02-20 10:44:52'),
(899, 300, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-20 10:44:52', '2019-02-20 10:44:52'),
(900, 300, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-20 10:44:52', '2019-02-20 10:44:52'),
(901, 300, 'د- حسب راحة اللاعب', 1, '2019-02-20 10:44:52', '2019-02-20 10:44:52'),
(902, 301, 'أ‌-	الإرسال', 1, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(903, 301, 'ب‌-	الإعداد', 0, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(904, 301, 'ج- استقبال الإرسال', 0, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(905, 301, 'د-الضرب الساحق', 0, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(906, 302, 'أ‌-	تحكيم المباريات', 0, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(907, 302, 'ب- القوة والرشاقة للاعبين', 0, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(908, 302, 'ج-التمرير والإرسال والضربات الساحقة', 1, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(909, 302, '.     د-كل ماسبق', 0, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(910, 303, 'True', 0, '2019-02-25 04:34:20', '2019-02-25 04:34:20'),
(911, 303, 'False', 1, '2019-02-25 04:34:20', '2019-02-25 04:34:20'),
(912, 304, 'True', 0, '2019-02-25 04:35:06', '2019-02-25 04:35:06'),
(913, 304, 'False', 1, '2019-02-25 04:35:06', '2019-02-25 04:35:06'),
(914, 305, 'True', 1, '2019-02-25 04:35:57', '2019-02-25 04:35:57'),
(915, 305, 'False', 0, '2019-02-25 04:35:57', '2019-02-25 04:35:57'),
(916, 306, 'True', 1, '2019-02-25 04:36:38', '2019-02-25 04:36:38'),
(917, 306, 'False', 0, '2019-02-25 04:36:38', '2019-02-25 04:36:38'),
(918, 307, 'True', 0, '2019-02-25 04:37:19', '2019-02-25 04:37:19'),
(919, 307, 'False', 1, '2019-02-25 04:37:19', '2019-02-25 04:37:19'),
(920, 308, 'True', 1, '2019-02-25 04:38:01', '2019-02-25 04:38:01'),
(921, 308, 'False', 0, '2019-02-25 04:38:01', '2019-02-25 04:38:01'),
(922, 309, 'True', 1, '2019-02-25 04:38:42', '2019-02-25 04:38:42'),
(923, 309, 'False', 0, '2019-02-25 04:38:42', '2019-02-25 04:38:42'),
(924, 310, 'True', 1, '2019-02-25 04:39:19', '2019-02-25 04:39:19'),
(925, 310, 'False', 0, '2019-02-25 04:39:19', '2019-02-25 04:39:19'),
(926, 311, 'True', 0, '2019-02-25 04:40:02', '2019-02-25 04:40:02'),
(927, 311, 'False', 1, '2019-02-25 04:40:02', '2019-02-25 04:40:02'),
(928, 312, 'True', 0, '2019-02-25 04:40:48', '2019-02-25 04:40:48'),
(929, 312, 'False', 1, '2019-02-25 04:40:48', '2019-02-25 04:40:48'),
(930, 313, 'True', 0, '2019-02-25 04:41:30', '2019-02-25 04:41:30'),
(931, 313, 'False', 1, '2019-02-25 04:41:30', '2019-02-25 04:41:30'),
(932, 314, 'True', 1, '2019-02-25 04:42:13', '2019-02-25 04:42:13'),
(933, 314, 'False', 0, '2019-02-25 04:42:13', '2019-02-25 04:42:13'),
(934, 315, 'True', 0, '2019-02-25 04:42:53', '2019-02-25 04:42:53'),
(935, 315, 'False', 1, '2019-02-25 04:42:53', '2019-02-25 04:42:53'),
(936, 316, 'True', 1, '2019-02-25 04:43:52', '2019-02-25 04:43:52'),
(937, 316, 'False', 0, '2019-02-25 04:43:52', '2019-02-25 04:43:52'),
(938, 317, 'True', 1, '2019-02-25 04:45:14', '2019-02-25 04:45:14'),
(939, 317, 'False', 0, '2019-02-25 04:45:14', '2019-02-25 04:45:14'),
(940, 318, 'True', 1, '2019-02-25 04:45:55', '2019-02-25 04:45:55'),
(941, 318, 'False', 0, '2019-02-25 04:45:55', '2019-02-25 04:45:55'),
(942, 319, 'True', 1, '2019-02-25 04:46:45', '2019-02-25 04:46:45'),
(943, 320, 'True', 1, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(944, 319, 'False', 0, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(945, 320, 'False', 0, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(946, 321, 'True', 1, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(947, 321, 'False', 0, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(948, 322, 'True', 1, '2019-02-25 04:47:33', '2019-02-25 04:47:33'),
(949, 322, 'False', 0, '2019-02-25 04:47:33', '2019-02-25 04:47:33'),
(950, 323, 'True', 1, '2019-02-25 04:48:04', '2019-02-25 04:48:04'),
(951, 323, 'False', 0, '2019-02-25 04:48:04', '2019-02-25 04:48:04'),
(952, 324, 'True', 0, '2019-02-25 04:48:39', '2019-02-25 04:48:39'),
(953, 324, 'False', 1, '2019-02-25 04:48:39', '2019-02-25 04:48:39'),
(954, 325, 'True', 1, '2019-02-25 04:49:27', '2019-02-25 04:49:27'),
(955, 325, 'False', 0, '2019-02-25 04:49:27', '2019-02-25 04:49:27'),
(956, 326, 'True', 0, '2019-02-25 04:50:05', '2019-02-25 04:50:05'),
(957, 326, 'False', 1, '2019-02-25 04:50:05', '2019-02-25 04:50:05'),
(958, 327, 'True', 1, '2019-02-25 04:50:39', '2019-02-25 04:50:39'),
(959, 327, 'False', 0, '2019-02-25 04:50:39', '2019-02-25 04:50:39'),
(960, 328, 'True', 1, '2019-02-25 04:51:16', '2019-02-25 04:51:16'),
(961, 328, 'False', 0, '2019-02-25 04:51:16', '2019-02-25 04:51:16'),
(962, 329, 'True', 1, '2019-02-25 04:51:58', '2019-02-25 04:51:58'),
(963, 329, 'False', 0, '2019-02-25 04:51:58', '2019-02-25 04:51:58'),
(966, 331, 'True', 0, '2019-02-25 05:05:06', '2019-02-25 05:05:06'),
(967, 331, 'False', 1, '2019-02-25 05:05:06', '2019-02-25 05:05:06'),
(968, 332, 'True', 0, '2019-02-25 05:05:51', '2019-02-25 05:05:51'),
(969, 332, 'False', 1, '2019-02-25 05:05:51', '2019-02-25 05:05:51'),
(970, 333, 'True', 1, '2019-02-25 05:06:32', '2019-02-25 05:06:32'),
(971, 333, 'False', 0, '2019-02-25 05:06:32', '2019-02-25 05:06:32'),
(972, 334, 'True', 1, '2019-02-25 05:07:01', '2019-02-25 05:07:01'),
(973, 334, 'False', 0, '2019-02-25 05:07:01', '2019-02-25 05:07:01'),
(974, 335, 'د-كل ما سبق', 1, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(975, 335, 'ج- توجيه الكرة لملعب الفريق المنافس', 0, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(976, 335, 'ب‌-	زيادة قوة الضربة', 0, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(977, 335, 'أ‌-	زيادة مساحة الضربة', 0, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(978, 336, 'د‌-	كل ماسبق', 1, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(979, 336, 'ج‌-	إتقان أداء أكثر أنواع ضربات الهجوم', 0, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(980, 336, 'ب‌-	التحكم في الضرب من المنطقة الأمامية', 0, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(981, 336, 'أ‌-	يجيد الضرب في جميع المراكز الأمامية', 0, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(982, 337, 'د- 1940م', 0, '2019-02-25 05:23:37', '2019-02-25 05:23:37'),
(983, 337, 'ج-1850م', 0, '2019-02-25 05:23:37', '2019-02-25 05:23:37'),
(984, 337, 'ب‌-	1946م', 0, '2019-02-25 05:23:37', '2019-02-25 05:23:37'),
(985, 337, 'أ‌-	1964م', 1, '2019-02-25 05:23:37', '2019-02-25 05:23:37'),
(986, 338, 'د- كل ماسبق', 0, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(987, 338, 'ج- التمرير', 0, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(988, 338, 'ب‌-	الضرب الساحق', 0, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(989, 338, 'أ‌-	الارسال', 1, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(990, 339, 'د- كل ماسبق', 0, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(991, 339, 'ج- وسطية', 0, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(992, 339, 'ب‌-هجومية', 0, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(993, 339, 'أ‌-	مهارة دفاعية', 1, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(994, 340, 'د- الدفاع باليدين من الوقوف', 1, '2019-02-25 05:29:02', '2019-02-25 05:29:02'),
(995, 340, 'ج- الدفاع العالي', 0, '2019-02-25 05:29:02', '2019-02-25 05:29:02'),
(996, 340, 'ب‌-	الدفاع المتوسط', 0, '2019-02-25 05:29:02', '2019-02-25 05:29:02'),
(997, 340, 'أ‌-	الدفاع العميق', 0, '2019-02-25 05:29:02', '2019-02-25 05:29:02'),
(998, 341, 'د- كل ما سبق', 1, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(999, 341, 'ج- سرعة اللعب', 0, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(1000, 341, 'ب‌-	التغطية', 0, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(1001, 341, 'أ‌-	تبديل اللاعبين', 0, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(1002, 342, 'د- كل ماسبق', 1, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(1003, 342, 'ج- الصد', 0, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(1004, 342, 'ب‌-	الدفاع', 0, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(1005, 342, 'أ‌-	الإرسال', 0, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(1006, 343, 'د- كل ما سبق', 1, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(1007, 343, 'ج- 4', 0, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(1008, 343, 'ب- 3', 0, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(1009, 343, 'أ-2', 0, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(1010, 344, 'د- الاجتماعية', 0, '2019-02-25 05:36:02', '2019-02-25 05:36:02'),
(1011, 344, 'ج- الذهنية والحركية', 1, '2019-02-25 05:36:02', '2019-02-25 05:36:02'),
(1012, 344, 'ب‌-	النفس حركى', 0, '2019-02-25 05:36:03', '2019-02-25 05:36:03'),
(1013, 344, 'أ‌-	النفسية والعقلية', 0, '2019-02-25 05:36:03', '2019-02-25 05:36:03'),
(1014, 345, 'د‌-	كل ما سبق', 1, '2019-02-25 05:37:49', '2019-02-25 05:37:49'),
(1015, 345, 'ج-تصادم اللاعبين القائمين بعملية الصد', 0, '2019-02-25 05:37:49', '2019-02-25 05:37:49'),
(1016, 345, 'ب‌-	عدم دقة التوقيت مع الوثب واغماض العينين لحظة صد الكرة', 0, '2019-02-25 05:37:49', '2019-02-25 05:37:49'),
(1017, 345, 'أ‌-	التحرك بخطوات أمامية وليس جانبية', 0, '2019-02-25 05:37:50', '2019-02-25 05:37:50'),
(1018, 346, 'د- W', 1, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(1019, 346, 'ج-C', 0, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(1020, 346, 'ب‌-	D', 0, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(1021, 346, 'أ‌-	A', 0, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(1022, 347, 'د- مركز4', 0, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(1023, 347, 'ج- مركز 5', 0, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(1024, 347, 'ب‌-	مركز6', 1, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(1025, 347, 'أ‌-	مركز2', 0, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(1026, 348, 'د- أسلوب المهمة', 1, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(1027, 348, 'ج- التعلم التعاوني', 0, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(1028, 348, 'ب‌-	أسلوب الاكتشاف', 0, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(1029, 348, 'أ‌-	أسلوب حل المشكلات', 0, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(1030, 349, 'د- ثلاثي', 0, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(1031, 349, 'ج- جماعى', 0, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(1032, 349, 'ب‌-	ثنائي', 0, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(1033, 349, 'أ‌-	فردى', 1, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(1034, 350, '.                          د- أسلوب الاكتشاف', 0, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(1035, 350, 'ج-حل المشكلات', 0, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(1036, 350, 'ب‌-	أسلوب المهمة', 0, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(1037, 350, 'أ‌-	التعلم التبادلي', 1, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(1038, 351, 'د‌-	الإرسال من أسفل – الاستقبال – الضرب الساحق الدفاع عن الملعب - التمرير', 0, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(1039, 351, 'ج-الإرسال من أعلى –التمريرمن اعلى- التمريرمن أسفل- الضرب الساحق', 0, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(1040, 351, 'ب‌-	 الإرسال- الاستقبال- الإعداد- الضرب الساحق- الصد- الدفاع عن الملعب', 1, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(1041, 351, 'أ‌-	الإرسال- الاستقبال- الضرب الساحق –الدفاع عن الملعب – حائط الصد.', 0, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(1042, 352, 'د-(1-2', 0, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(1043, 352, 'ج-(3-4', 0, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(1044, 352, 'ب-(3-5', 1, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(1045, 352, '(4-2)-أ', 0, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(1046, 353, 'د-الضربة الهجومية', 0, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(1047, 353, 'ج-الصد', 1, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(1048, 353, 'ب-الدفاع عن الملعب', 0, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(1049, 353, 'أ-الإرسال', 0, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(1050, 354, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(1051, 354, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(1052, 354, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(1053, 354, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(1054, 355, '.                     د- حسب راحة اللاعب', 1, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(1055, 355, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(1056, 355, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(1057, 355, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(1058, 356, 'د-الضرب الساحق', 0, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(1059, 356, 'ج- استقبال الإرسال', 0, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(1060, 356, 'ب‌-	الإعداد', 0, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(1061, 356, 'أ‌-	الإرسال', 1, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(1062, 357, 'د-كل ماسبق', 0, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(1063, 357, 'ج-التمرير والإرسال والضربات الساحقة', 1, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(1064, 357, 'ب- القوة والرشاقة للاعبين', 0, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(1065, 357, 'أ‌-	تحكيم المباريات', 0, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(1066, 358, 'د- كل ماسبق', 1, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(1067, 358, 'ج-قاذف الكرة الالكتروني', 0, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(1068, 358, 'ب- جهاز دقة الضرب.', 0, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(1069, 358, 'أ‌-	الكرة المعلقة من أعلي', 0, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(1070, 359, 'د-كل ماسبق', 1, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(1071, 359, 'ج-لاعب متميز', 0, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(1072, 359, 'ب‌-	المعلم', 0, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(1073, 359, 'أ‌-	صور للمهارة', 0, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(1074, 360, 'د‌-	كل ماسبق', 1, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(1075, 360, 'ج- تنطيط الكرة باليدين معاً', 0, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(1076, 360, 'ب-تنطيط الكرة باليد اليمنى مع التحرك للأمام', 0, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(1077, 360, 'أ-تنطيط الكرة باليد اليمنى', 0, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(1078, 361, 'د-10 لاعبين', 0, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(1079, 361, 'ج-8لاعبين', 0, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(1080, 361, 'ب-6لاعبين', 1, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(1081, 361, 'أ-12لاعباً', 0, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(1082, 362, 'د-الجرس', 0, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(1083, 362, 'ج-الصافر', 0, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(1084, 362, 'ب-استمارة التسجيل', 0, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(1085, 362, 'أ-بطاقات سوء السلوك', 1, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(1086, 363, 'مفتوحة  أو مجوفة', NULL, '2019-02-25 06:23:38', '2019-02-25 06:23:38'),
(1087, 363, NULL, NULL, '2019-02-25 06:23:38', '2019-02-25 06:23:38'),
(1088, 364, 'مفتوحة  أو مجوفة', NULL, '2019-02-25 06:25:18', '2019-02-25 06:25:18'),
(1089, 364, NULL, NULL, '2019-02-25 06:25:18', '2019-02-25 06:25:18'),
(1090, 365, '6', NULL, '2019-02-25 06:26:30', '2019-02-25 06:26:30'),
(1091, 365, NULL, NULL, '2019-02-25 06:26:30', '2019-02-25 06:26:30'),
(1092, 366, 'القدرة العضلية', NULL, '2019-02-25 06:27:43', '2019-02-25 06:27:43'),
(1093, 366, NULL, NULL, '2019-02-25 06:27:43', '2019-02-25 06:27:43'),
(1094, 367, '1895', NULL, '2019-02-25 06:29:40', '2019-02-25 06:29:40'),
(1095, 367, 'وليم مورجان', NULL, '2019-02-25 06:29:40', '2019-02-25 06:29:40'),
(1096, 368, 'الضرب الساحق', NULL, '2019-02-25 06:36:57', '2019-02-25 06:36:57'),
(1097, 368, NULL, NULL, '2019-02-25 06:36:57', '2019-02-25 06:36:57'),
(1098, 369, '8', NULL, '2019-02-25 06:37:46', '2019-02-25 06:37:46'),
(1099, 369, NULL, NULL, '2019-02-25 06:37:46', '2019-02-25 06:37:46'),
(1100, 370, 'دفاعى', NULL, '2019-02-25 06:39:42', '2019-02-25 06:39:42'),
(1101, 370, 'هجومى', NULL, '2019-02-25 06:39:42', '2019-02-25 06:39:42'),
(1102, 371, 'التمرير', NULL, '2019-02-25 06:41:18', '2019-02-25 06:41:18'),
(1103, 371, NULL, NULL, '2019-02-25 06:41:18', '2019-02-25 06:41:18'),
(1104, 372, 'الطالب المودى', NULL, '2019-02-25 06:42:33', '2019-02-25 06:42:33'),
(1105, 372, NULL, NULL, '2019-02-25 06:42:33', '2019-02-25 06:42:33'),
(1106, 373, 'الامر', NULL, '2019-02-25 07:08:56', '2019-02-25 07:08:56'),
(1107, 373, NULL, NULL, '2019-02-25 07:08:56', '2019-02-25 07:08:56'),
(1108, 374, 'المتعلم', NULL, '2019-02-25 07:10:49', '2019-02-25 07:10:49'),
(1109, 374, NULL, NULL, '2019-02-25 07:10:49', '2019-02-25 07:10:49'),
(1110, 375, '2', NULL, '2019-02-25 07:11:33', '2019-02-25 07:11:33'),
(1111, 375, NULL, NULL, '2019-02-25 07:11:33', '2019-02-25 07:11:33'),
(1112, 376, 'الركبتين', NULL, '2019-02-25 07:12:44', '2019-02-25 07:12:44'),
(1113, 376, 'الوقوف', NULL, '2019-02-25 07:12:44', '2019-02-25 07:12:44'),
(1114, 377, 'فنجان', NULL, '2019-02-25 07:13:35', '2019-02-25 07:13:35'),
(1115, 377, NULL, NULL, '2019-02-25 07:13:35', '2019-02-25 07:13:35'),
(1116, 378, '2', NULL, '2019-02-25 07:14:55', '2019-02-25 07:14:55'),
(1117, 378, '1', NULL, '2019-02-25 07:14:55', '2019-02-25 07:14:55'),
(1118, 379, 'الحوض', NULL, '2019-02-25 07:16:24', '2019-02-25 07:16:24'),
(1119, 379, NULL, NULL, '2019-02-25 07:16:24', '2019-02-25 07:16:24'),
(1120, 380, '243', NULL, '2019-02-25 07:17:35', '2019-02-25 07:17:35'),
(1121, 380, '224', NULL, '2019-02-25 07:17:36', '2019-02-25 07:17:36'),
(1124, 382, '9.5', NULL, '2019-02-25 07:20:19', '2019-02-25 07:20:19'),
(1125, 382, '1', NULL, '2019-02-25 07:20:19', '2019-02-25 07:20:19'),
(1126, 383, 'الارسال', NULL, '2019-02-25 07:29:33', '2019-02-25 07:29:33'),
(1127, 383, NULL, NULL, '2019-02-25 07:29:33', '2019-02-25 07:29:33'),
(1128, 384, 'التعلم التعاونى', NULL, '2019-02-25 07:35:38', '2019-02-25 07:35:38'),
(1129, 384, NULL, NULL, '2019-02-25 07:35:38', '2019-02-25 07:35:38'),
(1130, 385, 'التمرير', NULL, '2019-02-25 07:36:40', '2019-02-25 07:36:40'),
(1131, 385, NULL, NULL, '2019-02-25 07:36:40', '2019-02-25 07:36:40'),
(1132, 386, 'True', 0, '2019-02-25 07:46:56', '2019-02-25 07:46:56'),
(1133, 386, 'False', 1, '2019-02-25 07:46:56', '2019-02-25 07:46:56'),
(1134, 387, 'True', 0, '2019-02-25 07:47:23', '2019-02-25 07:47:23'),
(1135, 387, 'False', 1, '2019-02-25 07:47:23', '2019-02-25 07:47:23'),
(1136, 388, 'True', 1, '2019-02-25 07:47:56', '2019-02-25 07:47:56'),
(1137, 388, 'False', 0, '2019-02-25 07:47:56', '2019-02-25 07:47:56'),
(1138, 389, 'True', 1, '2019-02-25 07:48:30', '2019-02-25 07:48:30'),
(1139, 389, 'False', 0, '2019-02-25 07:48:30', '2019-02-25 07:48:30'),
(1140, 390, 'True', 0, '2019-02-25 07:49:05', '2019-02-25 07:49:05'),
(1141, 390, 'False', 1, '2019-02-25 07:49:05', '2019-02-25 07:49:05'),
(1142, 391, 'True', 1, '2019-02-25 07:49:34', '2019-02-25 07:49:34'),
(1143, 391, 'False', 0, '2019-02-25 07:49:34', '2019-02-25 07:49:34'),
(1144, 392, 'True', 1, '2019-02-25 07:52:05', '2019-02-25 07:52:05'),
(1145, 392, 'False', 0, '2019-02-25 07:52:05', '2019-02-25 07:52:05'),
(1146, 393, 'True', 1, '2019-02-25 07:52:43', '2019-02-25 07:52:43'),
(1147, 393, 'False', 0, '2019-02-25 07:52:43', '2019-02-25 07:52:43'),
(1148, 394, 'True', 0, '2019-02-25 07:53:16', '2019-02-25 07:53:16'),
(1149, 394, 'False', 1, '2019-02-25 07:53:16', '2019-02-25 07:53:16'),
(1150, 395, 'True', 0, '2019-02-25 07:53:46', '2019-02-25 07:53:46'),
(1151, 395, 'False', 1, '2019-02-25 07:53:46', '2019-02-25 07:53:46'),
(1152, 396, 'True', 0, '2019-02-25 07:54:17', '2019-02-25 07:54:17'),
(1153, 396, 'False', 1, '2019-02-25 07:54:17', '2019-02-25 07:54:17'),
(1154, 397, 'True', 1, '2019-02-25 07:54:50', '2019-02-25 07:54:50'),
(1155, 397, 'False', 0, '2019-02-25 07:54:50', '2019-02-25 07:54:50'),
(1156, 398, 'True', 0, '2019-02-25 07:55:25', '2019-02-25 07:55:25'),
(1157, 398, 'False', 1, '2019-02-25 07:55:25', '2019-02-25 07:55:25'),
(1158, 399, 'True', 1, '2019-02-25 07:55:56', '2019-02-25 07:55:56'),
(1159, 399, 'False', 0, '2019-02-25 07:55:56', '2019-02-25 07:55:56'),
(1160, 400, 'True', 1, '2019-02-25 07:56:27', '2019-02-25 07:56:27'),
(1161, 400, 'False', 0, '2019-02-25 07:56:27', '2019-02-25 07:56:27'),
(1162, 401, 'True', 1, '2019-02-25 07:56:58', '2019-02-25 07:56:58'),
(1163, 401, 'False', 0, '2019-02-25 07:56:58', '2019-02-25 07:56:58'),
(1164, 402, 'True', 1, '2019-02-25 07:59:09', '2019-02-25 07:59:09'),
(1165, 402, 'False', 0, '2019-02-25 07:59:09', '2019-02-25 07:59:09'),
(1166, 403, 'True', 1, '2019-02-25 07:59:37', '2019-02-25 07:59:37'),
(1167, 403, 'False', 0, '2019-02-25 07:59:37', '2019-02-25 07:59:37'),
(1168, 404, 'True', 1, '2019-02-25 08:00:07', '2019-02-25 08:00:07'),
(1169, 404, 'False', 0, '2019-02-25 08:00:07', '2019-02-25 08:00:07'),
(1170, 405, 'True', 0, '2019-02-25 08:00:37', '2019-02-25 08:00:37'),
(1171, 405, 'False', 1, '2019-02-25 08:00:37', '2019-02-25 08:00:37'),
(1172, 406, 'True', 1, '2019-02-25 08:01:12', '2019-02-25 08:01:12'),
(1173, 406, 'False', 0, '2019-02-25 08:01:12', '2019-02-25 08:01:12'),
(1174, 407, 'True', 0, '2019-02-25 08:02:58', '2019-02-25 08:02:58'),
(1175, 407, 'False', 1, '2019-02-25 08:02:58', '2019-02-25 08:02:58'),
(1176, 408, 'True', 1, '2019-02-25 08:03:31', '2019-02-25 08:03:31'),
(1177, 408, 'False', 0, '2019-02-25 08:03:31', '2019-02-25 08:03:31'),
(1178, 409, 'True', 1, '2019-02-25 08:03:58', '2019-02-25 08:03:58'),
(1179, 409, 'False', 0, '2019-02-25 08:03:58', '2019-02-25 08:03:58'),
(1180, 410, 'True', 1, '2019-02-25 08:04:25', '2019-02-25 08:04:25'),
(1181, 410, 'False', 0, '2019-02-25 08:04:25', '2019-02-25 08:04:25'),
(1182, 411, 'True', 1, '2019-02-25 08:09:07', '2019-02-25 08:09:07'),
(1183, 411, 'False', 0, '2019-02-25 08:09:07', '2019-02-25 08:09:07'),
(1184, 412, 'True', 0, '2019-02-25 08:09:44', '2019-02-25 08:09:44'),
(1185, 412, 'False', 1, '2019-02-25 08:09:44', '2019-02-25 08:09:44'),
(1186, 413, 'True', 0, '2019-02-25 08:10:13', '2019-02-25 08:10:13'),
(1187, 413, 'False', 1, '2019-02-25 08:10:13', '2019-02-25 08:10:13'),
(1188, 414, 'True', 1, '2019-02-25 08:10:38', '2019-02-25 08:10:38'),
(1189, 414, 'False', 0, '2019-02-25 08:10:38', '2019-02-25 08:10:38'),
(1190, 415, 'True', 1, '2019-02-25 08:12:23', '2019-02-25 08:12:23'),
(1191, 415, 'False', 0, '2019-02-25 08:12:23', '2019-02-25 08:12:23'),
(1192, 416, 'د-كل ما سبق', 1, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(1193, 416, '.         ج- توجيه الكرة لملعب الفريق المنافس', 0, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(1194, 416, 'ب‌-	زيادة قوة الضربة', 0, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(1195, 416, 'أ‌-	زيادة مساحة الضربة', 0, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(1196, 417, 'د‌-	كل ماسبق', 1, '2019-02-25 08:21:25', '2019-02-25 08:21:25'),
(1197, 417, 'ج‌-	إتقان أداء أكثر أنواع ضربات الهجوم', 0, '2019-02-25 08:21:26', '2019-02-25 08:21:26'),
(1198, 417, 'ب‌-	التحكم في الضرب من المنطقة الأمامية', 0, '2019-02-25 08:21:26', '2019-02-25 08:21:26'),
(1199, 417, 'أ‌-	يجيد الضرب في جميع المراكز الأمامية', 0, '2019-02-25 08:21:26', '2019-02-25 08:21:26'),
(1200, 418, 'د- 1940م', 0, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(1201, 418, 'ج-1850م', 0, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(1202, 418, 'ب‌-	1946م', 0, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(1203, 418, 'أ‌-	1964م', 1, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(1204, 419, 'د- كل ماسبق', 0, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(1205, 419, 'ج- التمرير', 0, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(1206, 419, 'ب‌-	الضرب الساحق', 0, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(1207, 419, 'أ‌-	الارسال', 1, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(1208, 420, 'د- كل ماسبق', 0, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(1209, 420, 'ج- وسطية', 0, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(1210, 420, 'ب‌-	هجومية', 0, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(1211, 420, 'أ‌-	مهارة دفاعية', 1, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(1212, 421, '.                 د- الدفاع باليدين من الوقوف', 1, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(1213, 421, 'ج- الدفاع العالي', 0, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(1214, 421, 'ب‌-	الدفاع المتوسط', 0, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(1215, 421, 'أ‌-	الدفاع العميق', 0, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(1216, 422, 'د- كل ما سبق', 1, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(1217, 422, 'ج- سرعة اللعب', 0, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(1218, 422, 'ب‌-	التغطية', 0, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(1219, 422, 'أ‌-	تبديل اللاعبين', 0, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(1220, 423, '.                    د- كل ماسبق', 1, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(1221, 423, 'ج- الصد', 0, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(1222, 423, 'ب‌-	الدفاع', 0, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(1223, 423, 'أ‌-	الإرسال', 0, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(1224, 424, 'كل ماسبق', 1, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(1225, 424, 'ج- 4', 0, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(1226, 424, 'ب- 3', 0, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(1227, 424, 'أ-2', 0, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(1228, 425, '.                   د- الاجتماعية', 0, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(1229, 425, 'ج- الذهنية والحركية', 1, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(1230, 425, 'ب‌-	النفس حركى', 0, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(1231, 425, 'أ‌-	النفسية والعقلية', 0, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(1232, 426, 'د‌-	كل ما سبق', 1, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(1233, 426, 'ج-تصادم اللاعبين القائمين بعملية الصد', 0, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(1234, 426, 'ب‌-	عدم دقة التوقيت مع الوثب واغماض العينين لحظة صد الكرة', 0, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(1235, 426, 'أ‌-	التحرك بخطوات أمامية وليس جانبية', 0, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(1236, 427, 'د- W', 1, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(1237, 427, 'ج-C', 0, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(1238, 427, 'ب‌-	D', 0, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(1239, 427, 'أ‌-	A', 0, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(1240, 428, 'د- مركز4', 0, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(1241, 428, '- مركز 5', 0, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(1242, 428, 'ب‌-	مركز6', 1, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(1243, 428, 'أ‌-	مركز2', 0, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(1244, 429, '.                      د- أسلوب المهمة', 1, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(1245, 429, '.                     ج- التعلم التعاوني', 0, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(1246, 429, 'ب‌-	أسلوب الاكتشاف', 0, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(1247, 429, 'أ‌-	أسلوب حل المشكلات', 0, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(1248, 430, '.                            د- ثلاثي', 0, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(1249, 430, '.                           ج- جماعى', 0, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(1250, 430, 'ب‌-	ثنائي', 0, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(1251, 430, 'أ‌-	فردى', 1, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(1252, 431, 'د- أسلوب الاكتشاف', 0, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(1253, 431, 'ج-حل المشكلات', 0, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(1254, 431, 'ب‌-	أسلوب المهمة', 0, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(1255, 431, 'أ‌-	التعلم التبادلي', 1, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(1256, 432, 'د‌-	الإرسال من أسفل – الاستقبال – الضرب الساحق الدفاع عن الملعب - التمرير', 0, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(1257, 432, 'ج-الإرسال من أعلى –التمريرمن اعلى- التمريرمن أسفل- الضرب الساحق', 0, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(1258, 432, 'ب‌-	 الإرسال- الاستقبال- الإعداد- الضرب الساحق- الصد- الدفاع عن الملعب', 1, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(1259, 432, 'أ‌-	الإرسال- الاستقبال- الضرب الساحق –الدفاع عن الملعب – حائط الصد', 0, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(1260, 433, 'د-(1-2', 0, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(1261, 433, 'ج-(3-4', 0, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(1262, 433, 'ب-(3-5', 1, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(1263, 433, 'أ‌-	(2-4', 0, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(1264, 434, 'د-الضربة الهجومية', 0, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(1265, 434, '.                           ج-الصد', 1, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(1266, 434, 'ب-الدفاع عن الملعب', 0, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(1267, 434, 'أ-الإرسال', 0, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(1268, 435, 'د-تكون الكرة غير دقيقة التوجيه', 0, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(1269, 435, 'ج-تكون الكرة قليلة الارتفاع', 0, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(1270, 435, 'ب-تندفع الكرة للأمام وليس لأعلى', 1, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(1271, 435, 'أ-لايستطيع اللاعب التحكم فى الكرة', 0, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(1272, 436, 'د- حسب راحة اللاعب', 1, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(1273, 436, 'ج- القدمين معاً بعمق كبير', 0, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(1274, 436, 'ب‌-	القدم اليسرى أولا', 0, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(1275, 436, 'أ‌-	القدمين معا بعمق بسيط', 0, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(1276, 437, '.                    د-الضرب الساحق', 0, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(1277, 437, '.                 ج- استقبال الإرسال', 0, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(1278, 437, 'ب‌-	الإعداد', 0, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(1279, 437, 'أ‌-	الإرسال', 1, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(1280, 438, 'د-كل ماسبق', 1, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(1281, 438, 'ج-قاذف الكرة الالكتروني', 0, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(1282, 438, 'ب- جهاز دقة الضرب', 0, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(1283, 438, 'أ‌-	الكرة المعلقة من أعلي', 0, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(1284, 439, 'د-كل ماسبق', 1, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(1285, 439, 'ج-لاعب متميز', 0, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(1286, 439, 'ب‌-	المعلم', 0, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(1287, 439, 'أ‌-	صور للمهارة', 0, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(1288, 440, 'د‌-	كل ماسبق', 1, '2019-02-25 09:07:02', '2019-02-25 09:07:02'),
(1289, 440, 'ج- تنطيط الكرة باليدين معاً', 0, '2019-02-25 09:07:02', '2019-02-25 09:07:02'),
(1290, 440, 'ب-تنطيط الكرة باليد اليمنى مع التحرك للأمام', 0, '2019-02-25 09:07:02', '2019-02-25 09:07:02'),
(1291, 440, 'أ-تنطيط الكرة باليد اليمنى', 0, '2019-02-25 09:07:02', '2019-02-25 09:07:02'),
(1292, 441, '.                              د-10 لاعبين', 0, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(1293, 441, '.                                  ج-8لاعبين', 0, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(1294, 441, 'ب-6لاعبين', 1, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(1295, 441, 'أ-12لاعباً', 0, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(1296, 442, '.         د-الجرس', 0, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(1297, 442, '.             ج-الصافرة', 0, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(1298, 442, 'ب-استمارة التسجيل', 0, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(1299, 442, 'أ-بطاقات سوء السلوك', 1, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(1300, 443, '.       د-كل ماسبق', 0, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(1301, 443, 'ج-التمرير والإرسال والضربات الساحقة', 1, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(1302, 443, 'ب- القوة والرشاقة للاعبين', 0, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(1303, 443, 'أ‌-	تحكيم المباريات', 0, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(1304, 444, 'مفتوحة  أو مجوفة', NULL, '2019-02-25 09:16:30', '2019-02-25 09:16:30'),
(1305, 444, NULL, NULL, '2019-02-25 09:16:30', '2019-02-25 09:16:30'),
(1306, 445, '6', NULL, '2019-02-25 09:17:02', '2019-02-25 09:17:02'),
(1307, 445, NULL, NULL, '2019-02-25 09:17:02', '2019-02-25 09:17:02'),
(1308, 446, 'القدرة العضلية', NULL, '2019-02-25 09:18:26', '2019-02-25 09:18:26'),
(1309, 446, NULL, NULL, '2019-02-25 09:18:26', '2019-02-25 09:18:26'),
(1310, 447, '1895', NULL, '2019-02-25 09:19:53', '2019-02-25 09:19:53'),
(1311, 447, 'وليم مورجان', NULL, '2019-02-25 09:19:53', '2019-02-25 09:19:53'),
(1312, 448, 'الضرب الساحق', NULL, '2019-02-25 09:20:37', '2019-02-25 09:20:37'),
(1313, 448, NULL, NULL, '2019-02-25 09:20:37', '2019-02-25 09:20:37'),
(1314, 449, '8', NULL, '2019-02-25 09:21:18', '2019-02-25 09:21:18'),
(1315, 449, NULL, NULL, '2019-02-25 09:21:18', '2019-02-25 09:21:18'),
(1316, 450, 'دفاعى', NULL, '2019-02-25 09:22:43', '2019-02-25 09:22:43'),
(1317, 450, 'هجومى', NULL, '2019-02-25 09:22:43', '2019-02-25 09:22:43'),
(1318, 451, 'التمرير', NULL, '2019-02-25 09:23:57', '2019-02-25 09:23:57'),
(1319, 451, NULL, NULL, '2019-02-25 09:23:57', '2019-02-25 09:23:57'),
(1320, 452, 'الطالب المودى', NULL, '2019-02-25 09:24:44', '2019-02-25 09:24:44'),
(1321, 452, NULL, NULL, '2019-02-25 09:24:44', '2019-02-25 09:24:44'),
(1322, 453, 'الامر', NULL, '2019-02-25 09:25:36', '2019-02-25 09:25:36'),
(1323, 453, NULL, NULL, '2019-02-25 09:25:36', '2019-02-25 09:25:36'),
(1324, 454, 'المتعلم', NULL, '2019-02-25 09:26:42', '2019-02-25 09:26:42'),
(1325, 454, NULL, NULL, '2019-02-25 09:26:42', '2019-02-25 09:26:42'),
(1326, 455, 'المتعلم', NULL, '2019-02-25 09:28:23', '2019-02-25 09:28:23'),
(1327, 455, NULL, NULL, '2019-02-25 09:28:23', '2019-02-25 09:28:23'),
(1328, 456, '2', NULL, '2019-02-25 09:29:05', '2019-02-25 09:29:05'),
(1329, 456, NULL, NULL, '2019-02-25 09:29:05', '2019-02-25 09:29:05'),
(1330, 457, 'الركبتين', NULL, '2019-02-25 09:30:06', '2019-02-25 09:30:06'),
(1331, 457, 'الوقوف', NULL, '2019-02-25 09:30:06', '2019-02-25 09:30:06'),
(1332, 458, 'فنجان', NULL, '2019-02-25 09:30:47', '2019-02-25 09:30:47'),
(1333, 458, NULL, NULL, '2019-02-25 09:30:47', '2019-02-25 09:30:47'),
(1334, 459, '2', NULL, '2019-02-25 09:31:29', '2019-02-25 09:31:29'),
(1335, 459, '1', NULL, '2019-02-25 09:31:29', '2019-02-25 09:31:29'),
(1336, 460, 'الحوض', NULL, '2019-02-25 09:32:05', '2019-02-25 09:32:05'),
(1337, 460, NULL, NULL, '2019-02-25 09:32:05', '2019-02-25 09:32:05'),
(1338, 461, '243', NULL, '2019-02-25 09:32:38', '2019-02-25 09:32:38'),
(1339, 461, '224', NULL, '2019-02-25 09:32:38', '2019-02-25 09:32:38'),
(1340, 462, 'المعد', NULL, '2019-02-25 09:33:06', '2019-02-25 09:33:06'),
(1341, 462, NULL, NULL, '2019-02-25 09:33:06', '2019-02-25 09:33:06'),
(1342, 463, '9.5', NULL, '2019-02-25 09:33:41', '2019-02-25 09:33:41'),
(1343, 463, '1', NULL, '2019-02-25 09:33:41', '2019-02-25 09:33:41'),
(1344, 464, 'الارسال', NULL, '2019-02-25 09:34:23', '2019-02-25 09:34:23'),
(1345, 464, NULL, NULL, '2019-02-25 09:34:24', '2019-02-25 09:34:24'),
(1346, 465, 'التعلم التعاونى', NULL, '2019-02-25 09:35:03', '2019-02-25 09:35:03'),
(1347, 465, NULL, NULL, '2019-02-25 09:35:03', '2019-02-25 09:35:03'),
(1348, 466, 'التمرير', NULL, '2019-02-25 09:35:38', '2019-02-25 09:35:38'),
(1349, 466, NULL, NULL, '2019-02-25 09:35:38', '2019-02-25 09:35:38'),
(1350, 381, 'المعد', NULL, '2019-02-26 06:56:10', '2019-02-26 06:56:10'),
(1351, 381, NULL, NULL, '2019-02-26 06:56:10', '2019-02-26 06:56:10'),
(1352, 330, 'True', 1, '2019-02-28 09:43:17', '2019-02-28 09:43:17'),
(1353, 330, 'False', 0, '2019-02-28 09:43:17', '2019-02-28 09:43:17'),
(1354, 467, '0  1  2  3  4  5  6  7  8  9  10  11  12  13  14', 0, '2019-03-14 14:42:21', '2019-03-14 14:42:21');
INSERT INTO `question_choices` (`id`, `QUESTION_ID`, `QUESTION_CHOICE_TEXT`, `QUESTION_CHOICE_ISCORRECT`, `created_at`, `updated_at`) VALUES
(1355, 467, '0   2   4   6   8   10   12   14', 1, '2019-03-14 14:42:21', '2019-03-14 14:42:21'),
(1356, 467, '0  1  2  3  4  5  6  7  8  9  10  11  12  13  14 15', 0, '2019-03-14 14:42:21', '2019-03-14 14:42:21'),
(1357, 467, '0   2   4   6   8   10   12   14  16', 0, '2019-03-14 14:42:21', '2019-03-14 14:42:21'),
(1358, 469, '10', 0, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(1359, 469, '25', 0, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(1360, 469, '45', 0, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(1361, 469, '20', 1, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(1362, 470, '-4', 1, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(1363, 470, '-3', 0, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(1364, 470, '-5', 0, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(1365, 470, '6', 0, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(1366, 471, '1    22   333  4444 55555', 1, '2019-03-14 16:24:00', '2019-03-14 16:24:00'),
(1367, 471, NULL, 0, '2019-03-14 16:24:00', '2019-03-14 16:24:00'),
(1368, 471, NULL, 0, '2019-03-14 16:24:00', '2019-03-14 16:24:00'),
(1369, 471, '1', 0, '2019-03-14 16:24:00', '2019-03-14 16:24:00'),
(1370, 472, '1    22   333  4444 55555', 1, '2019-03-14 16:25:23', '2019-03-14 16:25:23'),
(1371, 472, '122333444455555', 0, '2019-03-14 16:25:23', '2019-03-14 16:25:23'),
(1372, 472, '555554444333221', 0, '2019-03-14 16:25:23', '2019-03-14 16:25:23'),
(1373, 472, '1 22 333 4444 55555', 0, '2019-03-14 16:25:23', '2019-03-14 16:25:23'),
(1374, 473, '0<br> 90', 0, '2019-03-15 09:39:21', '2019-03-15 09:39:21'),
(1375, 473, '090', 0, '2019-03-15 09:39:21', '2019-03-15 09:39:21'),
(1376, 473, '3120', 1, '2019-03-15 09:39:21', '2019-03-15 09:39:21'),
(1377, 473, '90', 0, '2019-03-15 09:39:21', '2019-03-15 09:39:21'),
(1378, 474, '0 90', 0, '2019-03-15 09:40:39', '2019-03-15 09:40:39'),
(1379, 474, '090', 0, '2019-03-15 09:40:39', '2019-03-15 09:40:39'),
(1380, 474, '3120', 1, '2019-03-15 09:40:39', '2019-03-15 09:40:39'),
(1381, 474, '90', 0, '2019-03-15 09:40:39', '2019-03-15 09:40:39'),
(1382, 475, '90', 0, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(1383, 475, '3120', 1, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(1384, 475, '0 90', 0, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(1385, 475, '390', 0, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(1386, 478, '1223334444', 1, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(1387, 478, '1111222334', 0, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(1388, 478, '4444333221', 0, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(1389, 478, '4332221111', 0, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(1390, 480, 'a3', 0, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(1391, 480, 'c3', 0, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(1392, 480, '150', 0, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(1393, 480, '148', 1, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(1394, 482, NULL, 1, '2019-03-18 07:19:19', '2019-03-18 07:19:19'),
(1395, 482, NULL, 0, '2019-03-18 07:19:19', '2019-03-18 07:19:19'),
(1396, 482, NULL, 0, '2019-03-18 07:19:19', '2019-03-18 07:19:19'),
(1397, 482, NULL, 0, '2019-03-18 07:19:19', '2019-03-18 07:19:19'),
(1398, 483, 'Trigger modeling', 0, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(1399, 483, 'Event-driven modeling', 1, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(1400, 483, 'JAD modeling', 0, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(1401, 483, 'V-Model', 0, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(1402, 484, 'Flowchart', 0, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(1403, 484, 'Decision Tree diagram', 0, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(1404, 484, 'DFD', 1, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(1405, 484, 'ERD', 0, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(1410, 485, 'Understand the \"as-is System\", prepare feasibility analysis, and agree on new requirements of \"to-be system\"', 0, '2019-03-26 11:03:43', '2019-03-26 11:03:43'),
(1411, 485, 'Identify the \"as-is system\" , Define requirements for the \"to-be System\", and establish support plan of  the new system', 0, '2019-03-26 11:03:43', '2019-03-26 11:03:43'),
(1412, 485, 'Identify improvements, Define requirements for the \"to-be System\", and construct the system', 0, '2019-03-26 11:03:43', '2019-03-26 11:03:43'),
(1413, 485, 'Understand the \"as-is System\", Identify improvements, and Define requirements for the new system', 1, '2019-03-26 11:03:43', '2019-03-26 11:03:43'),
(1414, 486, 'A person, another Software System, or hardware device that interacts with the system to achieve a goal', 1, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(1415, 486, 'The author of the use case, (person who wrote the use case)', 0, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(1416, 486, 'The trigger which can be external, internal and/or temporal', 0, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(1417, 486, 'The event that causes the use case to begin', 0, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(1418, 487, 'Decision support systems designed specifically to analyze spatial information', 0, '2019-03-26 11:10:18', '2019-03-26 11:10:18'),
(1419, 487, 'A data-mining technology that uses information and business intelligence to build a predictive model for a given business application', 0, '2019-03-26 11:10:18', '2019-03-26 11:10:18'),
(1420, 487, 'A sequential, activity-based process in which one phase of the SDLC is followed by another, from planning through implementation', 1, '2019-03-26 11:10:18', '2019-03-26 11:10:18'),
(1421, 487, 'The process of verifying that the units or pieces of code written for a system function correctly when integrated into the total system', 0, '2019-03-26 11:10:18', '2019-03-26 11:10:18'),
(1422, 488, 'Decision support systems designed specifically to analyze spatial information', 0, '2019-03-26 11:10:48', '2019-03-26 11:10:48'),
(1423, 488, 'A data-mining technology that uses information and business intelligence to build a predictive model for a given business application', 0, '2019-03-26 11:10:48', '2019-03-26 11:10:48'),
(1424, 488, 'A sequential, activity-based process in which one phase of the SDLC is followed by another, from planning through implementation', 1, '2019-03-26 11:10:48', '2019-03-26 11:10:48'),
(1425, 488, 'The process of verifying that the units or pieces of code written for a system function correctly when integrated into the total system', 0, '2019-03-26 11:10:48', '2019-03-26 11:10:48'),
(1426, 489, 'Decision support systems designed specifically to analyze spatial information', 0, '2019-03-26 11:11:12', '2019-03-26 11:11:12'),
(1427, 489, 'A data-mining technology that uses information and business intelligence to build a predictive model for a given business application', 0, '2019-03-26 11:11:12', '2019-03-26 11:11:12'),
(1428, 489, 'A sequential, activity-based process in which one phase of the SDLC is followed by another, from planning through implementation', 1, '2019-03-26 11:11:12', '2019-03-26 11:11:12'),
(1429, 489, 'The process of verifying that the units or pieces of code written for a system function correctly when integrated into the total system', 0, '2019-03-26 11:11:12', '2019-03-26 11:11:12'),
(1430, 491, '10', 0, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(1431, 491, '11', 0, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(1432, 491, '13', 1, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(1433, 491, '13.33', 0, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(1438, 493, '50   10   10   10   10', 1, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(1439, 493, '10   10    10    10    50', 0, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(1440, 493, '10   20   30   40   50', 0, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(1441, 493, '50   10   20   30   40', 0, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(1444, 494, '11', NULL, '2019-04-02 13:10:52', '2019-04-02 13:10:52'),
(1445, 494, NULL, NULL, '2019-04-02 13:10:52', '2019-04-02 13:10:52'),
(1446, 495, '9', 0, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(1447, 495, '12', 0, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(1448, 495, '11', 0, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(1449, 495, '10', 1, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(1454, 500, '5   44   333   2222   11111', 0, '2019-04-02 13:23:31', '2019-04-02 13:23:31'),
(1455, 500, '1      22    333    4444   55555', 1, '2019-04-02 13:23:31', '2019-04-02 13:23:31'),
(1456, 500, '11111   2222   333   44   5', 0, '2019-04-02 13:23:31', '2019-04-02 13:23:31'),
(1457, 500, '11   22   33   44   55', 0, '2019-04-02 13:23:31', '2019-04-02 13:23:31'),
(1458, 501, 'True', 0, '2019-04-02 14:51:32', '2019-04-02 14:51:32'),
(1459, 501, 'False', 1, '2019-04-02 14:51:32', '2019-04-02 14:51:32'),
(1460, 502, 'True', 0, '2019-04-02 14:53:38', '2019-04-02 14:53:38'),
(1461, 502, 'False', 1, '2019-04-02 14:53:38', '2019-04-02 14:53:38'),
(1462, 503, 'True', 0, '2019-04-02 14:53:43', '2019-04-02 14:53:43'),
(1463, 503, 'False', 1, '2019-04-02 14:53:43', '2019-04-02 14:53:43'),
(1464, 504, 'True', 0, '2019-04-02 14:55:22', '2019-04-02 14:55:22'),
(1465, 504, 'False', 1, '2019-04-02 14:55:22', '2019-04-02 14:55:22'),
(1466, 505, 'True', 0, '2019-04-02 14:56:15', '2019-04-02 14:56:15'),
(1467, 505, 'False', 1, '2019-04-02 14:56:15', '2019-04-02 14:56:15'),
(1468, 506, 'True', 1, '2019-04-02 14:56:56', '2019-04-02 14:56:56'),
(1469, 506, 'False', 0, '2019-04-02 14:56:56', '2019-04-02 14:56:56'),
(1470, 507, 'True', 1, '2019-04-02 14:57:32', '2019-04-02 14:57:32'),
(1471, 507, 'False', 0, '2019-04-02 14:57:32', '2019-04-02 14:57:32'),
(1472, 508, 'True', 1, '2019-04-02 14:58:12', '2019-04-02 14:58:12'),
(1473, 508, 'False', 0, '2019-04-02 14:58:12', '2019-04-02 14:58:12'),
(1474, 509, 'True', 1, '2019-04-02 14:58:51', '2019-04-02 14:58:51'),
(1475, 509, 'False', 0, '2019-04-02 14:58:51', '2019-04-02 14:58:51'),
(1476, 510, 'True', 0, '2019-04-02 14:59:35', '2019-04-02 14:59:35'),
(1477, 510, 'False', 1, '2019-04-02 14:59:35', '2019-04-02 14:59:35'),
(1478, 511, 'True', 0, '2019-04-02 15:00:03', '2019-04-02 15:00:03'),
(1479, 511, 'False', 1, '2019-04-02 15:00:03', '2019-04-02 15:00:03'),
(1480, 512, 'مكان العرض', 0, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(1481, 512, 'ماذا يعرفون عن الموضوع', 1, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(1482, 512, 'وقت العرض', 0, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(1483, 512, 'جهازالعرض', 0, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(1484, 513, 'Insert', 0, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(1485, 513, 'Home', 0, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(1486, 513, 'View', 0, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(1487, 513, 'Design', 1, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(1488, 514, 'Insert', 0, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(1489, 514, 'Home', 0, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(1490, 514, 'View', 0, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(1491, 514, 'Design', 0, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(1492, 515, 'استخدام نصائح قصيرة لكل شريحة', 0, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(1493, 515, 'القراءة المباشرة من الشرائح', 1, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(1494, 515, 'التجول وسط الجمهور', 0, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(1495, 515, 'استخدام ألوان صارخة', 0, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(1496, 516, 'كنترول + مسافة', 0, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(1497, 516, 'كنترول + إنتر', 1, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(1498, 516, 'كنترول + سهم لأعلى', 0, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(1499, 516, 'كنترول + سهم لأسفل', 0, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(1500, 517, 'مكان العرض', 0, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(1501, 517, 'وقت العرض', 0, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(1502, 517, 'تحديد نقاط العرض الرئيسية', 1, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(1503, 517, 'جهاز العرض', 0, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(1504, 518, 'مكان العرض', 0, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(1505, 518, 'جهاز العرض', 0, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(1506, 518, 'وقت العرض', 0, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(1507, 518, 'ما هي توقعاتهم للعرض', 1, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(1508, 519, 'تحديد نقاط العرض الرئيسية', NULL, '2019-04-02 15:20:42', '2019-04-02 15:20:42'),
(1509, 519, NULL, NULL, '2019-04-02 15:20:42', '2019-04-02 15:20:42'),
(1510, 520, 'بناء نقاط الدعم', NULL, '2019-04-02 15:21:23', '2019-04-02 15:21:23'),
(1511, 520, NULL, NULL, '2019-04-02 15:21:23', '2019-04-02 15:21:23'),
(1512, 521, 'الرسوم البيانية', NULL, '2019-04-02 15:22:36', '2019-04-02 15:22:36'),
(1513, 521, 'إضافة الفيديو', NULL, '2019-04-02 15:22:36', '2019-04-02 15:22:36'),
(1514, 522, 'Insert', NULL, '2019-04-02 15:23:25', '2019-04-02 15:23:25'),
(1515, 522, 'Design', NULL, '2019-04-02 15:23:25', '2019-04-02 15:23:25'),
(1516, 523, '5', NULL, '2019-04-02 15:24:50', '2019-04-02 15:24:50'),
(1517, 523, NULL, NULL, '2019-04-02 15:24:50', '2019-04-02 15:24:50'),
(1518, 492, 'The sum is 2', 0, '2019-04-03 08:31:06', '2019-04-03 08:31:06'),
(1519, 492, 'The sum is 5', 1, '2019-04-03 08:31:06', '2019-04-03 08:31:06'),
(1520, 492, 'The sum is 3', 0, '2019-04-03 08:31:06', '2019-04-03 08:31:06'),
(1521, 492, 'The sum is 8', 0, '2019-04-03 08:31:06', '2019-04-03 08:31:06'),
(1558, 526, 'n lg n', 1, '2019-04-08 17:33:19', '2019-04-08 17:33:19'),
(1559, 526, 'n^2', 0, '2019-04-08 17:33:20', '2019-04-08 17:33:20'),
(1560, 526, 'n', 0, '2019-04-08 17:33:20', '2019-04-08 17:33:20'),
(1561, 526, 'n^2 lg n', 0, '2019-04-08 17:33:20', '2019-04-08 17:33:20'),
(1570, 530, 'True', 1, '2019-04-08 17:43:28', '2019-04-08 17:43:28'),
(1571, 530, 'False', 0, '2019-04-08 17:43:28', '2019-04-08 17:43:28'),
(1572, 531, 'True', 0, '2019-04-08 17:44:49', '2019-04-08 17:44:49'),
(1573, 531, 'False', 1, '2019-04-08 17:44:49', '2019-04-08 17:44:49'),
(1574, 532, 'True', 1, '2019-04-08 17:47:03', '2019-04-08 17:47:03'),
(1575, 532, 'False', 0, '2019-04-08 17:47:03', '2019-04-08 17:47:03'),
(1576, 533, 'True', 1, '2019-04-08 17:49:19', '2019-04-08 17:49:19'),
(1577, 533, 'False', 0, '2019-04-08 17:49:19', '2019-04-08 17:49:19'),
(1578, 534, 'True', 1, '2019-04-08 17:53:24', '2019-04-08 17:53:24'),
(1579, 534, 'False', 0, '2019-04-08 17:53:24', '2019-04-08 17:53:24'),
(1580, 535, 'True', 0, '2019-04-08 17:54:57', '2019-04-08 17:54:57'),
(1581, 535, 'False', 1, '2019-04-08 17:54:57', '2019-04-08 17:54:57'),
(1582, 536, 'True', 1, '2019-04-08 17:55:56', '2019-04-08 17:55:56'),
(1583, 536, 'False', 0, '2019-04-08 17:55:56', '2019-04-08 17:55:56'),
(1596, 524, 'n lg lg n', 0, '2019-04-09 16:49:19', '2019-04-09 16:49:19'),
(1597, 524, 'n lg n', 1, '2019-04-09 16:49:19', '2019-04-09 16:49:19'),
(1598, 524, 'n', 0, '2019-04-09 16:49:19', '2019-04-09 16:49:19'),
(1599, 524, 'n^2', 0, '2019-04-09 16:49:19', '2019-04-09 16:49:19'),
(1600, 525, 'lg lg n', 0, '2019-04-09 16:51:35', '2019-04-09 16:51:35'),
(1601, 525, 'n lg n', 0, '2019-04-09 16:51:35', '2019-04-09 16:51:35'),
(1602, 525, 'n^2', 0, '2019-04-09 16:51:35', '2019-04-09 16:51:35'),
(1603, 525, 'lg n', 1, '2019-04-09 16:51:35', '2019-04-09 16:51:35'),
(1604, 527, 'n lg n', 0, '2019-04-09 16:51:57', '2019-04-09 16:51:57'),
(1605, 527, 'n^2 lg n', 0, '2019-04-09 16:51:57', '2019-04-09 16:51:57'),
(1606, 527, 'lg n', 0, '2019-04-09 16:51:57', '2019-04-09 16:51:57'),
(1607, 527, 'n^2', 1, '2019-04-09 16:51:57', '2019-04-09 16:51:57'),
(1608, 528, '48 | 18 | 56 | 74 | 76 | 68 | 88 | 68 | 92 | 74 | 82 | 94', 0, '2019-04-09 16:52:30', '2019-04-09 16:52:30'),
(1609, 528, '56 | 82 | 92 | 74 | 76 | 68 | 88 | 68 | 48 | 74 | 18 | 94', 0, '2019-04-09 16:52:30', '2019-04-09 16:52:30'),
(1610, 528, '18 | 48 | 56 | 74 | 76 | 68 | 88 | 68 | 92 | 74 | 82 | 94', 1, '2019-04-09 16:52:30', '2019-04-09 16:52:30'),
(1611, 528, '56 | 18 | 48 | 74 | 76 | 68 | 88 | 68 | 92 | 74 | 82 | 94', 0, '2019-04-09 16:52:30', '2019-04-09 16:52:30'),
(1612, 529, '15 | 19 | 10 | 7 | 17 | 16', 0, '2019-04-09 16:53:42', '2019-04-09 16:53:42'),
(1613, 529, '19 | 15 | 10 | 7 | 17 | 16', 0, '2019-04-09 16:53:42', '2019-04-09 16:53:42'),
(1614, 529, '19 | 17 | 16 | 7 | 15| 10', 1, '2019-04-09 16:53:42', '2019-04-09 16:53:42'),
(1615, 529, '19 | 17 | 16 | 15 | 7| 10', 0, '2019-04-09 16:53:42', '2019-04-09 16:53:42'),
(1620, 537, '9', 0, '2019-04-14 11:37:46', '2019-04-14 11:37:46'),
(1621, 537, '10', 1, '2019-04-14 11:37:46', '2019-04-14 11:37:46'),
(1622, 537, '11', 0, '2019-04-14 11:37:46', '2019-04-14 11:37:46'),
(1623, 537, '8', 0, '2019-04-14 11:37:46', '2019-04-14 11:37:46'),
(1626, 539, 'التربوى', 1, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(1627, 539, 'الارتقائى', 0, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(1628, 539, 'الاجتماعي', 0, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(1629, 539, NULL, 0, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(1630, 538, 'True', 1, '2019-04-14 16:41:42', '2019-04-14 16:41:42'),
(1631, 538, 'False', 0, '2019-04-14 16:41:42', '2019-04-14 16:41:42'),
(1640, 541, 'البناء', 0, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(1641, 541, 'التفكير', 1, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(1642, 541, 'التوجه', 0, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(1643, 541, NULL, 0, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(1644, 542, 'التعليمي', 0, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(1645, 542, 'المدرسي', 0, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(1646, 542, 'التربوي', 1, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(1647, 542, NULL, 0, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(1648, 543, 'كمياً', 0, '2019-04-22 12:12:54', '2019-04-22 12:12:54'),
(1649, 543, 'كيفياً', 0, '2019-04-22 12:12:54', '2019-04-22 12:12:54'),
(1650, 543, 'الاثنين معا', 1, '2019-04-22 12:12:54', '2019-04-22 12:12:54'),
(1651, 543, NULL, 0, '2019-04-22 12:12:54', '2019-04-22 12:12:54'),
(1652, 544, 'النظام', 1, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(1653, 544, 'المنظومة', 0, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(1654, 544, 'الاثنين معا', 0, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(1655, 544, NULL, 0, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(1656, 545, 'True', 1, '2019-04-22 12:13:40', '2019-04-22 12:13:40'),
(1657, 545, 'False', 0, '2019-04-22 12:13:40', '2019-04-22 12:13:40'),
(1658, 546, 'True', 1, '2019-04-22 12:13:59', '2019-04-22 12:13:59'),
(1659, 546, 'False', 0, '2019-04-22 12:13:59', '2019-04-22 12:13:59'),
(1660, 547, 'True', 1, '2019-04-22 12:14:19', '2019-04-22 12:14:19'),
(1661, 547, 'False', 0, '2019-04-22 12:14:19', '2019-04-22 12:14:19'),
(1662, 548, 'True', 0, '2019-04-22 12:15:00', '2019-04-22 12:15:00'),
(1663, 548, 'False', 1, '2019-04-22 12:15:00', '2019-04-22 12:15:00'),
(1664, 549, 'True', 0, '2019-04-22 12:16:31', '2019-04-22 12:16:31'),
(1665, 549, 'False', 1, '2019-04-22 12:16:31', '2019-04-22 12:16:31'),
(1666, 550, 'True', 1, '2019-04-22 12:16:50', '2019-04-22 12:16:50'),
(1667, 550, 'False', 0, '2019-04-22 12:16:50', '2019-04-22 12:16:50'),
(1668, 551, 'المنظومية', 1, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(1669, 551, 'النظامية', 0, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(1670, 551, 'المغلقة', 0, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(1671, 551, NULL, 0, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(1672, 552, 'Base Derived Derived', 1, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(1673, 552, 'Base Derived', 0, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(1674, 552, 'Derived Base Derived', 0, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(1675, 552, 'Base Base Derived', 0, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(1676, 553, 'statement3; statement5;', 0, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(1677, 553, 'statement1; statement2; statement5; statement6;statement7;', 0, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(1678, 553, 'statement1; statement2; statement5; statement7;', 0, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(1679, 553, 'statement1; statement2; statement5; statement6;', 1, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(1680, 554, 'x=6.0, y=11', 0, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(1681, 554, 'x=1.0, y=11', 1, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(1682, 554, 'x=11, y=1', 0, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(1683, 554, '1.0   11', 0, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(1684, 555, '1 5 9 13 17', 1, '2019-04-23 17:39:22', '2019-04-23 17:39:22'),
(1685, 555, '1 3 5 7 9 11 13 15 16 17 18 19', 0, '2019-04-23 17:39:22', '2019-04-23 17:39:22'),
(1686, 555, '1 2 3 4 5 6 7 8 9 10', 0, '2019-04-23 17:39:22', '2019-04-23 17:39:22'),
(1687, 555, '1 5 9 13 17  21', 0, '2019-04-23 17:39:22', '2019-04-23 17:39:22'),
(1688, 556, '10.0 10.0', 1, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(1689, 556, '20.0   20.0', 0, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(1690, 556, '10.0 20.0', 0, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(1691, 556, '20.0 10.0', 0, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(1692, 557, '2', 0, '2019-04-23 17:53:01', '2019-04-23 17:53:01'),
(1693, 557, '1', 0, '2019-04-23 17:53:01', '2019-04-23 17:53:01'),
(1694, 557, '4', 1, '2019-04-23 17:53:01', '2019-04-23 17:53:01'),
(1695, 557, '5', 0, '2019-04-23 17:53:01', '2019-04-23 17:53:01'),
(1696, 558, '80 80 80', 1, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(1697, 558, '80 55 80', 0, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(1698, 558, '55 55 55', 0, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(1699, 558, '9 55 80', 0, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(1700, 561, '6', 1, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(1701, 561, '10', 0, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(1702, 561, '15', 0, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(1703, 561, '0', 0, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(1704, 562, '5', 0, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(1705, 562, '9', 1, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(1706, 562, '10', 0, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(1707, 562, '8', 0, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(1708, 563, '32, A', 0, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(1709, 563, '32, a', 0, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(1710, 563, '129, A', 0, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(1711, 563, '129, a', 1, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(1712, 564, '13  8  8', 0, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(1713, 564, '13  8  13', 1, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(1714, 564, '13  13  13', 0, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(1715, 564, '3   13   3', 0, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(1716, 565, '1  31  3', 1, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(1717, 565, '5  31  3', 0, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(1718, 565, '5  5   3', 0, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(1719, 565, '5  5   7', 0, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(1720, 566, '5  3  16', 0, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(1721, 566, '16  6   19', 0, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(1722, 566, '6  16  16', 1, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(1723, 566, '3  5  19', 0, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(1724, 567, '7  6  5  5  6  7  8', 1, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(1725, 567, '7  6  5  4  3  2  8', 0, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(1726, 567, '8  7  6  5  4  3  2', 0, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(1727, 567, '6  5  4  3  2  7  8', 0, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(1728, 572, '20', 1, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(1729, 572, '40', 0, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(1730, 572, '45', 0, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(1731, 572, '55', 0, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(1732, 573, '4  5  6  7  2  3 8', 0, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(1733, 573, '8  7  6  5  4  3  2', 0, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(1734, 573, '5  6  7  8  3  4  2', 1, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(1735, 573, '2  3  4  5  6  7  8', 0, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(1740, 575, 'Aliquam assumenda es', 1, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(1741, 575, 'Tempor in nemo provi', 0, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(1742, 575, 'Veritatis sed hic om', 0, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(1743, 575, 'Assumenda inventore', 0, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(1744, 576, 'sdfgh', 1, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(1745, 576, 'dfghjkl', 0, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(1746, 576, 'dfghjk', 0, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(1747, 576, 'dfghj', 0, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(1752, 577, 'gggg', 1, '2019-07-02 08:53:47', '2019-07-02 08:53:47'),
(1753, 577, 'hjjkjkkj', 0, '2019-07-02 08:53:48', '2019-07-02 08:53:48'),
(1754, 577, 'kjkkkkk', 0, '2019-07-02 08:53:48', '2019-07-02 08:53:48'),
(1755, 577, 'kkkkk', 0, '2019-07-02 08:53:48', '2019-07-02 08:53:48'),
(1756, 540, NULL, 0, '2019-07-02 08:59:29', '2019-07-02 08:59:29'),
(1757, 540, NULL, 0, '2019-07-02 08:59:29', '2019-07-02 08:59:29'),
(1758, 540, NULL, 0, '2019-07-02 08:59:29', '2019-07-02 08:59:29'),
(1759, 540, NULL, 0, '2019-07-02 08:59:29', '2019-07-02 08:59:29'),
(1760, 578, 'hgjkl', 1, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(1761, 578, 'hjkl;', 0, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(1762, 578, 'hjkl', 0, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(1763, 578, 'hjkl', 0, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(1764, 579, 'lkn', 1, '2019-07-31 07:35:20', '2019-07-31 07:35:20'),
(1765, 579, 'jhvbjkn', 0, '2019-07-31 07:35:20', '2019-07-31 07:35:20'),
(1766, 579, ';lnjk', 0, '2019-07-31 07:35:20', '2019-07-31 07:35:20'),
(1767, 579, 'jb', 0, '2019-07-31 07:35:20', '2019-07-31 07:35:20'),
(1768, 580, 'kjbkjb', 1, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(1769, 580, 'jhchv', 0, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(1770, 580, 'jhvhjv', 0, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(1771, 580, 'jhvjh', 0, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(1772, 581, 'kjbkjb', 1, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(1773, 581, 'jvjvkk', 0, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(1774, 581, 'jvhjh', 0, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(1775, 581, 'jvh', 0, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(1776, 582, 'الاجابه الاولي', 0, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(1777, 582, 'الاجابه التانيه', 1, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(1778, 582, 'الاجابه التالته', 0, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(1779, 582, 'الاجابه الرابعه', 0, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(1780, 583, 'الاجابه الاولي - السؤال التاني', 0, '2019-12-12 06:16:26', '2019-12-12 06:16:26'),
(1781, 583, 'الاجابه التانيه- السؤال الاتاني', 0, '2019-12-12 06:16:26', '2019-12-12 06:16:26'),
(1782, 583, 'الاجابه التالته - السؤال التاني', 0, '2019-12-12 06:16:26', '2019-12-12 06:16:26'),
(1783, 583, 'الاجابه الرابعه - السؤال التاني', 0, '2019-12-12 06:16:26', '2019-12-12 06:16:26'),
(1784, 584, 'الاجابه الاولي - السؤال التاني', 0, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(1785, 584, 'الاجابه التانيه- السؤال الاتاني', 0, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(1786, 584, 'الاجابه التالته - السؤال التاني', 0, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(1787, 584, 'الاجابه الرابعه - السؤال التاني', 0, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(1788, 585, 'Ex aute voluptatem v', 1, '2019-12-15 02:45:26', '2019-12-15 02:45:26'),
(1789, 585, 'Est qui et unde haru', 0, '2019-12-15 02:45:26', '2019-12-15 02:45:26'),
(1790, 585, 'Sunt labore incidunt', 0, '2019-12-15 02:45:26', '2019-12-15 02:45:26'),
(1791, 585, 'Sunt omnis aliquid d', 0, '2019-12-15 02:45:26', '2019-12-15 02:45:26'),
(1792, 586, 'Ex aute voluptatem v', 1, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(1793, 586, 'Est qui et unde haru', 0, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(1794, 586, 'Sunt labore incidunt', 0, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(1795, 586, 'Sunt omnis aliquid d', 0, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(1796, 587, 'lbkjb', 1, '2019-12-15 02:53:32', '2019-12-15 02:53:32'),
(1797, 587, 'kjbkjbkjjk', 0, '2019-12-15 02:53:32', '2019-12-15 02:53:32'),
(1798, 587, 'kjvjkv', 0, '2019-12-15 02:53:33', '2019-12-15 02:53:33'),
(1799, 587, 'lkkjbkjb', 0, '2019-12-15 02:53:33', '2019-12-15 02:53:33'),
(1800, 588, 'Mollit quis quia qui', 1, '2019-12-15 03:00:24', '2019-12-15 03:00:24'),
(1801, 588, 'Aut id ea aliquid ad', 0, '2019-12-15 03:00:25', '2019-12-15 03:00:25'),
(1802, 588, 'Commodi qui quia dol', 0, '2019-12-15 03:00:25', '2019-12-15 03:00:25'),
(1803, 588, 'Sed eaque dicta corr', 0, '2019-12-15 03:00:25', '2019-12-15 03:00:25'),
(1804, 589, 'Cupidatat ab ut veni', 0, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(1805, 589, 'Voluptatem Voluptas', 1, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(1806, 589, 'In corrupti nemo vo', 0, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(1807, 589, 'Dolor blanditiis id', 0, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(1808, 590, 'Dignissimos irure qu', 1, '2019-12-15 03:01:29', '2019-12-15 03:01:29'),
(1809, 590, 'Aliquip cumque conse', 0, '2019-12-15 03:01:30', '2019-12-15 03:01:30'),
(1810, 590, 'Dolor et in magni na', 0, '2019-12-15 03:01:30', '2019-12-15 03:01:30'),
(1811, 590, 'Quae hic quis porro', 0, '2019-12-15 03:01:30', '2019-12-15 03:01:30'),
(1812, 591, 'dsadsad', 1, '2020-01-15 10:58:06', '2020-01-15 10:58:06'),
(1813, 591, 'dfdsdfsd', 0, '2020-01-15 10:58:06', '2020-01-15 10:58:06'),
(1814, 591, 'sdfsdfsd', 0, '2020-01-15 10:58:06', '2020-01-15 10:58:06'),
(1815, 591, 'gfgghghgh', 0, '2020-01-15 10:58:06', '2020-01-15 10:58:06'),
(1824, 594, 'cvcv', 0, '2020-01-15 10:59:01', '2020-01-15 10:59:01'),
(1825, 594, 'bbc', 0, '2020-01-15 10:59:01', '2020-01-15 10:59:01'),
(1826, 594, 'bb', 0, '2020-01-15 10:59:02', '2020-01-15 10:59:02'),
(1827, 594, 'mm', 0, '2020-01-15 10:59:02', '2020-01-15 10:59:02'),
(1840, 598, 'fdsfsdf', 0, '2020-01-15 11:00:26', '2020-01-15 11:00:26'),
(1841, 598, 'sdf', 1, '2020-01-15 11:00:26', '2020-01-15 11:00:26'),
(1842, 598, 'fgsdg', 0, '2020-01-15 11:00:26', '2020-01-15 11:00:26'),
(1843, 598, 'gsdg', 0, '2020-01-15 11:00:26', '2020-01-15 11:00:26'),
(1856, 600, 'fgfhhfg', 0, '2020-01-15 11:08:15', '2020-01-15 11:08:15'),
(1857, 600, 'hfgh', 0, '2020-01-15 11:08:15', '2020-01-15 11:08:15'),
(1858, 600, 'hfg', 1, '2020-01-15 11:08:15', '2020-01-15 11:08:15'),
(1859, 600, 'fghfhfghf', 0, '2020-01-15 11:08:15', '2020-01-15 11:08:15'),
(1860, 593, 'tr', 0, '2020-01-15 16:50:39', '2020-01-15 16:50:39'),
(1861, 593, 'yy', 0, '2020-01-15 16:50:39', '2020-01-15 16:50:39'),
(1862, 593, 'ii', 0, '2020-01-15 16:50:39', '2020-01-15 16:50:39'),
(1863, 593, 'op', 0, '2020-01-15 16:50:39', '2020-01-15 16:50:39'),
(1864, 599, 'd', 1, '2020-01-15 16:51:02', '2020-01-15 16:51:02'),
(1865, 599, 'd', 0, '2020-01-15 16:51:02', '2020-01-15 16:51:02'),
(1866, 599, 'd', 0, '2020-01-15 16:51:02', '2020-01-15 16:51:02'),
(1867, 599, 'd', 0, '2020-01-15 16:51:02', '2020-01-15 16:51:02'),
(1868, 595, 'ou', 0, '2020-01-15 16:51:34', '2020-01-15 16:51:34'),
(1869, 595, 'bg', 1, '2020-01-15 16:51:34', '2020-01-15 16:51:34'),
(1870, 595, 'ujj', 0, '2020-01-15 16:51:34', '2020-01-15 16:51:34'),
(1871, 595, 'rfg', 0, '2020-01-15 16:51:34', '2020-01-15 16:51:34'),
(1872, 596, 'hg', 0, '2020-01-15 16:51:50', '2020-01-15 16:51:50'),
(1873, 596, 'kk', 0, '2020-01-15 16:51:50', '2020-01-15 16:51:50'),
(1874, 596, 'fdf', 0, '2020-01-15 16:51:50', '2020-01-15 16:51:50'),
(1875, 596, 'cc', 0, '2020-01-15 16:51:50', '2020-01-15 16:51:50'),
(1876, 597, 'adasad', 1, '2020-01-15 16:52:04', '2020-01-15 16:52:04'),
(1877, 597, 'gaf', 0, '2020-01-15 16:52:04', '2020-01-15 16:52:04'),
(1878, 597, 'hggh', 0, '2020-01-15 16:52:04', '2020-01-15 16:52:04'),
(1879, 597, 'fgffg', 0, '2020-01-15 16:52:04', '2020-01-15 16:52:04'),
(1880, 601, 'asd', 0, '2020-01-16 00:36:47', '2020-01-16 00:36:47'),
(1881, 601, 'asd', 0, '2020-01-16 00:36:47', '2020-01-16 00:36:47'),
(1882, 601, 'asd', 0, '2020-01-16 00:36:47', '2020-01-16 00:36:47'),
(1883, 601, 'asd', 1, '2020-01-16 00:36:47', '2020-01-16 00:36:47'),
(1884, 602, 'asd', 0, '2020-01-16 00:38:32', '2020-01-16 00:38:32'),
(1885, 602, 'asd', 0, '2020-01-16 00:38:32', '2020-01-16 00:38:32'),
(1886, 602, 'asd', 0, '2020-01-16 00:38:32', '2020-01-16 00:38:32'),
(1887, 602, 'asd', 1, '2020-01-16 00:38:32', '2020-01-16 00:38:32'),
(1888, 592, 'qwq', 0, '2020-01-16 00:38:48', '2020-01-16 00:38:48'),
(1889, 592, 'df', 1, '2020-01-16 00:38:48', '2020-01-16 00:38:48'),
(1890, 592, 'gg', 0, '2020-01-16 00:38:48', '2020-01-16 00:38:48'),
(1891, 592, 'hh', 0, '2020-01-16 00:38:48', '2020-01-16 00:38:48'),
(1892, 603, NULL, 0, '2020-01-17 10:12:36', '2020-01-17 10:12:36'),
(1893, 603, NULL, 0, '2020-01-17 10:12:36', '2020-01-17 10:12:36'),
(1894, 603, NULL, 0, '2020-01-17 10:12:36', '2020-01-17 10:12:36'),
(1895, 603, NULL, 0, '2020-01-17 10:12:36', '2020-01-17 10:12:36'),
(1896, 604, 'easy choose 1', 0, '2020-01-17 11:01:21', '2020-01-17 11:01:21'),
(1897, 604, 'easy choose 1', 1, '2020-01-17 11:01:21', '2020-01-17 11:01:21'),
(1898, 604, 'easy choose', 0, '2020-01-17 11:01:21', '2020-01-17 11:01:21'),
(1899, 604, 'easy choose', 0, '2020-01-17 11:01:21', '2020-01-17 11:01:21'),
(1900, 605, 'easy choose', 0, '2020-01-17 11:01:35', '2020-01-17 11:01:35'),
(1901, 605, 'easy choose', 0, '2020-01-17 11:01:35', '2020-01-17 11:01:35'),
(1902, 605, 'easy choose', 0, '2020-01-17 11:01:35', '2020-01-17 11:01:35'),
(1903, 605, 'easy choose', 0, '2020-01-17 11:01:35', '2020-01-17 11:01:35'),
(1904, 606, 'easy choose', 0, '2020-01-17 11:01:50', '2020-01-17 11:01:50'),
(1905, 606, 'easy choose', 0, '2020-01-17 11:01:50', '2020-01-17 11:01:50'),
(1906, 606, 'easy choose', 0, '2020-01-17 11:01:51', '2020-01-17 11:01:51'),
(1907, 606, NULL, 1, '2020-01-17 11:01:51', '2020-01-17 11:01:51'),
(1908, 607, 'medium choose', 0, '2020-01-17 11:02:07', '2020-01-17 11:02:07'),
(1909, 607, 'medium choose', 1, '2020-01-17 11:02:07', '2020-01-17 11:02:07'),
(1910, 607, 'medium choose', 0, '2020-01-17 11:02:07', '2020-01-17 11:02:07'),
(1911, 607, 'medium choose', 0, '2020-01-17 11:02:07', '2020-01-17 11:02:07'),
(1912, 608, 'medium choose', 0, '2020-01-17 11:02:20', '2020-01-17 11:02:20'),
(1913, 608, 'medium choose', 0, '2020-01-17 11:02:20', '2020-01-17 11:02:20'),
(1914, 608, 'medium choose', 0, '2020-01-17 11:02:20', '2020-01-17 11:02:20'),
(1915, 608, 'medium choose', 0, '2020-01-17 11:02:20', '2020-01-17 11:02:20'),
(1916, 609, 'medium choose', 0, '2020-01-17 11:02:35', '2020-01-17 11:02:35'),
(1917, 609, 'medium choose', 1, '2020-01-17 11:02:35', '2020-01-17 11:02:35'),
(1918, 609, 'medium choose', 0, '2020-01-17 11:02:35', '2020-01-17 11:02:35'),
(1919, 609, 'medium choose', 0, '2020-01-17 11:02:35', '2020-01-17 11:02:35'),
(1920, 610, 'hard choose', 0, '2020-01-17 11:02:55', '2020-01-17 11:02:55'),
(1921, 610, 'hard choose', 0, '2020-01-17 11:02:55', '2020-01-17 11:02:55'),
(1922, 610, 'hard choose', 1, '2020-01-17 11:02:55', '2020-01-17 11:02:55'),
(1923, 610, 'hard choose', 0, '2020-01-17 11:02:55', '2020-01-17 11:02:55'),
(1924, 611, 'hard choose', 0, '2020-01-17 11:03:33', '2020-01-17 11:03:33'),
(1925, 611, 'hard choose', 1, '2020-01-17 11:03:33', '2020-01-17 11:03:33'),
(1926, 611, 'hard choose', 0, '2020-01-17 11:03:33', '2020-01-17 11:03:33'),
(1927, 611, 'hard choose', 0, '2020-01-17 11:03:33', '2020-01-17 11:03:33'),
(1928, 612, 'True', 1, '2020-01-17 11:04:34', '2020-01-17 11:04:34'),
(1929, 612, 'False', 0, '2020-01-17 11:04:34', '2020-01-17 11:04:34'),
(1930, 613, 'easy choose', 0, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(1931, 613, 'easy choose', 1, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(1932, 613, 'easy choose', 0, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(1933, 613, 'easy choose', 0, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(1934, 614, 'easy choose', 0, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(1935, 614, 'easy choose', 1, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(1936, 614, 'easy choose', 0, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(1937, 614, 'easy choose', 0, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(1938, 615, 'meduim choose', 0, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(1939, 615, 'meduim choose', 1, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(1940, 615, 'meduim choose', 0, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(1941, 615, 'meduim choose', 0, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(1942, 616, 'meduim choose', 0, '2020-01-17 11:09:23', '2020-01-17 11:09:23'),
(1943, 616, 'meduim choose', 0, '2020-01-17 11:09:23', '2020-01-17 11:09:23'),
(1944, 616, 'meduim choose', 1, '2020-01-17 11:09:23', '2020-01-17 11:09:23'),
(1945, 616, 'meduim choose', 0, '2020-01-17 11:09:23', '2020-01-17 11:09:23'),
(1946, 617, 'meduim choose', 0, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(1947, 617, 'meduim choose', 0, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(1948, 617, 'meduim choose', 1, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(1949, 617, 'meduim choose', 0, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(1950, 618, 'meduim choose', 0, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(1951, 618, 'meduim choose', 0, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(1952, 618, 'meduim choose', 1, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(1953, 618, 'meduim choose', 0, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(1954, 619, 'meduim choose', 0, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(1955, 619, 'meduim choose', 0, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(1956, 619, 'meduim choose', 1, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(1957, 619, 'meduim choose', 0, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(1958, 620, 'meduim choose', 0, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(1959, 620, 'meduim choose', 0, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(1960, 620, 'meduim choose', 1, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(1961, 620, 'meduim choose', 0, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(1962, 621, 'hard choose', 0, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(1963, 621, 'hard choose', 0, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(1964, 621, 'hard choose', 0, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(1965, 621, NULL, 1, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(1966, 622, 'hard choose', 0, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(1967, 622, 'hard choose', 0, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(1968, 622, 'hard choose', 1, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(1969, 622, 'hard choose', 0, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(1970, 623, 'True', 1, '2020-01-17 11:11:41', '2020-01-17 11:11:41'),
(1971, 623, 'False', 0, '2020-01-17 11:11:42', '2020-01-17 11:11:42'),
(1972, 624, 'asd', NULL, '2020-02-17 08:10:03', '2020-02-17 08:10:03'),
(1973, 624, 'asd', NULL, '2020-02-17 08:10:03', '2020-02-17 08:10:03'),
(1974, 625, 'ddaadda', 1, '2020-03-14 21:23:11', '2020-03-14 21:23:11'),
(1975, 625, 'dasdad', 0, '2020-03-14 21:23:11', '2020-03-14 21:23:11'),
(1976, 625, 'asdasd', 0, '2020-03-14 21:23:11', '2020-03-14 21:23:11'),
(1977, 625, 'dadasdadad', 0, '2020-03-14 21:23:12', '2020-03-14 21:23:12'),
(1978, 626, 'fsfsfffsdf', 0, '2020-03-14 21:23:40', '2020-03-14 21:23:40'),
(1979, 626, 'dsfffdsffdsf', 1, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(1980, 626, 'sdfsdffsff', 0, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(1981, 626, 'dfhdfhfhhdfh', 0, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(1982, 627, 'True', 1, '2020-03-14 21:24:05', '2020-03-14 21:24:05'),
(1983, 627, 'False', 0, '2020-03-14 21:24:05', '2020-03-14 21:24:05'),
(1984, 628, 'True', 0, '2020-03-14 21:26:15', '2020-03-14 21:26:15'),
(1985, 628, 'False', 1, '2020-03-14 21:26:15', '2020-03-14 21:26:15'),
(1986, 631, 'fsffdfffsfsfsf', 1, '2020-03-14 21:28:36', '2020-03-14 21:28:36'),
(1987, 631, 'fsfsdffffsf', 0, '2020-03-14 21:28:36', '2020-03-14 21:28:36'),
(1988, 631, 'fsdfsfsfsfsfs', 0, '2020-03-14 21:28:36', '2020-03-14 21:28:36'),
(1989, 631, NULL, 0, '2020-03-14 21:28:36', '2020-03-14 21:28:36'),
(1990, 632, NULL, 0, '2020-03-19 17:08:01', '2020-03-19 17:08:01'),
(1991, 632, NULL, 0, '2020-03-19 17:08:01', '2020-03-19 17:08:01'),
(1992, 632, NULL, 0, '2020-03-19 17:08:02', '2020-03-19 17:08:02'),
(1993, 632, NULL, 0, '2020-03-19 17:08:02', '2020-03-19 17:08:02'),
(1994, 633, NULL, 0, '2020-03-19 17:13:17', '2020-03-19 17:13:17'),
(1995, 633, NULL, 0, '2020-03-19 17:13:17', '2020-03-19 17:13:17'),
(1996, 633, NULL, 0, '2020-03-19 17:13:17', '2020-03-19 17:13:17'),
(1997, 633, NULL, 0, '2020-03-19 17:13:17', '2020-03-19 17:13:17'),
(1998, 634, NULL, 0, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(1999, 634, NULL, 0, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(2000, 634, NULL, 0, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(2001, 634, NULL, 0, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(2002, 635, 'asd1', 0, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2003, 635, 'asd2', 1, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2004, 635, 'asd3', 0, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2005, 635, 'asd4', 0, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2006, 636, '1', 1, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2007, 636, '0', 0, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2008, 637, 'answer1', 0, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2009, 637, 'answer2', 1, '2020-03-22 13:04:31', '2020-03-22 13:04:31'),
(2010, 640, 'asd1', 0, '2020-03-22 13:09:29', '2020-03-22 13:09:29'),
(2011, 640, 'asd2', 1, '2020-03-22 13:09:29', '2020-03-22 13:09:29'),
(2012, 640, 'asd3', 0, '2020-03-22 13:09:29', '2020-03-22 13:09:29'),
(2013, 640, 'asd4', 0, '2020-03-22 13:09:29', '2020-03-22 13:09:29'),
(2014, 641, '1', 1, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(2015, 641, '0', 0, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(2016, 642, 'answer1', 0, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(2017, 642, 'answer2', 1, '2020-03-22 13:09:30', '2020-03-22 13:09:30'),
(2018, 645, 'a', 1, '2020-04-07 13:59:38', '2020-04-07 13:59:38'),
(2019, 645, 'b', 0, '2020-04-07 13:59:39', '2020-04-07 13:59:39'),
(2020, 645, 'c', 0, '2020-04-07 13:59:39', '2020-04-07 13:59:39'),
(2021, 645, 'd', 0, '2020-04-07 13:59:39', '2020-04-07 13:59:39'),
(2022, 646, 'True', 1, '2020-04-07 14:00:03', '2020-04-07 14:00:03'),
(2023, 646, 'False', 0, '2020-04-07 14:00:04', '2020-04-07 14:00:04'),
(2024, 647, 'a', NULL, '2020-04-07 14:01:00', '2020-04-07 14:01:00'),
(2025, 647, 'b', NULL, '2020-04-07 14:01:00', '2020-04-07 14:01:00'),
(2026, 650, 'asd1', 0, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2027, 650, 'asd2', 1, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2028, 650, 'asd3', 0, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2029, 650, 'asd4', 0, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2030, 651, '1', 1, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2031, 651, '0', 0, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2032, 652, 'answer1', 0, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2033, 652, 'answer2', 1, '2020-04-17 18:50:21', '2020-04-17 18:50:21'),
(2034, 655, 'asd1', 0, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2035, 655, 'asd2', 1, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2036, 655, 'asd3', 0, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2037, 655, 'asd4', 0, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2038, 656, '1', 1, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2039, 656, '0', 0, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2040, 657, 'answer1', 0, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2041, 657, 'answer2', 1, '2020-04-17 18:52:38', '2020-04-17 18:52:38'),
(2042, 660, 'a', 1, '2020-04-17 19:01:15', '2020-04-17 19:01:15'),
(2043, 660, 'b', 0, '2020-04-17 19:01:15', '2020-04-17 19:01:15'),
(2044, 660, 'c', 0, '2020-04-17 19:01:15', '2020-04-17 19:01:15'),
(2045, 660, 'd', 0, '2020-04-17 19:01:15', '2020-04-17 19:01:15'),
(2046, 661, NULL, 1, '2020-04-17 19:04:30', '2020-04-17 19:04:30'),
(2047, 661, NULL, 0, '2020-04-17 19:04:30', '2020-04-17 19:04:30'),
(2048, 661, NULL, 0, '2020-04-17 19:04:31', '2020-04-17 19:04:31'),
(2049, 661, NULL, 0, '2020-04-17 19:04:31', '2020-04-17 19:04:31'),
(2050, 662, 'True', 1, '2020-04-17 19:05:17', '2020-04-17 19:05:17'),
(2051, 662, 'False', 0, '2020-04-17 19:05:17', '2020-04-17 19:05:17'),
(2052, 663, '22', NULL, '2020-04-17 19:05:44', '2020-04-17 19:05:44'),
(2053, 663, '22', NULL, '2020-04-17 19:05:45', '2020-04-17 19:05:45');

-- --------------------------------------------------------

--
-- بنية الجدول `question_choice_images`
--

CREATE TABLE `question_choice_images` (
  `id` int(11) NOT NULL,
  `question_choice_id` int(11) NOT NULL,
  `path` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- إرجاع أو استيراد بيانات الجدول `question_choice_images`
--

INSERT INTO `question_choice_images` (`id`, `question_choice_id`, `path`) VALUES
(5, 40, 'images/2020-01-12_23_19_29372805447.jpg'),
(6, 41, 'images/2020-01-12_23_19_291941239144.jpg'),
(7, 42, 'images/2020-01-12_23_19_291090672003.jpg'),
(8, 43, 'images/2020-01-12_23_19_29674482780.jpg'),
(9, 44, 'images/2020-01-13_09_29_31911627209.png'),
(10, 45, 'images/2020-01-13_09_29_3156489905.jpg'),
(11, 46, 'images/2020-01-13_09_29_31398118478.jpg'),
(12, 47, 'images/2020-01-13_09_29_312122321348.jpg'),
(13, 48, 'images/2020-01-13_09_29_3161662345.png'),
(14, 49, 'images/2020-01-13_09_29_31257436456.jpg'),
(15, 50, 'images/2020-01-13_09_29_311076056570.jpg'),
(16, 51, 'images/2020-01-13_09_29_31464787403.jpg'),
(17, 48, 'images/2020-01-14_10_11_04268981609.jpg'),
(18, 49, 'images/2020-01-14_10_11_041611680166.jpg'),
(19, 50, 'images/2020-01-14_10_11_04501117086.jpg'),
(20, 51, 'images/2020-01-14_10_11_041653198766.jpg'),
(21, 52, 'images/2020-01-15_10_09_261819234961.jpg'),
(22, 53, 'images/2020-01-15_10_09_261883152195.jpg'),
(23, 54, 'images/2020-01-15_10_09_261788295078.jpg'),
(24, 55, 'images/2020-01-15_10_09_261479363188.jpg'),
(25, 56, 'choose2020-01-15_10_14_192090976244.jpg'),
(26, 57, 'choose2020-01-15_10_14_191126122616.jpg'),
(27, 58, 'choose2020-01-15_10_14_191581369169.jpg'),
(28, 59, 'choose2020-01-15_10_14_19222516467.jpg'),
(29, 60, 'choose/2020-01-15_10_16_56117936166.jpg'),
(30, 61, 'choose/2020-01-15_10_16_56500498294.png'),
(31, 62, 'choose/2020-01-15_10_16_562079415429.jpg'),
(32, 63, 'choose/2020-01-15_10_16_56752378235.jpg'),
(33, 1986, 'choose/2020-03-14_14_28_361308533225.png'),
(34, 1987, 'choose/2020-03-14_14_28_361634108509.gif'),
(35, 1988, 'choose/2020-03-14_14_28_36807115168.png'),
(36, 2046, 'choose/2020-04-17_21_04_30427025932.png'),
(37, 2047, 'choose/2020-04-17_21_04_311882696545.png'),
(38, 2048, 'choose/2020-04-17_21_04_311327839351.gif'),
(39, 2049, 'choose/2020-04-17_21_04_31829625284.png');

-- --------------------------------------------------------

--
-- بنية الجدول `question_exams`
--

CREATE TABLE `question_exams` (
  `id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `student_id` int(11) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf16;

--
-- إرجاع أو استيراد بيانات الجدول `question_exams`
--

INSERT INTO `question_exams` (`id`, `exam_id`, `question_id`, `student_id`, `created_at`, `updated_at`) VALUES
(880, 88, 613, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(881, 88, 620, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(882, 88, 615, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(883, 88, 618, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(884, 88, 622, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(885, 88, 623, NULL, '2020-01-17 14:20:29', '2020-01-17 14:20:29'),
(886, 89, 624, NULL, '2020-02-17 08:10:03', '2020-02-17 08:10:03'),
(887, 94, 625, NULL, '2020-03-14 21:23:12', '2020-03-14 21:23:12'),
(888, 94, 626, NULL, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(889, 94, 627, NULL, '2020-03-14 21:24:05', '2020-03-14 21:24:05'),
(890, 94, 628, NULL, '2020-03-14 21:26:15', '2020-03-14 21:26:15'),
(891, 94, 629, NULL, '2020-03-14 21:27:28', '2020-03-14 21:27:28'),
(892, 94, 630, NULL, '2020-03-14 21:27:47', '2020-03-14 21:27:47'),
(893, 94, 631, NULL, '2020-03-14 21:28:37', '2020-03-14 21:28:37'),
(894, 91, 634, NULL, '2020-03-19 17:38:02', '2020-03-19 17:38:02'),
(895, 95, 645, NULL, '2020-04-07 13:59:40', '2020-04-07 13:59:40'),
(896, 95, 646, NULL, '2020-04-07 14:00:09', '2020-04-07 14:00:09'),
(897, 95, 647, NULL, '2020-04-07 14:01:00', '2020-04-07 14:01:00'),
(898, 95, 648, NULL, '2020-04-07 14:01:21', '2020-04-07 14:01:21'),
(899, 95, 649, NULL, '2020-04-07 14:01:53', '2020-04-07 14:01:53'),
(900, 96, 645, NULL, '2020-04-16 17:53:25', '2020-04-16 17:53:25'),
(901, 102, 645, NULL, '2020-04-17 06:59:58', '2020-04-17 06:59:58'),
(902, 102, 646, NULL, '2020-04-17 07:00:13', '2020-04-17 07:00:13'),
(903, 103, 645, NULL, '2020-04-17 18:28:42', '2020-04-17 18:28:42'),
(904, 103, 646, NULL, '2020-04-17 18:28:53', '2020-04-17 18:28:53'),
(905, 104, 660, NULL, '2020-04-17 19:01:16', '2020-04-17 19:01:16'),
(906, 104, 661, NULL, '2020-04-17 19:04:31', '2020-04-17 19:04:31'),
(907, 104, 662, NULL, '2020-04-17 19:05:17', '2020-04-17 19:05:17'),
(908, 104, 663, NULL, '2020-04-17 19:05:45', '2020-04-17 19:05:45'),
(909, 104, 664, NULL, '2020-04-17 19:06:12', '2020-04-17 19:06:12'),
(910, 104, 665, NULL, '2020-04-17 19:06:38', '2020-04-17 19:06:38');

-- --------------------------------------------------------

--
-- بنية الجدول `question_ilos`
--

CREATE TABLE `question_ilos` (
  `id` int(11) NOT NULL,
  `QUESTION_ID` int(11) NOT NULL,
  `ILO_ID` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `question_ilos`
--

INSERT INTO `question_ilos` (`id`, `QUESTION_ID`, `ILO_ID`, `created_at`, `updated_at`) VALUES
(21, 18, 9, '2018-10-31 05:38:36', '2018-10-31 05:38:36'),
(22, 19, 9, '2018-10-31 05:39:18', '2018-10-31 05:39:18'),
(23, 20, 9, '2018-10-31 05:43:25', '2018-10-31 05:43:25'),
(24, 21, 10, '2018-10-31 09:32:39', '2018-10-31 09:32:39'),
(25, 22, 10, '2018-10-31 09:33:53', '2018-10-31 09:33:53'),
(26, 23, 10, '2018-10-31 09:35:11', '2018-10-31 09:35:11'),
(27, 24, 10, '2018-10-31 09:36:04', '2018-10-31 09:36:04'),
(28, 25, 10, '2018-10-31 09:37:05', '2018-10-31 09:37:05'),
(29, 26, 10, '2018-10-31 09:38:14', '2018-10-31 09:38:14'),
(30, 27, 9, '2018-11-08 18:02:43', '2018-11-08 18:02:43'),
(31, 28, 9, '2018-11-08 18:03:05', '2018-11-08 18:03:05'),
(32, 29, 11, '2018-11-10 07:53:55', '2018-11-10 07:53:55'),
(33, 30, 11, '2018-11-10 07:54:18', '2018-11-10 07:54:18'),
(35, 32, 11, '2018-11-10 08:24:34', '2018-11-10 08:24:34'),
(36, 33, 12, '2018-11-10 08:26:53', '2018-11-10 08:26:53'),
(37, 34, 12, '2018-11-10 08:27:21', '2018-11-10 08:27:21'),
(38, 35, 11, '2018-11-10 08:27:54', '2018-11-10 08:27:54'),
(39, 36, 12, '2018-11-10 08:29:10', '2018-11-10 08:29:10'),
(40, 37, 11, '2018-11-10 08:29:45', '2018-11-10 08:29:45'),
(43, 40, 11, '2018-11-10 08:35:25', '2018-11-10 08:35:25'),
(44, 41, 11, '2018-11-10 08:35:45', '2018-11-10 08:35:45'),
(45, 42, 11, '2018-11-11 14:11:15', '2018-11-11 14:11:15'),
(46, 43, 12, '2018-11-11 14:11:56', '2018-11-11 14:11:56'),
(47, 44, 11, '2018-11-11 14:12:33', '2018-11-11 14:12:33'),
(48, 45, 12, '2018-11-11 14:13:00', '2018-11-11 14:13:00'),
(49, 46, 11, '2018-11-11 14:14:11', '2018-11-11 14:14:11'),
(50, 47, 12, '2018-11-11 14:14:44', '2018-11-11 14:14:44'),
(51, 48, 11, '2018-11-18 17:50:20', '2018-11-18 17:50:20'),
(52, 49, 12, '2018-11-18 17:51:50', '2018-11-18 17:51:50'),
(53, 50, 12, '2018-11-18 17:53:03', '2018-11-18 17:53:03'),
(54, 51, 12, '2018-11-18 17:54:21', '2018-11-18 17:54:21'),
(55, 52, 11, '2018-11-19 08:29:08', '2018-11-19 08:29:08'),
(56, 53, 11, '2018-11-19 08:34:28', '2018-11-19 08:34:28'),
(57, 54, 12, '2018-11-19 08:43:31', '2018-11-19 08:43:31'),
(58, 55, 12, '2018-11-19 08:44:39', '2018-11-19 08:44:39'),
(59, 56, 12, '2018-11-19 08:47:02', '2018-11-19 08:47:02'),
(60, 57, 12, '2018-11-24 08:37:54', '2018-11-24 08:37:54'),
(61, 58, 12, '2018-11-24 08:43:09', '2018-11-24 08:43:09'),
(62, 59, 11, '2018-11-24 08:49:24', '2018-11-24 08:49:24'),
(63, 60, 11, '2018-11-24 08:50:47', '2018-11-24 08:50:47'),
(64, 61, 11, '2018-11-24 08:52:17', '2018-11-24 08:52:17'),
(65, 62, 13, '2018-11-28 15:04:22', '2018-11-28 15:04:22'),
(66, 63, 13, '2018-11-28 15:05:19', '2018-11-28 15:05:19'),
(67, 64, 13, '2018-11-28 15:05:39', '2018-11-28 15:05:39'),
(68, 65, 13, '2018-11-28 15:06:21', '2018-11-28 15:06:21'),
(69, 66, 13, '2018-11-28 15:08:10', '2018-11-28 15:08:10'),
(70, 66, 11, '2018-12-01 06:51:02', '2018-12-01 06:51:02'),
(71, 67, 12, '2018-12-01 06:59:32', '2018-12-01 06:59:32'),
(72, 68, 12, '2018-12-01 07:02:59', '2018-12-01 07:02:59'),
(73, 69, 11, '2018-12-01 07:11:21', '2018-12-01 07:11:21'),
(74, 70, 12, '2018-12-01 07:12:00', '2018-12-01 07:12:00'),
(75, 71, 11, '2018-12-01 07:12:29', '2018-12-01 07:12:29'),
(76, 72, 11, '2018-12-01 07:12:56', '2018-12-01 07:12:56'),
(77, 73, 12, '2018-12-01 07:13:44', '2018-12-01 07:13:44'),
(78, 74, 12, '2018-12-01 07:14:07', '2018-12-01 07:14:07'),
(79, 75, 11, '2018-12-01 07:16:35', '2018-12-01 07:16:35'),
(80, 76, 11, '2018-12-01 07:22:53', '2018-12-01 07:22:53'),
(81, 77, 12, '2018-12-01 07:30:22', '2018-12-01 07:30:22'),
(82, 78, 12, '2018-12-03 08:32:37', '2018-12-03 08:32:37'),
(83, 79, 12, '2018-12-03 08:33:41', '2018-12-03 08:33:41'),
(84, 80, 12, '2018-12-03 08:40:21', '2018-12-03 08:40:21'),
(85, 81, 12, '2018-12-03 08:41:42', '2018-12-03 08:41:42'),
(86, 82, 12, '2018-12-03 08:42:25', '2018-12-03 08:42:25'),
(87, 83, 12, '2018-12-03 08:42:48', '2018-12-03 08:42:48'),
(88, 84, 12, '2018-12-03 08:43:16', '2018-12-03 08:43:16'),
(89, 85, 12, '2018-12-03 09:42:56', '2018-12-03 09:42:56'),
(90, 86, 11, '2018-12-03 09:44:01', '2018-12-03 09:44:01'),
(91, 87, 12, '2018-12-03 09:44:52', '2018-12-03 09:44:52'),
(92, 88, 12, '2018-12-03 09:50:05', '2018-12-03 09:50:05'),
(93, 89, 12, '2018-12-03 09:52:29', '2018-12-03 09:52:29'),
(94, 90, 11, '2018-12-03 09:53:22', '2018-12-03 09:53:22'),
(95, 91, 11, '2018-12-03 09:54:13', '2018-12-03 09:54:13'),
(96, 92, 12, '2018-12-03 09:58:07', '2018-12-03 09:58:07'),
(97, 93, 14, '2018-12-05 14:11:20', '2018-12-05 14:11:20'),
(98, 94, 14, '2018-12-05 14:12:01', '2018-12-05 14:12:01'),
(99, 95, 14, '2018-12-05 14:12:44', '2018-12-05 14:12:44'),
(100, 96, 14, '2018-12-05 14:13:17', '2018-12-05 14:13:17'),
(101, 97, 14, '2018-12-05 14:13:51', '2018-12-05 14:13:51'),
(102, 98, 14, '2018-12-05 14:14:29', '2018-12-05 14:14:29'),
(103, 99, 14, '2018-12-05 14:15:10', '2018-12-05 14:15:10'),
(104, 100, 14, '2018-12-05 14:15:36', '2018-12-05 14:15:36'),
(105, 101, 14, '2018-12-05 14:15:54', '2018-12-05 14:15:54'),
(106, 102, 14, '2018-12-05 14:16:15', '2018-12-05 14:16:15'),
(107, 103, 14, '2018-12-05 14:16:39', '2018-12-05 14:16:39'),
(108, 104, 14, '2018-12-05 14:17:00', '2018-12-05 14:17:00'),
(109, 105, 14, '2018-12-05 14:17:24', '2018-12-05 14:17:24'),
(110, 106, 14, '2018-12-05 14:17:48', '2018-12-05 14:17:48'),
(111, 107, 14, '2018-12-05 14:18:10', '2018-12-05 14:18:10'),
(112, 108, 12, '2018-12-13 07:50:09', '2018-12-13 07:50:09'),
(113, 109, 11, '2018-12-16 09:05:01', '2018-12-16 09:05:01'),
(114, 110, 15, '2018-12-18 06:40:02', '2018-12-18 06:40:02'),
(115, 111, 15, '2018-12-18 06:41:13', '2018-12-18 06:41:13'),
(116, 112, 15, '2018-12-18 06:42:39', '2018-12-18 06:42:39'),
(117, 113, 15, '2018-12-18 06:43:47', '2018-12-18 06:43:47'),
(118, 114, 15, '2018-12-18 06:45:34', '2018-12-18 06:45:34'),
(119, 115, 15, '2018-12-18 06:46:51', '2018-12-18 06:46:51'),
(120, 116, 15, '2018-12-18 06:47:58', '2018-12-18 06:47:58'),
(121, 117, 15, '2018-12-18 06:48:56', '2018-12-18 06:48:56'),
(122, 118, 15, '2018-12-18 06:50:09', '2018-12-18 06:50:09'),
(123, 119, 15, '2018-12-18 06:50:54', '2018-12-18 06:50:54'),
(124, 120, 15, '2018-12-18 06:55:37', '2018-12-18 06:55:37'),
(125, 121, 15, '2018-12-18 06:56:21', '2018-12-18 06:56:21'),
(126, 122, 15, '2018-12-18 06:57:22', '2018-12-18 06:57:22'),
(127, 123, 15, '2018-12-18 06:59:51', '2018-12-18 06:59:51'),
(128, 124, 15, '2018-12-18 07:00:46', '2018-12-18 07:00:46'),
(129, 125, 15, '2018-12-18 07:05:32', '2018-12-18 07:05:32'),
(130, 126, 15, '2018-12-18 07:06:47', '2018-12-18 07:06:47'),
(131, 127, 15, '2018-12-18 07:08:19', '2018-12-18 07:08:19'),
(132, 128, 15, '2018-12-18 07:09:25', '2018-12-18 07:09:25'),
(133, 129, 12, '2019-01-05 04:28:46', '2019-01-05 04:28:46'),
(134, 130, 12, '2019-01-05 04:32:50', '2019-01-05 04:32:50'),
(135, 133, 11, '2019-01-06 09:43:26', '2019-01-06 09:43:26'),
(136, 134, 11, '2019-01-06 09:44:32', '2019-01-06 09:44:32'),
(137, 136, 12, '2019-01-06 12:31:08', '2019-01-06 12:31:08'),
(138, 138, 12, '2019-01-06 12:32:22', '2019-01-06 12:32:22'),
(142, 144, 16, '2019-01-21 07:54:35', '2019-01-21 07:54:35'),
(143, 145, 16, '2019-01-21 07:55:02', '2019-01-21 07:55:02'),
(144, 146, 16, '2019-01-21 07:55:30', '2019-01-21 07:55:30'),
(145, 147, 16, '2019-01-21 07:55:53', '2019-01-21 07:55:53'),
(146, 148, 16, '2019-01-21 07:57:26', '2019-01-21 07:57:26'),
(147, 149, 16, '2019-01-21 08:01:59', '2019-01-21 08:01:59'),
(148, 150, 16, '2019-01-21 08:04:07', '2019-01-21 08:04:07'),
(150, 151, 16, '2019-01-21 08:08:04', '2019-01-21 08:08:04'),
(151, 153, 16, '2019-01-21 08:08:57', '2019-01-21 08:08:57'),
(152, 154, 16, '2019-01-21 08:10:53', '2019-01-21 08:10:53'),
(153, 155, 16, '2019-01-21 08:13:36', '2019-01-21 08:13:36'),
(154, 140, 16, '2019-01-21 08:29:27', '2019-01-21 08:29:27'),
(155, 141, 16, '2019-01-21 08:29:38', '2019-01-21 08:29:38'),
(156, 157, 16, '2019-01-21 08:32:50', '2019-01-21 08:32:50'),
(157, 158, 16, '2019-01-21 08:35:10', '2019-01-21 08:35:10'),
(158, 161, 17, '2019-01-27 10:44:24', '2019-01-27 10:44:24'),
(159, 162, 17, '2019-01-27 10:46:49', '2019-01-27 10:46:49'),
(160, 163, 17, '2019-02-04 08:01:30', '2019-02-04 08:01:30'),
(161, 166, 17, '2019-02-13 11:52:47', '2019-02-13 11:52:47'),
(162, 167, 17, '2019-02-13 11:53:22', '2019-02-13 11:53:22'),
(163, 168, 17, '2019-02-13 11:58:02', '2019-02-13 11:58:02'),
(164, 172, 17, '2019-02-13 12:16:36', '2019-02-13 12:16:36'),
(165, 173, 17, '2019-02-13 12:18:37', '2019-02-13 12:18:37'),
(166, 174, 17, '2019-02-13 12:19:48', '2019-02-13 12:19:48'),
(167, 175, 17, '2019-02-13 12:21:54', '2019-02-13 12:21:54'),
(168, 176, 17, '2019-02-13 12:23:06', '2019-02-13 12:23:06'),
(169, 177, 17, '2019-02-13 12:23:55', '2019-02-13 12:23:55'),
(170, 178, 17, '2019-02-13 12:24:43', '2019-02-13 12:24:43'),
(171, 179, 17, '2019-02-13 12:25:30', '2019-02-13 12:25:30'),
(172, 180, 17, '2019-02-13 12:26:29', '2019-02-13 12:26:29'),
(173, 181, 17, '2019-02-13 12:27:27', '2019-02-13 12:27:27'),
(174, 182, 17, '2019-02-13 12:28:44', '2019-02-13 12:28:44'),
(175, 183, 17, '2019-02-13 12:29:30', '2019-02-13 12:29:30'),
(176, 184, 17, '2019-02-13 12:31:06', '2019-02-13 12:31:06'),
(177, 185, 17, '2019-02-13 12:31:56', '2019-02-13 12:31:56'),
(178, 186, 17, '2019-02-13 12:32:45', '2019-02-13 12:32:45'),
(179, 187, 17, '2019-02-13 12:33:31', '2019-02-13 12:33:31'),
(180, 188, 17, '2019-02-13 12:36:17', '2019-02-13 12:36:17'),
(181, 189, 17, '2019-02-13 12:37:08', '2019-02-13 12:37:08'),
(182, 190, 17, '2019-02-13 12:38:10', '2019-02-13 12:38:10'),
(183, 191, 17, '2019-02-13 12:38:56', '2019-02-13 12:38:56'),
(184, 192, 17, '2019-02-13 12:39:46', '2019-02-13 12:39:46'),
(185, 193, 11, '2019-02-15 15:41:34', '2019-02-15 15:41:34'),
(186, 194, 11, '2019-02-15 16:16:53', '2019-02-15 16:16:53'),
(187, 195, 17, '2019-02-20 05:14:16', '2019-02-20 05:14:16'),
(188, 196, 17, '2019-02-20 05:15:26', '2019-02-20 05:15:26'),
(189, 197, 17, '2019-02-20 05:16:25', '2019-02-20 05:16:25'),
(190, 198, 17, '2019-02-20 05:17:15', '2019-02-20 05:17:15'),
(191, 199, 17, '2019-02-20 08:19:00', '2019-02-20 08:19:00'),
(192, 200, 17, '2019-02-20 08:19:49', '2019-02-20 08:19:49'),
(193, 201, 17, '2019-02-20 08:20:33', '2019-02-20 08:20:33'),
(194, 202, 17, '2019-02-20 08:21:23', '2019-02-20 08:21:23'),
(195, 203, 17, '2019-02-20 08:23:04', '2019-02-20 08:23:04'),
(196, 204, 17, '2019-02-20 08:23:55', '2019-02-20 08:23:55'),
(197, 205, 17, '2019-02-20 08:24:33', '2019-02-20 08:24:33'),
(198, 206, 17, '2019-02-20 08:25:13', '2019-02-20 08:25:13'),
(199, 207, 17, '2019-02-20 08:25:58', '2019-02-20 08:25:58'),
(200, 208, 17, '2019-02-20 08:26:32', '2019-02-20 08:26:32'),
(201, 209, 17, '2019-02-20 08:27:18', '2019-02-20 08:27:18'),
(202, 210, 17, '2019-02-20 08:27:57', '2019-02-20 08:27:57'),
(203, 211, 17, '2019-02-20 08:28:39', '2019-02-20 08:28:39'),
(204, 212, 17, '2019-02-20 08:29:19', '2019-02-20 08:29:19'),
(205, 213, 17, '2019-02-20 08:30:02', '2019-02-20 08:30:02'),
(206, 214, 17, '2019-02-20 08:30:37', '2019-02-20 08:30:37'),
(207, 215, 17, '2019-02-20 08:31:20', '2019-02-20 08:31:20'),
(208, 216, 17, '2019-02-20 08:31:54', '2019-02-20 08:31:54'),
(209, 217, 17, '2019-02-20 08:32:46', '2019-02-20 08:32:46'),
(210, 218, 17, '2019-02-20 08:33:26', '2019-02-20 08:33:26'),
(211, 219, 17, '2019-02-20 08:34:10', '2019-02-20 08:34:10'),
(212, 220, 17, '2019-02-20 08:34:51', '2019-02-20 08:34:51'),
(213, 221, 17, '2019-02-20 08:35:28', '2019-02-20 08:35:28'),
(214, 222, 17, '2019-02-20 08:36:05', '2019-02-20 08:36:05'),
(215, 223, 17, '2019-02-20 08:36:38', '2019-02-20 08:36:38'),
(216, 224, 17, '2019-02-20 08:37:11', '2019-02-20 08:37:11'),
(217, 225, 17, '2019-02-20 08:38:01', '2019-02-20 08:38:01'),
(218, 226, 17, '2019-02-20 08:38:36', '2019-02-20 08:38:36'),
(219, 227, 17, '2019-02-20 08:39:07', '2019-02-20 08:39:07'),
(220, 228, 17, '2019-02-20 08:39:49', '2019-02-20 08:39:49'),
(221, 229, 17, '2019-02-20 08:44:05', '2019-02-20 08:44:05'),
(222, 230, 17, '2019-02-20 08:46:31', '2019-02-20 08:46:31'),
(223, 231, 17, '2019-02-20 08:49:59', '2019-02-20 08:49:59'),
(224, 232, 17, '2019-02-20 08:53:45', '2019-02-20 08:53:45'),
(225, 233, 17, '2019-02-20 08:55:56', '2019-02-20 08:55:56'),
(226, 234, 17, '2019-02-20 08:58:50', '2019-02-20 08:58:50'),
(227, 235, 17, '2019-02-20 09:01:49', '2019-02-20 09:01:49'),
(228, 236, 17, '2019-02-20 09:04:05', '2019-02-20 09:04:05'),
(229, 237, 17, '2019-02-20 09:05:59', '2019-02-20 09:05:59'),
(230, 238, 17, '2019-02-20 09:10:52', '2019-02-20 09:10:52'),
(231, 239, 17, '2019-02-20 09:13:23', '2019-02-20 09:13:23'),
(232, 240, 17, '2019-02-20 09:17:11', '2019-02-20 09:17:11'),
(233, 241, 17, '2019-02-20 09:19:56', '2019-02-20 09:19:56'),
(234, 242, 17, '2019-02-20 09:21:51', '2019-02-20 09:21:51'),
(235, 243, 17, '2019-02-20 09:23:53', '2019-02-20 09:23:53'),
(236, 244, 17, '2019-02-20 09:26:22', '2019-02-20 09:26:22'),
(237, 245, 17, '2019-02-20 09:29:01', '2019-02-20 09:29:01'),
(238, 246, 17, '2019-02-20 09:44:53', '2019-02-20 09:44:53'),
(239, 247, 17, '2019-02-20 10:28:32', '2019-02-20 10:28:32'),
(240, 250, 17, '2019-02-20 10:34:09', '2019-02-20 10:34:09'),
(241, 251, 17, '2019-02-20 10:34:51', '2019-02-20 10:34:51'),
(242, 258, 17, '2019-02-20 10:39:29', '2019-02-20 10:39:29'),
(243, 259, 17, '2019-02-20 10:39:31', '2019-02-20 10:39:31'),
(244, 260, 17, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(245, 261, 17, '2019-02-20 10:39:32', '2019-02-20 10:39:32'),
(246, 262, 17, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(247, 263, 17, '2019-02-20 10:39:33', '2019-02-20 10:39:33'),
(248, 264, 17, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(249, 265, 17, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(250, 266, 17, '2019-02-20 10:39:34', '2019-02-20 10:39:34'),
(251, 267, 17, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(252, 268, 17, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(253, 269, 17, '2019-02-20 10:39:35', '2019-02-20 10:39:35'),
(254, 270, 17, '2019-02-20 10:39:36', '2019-02-20 10:39:36'),
(255, 271, 17, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(256, 272, 17, '2019-02-20 10:39:37', '2019-02-20 10:39:37'),
(257, 273, 17, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(258, 274, 17, '2019-02-20 10:39:38', '2019-02-20 10:39:38'),
(259, 275, 17, '2019-02-20 10:39:39', '2019-02-20 10:39:39'),
(260, 276, 17, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(261, 277, 17, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(262, 278, 17, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(263, 279, 17, '2019-02-20 10:39:40', '2019-02-20 10:39:40'),
(264, 280, 17, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(265, 281, 17, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(266, 282, 17, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(267, 283, 17, '2019-02-20 10:39:41', '2019-02-20 10:39:41'),
(268, 299, 17, '2019-02-20 10:44:51', '2019-02-20 10:44:51'),
(269, 300, 17, '2019-02-20 10:44:53', '2019-02-20 10:44:53'),
(270, 301, 17, '2019-02-20 10:47:57', '2019-02-20 10:47:57'),
(271, 302, 17, '2019-02-20 10:50:24', '2019-02-20 10:50:24'),
(272, 303, 17, '2019-02-25 04:34:20', '2019-02-25 04:34:20'),
(273, 304, 17, '2019-02-25 04:35:06', '2019-02-25 04:35:06'),
(274, 305, 17, '2019-02-25 04:35:57', '2019-02-25 04:35:57'),
(275, 306, 17, '2019-02-25 04:36:38', '2019-02-25 04:36:38'),
(276, 307, 17, '2019-02-25 04:37:19', '2019-02-25 04:37:19'),
(277, 308, 17, '2019-02-25 04:38:01', '2019-02-25 04:38:01'),
(278, 309, 17, '2019-02-25 04:38:42', '2019-02-25 04:38:42'),
(279, 310, 17, '2019-02-25 04:39:19', '2019-02-25 04:39:19'),
(280, 311, 17, '2019-02-25 04:40:02', '2019-02-25 04:40:02'),
(281, 312, 17, '2019-02-25 04:40:48', '2019-02-25 04:40:48'),
(282, 313, 17, '2019-02-25 04:41:30', '2019-02-25 04:41:30'),
(283, 314, 17, '2019-02-25 04:42:13', '2019-02-25 04:42:13'),
(284, 315, 17, '2019-02-25 04:42:53', '2019-02-25 04:42:53'),
(285, 316, 17, '2019-02-25 04:43:52', '2019-02-25 04:43:52'),
(286, 317, 17, '2019-02-25 04:45:14', '2019-02-25 04:45:14'),
(287, 318, 17, '2019-02-25 04:45:55', '2019-02-25 04:45:55'),
(288, 319, 17, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(289, 320, 17, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(290, 321, 17, '2019-02-25 04:46:46', '2019-02-25 04:46:46'),
(291, 322, 17, '2019-02-25 04:47:33', '2019-02-25 04:47:33'),
(292, 323, 17, '2019-02-25 04:48:04', '2019-02-25 04:48:04'),
(293, 324, 17, '2019-02-25 04:48:39', '2019-02-25 04:48:39'),
(294, 325, 17, '2019-02-25 04:49:27', '2019-02-25 04:49:27'),
(295, 326, 17, '2019-02-25 04:50:05', '2019-02-25 04:50:05'),
(296, 327, 17, '2019-02-25 04:50:39', '2019-02-25 04:50:39'),
(297, 328, 17, '2019-02-25 04:51:16', '2019-02-25 04:51:16'),
(298, 329, 17, '2019-02-25 04:51:58', '2019-02-25 04:51:58'),
(300, 331, 17, '2019-02-25 05:05:06', '2019-02-25 05:05:06'),
(301, 332, 17, '2019-02-25 05:05:51', '2019-02-25 05:05:51'),
(302, 333, 17, '2019-02-25 05:06:32', '2019-02-25 05:06:32'),
(303, 334, 17, '2019-02-25 05:07:01', '2019-02-25 05:07:01'),
(304, 335, 17, '2019-02-25 05:20:07', '2019-02-25 05:20:07'),
(305, 336, 17, '2019-02-25 05:21:49', '2019-02-25 05:21:49'),
(306, 337, 17, '2019-02-25 05:23:37', '2019-02-25 05:23:37'),
(307, 338, 17, '2019-02-25 05:25:15', '2019-02-25 05:25:15'),
(308, 339, 17, '2019-02-25 05:27:30', '2019-02-25 05:27:30'),
(309, 340, 17, '2019-02-25 05:29:03', '2019-02-25 05:29:03'),
(310, 341, 17, '2019-02-25 05:30:47', '2019-02-25 05:30:47'),
(311, 342, 17, '2019-02-25 05:32:27', '2019-02-25 05:32:27'),
(312, 343, 17, '2019-02-25 05:34:30', '2019-02-25 05:34:30'),
(313, 344, 17, '2019-02-25 05:36:03', '2019-02-25 05:36:03'),
(314, 345, 17, '2019-02-25 05:37:50', '2019-02-25 05:37:50'),
(315, 346, 17, '2019-02-25 05:39:46', '2019-02-25 05:39:46'),
(316, 347, 17, '2019-02-25 05:41:24', '2019-02-25 05:41:24'),
(317, 348, 17, '2019-02-25 05:43:09', '2019-02-25 05:43:09'),
(318, 349, 17, '2019-02-25 05:44:45', '2019-02-25 05:44:45'),
(319, 350, 17, '2019-02-25 05:46:55', '2019-02-25 05:46:55'),
(320, 351, 17, '2019-02-25 05:48:41', '2019-02-25 05:48:41'),
(321, 352, 17, '2019-02-25 05:55:53', '2019-02-25 05:55:53'),
(322, 353, 17, '2019-02-25 05:58:35', '2019-02-25 05:58:35'),
(323, 354, 17, '2019-02-25 06:00:47', '2019-02-25 06:00:47'),
(324, 355, 17, '2019-02-25 06:02:48', '2019-02-25 06:02:48'),
(325, 356, 17, '2019-02-25 06:04:57', '2019-02-25 06:04:57'),
(326, 357, 17, '2019-02-25 06:07:06', '2019-02-25 06:07:06'),
(327, 358, 17, '2019-02-25 06:09:01', '2019-02-25 06:09:01'),
(328, 359, 17, '2019-02-25 06:10:55', '2019-02-25 06:10:55'),
(329, 360, 17, '2019-02-25 06:12:29', '2019-02-25 06:12:29'),
(330, 361, 17, '2019-02-25 06:14:09', '2019-02-25 06:14:09'),
(331, 362, 17, '2019-02-25 06:16:03', '2019-02-25 06:16:03'),
(332, 363, 17, '2019-02-25 06:23:38', '2019-02-25 06:23:38'),
(333, 364, 17, '2019-02-25 06:25:18', '2019-02-25 06:25:18'),
(334, 365, 17, '2019-02-25 06:26:30', '2019-02-25 06:26:30'),
(335, 366, 17, '2019-02-25 06:27:43', '2019-02-25 06:27:43'),
(336, 367, 17, '2019-02-25 06:29:40', '2019-02-25 06:29:40'),
(337, 368, 17, '2019-02-25 06:36:57', '2019-02-25 06:36:57'),
(338, 369, 17, '2019-02-25 06:37:46', '2019-02-25 06:37:46'),
(339, 370, 17, '2019-02-25 06:39:42', '2019-02-25 06:39:42'),
(340, 371, 17, '2019-02-25 06:41:18', '2019-02-25 06:41:18'),
(341, 372, 17, '2019-02-25 06:42:33', '2019-02-25 06:42:33'),
(342, 373, 17, '2019-02-25 07:08:56', '2019-02-25 07:08:56'),
(343, 374, 17, '2019-02-25 07:10:49', '2019-02-25 07:10:49'),
(344, 375, 17, '2019-02-25 07:11:33', '2019-02-25 07:11:33'),
(345, 376, 17, '2019-02-25 07:12:44', '2019-02-25 07:12:44'),
(346, 377, 17, '2019-02-25 07:13:35', '2019-02-25 07:13:35'),
(347, 378, 17, '2019-02-25 07:14:55', '2019-02-25 07:14:55'),
(348, 379, 17, '2019-02-25 07:16:24', '2019-02-25 07:16:24'),
(349, 380, 17, '2019-02-25 07:17:36', '2019-02-25 07:17:36'),
(351, 382, 17, '2019-02-25 07:20:19', '2019-02-25 07:20:19'),
(352, 383, 17, '2019-02-25 07:29:33', '2019-02-25 07:29:33'),
(353, 384, 17, '2019-02-25 07:35:38', '2019-02-25 07:35:38'),
(354, 385, 17, '2019-02-25 07:36:40', '2019-02-25 07:36:40'),
(355, 386, 17, '2019-02-25 07:46:56', '2019-02-25 07:46:56'),
(356, 387, 17, '2019-02-25 07:47:23', '2019-02-25 07:47:23'),
(357, 388, 17, '2019-02-25 07:47:56', '2019-02-25 07:47:56'),
(358, 389, 17, '2019-02-25 07:48:30', '2019-02-25 07:48:30'),
(359, 390, 17, '2019-02-25 07:49:05', '2019-02-25 07:49:05'),
(360, 391, 17, '2019-02-25 07:49:34', '2019-02-25 07:49:34'),
(361, 392, 17, '2019-02-25 07:52:05', '2019-02-25 07:52:05'),
(362, 393, 17, '2019-02-25 07:52:43', '2019-02-25 07:52:43'),
(363, 394, 17, '2019-02-25 07:53:16', '2019-02-25 07:53:16'),
(364, 395, 17, '2019-02-25 07:53:46', '2019-02-25 07:53:46'),
(365, 396, 17, '2019-02-25 07:54:17', '2019-02-25 07:54:17'),
(366, 397, 17, '2019-02-25 07:54:50', '2019-02-25 07:54:50'),
(367, 398, 17, '2019-02-25 07:55:25', '2019-02-25 07:55:25'),
(368, 399, 17, '2019-02-25 07:55:56', '2019-02-25 07:55:56'),
(369, 400, 17, '2019-02-25 07:56:28', '2019-02-25 07:56:28'),
(370, 401, 17, '2019-02-25 07:56:58', '2019-02-25 07:56:58'),
(371, 402, 17, '2019-02-25 07:59:09', '2019-02-25 07:59:09'),
(372, 403, 17, '2019-02-25 07:59:37', '2019-02-25 07:59:37'),
(373, 404, 17, '2019-02-25 08:00:07', '2019-02-25 08:00:07'),
(374, 405, 17, '2019-02-25 08:00:37', '2019-02-25 08:00:37'),
(375, 406, 17, '2019-02-25 08:01:12', '2019-02-25 08:01:12'),
(376, 407, 17, '2019-02-25 08:02:58', '2019-02-25 08:02:58'),
(377, 408, 17, '2019-02-25 08:03:31', '2019-02-25 08:03:31'),
(378, 409, 17, '2019-02-25 08:03:58', '2019-02-25 08:03:58'),
(379, 410, 17, '2019-02-25 08:04:25', '2019-02-25 08:04:25'),
(380, 411, 17, '2019-02-25 08:09:07', '2019-02-25 08:09:07'),
(381, 412, 17, '2019-02-25 08:09:44', '2019-02-25 08:09:44'),
(382, 413, 17, '2019-02-25 08:10:13', '2019-02-25 08:10:13'),
(383, 414, 17, '2019-02-25 08:10:38', '2019-02-25 08:10:38'),
(384, 415, 17, '2019-02-25 08:12:23', '2019-02-25 08:12:23'),
(385, 416, 17, '2019-02-25 08:14:29', '2019-02-25 08:14:29'),
(386, 417, 17, '2019-02-25 08:21:26', '2019-02-25 08:21:26'),
(387, 418, 17, '2019-02-25 08:23:12', '2019-02-25 08:23:12'),
(388, 419, 17, '2019-02-25 08:24:59', '2019-02-25 08:24:59'),
(389, 420, 17, '2019-02-25 08:26:33', '2019-02-25 08:26:33'),
(390, 421, 17, '2019-02-25 08:28:18', '2019-02-25 08:28:18'),
(391, 422, 17, '2019-02-25 08:32:37', '2019-02-25 08:32:37'),
(392, 423, 17, '2019-02-25 08:34:35', '2019-02-25 08:34:35'),
(393, 424, 17, '2019-02-25 08:36:22', '2019-02-25 08:36:22'),
(394, 425, 17, '2019-02-25 08:37:48', '2019-02-25 08:37:48'),
(395, 426, 17, '2019-02-25 08:39:44', '2019-02-25 08:39:44'),
(396, 427, 17, '2019-02-25 08:41:18', '2019-02-25 08:41:18'),
(397, 428, 17, '2019-02-25 08:46:06', '2019-02-25 08:46:06'),
(398, 429, 17, '2019-02-25 08:47:41', '2019-02-25 08:47:41'),
(399, 430, 17, '2019-02-25 08:49:23', '2019-02-25 08:49:23'),
(400, 431, 17, '2019-02-25 08:51:05', '2019-02-25 08:51:05'),
(401, 432, 17, '2019-02-25 08:52:50', '2019-02-25 08:52:50'),
(402, 433, 17, '2019-02-25 08:55:32', '2019-02-25 08:55:32'),
(403, 434, 17, '2019-02-25 08:57:16', '2019-02-25 08:57:16'),
(404, 435, 17, '2019-02-25 08:59:03', '2019-02-25 08:59:03'),
(405, 436, 17, '2019-02-25 09:00:38', '2019-02-25 09:00:38'),
(406, 437, 17, '2019-02-25 09:02:17', '2019-02-25 09:02:17'),
(407, 438, 17, '2019-02-25 09:04:03', '2019-02-25 09:04:03'),
(408, 439, 17, '2019-02-25 09:05:32', '2019-02-25 09:05:32'),
(409, 440, 17, '2019-02-25 09:07:03', '2019-02-25 09:07:03'),
(410, 441, 17, '2019-02-25 09:09:01', '2019-02-25 09:09:01'),
(411, 442, 17, '2019-02-25 09:10:45', '2019-02-25 09:10:45'),
(412, 443, 17, '2019-02-25 09:15:15', '2019-02-25 09:15:15'),
(413, 444, 17, '2019-02-25 09:16:30', '2019-02-25 09:16:30'),
(414, 445, 17, '2019-02-25 09:17:02', '2019-02-25 09:17:02'),
(415, 446, 17, '2019-02-25 09:18:26', '2019-02-25 09:18:26'),
(416, 447, 17, '2019-02-25 09:19:53', '2019-02-25 09:19:53'),
(417, 448, 17, '2019-02-25 09:20:37', '2019-02-25 09:20:37'),
(418, 449, 17, '2019-02-25 09:21:18', '2019-02-25 09:21:18'),
(419, 450, 17, '2019-02-25 09:22:43', '2019-02-25 09:22:43'),
(420, 451, 17, '2019-02-25 09:23:57', '2019-02-25 09:23:57'),
(421, 452, 17, '2019-02-25 09:24:44', '2019-02-25 09:24:44'),
(422, 453, 17, '2019-02-25 09:25:37', '2019-02-25 09:25:37'),
(423, 455, 17, '2019-02-25 09:28:23', '2019-02-25 09:28:23'),
(424, 456, 17, '2019-02-25 09:29:05', '2019-02-25 09:29:05'),
(425, 457, 17, '2019-02-25 09:30:06', '2019-02-25 09:30:06'),
(426, 458, 17, '2019-02-25 09:30:47', '2019-02-25 09:30:47'),
(427, 459, 17, '2019-02-25 09:31:29', '2019-02-25 09:31:29'),
(428, 460, 17, '2019-02-25 09:32:05', '2019-02-25 09:32:05'),
(429, 461, 17, '2019-02-25 09:32:38', '2019-02-25 09:32:38'),
(430, 462, 17, '2019-02-25 09:33:06', '2019-02-25 09:33:06'),
(431, 463, 17, '2019-02-25 09:33:41', '2019-02-25 09:33:41'),
(432, 464, 17, '2019-02-25 09:34:24', '2019-02-25 09:34:24'),
(433, 465, 17, '2019-02-25 09:35:03', '2019-02-25 09:35:03'),
(434, 466, 17, '2019-02-25 09:35:38', '2019-02-25 09:35:38'),
(435, 381, 17, '2019-02-26 06:56:10', '2019-02-26 06:56:10'),
(436, 330, 17, '2019-02-28 09:43:17', '2019-02-28 09:43:17'),
(437, 467, 18, '2019-03-14 14:42:21', '2019-03-14 14:42:21'),
(439, 469, 18, '2019-03-14 15:13:48', '2019-03-14 15:13:48'),
(440, 470, 18, '2019-03-14 15:19:22', '2019-03-14 15:19:22'),
(441, 472, 18, '2019-03-14 16:25:23', '2019-03-14 16:25:23'),
(442, 475, 18, '2019-03-15 09:42:10', '2019-03-15 09:42:10'),
(443, 476, 18, '2019-03-15 09:44:34', '2019-03-15 09:44:34'),
(444, 477, 18, '2019-03-15 09:50:25', '2019-03-15 09:50:25'),
(445, 478, 18, '2019-03-15 10:00:52', '2019-03-15 10:00:52'),
(446, 479, 18, '2019-03-15 10:04:10', '2019-03-15 10:04:10'),
(447, 468, 18, '2019-03-15 10:05:25', '2019-03-15 10:05:25'),
(448, 480, 18, '2019-03-15 10:15:46', '2019-03-15 10:15:46'),
(449, 481, 18, '2019-03-16 05:22:26', '2019-03-16 05:22:26'),
(450, 483, 20, '2019-03-26 10:57:30', '2019-03-26 10:57:30'),
(451, 484, 20, '2019-03-26 11:00:26', '2019-03-26 11:00:26'),
(453, 485, 20, '2019-03-26 11:03:43', '2019-03-26 11:03:43'),
(454, 486, 20, '2019-03-26 11:06:59', '2019-03-26 11:06:59'),
(455, 491, 18, '2019-04-02 12:59:27', '2019-04-02 12:59:27'),
(457, 493, 18, '2019-04-02 13:05:53', '2019-04-02 13:05:53'),
(459, 494, 18, '2019-04-02 13:10:52', '2019-04-02 13:10:52'),
(460, 495, 18, '2019-04-02 13:14:08', '2019-04-02 13:14:08'),
(461, 496, 18, '2019-04-02 13:15:08', '2019-04-02 13:15:08'),
(462, 499, 18, '2019-04-02 13:16:38', '2019-04-02 13:16:38'),
(464, 500, 18, '2019-04-02 13:23:31', '2019-04-02 13:23:31'),
(465, 504, 21, '2019-04-02 14:55:22', '2019-04-02 14:55:22'),
(466, 505, 21, '2019-04-02 14:56:15', '2019-04-02 14:56:15'),
(467, 506, 21, '2019-04-02 14:56:56', '2019-04-02 14:56:56'),
(468, 507, 21, '2019-04-02 14:57:32', '2019-04-02 14:57:32'),
(469, 508, 21, '2019-04-02 14:58:12', '2019-04-02 14:58:12'),
(470, 509, 21, '2019-04-02 14:58:51', '2019-04-02 14:58:51'),
(471, 510, 21, '2019-04-02 14:59:35', '2019-04-02 14:59:35'),
(472, 511, 21, '2019-04-02 15:00:03', '2019-04-02 15:00:03'),
(473, 512, 21, '2019-04-02 15:04:14', '2019-04-02 15:04:14'),
(474, 513, 21, '2019-04-02 15:06:06', '2019-04-02 15:06:06'),
(475, 514, 21, '2019-04-02 15:06:58', '2019-04-02 15:06:58'),
(476, 515, 21, '2019-04-02 15:08:19', '2019-04-02 15:08:19'),
(477, 516, 21, '2019-04-02 15:09:31', '2019-04-02 15:09:31'),
(478, 517, 21, '2019-04-02 15:17:21', '2019-04-02 15:17:21'),
(479, 518, 21, '2019-04-02 15:18:40', '2019-04-02 15:18:40'),
(480, 519, 21, '2019-04-02 15:20:42', '2019-04-02 15:20:42'),
(481, 520, 21, '2019-04-02 15:21:23', '2019-04-02 15:21:23'),
(482, 521, 21, '2019-04-02 15:22:36', '2019-04-02 15:22:36'),
(483, 522, 21, '2019-04-02 15:23:25', '2019-04-02 15:23:25'),
(484, 523, 21, '2019-04-02 15:24:50', '2019-04-02 15:24:50'),
(485, 492, 18, '2019-04-03 08:31:06', '2019-04-03 08:31:06'),
(495, 526, 22, '2019-04-08 17:33:20', '2019-04-08 17:33:20'),
(498, 530, 22, '2019-04-08 17:43:28', '2019-04-08 17:43:28'),
(499, 531, 22, '2019-04-08 17:44:49', '2019-04-08 17:44:49'),
(500, 532, 22, '2019-04-08 17:47:03', '2019-04-08 17:47:03'),
(501, 533, 22, '2019-04-08 17:49:19', '2019-04-08 17:49:19'),
(502, 534, 22, '2019-04-08 17:53:24', '2019-04-08 17:53:24'),
(503, 535, 22, '2019-04-08 17:54:57', '2019-04-08 17:54:57'),
(504, 536, 22, '2019-04-08 17:55:56', '2019-04-08 17:55:56'),
(508, 524, 22, '2019-04-09 16:49:19', '2019-04-09 16:49:19'),
(509, 525, 22, '2019-04-09 16:51:35', '2019-04-09 16:51:35'),
(510, 527, 22, '2019-04-09 16:51:57', '2019-04-09 16:51:57'),
(511, 528, 22, '2019-04-09 16:52:30', '2019-04-09 16:52:30'),
(512, 529, 22, '2019-04-09 16:53:42', '2019-04-09 16:53:42'),
(514, 537, 11, '2019-04-14 11:37:46', '2019-04-14 11:37:46'),
(516, 539, 23, '2019-04-14 16:40:37', '2019-04-14 16:40:37'),
(517, 538, 23, '2019-04-14 16:41:42', '2019-04-14 16:41:42'),
(520, 541, 28, '2019-04-22 12:11:55', '2019-04-22 12:11:55'),
(521, 542, 28, '2019-04-22 12:12:24', '2019-04-22 12:12:24'),
(522, 543, 28, '2019-04-22 12:12:54', '2019-04-22 12:12:54'),
(523, 544, 28, '2019-04-22 12:13:22', '2019-04-22 12:13:22'),
(524, 545, 28, '2019-04-22 12:13:40', '2019-04-22 12:13:40'),
(525, 547, 28, '2019-04-22 12:14:19', '2019-04-22 12:14:19'),
(526, 548, 28, '2019-04-22 12:15:00', '2019-04-22 12:15:00'),
(527, 549, 28, '2019-04-22 12:16:31', '2019-04-22 12:16:31'),
(528, 550, 28, '2019-04-22 12:16:50', '2019-04-22 12:16:50'),
(529, 551, 28, '2019-04-22 12:19:35', '2019-04-22 12:19:35'),
(530, 552, 11, '2019-04-23 17:22:26', '2019-04-23 17:22:26'),
(531, 553, 11, '2019-04-23 17:27:10', '2019-04-23 17:27:10'),
(532, 554, 11, '2019-04-23 17:36:37', '2019-04-23 17:36:37'),
(533, 555, 11, '2019-04-23 17:39:23', '2019-04-23 17:39:23'),
(534, 556, 11, '2019-04-23 17:48:19', '2019-04-23 17:48:19'),
(535, 557, 11, '2019-04-23 17:53:02', '2019-04-23 17:53:02'),
(536, 558, 11, '2019-04-24 04:16:58', '2019-04-24 04:16:58'),
(537, 559, 11, '2019-04-24 04:20:31', '2019-04-24 04:20:31'),
(538, 560, 11, '2019-04-24 04:21:05', '2019-04-24 04:21:05'),
(539, 561, 18, '2019-05-13 04:16:39', '2019-05-13 04:16:39'),
(540, 562, 18, '2019-05-13 04:17:13', '2019-05-13 04:17:13'),
(541, 563, 18, '2019-05-13 04:17:59', '2019-05-13 04:17:59'),
(542, 564, 18, '2019-05-13 04:18:36', '2019-05-13 04:18:36'),
(543, 565, 18, '2019-05-13 04:19:25', '2019-05-13 04:19:25'),
(544, 566, 18, '2019-05-13 04:20:11', '2019-05-13 04:20:11'),
(545, 567, 18, '2019-05-13 04:20:55', '2019-05-13 04:20:55'),
(546, 568, 18, '2019-05-13 04:21:13', '2019-05-13 04:21:13'),
(547, 569, 18, '2019-05-13 04:21:37', '2019-05-13 04:21:37'),
(548, 570, 18, '2019-05-13 04:21:54', '2019-05-13 04:21:54'),
(549, 571, 18, '2019-05-13 07:45:49', '2019-05-13 07:45:49'),
(550, 572, 18, '2019-05-13 07:48:36', '2019-05-13 07:48:36'),
(551, 573, 18, '2019-05-13 07:58:11', '2019-05-13 07:58:11'),
(552, 574, 18, '2019-05-13 08:04:32', '2019-05-13 08:04:32'),
(554, 575, 28, '2019-07-02 08:40:22', '2019-07-02 08:40:22'),
(555, 576, 28, '2019-07-02 08:45:52', '2019-07-02 08:45:52'),
(557, 577, 28, '2019-07-02 08:53:48', '2019-07-02 08:53:48'),
(558, 540, 28, '2019-07-02 08:59:29', '2019-07-02 08:59:29'),
(559, 578, 28, '2019-07-02 09:04:04', '2019-07-02 09:04:04'),
(560, 580, 28, '2019-07-31 07:37:13', '2019-07-31 07:37:13'),
(561, 581, 28, '2019-07-31 07:38:23', '2019-07-31 07:38:23'),
(562, 582, 28, '2019-12-12 06:14:22', '2019-12-12 06:14:22'),
(563, 584, 28, '2019-12-12 06:16:40', '2019-12-12 06:16:40'),
(564, 586, 28, '2019-12-15 02:45:44', '2019-12-15 02:45:44'),
(565, 587, 28, '2019-12-15 02:53:33', '2019-12-15 02:53:33'),
(566, 588, 28, '2019-12-15 03:00:25', '2019-12-15 03:00:25'),
(567, 589, 28, '2019-12-15 03:00:53', '2019-12-15 03:00:53'),
(568, 590, 28, '2019-12-15 03:01:30', '2019-12-15 03:01:30'),
(569, 591, 9, '2020-01-15 10:58:06', '2020-01-15 10:58:06'),
(572, 594, 9, '2020-01-15 10:59:02', '2020-01-15 10:59:02'),
(576, 598, 9, '2020-01-15 11:00:26', '2020-01-15 11:00:26'),
(580, 600, 9, '2020-01-15 11:08:15', '2020-01-15 11:08:15'),
(581, 593, 9, '2020-01-15 16:50:39', '2020-01-15 16:50:39'),
(582, 599, 9, '2020-01-15 16:51:02', '2020-01-15 16:51:02'),
(583, 595, 9, '2020-01-15 16:51:34', '2020-01-15 16:51:34'),
(584, 596, 9, '2020-01-15 16:51:50', '2020-01-15 16:51:50'),
(585, 597, 9, '2020-01-15 16:52:04', '2020-01-15 16:52:04'),
(586, 601, 9, '2020-01-16 00:36:47', '2020-01-16 00:36:47'),
(587, 602, 9, '2020-01-16 00:38:32', '2020-01-16 00:38:32'),
(588, 592, 9, '2020-01-16 00:38:48', '2020-01-16 00:38:48'),
(589, 603, 9, '2020-01-17 10:12:36', '2020-01-17 10:12:36'),
(590, 604, 9, '2020-01-17 11:01:21', '2020-01-17 11:01:21'),
(591, 605, 9, '2020-01-17 11:01:35', '2020-01-17 11:01:35'),
(592, 606, 9, '2020-01-17 11:01:51', '2020-01-17 11:01:51'),
(593, 607, 9, '2020-01-17 11:02:07', '2020-01-17 11:02:07'),
(594, 608, 9, '2020-01-17 11:02:20', '2020-01-17 11:02:20'),
(595, 609, 9, '2020-01-17 11:02:35', '2020-01-17 11:02:35'),
(596, 610, 9, '2020-01-17 11:02:55', '2020-01-17 11:02:55'),
(597, 611, 9, '2020-01-17 11:03:33', '2020-01-17 11:03:33'),
(598, 612, 9, '2020-01-17 11:04:34', '2020-01-17 11:04:34'),
(599, 613, 9, '2020-01-17 11:08:35', '2020-01-17 11:08:35'),
(600, 614, 9, '2020-01-17 11:08:47', '2020-01-17 11:08:47'),
(601, 615, 9, '2020-01-17 11:09:09', '2020-01-17 11:09:09'),
(602, 617, 9, '2020-01-17 11:09:33', '2020-01-17 11:09:33'),
(603, 618, 9, '2020-01-17 11:09:34', '2020-01-17 11:09:34'),
(604, 619, 9, '2020-01-17 11:09:50', '2020-01-17 11:09:50'),
(605, 620, 9, '2020-01-17 11:10:24', '2020-01-17 11:10:24'),
(606, 621, 9, '2020-01-17 11:10:42', '2020-01-17 11:10:42'),
(607, 622, 9, '2020-01-17 11:11:02', '2020-01-17 11:11:02'),
(608, 623, 9, '2020-01-17 11:11:42', '2020-01-17 11:11:42'),
(609, 624, 9, '2020-02-17 08:10:03', '2020-02-17 08:10:03'),
(610, 625, 29, '2020-03-14 21:23:12', '2020-03-14 21:23:12'),
(611, 626, 29, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(612, 626, 30, '2020-03-14 21:23:41', '2020-03-14 21:23:41'),
(613, 627, 29, '2020-03-14 21:24:05', '2020-03-14 21:24:05'),
(614, 628, 30, '2020-03-14 21:26:15', '2020-03-14 21:26:15'),
(615, 629, 30, '2020-03-14 21:27:28', '2020-03-14 21:27:28'),
(616, 630, 30, '2020-03-14 21:27:47', '2020-03-14 21:27:47'),
(617, 631, 29, '2020-03-14 21:28:37', '2020-03-14 21:28:37'),
(618, 645, 29, '2020-04-07 13:59:39', '2020-04-07 13:59:39'),
(619, 646, 30, '2020-04-07 14:00:07', '2020-04-07 14:00:07'),
(620, 647, 29, '2020-04-07 14:01:00', '2020-04-07 14:01:00'),
(621, 648, 30, '2020-04-07 14:01:21', '2020-04-07 14:01:21'),
(622, 649, 29, '2020-04-07 14:01:53', '2020-04-07 14:01:53'),
(623, 660, 29, '2020-04-17 19:01:16', '2020-04-17 19:01:16'),
(624, 662, 29, '2020-04-17 19:05:17', '2020-04-17 19:05:17'),
(625, 663, 29, '2020-04-17 19:05:45', '2020-04-17 19:05:45'),
(626, 664, 30, '2020-04-17 19:06:12', '2020-04-17 19:06:12'),
(627, 665, 30, '2020-04-17 19:06:37', '2020-04-17 19:06:37');

-- --------------------------------------------------------

--
-- بنية الجدول `question_images`
--

CREATE TABLE `question_images` (
  `id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `path` varchar(225) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- إرجاع أو استيراد بيانات الجدول `question_images`
--

INSERT INTO `question_images` (`id`, `question_id`, `path`) VALUES
(10, 26, 'images/2020-01-12_23_19_291460259213.jpg'),
(11, 27, 'images/2020-01-13_09_29_31854378285.jpg'),
(12, 28, 'images/2020-01-13_09_29_311703809330.jpg'),
(13, 28, 'images/2020-01-14_10_11_042100908423.jpg'),
(14, 31, 'images/2020-01-15_10_09_261750086973.jpg'),
(15, 32, 'images2020-01-15_10_14_191977815639.jpg'),
(16, 33, 'images/2020-01-15_10_16_561418935721.jpg'),
(17, 629, 'images/2020-03-14_14_27_27739925645.JPG'),
(18, 631, 'images/2020-03-14_14_28_36692070811.JPG'),
(19, 660, 'images/2020-04-17_21_01_151408057508.JPG'),
(20, 661, 'images/2020-04-17_21_04_30379993316.JPG'),
(21, 662, 'images/2020-04-17_21_05_171911379704.JPG'),
(22, 663, 'images/2020-04-17_21_05_441858077233.JPG'),
(23, 664, 'images/2020-04-17_21_06_122043233115.JPG'),
(24, 665, 'images/2020-04-17_21_06_371635506527.JPG');

-- --------------------------------------------------------

--
-- بنية الجدول `question_types`
--

CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `QUESTION_TYPE_DESCR` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `question_types`
--

INSERT INTO `question_types` (`id`, `QUESTION_TYPE_DESCR`, `created_at`, `updated_at`) VALUES
(1, 'kbkjbfkjv', NULL, NULL),
(2, 'kjvfjvb', NULL, NULL),
(3, 'kjfkfjbv', NULL, NULL),
(4, 'kjvbfkjvb', NULL, NULL),
(5, 'kvbfkjvb', NULL, NULL);

-- --------------------------------------------------------

--
-- بنية الجدول `report_attachement`
--

CREATE TABLE `report_attachement` (
  `id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `path` text COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- بنية الجدول `sas`
--

CREATE TABLE `sas` (
  `id` int(11) NOT NULL,
  `SA_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `SA_PASSWORD` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `SA_FACULTY_ID` int(11) DEFAULT NULL,
  `SA_PHONE_NUMBER` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `sas`
--

INSERT INTO `sas` (`id`, `SA_NAME`, `SA_PASSWORD`, `SA_FACULTY_ID`, `SA_PHONE_NUMBER`, `user_id`, `created_at`, `updated_at`) VALUES
(3, 'SA', '$2y$10$jTX1AoDjWNWSuFZqIxS.B.BJv8/UCCqyBIbZRHPFWkRU5Tnnosa66', 1, '0126824447', 13, '2018-10-27 14:02:13', '2019-04-03 05:06:10'),
(4, 'adel', '$2y$10$ARlRzZ0mnpTePO76MZ0g2.n/W5d9ucDm2o7WPMzZBAkdbhOOjyRJO', 4, '21343334', 1279, '2020-01-15 11:13:20', '2020-01-15 11:13:20'),
(5, 'testaff', '$2y$10$BnAwHQfR50V0.ykAIKztUusgbGk/Ytaezn/i8BdRGaZc0wLzP.7WG', 10, '0233224324', 1285, '2020-03-14 18:51:53', '2020-03-14 18:51:53');

-- --------------------------------------------------------

--
-- بنية الجدول `semesters`
--

CREATE TABLE `semesters` (
  `id` int(11) NOT NULL,
  `SEMESTER_DESCR` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- بنية الجدول `sessions`
--

CREATE TABLE `sessions` (
  `id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(10) UNSIGNED DEFAULT NULL,
  `ip_address` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_agent` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `payload` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `last_activity` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `sessions`
--

INSERT INTO `sessions` (`id`, `user_id`, `ip_address`, `user_agent`, `payload`, `last_activity`) VALUES
('15xm7oxGii3SHyHLs37lXM4wc5m3UPcJHXkuoPWi', NULL, '172.31.45.217', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiUkZKaHFqYmZYNkozbkV1Qm52VGtCVG1CMVVYR0hOaHBFTUhpSmFSRyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557739338),
('4t2hB48OLivt6Kq5Bwh46Yf7zxwCwwJXtuT5o4k9', NULL, '172.31.44.237', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoiZ0ZmVVM3dDR3M2trYWtiOE9UVVBDTk5tSmV5NUF6Q2JIdjJNN05BeiI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo1NDoiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9zdHVkZW50L2V4YW1zIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NTQ6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvc3R1ZGVudC9leGFtcyI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1555952052),
('9mWrmWaSK6K2OMWj9Ofhg0UZtFFYIRMVhHS9pWuf', NULL, '172.31.38.249', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiZmVaYUVFb0prYWNGZkgzQW5KSEFQcHZ2dzBXZ3ljSlB1aVJ5djJTcyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557744232),
('Acw9w81U9LOhQ3Gz7yDFHm8W2kWPrpWX3fFD2Ove', NULL, '172.31.38.50', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiQnZ4OEJmaGNkNzk5Rm5HNGZiak9nQ05ETjVmd1RBU0RZUkNhSWVhSiI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557746397),
('d6CbgqNkY351GQ52ZFuPscPnU1a2FDOpKvdS2dYi', NULL, '172.31.44.214', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoiMEozTmFnTWtzVWttNEFnaklhVVNmUklPd0lzNmVFWDJycENqOUtXeiI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo1NDoiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9zdHVkZW50L2V4YW1zIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NTQ6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvc3R1ZGVudC9leGFtcyI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1555952121),
('eaEMc4Q5MJa3CMR0GaPp0SqrAHVmn3eFlJLRmjn5', NULL, '172.31.45.226', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiTTh0SGsyd20xa2hPUDFvd09CZmF4TGlKOGxkOThpVjN2MGc5TFdVTyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557739170),
('FWrzEVUaMZbn8io8KTBgNwSfUCwnx6dX0mvYUQEa', NULL, '172.31.38.45', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoicTYyRXh4bkN1RVlHaXFKSUp5eGJIRmREZ1J4ZjF0MGRwMTFIeGpLOSI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557745088),
('g0wLuqLCrDZKkTNsqNtOB2QCEzmo5NdOMsIWvLlI', NULL, '172.31.38.37', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiSGRRR1F3RHZwQXBlZ3lVZmh2V0hLYXJZd0ZYMkRlejBZTVdqMXlBTCI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557746281),
('IEaYLZpnUsRfio59ukX8t1KoOihhJdyEWRsDLg0y', NULL, '172.31.38.27', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiYXVpOGVDN3BEZERTa1RlV2dnQjczQVRaWm1sVnNkZHJHazNkeTczTiI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557747363),
('KSzGnoBV22l5jh1O008to3mfy52c0Mq8YDDTAGQ0', NULL, '172.31.38.128', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiV04xZjZUVEU2RzU2VHRRb2VqZGlSNElhQTB0Zk9JRjN3c3dHT2FydSI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557744522),
('Ljzb2a1zANWoR6BGHX8lBBeGKit8fXSRPtHTkmLE', NULL, '172.31.42.77', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiZENqWENOUFBScHpZdm0zR3JuczBKdWpEWUExekRNTHZCR1Zyc3RZbiI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557742559),
('MhDTscWOs4qNJ1syj2D7cj4JM8E3YzUjdwvf2igy', NULL, '172.31.38.128', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiWTQ5ajB6bFN6cndNUVRyTktldlBFOFZ1TWNLWmROYTVzTjVCSmY4byI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557742559),
('mTL6uwkG7pkRpGRWMpoQKKjVo7q5SeW3HuDHy2na', NULL, '172.31.42.37', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiYmJ1RnNjWlZnenp5bzdhd281ZGVlT3hFV3d5eEVEdnJJMU1LOVpIdyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557737991),
('nmefPwDAWGRLHNRUavXl6nHJFhQONGTrSNw5qSbb', NULL, '172.31.38.140', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoiUTRaRHdMMHQzQXRrb0t3Nk1iaVltdDR5NEdDN2pkVmJzRXExZnhjdiI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo1NDoiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9zdHVkZW50L2V4YW1zIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NTQ6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvc3R1ZGVudC9leGFtcyI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1557735232),
('OLTSHx7EVFIR7sro9eGcjp0oXMuIY53QmKNgmZCi', NULL, '172.31.28.7', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiZGJoVVZmV2FZTm82RG95WFlpUTE1bm8xVEV2VVN6NlNYanlZd080eCI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557747362),
('piNYwNsZU6GcXRbrl4EkhSZXYPEQ7JMVmHSgdhSl', NULL, '172.31.40.54', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiS0pmQ0U3QkRwMFRObW9Ta2p2cEpKSDV6VU14dVJpVG54RWc3dVl4VyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557744770),
('PK9e96r7kG3t8iuOy2BXIuhOXHzJ5EQJzGxDoCFe', NULL, '172.31.38.133', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoibEpFaGZKbXdXOGJwTGtsbnRBbFY3V1ExbHJqcGxCNzBNSE1rVXlzeSI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo0NToiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9ob21lIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NDU6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvaG9tZSI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1557742568),
('PtXBB101IKV1bA5rB4JT17Oqp5rjgxUJPj6n2K7J', NULL, '172.31.38.33', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiSlVIdHNEenJjR0hwN0IxTkZMR0sybVVmS0c3T2oxV1dhb241aFdFUyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557746451),
('Q0HvG7L6zuIjMMwLgpBpkKkKyoEuCjpc0MQOLSoO', NULL, '172.31.46.12', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiT2RVVFpYMElub2FpNmV6YzhuZ29KSGtmaDRtSDlqZXRFZm5FNnNaNyI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557748125),
('qdIwjfJG8QrTpEldINqOytk8JzSUtRa95hlIe5a1', NULL, '172.31.44.186', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36', 'YTozOntzOjY6Il90b2tlbiI7czo0MDoiWUZaVmZ2N3hJczJXQ3hyODFmR1pCRDJEa3FXZGVnbFlrY1ZsdUREWCI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NDY6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvbG9naW4iO31zOjY6Il9mbGFzaCI7YToyOntzOjM6Im9sZCI7YTowOnt9czozOiJuZXciO2E6MDp7fX19', 1557738407),
('SSighi5d32lGCbiOWeqai4gdTEZYwlmhJotMuyMo', NULL, '172.31.38.39', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoiYTRWOGVReDhzd3JWNTJZcVRqazh3R09UYUFJRTdmeEZocVdydzF5biI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557744522),
('U9GvQmnTTuorGcOLiEhmnPkGNM22th1Z8NKxyvyr', NULL, '172.31.228.19', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoiTTN4TWlFWklTeGNscU5KaEluMEJwdGRjRkRiM0RZWWdnVFJ5SkJ2NSI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo1NDoiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9zdHVkZW50L2V4YW1zIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NTQ6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvc3R1ZGVudC9leGFtcyI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1557742945),
('vBQZkndL4NOyTvXmywDbrinXLYhKYZVdgElLZhce', NULL, '172.31.38.33', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoiS0FaMXBONjA2dXJxVUhNRnNwM3Jua0x2eDExSEJ6ZkVud1dNSUxlUiI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo1NDoiaHR0cDovLzE3Mi4yMS4yMDAuMjE5L29ubGluZV9leGFtL3B1YmxpYy9zdHVkZW50L2V4YW1zIjt9czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NTQ6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvc3R1ZGVudC9leGFtcyI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=', 1557735566),
('yoPadiJIWVbfRgVkkhqkb0Z87vZGBTBUPkUdFT4b', NULL, '172.31.38.53', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YToyOntzOjY6Il90b2tlbiI7czo0MDoicFVHb0ppRUtTak10d0ZhSDg1c2t3VmI2UUhvZlc4NE1oeGI3Wnl6QSI7czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1557742674),
('YWAFmNFR9wuINAZujkVdz2bjHApihs8coR77a1VW', NULL, '172.31.45.227', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', 'YTozOntzOjY6Il90b2tlbiI7czo0MDoibXpMQzM4NExpQk1NbHlLQURFcGlwN0V0V29MMDkwdnhYRmsyUFFmNCI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6NDY6Imh0dHA6Ly8xNzIuMjEuMjAwLjIxOS9vbmxpbmVfZXhhbS9wdWJsaWMvbG9naW4iO31zOjY6Il9mbGFzaCI7YToyOntzOjM6Im9sZCI7YTowOnt9czozOiJuZXciO2E6MDp7fX19', 1557731344),
('ZfXjnrxte957yMKEJjs5RlkDscqioeWpjmXjvDlf', NULL, '::1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0', 'YTo0OntzOjY6Il90b2tlbiI7czo0MDoieEdkRkJNZlVQNERrSDR6V3hJVm1JM0RNTjZxUEVvUWdTQkRNem5qeCI7czozOiJ1cmwiO2E6MTp7czo4OiJpbnRlbmRlZCI7czo4ODoiaHR0cDovL2xvY2FsaG9zdC9vbmxpbmVfZXhhbTItbWFzdGVyL3B1YmxpYy9hZG1pbi9kb2N0b3ItcHJvZmlsZS9leGFtL3ByaW50aWxvc3JlcG9ydC85NCI7fXM6OToiX3ByZXZpb3VzIjthOjE6e3M6MzoidXJsIjtzOjg4OiJodHRwOi8vbG9jYWxob3N0L29ubGluZV9leGFtMi1tYXN0ZXIvcHVibGljL2FkbWluL2RvY3Rvci1wcm9maWxlL2V4YW0vcHJpbnRpbG9zcmVwb3J0Lzk0Ijt9czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319fQ==', 1584522691);

-- --------------------------------------------------------

--
-- بنية الجدول `staff`
--

CREATE TABLE `staff` (
  `id` int(11) NOT NULL,
  `STAFF_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `FACULTY_ID` int(11) DEFAULT NULL,
  `DEPARTMENT_ID` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `staff`
--

INSERT INTO `staff` (`id`, `STAFF_NAME`, `phone`, `FACULTY_ID`, `DEPARTMENT_ID`, `user_id`, `created_at`, `updated_at`) VALUES
(4, 'Dr.Mohammed', '123456', 1, 1, 12, '2018-10-27 14:01:31', '2018-10-29 19:30:38'),
(5, 'admin@gmail.com', '+201111371734', 1, 3, 15, '2018-10-29 18:43:59', '2018-10-29 18:50:55'),
(6, 'alio.ali@gmail.com', '+201111371734', 4, 2, 16, '2018-10-31 05:31:24', '2018-10-31 05:31:24'),
(7, 'abdoo', '0126824447', 4, 2, 33, '2018-11-08 17:54:13', '2018-11-08 17:54:13'),
(8, 'Dr.Mamdouh', '01001001000', 4, 4, 37, '2018-11-10 08:25:08', '2018-11-10 08:25:08'),
(9, 'Mamdouh Farouk', '01001001000', 4, 4, 40, '2018-11-10 08:08:36', '2018-11-10 08:08:36'),
(10, 'Majid Askar', '010100100100', 4, 4, 42, '2018-11-11 13:07:15', '2018-12-17 07:22:22'),
(11, 'Dr Ali Hussein', '01280324830', 4, 2, 323, '2018-11-28 14:54:40', '2018-11-28 14:55:04'),
(12, 'dr. nahla', '010001000', 6, 5, 451, '2018-12-05 13:49:33', '2018-12-05 13:49:33'),
(13, 'test12', '1545555', 7, 6, 452, '2018-12-10 09:28:31', '2018-12-10 09:28:31'),
(14, 'Ahmed Taloba', '01000263301', 6, 8, 530, '2018-12-17 07:50:59', '2018-12-17 07:50:59'),
(15, 'Prof. Hosny', '01200000000', 4, 2, 532, '2019-01-15 10:28:49', '2019-01-15 10:28:49'),
(16, 'Ayman Abdo', '13245689', 9, 10, 584, '2019-01-27 10:35:50', '2019-01-27 10:35:50'),
(17, 'mamdouh', '012345678', 4, 4, 779, '2019-03-14 12:38:44', '2019-03-14 12:38:44'),
(18, 'Hosam Ragab', '0126824447', 4, 9, 1113, '2019-03-26 06:14:22', '2019-03-26 06:14:22'),
(19, 'Majid Askar', '01000000000', 6, 8, 1115, '2019-04-01 07:06:10', '2019-04-01 07:06:10'),
(20, 'Dr. Mohamed Mostafa', '13241', 6, 11, 1141, '2019-04-14 11:54:28', '2019-04-22 12:06:06'),
(21, 'dr.rania', '01003343020', 6, 5, 1142, '2019-04-14 16:15:18', '2019-04-14 16:15:18'),
(22, 'dr.menna elattar', '01096856825', 6, 5, 1114, '2019-04-14 16:15:18', '2019-04-14 16:15:18'),
(23, 'hamada', 'jjvbjbdjbk', 4, 2, 1276, '2019-11-13 06:30:13', '2019-11-13 06:30:13'),
(24, 'asddddd', '34232342', 4, 2, 1278, '2020-01-15 10:55:10', '2020-01-15 10:55:10'),
(25, 'doctor test', '01010079798', 4, 2, 1283, '2020-02-02 10:28:13', '2020-02-02 10:28:13'),
(26, 'testdoc', '011123233322', 10, 12, 1284, '2020-03-14 18:50:46', '2020-03-14 18:50:46');

-- --------------------------------------------------------

--
-- بنية الجدول `staff_courses`
--

CREATE TABLE `staff_courses` (
  `id` int(11) NOT NULL,
  `STAFF_ID` int(11) NOT NULL,
  `COURSE_ID` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `staff_courses`
--

INSERT INTO `staff_courses` (`id`, `STAFF_ID`, `COURSE_ID`, `created_at`, `updated_at`) VALUES
(24, 5, 11, '2018-10-29 19:20:22', '2018-10-29 19:20:22'),
(26, 4, 10, '2018-10-29 19:30:38', '2018-10-29 19:30:38'),
(28, 6, 13, '2018-10-31 09:27:31', '2018-10-31 09:27:31'),
(29, 6, 14, '2018-10-31 09:27:31', '2018-10-31 09:27:31'),
(30, 7, 13, '2018-11-08 17:54:13', '2018-11-08 17:54:13'),
(31, 8, 15, '2018-11-10 08:25:08', '2018-11-10 08:25:08'),
(32, 9, 15, '2018-11-10 08:08:36', '2018-11-10 08:08:36'),
(35, 11, 17, '2018-11-28 14:55:04', '2018-11-28 14:55:04'),
(36, 12, 18, '2018-12-05 13:49:33', '2018-12-05 13:49:33'),
(37, 13, 19, '2018-12-10 09:28:31', '2018-12-10 09:28:31'),
(39, 14, 20, '2018-12-17 07:50:59', '2018-12-17 07:50:59'),
(40, 15, 17, '2019-01-15 10:28:49', '2019-01-15 10:28:49'),
(46, 16, 22, '2019-01-27 10:35:50', '2019-01-27 10:35:50'),
(55, 17, 15, '2019-03-14 13:38:27', '2019-03-14 13:38:27'),
(56, 17, 16, '2019-03-14 13:38:27', '2019-03-14 13:38:27'),
(57, 17, 24, '2019-03-14 13:38:27', '2019-03-14 13:38:27'),
(58, 18, 25, '2019-03-26 06:14:22', '2019-03-26 06:14:22'),
(59, 18, 26, '2019-03-26 06:14:22', '2019-03-26 06:14:22'),
(60, 19, 28, '2019-04-01 07:06:10', '2019-04-01 07:06:10'),
(61, 10, 15, '2019-04-08 17:11:09', '2019-04-08 17:11:09'),
(62, 10, 16, '2019-04-08 17:11:09', '2019-04-08 17:11:09'),
(63, 10, 21, '2019-04-08 17:11:09', '2019-04-08 17:11:09'),
(64, 10, 27, '2019-04-08 17:11:09', '2019-04-08 17:11:09'),
(66, 21, 29, '2019-04-14 16:15:18', '2019-04-14 16:15:18'),
(67, 20, 31, '2019-04-22 12:06:06', '2019-04-22 12:06:06'),
(68, 22, 31, '2019-04-22 12:06:06', '2019-04-22 12:06:06'),
(69, 23, 13, '2019-11-13 06:30:14', '2019-11-13 06:30:14'),
(70, 24, 13, '2020-01-15 10:55:10', '2020-01-15 10:55:10'),
(71, 25, 13, '2020-02-02 10:28:13', '2020-02-02 10:28:13'),
(72, 25, 33, '2020-02-02 10:28:13', '2020-02-02 10:28:13'),
(73, 26, 34, '2020-03-14 18:50:47', '2020-03-14 18:50:47'),
(74, 26, 35, '2020-03-14 18:50:47', '2020-03-14 18:50:47');

-- --------------------------------------------------------

--
-- بنية الجدول `students`
--

CREATE TABLE `students` (
  `id` int(11) NOT NULL,
  `STUDENT_NAME` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `FACULTY_ID` int(11) DEFAULT NULL,
  `DEPARTMENT_ID` int(11) DEFAULT NULL,
  `STUDENT_SSN` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `STUDENT_PASSWORD` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `STUDENT_EMAIL` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `term` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `semester` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `class_id` int(11) DEFAULT NULL,
  `stage` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `students`
--

INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(85, 'ali', 4, 4, '556564', '$2y$10$RlW1JLcoPwsL/u9nqYgZFu0XKgUOu3xK6EzIzZZRMfLH1DOW/disK', 'ali2@gmail.com', '1', '2018 -2019', '21321', 107, '2018-11-18 17:16:14', '2018-11-18 17:16:14', 0, NULL),
(86, 'احمد مسعد عبد العزيز محمد', 4, 4, '30001011858156', '$2y$10$0OXSraEHTQWwnJl.NM/mieG6R18lsni3TdAALgo/fgvqnxVMGQb2e', '30001011858156', '1', '2018-2019', '123456556', 111, '2018-11-18 17:32:54', '2018-11-18 17:32:54', 0, NULL),
(87, 'اروى عبد الحميد حسن صلاح الدين', 4, 4, '29909292700609', '$2y$10$hUTIEpQ9jQrQz9YeG1la4OF3nI/Y.k/A0KXkJUzifq48vDET2BOSO', '29909292700609', '1', '2018-2019', '123456556', 112, '2018-11-18 17:32:54', '2018-11-18 17:32:54', 0, NULL),
(88, 'اسراء على ابو الوفا على ', 4, 4, '29902050200305', '$2y$10$x1ph5WIdX3sglm2Prch8B.hlC6UieynFwDSKrqXy/Rbhb0wZVo85a', '29902050200305', '1', '2018-2019', '123456556', 113, '2018-11-18 17:32:54', '2018-11-18 17:32:54', 0, NULL),
(89, 'اسراء قطب ابراهيم قطب ', 4, 4, '29902152401321', '$2y$10$e3oi7DnPGC0W5D2YAsD76uhJBaq6Vqcfbf8/niiKyL0/Akped3kTy', '29902152401321', '1', '2018-2019', '123456556', 114, '2018-11-18 17:32:54', '2018-11-18 17:32:54', 0, NULL),
(90, 'اسماء اسماعيل عبد الرحيم سنجاب', 4, 4, '29908082503006', '$2y$10$W1Wv.bFV0rIRtwDNCt9k2Or9XHIpWeCq5ecdzXOSDepl4BLsSSGPe', '29908082503006', '1', '2018-2019', '123456556', 115, '2018-11-18 17:32:54', '2018-11-18 17:32:54', 0, NULL),
(91, 'أسماء سيد احمد الريدي', 4, 4, '29902062403724', '$2y$10$FGT1dYkhdCB5Dh3Wz95ycOfDlaFcv6HuLQp3n/6KROXSyJ.EyhN/e', '29902062403724', '1', '2018-2019', '123456556', 116, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(92, 'ألاء حمادة حسانين احمد', 4, 4, '29810062500124', '$2y$10$LVPg4/Mb6ofyel4KNlF8meoph6z6deLzKcBiS8ReEF2FGq/yGVGam', '29810062500124', '1', '2018-2019', '123456556', 117, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(93, 'الشيماء احمد جاد الكريم ', 4, 4, '29902012703786', '$2y$10$omD/LMvizuSO/NngxavsCOERphvSRp2oWZ6.4uPX3KyxduxUo3qP6', '29902012703786', '1', '2018-2019', '123456556', 118, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(94, 'اميره ابراهيم على محمد ', 4, 4, '29906112600327', '$2y$10$QQl2/YLDH2GihKQ5gzrBxOTX1j38dl1bF0v8KvK8cg18KPGrbxNWG', '29906112600327', '1', '2018-2019', '123456556', 119, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(95, 'انطونيوس منير فهمى  اسكندر ', 4, 4, '29710292500838', '$2y$10$gDxrMH6wtikEWTneiqmwrewJZEN3LhM/twBhmhZ.B87o2Q0tSwE1S', '29710292500838', '1', '2018-2019', '123456556', 120, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(96, 'آيات خالد حسن محمد بكرى', 4, 4, '29901092503328', '$2y$10$n/LkxrvzPQk5osDaFoZXL.FDpgQIj9V27TPmigTtjaTEa0/KiU2hu', '29901092503328', '1', '2018-2019', '123456556', 121, '2018-11-18 17:32:55', '2018-11-18 17:32:55', 0, NULL),
(97, 'اياد زهير عبد البديع عبد الغنى', 4, 4, '29907302500619', '$2y$10$ktDSSnmCAb53P7Ze1wBVJe.EjLDsKdhY85YAg1o7u/h/G98Re/DdO', '29907302500619', '1', '2018-2019', '123456556', 122, '2018-11-18 17:32:56', '2018-11-18 17:32:56', 0, NULL),
(98, 'ايمان محمود احمد حسين ', 4, 4, '29901262800284', '$2y$10$WQ.FrSN3CFt9Jx1AxeJID.TTtOZZ1irJ6PZtttZsr.KpzMtq01n62', '29901262800284', '1', '2018-2019', '123456556', 123, '2018-11-18 17:32:56', '2018-11-18 17:32:56', 0, NULL),
(99, 'ايمانويل امجد اسحق عزيز', 4, 4, '29901012513271', '$2y$10$V5B0Ip47n/CUXG1RT6TIBevLKzXRa9Fk3Ikh05tXviPEMB3Lxh7ta', '29901012513271', '1', '2018-2019', '123456556', 124, '2018-11-18 17:32:56', '2018-11-18 17:32:56', 0, NULL),
(100, 'ايهاب صموئيل وهيب ناشد', 4, 4, '29907052500111', '$2y$10$wKWWf.aIR2DVoraP1d2oxOma4xKrFlesrVuXyUFguI0XXZqlPw2C6', '29907052500111', '1', '2018-2019', '123456556', 125, '2018-11-18 17:32:56', '2018-11-18 17:32:56', 0, NULL),
(101, 'جرجس بطرس الفي صليب', 4, 4, '29906298800436', '$2y$10$opx5T8EL/LXm1DOUA62twezKx9NPiXapLyboQfkHNxkd33rXZ73bC', '29906298800436', '1', '2018-2019', '123456556', 126, '2018-11-18 17:32:56', '2018-11-18 17:32:56', 0, NULL),
(102, 'حسام حسن محمد عمار', 4, 4, '29904102501336', '$2y$10$Me5hnaQpjwpQn9vfyNJ64OlQ1ZnsybrR.B2SrBeuVaV.126qzz1Oi', '29904102501336', '1', '2018-2019', '123456556', 127, '2018-11-18 17:32:57', '2018-11-18 17:32:57', 0, NULL),
(103, 'حسام فتحى مرسى خليل', 4, 4, '29908102401752', '$2y$10$atAZvP3.obco6mThrrLxpOmiNZcFVPgN85kFSSnuK959DuNqPYRKS', '29908102401752', '1', '2018-2019', '123456556', 128, '2018-11-18 17:32:57', '2018-11-18 17:32:57', 0, NULL),
(104, 'دعاء محمد محمود عبدالجواد', 4, 4, '29907052503366', '$2y$10$pEHYpNdJTQWBy9coWMtUUeHDYayZoT6qSco1km2vepVQTDUbiBz4K', '29907052503366', '1', '2018-2019', '123456556', 129, '2018-11-18 17:32:57', '2018-11-18 17:32:57', 0, NULL),
(105, 'رانيا محمود عبد العزيز احمد', 4, 4, '29903212500088', '$2y$10$E..9ksQ4NWbvllIvkOXhM.nS0nohf6xwxYNaTnepBLCZLtiRqGP4G', '29903212500088', '1', '2018-2019', '123456556', 130, '2018-11-18 17:32:57', '2018-11-18 17:32:57', 0, NULL),
(106, 'رؤية شريف جمال ثابت', 4, 4, '29905172501461', '$2y$10$M4j.Pgh503QoAV8kX.Ea6OJrD22Q1q9dzoJVMXYiHqSLrN25U8bnK', '29905172501461', '1', '2018-2019', '123456556', 131, '2018-11-18 17:32:57', '2018-11-18 17:32:57', 0, NULL),
(107, 'ريم أحمد محمود محمد', 4, 4, '29812222501567', '$2y$10$sv0tgNYoFemtZ.WdsEhVXOvk4LwZ/aeOPHmasVc3u6FicsuzuAnUW', '29812222501567', '1', '2018-2019', '123456556', 132, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(108, 'سامر سامى سليم نخله     ', 4, 4, '29907152501417', '$2y$10$33Z3AIZ4e3GBUuqSaoGqDe7b7WYiWhUTpxUeoSj4KLLlF.VmFNpGO', '29907152501417', '1', '2018-2019', '123456556', 133, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(109, 'ساندرا ممدوح امين مرقص', 4, 4, '29811182500787', '$2y$10$tgbyMxL8vpwP.ASw0KwHAOpRvYjSkOtCVacmxh5nckT1i7GcAt67e', '29811182500787', '1', '2018-2019', '123456556', 134, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(110, 'شيماء اشرف كامل محمد', 4, 4, '29812192500625', '$2y$10$st5XT3bFmFPBszoy6PhFpubgNahT/DWULNw7w4wVIsnjR7GunIFD2', '29812192500625', '1', '2018-2019', '123456556', 135, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(111, 'عبد الرحمن سيد عبد الناصر اسماعيل', 4, 4, '29911202503677', '$2y$10$sezTH6sYrWM/Zo0w0d1RZecUPAlMrlIRINGPGu/XyIml92wBg9B.m', '29911202503677', '1', '2018-2019', '123456556', 136, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(112, 'عبد الله عبد العاطي حسن عمر', 4, 4, '29905022501277', '$2y$10$dbrxtpQxOSzp0tqZe3O4letDyTRTB0HjUS4PGi/7kIcVEVSvUg3v.', '29905022501277', '1', '2018-2019', '123456556', 137, '2018-11-18 17:32:58', '2018-11-18 17:32:58', 0, NULL),
(113, 'على اسامة على ابراهيم', 4, 4, '29903082500277', '$2y$10$1N2NdAf0wXxWOXXDUCxT8.tL8oAtEICMuTyxH/XUE9Aj1Cp7HD.7S', '29903082500277', '1', '2018-2019', '123456556', 138, '2018-11-18 17:32:59', '2018-11-18 17:32:59', 0, NULL),
(114, 'علياء حسن احمد طه', 4, 4, '29902132500285', '$2y$10$ga9bjkr2Q7bUfineneslhukROJ6Qx2uuX6oD5cPvl6YrQ0vzylRSa', '29902132500285', '1', '2018-2019', '123456556', 139, '2018-11-18 17:32:59', '2018-11-18 17:32:59', 0, NULL),
(115, 'عماد نشأت جرجس ميلاد ', 4, 4, '29901153100051', '$2y$10$2fn0ma8V8qLK1F2gMlN5C.MHs46xMwnPv6/nvJ83R4nHhEAT7Y.XC', '29901153100051', '1', '2018-2019', '123456556', 140, '2018-11-18 17:32:59', '2018-11-18 17:32:59', 0, NULL),
(116, 'عمر صلاح محمد حميد ', 4, 4, '29812262502418', '$2y$10$avERhPJWst.muDQpgUUlreB5hN8djdAkYyCyKjh6A9UvicE2lZ5KO', '29812262502418', '1', '2018-2019', '123456556', 141, '2018-11-18 17:32:59', '2018-11-18 17:32:59', 0, NULL),
(117, 'عمرعبد العزيز محمد محروس', 4, 4, '29906032501115', '$2y$10$FDoxAwiMhCWI7gvjDo.JDOSBd9JfvO/nz4AYHeAbaL0vwzId812Xe', '29906032501115', '1', '2018-2019', '123456556', 142, '2018-11-18 17:32:59', '2018-11-18 17:32:59', 0, NULL),
(118, 'فيبي ايوب قلتة جاد الله', 4, 4, '29811282501004', '$2y$10$Be2eYkQjGC9Hc3aFua59n.DSLBtW/RAZZT9ytsMJ5OvfKTA2RabeS', '29811282501004', '1', '2018-2019', '123456556', 143, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(119, 'لميس صبري فراج سعد الدين', 4, 4, '29901012807283', '$2y$10$RofyG35/Kbfj7IoDWJAkFurtuTcCz.Lzq0oWJre9XWAr0/4PAnNqW', '29901012807283', '1', '2018-2019', '123456556', 144, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(120, 'مايكل ميلاد حكيم سلامه', 4, 4, '29907012700916', '$2y$10$8fKtkYBOWB2LoEMG1thfU.gIFl/5.VFEC5Ga0WUP/7Cgh6lZYH5Ky', '29907012700916', '1', '2018-2019', '123456556', 145, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(121, 'محمد احمد عبد الودود محمد', 4, 4, '29908028800097', '$2y$10$MjlJsr28H7PdjGpTBC1c8e0biaNuCScPysq9mD0XBQeB0pbtNqnAq', '29908028800097', '1', '2018-2019', '123456556', 146, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(122, 'محمد خالد محمد عبدالمالك', 4, 4, '29912043200052', '$2y$10$5hI2y9N.2DoNtSt85xhSb.8vsSKejm5fgFS28IHIWU8auAETo2ZOW', '29912043200052', '1', '2018-2019', '123456556', 147, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(123, 'محمد سيد احمد حسانى خليل ', 4, 4, '29811060102756', '$2y$10$5Tg4CZomXpua5.mJ0QC6GOkkmWDraq7AkRVKFnaCsVf41lSGB9XL2', '29811060102756', '1', '2018-2019', '123456556', 148, '2018-11-18 17:33:00', '2018-11-18 17:33:00', 0, NULL),
(124, 'محمد شعلان انور حمادة', 4, 4, '29710132500637', '$2y$10$mdSRa4CY5uA3xwwy2A9PpuMbVVOLIsBDL/yJGBpLZx5n3jA0BybVy', '29710132500637', '1', '2018-2019', '123456556', 149, '2018-11-18 17:33:01', '2018-11-18 17:33:01', 0, NULL),
(125, 'محمد هشام إبراهيم جبر', 4, 4, '29907022500397', '$2y$10$UdPHT8OVAFVuIPlJ48env.Szb87Yq3j7t5W16r4i6aEDb7TtTlFvC', '29907022500397', '1', '2018-2019', '123456556', 150, '2018-11-18 17:33:01', '2018-11-18 17:33:01', 0, NULL),
(126, 'محمود على ماهر محمد ', 4, 4, '29907120103533', '$2y$10$GFMlm9YKivhX44NgCHS2.utrypx5pGMn8R5pqlXj5SYMtjHBem6fC', '29907120103533', '1', '2018-2019', '123456556', 151, '2018-11-18 17:33:01', '2018-11-18 17:33:01', 0, NULL),
(127, 'مصطفى احمد حسن علي', 4, 4, '29907212701437', '$2y$10$EeHLS5pt1Y.eq5G9dyUm1.2U6wcCTUefJsO9NJHiHzkMHNjU45QNe', '29907212701437', '1', '2018-2019', '123456556', 152, '2018-11-18 17:33:01', '2018-11-18 17:33:01', 0, NULL),
(128, 'مصطفى احمد عبد الحليم محمد', 4, 4, '29904102502251', '$2y$10$Ib91A0x6Yet/z8iDfgheIOeJpkI11wtUHCg469yR1NRP6DaRzO.Im', '29904102502251', '1', '2018-2019', '123456556', 153, '2018-11-18 17:33:01', '2018-11-18 17:33:01', 0, NULL),
(129, 'مصطفى جمال عبد العال رفاعى ', 4, 4, '29910012606554', '$2y$10$jI8dLPxfxjQrmIoThmDTI.bp5ge8yj/pk7.dAsmT8zIxorShHPK0y', '29910012606554', '1', '2018-2019', '123456556', 154, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(130, 'مصطفى محمد محمود عبد الغفار ', 4, 4, '29812192500595', '$2y$10$QUzb7iBs2JXosaAngM.mrOstmC9FYC.1eqfAhwMrmiDI48eR2dUu6', '29812192500595', '1', '2018-2019', '123456556', 155, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(131, 'ميرا مجدي بطرس يوسف', 4, 4, '29904032500442', '$2y$10$nqmSHTM6MVDgrNwSzQxxbOr/SwRZ7s.EUbnlMv/iPK060tmqVzFKS', '29904032500442', '1', '2018-2019', '123456556', 156, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(132, 'مينا سميح يني عطا الله', 4, 4, '29909122500338', '$2y$10$cIqu1rpfodYkShgeTAbyH.MX/xv8bnIJWnsDt5SNJqxpEsJM3gCGq', '29909122500338', '1', '2018-2019', '123456556', 157, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(133, 'نادين حازم عطية عبد العال', 4, 4, '29901312501607', '$2y$10$sUGq.YIr7i7gwzgowY9t/ePtmOtPye967u3ks2b8ptyST1C2whf/6', '29901312501607', '1', '2018-2019', '123456556', 158, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(134, 'ندى حسن اسماعيل هلال', 4, 4, '29907292500844', '$2y$10$10mUeFg1iIwrwD6DAFYLjernZodtsuIGvJrl4.nVQUhT8D1BeiwmK', '29907292500844', '1', '2018-2019', '123456556', 159, '2018-11-18 17:33:02', '2018-11-18 17:33:02', 0, NULL),
(135, 'نعمة عادل حسين  عبد الرحمن', 4, 4, '29912282501005', '$2y$10$xB0LhC8aCX6Ft.j9Z5KRl.dddGObtJhlerUikbb8zYO1ifCKl4weS', '29912282501005', '1', '2018-2019', '123456556', 160, '2018-11-18 17:33:03', '2018-11-18 17:33:03', 0, NULL),
(136, 'نهى محمد صلاح الدين عبد الحميد', 4, 4, '2981109 2500125', '$2y$10$KJz1tL7.gHSYQD6aMDFHPuwP8YMrN.sMB6rRJ7yB7j2.N/3dgvvNm', '2981109 2500125', '1', '2018-2019', '123456556', 161, '2018-11-18 17:33:03', '2018-11-18 17:33:03', 0, NULL),
(137, 'هبة مصطفي محمد احمد', 4, 4, '29906122500762', '$2y$10$Ht/OnNWxhKh9Au85wD275uoXpS5k8hTOs1dG7IwdlaVTv1s8bbfxS', '29906122500762', '1', '2018-2019', '123456556', 162, '2018-11-18 17:33:03', '2018-11-18 17:33:03', 0, NULL),
(138, 'احمد حمدي حسن محفوظ', 4, 4, '29905112500172', '$2y$10$iV/Xi86/aIqubS3IeXaW4O/jBDSWRThjB9HhM3Sbq9FWGM3jA0EkC', '29905112500172', '1', '2018-2019', '123456556', 163, '2018-11-19 11:13:29', '2018-11-19 11:13:29', 0, NULL),
(139, 'اسماء محمد المهدى محمد ', 4, 4, '29712102501364', '$2y$10$4Nw8RqkUWFS.l.QCN6d6sO6QHdNQwMBC223MceMvKGYBJkH36lfHG', '29712102501364', '1', '2018-2019', '123456556', 164, '2018-11-19 11:13:29', '2018-11-19 11:13:29', 0, NULL),
(140, 'الاء محمد ذكي محمد', 4, 4, '29905218800221', '$2y$10$b4nH8jJ59FaZWr4CEAuwTemvDSk0AnSuo8E.g3nCmegql9rY1ZBjy', '29905218800221', '1', '2018-2019', '123456556', 165, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(141, 'الاء محمود فوزي خالد', 4, 4, '29810152501529', '$2y$10$hLWKJhlzAOwQYOVC6EE/1ejKKUaobK3DLV4ddWdNxTUSq1l3YVwZe', '29810152501529', '1', '2018-2019', '123456556', 166, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(142, 'الشيماء عبد السلام محمد متولي', 4, 4, '29906272501627', '$2y$10$ttg5FjKxu2yX2lhfzJZ4jOhx2oqhO47b/.D5Lp.6FNab.08hV6rgW', '29906272501627', '1', '2018-2019', '123456556', 167, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(143, 'المعتصم بالله / السيد محمد ابو العلا ', 4, 4, '29901202604036', '$2y$10$C8y9ClbtBP3HQLUeiQCA6e5oEThzdov0U2riVB8rwVHPh7Pe4.BCi', '29901202604036', '1', '2018-2019', '123456556', 168, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(144, 'امجاد محب القس هارون', 4, 4, '29811222500505', '$2y$10$y3ubT07/p.VaaIJIqK5xTeamgFrvm8nKlEbQDx16RPGzr5kCYFeSa', '29811222500505', '1', '2018-2019', '123456556', 169, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(145, 'امل يوسف ليسى ليسى', 4, 4, '29806102501024', '$2y$10$r6W0owDc7dz1q.lVFUWv7elzRIy7xPsEAYz4moRX1z3JP7CY.G6OK', '29806102501024', '1', '2018-2019', '123456556', 170, '2018-11-19 11:13:30', '2018-11-19 11:13:30', 0, NULL),
(146, 'اميرة حسن عبد الغني ابراهيم', 4, 4, '29908148800368', '$2y$10$Ey.kkItwwKAliQLSeGy/ge6dlapoi6Bfa9HpK.KVUAhZKz4Y/49hu', '29908148800368', '1', '2018-2019', '123456556', 171, '2018-11-19 11:13:31', '2018-11-19 11:13:31', 0, NULL),
(147, 'انجي ممدوح علي احمد', 4, 4, '29908042500721', '$2y$10$f7g.bdP4VPvx8LlYFe5pkOmKwhO4wknQBpxrFlAgD5R0JDJlWuZ/K', '29908042500721', '1', '2018-2019', '123456556', 172, '2018-11-19 11:13:31', '2018-11-19 11:13:31', 0, NULL),
(148, 'ايمان ابراهيم ابو العلا عبد الحافظ', 4, 4, '29904222501046', '$2y$10$phcdbOMfEwC.JcjHQccrYu0Z5226x1kU36k5hDBbVu0QJyc8dpvWq', '29904222501046', '1', '2018-2019', '123456556', 173, '2018-11-19 11:13:31', '2018-11-19 11:13:31', 0, NULL),
(149, 'ايمان محمود عبد الغني عبد اللطيف', 4, 4, '29810012713526', '$2y$10$0JsVEfxb9G3fAd5riB89cush/nk/34ebt765q5Frrj/dhb0RDdIC2', '29810012713526', '1', '2018-2019', '123456556', 174, '2018-11-19 11:13:31', '2018-11-19 11:13:31', 0, NULL),
(150, 'ايه جمال عبد المقصود عبد الرحيم ', 4, 4, '29904012503623', '$2y$10$Go0ljomi4bgQG7puUKZhYeOZ75xmRV2VZY/hJQia4rGa6yzG6Hlna', '29904012503623', '1', '2018-2019', '123456556', 175, '2018-11-19 11:13:31', '2018-11-19 11:13:31', 0, NULL),
(151, 'بشرى كريم بشرى ابراهيم', 4, 4, '29802142500238', '$2y$10$CO7SZq1rM7eEiUiejex83eKNKT8rpGejV7m0GkmYJc.nJaTOLeOgW', '29802142500238', '1', '2018-2019', '123456556', 176, '2018-11-19 11:13:32', '2018-11-19 11:13:32', 0, NULL),
(152, 'بولا جرجس يونان مقار ', 4, 4, '30003012700397', '$2y$10$mqQOXgtImbaoajuiQWYgr.NqFIgkPa22C2.EgH6BxveFfJqW57ZzG', '30003012700397', '1', '2018-2019', '123456556', 177, '2018-11-19 11:13:32', '2018-11-19 11:13:32', 0, NULL),
(153, 'بيتر عصام ادولف شفيق', 4, 4, '29901012503896', '$2y$10$.DYfYgwked.Nom6w5jOcA.RM55DOiUO7Z3qyBaj./bd2Youcgccoa', '29901012503896', '1', '2018-2019', '123456556', 178, '2018-11-19 11:13:32', '2018-11-19 11:13:32', 0, NULL),
(154, 'جوى بركات داوود يوسف', 4, 4, '29810152500042', '$2y$10$26iNL0UKZabgn1ryY3q6UehyRPYIJycM1avdiUQnfdWzzDzflxBTC', '29810152500042', '1', '2018-2019', '123456556', 179, '2018-11-19 11:13:32', '2018-11-19 11:13:32', 0, NULL),
(155, 'جيهان حمدي حسين عيسى', 4, 4, '29812202500408', '$2y$10$IxNSbJCCUpUbzE/0sThjX.zKcprle9PYRLCURMCBbBvh1NyiZEeJu', '29812202500408', '1', '2018-2019', '123456556', 180, '2018-11-19 11:13:32', '2018-11-19 11:13:32', 0, NULL),
(156, 'حسام سيد عمر محمد', 4, 4, '29906152402935', '$2y$10$TJIrTeF3LhZOvdxPJWkuAeCQuCFCXE1dorP94y4hLKZWgjqBKRXeW', '29906152402935', '1', '2018-2019', '123456556', 181, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(157, 'حسام عادل مصطفى احمد', 4, 4, '29905242502118', '$2y$10$2./QkYIpT15enNzm5ZNCSeIUgt5ENB83ahlBAGM5S7XVOnJkWR8wy', '29905242502118', '1', '2018-2019', '123456556', 182, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(158, 'خلود محمد عبد العزيز احمد', 4, 4, '29711162502461', '$2y$10$hnwETwHb3ihMlAXCLJLo1.cu04wzOWUBieMIbZqjvAtWDat.LrD1u', '29711162502461', '1', '2018-2019', '123456556', 183, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(159, 'ديانا سيحة سعد ابراهيم', 4, 4, '29905252400542', '$2y$10$hK/PzY7NMilxthqlnYkQDOcUfZtGN.ylf59toz117CPQpowqOUwQC', '29905252400542', '1', '2018-2019', '123456556', 184, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(160, 'دينا عبد الناصر سالم حسن', 4, 4, '29710252504563', '$2y$10$WucqDYXnArwfC.prelMSv.VWY.s6M5sYDQzp2sd2gp8jP0KjxnJxe', '29710252504563', '1', '2018-2019', '123456556', 185, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(161, 'دينا عماد الدين كامل محمد', 4, 4, '29908072501706', '$2y$10$r5Jy/Cqu84I5H3qlqYgqcumnY1RynyAjWgt0eOxgakP8UC0EeIHNG', '29908072501706', '1', '2018-2019', '123456556', 186, '2018-11-19 11:13:33', '2018-11-19 11:13:33', 0, NULL),
(162, 'رانيا محمد هشام احمد محمد', 4, 4, '29901252503702', '$2y$10$YV4l.KVj/q9dbgDYLdZTwuHqotlVrPnenF/kCWVgAQo6EkRlNw.ei', '29901252503702', '1', '2018-2019', '123456556', 187, '2018-11-19 11:13:34', '2018-11-19 11:13:34', 0, NULL),
(163, 'رفيدة جمال محمد ربيع', 4, 4, '29909092505348', '$2y$10$1eSnguTweGIeNNuhbo4y/ODm73CJNBNJQIgIve.FdWpRddm/WuqFS', '29909092505348', '1', '2018-2019', '123456556', 188, '2018-11-19 11:13:34', '2018-11-19 11:13:34', 0, NULL),
(164, 'رنيم محمد عبد الرحيم احمد', 4, 4, '29904143200049', '$2y$10$u6AnmHluCeD3ulWrKFSneevqmMv0CcQ7qlLgzpLYTgkmWvauVev3.', '29904143200049', '1', '2018-2019', '123456556', 189, '2018-11-19 11:13:34', '2018-11-19 11:13:34', 0, NULL),
(165, 'زياد عبد الباسط احمد عبد المطلب', 4, 4, '29912172500895', '$2y$10$OIp952fi/rvZ6K7rOCQF3O/pe0fu819iR5lorPTsGbz1Eq4VrfPWW', '29912172500895', '1', '2018-2019', '123456556', 190, '2018-11-19 11:13:34', '2018-11-19 11:13:34', 0, NULL),
(166, 'سارة فاروق عبد اللاه محمد', 4, 4, '29904032604027', '$2y$10$H4m5osxYVUUZ4K5FKZbZ6OCs5cbnQdQuf5Zadzf2uspnFFQUZrI62', '29904032604027', '1', '2018-2019', '123456556', 191, '2018-11-19 11:13:34', '2018-11-19 11:13:34', 0, NULL),
(167, 'ساندي عماد حليم جاد الله', 4, 4, '29907192501185', '$2y$10$m01Gom2LFGgTOQRsQ1102u8WW8C5ApILTnB0xlkHw2adkSRNLskLe', '29907192501185', '1', '2018-2019', '123456556', 192, '2018-11-19 11:13:35', '2018-11-19 11:13:35', 0, NULL),
(168, 'سلمى احمد حسين حسن', 4, 4, '29901242502945', '$2y$10$v1zqM7Iv/wo7ecxGAJ0t7.pDqK5SAeKyOuOgAFCj//Nnqafu4YgGO', '29901242502945', '1', '2018-2019', '123456556', 193, '2018-11-19 11:13:35', '2018-11-19 11:13:35', 0, NULL),
(169, 'سلوى جمال عبد اللاه طه', 4, 4, '29812202500343', '$2y$10$6/6bGEJDUO.4blDlVa7f/OzZAnhg8ro4yPSJurz2chYddqTpkGLRO', '29812202500343', '1', '2018-2019', '123456556', 194, '2018-11-19 11:13:35', '2018-11-19 11:13:35', 0, NULL),
(170, 'سمير منير سمير حنين  ', 4, 4, '29908212503755', '$2y$10$auZM4Mc7HwCvkxsIUSZZXu/P0lkp836CIIPE5V5gUbpgFiz6wc5Jm', '29908212503755', '1', '2018-2019', '123456556', 195, '2018-11-19 11:13:35', '2018-11-19 11:13:35', 0, NULL),
(171, 'سندس محمد حسين علي', 4, 4, '29911063200109', '$2y$10$oOwnMakkqHqPtzAf6mg...ofVGJLY6exX.MmjJCUca2Rp6BHj0PwS', '29911063200109', '1', '2018-2019', '123456556', 196, '2018-11-19 11:13:35', '2018-11-19 11:13:35', 0, NULL),
(172, 'سها عادل ابراهيم محمد', 4, 4, '29811062500309', '$2y$10$IA2qFN0ZVgX0hsq/H5PKgeM9gzS.7XEQ8fGXtogiS6FS7yYZBtHu.', '29811062500309', '1', '2018-2019', '123456556', 197, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(173, 'سهيلة عادل فوزي محمود', 4, 4, '29908162601343', '$2y$10$gEcpcXlWs6ixVhERfV/YaOQVzRekb9SQ.hlJyceAqHr17RuIhF4.K', '29908162601343', '1', '2018-2019', '123456556', 198, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(174, 'شريف احمد محمد احمد ', 4, 4, '29903183200215', '$2y$10$qxHUdbQE8S1HnVOWdeh22.WYrp0ruUj9WvTtv3m1l12jGLYLuXz1W', '29903183200215', '1', '2018-2019', '123456556', 199, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(175, 'شيري اشرف زكري اليفاز', 4, 4, '29906072500065', '$2y$10$5A.h.43u4NTZCHIZ0WIVhe2sjLytcovONJuncVmxQgbAfo5jBVHSu', '29906072500065', '1', '2018-2019', '123456556', 200, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(176, 'شيماء ممدوح احمد محمد', 4, 4, '29909052502168', '$2y$10$Ti.TrtjVcTUfs6GJHC7x5uypjqNPYDp1kmveEB5GoGW3hx898R0s.', '29909052502168', '1', '2018-2019', '123456556', 201, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(177, 'عائشة محمد صفوت عبد الرحمن', 4, 4, '29909232500465', '$2y$10$fxHDRvw8XsKKRTF2hkYz5OmnFTOn9lCnWBz74gLa7tHeYlc5A.722', '29909232500465', '1', '2018-2019', '123456556', 202, '2018-11-19 11:13:36', '2018-11-19 11:13:36', 0, NULL),
(178, 'عبد الرحمن عرفة عثمان محمد', 4, 4, '29907012501212', '$2y$10$pNvgNRsxqww/zUBW7JNpoOpeQ7owdQNoeRUrNxf/0dxtqs8J9/OQC', '29907012501212', '1', '2018-2019', '123456556', 203, '2018-11-19 11:13:37', '2018-11-19 11:13:37', 0, NULL),
(179, 'عبد الرحمن علي فرغلي هدية', 4, 4, '29809172501172', '$2y$10$KpULxJ71ZwD2p4KMJCWjku64UI6qKp0yC2JOQWZiRPpGVtvd7MolK', '29809172501172', '1', '2018-2019', '123456556', 204, '2018-11-19 11:13:37', '2018-11-19 11:13:37', 0, NULL),
(180, 'عبد الرحمن فرغلي رشوان فرغلى ', 4, 4, '29812232501212', '$2y$10$E7aguiEBh5e3SDkRWeVAIe4Q80tWlbG34Zk5ij2juwStDSvwRD4c.', '29812232501212', '1', '2018-2019', '123456556', 205, '2018-11-19 11:13:37', '2018-11-19 11:13:37', 0, NULL),
(181, 'عزة بهاء الدين محمد مصطفى', 4, 4, '29907062501663', '$2y$10$UVMxxg7TBjo7Htjp5vEYnO9CeC3sigsM5WJ3uDoJkbrDtXFL2NE1C', '29907062501663', '1', '2018-2019', '123456556', 206, '2018-11-19 11:13:37', '2018-11-19 11:13:37', 0, NULL),
(182, 'علي عبد الرحمن احمد عبد الرحمن', 4, 4, '29904202502852', '$2y$10$ctM2SffBKiatBKjmsoDklOvB69QWwB.WttmBefxjWNGQWevOnDVzi', '29904202502852', '1', '2018-2019', '123456556', 207, '2018-11-19 11:13:37', '2018-11-19 11:13:37', 0, NULL),
(183, 'فادى ياسر زكريا فهمى ', 4, 4, '29905182401694', '$2y$10$y8vflIuL2vPTMOhzuHJi0u9DRUVqaFpVwGC3Hl1At...9TZdRrzBO', '29905182401694', '1', '2018-2019', '123456556', 208, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(184, 'فاطمة الزهراء احمد عبدالرحمن على', 4, 4, '29812152500649', '$2y$10$cFsmjVkb3TvGCxWz8HHfJ.YjnhWpOgYgGidcGyfvkChvqrENrlZ0i', '29812152500649', '1', '2018-2019', '123456556', 209, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(185, 'فاطمة الزهراء محمد عباس يوسف ', 4, 4, '29909162501086', '$2y$10$9hykUYlJ0J5BiabpBUyefeJxGrBr6.Efq1YMcNBtQdrYYYBW5rrru', '29909162501086', '1', '2018-2019', '123456556', 210, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(186, 'فكري سيد فكري قرني', 4, 4, '29802082202135', '$2y$10$Oh.nj0UV/lt/K5SQf9S69uuK1oo/90SZKpExvM6MrRiAVWjRf3Kqe', '29802082202135', '1', '2018-2019', '123456556', 211, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(187, 'كيرلس ثروت فؤاد الياس', 4, 4, '29811202700753', '$2y$10$uSJ3zXiDHhNEI.ezB.i0o.iudDh6fpS1PJAqZllDzWqhwyYzDQ1aS', '29811202700753', '1', '2018-2019', '123456556', 212, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(188, 'ماجد ناصر نجيب صالح', 4, 4, '29905022502559', '$2y$10$P8pdLtGJGPsViScuyNWZKOUis1U21smH6mYC0M21Tola25m.HdAzG', '29905022502559', '1', '2018-2019', '123456556', 213, '2018-11-19 11:13:38', '2018-11-19 11:13:38', 0, NULL),
(189, 'مارجو صبري شنوده شحاتة', 4, 4, '29908282500184', '$2y$10$fFK4I.3xJlT7QH3l3eduoun4yV1vrzJKlVJVslDwW.or04lHOhBTK', '29908282500184', '1', '2018-2020', '123456556', 214, '2018-11-19 11:13:39', '2018-11-19 11:13:39', 0, NULL),
(190, 'مارينا اميل بخيت لبيب ', 4, 4, '29809302500544', '$2y$10$Kr3V4Snd65iLuy7laJaEueIqTBSRH1FH7wYvtRCC8VUzD1tXjlkUS', '29809302500544', '1', '2018-2021', '123456556', 215, '2018-11-19 11:13:39', '2018-11-19 11:13:39', 0, NULL),
(191, 'ماريه ابراهيم محمد ابراهيم ', 4, 4, '29810182502589', '$2y$10$xMoJUER/qyw/oqn6Ud/W/uyS5sqayTabAuFEhB/OgPXbJaI3euVLW', '29810182502589', '1', '2018-2022', '123456556', 216, '2018-11-19 11:13:39', '2018-11-19 11:13:39', 0, NULL),
(192, 'ماريو عبد الهادي انور ايوب', 4, 4, '29802222502576', '$2y$10$EiW3HL9UEw46i7MOMZuBeeXtbg.63V92U4Fx5AENZGoCcbEHuNpGG', '29802222502576', '1', '2018-2023', '123456556', 217, '2018-11-19 11:13:39', '2018-11-19 11:13:39', 0, NULL),
(193, 'محمد اشرف سعد زين الدين', 4, 4, '29907122501838', '$2y$10$.V7i/7eEVT7Ou7MKTYEZV.26e2WiJ21Q8EgPrxf4BEZn43CvwebNm', '29907122501838', '1', '2018-2024', '123456556', 218, '2018-11-19 11:13:39', '2018-11-19 11:13:39', 0, NULL),
(194, 'محمد حمدي ضوي محمد', 4, 4, '29805072501613', '$2y$10$3I9L30dT3Cvn8Xg9KJ/BfeUYdpIWeC.R9CERVpOW7c18GJS9Ie8.2', '29805072501613', '1', '2018-2025', '123456556', 219, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(195, 'محمد صابر سيد حافظ', 4, 4, '29804013200239', '$2y$10$Jhuq.kmuIrfkNPcNU1eOzO8wOegG.AafMQ/99WdH8.qI.cWxqUTqO', '29804013200239', '1', '2018-2026', '123456556', 220, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(196, 'محمد عبد الناصر حسن مصطفى', 4, 4, '29905042500358', '$2y$10$Yrv9r5EnpAQpUz5kai1uJ.jvYOumSN99UAttVxOwWbvLUK.cTO9YO', '29905042500358', '1', '2018-2027', '123456556', 221, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(197, 'مرح عثمان علي محمد', 4, 4, '29909092504082', '$2y$10$HdN2yvmgEMqvn1atyBuny.pJK5S/3xm2cPme6uvCeDVIXdt6Rs5fS', '29909092504082', '1', '2018-2028', '123456556', 222, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(198, 'مرنا مدحت شفيق مخائيل', 4, 4, '29811062500244', '$2y$10$k9XGuH8bE0518JOeGjfU1e1PGK1Y7TbArQBFH/hJZ0t3OJi6XxNPq', '29811062500244', '1', '2018-2029', '123456556', 223, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(199, 'مروان محمد ربيع ثايت', 4, 4, '29811282501675', '$2y$10$aUMgViXlkOAFKVWiOzZiX.0MPCMwRLYwzyH9Hel4Z8J1epj6w0oUK', '29811282501675', '1', '2018-2030', '123456556', 224, '2018-11-19 11:13:40', '2018-11-19 11:13:40', 0, NULL),
(200, 'مصطفى فتحي احمد علي', 4, 4, '29902208800593', '$2y$10$kK6k3yfAZeYi0Dupp.mzqualVGd.0faqA2x7/h.OWtp4Vm1GMl/86', '29902208800593', '1', '2018-2031', '123456556', 225, '2018-11-19 11:13:41', '2018-11-19 11:13:41', 0, NULL),
(201, 'مصطفى محمود كامل عثمان', 4, 4, '29907042502175', '$2y$10$q6IXU/YMrRHCkPt4Gdm6l.gdL5R7UKwfBw5LibAndrqRp9lsf0fsa', '29907042502175', '1', '2018-2032', '123456556', 226, '2018-11-19 11:13:41', '2018-11-19 11:13:41', 0, NULL),
(202, 'منال رياض كيلاني فياض', 4, 4, '29803172500425', '$2y$10$wOxvIThmGk/t4X.LEubVY.GhqEz5Me4Bm4GTsGjAekYGvlmb21RP2', '29803172500425', '1', '2018-2033', '123456556', 227, '2018-11-19 11:13:41', '2018-11-19 11:13:41', 0, NULL),
(203, 'منة الله صلاح الدين محمد عبد العزيز ادريس', 4, 4, '29711252500807', '$2y$10$3LFvlG25QykQgsr9rEYcmOzxiIA9nFNdif.LW5MllP/zsjGV6.1Zm', '29711252500807', '1', '2018-2034', '123456556', 228, '2018-11-19 11:13:41', '2018-11-19 11:13:41', 0, NULL),
(204, 'مى مجدى زغلول حمدان ', 4, 4, '29908122600808', '$2y$10$vvZUDWW11ab7vU8YQxX0p.FaL0AzwsiAi.bKwgoyUOInt8KNa55f2', '29908122600808', '1', '2018-2035', '123456556', 229, '2018-11-19 11:13:41', '2018-11-19 11:13:41', 0, NULL),
(205, 'ميرا عادل مكاري زكري', 4, 4, '29809122603361', '$2y$10$yoosJu2.ZseHbb/meI7pj.O28IhJhnyderVPDQzsoGHJtMsAQvVmu', '29809122603361', '1', '2018-2036', '123456556', 230, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(206, 'ميراى ماهر سليمان صموئيل', 4, 4, '29907172502088', '$2y$10$Jh7Fkydr6kgKdU/34..gOOveoj2NzKnAFSY5Xr454jgI33BRc37Tu', '29907172502088', '1', '2018-2037', '123456556', 231, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(207, 'مينا ذكي ارمانيوس حبيب', 4, 4, '29811112500291', '$2y$10$PHdUtc1lCaMltT/extDdquJMlSfV75fCqx3j929evmUrEw.caw96O', '29811112500291', '1', '2018-2038', '123456556', 232, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(208, 'مينا سمير انور جرس ', 4, 4, '29901142401793', '$2y$10$UOVDHf6xTttDQdh7F2Ru.ubLaK9terj6oiMv6b2ti/G6ZzMEr9ZYm', '29901142401793', '1', '2018-2039', '123456556', 233, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(209, 'مينا ماجد رشيد حبيب', 4, 4, '29710312500597', '$2y$10$cQAnXOvTDMmrA4BelV.keuGiu7VaJSvWEhx9/GtB9x22kBccsig6G', '29710312500597', '1', '2018-2040', '123456556', 234, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(210, 'ندى حمدي عبد الرزاق محمد', 4, 4, '29907012615129', '$2y$10$BduDATGJ5MQKK0eWe9J6xeNQcKDhK/ULKOHqypfiIuHYoZiJphcgi', '29907012615129', '1', '2018-2041', '123456556', 235, '2018-11-19 11:13:42', '2018-11-19 11:13:42', 0, NULL),
(211, 'ندى عبد اللطيف شاكر صديق', 4, 4, '29907222500383', '$2y$10$jdtUE.lYWjvzKwB2KcWTROGeIW6O2.fKkUCE5/AfNJRmvPUlZJKGu', '29907222500383', '1', '2018-2042', '123456556', 236, '2018-11-19 11:13:43', '2018-11-19 11:13:43', 0, NULL),
(212, 'ندى ممدوح علي كامل ابراهيم بدارى ', 4, 4, '29906112500128', '$2y$10$t8DK28VFCFInrouOvNuGkuVZNEh8l5RCty9fKyijbuRVEOLGWgrOi', '29906112500128', '1', '2018-2043', '123456556', 237, '2018-11-19 11:13:43', '2018-11-19 11:13:43', 0, NULL),
(213, 'ندى منتصر حسن عبد المجيد', 4, 4, '29909182600706', '$2y$10$CPnBE8mRLKZ/yCkyMlNRMubtSGCWny7JV.qq22MKTCe2PfyKWKIUS', '29909182600706', '1', '2018-2044', '123456556', 238, '2018-11-19 11:13:43', '2018-11-19 11:13:43', 0, NULL),
(214, 'ندى ناصر محمود مصبح', 4, 4, '29905162502087', '$2y$10$CuY6oJwRvQjrunXezQ.pVec/hweybk4AWqKzGb5ML.kQL3d53zwiS', '29905162502087', '1', '2018-2045', '123456556', 239, '2018-11-19 11:13:43', '2018-11-19 11:13:43', 0, NULL),
(215, 'نورهان جمال عبد المنعم محمد العسيلى', 4, 4, '29707240101021', '$2y$10$nXpXD9zxe6ISiJq3n.p54.J9wK6bXhexDa.3.llhM8lhs6TY5goD.', '29707240101021', '1', '2018-2046', '123456556', 240, '2018-11-19 11:13:43', '2018-11-19 11:13:43', 0, NULL),
(216, 'هابى احمد نعمان جلال ', 4, 4, '29806272500383', '$2y$10$w1noFvImm.4f5fB3NwjOOOJEuBCcUyKAk3YvWzrMYx03E6kuW7mnK', '29806272500383', '1', '2018-2047', '123456556', 241, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(217, 'هاجر علي إبراهيم زيدان', 4, 4, '29901092500949', '$2y$10$WCvjlf11AhDFlGfxE7eknez1xmo4weVPsZ8cAPS3XdzpmfyiJgwfe', '29901092500949', '1', '2018-2048', '123456556', 242, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(218, 'هدير ممدوح عبد الفتاح محمد', 4, 4, '29812228800469', '$2y$10$st88pV76ZYFGOdg8NZCJrOFTk/SQpX5LN2wzmQAOKooJ2h9GmD.sq', '29812228800469', '1', '2018-2049', '123456556', 243, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(219, 'همس محمد رجائي محمد', 4, 4, '29810212500047', '$2y$10$o6NingxL3XmCfmbeFauyZugF6dYnFCJa0I5kRzJCfjqN0hbqCYWtm', '29810212500047', '1', '2018-2050', '123456556', 244, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(220, 'هند اكرم احمد عبد المقصود', 4, 4, '29903202400948', '$2y$10$6hc7acHZ27cVJkAU6X/hjupKypUW80BuNZoSewV2/gguE6pu9DxaS', '29903202400948', '1', '2018-2051', '123456556', 245, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(221, 'وئام جمال محمد حسانين', 4, 4, '29908142500966', '$2y$10$ky5qxXbEltxpfrcZ5loKbu5A2HvW4KSlmWNY4ABY22ksv2lpHARRy', '29908142500966', '1', '2018-2052', '123456556', 246, '2018-11-19 11:13:44', '2018-11-19 11:13:44', 0, NULL),
(222, 'ياسمين محسن محمد حلمي راغب ', 4, 4, '29907192500103', '$2y$10$OwvJ2p7Nn9yZaGx7nHUvMeqeWKhAc2fGydASSkcTlhrPyv59yj8W.', '29907192500103', '1', '2018-2053', '123456556', 247, '2018-11-19 11:13:45', '2018-11-19 11:13:45', 0, NULL),
(223, 'يمنى محمد سيد احمد', 4, 4, '29905082600924', '$2y$10$Oz3b7tplO.qwwP/eUpIs.O4sYaL0M.loWYtgkZjzrpm.sf2am7s5S', '29905082600924', '1', '2018-2054', '123456556', 248, '2018-11-19 11:13:45', '2018-11-19 11:13:45', 0, NULL),
(224, 'يوستينا سمير مرزوق زخاري', 4, 4, '29802012622625', '$2y$10$7nMBUahYEHFNoJ9at7/EVe9zbtV4YIQUK/eZ//tJvWUQhZjg.Lw72', '29802012622625', '1', '2018-2055', '123456556', 249, '2018-11-19 11:13:45', '2018-11-19 11:13:45', 0, NULL),
(225, 'ابانوب رائف نظمى ميخائيل سيف', 4, 4, '29809020201056', '$2y$10$3AhEoztVY1ZTU5PXzs0uQeDRNRX3gQsQTHoBxnia4NogXOzXSgeIu', '29809020201056', '1', '2018-2019', '123456556', 250, '2018-11-22 05:01:36', '2018-11-22 05:01:36', 0, NULL),
(226, 'ابانوب زكريا لبيب نص', 4, 4, '29909182502038', '$2y$10$slJFNJL8YIg8QGEXV1rJceyZDbupsfj7YZv6lq6CBHNSXlhymRNuC', '29909182502038', '1', '2018-2019', '123456556', 251, '2018-11-22 05:01:37', '2018-11-22 05:01:37', 0, NULL),
(227, 'ابانوب موسى عبده ابراهيم', 4, 4, '29902202500776', '$2y$10$JWEmC6Iz2h1eCMzgSeGHReSQCFt9dSZcaejaeGZX/FwvvgnBZdlWC', '29902202500776', '1', '2018-2019', '123456556', 252, '2018-11-22 05:01:37', '2018-11-22 05:01:37', 0, NULL),
(228, 'ابراهيم احمد عبد الرحيم احمد', 4, 4, '29908162600932', '$2y$10$8jml3nVdQwqzT7E2CchyVOyma0HVGUyY4F78UzHV35qEYh2/DKtyW', '29908162600932', '1', '2018-2019', '123456556', 253, '2018-11-22 05:01:37', '2018-11-22 05:01:37', 0, NULL),
(229, 'ابراهيم ايمن مفلاح دمرداش', 4, 4, '29905308800174', '$2y$10$riwEwmpGlt1tyV.PVh.tj.hSqsPiLCDDTJZ/tSiKG0woP625CGC1K', '29905308800174', '1', '2018-2019', '123456556', 254, '2018-11-22 05:01:37', '2018-11-22 05:01:37', 0, NULL),
(230, 'ابراهيم محمد ابراهيم ثابت', 4, 4, '29907032502592', '$2y$10$RSVoEmvmf0GIjZFyqW9Nfeon7IvlPfqGFwmnMiXwYuHj0hi4K4cu.', '29907032502592', '1', '2018-2019', '123456556', 255, '2018-11-22 05:01:37', '2018-11-22 05:01:37', 0, NULL),
(231, 'ابراهيم محمد احمد احمد', 4, 4, '29801272601056', '$2y$10$piLBAmrSaTHGbNUPparL1.9YhXOHTC5UoF7fJAkyxBXfQdlZyJEZ2', '29801272601056', '1', '2018-2019', '123456556', 256, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(232, 'احسان احمد محمد عبد الباقى', 4, 4, '29909182501503', '$2y$10$4Wd9LyvF7GaQ7y5lLjXf9e0LTAGu0pCxDZ6EaB4z4YBcz/PrA8.oO', '29909182501503', '1', '2018-2019', '123456556', 257, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(233, 'احمد ابو الغيط السيد عليان', 4, 4, '29811192602138', '$2y$10$3nP0.F6MDfxuanNqxjlkeuEjVYAWtH34PPXIQIe0o29qOJmHddLEy', '29811192602138', '1', '2018-2019', '123456556', 258, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(234, 'احمد الضوى عبدالرحيم احمد', 4, 4, '29806202700571', '$2y$10$9zRxeMqzLoI8sKfhQ0LyMef.yyeIy4cQMVrgTfrv9mLsZ60xXdYmK', '29806202700571', '1', '2018-2019', '123456556', 259, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(235, 'احمد حسام محفوظ حسن', 4, 4, '29904072500356', '$2y$10$UB.3wFR8fdn11uRPZqTGHuHEhoXfm64A.RLXBLWLXsQeb8VBfafKy', '29904072500356', '1', '2018-2019', '123456556', 260, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(236, 'احمد خالد حلمى زهرى', 4, 4, '29907042501616', '$2y$10$oNs9Yw21KZX44Lqs3QfSLOZiidvudsbbG/f0wx4yAfkOdM4gw/naO', '29907042501616', '1', '2018-2019', '123456556', 261, '2018-11-22 05:01:38', '2018-11-22 05:01:38', 0, NULL),
(237, 'احمد سامح سيد عبد الرحيم', 4, 4, '29812122500555', '$2y$10$HuCrN0TkK6igvHj5v2wzfeE5hKZ1768xY3eYfRA1Bxt7qIjyiG.pG', '29812122500555', '1', '2018-2019', '123456556', 262, '2018-11-22 05:01:39', '2018-11-22 05:01:39', 0, NULL),
(238, 'احمد سعد احمد مرسى', 4, 4, '29907192500057', '$2y$10$lUnMFCJC.kOsZ2Q4XMbI.O0I5iNRaIDicfKlhwMoMZ7/5fhDCQqFq', '29907192500057', '1', '2018-2019', '123456556', 263, '2018-11-22 05:01:39', '2018-11-22 05:01:39', 0, NULL),
(239, 'احمد سعيد سليم محمد', 4, 4, '29509302705959', '$2y$10$MeHCMGhr2VZjnVmApGQz7eII0gETKF8C1pnd9LY8lsMBADvWgtz8W', '29509302705959', '1', '2018-2019', '123456556', 264, '2018-11-22 05:01:39', '2018-11-22 05:01:39', 0, NULL),
(240, 'احمد سعيد سيد ابراهيم', 4, 4, '29903152501438', '$2y$10$FE9zQOwap2EBDH3CWHY9s.eUAHyfkPn2.zAlvO1W.Pcl8is/04t1i', '29903152501438', '1', '2018-2019', '123456556', 265, '2018-11-22 05:01:39', '2018-11-22 05:01:39', 0, NULL),
(241, 'احمد عبد الحميد على عبد الجواد', 4, 4, '29902182601392', '$2y$10$G.TKec2ljPFSJvNRatt4bOXONWRBJvr1ilMQokeos/dQCqYe.lD5u', '29902182601392', '1', '2018-2019', '123456556', 266, '2018-11-22 05:01:39', '2018-11-22 05:01:39', 0, NULL),
(242, 'احمد عبدالعال شحاته عبدالعال', 4, 4, '29810152501057', '$2y$10$1PmqKRsPG4rgXQPCVRUWle7Hr5v/QgitY.mPcDW8cK5yn0mj5yTbO', '29810152501057', '1', '2018-2019', '123456556', 267, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(243, 'احمد كمال محمد عثمان', 4, 4, '29911012501295', '$2y$10$Fmh64Y3vAAl.5HnUfGG1E.ZPCKRz9ictI.3N.dT9wfRuF9Vtz.pDS', '29911012501295', '1', '2018-2019', '123456556', 268, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(244, 'احمد محمد عثمان ابو العلا', 4, 4, '29909220103231', '$2y$10$sr5aWNu1rIcxg5YaZGoAmOB0up1Ybrhw130P4AHitJYFI4S3sfosC', '29909220103231', '1', '2018-2019', '123456556', 269, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(245, 'احمد محمد محمد ربيع محمد', 4, 4, '29806242501393', '$2y$10$/eZarAx6WnmJPEtHKwnbA.i0g.WV36HsbEoeyKupckMzYOdpURnU.', '29806242501393', '1', '2018-2019', '123456556', 270, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(246, 'احمد محمد نبيل على مصطفى', 4, 4, '29908232500213', '$2y$10$.Q6wRi.w9UzvRx.xeSwgbOMIiADsf47qd7u7BL5APZpWypxSao5jC', '29908232500213', '1', '2018-2019', '123456556', 271, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(247, 'احمد محمود حسن محمود', 4, 4, '29906052500956', '$2y$10$YR6DZ1RWqrX2TZJQga2YGOUTytoy9GJqfp87Pw7pMOcPquoOCntqO', '29906052500956', '1', '2018-2019', '123456556', 272, '2018-11-22 05:01:40', '2018-11-22 05:01:40', 0, NULL),
(248, 'احمد محمود سيد ابراهيم', 4, 4, '29808092500051', '$2y$10$atPNdR4ivbE/jbgcVpHstutIFQiGO3bSrSGNoB3pAQbgW90mMkQzG', '29808092500051', '1', '2018-2019', '123456556', 273, '2018-11-22 05:01:41', '2018-11-22 05:01:41', 0, NULL),
(249, 'احمد محمود مصطفى ثابت', 4, 4, '29901022501255', '$2y$10$W.VrOBKxVTB3IFScyeOvwOquW89HD0hqdeauO6u170I.Y2BFVolJ2', '29901022501255', '1', '2018-2019', '123456556', 274, '2018-11-22 05:01:41', '2018-11-22 05:01:41', 0, NULL),
(250, 'احمد مصطفى كامل صديق', 4, 4, '29903252502938', '$2y$10$BCubkYUWrZ637eWolDslIOKhZs9CA3RHoPtsS44n1fpyY0n1KuV56', '29903252502938', '1', '2018-2019', '123456556', 275, '2018-11-22 05:01:41', '2018-11-22 05:01:41', 0, NULL),
(251, 'احمد مظهر محمد حسانين', 4, 4, '29907072502072', '$2y$10$5w.pc7VS1bq26VAHz/bWYOL.K6B6BFZSnXq3lTv9/YQlKsm19wFOi', '29907072502072', '1', '2018-2019', '123456556', 276, '2018-11-22 05:01:41', '2018-11-22 05:01:41', 0, NULL),
(252, 'احمد مكرم عبدالباقى عبدالرحمن', 4, 4, '29810182702171', '$2y$10$MB5DHlHJsD3T7GRHbJ9lj.h9ytcZK.QNTCOIvDjT8tGySu.ZyHt8K', '29810182702171', '1', '2018-2019', '123456556', 277, '2018-11-22 05:01:41', '2018-11-22 05:01:41', 0, NULL),
(253, 'اسلام طه عبد الرحيم سيد', 4, 4, '29903292500075', '$2y$10$Of9mlZ7r40QK2z3DVL4pS.16NOHgmyJUcaDiZMfC3R40Emyu0g1la', '29903292500075', '1', '2018-2019', '123456556', 278, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(254, 'اسماء رمضان محمود مرسى‏', 4, 4, '29807052500184', '$2y$10$hueUCqx5ItsUTok3z1Biwu.JJWXb8RT/FItQpuy7ShR.1pApiSrBe', '29807052500184', '1', '2018-2019', '123456556', 279, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(255, 'اسماء صديق سليمان داود', 4, 4, '29909112500887', '$2y$10$xecouSx8I.SFUTEZFgp3sOGIOwsD9jfeHW5KvPWktOWwhrsPnnYgq', '29909112500887', '1', '2018-2019', '123456556', 280, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(256, 'الاء عادل محمد محمود', 4, 4, '29808162500089', '$2y$10$BwF6xDHA6q/9THzAt8N1UevpuRh3ndMJ/VJcSlKeplcCqFoYfEh16', '29808162500089', '1', '2018-2019', '123456556', 281, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(257, 'الزهراء يوسف محمد فولي', 4, 4, '29905208801041', '$2y$10$nQwyS/182RUNfhZTH2kK4OzWST13jbzIaz8Hzdu830cqetbFUS7QG', '29905208801041', '1', '2018-2019', '123456556', 282, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(258, 'امجد ضيف فرند ضيف', 4, 4, '29812052500234', '$2y$10$8jWNHuJvn5EViCS9aUeACu2EZPg7LaxVL2XXjx4FMYazRHb6EQKZy', '29812052500234', '1', '2018-2019', '123456556', 283, '2018-11-22 05:01:42', '2018-11-22 05:01:42', 0, NULL),
(259, 'امل عبد اللطيف عبد الكريم محمد', 4, 4, '29806132500324', '$2y$10$bGihnpJFMsr/HDq9SeuISO5UqWWM.uUBcwYUX1XNrIEwRuDshtf3q', '29806132500324', '1', '2018-2019', '123456556', 284, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(260, 'امير عبد الفتاح حسن محمد', 4, 4, '29901012725139', '$2y$10$0zbP.uG4OW/B0Sr.5nSgfOVXUdVn7Tm.c49jRXr38.S7pXnI74kdm', '29901012725139', '1', '2018-2019', '123456556', 285, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(261, 'امير كريم كامل جرجس', 4, 4, '29907172503971', '$2y$10$UVCjW.fGDa.ZCAuHOTi/FO4H66Mf0kPcBBQXUGwr8rEB.ToTv1v4.', '29907172503971', '1', '2018-2019', '123456556', 286, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(262, 'اميره محمود عيد عبد الناصر', 4, 4, '29904112501687', '$2y$10$0IP2Ck13iQYB/lcvJs202eOyeQZtymqsL/TqsJUP2m4zmSnf1u4w2', '29904112501687', '1', '2018-2019', '123456556', 287, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(263, 'اندرو ميلاد داود حنا', 4, 4, '29806172500238', '$2y$10$vL60rdjKiDysZS8GmZ1oEebM7QPbBlCOaCjVEWG2DnkJNRCqGlAmC', '29806172500238', '1', '2018-2019', '123456556', 288, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(264, 'انس محمد سيد احمد', 4, 4, '29901012516653', '$2y$10$y8MFYxVhlJJ9em3J0l5gYu4GU4ak5IC5t5ZEWqBlGo92wuP5IsZsG', '29901012516653', '1', '2018-2019', '123456556', 289, '2018-11-22 05:01:43', '2018-11-22 05:01:43', 0, NULL),
(265, 'ايمن طارق احمد محمد', 4, 4, '29906122800278', '$2y$10$lKtN/GLEyUW0H2L1zROvY.1fWtgDB2JejEIYbSnCvDXn4V5kvcfDq', '29906122800278', '1', '2018-2019', '123456556', 290, '2018-11-22 05:01:44', '2018-11-22 05:01:44', 0, NULL),
(266, 'ايه نبيل هلباوى محمد', 4, 4, '29902132500269', '$2y$10$ieSna7Y82XWWL2/ZCfO7qe3maWYzvnQftrJDxMtSrL3BAEE9I.Zu6', '29902132500269', '1', '2018-2019', '123456556', 291, '2018-11-22 05:01:44', '2018-11-22 05:01:44', 0, NULL),
(267, 'بلال احمد محمد عبد القادر', 4, 4, '30001012518154', '$2y$10$Wtmc3aRz9M0CbDcPTQUwlOnla19JJtAZS.t6T6Pw/wDfUzjUFq7/6', '30001012518154', '1', '2018-2019', '123456556', 292, '2018-11-22 05:01:44', '2018-11-22 05:01:44', 0, NULL),
(268, 'بيشوى باسم صدقى عزيز', 4, 4, '30001072500971', '$2y$10$RX5cwU4IZzO5aYIlT1HPEufgRQL19s3lPkZ0R7h9Spy8pIQSDW.IG', '30001072500971', '1', '2018-2019', '123456556', 293, '2018-11-22 05:01:44', '2018-11-22 05:01:44', 0, NULL),
(269, 'بيشوى جمال حلمى ايوب', 4, 4, '29906012505211', '$2y$10$kyMVY.AyFv.Zopg8AkjB0.zZNCJsE1XDXyOhNkUQYY/vnhhCgwRhW', '29906012505211', '1', '2018-2019', '123456556', 294, '2018-11-22 05:01:44', '2018-11-22 05:01:44', 0, NULL),
(270, 'تاوضروس جمال انور نمر', 4, 4, '29909242501397', '$2y$10$SpfC/yEhfu1zgvlSScNBxuF/cncan.Me6o76cf7CWNywtKldBALgm', '29909242501397', '1', '2018-2019', '123456556', 295, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(271, 'جاكلين سلامه مرزوق بباوى', 4, 4, '29907042602285', '$2y$10$Ou0/C6IRm2H4zQp3Y0ccHucA70ffbqdNAk/PQptNNRIXXU747k8pC', '29907042602285', '1', '2018-2019', '123456556', 296, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(272, 'جرجس موسى نصر الله عطا الله', 4, 4, '29805062501372', '$2y$10$FGyO.762UQy3LKY7TQuxBeKW6e949j.J4wbgHTkr5q7WWJ35RRUTC', '29805062501372', '1', '2018-2019', '123456556', 297, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(273, 'جورج علاء نبيل فهمى', 4, 4, '29907122500319', '$2y$10$7z88Sh6/mrASMTlJ1f9CouHvLhERZUUtI2esnPBsWfYW7es0DC2ES', '29907122500319', '1', '2018-2019', '123456556', 298, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(274, 'حازم اكرم عبد المطلب ابو المجد', 4, 4, '29904150200933', '$2y$10$yUr7Dj15N53CKCry8Sv0teTPLepgJ3CyZOo5Lhin7tD3m1f9OPaGK', '29904150200933', '1', '2018-2019', '123456556', 299, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(275, 'حسام احمد ثابت ابو رحاب', 4, 4, '29810162500393', '$2y$10$Vxd4ig0g.3ekaLqHQAQkreVwQRybu65tH6wGz3/4Pb5Br4zkV547S', '29810162500393', '1', '2018-2019', '123456556', 300, '2018-11-22 05:01:45', '2018-11-22 05:01:45', 0, NULL),
(276, 'حسام الدين محمد عثمان بركات', 4, 4, '29906252500616', '$2y$10$veKqC6L19yXSNHJ326Nr7ubox1oOR3no2cozMiVPsT3Nm4lTSVLcW', '29906252500616', '1', '2018-2019', '123456556', 301, '2018-11-22 05:01:46', '2018-11-22 05:01:46', 0, NULL),
(277, 'حسام عبد الحكيم سعيد عرابي', 4, 4, '29905262701494', '$2y$10$4mJW1eiZLmzt3B4rl/Is8.pXeX0hDc.K4SJSdg8b.ebfwAw/tzcUy', '29905262701494', '1', '2018-2019', '123456556', 302, '2018-11-22 05:01:46', '2018-11-22 05:01:46', 0, NULL),
(278, 'حسام محمود فتحى محمد', 4, 4, '29904102500437', '$2y$10$FixYuPA1iI66CQHBDj1LUebQwpnZTfePz2K/5PQ1ABJCkcKLLuwYq', '29904102500437', '1', '2018-2019', '123456556', 303, '2018-11-22 05:01:46', '2018-11-22 05:01:46', 0, NULL),
(279, 'حسن عبد السميع احمد حسن', 4, 4, '29901252603731', '$2y$10$9JRrVXjx8m7suTRgDjDflOT36XXB60Y5uXHxbrFpq.2hstbu0Ve8m', '29901252603731', '1', '2018-2019', '123456556', 304, '2018-11-22 05:01:46', '2018-11-22 05:01:46', 0, NULL),
(280, 'حسين كمال محمد عبد العال', 4, 4, '29711252503318', '$2y$10$NakcbjUGO9qAelDsH4v1uulZ80SIRKeO6DSfIAPZsfYC3DHkz1CHO', '29711252503318', '1', '2018-2019', '123456556', 305, '2018-11-22 05:01:46', '2018-11-22 05:01:46', 0, NULL),
(281, 'حماده البثيونى لطفى عبدالخالق', 4, 4, '29708132601455', '$2y$10$A6fwv3gpfShIGs9yF7Z6ZO.SaovOb0FEFNYLSNkxfga3/WY8Kkyy2', '29708132601455', '1', '2018-2019', '123456556', 306, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(282, 'خالد على حسن خالد', 4, 4, '29907142502377', '$2y$10$6wXb8OyZZlBFePer1F9SNODFuEwNrrkVHEZPqwZuwH6dem06fdAwi', '29907142502377', '1', '2018-2019', '123456556', 307, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(283, 'خلود رجاء عبد الحافظ هريدي', 4, 4, '30002012503366', '$2y$10$8yaAib0PGpokQo7B3Z9PCetTuaIJ1BlfHLRGETybe55h3G4c0RZFO', '30002012503366', '1', '2018-2019', '123456556', 308, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(284, 'دعاء محمود حسن طه', 4, 4, '29905032702645', '$2y$10$oqSyZcEJS.nL79yyCB2BduhlPln5Qww0M9pwcpM48BopmndVZCWoO', '29905032702645', '1', '2018-2019', '123456556', 309, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(285, 'رشا حمزه احمد سيد', 4, 4, '29906262501262', '$2y$10$yCh2UGXon.8yQ18PYA.LpO5YaOPRWbVjrdChoBGn5wxdiChqAUxuK', '29906262501262', '1', '2018-2019', '123456556', 310, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(286, 'رشدى زاهر عبد النبى منصور ضاهر', 4, 4, '29902182502378', '$2y$10$zdvn4GgCt6APJMSZfSvwL.V0WrsAExTUu1XdPKoHqZT9vXUKVoEf6', '29902182502378', '1', '2018-2019', '123456556', 311, '2018-11-22 05:01:47', '2018-11-22 05:01:47', 0, NULL),
(287, 'رنا عصام الدين محمد على', 4, 4, '29903172502201', '$2y$10$REIudR1XZKoLuuU/ZkTDP.E5RV/lnUb18MbMIeEW3mZkEOLOQ/X4G', '29903172502201', '1', '2018-2019', '123456556', 312, '2018-11-22 05:01:48', '2018-11-22 05:01:48', 0, NULL),
(288, 'زلفى جاد النزهى السيد', 4, 4, '29912052601906', '$2y$10$X3935NI4oJ8FDmIj380//uzBiCeYYlwPEVyqgRA1ARXjuD8bwttgW', '29912052601906', '1', '2018-2019', '123456556', 313, '2018-11-22 05:01:48', '2018-11-22 05:01:48', 0, NULL),
(289, 'ساره اكرم انور حليم', 4, 4, '29810142500249', '$2y$10$YTjbwf1lQkhq0lE.PHZ6aed727lmWJ8S2d2thlIOCmxzi.cspan3C', '29810142500249', '1', '2018-2019', '123456556', 314, '2018-11-22 05:01:48', '2018-11-22 05:01:48', 0, NULL),
(290, 'ساره غازى عبد العزيز عبد الحكيم', 4, 4, '29904012503569', '$2y$10$ZTYlQXWmz/bNHARhIVXzz.ybmY8DTFML0YoRJjbc4iHgv7m/h0D7i', '29904012503569', '1', '2018-2019', '123456556', 315, '2018-11-22 05:01:48', '2018-11-22 05:01:48', 0, NULL),
(291, 'ساره ممدوح زين محمد', 4, 4, '29904012508242', '$2y$10$4vACPG.lwZ5tHWPgT.WU4ekQ1F8wQNM5Mnj02okBjGaAd0FHmn.9K', '29904012508242', '1', '2018-2019', '123456556', 316, '2018-11-22 05:01:48', '2018-11-22 05:01:48', 0, NULL),
(292, 'ساره نصرت حكيم عطا الله', 4, 4, '29901012514383', '$2y$10$3mJfYEeIIUew5Uia7dAcl.TxWPVB3izyq4aY1ifCr93ND5tYpJm/K', '29901012514383', '1', '2018-2019', '123456556', 317, '2018-11-22 05:01:49', '2018-11-22 05:01:49', 0, NULL),
(293, 'ساميه عبد النبى احمد محمد', 4, 4, '29711112702868', '$2y$10$1hrSApcPE.3CQruaGkV8OeAMSjdW9OXU2AHo184ifIvbTcP2tHXam', '29711112702868', '1', '2018-2019', '123456556', 318, '2018-11-22 05:01:49', '2018-11-22 05:01:49', 0, NULL),
(294, 'ساندى ماجد شاكر سعيد', 4, 4, '29909102502741', '$2y$10$JtBd72wXHQsKprNwDTv0feUd9Sd6Grh6CMPvcirL37vGNhHGDobcy', '29909102502741', '1', '2018-2019', '123456556', 319, '2018-11-22 05:01:49', '2018-11-22 05:01:49', 0, NULL),
(295, 'سحر صلاح احمد الديهى', 4, 4, '29903091501006', '$2y$10$Qd8ov10ys0fx.oKEZ4cgO.qYvRU8N.4vRn2xR0aW/gLYLWpQJ92Am', '29903091501006', '1', '2018-2019', '123456556', 320, '2018-11-22 05:01:49', '2018-11-22 05:01:49', 0, NULL),
(296, 'سلمى السيد سليمان محمد', 4, 4, '29904123100102', '$2y$10$QWLp44lssBOpqJTEs2fdG.Sjc3Qffbl7IhjrlqC7T4X6l21AjU6XW', '29904123100102', '1', '2018-2019', '123456556', 321, '2018-11-22 05:01:49', '2018-11-22 05:01:49', 0, NULL),
(297, 'نجلاء عبد الكريم السيد السيد', 4, 4, '29811252603422', '$2y$10$i0NIFnKIOHxXdW45EGaULO3S5mSlUlKflJ/RW1ppJOAOp/O5QrtAi', '29811252603422', '1', '2018-2019', '123456556', 324, '2018-11-29 08:41:50', '2018-11-29 08:41:50', 0, NULL),
(298, 'ندا جلال قاضي عمر', 4, 4, '29906192700149', '$2y$10$1ZaCqjoKXeFnKqxZquHkqOXqNKKCbSmhR/jmp6Zcrq7CJ3R9XcO/.', '29906192700149', '1', '2018-2019', '123456556', 325, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL),
(299, 'نرمين هابيل عبد اللاه عبد الله', 4, 4, '29902272601146', '$2y$10$X7WTMaVHL6ufp23ggaur9OWTtOu5L0vmQZXpN1BsHguMofZ7ai55.', '29902272601146', '1', '2018-2019', '123456556', 326, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL),
(300, 'نور الهدى نيازى مصطفى نيازى', 4, 4, '29807072500946', '$2y$10$hoXQxE8J.hFpBl6Q5iljgua.2v2NslnDdwrZB.CSepn08wrKAm6/a', '29807072500946', '1', '2018-2019', '123456556', 327, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL),
(301, 'نورهان توفيق عبد العظيم توفيق', 4, 4, '29909102500722', '$2y$10$zGf4z2Xon2kdI9B9w43yKeJ4FKoP4tzGNPsj91uHMbFu0zKR7ayg.', '29909102500722', '1', '2018-2019', '123456556', 328, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL);
INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(302, 'هدير اسامه فرج صديق', 4, 4, '29909012507604', '$2y$10$ZdqgbEvob0UsDnBWeGQpl.PlhcLTx7aZM6AtssdqRZF1.Ncjd72yy', '29909012507604', '1', '2018-2019', '123456556', 329, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL),
(303, 'هشام محمد محمد خلاف', 4, 4, '29907192502599', '$2y$10$qL2pctn6LMRDciNyK2u6lu88kWWdS8SPO3n6HYDkW52fexuIANr0W', '29907192502599', '1', '2018-2019', '123456556', 330, '2018-11-29 08:41:51', '2018-11-29 08:41:51', 0, NULL),
(304, 'هشام مصطفى حسن حسين', 4, 4, '29811122503418', '$2y$10$ob0fp4GNB4KZvIk5t07vauQAoz.V8L4EGSRIgjMy08bWDB5gk1j2y', '29811122503418', '1', '2018-2019', '123456556', 331, '2018-11-29 08:41:52', '2018-11-29 08:41:52', 0, NULL),
(305, 'همت محمد مفتى احمد', 4, 4, '29909092500621', '$2y$10$vPcPrE9C8qGIHQshYoOO5.tAR/5FhsiiAbNShFVIrJq.IFWSe2cB2', '29909092500621', '1', '2018-2019', '123456556', 332, '2018-11-29 08:41:52', '2018-11-29 08:41:52', 0, NULL),
(306, 'هيثم اسعد عز الدين عبد الراضى', 4, 4, '29902152602173', '$2y$10$WEHp4OpamQweV7Y3pagO4.WYyheowqyG4yZAoE/q.q2nP517nVHOO', '29902152602173', '1', '2018-2019', '123456556', 333, '2018-11-29 08:41:52', '2018-11-29 08:41:52', 0, NULL),
(307, 'هيسم محمد ابو العز عبد السلام', 4, 4, '29809202606736', '$2y$10$kwXt849ejRQdG6ONjXzjk.phU2CXPMqrT73/yKUIvWYH75M48alQK', '29809202606736', '1', '2018-2019', '123456556', 334, '2018-11-29 08:41:52', '2018-11-29 08:41:52', 0, NULL),
(308, 'وليد احمد مصطفى عطيه', 4, 4, '29803162501971', '$2y$10$r.QkiXtFL5775HsHL5eEPe91Z6nUIgJj3vxH.oCAyQBp85j5t9QZi', '29803162501971', '1', '2018-2019', '123456556', 335, '2018-11-29 08:41:52', '2018-11-29 08:41:52', 0, NULL),
(309, 'وليد صلاح الدين جاحر عدلى', 4, 4, '29811072503179', '$2y$10$h8XclKZlXnA9tRYk.IpsxeKTAodjNWY4DvAaEDukGteXYhgpEKp3y', '29811072503179', '1', '2018-2019', '123456556', 336, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(310, 'وليد عبد الله زيدان عبيد', 4, 4, '29905042800254', '$2y$10$t.e42zSph79udbxWpZ87ueX24pE.MB2jZSo0xvpDZDtiMRdPlYG.y', '29905042800254', '1', '2018-2019', '123456556', 337, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(311, 'وليد ممدوح فتوح قاسم', 4, 4, '29907012507156', '$2y$10$TasHZSXHvfJ3VG5RwkySMuLFM9ppyq3bvbQU3CajL7vH8stHWpMkq', '29907012507156', '1', '2018-2019', '123456556', 338, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(312, 'يحى زكريا سيد محمد', 4, 4, '29809252500696', '$2y$10$DE98t4jjjzIXf9Quqr9ueOTL8TLzdj170TZPbS3H9QFgN2MNGOUl6', '29809252500696', '1', '2018-2019', '123456556', 339, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(313, 'يونس صلاح يونس عبد الوارث', 4, 4, '29904252500893', '$2y$10$566HHlDudXeLqgfCvtQhE.RPJ8Adrbgv.mWq1hdn4tfjMxl3laLYW', '29904252500893', '1', '2018-2019', '123456556', 340, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(314, 'عبد الرحمن خليفة', 4, 4, '29902072500737', '$2y$10$YGavUHV8l7k7RvizZR7KWuwnnWNAuBOINDZ0QiNVI22.Gqtv/wLV.', '29902072500737', '1', '2018-2019', '123456556', 341, '2018-11-29 08:41:53', '2018-11-29 08:41:53', 0, NULL),
(315, 'اسلام محمد امير محمد', 4, 4, '29811122601479', '$2y$10$QigtT8U.sc4Wk.NBi0gDEerJFyShxRFGbn96MPG2hMy0HxOsHnx.a', '29811122601479', '1', '2018-2019', '123456556', 342, '2018-11-29 08:41:54', '2018-11-29 08:41:54', 0, NULL),
(316, 'احمد بخيت محمد بخيت', 4, 4, '29806122500211', '$2y$10$C.JXro.ObQoKKfGrOz4C2.8eOd5bLJg4LaUkyOvk.oW.QL3oR9KFG', '29806122500211', '1', '2017-18', '123456556', 343, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(317, 'احمد شريف احمد حسين', 4, 4, '29702252502451', '$2y$10$nRIPTy1OhHqvBcFqKh8FH.8kYshcMRGTmAfZRLWeARN1ab2Pfdhz2', '29702252502451', '1', '2017-18', '123456556', 344, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(318, 'احمد عصام الدين يونس احمد', 4, 4, '29612102504491', '$2y$10$abZJ32ork2QgSVVe0m4zmuJjDj6.vvNqoIGL6QaMn3qYMGJePaFIW', '29612102504491', '1', '2017-18', '123456556', 345, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(319, 'احمد محمد حسين محمد', 4, 4, '29701142500211', '$2y$10$JCyhZzL2kNQxwDfG5/VfkutYfrQZJmkMwYH7YzbeVE31JPtu49To2', '29701142500211', '1', '2017-18', '123456556', 346, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(320, 'احمد محمد عبد السلام عمر', 4, 4, '29801202504771', '$2y$10$wD17KjGyQ/m3A0S1.9bg..WGy14daKIGO0hdigK2iXLznlFCIKu0i', '29801202504771', '1', '2017-18', '123456556', 347, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(321, 'اسلام اسماعيل الصادق اسماعيل', 4, 4, '29808022700479', '$2y$10$miWd7WQpJ5KSrgnhtYdva.08kcOBhoMrQf7hmjf2Ey7ptYi7HWDii', '29808022700479', '1', '2017-18', '123456556', 348, '2018-12-03 11:53:35', '2018-12-03 11:53:35', 0, NULL),
(322, 'ايرينى موسى رزق الله بشاي', 4, 4, '29703012501781', '$2y$10$yqa/ajUvLzNtvlWuFF8wxe0bm1h6u3KZa/M6xGM5kHL1tj4i/m5UO', '29703012501781', '1', '2017-18', '123456556', 349, '2018-12-03 11:53:36', '2018-12-03 11:53:36', 0, NULL),
(323, 'حسام حسن فاروق حسن', 4, 4, '29803252501732', '$2y$10$Ge20ooWwWb.XNV3zSy/KCOEhVBLL/BUUbBGlDoTQ847s2DhR2mkMW', '29803252501732', '1', '2017-18', '123456556', 350, '2018-12-03 11:53:36', '2018-12-03 11:53:36', 0, NULL),
(324, 'ساره انور حنا شلبى', 4, 4, '29801272500748', '$2y$10$UkrtN2pbBE14.e623eGzzudMziLbQvyrQLGgbO3J2jKRVXeJRDqYS', '29801272500748', '1', '2017-18', '123456556', 351, '2018-12-03 11:53:36', '2018-12-03 11:53:36', 0, NULL),
(325, 'سليمان احمد محمد على', 4, 4, '29803162502535', '$2y$10$CEHUMJFFqxEv2Ik12OAIS.GtmKRDkUVIS9Ibu4cdwTVU2meSSFWEu', '29803162502535', '1', '2017-18', '123456556', 352, '2018-12-03 11:53:36', '2018-12-03 11:53:36', 0, NULL),
(326, 'صفيه ابراهيم ابو ضيف عبد اللاه', 4, 4, '29604232600405', '$2y$10$5An0P1FgR8HvKP/ZsnJI8uz7gNWQbyg5QI9m6ISly5sqaCePTZIt2', '29604232600405', '1', '2017-18', '123456556', 353, '2018-12-03 11:53:36', '2018-12-03 11:53:36', 0, NULL),
(327, 'صفيه خالد سيد احمد', 4, 4, '29807162502387', '$2y$10$UZcI.N9hMPZxeJXzE8WIVeXcqTT9apjPnrDuVLxlNob7EZUi2RmW2', '29807162502387', '1', '2017-18', '123456556', 354, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(328, 'عبد الله محمد طلعت محمد', 4, 4, '29702102502039', '$2y$10$0l0RoWHX21EPcHxMvkfCIetCwM3gYDxlJHgKEr5pUfsM5gvlrRFMe', '29702102502039', '1', '2017-18', '123456556', 355, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(329, 'محمد اشرف فرج صالح', 4, 4, '29805292500171', '$2y$10$/9piJqGGnfGzvPYue3qha.D5unA5U4JZgZ34xp9i5kYRooOyvycZe', '29805292500171', '1', '2017-18', '123456556', 356, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(330, 'محمد راضي عبد القادر محمد', 4, 4, '29809252600631', '$2y$10$HOY8LYfBKzS4vCbXUYMLTOpZL6.ow7zgTgV1c/wkmsY2/.60JYlNa', '29809252600631', '1', '2017-18', '123456556', 357, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(331, 'محمد علاء مصطفى محمد', 4, 4, '29904012601137', '$2y$10$1YiIYEdc90AWINWj1AfOW.aiklgqL3HeoSQ8tahyHaAhAjtT.MUWC', '29904012601137', '1', '2017-18', '123456556', 358, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(332, 'محمد على عاشور على', 4, 4, '29700062500751', '$2y$10$KEfKrNYnA6m1eNPjEGQx4.IjaeJ5DdcPPC0Dk9pmGc4bpVamhfPa.', '29700062500751', '1', '2017-18', '123456556', 359, '2018-12-03 11:53:37', '2018-12-03 11:53:37', 0, NULL),
(333, 'محمد محمد سيد على', 4, 4, '29812212501356', '$2y$10$xPsxe7Jtpb7S/KjrxGZPqeYz6cgRYcvDInqJ.Z0pVp.lR83jiZQRW', '29812212501356', '1', '2017-18', '123456556', 360, '2018-12-03 11:53:38', '2018-12-03 11:53:38', 0, NULL),
(334, 'محمد محمود حلمى شحاته', 4, 4, '29703292501099', '$2y$10$Bu6Mj8hET0wWVjsIrDQSBedVXBNIbIVCcA63EEjwK9HiWsNbrd1PK', '29703292501099', '1', '2017-18', '123456556', 361, '2018-12-03 11:53:38', '2018-12-03 11:53:38', 0, NULL),
(335, 'محمد مصطفى محمود محمد', 4, 4, '29611032504254', '$2y$10$aijrMeHFEUgo0NmDzV6/FeS1sZkiukcMSVOocPIpD5x6wbRqhvnfu', '29611032504254', '1', '2017-18', '123456556', 362, '2018-12-03 11:53:38', '2018-12-03 11:53:38', 0, NULL),
(336, 'محمود رمضان احمد محمد', 4, 4, '29802142503253', '$2y$10$ex21UQF/wHF2CMUn0FYPgOLb4Ahc.Ej.f7lD.KG0b3hbRKmz28twC', '29802142503253', '1', '2017-18', '123456556', 363, '2018-12-03 11:53:38', '2018-12-03 11:53:38', 0, NULL),
(337, 'محمود عاطف محمد علاء الدين', 4, 4, '29511272500138', '$2y$10$CRX6yp9yjZXixWKNjGDlWuPdEbYDtPk29fcLzUyn/jM7W6bJ84maC', '29511272500138', '1', '2017-18', '123456556', 364, '2018-12-03 11:53:38', '2018-12-03 11:53:38', 0, NULL),
(338, 'محمود عمران قناوى محمد', 4, 4, '29707282800239', '$2y$10$i.9O7uulrPe17ixdcYpoNOPhkh6ZF9JG2sKcfwGDfW4wt1I0CyN9i', '29707282800239', '1', '2017-18', '123456556', 365, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(339, 'محمود مصطفى شفيق رمضان', 4, 4, '29706012505174', '$2y$10$JR/gd/B5xv/XmM4W3nseUO2E/baB6RGSgjjx2fs6y3OWj5OgNOHYS', '29706012505174', '1', '2017-18', '123456556', 366, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(340, 'مصطفى خلف محمد خلف', 4, 4, '29705132501834', '$2y$10$zKgNwpKLaWrgb2RTMyoJQOXFs.SoGOIw48eHU21hi72rv/8JjcL/u', '29705132501834', '1', '2017-18', '123456556', 367, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(341, 'مصطفى عبد الحكيم مصطفى عسران', 4, 4, '29801012514176', '$2y$10$BoSKLAiPpubfbMBsJ1CXZuhxlqZU6GNuatYUa97cE7qFJEE.n5tM6', '29801012514176', '1', '2017-18', '123456556', 368, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(342, 'مينا ميلاد عشم جرجس ابراهيم', 4, 4, '29709010207434', '$2y$10$ToowZj2xShSkuUzWyhY66OpI0ofnfO5P4uBRCk7wCYvUTZ7Ld7mmO', '29709010207434', '1', '2017-18', '123456556', 369, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(343, 'رومانى عاطف سعيد اسكندس', 4, 4, '29705012506492', '$2y$10$t0IBbPOgeHWHquUo8Hrye.idENFKdR.nvu4jL6s8Lsp133Qv58aSq', '29705012506492', '1', '2017-18', '123456556', 370, '2018-12-03 11:53:39', '2018-12-03 11:53:39', 0, NULL),
(344, 'احمد سعد عبد العزيز احمد', 4, 4, '29703012500734', '$2y$10$eHtireDhpUkZd2UQwSvBVOLvsRYHh22B4foVin10PuqtSVT3las9.', '29703012500734', '1', '2017-18', '123456556', 371, '2018-12-03 12:01:46', '2018-12-03 12:01:46', 0, NULL),
(345, 'خالد محمد انور ثابت', 4, 4, '29705252500378', '$2y$10$bq8dnV1Rnczk8XOwkD/QYuKDewBVzOMIfBGOHTa9ON/CYK.YRIMI.', '29705252500378', '1', '2017-18', '123456556', 372, '2018-12-03 12:01:46', '2018-12-03 12:01:46', 0, NULL),
(346, 'رامى صبرى كامل عطا', 4, 4, '29610142500576', '$2y$10$t8EiXRAOaHmxtVJe6vIjIuqgjbhh.xmg4D2jbB/gEFY87fua5tP0K', '29610142500576', '1', '2017-18', '123456556', 373, '2018-12-03 12:01:46', '2018-12-03 12:01:46', 0, NULL),
(347, 'عماد ماهر عبد الحميد عبد الرحيم', 4, 4, '29701012628398', '$2y$10$iIn3/tm41I4kWv5HJ6eoiuKQWw7CfphXSE4bHMztfyX7dvDirzHbS', '29701012628398', '1', '2017-18', '123456556', 374, '2018-12-03 12:01:46', '2018-12-03 12:01:46', 0, NULL),
(348, 'محمود السيد عبد الرحمن على', 4, 4, '29706262601713', '$2y$10$2eORFzz1yRsbOmq05K9PUuHbyFwF9eHtVsQfhDWJnRMeG07icq/wi', '29706262601713', '1', '2017-18', '123456556', 375, '2018-12-03 12:01:46', '2018-12-03 12:01:46', 0, NULL),
(349, 'ريم على موسى عبد اللطيف', 4, 4, '29712062701021', '$2y$10$wx9t/n4MfJSQKIQOlvtUKOzUF.R/HbnT6Svi7XphumD8iDk3XMycq', '29712062701021', '1', '2017-18', '123456556', 376, '2018-12-03 12:01:47', '2018-12-03 12:01:47', 0, NULL),
(350, 'عمر محمد احمد عامر', 4, 4, '29608202600651', '$2y$10$dG5urGH00yWU7Psffa8yHeq41GmcJJMBDH94BiZnkvfu/h0h9a6ma', '29608202600651', '1', '2017-18', '123456556', 377, '2018-12-03 12:01:47', '2018-12-03 12:01:47', 0, NULL),
(351, 'عبد الرحمن احمد خلف محمود', 4, 4, '29511282600114', '$2y$10$ubS0P385XLr9I2VLaO1XsOgXh5lmll4Higr2ruyycVCJAkZcZfKNO', '29511282600114', '1', '2017-18', '123456556', 378, '2018-12-03 12:01:47', '2018-12-03 12:01:47', 0, NULL),
(352, 'ابراهيم أيمن مفلاح دمرداش', 4, 4, '29905308800714', '$2y$10$i0hZ6rOL3GKRI2XS.WEXzObT6vDxBuFqY4DbiWI9gSs7cw66waibi', '29905308800714', '1', '2017-18', '123456556', 379, '2018-12-03 12:23:47', '2018-12-03 12:23:47', 0, NULL),
(353, 'سماح عصام صلاح سعد', 4, 4, '29904012508161', '$2y$10$H2lz/rqTJKqchEhtCRbXc.TEMjyUQnq2HOioI4iktCl8W97fVDFYC', '29904012508161', '1', '2017-80', '123456556', 380, '2018-12-03 12:23:47', '2018-12-03 12:23:47', 0, NULL),
(354, 'سهيله خالد سيد محمود', 4, 4, '29902152500087', '$2y$10$6svh6W2wQ4Id7Awr0HVYC.FRUwp/uRvBY2MaOh60a8/xq7tjRGiiO', '29902152500087', '1', '2017-81', '123456556', 381, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(355, 'سهيله عز العرب شمس الدين حفنى', 4, 4, '29801182700845', '$2y$10$AeOybb7A8OuvmLi5pEtsxOEu4.YwEuc3m4JRSdvbTsYXgdiDFfa96', '29801182700845', '1', '2017-82', '123456556', 382, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(356, 'شذي أحمد امام احمد', 4, 4, '29808062500383', '$2y$10$DO5QsExWAyDEWqlbJlVhJ.KxZsqaVf7J4K.w.oA1lyY62sm3qhvz.', '29808062500383', '1', '2017-83', '123456556', 383, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(357, 'شيماء على عبدالحميد خميس', 4, 4, '29902132501745', '$2y$10$l5fkyffpLyWOQn1awYanqusiihbmnKEL2LXIRU6fSCSsA7oyUleJq', '29902132501745', '1', '2017-84', '123456556', 384, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(358, 'شيماء كمال جمعه خليفه', 4, 4, '29907102502048', '$2y$10$VzhWIn.KXL0oazNq3QgTy.wgbQrltMuG4pfGgUVOpNnMEl7.8t/iC', '29907102502048', '1', '2017-85', '123456556', 385, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(359, 'صلاح محمد محمد منصور', 4, 4, '29903081601495', '$2y$10$UptvH33Hayi69B4RQSJy0e/mEVoAIEedT18uxpsjW672Bp5iSVIWS', '29903081601495', '1', '2017-86', '123456556', 386, '2018-12-03 12:23:48', '2018-12-03 12:23:48', 0, NULL),
(360, 'ضحى مجدى مصطفى محمود', 4, 4, '29903262500801', '$2y$10$H.EQyiKia884e21ooJK.KuHg8Hg6ae2fkVgLjdunxLdhUxm/TqKqu', '29903262500801', '1', '2017-87', '123456556', 387, '2018-12-03 12:23:49', '2018-12-03 12:23:49', 0, NULL),
(361, 'عبد الرحمن احمد عبد الرحمن قاسم', 4, 4, '29907152503959', '$2y$10$Dk/M.8HGzAv8DZ1Hjmyq4Om62ss5avyof8O027p4tETqphG3MYbYm', '29907152503959', '1', '2017-88', '123456556', 388, '2018-12-03 12:23:49', '2018-12-03 12:23:49', 0, NULL),
(362, 'عبد الله محمود الخضيرى احمد', 4, 4, '29908292601272', '$2y$10$ILUBST49W5M0O2zbU1JzP.auLxdmKl652yUXMp7CkiiWiOq8oC3FC', '29908292601272', '1', '2017-90', '123456556', 389, '2018-12-03 12:23:49', '2018-12-03 12:23:49', 0, NULL),
(363, 'عبد الناصر احمد عبد المحسن', 4, 4, '29710062700536', '$2y$10$UID42a44nYG8khVXzaw6HO6VqkdkLwQkncXymmsWpQcBFhHVfoVE.', '29710062700536', '1', '2017-91', '123456556', 390, '2018-12-03 12:23:49', '2018-12-03 12:23:49', 0, NULL),
(364, 'على محمد الرزق عبيد على', 4, 4, '29905012500035', '$2y$10$dZ.MZnkwgOL5QkZizeeWfuO0tdolcOUQvudzRHJX/D.ffW0KqWR1O', '29905012500035', '1', '2017-92', '123456556', 391, '2018-12-03 12:23:49', '2018-12-03 12:23:49', 0, NULL),
(365, 'على محمد عبد العزيز على', 4, 4, '29903092501433', '$2y$10$erdLglc5UD8CnjSwGtPk2.j/rZGWfTQ1oc6f21cd435FhF45ZErAa', '29903092501433', '1', '2017-93', '123456556', 392, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(366, 'على محمود عبد العليم محمد', 4, 4, '29901012523056', '$2y$10$HCP2Whp.GsLbcnBku.lk5e.rZ2FDNOOUBAEtcBZ7x.Or6DuVshJM2', '29901012523056', '1', '2017-94', '123456556', 393, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(367, 'على ممدوح عبد الناصر يونس', 4, 4, '29803012508098', '$2y$10$NP1i.CzBSR27adfseT4e1.Wz1lZe46SApxVDLTUxLLcEe1RsIsWsi', '29803012508098', '1', '2017-95', '123456556', 394, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(368, 'عمادالدين ماهر عبدالنعيم احمد', 4, 4, '29902082700393', '$2y$10$WAXQ4lWeOZQ3t.9MdoH0IuUgNkDoLDRrjINfcfLG3.rQJDmDQl0A2', '29902082700393', '1', '2017-96', '123456556', 395, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(369, 'عمر جمال محمد احمد', 4, 4, '29910012509656', '$2y$10$L5e3O3bZN3ai2p6lB9VeFObdCy8u5VRrcfXqM50csohxtwirliw72', '29910012509656', '1', '2017-97', '123456556', 396, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(370, 'عمر فتحى صلاح محمد', 4, 4, '29902102501732', '$2y$10$oyFQldyQJdBN.UqAJMLCCu7af7zQWOAF0cyffxhjiLozI0rs.DDG6', '29902102501732', '1', '2017-98', '123456556', 397, '2018-12-03 12:23:50', '2018-12-03 12:23:50', 0, NULL),
(371, 'عمر محمد حامد عبدالسلام قطب', 4, 4, '29707071500131', '$2y$10$VuX8rgyWzgM1lc8ACsa.l.S8JXxncrsc1DA2vuvK1tQUKKZARdpPK', '29707071500131', '1', '2017-99', '123456556', 398, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(372, 'عمرو رجب نسيم على', 4, 4, '29910012712699', '$2y$10$YYSd/JrXo.//Z6Z8y76b2eAHUu7WJgQob4wEvTV9rYz2aExsC0E3O', '29910012712699', '1', '2017-100', '123456556', 399, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(373, 'عمرو عبد الفتاح احمد عبد الله', 4, 4, '29909212601974', '$2y$10$NALhb8J3KhCo1/A3EdqJVuooiEBMjI/IhSjjMgH.uD17pMzE4KE6q', '29909212601974', '1', '2017-101', '123456556', 400, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(374, 'فاطمه الزهراء حامد عبد الظاهر ', 4, 4, '29902182501509', '$2y$10$MZINAqIFomEi9/cyDI224.0s4PCcoZTcnH5PW5oTkD8zWoniu/62u', '29902182501509', '1', '2017-102', '123456556', 401, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(375, 'فاطمه الزهراء يحيى عبد الحميد احمد', 4, 4, '29905102503408', '$2y$10$9B1lHEhhxFdJe96Xy/qcVu4Uv3hCrHJGUisegIQb6xbdpzW.VDrU6', '29905102503408', '1', '2017-103', '123456556', 402, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(376, 'فهد حسين عبد المعطى صابر', 4, 4, '29712172501159', '$2y$10$wKeGAeaYVhrVjlJazA4zY.K3aD6E0fBguNAzJFh2id9rVerGbfglS', '29712172501159', '1', '2017-104', '123456556', 403, '2018-12-03 12:23:51', '2018-12-03 12:23:51', 0, NULL),
(377, 'كريمان رفعت سعد عبد الودود‏', 4, 4, '29808082502927', '$2y$10$VEQriD51mZ73jVAs5zvTrOKt1bSM5mxzdGBb1SC21jCV.lK2AZjeu', '29808082502927', '1', '2017-105', '123456556', 404, '2018-12-03 12:23:52', '2018-12-03 12:23:52', 0, NULL),
(378, 'كيرلس مشيل شفيق رزق', 4, 4, '29811012512977', '$2y$10$zoKtbtEOjFYxbFyQ9eDOvO3fhX1LQFx7.iDs3QG86H1.WhkzKfq5S', '29811012512977', '1', '2017-106', '123456556', 405, '2018-12-03 12:23:52', '2018-12-03 12:23:52', 0, NULL),
(379, 'لمياء ممدوح سيد حسين', 4, 4, '29808152503527', '$2y$10$kmMTMV.m/P4n0QIip3SCaO82Q8o.V7iu2YtY3XMl4YMnJhqjuthK6', '29808152503527', '1', '2017-107', '123456556', 406, '2018-12-03 12:23:52', '2018-12-03 12:23:52', 0, NULL),
(380, 'لوتشيا مخلص عياد بولس', 4, 4, '29906152800329', '$2y$10$DNMwoW91dTo0XmJZfqMoxOTXWk7JLeWaZlg3thlUOQdktd2KtHZiy', '29906152800329', '1', '2017-108', '123456556', 407, '2018-12-03 12:23:52', '2018-12-03 12:23:52', 0, NULL),
(381, 'مارتينا سامح بخيت جرجس', 4, 4, '29809172501829', '$2y$10$ohcqixfgnvkVGcDLC9N0x.r5yljY4Gj1wNUi5w7Y7GdBlbS739nwa', '29809172501829', '1', '2017-109', '123456556', 408, '2018-12-03 12:23:52', '2018-12-03 12:23:52', 0, NULL),
(382, 'مايكل اشرف سعد رزق الله', 4, 4, '29903042500932', '$2y$10$590IH/rvTQ5jM6HH8vCULOvA2OGYVpKfqmLFwfIhavzuTdPb6xRuS', '29903042500932', '1', '2017-110', '123456556', 409, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(383, 'محمد ابراهيم محمد ابراهيم بتاو', 4, 4, '29811012606998', '$2y$10$ZCt9.mXSEV63s2M8GATY0ujrkTGbqLW4U/dOKQrgmAT/MRQcoL2Q.', '29811012606998', '1', '2017-111', '123456556', 410, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(384, 'محمد احمد طه سيد', 4, 4, '29901012502253', '$2y$10$vs2X4iGa9xR4nlL2vaL9.OuJvHILr6ct8D6ZFeDW20iNnADIv6.SG', '29901012502253', '1', '2017-112', '123456556', 411, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(385, 'محمد احمد محمد ابو اليسر', 4, 4, '29902092600176', '$2y$10$rPo5h0HfZYj.laNMBEWL/us4YAdlEcn3TLzhVeab548E1e.NcucOu', '29902092600176', '1', '2017-113', '123456556', 412, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(386, 'محمد احمد محمد محمد', 4, 4, '29904092600373', '$2y$10$gyZa4fhz2SjQ1i3ul78hNOR.CjG5LLClZjciRkLdQ49UT16RNR8wy', '29904092600373', '1', '2017-114', '123456556', 413, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(387, 'محمد حسن محمد عبد الرازق', 4, 4, '29804302500071', '$2y$10$mN46n1IqcU6ief7leMqIUeT7wX8i3zrXMIUcRTaH2XrRUAd9gT9cW', '29804302500071', '1', '2017-115', '123456556', 414, '2018-12-03 12:23:53', '2018-12-03 12:23:53', 0, NULL),
(388, 'محمد رفعت عبد التواب محمد', 4, 4, '29812012508194', '$2y$10$0ytYRf.m9oodlekBEHbAZefdyBJJWsNDmgji74VzEsRsZjH8dVr16', '29812012508194', '1', '2017-116', '123456556', 415, '2018-12-03 12:23:54', '2018-12-03 12:23:54', 0, NULL),
(389, 'محمد سيد عبد الصبور محمود', 4, 4, '29908212501698', '$2y$10$xIXflHTwhJOcyfIyv9FVs.HRXxUXe0AEYaT3Tjm1SZX4sG9AxVfKa', '29908212501698', '1', '2017-117', '123456556', 416, '2018-12-03 12:23:54', '2018-12-03 12:23:54', 0, NULL),
(390, 'محمد صلاح مصطفى حسانين', 4, 4, '29806012508836', '$2y$10$e0KqTdpyV2MF4Oj.cHjSUOWgaldq5x5WWzpZ2vRYgbmxcgKkzqzY2', '29806012508836', '1', '2017-118', '123456556', 417, '2018-12-03 12:23:54', '2018-12-03 12:23:54', 0, NULL),
(391, 'محمد عبد الباسط احمد محمد', 4, 4, '29804202502491', '$2y$10$bPT1u/wqCZIUxyJprxnzH.mhx4H.EvMic0bnB2EUrrEn1KycTnP5K', '29804202502491', '1', '2017-119', '123456556', 418, '2018-12-03 12:23:54', '2018-12-03 12:23:54', 0, NULL),
(392, 'محمد عبدالعال جادالرب داود', 4, 4, '29906092701059', '$2y$10$NlMH.YVcVfYW5lULN6L6PuuC9fCt3o0CFxLvwT9wBvGlM70w7lyBO', '29906092701059', '1', '2017-120', '123456556', 419, '2018-12-03 12:23:54', '2018-12-03 12:23:54', 0, NULL),
(393, 'محمد محمود عبد الواحد عبد اللطيف', 4, 4, '29901212600594', '$2y$10$1psdwpOzQifqf0rHi.6Dpu8dVP3T/1xHVlWXxy2lcxKQpmxRlxeM6', '29901212600594', '1', '2017-121', '123456556', 420, '2018-12-03 12:23:55', '2018-12-03 12:23:55', 0, NULL),
(394, 'محمد محمود عبدالمقصود محمود', 4, 4, '29804161402355', '$2y$10$81.TJdrniR8f6Z62EnP50e2DKJMbAL1CNk2NYdG/0TOxGx6oKusQS', '29804161402355', '1', '2017-122', '123456556', 421, '2018-12-03 12:23:55', '2018-12-03 12:23:55', 0, NULL),
(395, 'محمد مصطفى سعد محمد', 4, 4, '29711042502076', '$2y$10$6ISExCVhbUVjwPUDHEZZ0uNA/mZBhJwl8pbDQsmtSzAyLQ40f.8qa', '29711042502076', '1', '2017-123', '123456556', 422, '2018-12-03 12:23:55', '2018-12-03 12:23:55', 0, NULL),
(396, 'محمد مصطفى محمد حسين', 4, 4, '29904011822296', '$2y$10$KGoLb/718DsyZvYW0.XbqOT2Spt6O.1UF8zy9sCF0onnZZCME.eIa', '29904011822296', '1', '2017-124', '123456556', 423, '2018-12-03 12:23:55', '2018-12-03 12:23:55', 0, NULL),
(397, 'محمد مؤمن عبد الله احمد', 4, 4, '29901092500035', '$2y$10$m7R8z317mvvk/2UKmGDpqu8UcLYVfa.3myIgzTugMoQeBWDr2uuzy', '29901092500035', '1', '2017-125', '123456556', 424, '2018-12-03 12:23:55', '2018-12-03 12:23:55', 0, NULL),
(398, 'محمد ياسر محمد عبد العزيز', 4, 4, '29907252500639', '$2y$10$tGrkH0SGslD.GhNEqqTwzekg6RgyQelnxr1rYnEuKBq/LVZdPxJuC', '29907252500639', '1', '2017-126', '123456556', 425, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(399, 'محمود احمد عبد الرحمن محمد', 4, 4, '29801212501656', '$2y$10$1cIxjNnJQKzXaLCmI76aYeqZkuAS4NfUlqeomZK4iYyd1oV2fLmSe', '29801212501656', '1', '2017-127', '123456556', 426, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(400, 'محمود احمد عبد الساتر حسنين', 4, 4, '29810142500192', '$2y$10$bQqVkxnoliF9GZajyVSEkevUyGR.fv/aVitarCt70pNNIxCSepRp6', '29810142500192', '1', '2017-128', '123456556', 427, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(401, 'محمود خالد محمد السيد', 4, 4, '29810202701133', '$2y$10$9WL70dhtZBFPdPCtTDXPnu41/7CN8/jwH41eUs0z8EyVF9IwFMcC.', '29810202701133', '1', '2017-130', '123456556', 428, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(402, 'محمود رفعت محمود محمد', 4, 4, '29810012507055', '$2y$10$SYdZn1H0bp4Wq18aqzgtkOjoJQ5k78YEx3XwNkg8jZ6qmT0Jb7f/K', '29810012507055', '1', '2017-131', '123456556', 429, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(403, 'محمود سمير سيد مصطفى', 4, 4, '29811072502091', '$2y$10$Tw1VbLTp/SmIp3D.CspZ4.mNxOnzrFhs0ddGFVFmysksZjFlrxnkG', '29811072502091', '1', '2017-132', '123456556', 430, '2018-12-03 12:23:56', '2018-12-03 12:23:56', 0, NULL),
(404, 'محمود عبد الغفار ابو قفه توفيق', 4, 4, '29805072500439', '$2y$10$T.DTiaJhVqB/iobTw7ahUOL7kcjFppghAWkUWx1uhCDsB8XsCNUqi', '29805072500439', '1', '2017-133', '123456556', 431, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(405, 'محمود محمد الامين عبد المجيد ', 4, 4, '29909252500232', '$2y$10$Z3iYFUsGx5gHV/BoKf8HXORaznqTUiHuC96WSnbUjUN03grPa9D72', '29909252500232', '1', '2017-134', '123456556', 432, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(406, 'مصطفى انور محمد قناوى', 4, 4, '29901052501691', '$2y$10$jQ271ydYvpJZg506b4Ml/.dBPIBrlj1hGjZPTPmQwqHJMYYRLx56K', '29901052501691', '1', '2017-135', '123456556', 433, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(407, 'مصطفى جمال عبد الوهاب عياط', 4, 4, '29901142502433', '$2y$10$2byFlg3tAhQj4Kg758qxLOOd3gQQw40ZmNUrkkPbtwjtHoa4ZJJle', '29901142502433', '1', '2017-136', '123456556', 434, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(408, 'مصطفى عبد الناصر حربى احمد', 4, 4, '29808042501731', '$2y$10$Jck8KUHI2SuAVRbatgSd5uqfYUMnZfqaypZJ1VEKo8pvgn6UB9sLe', '29808042501731', '1', '2017-137', '123456556', 435, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(409, 'مصطفى على رشوان على', 4, 4, '29901052604075', '$2y$10$6ZsOLdYpOh.R8txJWRUJxuuYQDwTiFQ.8zsyEuhUWr3qdDlxKgp72', '29901052604075', '1', '2017-138', '123456556', 436, '2018-12-03 12:23:57', '2018-12-03 12:23:57', 0, NULL),
(410, 'مصطفى عمار علي', 4, 4, '29801012500736', '$2y$10$/u9vu49CyF4Nbc0B1kBwm.K8rZplYQa/0GBKZhlHm7AFqll2pAga2', '29801012500736', '1', '2017-139', '123456556', 437, '2018-12-03 12:23:58', '2018-12-03 12:23:58', 0, NULL),
(411, 'مصطفى محمد مصطفى محمد', 4, 4, '29904032502631', '$2y$10$0M.sX/KZnSCyq7fKKXGqSuZo.sFJEgmpA48d4XM8u8INFtP8Cw1cS', '29904032502631', '1', '2017-140', '123456556', 438, '2018-12-03 12:23:58', '2018-12-03 12:23:58', 0, NULL),
(412, 'مصطفى ممدوح مصطفى عبد الله', 4, 4, '29801012518597', '$2y$10$HpfSUYiFChuvhKiCLmi8vu5VqgUS.vDePxmgRp1HlJJvhO1XGCYxa', '29801012518597', '1', '2017-141', '123456556', 439, '2018-12-03 12:23:58', '2018-12-03 12:23:58', 0, NULL),
(413, 'منحه محمد محمود محمد', 4, 4, '29811132500441', '$2y$10$w75uUvxm4lCd1L0W6eQD/eO4TlhVD6CyYBmKZJf7.80y29rtcKVj6', '29811132500441', '1', '2017-142', '123456556', 440, '2018-12-03 12:23:58', '2018-12-03 12:23:58', 0, NULL),
(414, 'موسى عبد النبى احمد سليمان', 4, 4, '29810102702612', '$2y$10$uz1rwpC9mSLRqBY71K/RP.Essr284wujQ4vuuMDfOa/.asbPoRram', '29810102702612', '1', '2017-143', '123456556', 441, '2018-12-03 12:23:58', '2018-12-03 12:23:58', 0, NULL),
(415, 'مينا ثروت اسحاق حنس', 4, 4, '29908032501851', '$2y$10$VB7QTBuTY5oHcI8asGdAGOvF3PI9IhS6LM4zdcQnKhe./S9vopY8q', '29908032501851', '1', '2017-144', '123456556', 442, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(416, 'مينا صفوت صبحى جندى', 4, 4, '29901012511651', '$2y$10$gQIQLnRVj93ocYkJ//15ee2ZMNxUxIATyE1avFe1JGNjygA0BUcYW', '29901012511651', '1', '2017-145', '123456556', 443, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(417, 'مينا عياد بولس مكاريوس', 4, 4, '30004012800274', '$2y$10$7lsKQHIlImGPGFPGL0NGheSSMIMe0tJ58sJQ5awanzdv9WhSKQmx6', '30004012800274', '1', '2017-146', '123456556', 444, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(418, 'مينا فتحى سليمان بخيت', 4, 4, '29412202601672', '$2y$10$JsFHXu6QRs.qFyDsUlIIDO9OiNWYI1fiYM.gT8IRbpbd/Ef2IFx8m', '29412202601672', '1', '2017-147', '123456556', 445, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(419, 'مينا نبيل زكى شاكر', 4, 4, '29901132602235', '$2y$10$QkQ2xGr2ZiNObp3JrOaVlucIAxaoBVJ8uBT0UuCXmrJKYvjNfMh42', '29901132602235', '1', '2017-148', '123456556', 446, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(420, 'شيماء حازم سعد الدين', 4, 4, '29904152500462', '$2y$10$D4wVygavVaLjx4vMtFDrfO2V7Ntc.HWtEYjQCJrkZN4EnEZLD/FNu', '29904152500462', '1', '2017-168', '123456556', 447, '2018-12-03 12:23:59', '2018-12-03 12:23:59', 0, NULL),
(421, 'احمد يحيى احمد', 4, 4, '29203302501511', '$2y$10$K25gRdsRL8fKwiLNmvSXXeDgsHkVRE9/uq.3dWpwmSILlCOZzuqx6', '29203302501511', '1', '2017-18', '123456556', 448, '2018-12-03 12:36:04', '2018-12-03 12:36:04', 0, NULL),
(422, 'محمد على عاشور', 4, 4, '29711162500751', '$2y$10$H98JrWyBN6EdC1oe.saXQuV/9GkKpYbJq/LZHpDGetfi/Ejip5.b.', '29711162500751', '1', '2017-18', '123456556', 449, '2018-12-03 12:36:04', '2018-12-03 12:36:04', 0, NULL),
(423, 'احمد شريف احمد حسين', 4, 4, '29705252502451', '$2y$10$JxjpAo88MdCZAQq4Nrpfyew8OUFVmqXofoagMrxuqYkOOWMN2qPcu', '29705252502451', '1', '2017-19', '123456556', 450, '2018-12-03 12:36:05', '2018-12-03 12:36:05', 0, NULL),
(424, 'ابانوب عمادالدين يوسف سمعان', 6, 8, '10000000000000', '$2y$10$Q6/Vf8N1O3xZsvlMs5Junu.4CfFg7zd5nZaqmrVEY0a58Vgi1Gd6q', '10000000000000', '1', '2018-2019', '123456556', 453, '2018-12-17 07:45:45', '2018-12-17 07:45:45', 0, NULL),
(425, 'احمد حسنى عبدالنعيم علي', 6, 8, '29906192502878', '$2y$10$TGxfiwK5D9yO9Ly6cJyJ8OmvLDAIG.KW8xq/u7qHBCTozZTBNL7UG', '29906192502878', '1', '2018-2019', '123456556', 454, '2018-12-17 07:45:45', '2018-12-17 07:45:45', 0, NULL),
(426, 'احمد حسين حسن محمد', 6, 8, '29811102502938', '$2y$10$P8qfbeC7/t8/tjtTEt5Ty.mek8OSdGzsoPIJSu51VfPiVXxhbR8tC', '29811102502938', '1', '2018-2019', '123456556', 455, '2018-12-17 07:45:45', '2018-12-17 07:45:45', 0, NULL),
(427, 'احمد عبدالعظيم درويش ابراهيم', 6, 8, '30008012501736', '$2y$10$fmOPPo6hzoRv3F2R0N2GDuAcQyS.OXMA2KdwtHJQv/cDnlvON0TDy', '30008012501736', '1', '2018-2019', '123456556', 456, '2018-12-17 07:45:45', '2018-12-17 07:45:45', 0, NULL),
(428, 'احمد عطيه الله محمد عبدالحميد', 6, 8, '30003262502094', '$2y$10$pY4QCvHdJQ8o/TYQXfaEVua0csx0kom65c8rybezu6N3w.sCAg5fC', '30003262502094', '1', '2018-2019', '123456556', 457, '2018-12-17 07:45:45', '2018-12-17 07:45:45', 0, NULL),
(429, 'احمد محمد احمد محمد', 6, 8, '11000000000000', '$2y$10$UVrvlnzqTgNdEmXJabxSJeZLzEyd3PlF98if4CmYBO11/ghDlGLEO', '11000000000000', '1', '2018-2019', '123456556', 458, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(430, 'احمد مصطفى صبره حسين', 6, 8, '30008162500436', '$2y$10$ApAt9FUWqDiOvzVptGp0Le.ECUqI2XEN0I3Pu0yTVgpDcV3Qtlbqq', '30008162500436', '1', '2018-2019', '123456556', 459, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(431, 'اسراء عاطف محمد عبدالغفار', 6, 8, '30010312501066', '$2y$10$9X7SNSUGa/c94nLhJgtHQuM698FJZ0HNKDB7/4jz6bV72kmkWeem6', '30010312501066', '1', '2018-2019', '123456556', 460, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(432, 'اسماء ابوالليل عبدالجواد خضر', 6, 8, '29711032500644', '$2y$10$OHNJqiV.VaaJmRa93sRLXebmgnme1.Rv8V/8asGROk7eWNCPUtuxi', '29711032500644', '1', '2018-2019', '123456556', 461, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(433, 'اسماء يحى عبدالغنى محمد', 6, 8, '30006112502427', '$2y$10$PELic2iurY.3S00sJh.l5umJiT6ImYr09bMiyv5gMXTyCIODU8mUS', '30006112502427', '1', '2018-2019', '123456556', 462, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(434, 'القاسم سعد مصطفى محمد', 6, 8, '30003132501738', '$2y$10$Grxnhl0aP0wO2vvdgANjcOkk/UHYlTBFPEU68ZGZHbBeZs08vQDcm', '30003132501738', '1', '2018-2019', '123456556', 463, '2018-12-17 07:45:46', '2018-12-17 07:45:46', 0, NULL),
(435, 'الهام حسين مختار عبدالرؤف', 6, 8, '30006082501021', '$2y$10$Msk3zgLmOhILpYRfyhQl4uXASiSMkoRtj4Pp6Pca8YrJPtjSQ1a2K', '30006082501021', '1', '2018-2019', '123456556', 464, '2018-12-17 07:45:47', '2018-12-17 07:45:47', 0, NULL),
(436, 'امال مصطفى حامد محمد احمد', 6, 8, '29906162501702', '$2y$10$Os6Ee6SoNznVW7Lv2bVE2OV4aH1IixdizV8qFWKWAoepNEIGyCSWq', '29906162501702', '1', '2018-2019', '123456556', 465, '2018-12-17 07:45:47', '2018-12-17 07:45:47', 0, NULL),
(437, 'امنيه كمال السيد فضلول', 6, 8, '29907012615706', '$2y$10$6fI5r9x4r/exz5/tnEHg4Ol2KZdnDCL5IOxmy76jt0DVoXJCnb2.u', '29907012615706', '1', '2018-2019', '123456556', 466, '2018-12-17 07:45:47', '2018-12-17 07:45:47', 0, NULL),
(438, 'اميره حشمت شحاته احمد', 6, 8, '29912072503544', '$2y$10$verYZHAV8aXkTUqvgCKc5OYjw2aBc1uDsuQdc1wNRWc2aH/bmbDWq', '29912072503544', '1', '2018-2019', '123456556', 467, '2018-12-17 07:45:47', '2018-12-17 07:45:47', 0, NULL),
(439, 'ايلاريه عاطف صلاح مسعد', 6, 8, '30003152502943', '$2y$10$mRUW/1/bQOUFTee41ObukexOCMf9jmEd6qrDMnuFRtKIOBTrHqHYm', '30003152502943', '1', '2018-2019', '123456556', 468, '2018-12-17 07:45:47', '2018-12-17 07:45:47', 0, NULL),
(440, 'باسل اسماعيل عبدالحى سليم', 6, 8, '30008152500519', '$2y$10$wjik3YYX924kTzJI8RiV1.igdzB/Gr.VsZdod7WydDlsW7P8.96Xy', '30008152500519', '1', '2018-2019', '123456556', 469, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(441, 'باهر سامح حلمى خليل', 6, 8, '29911272500217', '$2y$10$eLLJAAaUVRrR.QQIcmq2M.J5JtxwvZ3iOGVdF0RD3HFWUCSZt05GG', '29911272500217', '1', '2018-2019', '123456556', 470, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(442, 'بسمه شلبى حلمى عياد', 6, 8, '30004102503163', '$2y$10$NnTg5VwPOjiGqGHEZk3qc.tJoYE4COCEuC9LPFyZS3uXfJ4m/oyXG', '30004102503163', '1', '2018-2019', '123456556', 471, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(443, 'حسن عادل حسن عبدالمحسن', 6, 8, '29908122502458', '$2y$10$LRVbdKW1Hs.w0u7uswdjc.zLC7Umu5N0wqJcG9o8pQvCQXnzJJhWC', '29908122502458', '1', '2018-2019', '123456556', 472, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(444, 'حسين على حسن محمد', 6, 8, '29912192501596', '$2y$10$jUvO8JINzKwkE/RYkMImFepwRb1P9yFHM819Xr6WTcXi/vQxO9AlC', '29912192501596', '1', '2018-2019', '123456556', 473, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(445, 'خالد محمد سيد فرج', 6, 8, '29810242500831', '$2y$10$LYFipGAkWMsqLWmEyS75Ae4orbKombnyAyicJdJZsi98nuAR0W1mW', '29810242500831', '1', '2018-2019', '123456556', 474, '2018-12-17 07:45:48', '2018-12-17 07:45:48', 0, NULL),
(446, 'خالد محمد عبدالحفيظ محمد', 6, 8, '29905012504057', '$2y$10$eZuQHirPrtuAaF6ukOrJ4OVjgubhVB07JReWcv2Eqzjs4Xv.3gnNW', '29905012504057', '1', '2018-2019', '123456556', 475, '2018-12-17 07:45:49', '2018-12-17 07:45:49', 0, NULL),
(447, 'داليا سمير سعدالله عشم', 6, 8, '11100000000000', '$2y$10$ygnycB3CIA.gnrIVH.uzcO5r32CrhDhPYFqM.ykyCY0wYrYcs4zFm', '11100000000000', '1', '2018-2019', '123456556', 476, '2018-12-17 07:45:49', '2018-12-17 07:45:49', 0, NULL),
(448, 'دميانه كمال نظير سعيد', 6, 8, '29811012501606', '$2y$10$IWhyPvFYFEKO5Pyt3XB2xeZLroFmZTy6/OqfjEbqEzyJL4rJZ8Jcq', '29811012501606', '1', '2018-2019', '123456556', 477, '2018-12-17 07:45:49', '2018-12-17 07:45:49', 0, NULL),
(449, 'دنيا ياسر نادى على', 6, 8, '30002072502342', '$2y$10$6EJhBQZ9s8Zu.5vWQDCFn.B8LA0VEmQxXJqQWjtcpYdD7lDTrPdw2', '30002072502342', '1', '2018-2019', '123456556', 478, '2018-12-17 07:45:49', '2018-12-17 07:45:49', 0, NULL),
(450, 'رانيا صبرى حمزه عبدالسميع', 6, 8, '29907242501122', '$2y$10$HWa1juJpKN.F7.bj6XpUhuX2BLYl8A2s3OnVYccNNBHEbqsMrn/6C', '29907242501122', '1', '2018-2019', '123456556', 479, '2018-12-17 07:45:49', '2018-12-17 07:45:49', 0, NULL),
(451, 'رانيا مدحت شوقى عزيز', 6, 8, '30005112500622', '$2y$10$slQvVlYEOQRcNUXgDneCeuFJHcrO90jOJCeEe4VKsmyzuIB4G/k3i', '30005112500622', '1', '2018-2019', '123456556', 480, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(452, 'زينب صلاح محمد عبدالغفار', 6, 8, '30002062500244', '$2y$10$Bh89XdW1yVoAMZWOHwKq2.UtUtfpmK71K7U35/xYRzK/pA1DO7WPS', '30002062500244', '1', '2018-2019', '123456556', 481, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(453, 'سيد محمد سيد محمد', 6, 8, '30009212502598', '$2y$10$5zEJkKeLwE/na4bbaxoVvOYvz9o28GBlNGmk2I/0wC3T5R4Z4pTze', '30009212502598', '1', '2018-2019', '123456556', 482, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(454, 'شاهنده اشرف محمد محمد', 6, 8, '30005252500983', '$2y$10$UZ3xOkXOnaB8N/ov1EnadeghbS/3MY0xomGxaXFaj7LAM78lXoe9q', '30005252500983', '1', '2018-2019', '123456556', 483, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(455, 'شنوده اشرف صموئيل عياد', 6, 8, '29810132500038', '$2y$10$j5oZsq2OmsMhRATvjPg/JeSm6SsTC4cdEDrM3aRWwJZE.Q7gDJigu', '29810132500038', '1', '2018-2019', '123456556', 484, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(456, 'عبد الله جعفر عبد الله علام', 6, 8, '11110000000000', '$2y$10$pM.YGwklm/NoHA9SYI/UF.l6kCb5YHjafvviy9VYW1ggAhGb/cMo.', '11110000000000', '1', '2018-2019', '123456556', 485, '2018-12-17 07:45:50', '2018-12-17 07:45:50', 0, NULL),
(457, 'عبدالحميد محمود عبدالحميد محمد', 6, 8, '30001012500476', '$2y$10$wQAq.ZxDdyBjyDVylQ05aueghW/lM/Dz8RlT1zubGShfclo9yGH1.', '30001012500476', '1', '2018-2019', '123456556', 486, '2018-12-17 07:45:51', '2018-12-17 07:45:51', 0, NULL),
(458, 'عبدالرحمن اسامه مصطفى حسن', 6, 8, '29911092502955', '$2y$10$oHZraBWQOk6POtFiUvcZn.hip0iyjstNuzlN5xQI6mhJbTb5uywnK', '29911092502955', '1', '2018-2019', '123456556', 487, '2018-12-17 07:45:51', '2018-12-17 07:45:51', 0, NULL),
(459, 'عبدالرحمن على جوده على', 6, 8, '30008132500393', '$2y$10$ByqdwAMichC4jz1H3CIWz.1oyUw4ak.hGq75r9Q40l8q9ilW0Yggu', '30008132500393', '1', '2018-2019', '123456556', 488, '2018-12-17 07:45:51', '2018-12-17 07:45:51', 0, NULL),
(460, 'عبدالرحمن محمود عاطف درويش', 6, 8, '30007052403897', '$2y$10$iFo7DC2wGv9yBvqAhyun6u9yPMaRelIJo0C/XIoLUA7tSxnEgvrui', '30007052403897', '1', '2018-2019', '123456556', 489, '2018-12-17 07:45:51', '2018-12-17 07:45:51', 0, NULL),
(461, 'عبدالله عبدالرزاق حميد على', 6, 8, '30008272502531', '$2y$10$4xz29WNtJ6JAIu/nUhkICOoAzMYwkXjiHcda7Tf8mU8Hy8HtXRnS6', '30008272502531', '1', '2018-2019', '123456556', 490, '2018-12-17 07:45:51', '2018-12-17 07:45:51', 0, NULL),
(462, 'عبير حسونه راشد سيد', 6, 8, '29905208800266', '$2y$10$3Ufhti71NLS9V8AQ6iApEODc2Xs3/Icg/bryWqQH5oh9/MemLIHbC', '29905208800266', '1', '2018-2019', '123456556', 491, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(463, 'على خميس محمد عبدالصبور', 6, 8, '30009162504012', '$2y$10$siNIppQONNEtj.f9AXZVKOaau0JTcEg.AsOxLeUsUfiLkN6z5WlZu', '30009162504012', '1', '2018-2019', '123456556', 492, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(464, 'عمرو الداخلى محمد فرحان', 6, 8, '29812122501055', '$2y$10$p..dEfI0oD4is0Q04baHHe2ENxwrVpzCLIas0dsauxCUGqi0qPQtm', '29812122501055', '1', '2018-2019', '123456556', 493, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(465, 'فادى مجدى موريس تاوضروس', 6, 8, '30004042502812', '$2y$10$c0gPwdWSCZTN79GR4rBVAOu4qFHy4CfDYYcDrIdwmPWV/hM09cwsm', '30004042502812', '1', '2018-2019', '123456556', 494, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(466, 'فضل مصطفى حسين سيد', 6, 8, '30003122501799', '$2y$10$QcGWQ6xDNsv0.3KzU19VGeqSs7Sm3CYDSmuiwosyeVQme4ok77F8m', '30003122501799', '1', '2018-2019', '123456556', 495, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(467, 'كرستينا ميخائيل ثابت متى', 6, 8, '29901232505369', '$2y$10$MQwY/7VxfFoNos1NJVnDVu3ubCidrEHCgbZNDfjU7WXUkZit4Cwy6', '29901232505369', '1', '2018-2019', '123456556', 496, '2018-12-17 07:45:52', '2018-12-17 07:45:52', 0, NULL),
(468, 'كيرلس حمدى بليغ حنا', 6, 8, '30007182502374', '$2y$10$LI.kMA95/mDDilhfP.tP6eJt0hLgH5/GfSlhE6TXbwr0vR9mcMqJK', '30007182502374', '1', '2018-2019', '123456556', 497, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(469, 'مؤمن احمد رمضان محجوب', 6, 8, '30009092501673', '$2y$10$SMrpu.nFudLQbZJLn3.edeCMRPGtfJpnc8YRpX9uZcoplrpLbDgKy', '30009092501673', '1', '2018-2019', '123456556', 498, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(470, 'مارلين ممدوح منصور منصور', 6, 8, '30003252500565', '$2y$10$C/o6rzXMsXnBU4rILefGW.2KCxmQ6cYrzap4NSDkBOQVrx5XaADha', '30003252500565', '1', '2018-2019', '123456556', 499, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(471, 'ماريا مراد حنا ابراهيم', 6, 8, '30004012501064', '$2y$10$Hg/f8Mkla3OATUdRV1RzOO6wPYSXVdMjhKT67iyAVv4IsDYnsrw8S', '30004012501064', '1', '2018-2019', '123456556', 500, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(472, 'ماريت رأفت ابراهيم عطيه', 6, 8, '30006242503247', '$2y$10$hrsc6C3NpLewOB1IFEuW2OFtlO.vgUHWeeoMCiuLdsbAvnGFa0mr6', '30006242503247', '1', '2018-2019', '123456556', 501, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(473, 'محمد اسماعيل على سيد', 6, 8, '29912022503497', '$2y$10$P2WSTDJpxnYF.OHwboR4KOUBcKgsNacLs2ZmxK2jMkQybhzGTgRfW', '29912022503497', '1', '2018-2019', '123456556', 502, '2018-12-17 07:45:53', '2018-12-17 07:45:53', 0, NULL),
(474, 'محمد ايهاب حسن زكي', 6, 8, '30001152502177', '$2y$10$Z8nlqR7XIOTaJpxSHkv/EuAD9whgTOCeRf.FS01BkpCw9e6CUunfu', '30001152502177', '1', '2018-2019', '123456556', 503, '2018-12-17 07:45:54', '2018-12-17 07:45:54', 0, NULL),
(475, 'محمد سامى نفادى هريدى', 6, 8, '29902162500514', '$2y$10$mnwZqqS6hVfJeahCwyjWEelvJNXHrta0YK/UCMFVY7MtU0mWrDgwm', '29902162500514', '1', '2018-2020', '123456556', 504, '2018-12-17 07:45:54', '2018-12-17 07:45:54', 0, NULL),
(476, 'محمد صابر احمد سالم', 6, 8, '30007222501457', '$2y$10$nkufWaLRe0NMBm1VMnylleP6PdvJB5atwmjMfRWmlbJqFhFdKGaIq', '30007222501457', '1', '2018-2021', '123456556', 505, '2018-12-17 07:45:54', '2018-12-17 07:45:54', 0, NULL),
(477, 'محمد عادل عبوده كامل', 6, 8, '30004272500754', '$2y$10$VcqmdnfV15fuMQEh1ZM9i.Q4GUTG.Pw9BIOr4uTa/1XQY4t3Ksdf6', '30004272500754', '1', '2018-2022', '123456556', 506, '2018-12-17 07:45:54', '2018-12-17 07:45:54', 0, NULL),
(478, 'محمد عاطف عبدالرحيم احمد', 6, 8, '29902192500632', '$2y$10$urNM3yE8Vm2KsnMtKgvjieWWytsz1/UkHFSUrLfvPgFkR7sQmjI4G', '29902192500632', '1', '2018-2023', '123456556', 507, '2018-12-17 07:45:54', '2018-12-17 07:45:54', 0, NULL),
(479, 'محمد عبدالتواب فرغلى عبدالحى', 6, 8, '29910062501699', '$2y$10$WHynwxwGQYWJjXX91NFJre4s26c0pOkcaCXOSwo0tjM/6MfN/LVre', '29910062501699', '1', '2018-2024', '123456556', 508, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(480, 'محمد ياسر عابد السيد', 6, 8, '30003132500952', '$2y$10$MADhqaLmYPCv3enWAKabuuCCN8EwCDB7AcVE8Vodqns4tM/U5iBWW', '30003132500952', '1', '2018-2025', '123456556', 509, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(481, 'محمود ابوزيد خلف الله ابوزيد', 6, 8, '11111000000000', '$2y$10$wSxE8ZR5yJRZlB6dNvjroO4Td9.9Ky0aiObpAn3OP9uwdmaHlKIA2', '11111000000000', '1', '2018-2026', '123456556', 510, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(482, 'محمود جمال عبدالسلام فرغلى', 6, 8, '29901012503314', '$2y$10$oa32/QnymDglgMhwPoGCPucq0SjByyKJdokpEOQeDQ3tvQ3i9yIji', '29901012503314', '1', '2018-2027', '123456556', 511, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(483, 'محمود عصام الدين زكى خليفه', 6, 8, '30009282503192', '$2y$10$ZsOez0LyLTbXgkzowQrT9uwxRd3QxaKRM157oVkg0F1mpF10Rc1Na', '30009282503192', '1', '2018-2028', '123456556', 512, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(484, 'مصطفى ماهر سليمان حسن', 6, 8, '29901012510655', '$2y$10$hpHD.d5rU9j0KaNvIrESeetNbok81XoF3a6uWVxFpOVP8AdG1mffa', '29901012510655', '1', '2018-2029', '123456556', 513, '2018-12-17 07:45:55', '2018-12-17 07:45:55', 0, NULL),
(485, 'مها اشرف ابوطالب حسن', 6, 8, '30005062501185', '$2y$10$eXJPnwjmP39zC7ySl8O.TOaW1AI4TnhzeHb/jowbE4J2u6We/XNj2', '30005062501185', '1', '2018-2030', '123456556', 514, '2018-12-17 07:45:56', '2018-12-17 07:45:56', 0, NULL),
(486, 'ميلاد صادق فخرى بباوى', 6, 8, '29901132501153', '$2y$10$n8L5/TY9zOIVABwgHAMSxO2M4bEcWypVJHSkiXc/34EJiRiR8todK', '29901132501153', '1', '2018-2031', '123456556', 515, '2018-12-17 07:45:56', '2018-12-17 07:45:56', 0, NULL),
(487, 'مينا صموئيل داود مسعود', 6, 8, '29711052500331', '$2y$10$J69XkHnJgSybNp7Vabi5kOVg4cQol9wo8vCV4DWs1AjCL5M1rV7j.', '29711052500331', '1', '2018-2032', '123456556', 516, '2018-12-17 07:45:56', '2018-12-17 07:45:56', 0, NULL),
(488, 'ناصر زين خلف خليل', 6, 8, '30006012501016', '$2y$10$NqSkxpgKdNI8gw.xCGrtwedakGe6j8NCQkFDH.KlsTvVzf0sRHhJa', '30006012501016', '1', '2018-2033', '123456556', 517, '2018-12-17 07:45:56', '2018-12-17 07:45:56', 0, NULL),
(489, 'ندا خالد اسماعيل حمدان', 6, 8, '30009242500085', '$2y$10$LqUuF23Js/BFLLcjrKBR2evplpqCp9uM/HPWkaB.vuoSUHDFTl2.G', '30009242500085', '1', '2018-2034', '123456556', 518, '2018-12-17 07:45:56', '2018-12-17 07:45:56', 0, NULL),
(490, 'ندى جمال محروس حسنين', 6, 8, '30005142500228', '$2y$10$t6Z/HkEL8AnBUwl0SJLt8.tC04GLsMJYTpmLHFVd6YOw5LQ.uukpu', '30005142500228', '1', '2018-2035', '123456556', 519, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(491, 'نسمه حسن عبدالله احمد', 6, 8, '29910132500245', '$2y$10$0R5egFoTAR78Cw5A6phttO0z1Le4I1/4fIJggavUkyTqtMog3caHm', '29910132500245', '1', '2018-2036', '123456556', 520, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(492, 'نفين سمير عويضه غبروش', 6, 8, '29907012503746', '$2y$10$A6RlVpPA1wLPXGqaQXwQ7eCymEiCYmNaq2XjeobDJKGyhVYZLwFpa', '29907012503746', '1', '2018-2037', '123456556', 521, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(493, 'نهال ناصر بخيت عطالله', 6, 8, '30001232500086', '$2y$10$YHsBNidJXpkoNKvIiqQ5reP.Xz4eiHUEu1MXw40G3.1Rq55nhGrkW', '30001232500086', '1', '2018-2038', '123456556', 522, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(494, 'نورهان علاء الدين حسين محمد', 6, 8, '30009282502269', '$2y$10$.4vPM8/m4HQK9fRGKhie2eDWgCRUVL8icCwcEElcNp9qofnX3xFyW', '30009282502269', '1', '2018-2039', '123456556', 523, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(495, 'نورهان كمال وهبه عبدالعال', 6, 8, '29911282500088', '$2y$10$eFQPymushsDuPd3Oljzj1eDM5Dl.f8vBMEQI19OMpjJPT1/BgJzza', '29911282500088', '1', '2018-2040', '123456556', 524, '2018-12-17 07:45:57', '2018-12-17 07:45:57', 0, NULL),
(496, 'هاجر عبدالحافظ عبدالعزيز عبدالجليل', 6, 8, '29910182502508', '$2y$10$Gx16jn.8q1YR3BxEWqd0Fe9B4Lu6f/1XB8Crl9ihKylJltb22j7i2', '29910182502508', '1', '2018-2041', '123456556', 525, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(497, 'هبه سيد محمد سيد', 6, 8, '30010222502241', '$2y$10$iUku.sQ.RU0sGb6JcTzXjeapcEdJ6R4WDOZ3Tcc5nmlqYOkPxd81S', '30010222502241', '1', '2018-2042', '123456556', 526, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(498, 'هدى سيد عبدالظاهر محمد', 6, 8, '29907312501966', '$2y$10$Xej6in9YrsNG7uqaSLHULeQIKGUnao80QnDPJsm/dRJqkBcLKJOb6', '29907312501966', '1', '2018-2043', '123456556', 527, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(499, 'هشام يحيى محمود رضوان', 6, 8, '30002252502391', '$2y$10$2M5NAp/YXFQ64cM9ZiYfPeqjCc5qXb2QlHMXuv0b6AZX3v4GbpSEG', '30002252502391', '1', '2018-2044', '123456556', 528, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(500, 'وليد مصطفى فهمى خلف الله', 6, 8, '30009162501757', '$2y$10$9e6syPnqbw83kyiWlMdxOO3nnghj77rdHXEd6PhTpcjsFoOXWzxEy', '30009162501757', '1', '2018-2045', '123456556', 529, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(501, 'نورهان محمد احمد محمد ', 6, 8, '3000808', '$2y$10$9e6syPnqbw83kyiWlMdxOO3nnghj77rdHXEd6PhTpcjsFoOXWzxEy', '300808', '1', '2018-2045', '123456556', 531, '2018-12-17 07:45:58', '2018-12-17 07:45:58', 0, NULL),
(502, 'test', 4, 2, '10000000000001', '$2y$10$NKq.9kuFPkEoU4pAFjwU4uzxqcn.L1jsUQ8z8XW9.qYvbywgjwlgO', '10000000000001', '1', '2018-2019', '123456556', 533, '2019-01-15 13:38:54', '2019-01-15 13:38:54', 0, NULL),
(503, 'احمد ابراهيم عثمان محمد', 4, 4, '29807272501912', '$2y$10$SwkqDugnJ9gMhGBAeR2fyelPoSB4gDoNOuDkLnHnIXqnE2MDK2tYe', '29807272501912', '1', '2018-2019', '123456556', 534, '2019-01-20 15:10:39', '2019-01-20 15:10:39', 0, NULL),
(504, 'احمد الذهبى رمضان محمود طه', 4, 4, '29811032702098', '$2y$10$whLGIILPReDjHZDSu7jeHuFWb0TUfmX3n4UiIJ6nA.YA/ZfR3zqrm', '29811032702098', '1', '2018-2020', '123456556', 535, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(505, 'احمد جمال ابو القاسم مسعود', 4, 4, '29805192501439', '$2y$10$mmM1BEdMt7tG6iglUowxGuj9s4/RomzIUxVZmcZfplPa1KSyxdXeC', '29805192501439', '1', '2018-2021', '123456556', 536, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(506, 'احمد عبد العظيم محمد حسين', 4, 4, '29804072500254', '$2y$10$d7whce8sXRNfs5HuU4V/SuBXWQ5jWykatmCZs3TLBc.7KgQO8OaAO', '29804072500254', '1', '2018-2022', '123456556', 537, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(507, 'احمد ممدوح ذكريا احمد', 4, 4, '29712012508815', '$2y$10$/lMmOCto/kAI/k6iV/eQfOazGQ/K4LuZgtBdIHWuYpz6LjHx/LiBm', '29712012508815', '1', '2018-2023', '123456556', 538, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(508, 'اسلام انور سليمان احمد', 4, 4, '29702122502493', '$2y$10$PSHsxVaubB8jXt5ETg2zKes.6KQJsUtFuFtzD22SW3pNGOJlYiGhK', '29702122502493', '1', '2018-2024', '123456556', 539, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(509, 'اسماعيل ابراهيم عبد الشكور عبد الحميد', 4, 4, '29803152602698', '$2y$10$E6GEPhSFKiy0CXqdJgkuqeOvWcQaPNhurm5kaFpOauw53KUdTUJu.', '29803152602698', '1', '2018-2025', '123456556', 540, '2019-01-20 15:10:40', '2019-01-20 15:10:40', 0, NULL),
(510, 'الحسينى حماده العارف احمد', 4, 4, '29704122602695', '$2y$10$gw9Z5bV5qSTeHMT5hxxBzuTScdguWZbfgy3ymFAcTCrUbPwMHIAVW', '29704122602695', '1', '2018-2026', '123456556', 541, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(511, 'ايه سيد محمد عبد النعيم', 4, 4, '29805202503303', '$2y$10$FmuLdyB6MIPGKqLQhIeF3u/vMemQZuMDNodrCOpgsCHEMMoCkplAe', '29805202503303', '1', '2018-2027', '123456556', 542, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(512, 'اية عمر بدران عمر', 4, 4, '29807223200061', '$2y$10$npC/jJJjSBHl/kpp8atu7u3YIQTbksP2nCxXKQ3uLLQYyhBK/7mPu', '29807223200061', '1', '2018-2028', '123456556', 543, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(513, 'ايمن ايهاب حسانين شحات', 4, 4, '29804092500951', '$2y$10$Y9d.IbHTkNV9v3S25zEAEudVjuq0w7xEaTj4/I5d6GUMrzMF8jCzu', '29804092500951', '1', '2018-2029', '123456556', 544, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(514, 'ايهاب اسماعيل عبد الرؤف خضيرى', 4, 4, '29804132600954', '$2y$10$i7bHt8ThgWlw2yH6BSbereeFoN1T5CDOVO3pQIP26oyaJRUsAb9GK', '29804132600954', '1', '2018-2030', '123456556', 545, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(515, 'بافلى بشرى زخارى عبد المسيح', 4, 4, '29809132503179', '$2y$10$SG3AZIpQzVponrxGTbibbO5jblNvEdeiDFj.xYiV6.YnDh4Ew6gNy', '29809132503179', '1', '2018-2031', '123456556', 546, '2019-01-20 15:10:41', '2019-01-20 15:10:41', 0, NULL),
(516, 'جوزيف ثروت فهيم عبد الملاك', 4, 4, '29612092501072', '$2y$10$YejgmK0TjfV1fxnQhkzzDuJhvhzWUmqUM.VtJeIY7P0Up2SRRAfpW', '29612092501072', '1', '2018-2032', '123456556', 547, '2019-01-20 15:10:42', '2019-01-20 15:10:42', 0, NULL),
(517, 'حسام احمد حامد عبد الرحيم', 4, 4, '29802242601872', '$2y$10$aQBNonrb8wkowLNqkDUPeOgQ1xjLs709bz6aESdahhZsQG7C55SGG', '29802242601872', '1', '2018-2033', '123456556', 548, '2019-01-20 15:10:42', '2019-01-20 15:10:42', 0, NULL),
(518, 'حسن خلف حسن توفيق', 4, 4, '29809242601117', '$2y$10$GbvikVUyhLB5v7cjaM6LUu8B51lFfC92AT9vcP37TNCkPLckjH7K.', '29809242601117', '1', '2018-2034', '123456556', 549, '2019-01-20 15:10:42', '2019-01-20 15:10:42', 0, NULL),
(519, 'راشيل ملاك صابر صالح', 4, 4, '29808082605629', '$2y$10$8lvUrItBozNdH59UM.iyde6cABJNknYmAw3VBbp2qaBi2vTeToHaG', '29808082605629', '1', '2018-2035', '123456556', 550, '2019-01-20 15:10:42', '2019-01-20 15:10:42', 0, NULL);
INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(520, 'ساندرا سعيد فوزى فام', 4, 4, '29807222500486', '$2y$10$0yTcTqG0b09Ye9fIQO/9/eilEOSi/jKia6swZNofaxBfrn5cJyoC.', '29807222500486', '1', '2018-2036', '123456556', 551, '2019-01-20 15:10:42', '2019-01-20 15:10:42', 0, NULL),
(521, 'ساهر عادل حلمى خميس', 4, 4, '29710192500253', '$2y$10$Yzh52RhLeOloz5woqd3Zye43bZ.3LJXsjITktolOUrKgC48nslMGu', '29710192500253', '1', '2018-2037', '123456556', 552, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(522, 'عبد الحميد صبرى عبد المجيد عبد الحافظ', 4, 4, '29801012639777', '$2y$10$F62Q.utnOH/wAUtuZCRT0u8mmEbptl69EQxPRzqEiKFB3fN0ZVlVq', '29801012639777', '1', '2018-2038', '123456556', 553, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(523, 'عبد الرحمن ثابت احمد عبد الرحمن', 4, 4, '29803042600673', '$2y$10$O2JJ2YPJT4p.NycPp4TzgezVz.rUrJndWjTgPUqX3EGRZI7jc75He', '29803042600673', '1', '2018-2039', '123456556', 554, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(524, 'عبد الرحمن محمد نصرالدين احمد', 4, 4, '29710282600532', '$2y$10$uneK/buGU0siUkW0zMcBFey3kPd/LjfRp693WMc5WxhL72kZ5IJ2.', '29710282600532', '1', '2018-2040', '123456556', 555, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(525, 'على محمود عبد الجواد شهاب الدين', 4, 4, '29802210101991', '$2y$10$4Si5heme/zrkTsamek2KfOzIl/nUd8wmLuHe/t5/x2irQOAOqlzc6', '29802210101991', '1', '2018-2041', '123456556', 556, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(526, 'فاطمه احمد محمد محمد', 4, 4, '29712112700781', '$2y$10$KXqqNhxpWKLNSpox9Wo9VOsCciaeZrvlHsj9.TIRfTkdVGZ6bBc02', '29712112700781', '1', '2018-2042', '123456556', 557, '2019-01-20 15:10:43', '2019-01-20 15:10:43', 0, NULL),
(527, 'كيرلس ايمن الفنص الفى', 4, 4, '29709252500357', '$2y$10$oYvHK1C5OPuLDxKYJurGiOmxIL1C1nZPE.WMrbLLG.WjnYaU5clRu', '29709252500357', '1', '2018-2043', '123456556', 558, '2019-01-20 15:10:44', '2019-01-20 15:10:44', 0, NULL),
(528, 'كيرلس ممدوح ابراهيم مهنى', 4, 4, '29809132503195', '$2y$10$hKz9W7dZVgNan62dVqZH/ORE3HEgZYmWqe63B7hgPr4WfAuknuz2i', '29809132503195', '1', '2018-2044', '123456556', 559, '2019-01-20 15:10:44', '2019-01-20 15:10:44', 0, NULL),
(529, 'مادونا حليم شاكر راغب', 4, 4, '29706152503201', '$2y$10$sGxQFeG0WTKulwJuZSR22O9WAuCIYZi7/J5cXjwWwnzlAHagLXJTe', '29706152503201', '1', '2018-2045', '123456556', 560, '2019-01-20 15:10:44', '2019-01-20 15:10:44', 0, NULL),
(530, 'مارك مراد مكرم فؤاد', 4, 4, '29801042500234', '$2y$10$donBxbO5agPZK3XYRYxiJOQFjtVPIOv83I0vQDerh8mL1oLoudi1i', '29801042500234', '1', '2018-2046', '123456556', 561, '2019-01-20 15:10:44', '2019-01-20 15:10:44', 0, NULL),
(531, 'مجدى عادل اسحق غالى', 4, 4, '29709252801438', '$2y$10$RTqo/AKmM8nDNK6A.Bz19.HorTkcXy9DtA0M1dgPiXKjdZelfocs2', '29709252801438', '1', '2018-2047', '123456556', 562, '2019-01-20 15:10:44', '2019-01-20 15:10:44', 0, NULL),
(532, 'مجدي رشاد مريد يسي', 4, 4, '29809072600811', '$2y$10$OhWXuYllNA4I5AtTWY7iVOwzzvkE369xgkG.0K6fM4O/g9c0559Zy', '29809072600811', '1', '2018-2048', '123456556', 563, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(533, 'محمد بهاءالدين عبد الحفيظ خليفة', 4, 4, '29806012611955', '$2y$10$YgimdgyfG08FJganLZd8kuxsjyaOmRQ.Uye2c/SHgmjyuQSSbPy06', '29806012611955', '1', '2018-2049', '123456556', 564, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(534, 'محمد جلال على سليمان', 4, 4, '29707292501973', '$2y$10$scTRaK6CMt28E5I8nXVEde0g2KVaWFKOU1kacOY.5ydYY8sqikyO.', '29707292501973', '1', '2018-2050', '123456556', 565, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(535, 'محمد رجب مرسى حسين', 4, 4, '29804202602135', '$2y$10$lLgscSqJoqgyuEGM/XKBs.q8IRaRP1WYvMMR22vwqR0xsI3V49bV.', '29804202602135', '1', '2018-2051', '123456556', 566, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(536, 'محمد عادل محمود سيد', 4, 4, '29801242600616', '$2y$10$hLPVO8V4ySLDgOXr1A3gcOUccuRu.vbraH64Or7cv6Y4FryATaAS.', '29801242600616', '1', '2018-2052', '123456556', 567, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(537, 'محمد محمود محمد محمود', 4, 4, '29801012609274', '$2y$10$RhZq8UtV6tzus1KMXqCDG.uo./WjpeqXGb.cBU9szj7ZLYrIe0O5a', '29801012609274', '1', '2018-2053', '123456556', 568, '2019-01-20 15:10:45', '2019-01-20 15:10:45', 0, NULL),
(538, 'محمود صلاح محمد مصطفى', 4, 4, '29806162502038', '$2y$10$1HoVuuaJ4ZJPWX88gMJPLuupEdXm4Woqsfjkk6W0v9qHJrBiYdRoy', '29806162502038', '1', '2018-2054', '123456556', 569, '2019-01-20 15:10:46', '2019-01-20 15:10:46', 0, NULL),
(539, 'مصطفى عبد الناصر يحيى خليفه', 4, 4, '29805022501639', '$2y$10$doTTeGEDsfJFclzOnoL6d./FDXo3tr73OoLm1WGT//67eAd8TH10i', '29805022501639', '1', '2018-2055', '123456556', 570, '2019-01-20 15:10:46', '2019-01-20 15:10:46', 0, NULL),
(540, 'مصطفى محمد محمود صالح', 4, 4, '29803202501774', '$2y$10$udHjriCtjlANeR5xIZ0HPeBfMyJykGGLkT0.HrSdaWc0OutZUV/dm', '29803202501774', '1', '2018-2056', '123456556', 571, '2019-01-20 15:10:46', '2019-01-20 15:10:46', 0, NULL),
(541, 'موسى محمد محمد عصمان', 4, 4, '29612312500536', '$2y$10$PKm4x/U0sYdh4mfECiWT5.EcMKKtl73M5rdz3pYKVCfp5Uyg1Hl5S', '29612312500536', '1', '2018-2057', '123456556', 572, '2019-01-20 15:10:46', '2019-01-20 15:10:46', 0, NULL),
(542, 'نرمين عادل محمد عمر', 4, 4, '29712202601366', '$2y$10$cRifI.a8FZ.LsTdJ0jHs/.8.jCTOBoy80tWG5cSb.E1F3.TVSDzqS', '29712202601366', '1', '2018-2058', '123456556', 573, '2019-01-20 15:10:46', '2019-01-20 15:10:46', 0, NULL),
(543, 'ياسر على سالم حسن', 4, 4, '29803082502852', '$2y$10$n8TlaO.t/bv2uOwPwEKB7OQ9Q13qWbIgDaftQ3IhE6ASwuva.20iW', '29803082502852', '1', '2018-2059', '123456556', 574, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(544, 'يوستينا صادق فهيم ميخائيل', 4, 4, '29611182602726', '$2y$10$CWLtXT7gOsZRgJlce1dRYuy0xo4MqW54XcAtxGjr/hPWVs35s3x1y', '29611182602726', '1', '2018-2060', '123456556', 575, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(545, 'يوسف زكريا محمد يوسف', 4, 4, '29805102700713', '$2y$10$5XwkOVLsLR2xsAAUWdpyBOykxRQ2qG8LmzD9NNjo.cFT6KCo9s0fW', '29805102700713', '1', '2018-2061', '123456556', 576, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(546, 'مارينا سامح شاكر مكرم الله', 4, 4, '29806212600443', '$2y$10$Cn7F4eT43b5v1bAXDI2dBel96rKYh2ndTcGfSo.G2J4zelqaeWt2W', '29806212600443', '1', '2018-2062', '123456556', 577, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(547, 'احمد محروس متولي السيد', 4, 4, '29601152701732', '$2y$10$1c6Q78u8glTLMLP/Lj.tveKN2iRUMfqh.Syk8bI8v27ElTIL0iA6O', '29601152701732', '1', '2018-2063', '123456556', 578, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(548, 'اسلام محمد امين محمد', 4, 4, '29603062800734', '$2y$10$V9/mla7ZkMsQjnJiHksmBexfIWxKNLS3YQgXwKnFW0CjTGt3KCROK', '29603062800734', '1', '2018-2064', '123456556', 579, '2019-01-20 15:10:47', '2019-01-20 15:10:47', 0, NULL),
(549, 'خلود عمرو مصطفي البارودي محمدين', 4, 4, '29603242500208', '$2y$10$jEPhj7ip9cCUh2PhfoP/Cex8QVNg61dt.VGDEmSJrr80l36oDzxbi', '29603242500208', '1', '2018-2065', '123456556', 580, '2019-01-20 15:10:48', '2019-01-20 15:10:48', 0, NULL),
(550, 'احمد محمد صلاح الدين ركابى', 4, 4, '29612052800239', '$2y$10$47O4zKHq9yqn5jJzWnjyNOXeSd4ygQD8sOkim/f.1dtY5dFKNGy6e', '29612052800239', '1', '2018-2066', '123456556', 581, '2019-01-20 15:10:48', '2019-01-20 15:10:48', 0, NULL),
(551, 'هشام فرج محمود فرج', 4, 4, '29705202801075', '$2y$10$uhotFpfcEhgEGCVg4O26Ie17zUFDJRJOl5fWf3aCusGzSNM30HwmK', '29705202801075', '1', '2018-2067', '123456556', 582, '2019-01-20 15:10:48', '2019-01-20 15:10:48', 0, NULL),
(552, 'محمد عبد الصبور فؤاد ', 4, 4, '29411262502634', '$2y$10$AnqY2NoQvgkuxdqvhHrES.JLVFk6aOOatFik57Un9T1D2FJvt1oj6', '29411262502634', '1', '2018-2068', '123456556', 583, '2019-01-20 15:10:48', '2019-01-20 15:10:48', 0, NULL),
(553, 'asd', 9, 10, '123456', '$2y$10$Mi/RnCgVa.uOQ3z85Ey9O.HvLuJK69PWbEWW1ivBolfUopGGuYROG', '22222222222222', '1', '2017', '126824447', 585, '2019-02-28 09:11:42', '2019-02-28 09:11:42', 0, NULL),
(554, 'ابانوب ايهاب خيرالله ابوسته', 9, 10, '30001011858156', '$2y$10$bGxZxybcnx7ia0rb7Eig4uq08WCh35EKGdVYpOFTlTR8k8et3Szt6', '29809280203494', '1', '2017-20', '123456556', 586, '2019-02-28 09:14:33', '2019-02-28 09:14:33', 0, NULL),
(555, 'احمد جمال علام السيد', 9, 10, '30001011858156', '$2y$10$WcPO3dTyPST7gkcbRQ1JHe7BcpNThCOxOcHp56g6fNLV0AWoF2B7e', '29712012506855', '1', '2017-21', '123456556', 587, '2019-02-28 09:14:33', '2019-02-28 09:14:33', 0, NULL),
(556, 'احمد جمال فاروق ريان', 9, 10, '30001011858156', '$2y$10$jvurVRaMYhql/tYCIdeXnO7y7eKtk2.9i8K3mQbEo3tjNB9URbro6', '29802012502671', '1', '2017-22', '123456556', 588, '2019-02-28 09:14:33', '2019-02-28 09:14:33', 0, NULL),
(557, 'احمد رفعت عبد الناصر يوسف', 9, 10, '30001011858156', '$2y$10$ggFaogdncIc1I7F/ZwYUOOpXevuij4biP7HCfXQ/VpP4Jy2BcKjEm', '29711232501572', '1', '2017-23', '123456556', 589, '2019-02-28 09:14:33', '2019-02-28 09:14:33', 0, NULL),
(558, 'احمد رمضان عبدالحافظ عبدالمحسن', 9, 10, '30001011858156', '$2y$10$Ex7xxTsgoZhwQZLaoivrBu4XOrJ3dX9PMyVXpsdNZjtyAlTUrZzxC', '29703232500913', '1', '2017-24', '123456556', 590, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(559, 'احمد سيد حسن محمود', 9, 10, '30001011858156', '$2y$10$d6K78MhLMcVC6R33UeDG5Oj/9kDzb.MSYjwZkuVPNNBgvzqWg/U1O', '29706112501672', '1', '2017-25', '123456556', 591, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(560, 'احمد صفوت فتحى عبد العزيز', 9, 10, '30001011858156', '$2y$10$0QlY9tePSW9PUp72Q0FRP.WDYZcToj4VSjeNE/i0t1FvaniGgKpE6', '29802192500778', '1', '2017-26', '123456556', 592, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(561, 'احمد عادل عبد العال احمد', 9, 10, '30001011858156', '$2y$10$ZHwtx6mwNdB/ayp9Uo.geugOO3kkg06ABrDbuwG.49NGe9oifILSC', '29802162502393', '1', '2017-27', '123456556', 593, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(562, 'احمد عبد الفتاح عبد المنعم بخيت', 9, 10, '30001011858156', '$2y$10$AflXoFi0obs8yGg1PVrV8.et7Ov/kW5yur6yTJo1KsG7CP7TQf6f.', '29809152504953', '1', '2017-28', '123456556', 594, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(563, 'احمد محمد عبد الرحيم محمد', 9, 10, '30001011858156', '$2y$10$pnxBfpMIg5e5SARqIQkdEO.CAHwMoVqkaNk3qKCjjgh0PnlNW/Jka', '29804012507675', '1', '2017-29', '123456556', 595, '2019-02-28 09:14:34', '2019-02-28 09:14:34', 0, NULL),
(564, 'احمد محمد عبدالرحيم فرغلى', 9, 10, '30001011858156', '$2y$10$5t2Ug3ZaRJSuRc2uBCnyEeCZ1HF7lijEqiwMeSGKIgJeVvEsJHtLO', '29611062502191', '1', '2017-30', '123456556', 596, '2019-02-28 09:14:35', '2019-02-28 09:14:35', 0, NULL),
(565, 'احمد محمد قاسم احمد', 9, 10, '30001011858156', '$2y$10$9KtUnlmm.UQVUwLRTqKlWOm9t.9AEQRN0M/oFyKfZvC/6YBaRrCpa', '29707052502352', '1', '2017-31', '123456556', 597, '2019-02-28 09:14:35', '2019-02-28 09:14:35', 0, NULL),
(566, 'احمد مصطفى احمد خلف', 9, 10, '30001011858156', '$2y$10$F0mk1Q29zdC1oAD0bwuMVu6UKCRaeLyF8vDEMqSBGL.spTsY0YU12', '29708202500058', '1', '2017-32', '123456556', 598, '2019-02-28 09:14:35', '2019-02-28 09:14:35', 0, NULL),
(567, 'احمد مصطفى عبدالمنعم علي', 9, 10, '30001011858156', '$2y$10$fAqLVFe/xHbHNuHmk85HDeMZ40ZH8gR5qjg2EhLagEmXqPVp2E56W', '29702242500613', '1', '2017-33', '123456556', 599, '2019-02-28 09:14:35', '2019-02-28 09:14:35', 0, NULL),
(568, 'اسامه الامير دياب فهيم', 9, 10, '30001011858156', '$2y$10$c6h7XXEGjUShYvsAPJ/F7uAB4kLDuQuuRXqDiiG3bXuGSnTdI.uY.', '29704292503071', '1', '2017-34', '123456556', 600, '2019-02-28 09:14:35', '2019-02-28 09:14:35', 0, NULL),
(569, 'اسامه زكريا فؤاد يوسف', 9, 10, '30001011858156', '$2y$10$BBZo4BmjDUi8smznpTjFFu54g5U5LOuNbHwDD3ZIVrCvSho6aqhmu', '29808092501074', '1', '2017-35', '123456556', 601, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(570, 'اسامه سليمان عبد المجيد عبد الرحمن', 9, 10, '30001011858156', '$2y$10$U56hbhi4nwZMcH.8Ccq9WelbqPr/XNtdJMyJoySxPo1lC77SEt1kS', '29701092502691', '1', '2017-36', '123456556', 602, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(571, 'اسلام ابراهيم مرزوق محمد', 9, 10, '30001011858156', '$2y$10$szNF57qlhrws32zrDaE86ufgFRv8X5GNfSLue8N1zk/kTciwBfu3C', '29806062503631', '1', '2017-37', '123456556', 603, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(572, 'اسلام محمود احمد عبدالغفار', 9, 10, '30001011858156', '$2y$10$CqR02R9r1cjFoq8bo/Y3fOhLIy8c1BaUU5IwoLAMY/.IKQxbFx9LK', '29706252500534', '1', '2017-38', '123456556', 604, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(573, 'اسماء جمال محمد خليفة', 9, 10, '30001011858156', '$2y$10$2nCT3Gw8NJutijgatgQt8uW50PiepLY.kLGPBCBxX5pRgY27OUFJu', '29804292501367', '1', '2017-39', '123456556', 605, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(574, 'اسماء سيد حسن هريدى', 9, 10, '30001011858156', '$2y$10$jTBS80Pl0rH/unX6P3497u5ojuhw/hXgLiiXIvm/pSqmlDpyRnjWC', '29712202503224', '1', '2017-40', '123456556', 606, '2019-02-28 09:14:36', '2019-02-28 09:14:36', 0, NULL),
(575, 'اسماء علي حسني سعد', 9, 10, '30001011858156', '$2y$10$Fm/OAHiCOtb/Mk3Cl5wFYevZzrJ4G5Hh93MsEnbYdI0kIBZNRUhkC', '29701012426485', '1', '2017-41', '123456556', 607, '2019-02-28 09:14:37', '2019-02-28 09:14:37', 0, NULL),
(576, 'اسماء محمد حسين مرسى', 9, 10, '30001011858156', '$2y$10$pcsIlv/g0i0aNkI322Pm6ee.YA9jBnHIUcfihFLgPVYChS1tQ3zqu', '29807012509243', '1', '2017-42', '123456556', 608, '2019-02-28 09:14:37', '2019-02-28 09:14:37', 0, NULL),
(577, 'اشرف رشاد محمد حسن', 9, 10, '30001011858156', '$2y$10$X2wdNgXjGXui5iFazyV94eZu.8Vv7YCLAGzPTfblPeE0I7zo0sgii', '29804042500292', '1', '2017-43', '123456556', 609, '2019-02-28 09:14:37', '2019-02-28 09:14:37', 0, NULL),
(578, 'الاء محمد محمود احمد', 9, 10, '30001011858156', '$2y$10$aNeLg2lVqVVNJK58Govupu2b.820DWFIw6LBkI5MQZImLdmbw6NFq', '29705152500087', '1', '2017-44', '123456556', 610, '2019-02-28 09:14:37', '2019-02-28 09:14:37', 0, NULL),
(579, 'المعتصم بالله يسن على حسين', 9, 10, '30001011858156', '$2y$10$2PfdNYPwk1/hYdHWOEpiR.43TieHEKx/fDf/gzpbU2Yvy0UZy/sGe', '29809132500374', '1', '2017-45', '123456556', 611, '2019-02-28 09:14:37', '2019-02-28 09:14:37', 0, NULL),
(580, 'امانى صلاح على محمد', 9, 10, '30001011858156', '$2y$10$l/YaIA8/nPzOdaXDFQ4SmO3pWJIkN7x/5WR/aJlLgN5EfckfvXjRy', '29807192501806', '1', '2017-46', '123456556', 612, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(581, 'امنيه مصطفى عبدالحميد عبدالرحمن', 9, 10, '30001011858156', '$2y$10$LYjtu//eJWYFiu8a0oPoE.fdYIxMXOdqkBOBW.8B6fDcZKWh6zz5O', '29611112500225', '1', '2017-47', '123456556', 613, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(582, 'اميره شريف عبد الحفيظ فرغلى', 9, 10, '30001011858156', '$2y$10$9Ew6a39Z9i6ikJ.5N9f0wOK2Z/KiOsFiI8PC6AKU3rHITZqxmc2Su', '29807062500085', '1', '2017-48', '123456556', 614, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(583, 'اميره عادل مصطفى مبارك', 9, 10, '30001011858156', '$2y$10$RH3ZMsAyGWt/xeDards0.OkxBIf0dZq5cDEXRfuJfnor38AlMvyHW', '29610232500141', '1', '2017-49', '123456556', 615, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(584, 'اندرو صلاح حبيب يعقوب‏', 9, 10, '30001011858156', '$2y$10$8DPGhY6a5xecbaotiFyh9u8Gd4s1up9r0iOqDbDCRxvv7dbVSrZHe', '29701012505512', '1', '2017-50', '123456556', 616, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(585, 'اندرو كرم فريد جندي', 9, 10, '30001011858156', '$2y$10$GzOLdYcPmKPM5ssuSjcjF.29tJ9XegI/Wx5VZOQfI3LhwZZmXSTVS', '29710063200111', '1', '2017-51', '123456556', 617, '2019-02-28 09:14:38', '2019-02-28 09:14:38', 0, NULL),
(586, 'انغام خيري على احمد', 9, 10, '30001011858156', '$2y$10$OrVXKIIG0h6cLurifgCpue3d.KSOQregTeMMas/mNYOgdOBjdYgK6', '29709072501908', '1', '2017-52', '123456556', 618, '2019-02-28 09:14:39', '2019-02-28 09:14:39', 0, NULL),
(587, 'ايات محمد عباس حسين', 9, 10, '30001011858156', '$2y$10$eby6wgUMTjk9472LaKRoQOeOpil5wx46xvJuKYYCHvhy4QIWWYCm.', '29703202700802', '1', '2017-53', '123456556', 619, '2019-02-28 09:14:39', '2019-02-28 09:14:39', 0, NULL),
(588, 'ايمان احمد على عبد الموجود', 9, 10, '30001011858156', '$2y$10$cb6Du4.wtN3OT1TOthOM6ehQMqtExZx6b8.sPxnAscsLDr5s8KjQy', '29804112503243', '1', '2017-54', '123456556', 620, '2019-02-28 09:14:39', '2019-02-28 09:14:39', 0, NULL),
(589, 'ايمان السيد محمد السيد', 9, 10, '30001011858156', '$2y$10$4QL9r1WTf4UM5QqNk7EIluhFJYVQJNA1EiO6EKc1UtQWpaR/Zisom', '29801012511746', '1', '2017-55', '123456556', 621, '2019-02-28 09:14:39', '2019-02-28 09:14:39', 0, NULL),
(590, 'ايمان محمد عبد الرؤف سليمان', 9, 10, '30001011858156', '$2y$10$86dWIP9GipnMQdFFB4V/zujw0f9OdTVJdoDydw4qOq9WV64JdFKUO', '29706172500705', '1', '2017-56', '123456556', 622, '2019-02-28 09:14:39', '2019-02-28 09:14:39', 0, NULL),
(591, 'ايمن جمال احمد زيد', 9, 10, '30001011858156', '$2y$10$gjeA.zoit7lpuzumozBQxu9gs.O1ZT/S3gmAPUmCMhEtvKZR2sCaC', '29806082501294', '1', '2017-57', '123456556', 623, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(592, 'ايمن عاطف عطا سيد', 9, 10, '30001011858156', '$2y$10$cpKgj3lYxdT8Wdvt3wBGEe6EKuCSzN21Yf1q8jbwUBfh4K46.nMaK', '29706012508939', '1', '2017-58', '123456556', 624, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(593, 'ايناس  حمدي  سيد محمد', 9, 10, '30001011858156', '$2y$10$O0WZGGeuUuN1PU.z0dJVTOF9KBO40UENGIAaE7IDBeHePfZB7eK12', '29703292500505', '1', '2017-59', '123456556', 625, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(594, 'ايه عاطف محمد عمران', 9, 10, '30001011858156', '$2y$10$p2dF9S1AEnfE5BedyLC3A.nN7SCh1tthF7BToZC5eTY4/J1fSV2t2', '29809012508461', '1', '2017-60', '123456556', 626, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(595, 'بهاء وهيب فوزى بباوى', 9, 10, '30001011858156', '$2y$10$LNSjImqYDfjGq6HUdEhatuIBdah4t6.TwrSp74Jn.2FP5WiDytAES', '29712092500071', '1', '2017-61', '123456556', 627, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(596, 'بولا صفوت شنوده ميخائيل', 9, 10, '30001011858156', '$2y$10$zhjO2BMgcj5imq4UnP.Kj.98CnYPRPgSR3ZpQKO.SKzCpuDeZntFK', '29710312500571', '1', '2017-62', '123456556', 628, '2019-02-28 09:14:40', '2019-02-28 09:14:40', 0, NULL),
(597, 'بيتر شنوده عبد الشهيد جبرة', 9, 10, '30001011858156', '$2y$10$lTIl3/mQSM7NJce6gomCZ.ornFDGHbFEyBGsOa94RmuX9Aotm87te', '29806232501336', '1', '2017-63', '123456556', 629, '2019-02-28 09:14:41', '2019-02-28 09:14:41', 0, NULL),
(598, 'بيشوي صفوت وديع عبد السيد', 9, 10, '30001011858156', '$2y$10$5Gt1fwRbLqPXZFSYvhsC1uzj35XWz4PXodQXJXYPP4Mq0GeOXqV3W', '29808242501914', '1', '2017-64', '123456556', 630, '2019-02-28 09:14:41', '2019-02-28 09:14:41', 0, NULL),
(599, 'جهاد محمود علي محمد', 9, 10, '30001011858156', '$2y$10$/HRFWuKkaTxLE0ydFudE9.bbGHtfssgtgMWE3/5u60WSFQw6MAI4W', '29609212504185', '1', '2017-65', '123456556', 631, '2019-02-28 09:14:41', '2019-02-28 09:14:41', 0, NULL),
(600, 'جوزيف يوسف جميل زكري', 9, 10, '30001011858156', '$2y$10$5Qzu64cmWEdc574wshSXL.h5JqWueTZsoykvKFJSYaqQE5oO.c/1u', '29504022503399', '1', '2017-66', '123456556', 632, '2019-02-28 09:14:41', '2019-02-28 09:14:41', 0, NULL),
(601, 'حازم خالد صبرى حسين', 9, 10, '30001011858156', '$2y$10$M2j0D.KU6fkI988PcUTQRuKfsGj8Yg8Pa8xnRu9dlD8uwvtiev1z.', '29706142500433', '1', '2017-67', '123456556', 633, '2019-02-28 09:14:41', '2019-02-28 09:14:41', 0, NULL),
(602, 'حسام احمد ابراهيم فرغلى', 9, 10, '30001011858156', '$2y$10$B41EDDYH4AcurAYtR8MUauFZZttx.qbFLQ6z85.bo/ujAqO2y/amq', '29709012504631', '1', '2017-68', '123456556', 634, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(603, 'حسام صلاح حسين يوسف', 9, 10, '30001011858156', '$2y$10$VGqKwghaA0HVtvGH0lm.PulS1XqsMQvr6whEOCurXGW0Lln1tt88u', '29805022502732', '1', '2017-69', '123456556', 635, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(604, 'حسام محمد عبد الرحيم رياض', 9, 10, '30001011858156', '$2y$10$px/LjfmFfJ8fZ3RG3Zr8YeBfCuK.7BJluboKfMNTNvVYuqJlt7gYW', '29804152500735', '1', '2017-70', '123456556', 636, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(605, 'حسن كمال محمد محمد', 9, 10, '30001011858156', '$2y$10$rv3v/X4ZOOJuROpsh819BugMv4JCrxmVzP5mDWSHV3PnmwXItD3Ye', '29808012510272', '1', '2017-71', '123456556', 637, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(606, 'حسن محمد صوبى كريم', 9, 10, '30001011858156', '$2y$10$HKrKucu5pkZ8x.B59GTC4OYBR81dmUxNl3mnl8tdwbiwBaTi70dwO', '29601072501376', '1', '2017-72', '123456556', 638, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(607, 'حسناء شعبان محمد حسانين', 9, 10, '30001011858156', '$2y$10$Hw1KSg91A8OBwzuh9Pv4uenAhF9/qzHCHv2wsrnoz2/sZjQUD60ke', '29809202502728', '1', '2017-73', '123456556', 639, '2019-02-28 09:14:42', '2019-02-28 09:14:42', 0, NULL),
(608, 'حسين رأفت محمد حسين', 9, 10, '30001011858156', '$2y$10$nDOID.LEgQ5Alv2W955N8.SOrFIyCP4np1ibdwKCsLpOgsK6CpdXS', '29802132501058', '1', '2017-74', '123456556', 640, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(609, 'حماده فتحى عبد الجواد حسانين', 9, 10, '30001011858156', '$2y$10$/ddeSF2nhaBPgXRCgBhaAuwVN9UECkuZ2t2xnJ6Ddy2CxsAjYTNG6', '29702122501071', '1', '2017-75', '123456556', 641, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(610, 'خالد عبد الحفيظ احمد خلاف', 9, 10, '30001011858156', '$2y$10$ZugGUXzpjQ6J0ba7ozuYHugNLkQihzqvB/ErpF48dzUor9NOVWPJ2', '29808192501837', '1', '2017-76', '123456556', 642, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(611, 'خلود حسن ربيع صالح', 9, 10, '30001011858156', '$2y$10$myHBQa3JWeyhNSci2LmeXOOKMCileayfZE3Ymm5wTwG0qijtMCBdm', '29804112500228', '1', '2017-77', '123456556', 643, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(612, 'رانيا بهاء محمد صلاح', 9, 10, '30001011858156', '$2y$10$CvhjU7bnZqCt4q.WUQaVWelnGAFCmuaGp8iavFs7TCJqXW3wn6vIW', '29809012503361', '1', '2017-78', '123456556', 644, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(613, 'رانيا حسن عبد الحميد خليل', 9, 10, '30001011858156', '$2y$10$V.9hWIJfwBiPiBUE/yq/FOm//gCk5kg1lywOhmdpovPN5G8L03bSe', '29701012508988', '1', '2017-79', '123456556', 645, '2019-02-28 09:14:43', '2019-02-28 09:14:43', 0, NULL),
(614, 'رجاء ابو زيد عبدالحليم يوسف', 9, 10, '30001011858156', '$2y$10$AO/uCAXOoePhspg4RWN3aOimdL3KlMyGm9VCXIBNsrZtvotCcLUTu', '29706202501507', '1', '2017-80', '123456556', 646, '2019-02-28 09:14:44', '2019-02-28 09:14:44', 0, NULL),
(615, 'رحاب عبد العظيم رمضان احمد', 9, 10, '30001011858156', '$2y$10$qkkUM5VHk2ymNV6JmImLgu4pRrrcnYsXYpbBC37A9m251igp8Eryq', '29804012502908', '1', '2017-81', '123456556', 647, '2019-02-28 09:14:44', '2019-02-28 09:14:44', 0, NULL),
(616, 'رفعت حسنى سيد صالح', 9, 10, '30001011858156', '$2y$10$qgNkJBUXNiJWqDl9WbpbweL79mOwfuJR3VVpfZViSCd2MImuRrZmm', '29511012505195', '1', '2017-82', '123456556', 648, '2019-02-28 09:14:44', '2019-02-28 09:14:44', 0, NULL),
(617, 'رمزي يوسف لويز جيد', 9, 10, '30001011858156', '$2y$10$1EuzEqXxfGNe5gRFxbqFzuHkWAx2HmpPdsTmUZa1quMIuj1c8NC02', '29804152503114', '1', '2017-83', '123456556', 649, '2019-02-28 09:14:44', '2019-02-28 09:14:44', 0, NULL),
(618, 'رمضان سيد حامد احمد', 9, 10, '30001011858156', '$2y$10$j30yKFodczpM3LeRn8esrOIox9s0.fy4CpzKsmgeWgeU0VN40OTAK', '29802012513818', '1', '2017-84', '123456556', 650, '2019-02-28 09:14:44', '2019-02-28 09:14:44', 0, NULL),
(619, 'ريمون اشرف عوض نجيب', 9, 10, '30001011858156', '$2y$10$K6Xq369T87hVkMmF9bLc.OnelmIhCEp.peBFLS91ygyl3K9Z6yWpe', '29808172501377', '1', '2017-85', '123456556', 651, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(620, 'ريهام انور شوقي محمد', 9, 10, '30001011858156', '$2y$10$PHc2M5LGaO0tlSXExMyVH.3lTDhQmW067bg9wFh75y.Jm8kNPbXTS', '29705242501589', '1', '2017-86', '123456556', 652, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(621, 'ريهام عزت احمد عمار', 9, 10, '30001011858156', '$2y$10$5/8Ct92OiGX68pT2ki8VQ.EF0hmgAZ80tBZAY2HuW1N3OCkclLWtu', '29610012502828', '1', '2017-87', '123456556', 653, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(622, 'ريهام محمد محمود حسين', 9, 10, '30001011858156', '$2y$10$BUsM6qefPkzg4ZR1YIpnZuWXI0OkAI1BeNQUyijP8CvM6A8wNO3aK', '29704212401222', '1', '2017-88', '123456556', 654, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(623, 'ساره مدحت رفاعى عبد الرحيم', 9, 10, '30001011858156', '$2y$10$B8G8UD2CCrue3/xaQRvwwO91mYvzuTa5PjDy5gaiSnHg7gHSIr/NO', '29811182502348', '1', '2017-89', '123456556', 655, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(624, 'ساندرا رأفت لويز جيد', 9, 10, '30001011858156', '$2y$10$dZlMNrpspc7wis6FzUVDN.NoR2S8MGpDnBpPqoVhB5U5ym0YegQNG', '29710202503043', '1', '2017-90', '123456556', 656, '2019-02-28 09:14:45', '2019-02-28 09:14:45', 0, NULL),
(625, 'سيد كمال سيد ابوزيد', 9, 10, '30001011858156', '$2y$10$6tqSdur02v87xKPFfANHgePgoWVmdqhi4Lcwv4NQEeDmxrs8vZ7Le', '29809232501696', '1', '2017-91', '123456556', 657, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(626, 'شهاب الدين حماده احمد عبد ربه', 9, 10, '30001011858156', '$2y$10$mH3Of/VBYZOHROTKQQNYrec/sHTzI0KkJMyFjz9ZSWOjAI4D1qCD2', '29711112501536', '1', '2017-92', '123456556', 658, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(627, 'شيماء علي شحاته علي', 9, 10, '30001011858156', '$2y$10$G318oc0Rz/o/pdCFHHt2bO7gjnrmB7nn6D1GHa6Zy5AAO048FH/1y', '29701022400646', '1', '2017-93', '123456556', 659, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(628, 'شيماء محمد حسن مرسي', 9, 10, '30001011858156', '$2y$10$ajZcgkOWuk0/47RZPLSgEuh4B5BsgP6nqA6L2kjbaLeqyoMQx16hm', '29610122502203', '1', '2017-94', '123456556', 660, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(629, 'صباح نادي احمد حسن', 9, 10, '30001011858156', '$2y$10$yRPVTQYlr3jvJpuH9QV9IOR76oCwTmimErD3IcDGN5.1SnrzpcoXK', '29509252501923', '1', '2017-95', '123456556', 661, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(630, 'صفاء فتحى خلف حسن', 9, 10, '30001011858156', '$2y$10$amHGs7sl25Aba6aqAtxbfOXbVJUe0cEJCynQdEJ7otUpKkqPz7vta', '29702172502842', '1', '2017-96', '123456556', 662, '2019-02-28 09:14:46', '2019-02-28 09:14:46', 0, NULL),
(631, 'ضياء اشرف احمد عبد الرحيم', 9, 10, '30001011858156', '$2y$10$e3.jOWyZMgTwsFNW4Eu4aegYU1K.xibT5b.TAwMb9w98B6mehRcZi', '29710292502113', '1', '2017-97', '123456556', 663, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(632, 'ضياء الدين محمد مخبطلي احمد', 9, 10, '30001011858156', '$2y$10$U98UP.3lYmYHgp8JdNsBceIo1hNWZdwy.8FlPeUm0tffWzRDHetES', '111111111', '1', '2017-98', '123456556', 664, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(633, 'ضياء عبد الحارث سيد علم الدين', 9, 10, '30001011858156', '$2y$10$CEV3kCkE2EjYhVXFMnnD1OTie9mTbsj.KeBd/m/Yj4Mxp2Chhgtre', '29802232502833', '1', '2017-99', '123456556', 665, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(634, 'طارق خالد نفادى عبد الحافظ', 9, 10, '30001011858156', '$2y$10$dxSGf3Vv3ahWq3SmyLY5Y.oTCSA21DQScTBpmIHHBrQf.1aF7yhbq', '29808162502472', '1', '2017-100', '123456556', 666, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(635, 'طارق محمود عبدالرحمن خليل', 9, 10, '30001011858156', '$2y$10$K3Nxe9iq1CaS8DsTffPSuu4f3lbY6s0oezHrBHdxVLHKFmHHZ2lYK', '29606062500379', '1', '2017-101', '123456556', 667, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(636, 'طارق نفادي احمد ناصر', 9, 10, '30001011858156', '$2y$10$YZWOi5HjUudnSzI5YtEnGu4FBINWAACuIwZavF4XIhyB0hwtFojxK', '29612012501531', '1', '2017-102', '123456556', 668, '2019-02-28 09:14:47', '2019-02-28 09:14:47', 0, NULL),
(637, 'عبد الباسط ممدوح محمد محمد', 9, 10, '30001011858156', '$2y$10$1tqDPZjdQD1pCai2SyaPYuVCt3B88/G8pxTy6XDm1u5LyfVqdcTiO', '29809222500799', '1', '2017-103', '123456556', 669, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(638, 'عبد التواب عادل محمد عبدالوهاب', 9, 10, '30001011858156', '$2y$10$WaAt8Vsqf/DCf6h0FDV0JekMLFR3XzgfO0WX7rXRJB42nEo2YV3Aa', '29712122500674', '1', '2017-104', '123456556', 670, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(639, 'عبد الحميد نادى عبد الحميد محمد', 9, 10, '30001011858156', '$2y$10$Nbv887JiPpfk4SBjmdmw..itqMTBTGTdCAnXBweGWvISi4wQnpsb2', '29610272501175', '1', '2017-105', '123456556', 671, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(640, 'عبد الرحمن اشرف فتحى محمد', 9, 10, '30001011858156', '$2y$10$cZBUHDhcNcHajg3gG1CqhuEWxXpfprkuPJsn6QWtxxIY5DRNew66G', '29803132500899', '1', '2017-106', '123456556', 672, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(641, 'عبد الرحمن بدر سبيع محمود', 9, 10, '30001011858156', '$2y$10$dK2o9J38aeSlgnvUlmXR7uHpo7Z6YubvUeyPIePKC.MDFKsBb5NSe', '29809012502179', '1', '2017-107', '123456556', 673, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(642, 'عبد الرحمن حسين احمد شحاته', 9, 10, '30001011858156', '$2y$10$youe6EOSuTyeqASmSWuc/.3haWiOAp0F.3UllEhXsh6dkPkBqhXSa', '29510152505997', '1', '2017-108', '123456556', 674, '2019-02-28 09:14:48', '2019-02-28 09:14:48', 0, NULL),
(643, 'عبد الرحمن حنفى قطب ابراهيم', 9, 10, '30001011858156', '$2y$10$mka/sU2HnL8zSs3hAVi.J.HsTZ3SyTX0OPGp7BBK.Hp1T7wOg1rKO', '29807062500255', '1', '2017-109', '123456556', 675, '2019-02-28 09:14:49', '2019-02-28 09:14:49', 0, NULL),
(644, 'عبد الرحمن عادل عبد الرحمن احمد', 9, 10, '30001011858156', '$2y$10$BOJyY5of/52xE9s86yOUhOxnVx2OukSL/JDt0t.mEK9NzkAw6tDsy', '29809022501111', '1', '2017-110', '123456556', 676, '2019-02-28 09:14:49', '2019-02-28 09:14:49', 0, NULL),
(645, 'عبد الرحمن محمد عبد الرحمن خليل', 9, 10, '30001011858156', '$2y$10$GmWEKe6QJyh79y3er5S3gO/ZvIzyggkwc.G3nG.TRzpuPAJgq0Bvu', '29805252503011', '1', '2017-111', '123456556', 677, '2019-02-28 09:14:49', '2019-02-28 09:14:49', 0, NULL),
(646, 'عبد الساتر حسن عبد الساتر حسين', 9, 10, '30001011858156', '$2y$10$xMajvba0O8ldav3BPeR7w.GqS0uU48UfmoHTavv1LSBPOaX2yHmv.', '29809072502895', '1', '2017-112', '123456556', 678, '2019-02-28 09:14:49', '2019-02-28 09:14:49', 0, NULL),
(647, 'عبد الله محمد جمال على', 9, 10, '30001011858156', '$2y$10$asuhAopB.UUTVF0nsjOOzuI9cGkw5io0IfTViWRlFKHZlUJlJpvTC', '29807022500732', '1', '2017-113', '123456556', 679, '2019-02-28 09:14:49', '2019-02-28 09:14:49', 0, NULL),
(648, 'عثمان عمر عثمان احمد', 9, 10, '30001011858156', '$2y$10$.U7.gwUwahPcHD9f8.Oowea0wvBYC5KPnmCWpXbbjRYQpv3dpx0Ty', '29711072500337', '1', '2017-114', '123456556', 680, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(649, 'عصام جميل حسن عبد الناصر', 9, 10, '30001011858156', '$2y$10$EKlt2OmjeFH1D8kvEJmmw.Bqme0WUJmWIXsVWwXN80cgrbzq2rO3W', '29711252502311', '1', '2017-115', '123456556', 681, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(650, 'عصام شعبان غانم بلال', 9, 10, '30001011858156', '$2y$10$7MnnbL9Q8324WmHq5dC4Mu9ypX9ZKb6boe5jsVP2ogcIuaL6s96xC', '29612142501095', '1', '2017-116', '123456556', 682, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(651, 'علاء الدين السيد  عابدين صديق', 9, 10, '30001011858156', '$2y$10$KnRORiQCMzCkpgCapNtTk.naf67eRFD9hee4..J5VFDbNkDloWZp2', '29801012635992', '1', '2017-117', '123456556', 683, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(652, 'علاء الدين ربيع سالمان احمد', 9, 10, '30001011858156', '$2y$10$.s8dK.//3JIaEIVwBJOrK.YOIywgiQu1owrO6EU4grm7Xy6WvuBFS', '29712022501738', '1', '2017-118', '123456556', 684, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(653, 'على احمد على حسين', 9, 10, '30001011858156', '$2y$10$xB2RXkuboegvZOVpnMOf3eyMI6ucbmq824SYmOQfXF8AKfuHRPHkG', '29712012509757', '1', '2017-119', '123456556', 685, '2019-02-28 09:14:50', '2019-02-28 09:14:50', 0, NULL),
(654, 'على كامل على يوسف', 9, 10, '30001011858156', '$2y$10$PM4FZMUfD7jPj5TL3cFruO4hBmTh6/zl5btM9d5vxb7MoDYK8YIgC', '29707072503975', '1', '2017-120', '123456556', 686, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(655, 'على مدحت على زيدان', 9, 10, '30001011858156', '$2y$10$OXmTbt2PrZYfWN9.WdeWOe7nX9qw1iStOBt6bx/vs0lyjE5MzutHy', '29609012509794', '1', '2017-121', '123456556', 687, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(656, 'علياء صالح على ابوزيد', 9, 10, '30001011858156', '$2y$10$p6NMokdK9zkl8Ou5UfONaOYs4557Ls1BQ6z1x94BlFM/eaO2CS4NK', '29802192502321', '1', '2017-122', '123456556', 688, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(657, 'علياء فرج عبد الحميد فرج', 9, 10, '30001011858156', '$2y$10$rXL4wNwVQlf8LaRp2V.8L.ZC3H3mJzgkkK/RAljaRtv0zLkLuMK2i', '29809192501809', '1', '2017-123', '123456556', 689, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(658, 'عماد زكريا مختار على', 9, 10, '30001011858156', '$2y$10$6lx3EOOqTu9USUJeBZXMDumZTqF4sq11DoQhcoPACoemQliu0YB.e', '29704222503376', '1', '2017-124', '123456556', 690, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(659, 'عمرو عادل راضى محمود', 9, 10, '30001011858156', '$2y$10$jbtZc7Jt..mh8nfK8AU3P.HKA/.m.ENnU0ou4ELQPAsokkLfqbosu', '29712142502436', '1', '2017-125', '123456556', 691, '2019-02-28 09:14:51', '2019-02-28 09:14:51', 0, NULL),
(660, 'عمرو عبد المالك ثابت عثمان', 9, 10, '30001011858156', '$2y$10$aVA08lkjxnOGtmP9LrFzEe7F7JL7Z81.5D.CeEIAa0df1sA1rTmy.', '29803012504955', '1', '2017-126', '123456556', 692, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(661, 'عمرو محمد محمد نصر', 9, 10, '30001011858156', '$2y$10$4vPhXuXsZXP1cQbZVQL4yeZlR33JDsr4J4hqMAZrevBvfM80qvbKi', '29704062500375', '1', '2017-127', '123456556', 693, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(662, 'فاطمه الزهراء رأفت عبد الرزاق احمد', 9, 10, '30001011858156', '$2y$10$WxQ9MS9zVF5b3pQQyvWqouV/gfy.VpVyiokfPunU5Esh1L5FtofNW', '29708282500223', '1', '2017-128', '123456556', 694, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(663, 'فيفيان راتب بشاى بشاى', 9, 10, '30001011858156', '$2y$10$NJW2toeryALHfWVVr9P6A.dl5n.e06mzaRVxl.DOqEdwaQ1sMPaBu', '29804122501761', '1', '2017-129', '123456556', 695, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(664, 'كاترن هنى ادوار تادرس', 9, 10, '30001011858156', '$2y$10$sgOELTKwTdLldxANsI7op..adeeKOyG0e.XBBnH3y8JIRhrklPTEm', '29712062500424', '1', '2017-130', '123456556', 696, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(665, 'كيرلس عاطف رياض ميخائيل', 9, 10, '30001011858156', '$2y$10$.0yySuBI3ASKG3g58dvxKuFsBpFOcEWINUCV8jlF83Qal49q3dbY6', '29711032502159', '1', '2017-131', '123456556', 697, '2019-02-28 09:14:52', '2019-02-28 09:14:52', 0, NULL),
(666, 'كيرلس نصرى تاودروس توفيق', 9, 10, '30001011858156', '$2y$10$hTYYW.Dmo57NQBrxDtvaMepqbxo1KhMPzMWD5CZh6z7ItCPbMXxmu', '29709112501035', '1', '2017-132', '123456556', 698, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(667, 'مؤمن بدرى محمد عامر', 9, 10, '30001011858156', '$2y$10$bGSYVKZV2blluKwlIgibleOKsyPP688t9yt/3/37OBRg88aww/Yk2', '29704122501759', '1', '2017-133', '123456556', 699, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(668, 'مادونا عدلى نجيب شحاته', 9, 10, '30001011858156', '$2y$10$AjkyRPM.FGJOSn3Zyw6aqeOFdnL9AehM/9cjj1mg6Mt0eax9CMAde', '29712292400305', '1', '2017-134', '123456556', 700, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(669, 'ماهر كميل جرجس اخنوخ', 9, 10, '30001011858156', '$2y$10$VnNz9p8568BdS2A/IzAkAOaDUIEiQviBWet1Q9mJFuJD02HGBl58i', '29802212500893', '1', '2017-135', '123456556', 701, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(670, 'مايكل زكريا حليم نسيم', 9, 10, '30001011858156', '$2y$10$micb6b0cwAV6PLK6hUgJCOGePOXyMLD2.bsxISKY/7xHszvzFssdK', '29712012509552', '1', '2017-136', '123456556', 702, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(671, 'مجدى ابراهيم فولى حمدان', 9, 10, '30001011858156', '$2y$10$DvHI5emwDF3ltYgGlfYKue6eRqaIMRLGFHKNbZmkqqXSOdpjhluEm', '29712072502816', '1', '2017-137', '123456556', 703, '2019-02-28 09:14:53', '2019-02-28 09:14:53', 0, NULL),
(672, 'محمد ابوبكر احمد عبد الرحمن', 9, 10, '30001011858156', '$2y$10$nazASiaQwatXu/CLlOY40OjPd.PWItlSieq7d0ALAHQ09OGHgTXju', '29805182500337', '1', '2017-138', '123456556', 704, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(673, 'محمد ابوغدير عبد الامام عبد النعيم', 9, 10, '30001011858156', '$2y$10$LlGhnfqKUzn1B5VeFxeiNOgrDB059MawIEci2btZKQbhwtkyjQtcy', '29810012504978', '1', '2017-139', '123456556', 705, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(674, 'محمد احمد حسانين عرابى', 9, 10, '30001011858156', '$2y$10$V6cGNGyqffE.GiaC3OI4Yu2PdRXF4Jzh9x31UW9r1bEuJm4MMgJTi', '29809072500299', '1', '2017-140', '123456556', 706, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(675, 'محمد احمد سمير دياب', 9, 10, '30001011858156', '$2y$10$iVdMIm765ARYEdLvlsxm8eDrK2OxcymPM1oavdSwDNWnq/uGUCkRS', '29609212504037', '1', '2017-141', '123456556', 707, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(676, 'محمد احمد محمد حسن', 9, 10, '30001011858156', '$2y$10$HG0.Jg9IOMrnhiF09m4CwOQADs6UGa5sG8d6EToLPdMpG/ZUMleBK', '29609082501715', '1', '2017-142', '123456556', 708, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(677, 'محمد احمد محمد نصوح عمر', 9, 10, '30001011858156', '$2y$10$0UDgQgrmZca5f3HT8SqgT.KG2ni2RlIm5MNGqC2T2JAA9jTj8IcYy', '29701232401912', '1', '2017-143', '123456556', 709, '2019-02-28 09:14:54', '2019-02-28 09:14:54', 0, NULL),
(678, 'محمد بدوى محمد عبد العال', 9, 10, '30001011858156', '$2y$10$QEXULK26GbFiQd2ZnCc0gePjbScnfLq96ekzKwy385EhN6jit7Cfa', '29701252501956', '1', '2017-144', '123456556', 710, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(679, 'محمد حسين على محمد', 9, 10, '30001011858156', '$2y$10$Z0LsaYYYKYwPCrFitrsPQepE7ka1gnkI.GBdQL7lHnl399yR2Thr.', '29803072503273', '1', '2017-145', '123456556', 711, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(680, 'محمد حمدى حسن حنفى', 9, 10, '30001011858156', '$2y$10$/clmdGukZlw0mY.CvVJr..Iw6iumNKCuooJ2DU3qw0kGqsu/gEkfm', '29801062502535', '1', '2017-146', '123456556', 712, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(681, 'محمد رفعت حسن ابراهيم', 9, 10, '30001011858156', '$2y$10$DCCdBndXf49mwG4xPS9tKuQfGFVrb5HS7g7aZOpBZpmsd0ruWraxC', '29807042501956', '1', '2017-147', '123456556', 713, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(682, 'محمد سمير محروص فراج', 9, 10, '30001011858156', '$2y$10$QU2nXnjEmxiwQKFPtkTlxeg4AQmrJaUSEfRorZLOr4OH9/TXcZaxC', '29809162600152', '1', '2017-148', '123456556', 714, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(683, 'محمد سيد محمد حسين', 9, 10, '30001011858156', '$2y$10$jISAOd27VDKAbWHYLRfBNe7zTD60UrNSlyRFJ3ON5caf66KzjP5ey', '29704052502752', '1', '2017-149', '123456556', 715, '2019-02-28 09:14:55', '2019-02-28 09:14:55', 0, NULL),
(684, 'محمد شريف احمد محمد', 9, 10, '30001011858156', '$2y$10$3jnACIxTrA9lkpbPCPWituTlIRDslzpPgnygGvStb0tC8wFTp.x9i', '29808162500135', '1', '2017-150', '123456556', 716, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(685, 'محمد صلاح الدين عبد الله احمد', 9, 10, '30001011858156', '$2y$10$Gw.6Ehm2Ypz2cx7bJUZMMODbOPEQEhGgUwDNd6YMlkmOBPrLVEcny', '29809032501497', '1', '2017-151', '123456556', 717, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(686, 'محمد عاطف حامد عمر', 9, 10, '30001011858156', '$2y$10$HvKhz.dc4Ly1gRKDIioR8up0EpaTseBp7EMnXeeTzNIdAQAcugaje', '29805282500393', '1', '2017-152', '123456556', 718, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(687, 'محمد عبد العزيز قطب سيد', 9, 10, '30001011858156', '$2y$10$7JKB/xNG6j6iLf1JrfqZB.G6IVh7ib11r9My9Xj0flZk.GnkKyZ/a', '29804102500238', '1', '2017-153', '123456556', 719, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(688, 'محمد عبد الله قاسم علي', 9, 10, '30001011858156', '$2y$10$hc.8uPh6k0Z8xZpDhK/2W.cPdiV/IY0UEpSpHBgT79EogRXwKUTPO', '29703032500579', '1', '2017-154', '123456556', 720, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(689, 'محمد عبد المحسن عبد الرحيم مصطفى', 9, 10, '30001011858156', '$2y$10$Hka7200fTYFzHnjh82rKWuetWSvMmdFJx5.QE/Kvf.LOAEzNW9q6C', '29804102500076', '1', '2017-155', '123456556', 721, '2019-02-28 09:14:56', '2019-02-28 09:14:56', 0, NULL),
(690, 'محمد عبد المعطى احمد عبد العال', 9, 10, '30001011858156', '$2y$10$hyjxVFeHwh79hxF5UcQlL.Wob6in/OSjnjvGQYw9bPsMquNnldJJa', '29808312501178', '1', '2017-156', '123456556', 722, '2019-02-28 09:14:57', '2019-02-28 09:14:57', 0, NULL),
(691, 'محمد عبدالعظيم عبده عبدالحافظ', 9, 10, '30001011858156', '$2y$10$GgQF1US6EZQpd9Qc.MILaeSUvGlVSp8aBpvBS2Urz9Axe2rvOeC7m', '29612272500392', '1', '2017-157', '123456556', 723, '2019-02-28 09:14:57', '2019-02-28 09:14:57', 0, NULL),
(692, 'محمد عطيه محمد حسين', 9, 10, '30001011858156', '$2y$10$mYCj0LczsOzm5jAAFxEwWuNUOpYr2hAGJavZvV6DlUbjJEcyshVK2', '29512012503997', '1', '2017-158', '123456556', 724, '2019-02-28 09:14:57', '2019-02-28 09:14:57', 0, NULL),
(693, 'محمد على عبد العزيز منصور', 9, 10, '30001011858156', '$2y$10$n74M1vwhj1mxZ2yOgMkl.uElcjtyHGxP/z7z7q1zBlSzSV6RQFh7O', '29809152505038', '1', '2017-159', '123456556', 725, '2019-02-28 09:14:57', '2019-02-28 09:14:57', 0, NULL),
(694, 'محمد على محمد زكى', 9, 10, '30001011858156', '$2y$10$Wis13yTFRwp3bgT1XxY.0uyyyqN8SD1tnQjrDMr02nr.WBfGg94uq', '29606022501091', '1', '2017-160', '123456556', 726, '2019-02-28 09:14:57', '2019-02-28 09:14:57', 0, NULL),
(695, 'محمد على محمد عاشور', 9, 10, '30001011858156', '$2y$10$Atwky3NtgSFE2lCiZECvj.SEj5TejW/1zh1E5.TpN/kwodxECFVzS', '29808012501877', '1', '2017-161', '123456556', 727, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(696, 'محمد علي محمد عبدالعال', 9, 10, '30001011858156', '$2y$10$pBSItrnxlILlL94blx5dQefeXtF8ml9eT3LYknzqRG8ucj3p4HBDe', '29710242500395', '1', '2017-162', '123456556', 728, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(697, 'محمد على محمود محمد', 9, 10, '30001011858156', '$2y$10$6.tCyQExgtUjcbTyHJ0rFevD7Fo7wwbrT/ZGVAjTS6MqfzqG40rOy', '29711072501074', '1', '2017-163', '123456556', 729, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(698, 'محمد عمران حسن عبد الرحيم', 9, 10, '30001011858156', '$2y$10$bhQuHKpypI.RC3oWrTESpO2AlZUYrh.kmTUmqq8VDJC.YcH1wcGvS', '29803222501657', '1', '2017-164', '123456556', 730, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(699, 'محمد كمال هاشم عبد العال', 9, 10, '30001011858156', '$2y$10$.TzxIGyNeYz0x/hfEAOQWuafKmPKBnr6yOhlcOrAhD3WKlL6A6j4u', '29805022503933', '1', '2017-165', '123456556', 731, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(700, 'محمد محمود سيد جلال', 9, 10, '30001011858156', '$2y$10$TVYrkb1LmJppU1ypzX7GGu9i7DhJHCI3pFagaYsdNnlThBJnFwDKm', '29512022501133', '1', '2017-166', '123456556', 732, '2019-02-28 09:14:58', '2019-02-28 09:14:58', 0, NULL),
(701, 'محمد مصطفى حسن عبد العزيز', 9, 10, '30001011858156', '$2y$10$HlXwDgMX/4/UhmL77qdw.eEQKs3ICR.WZBLLc9.HJEO//vRfEY1HC', '29803092502796', '1', '2017-167', '123456556', 733, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(702, 'محمد وحيد احمد محمد', 9, 10, '30001011858156', '$2y$10$PDtEwdHIPLg0X38fxZF.hOBwOb49d1C0y2uWJhrtKGquokjyfqX4u', '29711122503197', '1', '2017-168', '123456556', 734, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(703, 'محمود احمد عطيفي داده', 9, 10, '30001011858156', '$2y$10$/q0PBbhT4etwF5zEMghIgu0zUwRJu4leytBtA4hS4jars.hJhy2mK', '29802282501391', '1', '2017-169', '123456556', 735, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(704, 'محمود جمال الوردانى السيد', 9, 10, '30001011858156', '$2y$10$jbmbPXAMS11MlVjKwlfHfewXZ8qwGJOcjAfTGdrhan...DfbD0ahO', '29803222503358', '1', '2017-170', '123456556', 736, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(705, 'محمود جمال سيد ظاظا', 9, 10, '30001011858156', '$2y$10$3iV3M4AGkU2zcWTK6nyEI.5K23mve2NR6PvvTzY6xSVIwcLsy.JWW', '29805012506578', '1', '2017-171', '123456556', 737, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(706, 'محمود جميل اصيل عبد الغنى', 9, 10, '30001011858156', '$2y$10$J3qTXm9OvV/gs6nmxiNtI.B6DJg2L2agy0wwDzUEVzBImCUoAjDIy', '29804162500491', '1', '2017-172', '123456556', 738, '2019-02-28 09:14:59', '2019-02-28 09:14:59', 0, NULL),
(707, 'محمود حسين قطب محمد', 9, 10, '30001011858156', '$2y$10$wi6NrHkUae6odbp1//JtoujptLsGchIDaJYGVTOz/cjloeIYGYx8m', '29701182501074', '1', '2017-173', '123456556', 739, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(708, 'محمود دياب محمد دياب', 9, 10, '30001011858156', '$2y$10$2X9MkaccrpXe1zjj7//oP.6M4WXQ3V3g3iNJtjOsROPdp1FdocI6e', '29809202502477', '1', '2017-174', '123456556', 740, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(709, 'محمود صلاح محمود محمد محمود', 9, 10, '30001011858156', '$2y$10$PyrVxjpPHTWi085ytvXx1uSW.4OrImTCeTv7IIIH7lpXz1aHFDbqC', '29706142502011', '1', '2017-175', '123456556', 741, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(710, 'محمود عبد الله عبد الحافظ صالح', 9, 10, '30001011858156', '$2y$10$oVR8Nhyc8VO9fdwdncz9gO.YRWK3ejGjsvhMSvVxhyn9Ye6YQ7PI6', '29702122503171', '1', '2017-176', '123456556', 742, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(711, 'محمود عثمان عبد الحسيب عبد الظاهر', 9, 10, '30001011858156', '$2y$10$31tujUWxQZ.ZyaV3tsWvR.J8q7Sz9iaqAV4ox5G7rFuMhWAHrMqIa', '29708252500679', '1', '2017-177', '123456556', 743, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(712, 'محمود عصام محمد محمد', 9, 10, '30001011858156', '$2y$10$96OYASjj4.v3CARvPjwCpe2i/S6mO5bTeFpweDEk3bBuFaMzfEWgW', '29804302501239', '1', '2017-178', '123456556', 744, '2019-02-28 09:15:00', '2019-02-28 09:15:00', 0, NULL),
(713, 'محمود عيد منصور على', 9, 10, '30001011858156', '$2y$10$M1Tqcu0j/ZrZ4H6ILYcFre7yb/ZVjqHVp/OHouMzq5ELcBMQJyCyC', '29803212500911', '1', '2017-179', '123456556', 745, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(714, 'محمود محسن عبد الكريم احمد', 9, 10, '30001011858156', '$2y$10$ZrfCMwj2jlvqvXT481eqxO4NSfUg4tGWqQq3JBvuglUmDlb0Bd6TC', '29805082500437', '1', '2017-180', '123456556', 746, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(715, 'محمود محمد محمد مراد', 9, 10, '30001011858156', '$2y$10$y/IYDoB8F4P9I7wDrPrkAujiZp7yBthC0BvCLBBOj9yGy4wssoks6', '29712122501379', '1', '2017-181', '123456556', 747, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(716, 'محمود مهران شعبان عمارة', 9, 10, '30001011858156', '$2y$10$8CKdhEdbrQNs2j787ppYp.3IM9P1oeqhU3taPsqhI6B36qfoqObsO', '29810012515198', '1', '2017-182', '123456556', 748, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(717, 'محمود يحيى ثابت حماد', 9, 10, '30001011858156', '$2y$10$/o4vUPrFCSQtmKZK9u14eO65XAXx.6iqytJiK1qgr55C1EKC9/YZ2', '29803162500699', '1', '2017-183', '123456556', 749, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(718, 'مروان عادل محمد على', 9, 10, '30001011858156', '$2y$10$Ia1FY0lxZpwOwFYSzrhNxOZ3iQ6YEn1c4e65yEmQZPg1gQGc4SU1O', '29808082505454', '1', '2017-184', '123456556', 750, '2019-02-28 09:15:01', '2019-02-28 09:15:01', 0, NULL),
(719, 'مروان محمد نصار محمد', 9, 10, '30001011858156', '$2y$10$zl8jDLaHAVFOPSsj6hy7ouIz6QNPlRUaImM9Y4Ke6OG.tRz3tp1pi', '29611042502934', '1', '2017-185', '123456556', 751, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(720, 'مريم عاطف قيصر القمص ابادير', 9, 10, '30001011858156', '$2y$10$b.MoeAvgoYkj2IP/2wBgYeun/BjJjn7HqybeYGnJe.4coMcjcYIYq', '29708232501865', '1', '2017-186', '123456556', 752, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(721, 'مريم ماهر فرج الله عطيه', 9, 10, '30001011858156', '$2y$10$zruD8Pkepo7spgi0iu0aceyEx00MIJxdRsPC6CvKryem3cFc9dFGq', '29802102501363', '1', '2017-187', '123456556', 753, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(722, 'مريم محسن محمد المصرى', 9, 10, '30001011858156', '$2y$10$bobqn73FOi31GCgIXOqf8e5MhyRWhTt39sj02YfQbGYSPeB2lKBQu', '29809012504848', '1', '2017-188', '123456556', 754, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(723, 'مصطفى احمد حلمي محمد', 9, 10, '30001011858156', '$2y$10$kU5U0l3z/s06xT/8PQ1ppeAp4O71ATCbM92MY6yq5OOZ8Sag8Fn2S', '29709012510274', '1', '2017-189', '123456556', 755, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(724, 'مصطفى احمد محمد حسين', 9, 10, '30001011858156', '$2y$10$NUl1RLKLLuHw2pWHUEyh2.J6sKRTdaGkKfVFZSy1FbctAaQ3PFe6e', '29808172500494', '1', '2017-190', '123456556', 756, '2019-02-28 09:15:02', '2019-02-28 09:15:02', 0, NULL),
(725, 'مصطفى جمال احمد عبد الجواد', 9, 10, '30001011858156', '$2y$10$K9uDChXOLSAU2OtkeBEEQulDxUUe2xs4BEZpMuI2M0BibgT4iGqV6', '29606042500318', '1', '2017-191', '123456556', 757, '2019-02-28 09:15:03', '2019-02-28 09:15:03', 0, NULL),
(726, 'مصطفى شعبان عبدالغني عبدالمتجلي', 9, 10, '30001011858156', '$2y$10$hYLkmUKH9FAej296yhVLJO1Uh5auFX5gRBrHy.UTFZxbSYj6R.ZT6', '29704082500398', '1', '2017-192', '123456556', 758, '2019-02-28 09:15:03', '2019-02-28 09:15:03', 0, NULL),
(727, 'مصطفى علاء الدين امان الله يوسف', 9, 10, '30001011858156', '$2y$10$xU6QlJwCzETQDwLBSqfm1.8xP1M2eUHekWAHm3srgAAcv8y8fFfYu', '29709072500111', '1', '2017-193', '123456556', 759, '2019-02-28 09:15:03', '2019-02-28 09:15:03', 0, NULL),
(728, 'مصطفى محمد صديق محمود', 9, 10, '30001011858156', '$2y$10$i20vhoAJtrpQv3m8PRnZhuL4LKUsaggTCDuUG7SVTWiNHDXnoRZV6', '29808012510396', '1', '2017-194', '123456556', 760, '2019-02-28 09:15:03', '2019-02-28 09:15:03', 0, NULL),
(729, 'مهاب صفوت عياد بشته', 9, 10, '30001011858156', '$2y$10$Cbw1kwUZUAcBADEW4Ikx7.NmiWqrKivdtjWKg5gbUalJpiFgpH46.', '29701162500098', '1', '2017-195', '123456556', 761, '2019-02-28 09:15:03', '2019-02-28 09:15:03', 0, NULL),
(730, 'مورين ثروت حبيب كيرلس', 9, 10, '30001011858156', '$2y$10$T.PPljtkGWGr4zBSJWngiOBJM3ku1ks8gSFgaWThRjpUTBuMG.ZsS', '29702152506868', '1', '2017-196', '123456556', 762, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(731, 'ميلاد شاكر ديب شاكر', 9, 10, '30001011858156', '$2y$10$EY3OdcD0lOgh6dhLv/aane4G791FAk74jNYMCUraDYF7gQrmGC2qm', '29803012500551', '1', '2017-197', '123456556', 763, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(732, 'مينا زهجر عبد الملاك عبد المسيح', 9, 10, '30001011858156', '$2y$10$IFsHB/hKrvFCAzWvENGw/OfKP7OSbjUX1vgNbH6uahWmQjbpdhyhq', '29610132502058', '1', '2017-198', '123456556', 764, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(733, 'مينا ماهر صديق ابراهيم', 9, 10, '30001011858156', '$2y$10$6yPWL8J9oCU2zzhEqg9vpu6xAFfXRAkglkv1oT3.Ai7q1liDIxvm6', '29612172500637', '1', '2017-199', '123456556', 765, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(734, 'نوح نبيه نوح صموئيل', 9, 10, '30001011858156', '$2y$10$wj.brzM7HEuFId4rprtAqu2..ZkxtNfXb3SjlMMHQphmX3BmEcjQS', '29803152500712', '1', '2017-200', '123456556', 766, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(735, 'نورهان حمدى عبد الرحمن موسي', 9, 10, '30001011858156', '$2y$10$O7t7Sy00CMt9jnj1tTU7He7bKgMRMacbC40SZotZXb2iBXQ93voaK', '29707192502301', '1', '2017-201', '123456556', 767, '2019-02-28 09:15:04', '2019-02-28 09:15:04', 0, NULL),
(736, 'نورهان فياض عماد عبد الحكيم', 9, 10, '30001011858156', '$2y$10$W1/rz/eRouxXzdwcxDKJm.kSGn4PW/RECXLb6f02AixLsNpjlMqG6', '29709012500503', '1', '2017-202', '123456556', 768, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL),
(737, 'نورهان نادر محمد محمد', 9, 10, '30001011858156', '$2y$10$1LX8ve2xf3H99uZnBLRgOetL2Sym.K2IYhxQM6QEEeCp5PURcvK5K', '29801012505703', '1', '2017-203', '123456556', 769, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL);
INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(738, 'هاله حمدى خليل محمد', 9, 10, '30001011858156', '$2y$10$rsp.r3y2s/ye9Qi1ieRoRud.XMObPBnd44zbTB5.vx4/.DqtaQ27.', '29703032500625', '1', '2017-204', '123456556', 770, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL),
(739, 'هايدي ثروت عبدالراضي عبدالباقي', 9, 10, '30001011858156', '$2y$10$dPcfmm0se0BY7RcPa0Ejl.V76f2OBygskPeXW5eshKJ2mQ.4urqIm', '29611122501424', '1', '2017-205', '123456556', 771, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL),
(740, 'هبه عبد الرحمن على فرغلى', 9, 10, '30001011858156', '$2y$10$LPh1ZvgT4XBiaNEnEC0V7uiwiYic5wgAQnIaGvi7OArT1NEMmxk.e', '29803212503104', '1', '2017-206', '123456556', 772, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL),
(741, 'هبه عطيه عبدالقادر عبدالراضي', 9, 10, '30001011858156', '$2y$10$oPQpYyr2ONbGC2BMS9MWp.AwjxukLa9jBaYbdoHdHRLtVYG5.5llm', '29701222502105', '1', '2017-207', '123456556', 773, '2019-02-28 09:15:05', '2019-02-28 09:15:05', 0, NULL),
(742, 'هبه ممدوح على حماد', 9, 10, '30001011858156', '$2y$10$2C3SGWUUoceYIloklYcbKe.WkNlXYN5.tXnYN5R6uJZVCilf2mNpy', '29708312501041', '1', '2017-208', '123456556', 774, '2019-02-28 09:15:06', '2019-02-28 09:15:06', 0, NULL),
(743, 'وفاء طارق رزق عبد الصبور', 9, 10, '30001011858156', '$2y$10$rsdquiTwEtfA52s1F2EuXO/UPpoqbMb5uaVK7cbpJMT9z/UKxNzpK', '29712022500928', '1', '2017-209', '123456556', 775, '2019-02-28 09:15:06', '2019-02-28 09:15:06', 0, NULL),
(744, 'يحيى ابراهيم حواس كمبال', 9, 10, '30001011858156', '$2y$10$kUdjL/NhPWEip./hn0p8/OX8AAhxSPX.K69hY.I99UsNE2bCBhqQ2', '29710202501113', '1', '2017-210', '123456556', 776, '2019-02-28 09:15:06', '2019-02-28 09:15:06', 0, NULL),
(745, 'يوحنا جرجس حكيم عبيد', 9, 10, '30001011858156', '$2y$10$zvJLnX6Ub96RFjuy4svYW.izoFqBp/drAiTsRUD7viD4EVLs9UYlu', '29804012503556', '1', '2017-211', '123456556', 777, '2019-02-28 09:15:06', '2019-02-28 09:15:06', 0, NULL),
(746, 'hala taghyan', 9, 10, '12321321', '$2y$10$4/Ze1.955wzBYFXFEAOAveW0XGEcW0kZTZH3yr9IFvLkGbuXcOgpK', '123456789', '1', '2020 -2021', '123', 778, '2019-02-28 09:36:06', '2019-02-28 09:36:06', 0, NULL),
(747, 'ابراهيم محمد محمد عبدالستار', 4, 4, '1212', '$2y$10$.SpKxuX0iEKK3PqCnUpKv.HH52yR/GlqpWV9JVmNg9i1cyjozvbxm', '30001012507993', '1', '2017-18', '123456556', 780, '2019-03-14 13:23:54', '2019-03-14 13:23:54', 0, NULL),
(748, 'احمد اسامه احمد عبدالعال', 4, 4, '1212', '$2y$10$57vKL7jfQbzcFEeDJgRiGO2bRDfQ.ud5AAnb2b3xZSRhfKXJA4a7K', '30003222502857', '1', '2017-18', '123456556', 781, '2019-03-14 13:23:54', '2019-03-14 13:23:54', 0, NULL),
(749, 'احمد خالد سيد احمد', 4, 4, '1212', '$2y$10$Omv6gfJRc2Q5gbX.he3Fqu8AR44PvWxwU4kLAA.EUk40GOynUfGDG', '29911042501311', '1', '2017-18', '123456556', 782, '2019-03-14 13:23:55', '2019-03-14 13:23:55', 0, NULL),
(750, 'احمد صلاح صابر عبداللاه', 4, 4, '1212', '$2y$10$te.4XQByYJuyOH9KyxV8aOB/dBzjKW8PzQysLlU3CbMTFx22eXzny', '30004022601296', '1', '2017-18', '123456556', 783, '2019-03-14 13:23:55', '2019-03-14 13:23:55', 0, NULL),
(751, 'احمد عبدالعال محمد عثمان', 4, 4, '1212', '$2y$10$zSsHGg7lWS74IrUpM/qO4ezVfg2rFGgCNmExR619.DxLJhPhQmDgC', '30007152505131', '1', '2017-18', '123456556', 784, '2019-03-14 13:23:55', '2019-03-14 13:23:55', 0, NULL),
(752, 'احمد محمد محمد فرغلي', 4, 4, '1212', '$2y$10$WeEa5Cai5HMFo5DEhPo/WuWYFxtV8RgT5tDRKRpliG9i2SiJMeVii', '18741', '1', '2017-18', '123456556', 785, '2019-03-14 13:23:55', '2019-03-14 13:23:55', 0, NULL),
(753, 'احمد محمود احمد امين', 4, 4, '1212', '$2y$10$gUe8l99oUR069ereisba3.Ch1RE.5ksXvjgScsr0YUV7r2vIQGzBi', '29812082501499', '1', '2017-18', '123456556', 786, '2019-03-14 13:23:55', '2019-03-14 13:23:55', 0, NULL),
(754, 'احمد يحيا حسين محمود', 4, 4, '1212', '$2y$10$pKB5EA1uelil22mdlD8tW.l2zgQJon3SGDFBGuCQ9GqSQeppysQDG', '30012202600673', '1', '2017-18', '123456556', 787, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(755, 'ارميا نادر حلمى شرقاوى', 4, 4, '1212', '$2y$10$zgb01x2oKScgiyqcERWkUOvIOHhUUXd6.63FVp/RZARMFI9nAyyW6', '30001012679212', '1', '2017-18', '123456556', 788, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(756, 'اروى احمد فكرى محمد حامد', 4, 4, '1212', '$2y$10$.qAVlNw94F2ImtAxavzVJuDodfSPk42r5x3JwtLHbG9uFzZF7/GrK', '29911082503449', '1', '2017-18', '123456556', 789, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(757, 'اسراء عادل على عبدالمتجلى', 4, 4, '1212', '$2y$10$FwxenA1O8QJ7NUKCqB5W0O8j2YcWPZ32xYr9oiORpMLdUmq0A4SmC', '29910082400902', '1', '2017-18', '123456556', 790, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(758, 'اسراء غلاب ابراهيم س', 4, 4, '1212', '$2y$10$vF2aMYhQWSNoY8TCItokheqSb7oeBu/X/9sSdc7QwtgbMFrWo5sIm', '29812012501548', '1', '2017-18', '123456556', 791, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(759, 'اسراء محمد عبداللاه احمد', 4, 4, '1212', '$2y$10$pPpNo8TtqCjKmVzLouHBbeid.Sox1sag82.T1JtCutJ2mnNxwttJ2', '30009162603584', '1', '2017-18', '123456556', 792, '2019-03-14 13:23:56', '2019-03-14 13:23:56', 0, NULL),
(760, 'اسلام رشاد محمود مصطفى', 4, 4, '1212', '$2y$10$Og3iF2Pz/77Yu3sfbtVqu.zf3x8orhQ249poRLr2ZzxwdcHERWPQK', '30011172500397', '1', '2017-18', '123456556', 793, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(761, 'اسماء حامد فرغلى هديه', 4, 4, '1212', '$2y$10$1zujxDNbjbZPnGjz1PrscuKxGtAA6O4/qjknLp46XyMT/mPV2JEt2', '30001062502909', '1', '2017-18', '123456556', 794, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(762, 'اشرقت ماهر محمود عفيفى', 4, 4, '1212', '$2y$10$rJrwuifcS4n.netd6l9KnuFLlX9mkjAbJxYp0jKW2I.keQOfSLPr.', '30011292501508', '1', '2017-18', '123456556', 795, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(763, 'الاء ايمن عبدالغنى محمد', 4, 4, '1212', '$2y$10$VbkiKDnhz3XDkWFRAyU4meEgL9nkgxsKRGN/MWirHBFVnI//FQvzK', '30001292601566', '1', '2017-18', '123456556', 796, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(764, 'الاء عاطف مبارك محمد', 4, 4, '1212', '$2y$10$Fi3JAjJ0F2ipw4WjvQd6we1GNr7c3tv/tMLjjmrAVUQqnaFXOLwCO', '30004292501129', '1', '2017-18', '123456556', 797, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(765, 'الاء محمد ثابت عبدالسلام', 4, 4, '1212', '$2y$10$VQlSHPIUd6ROeKxFnJrtkOQ9qbOPICEgoLOUk9zlTe79a0GXcFwpm', '30004112602186', '1', '2017-18', '123456556', 798, '2019-03-14 13:23:57', '2019-03-14 13:23:57', 0, NULL),
(766, 'الاء محمد عبدالعال عامر', 4, 4, '1212', '$2y$10$OTloiVboOFmQ6Rr0NZOXm.spUk0UGO3capoRKxFMj1J90dnqhaOnq', '29912042500486', '1', '2017-18', '123456556', 799, '2019-03-14 13:23:58', '2019-03-14 13:23:58', 0, NULL),
(767, 'الامير يحيى محمد الامير هاشم', 4, 4, '1212', '$2y$10$0lIvQ3i9J7ETGfFLzLsJnen5gFTHZGl.Vy2rbIHPTJBYBovKA1gXO', '30006292500591', '1', '2017-18', '123456556', 800, '2019-03-14 13:23:58', '2019-03-14 13:23:58', 0, NULL),
(768, 'الحسيني حسن احمد حسن', 4, 4, '1212', '$2y$10$WuwM2NCwC41MviCMPTWFseMHKsTFDEzqUCPYXBgO61Y5WsgR75pMC', '98798708', '1', '2017-18', '123456556', 801, '2019-03-14 13:23:58', '2019-03-14 13:23:58', 0, NULL),
(769, 'الشيماء احمد حسن عبدالرحمن', 4, 4, '1212', '$2y$10$vr1T1X31B3zJGW03mPm1SO.4YfQxb70HwXxcNiWteouRjpvtQenOe', '29903172500284', '1', '2017-18', '123456556', 802, '2019-03-14 13:23:58', '2019-03-14 13:23:58', 0, NULL),
(770, 'الطيب عبدالباسط مرتضى عبدالقادر', 4, 4, '1212', '$2y$10$lGCsoeOtzXRd/EjCUT3KTeZsuqs8sG4DnNMp2lbJfgDjmzt81U/xq', '29911022700814', '1', '2017-18', '123456556', 803, '2019-03-14 13:23:58', '2019-03-14 13:23:58', 0, NULL),
(771, 'امجد منتصر عدلى جبره', 4, 4, '1212', '$2y$10$tTOwF/dlh/tLq/rowW8byeEXAcQ46HX2gaT8ZnpJlyWF43OGPcV6q', '30010012802919', '1', '2017-18', '123456556', 804, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(772, 'انجي نمر توفيق بولس', 4, 4, '1212', '$2y$10$.ZXBgPjh6dwEfdKVgJlJxOx4Z8Caep8KY7mnYRULiQnCX0YHhNhJS', '29903012502329', '1', '2017-18', '123456556', 805, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(773, 'اية الله علاء محمد حسن', 4, 4, '1212', '$2y$10$qIN4jzaA4m0uHwTFA47OB.UAF6IAgWCR6lLjkmbGrC5.I8iZUMzBS', '30002052500424', '1', '2017-18', '123456556', 806, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(774, 'ايرينى سمير هلال جزيري', 4, 4, '1212', '$2y$10$UiKgJ2oz9LRPnOazcVCZveC8PSYA.tZloDizWgRmNkV0G327TnXnS', '29910202502267', '1', '2017-18', '123456556', 807, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(775, 'ايفون مخلوف عوض الله جاد', 4, 4, '1212', '$2y$10$l2vBjoL9jM6LqsIyz/Otru0t3tw1NudSzBkQI.VK6G3BYNFnQEeWa', '29905132602028', '1', '2017-18', '123456556', 808, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(776, 'ايمان حمزه عبدالرؤف محمد', 4, 4, '1212', '$2y$10$KvCKF6FQpez6xlvs70frR.yYP.k6JbNdgELZWwTxwR5NH6RMg.t5W', '30011243200063', '1', '2017-18', '123456556', 809, '2019-03-14 13:23:59', '2019-03-14 13:23:59', 0, NULL),
(777, 'ايمان محمد عيسى رياض', 4, 4, '1212', '$2y$10$ZsbFZg7rX2Hy4NIXhmBvuuVgEHxxb/PQjArIG1vggJ9lQ4IVV9u3u', '30005152504507', '1', '2017-18', '123456556', 810, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(778, 'ايه احمد محمد حسين', 4, 4, '1212', '$2y$10$AKSCOfqJdi4xz3jUmB3XeuNaBOrQfsLc037DfRpz9gfhDV6Pzy.Fu', '30003132702229', '1', '2017-18', '123456556', 811, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(779, 'ايه حسنى سعيد محمود', 4, 4, '1212', '$2y$10$feglbjuHOX5AK1c3RnqB0OUMnJcz9PeRpUvnhk8wx6hONnrxKdtMS', '30005152504787', '1', '2017-18', '123456556', 812, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(780, 'ايه عبدالغفار حمزة عبدالكريم', 4, 4, '1212', '$2y$10$GU0vEGxOJO1PXLRCFRyfd.jajTFcfHA2ykRLyHXCRhUZeTzsXb39m', '51865456', '1', '2017-18', '123456556', 813, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(781, 'ايهاب راشد مسعود رضوان', 4, 4, '1212', '$2y$10$LoSS1x2/lTVYxk4O4SW9OudpYQF3hTwh8NvXZaZzhsgrvYaGCb5Ka', '29908282502675', '1', '2017-18', '123456556', 814, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(782, 'بسمه خالد محمد الصاوى محمود', 4, 4, '1212', '$2y$10$MBpUx6dF7.PbVOxQMNPuu.KaSjXaJa/dXZYNZEvz/r1I37D.cYNMW', '30005132500424', '1', '2017-18', '123456556', 815, '2019-03-14 13:24:00', '2019-03-14 13:24:00', 0, NULL),
(783, 'بيشوى عاطف سبع فرج', 4, 4, '1212', '$2y$10$O2XY5.Yq726JBt8EnTBxmOllsQE7nvqc.KhfMn6T4eDiiMpdQcuFm', '30008262502797', '1', '2017-18', '123456556', 816, '2019-03-14 13:24:01', '2019-03-14 13:24:01', 0, NULL),
(784, 'بيشوي فايز بشير شاكر', 4, 4, '1212', '$2y$10$K8WxmXMysdxyc3V7xHZr4OBueCoz.KbA9LQyVKQRYlmgSWQSiN2Z.', '29906082401499', '1', '2017-18', '123456556', 817, '2019-03-14 13:24:01', '2019-03-14 13:24:01', 0, NULL),
(785, 'تسنيم محمد ابراهيم حسن', 4, 4, '1212', '$2y$10$R9xdsEfo0ZZm6vN0I.Dh0OLiez/nDqkqnDl3zSgpAAykGpygowv/2', '29901162501689', '1', '2017-18', '123456556', 818, '2019-03-14 13:24:01', '2019-03-14 13:24:01', 0, NULL),
(786, 'جهاد بدر سعد فرغلي', 4, 4, '1212', '$2y$10$P8N2o.QwDjyMEKck/pXiNuv3r.99EY/U3okwUPREChla9tZaIoC1u', '31987198', '1', '2017-18', '123456556', 819, '2019-03-14 13:24:01', '2019-03-14 13:24:01', 0, NULL),
(787, 'جون اسامه صدقى صديق', 4, 4, '1212', '$2y$10$ysiIxETISuSDVqyObj5EveMRC7BI6Im9a6drDLKXzfPSLuwTkn.Tm', '29911132502198', '1', '2017-18', '123456556', 820, '2019-03-14 13:24:01', '2019-03-14 13:24:01', 0, NULL),
(788, 'حبيبه احمد صدقى عبدالله', 4, 4, '1212', '$2y$10$iwjQdRj4tCXL8KOVd5zajuXf.kltQJ/ebbA7AcsYsJvt/oDfhxrj2', '30012162401125', '1', '2017-18', '123456556', 821, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(789, 'حبيبه ايمن احمد محمود', 4, 4, '1212', '$2y$10$hUXjDDSJVRKPoEUCkCATiOfC1Zd1PVqkiZ1NQqN3zrzRUveuCMNBy', '30002012508449', '1', '2017-18', '123456556', 822, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(790, 'حسن شرف الدين عبدالهادى عبدالراضى', 4, 4, '1212', '$2y$10$4olhjJt3n.bL1CmooI46vuSytfYZ2JYOkJ7ZpLMSMiul0qDDEwImG', '30004092702537', '1', '2017-18', '123456556', 823, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(791, 'حسناء محمد كامل خالد', 4, 4, '1212', '$2y$10$sIQRi5MrEBXJBkzJmHfM1.AzChK/.XuMKfAYxxfyXvffzA4ozEhQS', '30001012526602', '1', '2017-18', '123456556', 824, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(792, 'خالد كرم محمود يوسف', 4, 4, '1212', '$2y$10$Ch41NJgvme.8oaIxg2JuWuL5ovSsusJPEOVAT31uUEJ/oRb0Q403m', '30006232501637', '1', '2017-18', '123456556', 825, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(793, 'دعاء طه محمدين عبدالرحمن', 4, 4, '1212', '$2y$10$kUwFQVi13Dqus7YW9WNDvOaPJ.dNdfkgQ.rVTN/qqZD1TuWM5aCQW', '30009072502665', '1', '2017-18', '123456556', 826, '2019-03-14 13:24:02', '2019-03-14 13:24:02', 0, NULL),
(794, 'دعاء عبدالحافظ جاد الكريم عبدالحافظ', 4, 4, '1212', '$2y$10$Cpv6SyWSRimrJAdmKVMn9OpyY.4JCNCd3NRAdFnqPgMLtmJrKBIr2', '30005152500161', '1', '2017-18', '123456556', 827, '2019-03-14 13:24:03', '2019-03-14 13:24:03', 0, NULL),
(795, 'ديفيد حاتم جرجس اسكندر', 4, 4, '1212', '$2y$10$CXwZL.cShvLnWxybs0jPl..gD95SeHnmpuT1H3vr6i5B7JLAaCHNW', '109849', '1', '2017-18', '123456556', 828, '2019-03-14 13:24:03', '2019-03-14 13:24:03', 0, NULL),
(796, 'دينا محمد سيد محمد', 4, 4, '1212', '$2y$10$uXGtd0YElbtuq.HAv4Ei.OalPflIBugELKF2undd.K9v5C16CSbUy', '30010012500602', '1', '2017-18', '123456556', 829, '2019-03-14 13:24:03', '2019-03-14 13:24:03', 0, NULL),
(797, 'دينا محمود ابراهيم محمد', 4, 4, '1212', '$2y$10$jIqoK30ZHeRK3z.oi5j7lexvSO3LZKn0TZfF5Fd8LLHYcMUTyCHqa', '30011212600284', '1', '2017-18', '123456556', 830, '2019-03-14 13:24:03', '2019-03-14 13:24:03', 0, NULL),
(798, 'رحمه احمد شعبان محمد', 4, 4, '1212', '$2y$10$OsvC5Aj69KH8vqupB8Bbz.d3Zc7rf3LFzkle5azFDMgAx9RJjk0Zu', '1987154888', '1', '2017-18', '123456556', 831, '2019-03-14 13:24:03', '2019-03-14 13:24:03', 0, NULL),
(799, 'رنا محمد عبدالخالق احمد', 4, 4, '1212', '$2y$10$Hu8T4zqvhGo77wkGXY74AeR7rsUH/6qQ2KpwllXRVJ.Pg5Zd1FH..', '29907012508225', '1', '2017-18', '123456556', 832, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(800, 'رواء اشرف محمود ابراهيم', 4, 4, '1212', '$2y$10$GVL21NaIWlZbFYOKaPrm0.JJJAlYDqWbkchGBWgJCFMvkY9Cu5hGa', '29902072500205', '1', '2017-18', '123456556', 833, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(801, 'ريم اشرف ذكى عفيفى محمد', 4, 4, '1212', '$2y$10$Fk.9HJZZbRGGEcgJC9AFdeWVmH1U3pUc.4VR19CfQmoy/KCQ/aPaG', '29910112500664', '1', '2017-18', '123456556', 834, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(802, 'ريم مصطفى راشد عبدالعال', 4, 4, '1212', '$2y$10$PF3ghjzehbOtgu9Z8G8fle4AGjoHazbqmvCqTHUP5P9nhgS4rkF5C', '29903042502064', '1', '2017-18', '123456556', 835, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(803, 'ريناد حمدى محمد مرسي', 4, 4, '1212', '$2y$10$e3Sbufu575boddc5y2A5dufxO1I7s.4b3EfIeFdn3.79.M82uK9si', '30002212501384', '1', '2017-18', '123456556', 836, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(804, 'ريهام محمد عبداللطيف فهمى', 4, 4, '1212', '$2y$10$pi0ftuNu/hmew4ezpUzSJOAnbKxL6rQuhVyu2pm2y2pzQydtg/iE2', '29910122501944', '1', '2017-18', '123456556', 837, '2019-03-14 13:24:04', '2019-03-14 13:24:04', 0, NULL),
(805, 'زياد عبدالطيف عبدالعال زيدان', 4, 4, '1212', '$2y$10$AwtWUkZIbX5fD7h15wupZuxaB.A3b.sSEwBXEhI1LLUUlzR4P6tYG', '998798987', '1', '2017-18', '123456556', 838, '2019-03-14 13:24:05', '2019-03-14 13:24:05', 0, NULL),
(806, 'ساندى عادل لطيف بشاى', 4, 4, '1212', '$2y$10$d1Npkhlj20pmzbvFX4o3Lu0Rr3FeF/F0TUlExccoHkjZ562zL4y2a', '30008012507149', '1', '2017-18', '123456556', 839, '2019-03-14 13:24:05', '2019-03-14 13:24:05', 0, NULL),
(807, 'سلمى اسامه احمد محمد', 4, 4, '1212', '$2y$10$2FmmCt0V8QlBZK7YcdfoauwQ1gY6iex5.utw75qTAa8MYVrt7rfg2', '29910072500941', '1', '2017-18', '123456556', 840, '2019-03-14 13:24:05', '2019-03-14 13:24:05', 0, NULL),
(808, 'سيلفيا ناجى نصيف نصر الله', 4, 4, '1212', '$2y$10$e5gB5THuz4wsnFCvrxEFrOKjZ6DyqAb0srshRuqFf/kcsy4LDVC2a', '30003262502345', '1', '2017-18', '123456556', 841, '2019-03-14 13:24:05', '2019-03-14 13:24:05', 0, NULL),
(809, 'شروق محمد احمد هاشم', 4, 4, '1212', '$2y$10$rPsAj8qWrI0U44KL7XbPW.DKRN/jOTri4R3xbxBrU0i7xg7SfvFLC', '30001232601206', '1', '2017-18', '123456556', 842, '2019-03-14 13:24:05', '2019-03-14 13:24:05', 0, NULL),
(810, 'شهد مدحت عبدالحكيم عبدالناصر الشناوي', 4, 4, '1212', '$2y$10$DeBkozASJmHNwGHv4Dud3.asftcuVg0KVFarYf1yOC4aoX1Op1f4i', '30007148800129', '1', '2017-18', '123456556', 843, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(811, 'شيرى كريم منير عطاالله', 4, 4, '1212', '$2y$10$eFqmGt/7QhtnFg1gxzpcEOnEQ/krl7FEELd60LGdbim72GUb1GzhC', '29910162501041', '1', '2017-18', '123456556', 844, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(812, 'عبد الرحمن ماهر حسن خليفة', 4, 4, '1212', '$2y$10$9CPOOSQ4.wiHwauSOmaoVebQeytiv10N.C3E/imJrKA.6THmiq2Y2', '30010012802056', '1', '2017-18', '123456556', 845, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(813, 'عبد الله محمد محمد', 4, 4, '1212', '$2y$10$hJChG4iPpP72MIkjflBkNe0Hdj17G24u6lApBnSutczY7ZpIaV0pq', '29909012501053', '1', '2017-18', '123456556', 846, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(814, 'عبدالرحمن عاطف جمال على', 4, 4, '1212', '$2y$10$vDZfwWKxEST.enuecAaXue0Rm4aA4rScwovYdODt0mRFSZeq1rdmC', '30007192501015', '1', '2017-18', '123456556', 847, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(815, 'عبدالرحمن علي مصطفى همام', 4, 4, '1212', '$2y$10$E8m5967djE6.TbPFQMQ.5ecHHMpY4cf/c.T.2eK.JIAXf30xROU8K', '30004153200092', '1', '2017-18', '123456556', 848, '2019-03-14 13:24:06', '2019-03-14 13:24:06', 0, NULL),
(816, 'على عبدالقادر محمد ابوالعلا', 4, 4, '1212', '$2y$10$s0eC5MEboWQTqxWRxqkimek4X/WJarCle.qF2IiBuJdCkb085iuvW', '30001012529938', '1', '2017-18', '123456556', 849, '2019-03-14 13:24:07', '2019-03-14 13:24:07', 0, NULL),
(817, 'علياء محمد عبدالحليم محمد', 4, 4, '1212', '$2y$10$VsRneG0FV/mdh0/bEp/CkulMsqUH1yMKBmWWDESD3h.ePshUdCUES', '9797979797', '1', '2017-18', '123456556', 850, '2019-03-14 13:24:07', '2019-03-14 13:24:07', 0, NULL),
(818, 'عمر احمد مصطفى توفيق', 4, 4, '1212', '$2y$10$tuMiA5eD6DRtsLzZW9Zs0OufCZzkcbEhNQDHy/itMefH0qgIjwhOa', '29812032501218', '1', '2017-18', '123456556', 851, '2019-03-14 13:24:07', '2019-03-14 13:24:07', 0, NULL),
(819, 'عمرو عادل احمد احمد', 4, 4, '1212', '$2y$10$G7xICPmyvekSN0agM9jR9eFG7lo9zBVW88cbyEPim0Irf/uJSc4iO', '30006082502532', '1', '2017-18', '123456556', 852, '2019-03-14 13:24:07', '2019-03-14 13:24:07', 0, NULL),
(820, 'فارس احمد عرفه محمد النحاس احمد', 4, 4, '1212', '$2y$10$auCCOdNEliiwWvMWWCk7XupFEtkJy15p3/zhZ9D7lIFSriY2IaFRO', '30010012716974', '1', '2017-18', '123456556', 853, '2019-03-14 13:24:07', '2019-03-14 13:24:07', 0, NULL),
(821, 'فاطمه اسامه حسن حسن', 4, 4, '1212', '$2y$10$d6Hv/vFPaV0a3jXUt0.ks.jAcc3.gFjydBbiC7nTN2dbZ/JzqY34S', '30007282500964', '1', '2017-18', '123456556', 854, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(822, 'فيلوباتير نشات حكيم شرقاوى', 4, 4, '1212', '$2y$10$qSJAXIneXZn9PLN7o1UC5O.9131jA/5czhLwJOeqJbznVEmEbulhy', '30008122501138', '1', '2017-18', '123456556', 855, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(823, 'كارمينا شهدى لويس مرقس', 4, 4, '1212', '$2y$10$UEjkCBPoxkxZVBwGt9ccGu/gfjiK1h9G8yctNMBV9eUg.45FrZiY.', '30007222502445', '1', '2017-18', '123456556', 856, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(824, 'كارين شهاب عدلى زكى', 4, 4, '1212', '$2y$10$6xStX53kXG8LBsvuZyVvUOwYmtKp1XekY/HCP40cu8w9Lsn21CjXO', '30010302600961', '1', '2017-18', '123456556', 857, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(825, 'كيرلس أنسي صبحي توفيق', 4, 4, '1212', '$2y$10$QfIfPQ.sIkhgDbwns5Jty.QmwQca1ajNGumj98AncRpFengC90o.a', '85858585', '1', '2017-18', '123456556', 858, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(826, 'كيرلس رمسيس ذكى صموئيل', 4, 4, '1212', '$2y$10$kZT1S70JF3vTlpzZASuJhe3mvMC7BEVYSKOWh1SwEFEmUgmyuxpnS', '30007292500253', '1', '2017-18', '123456556', 859, '2019-03-14 13:24:08', '2019-03-14 13:24:08', 0, NULL),
(827, 'مارجريت عصام  نبيه دوس', 4, 4, '1212', '$2y$10$WyX1Q4RCIk4vPrbIr4pGmOULRCzqIoL36glSwIx7Lhhk9E8WwtgpW', '8954561646', '1', '2017-18', '123456556', 860, '2019-03-14 13:24:09', '2019-03-14 13:24:09', 0, NULL),
(828, 'مارجريت ماهر توفيق فرج', 4, 4, '1212', '$2y$10$FWIdbXhl.4vn5A3dXN9R7.7VFiD2ASDnm1/AXEWFkPngJKpA7eOBK', '29911082500709', '1', '2017-18', '123456556', 861, '2019-03-14 13:24:09', '2019-03-14 13:24:09', 0, NULL),
(829, 'مارك رفعت متى عازر', 4, 4, '1212', '$2y$10$/4GgTeoC0xNxQlTEU0ausOZoyxFyPPQCrphm/wyuRr71Wf9D1.KEK', '30008312500294', '1', '2017-18', '123456556', 862, '2019-03-14 13:24:09', '2019-03-14 13:24:09', 0, NULL),
(830, 'مارينا حليم شاكر راغب', 4, 4, '1212', '$2y$10$s8bITs0CriVF4FZxD.ileuLTnVAZ3K7Psl94JbIPHVsOYHu9w5TUS', '948655656', '1', '2017-18', '123456556', 863, '2019-03-14 13:24:09', '2019-03-14 13:24:09', 0, NULL),
(831, 'مارينا رفعت قرياقس عجيب', 4, 4, '1212', '$2y$10$y0BeWAZm.7Q7FnIt2KKYh.XOW3ZRzkeagUE3LrirWJHv1ItG819he', '30001162605063', '1', '2017-18', '123456556', 864, '2019-03-14 13:24:09', '2019-03-14 13:24:09', 0, NULL),
(832, 'مارينا سمير بشاى غالى', 4, 4, '1212', '$2y$10$qINh0Yaq.9TmqpAcvqtkguCyNoUp3EnfKcVLoqs1u4clKI4ErQKhC', '29912182500648', '1', '2017-18', '123456556', 865, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(833, 'ماريو ايهاب جرجس بسالي', 4, 4, '1212', '$2y$10$enEuI.0m2aXmjBSuw1/YjuJ1t.8FZygvJz6OwSr0No1ubMxx6KGd.', '30006182501371', '1', '2017-18', '123456556', 866, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(834, 'محمد احمد دياب محمد', 4, 4, '1212', '$2y$10$pnKtWm5jMpxGaOvxFJSXhe.sqGPUSPdlacJESmv6lyilro.6rAAAW', '29911152503832', '1', '2017-18', '123456556', 867, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(835, 'محمد سالمان محمد احمد', 4, 4, '1212', '$2y$10$vKuFdg2/9CB8ZMAliRpwfulT5zV6G1nnppQgjSD9gCbksoVFZkKoO', '29907232501655', '1', '2017-18', '123456556', 868, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(836, 'محمد شعبان البدرى محمد', 4, 4, '1212', '$2y$10$1JEc24VZy0i2fZean7VwCe3uRdnjpUGmSIqPe0xZcXFucbUapmWK2', '29810012632356', '1', '2017-18', '123456556', 869, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(837, 'محمد عبدالقادر حسن بكر', 4, 4, '1212', '$2y$10$nL1b4yAzXJZc8ZbJ3pPC5upUKVhVC5YI3nabYw715itsj7oIyjpXu', '30006012507391', '1', '2017-18', '123456556', 870, '2019-03-14 13:24:10', '2019-03-14 13:24:10', 0, NULL),
(838, 'محمد عبدالمنعم محمد سيد', 4, 4, '1212', '$2y$10$rt87.kv4McAE10TGcOriTOIuF7OhRYcnv/i1Hhtx1EEXVWOp9WdoS', '3216549889', '1', '2017-18', '123456556', 871, '2019-03-14 13:24:11', '2019-03-14 13:24:11', 0, NULL),
(839, 'محمد محمد فرغلى احمد الدغار', 4, 4, '1212', '$2y$10$U2LkKT01K.Vcr1Bde79hsOhS4pXVDZxcj6IW9h.1ygREPzfI78BnO', '30007102503398', '1', '2017-18', '123456556', 872, '2019-03-14 13:24:11', '2019-03-14 13:24:11', 0, NULL),
(840, 'محمد ممدوح محمد حسين', 4, 4, '1212', '$2y$10$EHms6yb.J5LzPxXPUxoRYOfcw9vsXVI3PD38Dh/7gI.bQDjDwp3jm', '30009062501539', '1', '2017-18', '123456556', 873, '2019-03-14 13:24:11', '2019-03-14 13:24:11', 0, NULL),
(841, 'محمد ياسر لملوم عبدالغنى', 4, 4, '1212', '$2y$10$GqVpxFTH7v2cnkvwIJLuseSK0krCGpWhZ5jjWD1JvDXph4/.G8t/6', '30005312500414', '1', '2017-18', '123456556', 874, '2019-03-14 13:24:11', '2019-03-14 13:24:11', 0, NULL),
(842, 'محمود سيد سعد عبدالكريم', 4, 4, '1212', '$2y$10$ruh/ePgVnDwNhgPRtgaB8eHOPa9IE/dCLu1eScIA.guTs17Jz8.jW', '30006082500815', '1', '2017-18', '123456556', 875, '2019-03-14 13:24:11', '2019-03-14 13:24:11', 0, NULL),
(843, 'محمود طه عبداللاه محى الدين', 4, 4, '1212', '$2y$10$0CAe.BCVKWoiwbfbiWcMgOOIRtkRRYgKItYhnjUz6J1bSNrPiWTr2', '29906192500476', '1', '2017-18', '123456556', 876, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(844, 'محمود محمد ماهر ثابت', 4, 4, '1212', '$2y$10$/EkL2hamijpNpSgsaDsNteJAu9.Foga8Pg1BNoL1kmwYtgZ5who5y', '65464564545', '1', '2017-18', '123456556', 877, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(845, 'مروة محمود سيد عبد الحليم', 4, 4, '1212', '$2y$10$scpmfKu5ZonWhHNXwhxPPOlJWhlK5MIPrpMlsszxJsIDycVpGS5Z6', '29910062500404', '1', '2017-18', '123456556', 878, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(846, 'مروة ممدوح طه محمد', 4, 4, '1212', '$2y$10$TplBva0CI0RSh9whzbzFPunXRJmJLwedNQQABSAcR7C9IoRaakbOG', '9798978711111', '1', '2017-18', '123456556', 879, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(847, 'مروه محمد السيد محمد', 4, 4, '1212', '$2y$10$VmgjJfhqz9JIyv7lJhbAu.8C7vRaq244rrtmRORg.yn1MdtcTyYiu', '30007132501903', '1', '2017-18', '123456556', 880, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(848, 'مريم سامى جاب الله حبيب', 4, 4, '1212', '$2y$10$Nr2nQZJ0V.OlF/k3mkx23eSNtEx9ELekzuO8bR/gVKvEd3njgIPCy', '29908292402369', '1', '2017-18', '123456556', 881, '2019-03-14 13:24:12', '2019-03-14 13:24:12', 0, NULL),
(849, 'مريم مجدى حلمى اسحق', 4, 4, '1212', '$2y$10$nDjfHA1Guwfstglw03N/d.NLFEqnxklAyZTGyRy25agE7YUJhyigu', '30007192501104', '1', '2017-18', '123456556', 882, '2019-03-14 13:24:13', '2019-03-14 13:24:13', 0, NULL),
(850, 'مصطفى احمد فرغلى رضوان على', 4, 4, '1212', '$2y$10$05LNpzM55rpcyrFHOzJF7.Ev389DNTl24K3kOpjegmABixM76IC3K', '29902162502614', '1', '2017-18', '123456556', 883, '2019-03-14 13:24:13', '2019-03-14 13:24:13', 0, NULL),
(851, 'مصطفى خلاف خليفه ابراهيم', 4, 4, '1212', '$2y$10$zLM/2Vnce4mGTbNErO.5G.U.SGZJ1QZ4FsgYr1.uo57Dmz2CR.W2u', '29906012510312', '1', '2017-18', '123456556', 884, '2019-03-14 13:24:13', '2019-03-14 13:24:13', 0, NULL),
(852, 'مصطفى سامى احمد شافع', 4, 4, '1212', '$2y$10$4fcBoMUdbOaNJzFMZvCQKuSLE649hIs1HX.ZralnpMlBJ2H1MBtES', '29909202604673', '1', '2017-18', '123456556', 885, '2019-03-14 13:24:13', '2019-03-14 13:24:13', 0, NULL),
(853, 'مصطفى سيد جابر محمود', 4, 4, '1212', '$2y$10$UldDylNnZDZEf0H1y43dKu0.St28IMssQqOj78U.FA2c6pmIGmwt.', '30009082500539', '1', '2017-18', '123456556', 886, '2019-03-14 13:24:13', '2019-03-14 13:24:13', 0, NULL),
(854, 'منار احمد شوقي رشدي محمد', 4, 4, '1212', '$2y$10$Af8e.6Ga9TfPerNjqY..2ePxWHk5j4Wz1k1hEspaT7dJRRqnP.qne', '30012092400061', '1', '2017-18', '123456556', 887, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(855, 'منار احمد محمد محمد', 4, 4, '1212', '$2y$10$0F5zEt6JoR2Wnuk5PvCNPeksxn2zyKJS/Fv1ByBX0lO7gQPnEVy/K', '30005072500302', '1', '2017-18', '123456556', 888, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(856, 'منار عبد الحافظ محمود عبد الحافظ', 4, 4, '1212', '$2y$10$NTz6y6pFqPQl5OWzMLQwvOyMZJBnqYEO9d1n4zPYIrPGLIUQspRzC', '333366998887', '1', '2017-18', '123456556', 889, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(857, 'منار ماهر فتح الله محمد', 4, 4, '1212', '$2y$10$lXWuX19PmlSn3lRbJI5FvuBdxVDNPUlW3RLmfIVN7mqOo/SpufZZ6', '29812212500562', '1', '2017-18', '123456556', 890, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(858, 'منار محمد جابر سيد', 4, 4, '1212', '$2y$10$3fJ3Pqmg5/pxDkFL4tb01.kMNu72N5Wq5HzodRi0yFiwlOnT86G66', '30008182501668', '1', '2017-18', '123456556', 891, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(859, 'منه الله صلاح سليم محمد', 4, 4, '1212', '$2y$10$xCglnvhkw0qOsMvLRMds0.CPXeW7j6QqNULyQUJM5kh42mJVgeJ0e', '29911042500986', '1', '2017-18', '123456556', 892, '2019-03-14 13:24:14', '2019-03-14 13:24:14', 0, NULL),
(860, 'موسى صموئيل بشرى صليب', 4, 4, '1212', '$2y$10$fdEj.CWpp2SsFU7rp60VlOzPHYuA37IdDi9qDRnyrPwPM0Pfa2qD6', '30002072403492', '1', '2017-18', '123456556', 893, '2019-03-14 13:24:15', '2019-03-14 13:24:15', 0, NULL),
(861, 'ميار حسن سيد محمود', 4, 4, '1212', '$2y$10$EBBesOSZ5AAzde/svE1L6ezYR4ft66YHlUVDriDo4EjZiirMgAS4q', '29903012501446', '1', '2017-18', '123456556', 894, '2019-03-14 13:24:15', '2019-03-14 13:24:15', 0, NULL),
(862, 'ميرنا سامى زكريا نجيب', 4, 4, '1212', '$2y$10$SCYCWSa33YoFOy/eHF3MWunQJn1U3DA2fyvhRSlwvNyrMfmjChlDC', '29911062502209', '1', '2017-18', '123456556', 895, '2019-03-14 13:24:15', '2019-03-14 13:24:15', 0, NULL),
(863, 'ميرنا فتحى يعقوب زكى', 4, 4, '1212', '$2y$10$DXoFDd0C78KV65OR43sajeed.E8Zd8DtkgGa.fmspnU9WHcxx6BPG', '30008012414647', '1', '2017-18', '123456556', 896, '2019-03-14 13:24:15', '2019-03-14 13:24:15', 0, NULL),
(864, 'ميسره كمال محمود احمد', 4, 4, '1212', '$2y$10$gJGayXTJ0RpNoCxxM8O6MOExdpEiYrCoIfoeNz/ECGVErfPJEf7ky', '29906152700073', '1', '2017-18', '123456556', 897, '2019-03-14 13:24:15', '2019-03-14 13:24:15', 0, NULL),
(865, 'مينا هاني ميلاد الياس', 4, 4, '1212', '$2y$10$.bskv8/7Jat0mMcSbFGF1eLr3PwlajYw2h.LoBWM4KHW/tE8A.jdK', '30010012511833', '1', '2017-18', '123456556', 898, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(866, 'ميهان حسن صبرى البابلي', 4, 4, '1212', '$2y$10$.2S76voltPnAmD4y3wcDZOCXWZhE8cw2F5FCU55HpQzEwooTaNDpC', '30008190104643', '1', '2017-18', '123456556', 899, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(867, 'ناردين عماد يافت عياد', 4, 4, '1212', '$2y$10$qYfLI2r2UbfCopuJmgsqm.i57MrgNF1uQH9Gs2z8JmkLw0ilEx1/q', '30002172501386', '1', '2017-18', '123456556', 900, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(868, 'نانسى ادوار توفيق بشاره', 4, 4, '1212', '$2y$10$CZpiSYvUKnynaO0q3BY1GumwB5aoR7Ogw.YTjwhKnVW3DGrexXW.S', '30006012711908', '1', '2017-18', '123456556', 901, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(869, 'ندي  محمود عيد عبد الناصر', 4, 4, '1212', '$2y$10$.UtFB1Sscu1i.gFpMPG2AOTDDcOUhC6e2pn91V79ohTcr283Y12VG', '30004292500904', '1', '2017-18', '123456556', 902, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(870, 'ندي حامد حسن احمد', 4, 4, '1212', '$2y$10$HdPTG4Y6Hdai16lR08AwueeaoEyXb58UOeMbIiC3iugGzbte4wfzq', '30005252503648', '1', '2017-18', '123456556', 903, '2019-03-14 13:24:16', '2019-03-14 13:24:16', 0, NULL),
(871, 'ندى سمير سيد على', 4, 4, '1212', '$2y$10$yrpepossYc8kzBRS.0GR0OjBfu5Kp1bl96PNPZVYCwhO2rie..bvy', '29908082502549', '1', '2017-18', '123456556', 904, '2019-03-14 13:24:17', '2019-03-14 13:24:17', 0, NULL),
(872, 'ندى عبدالمحسن عز الدين احمد الشريف', 4, 4, '1212', '$2y$10$rhUXUHB8RdxvX0XNqOs1E.Fs4vNbe088uMU34A1Iywdxbed1t6gYO', '30002218800405', '1', '2017-18', '123456556', 905, '2019-03-14 13:24:17', '2019-03-14 13:24:17', 0, NULL),
(873, 'ندى علام احمد على', 4, 4, '1212', '$2y$10$LuMX8acFdgFULCevRvr4Y.lWuAWDeMUK21NUAGyKA3I9nqtNz9JNm', '29905232500982', '1', '2017-18', '123456556', 906, '2019-03-14 13:24:17', '2019-03-14 13:24:17', 0, NULL),
(874, 'ندى مجدى محمد محمد', 4, 4, '1212', '$2y$10$unHAAPiL2l69EMx70BfL1ewMix2845jnveazZXtjzoJjxvzCIi8du', '30007142500085', '1', '2017-18', '123456556', 907, '2019-03-14 13:24:17', '2019-03-14 13:24:17', 0, NULL),
(875, 'نشوى رفعت محمد عبدالشافى', 4, 4, '1212', '$2y$10$VBUKj1cmWwJlxicnxvxA/uXxUPunrcWuZASXAci8SZEcGskXXR25i', '29901242701743', '1', '2017-18', '123456556', 908, '2019-03-14 13:24:17', '2019-03-14 13:24:17', 0, NULL),
(876, 'نورهان خالد محمد عبدالعال', 4, 4, '1212', '$2y$10$3HViqAaGtCkfpWTeKLZexuFO22NHHhx5tsYGpxbA5NDXk3sCq2B.W', '29912292500325', '1', '2017-18', '123456556', 909, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(877, 'نورهان عادل عبدالرحيم سيد', 4, 4, '1212', '$2y$10$i7yJpbdEciMqSny.NjePG.QcYtCYXqZwKyQYM7HVULa8kytZXvPRu', '30008152503224', '1', '2017-18', '123456556', 910, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(878, 'نيره انور هاشم فراج', 4, 4, '1212', '$2y$10$vd1fSxANkyKKZbylNoBoXOqxJ..Mq95/qyWPSPTljMV4EUUY6tEz2', '30010122500268', '1', '2017-18', '123456556', 911, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(879, 'هاجر سيد احمد عبدالعزيز', 4, 4, '1212', '$2y$10$8c9XTg1SJSjHlbZO2.RZPuIeGix.2zq2bvmt4imOa2iSzcr00L4ui', '30006022500905', '1', '2017-18', '123456556', 912, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(880, 'هدير فيصل منير امير', 4, 4, '1212', '$2y$10$qPuWCEtoUrdZOlj91F9W.uA4IPoVCEGcJodsofrmPON822Hvkhy/i', '30008052500864', '1', '2017-18', '123456556', 913, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(881, 'هلا ياسر محمد عبدالجواد', 4, 4, '1212', '$2y$10$nVHrTn9J5T7p7qgq.UyPIuiRP10DTqhdpbqLcly6PS7t7.sCYjPxO', '30006262103148', '1', '2017-18', '123456556', 914, '2019-03-14 13:24:18', '2019-03-14 13:24:18', 0, NULL),
(882, 'وفاء حماده عبدالجليل عبدالرحيم', 4, 4, '1212', '$2y$10$4AkA6pUlwHpascAMKzmu..msJHhoemGB4N5DfbeYypfA1NRdCkBlW', '74185296311', '1', '2017-18', '123456556', 915, '2019-03-14 13:24:19', '2019-03-14 13:24:19', 0, NULL),
(883, 'وليد عصام الدين محمد ابوالغيط', 4, 4, '1212', '$2y$10$LiRAfIY4s4pEmf8BxCBcY.HTutQm.u2qtPzlHfMf9DIFwbcCPdrpC', '30005082500274', '1', '2017-18', '123456556', 916, '2019-03-14 13:24:19', '2019-03-14 13:24:19', 0, NULL),
(884, 'يارا عصام الدين عبدالعزيز يوسف', 4, 4, '1212', '$2y$10$8Eu2puFYxTs7IdmUBDNZe.CF8euMZTHjU6iS/MTfgch4l/xWE7kj6', '29911122501401', '1', '2017-18', '123456556', 917, '2019-03-14 13:24:19', '2019-03-14 13:24:19', 0, NULL),
(885, 'يارا عونى اسماعيل السيد', 4, 4, '1212', '$2y$10$Zm9JJFVebkKpfcrWdWkfrO7NRxIqzJE9jcnivQMtqkagE3ddrp/96', '29903192600307', '1', '2017-18', '123456556', 918, '2019-03-14 13:24:19', '2019-03-14 13:24:19', 0, NULL),
(886, 'ياسمين احمد صبرى دردير', 4, 4, '1212', '$2y$10$AZa41MPEga5F9iryb4uq2.KR1mW5MR6r4ndoR5yO/A0ZD.w5Sm8Xq', '30001132702226', '1', '2017-18', '123456556', 919, '2019-03-14 13:24:19', '2019-03-14 13:24:19', 0, NULL),
(887, 'يوستينا رافت صبحى فلتس', 4, 4, '1212', '$2y$10$hrBuLaGgHbOqjfosH7vdsum9VRZDAN03SDIHwDzV5CGaKKwoacvta', '30002062601989', '1', '2017-18', '123456556', 920, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(888, 'يوستينا مجدى غالى عبدالمسيح', 4, 4, '1212', '$2y$10$us.qaEBA8hHzVHqm.k1.Ue9wiKQ/XTSC2JwRySiznRktML7zYSGoy', '30006132502407', '1', '2017-18', '123456556', 921, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(889, 'يوسف برتى هنرى س', 4, 4, '1212', '$2y$10$jjwc.PKzvYvrUJhmCi6uhubs5CMfrAWXkdWKgO3SO4sPyB466V57G', '29902012510236', '1', '2017-18', '123456556', 922, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(890, 'يوسف خليفة احمد محمود', 4, 4, '1212', '$2y$10$2pSLVWqejLp7Of1qe1M9N.HLVOG2/xq.JNhopW3R2AxiSXTKAQFXe', '29903132502292', '1', '2017-18', '123456556', 923, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(891, 'يوسف شعبان سيد محمد', 4, 4, '1212', '$2y$10$DBqIf.iReOb8FZsWLVbBce4R/LZ7JzHHidri9mVDW2SYpi5Y3h.Cq', '30010188800734', '1', '2017-18', '123456556', 924, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(892, 'احمد ناصر شعبان صابر', 4, 4, '1212', '$2y$10$vJ3uZZrMJPOZy/mPbLkveukqpKaLneNaIBvrqVv601lfPgfV7dZbu', '30007012501772', '1', '2017-18', '123456556', 925, '2019-03-14 13:24:20', '2019-03-14 13:24:20', 0, NULL),
(893, 'رانيا احمد هيكل احمد شحاته', 4, 4, '1212', '$2y$10$dJdtKfWseKODTQezGKhmfuDr.hLUAJRhoNPcj1cJ2vy5.SEsf7iIO', '30004242501624', '1', '2017-18', '123456556', 926, '2019-03-14 13:24:21', '2019-03-14 13:24:21', 0, NULL),
(894, 'محمد احمد سيد محمد', 4, 4, '1212', '$2y$10$drgu8gcmsiKFmHNXQ8GRd.bhvVKvscM5wxsSEFccU03Abmnmw6bxO', '30004012506872', '1', '2017-18', '123456556', 927, '2019-03-14 13:24:21', '2019-03-14 13:24:21', 0, NULL),
(895, 'معاذ زكريا محروس محمود', 4, 4, '1212', '$2y$10$BO0dHTiKBITXW4HZBWU51OVpPigwDrIW1AA.IOLepaZCGK59/wd82', '30005172500257', '1', '2017-18', '123456556', 928, '2019-03-14 13:24:21', '2019-03-14 13:24:21', 0, NULL),
(896, 'ابانوب كميل عويضه متى', 4, 4, '1212', '$2y$10$VfxomvnDV2z9kLze9khyDuRtcWCp53RML3z83sTz961VzxVT1Mia.', '29903052601133', '1', '2017-19', '123456556', 929, '2019-03-14 13:24:21', '2019-03-14 13:24:21', 0, NULL),
(897, 'ابراهيم محمد على ابراهيم', 4, 4, '1212', '$2y$10$5YOO4G2vUM.KFDjWNDcntOdsMwzQleEmuLeQ..gVVf5dMqOJk0FM.', '29501012722956', '1', '2017-20', '123456556', 930, '2019-03-14 13:24:21', '2019-03-14 13:24:21', 0, NULL),
(898, 'احمد ابراهيم حسين احمد', 4, 4, '1212', '$2y$10$xlgpzthdBX9Xg/hwgZ2i4elDJBdr0mAH3utORezvTGt0F1JMrB62e', '29909232800574', '1', '2017-21', '123456556', 931, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(899, 'احمد اسماعيل لمعى محمد', 4, 4, '1212', '$2y$10$X7u4Oww0DEWaUGLoBP09j.BrsU5fIJsQ982/zzpVhqdByOUQaQMNW', '29905012506912', '1', '2017-22', '123456556', 932, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(900, 'احمد جمال احمد الطاهر', 4, 4, '1212', '$2y$10$xN8/.do11RxJcWqrevB0TO1kxk46kxWY.92sLtpOWh8RaMKTsTqzy', '30009172703196', '1', '2017-23', '123456556', 933, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(901, 'احمد جمال السيد ابوالعلا', 4, 4, '1212', '$2y$10$dp4rAsyHucCYtsgidbMu0u3oJdy.tSsTpsS49xIGxayap.5g3OOye', '30004011612415', '1', '2017-24', '123456556', 934, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(902, 'احمد خليفه حسين احمد', 4, 4, '1212', '$2y$10$L.VWjldFl2EANK0fY7J13.ubSlO48RaNbgwrGd/ggitsqmEn2JBrO', '30002162500217', '1', '2017-25', '123456556', 935, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(903, 'احمد رفعت ثابت كامل', 4, 4, '1212', '$2y$10$dXsnyNHbjc3IXtNERQX0OOw5zdwbgJJVoR70vOJQieKeIMIRlBszq', '29902022603496', '1', '2017-26', '123456556', 936, '2019-03-14 13:24:22', '2019-03-14 13:24:22', 0, NULL),
(904, 'احمد رفعت عبدالحفيظ عبدالمحسن', 4, 4, '1212', '$2y$10$.t6RbU1IqZZEneUj9pdknuputM800bwx5nvjx4nEeaTb0Qm3TuZKO', '29905042601073', '1', '2017-27', '123456556', 937, '2019-03-14 13:24:23', '2019-03-14 13:24:23', 0, NULL),
(905, 'احمد عبداللطيف محمد عبدالباقى', 4, 4, '1212', '$2y$10$GuZmaY8pMSexsVZ5axM6duY.f875DUGM591mIxJ1nGXJs7loC6fdu', '30009152500817', '1', '2017-28', '123456556', 938, '2019-03-14 13:24:23', '2019-03-14 13:24:23', 0, NULL),
(906, 'احمد عبدالناصر محمد ابراهيم', 4, 4, '1212', '$2y$10$LoEPQGV1qesyf/JSbtV5/.Z7S3bcYVdLV0owHpn5OQ1icCZEv67Va', '30003212500376', '1', '2017-29', '123456556', 939, '2019-03-14 13:24:23', '2019-03-14 13:24:23', 0, NULL),
(907, 'احمد عزت جابر على', 4, 4, '1212', '$2y$10$LEkldTkEzOchjS2fbg3o7etqtWX4p7bIxkWhedSQ.dg8vF68eK.U2', '30006202505115', '1', '2017-30', '123456556', 940, '2019-03-14 13:24:23', '2019-03-14 13:24:23', 0, NULL),
(908, 'احمد محمد عبدالبصير جلال', 4, 4, '1212', '$2y$10$8/vS/xcmTWVXosKVEJ86wegdZ7aXt71dFBpPIBJ.HrlLrLd0rYcP.', '30004118800591', '1', '2017-31', '123456556', 941, '2019-03-14 13:24:23', '2019-03-14 13:24:23', 0, NULL),
(909, 'احمد محمد عبدالحميد حسن', 4, 4, '1212', '$2y$10$MQAurGSuW5xXSot0UN3fK.l6u1bQA09Vr41z7FJLnJyal1E/e2IDm', '30006152502772', '1', '2017-32', '123456556', 942, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(910, 'احمد محمد فتحى عثمان', 4, 4, '1212', '$2y$10$rPSumfWqI1ZIJ.zRmHEqeOlsYvz0vhichf8QBLcIOsKwyPkIDsJcW', '30005112502099', '1', '2017-33', '123456556', 943, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(911, 'احمد محمود احمد عبدالعال', 4, 4, '1212', '$2y$10$PL/9SDVyQj0gpfHWEzaKee8xbWwEkd4WmFB.maPF9CaJFab0TiuB.', '29905302600651', '1', '2017-34', '123456556', 944, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(912, 'احمد مصطفى توفيق عبداللاه', 4, 4, '1212', '$2y$10$1OboRC0LR1A8AsjQRXCQAOVzhfyJBzSHBKy29Z6HWIVUudfkmno9y', '29909302500476', '1', '2017-35', '123456556', 945, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(913, 'احمد مصطفى عبدالحميد محمود', 4, 4, '1212', '$2y$10$9V9ES5Ky4QXU.sgWLnFUXedOXGKEy/Lpk1oBKocGH3jnjFuJtMcLG', '30006212502572', '1', '2017-36', '123456556', 946, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(914, 'احمد ناصر محمد عبود', 4, 4, '1212', '$2y$10$yVS0oBFnOkbfthVXLCT5Pe8.jCDN04FQWKQgyEpN42YH04b7tJrz6', '29811202503397', '1', '2017-37', '123456556', 947, '2019-03-14 13:24:24', '2019-03-14 13:24:24', 0, NULL),
(915, 'اركان عصام الدين فوزي شرقاوي', 4, 4, '1212', '$2y$10$si9Zp1s5WIeAT5TaGeIJEuZ1mMaH6mdl4WvPvo956Q8yJ8hyQp0M2', '30003022500736', '1', '2017-38', '123456556', 948, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(916, 'اسحاق سعد عوض سعد', 4, 4, '1212', '$2y$10$LgU0AfACsM3M06avjaDBluJRCEvMvws3pzY8FRmkpbXhw98z578Xy', '30001113200031', '1', '2017-39', '123456556', 949, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(917, 'اسلام ايمن احمد محمد', 4, 4, '1212', '$2y$10$a8wONDqDOaHV35roSACZoO34hhH0L0c4ufxrE29X63uyI0wiQV6ta', '29905012606852', '1', '2017-40', '123456556', 950, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(918, 'اسلام محمد عبدالله زناتى', 4, 4, '1212', '$2y$10$qPFbJwME4SBc8moFKwgUwuWyIgPcdTwBA82n0Pp0Qat7LGs189RJ2', '29903202503178', '1', '2017-41', '123456556', 951, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(919, 'اسماعيل عونى على مخلوف', 4, 4, '1212', '$2y$10$GbEAtIj4QxjFvqRSVpuBuuDy/u3TxGUNux0aNF7V.Ncaybh8xsH3u', '29912162601758', '1', '2017-42', '123456556', 952, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(920, 'العمده سلطان عبدالعزيز احمد', 4, 4, '1212', '$2y$10$rVXuWvJ6xvHQPeCr5hLRC.lJyRFFPCQ.P.qnoAfEUxdn9SNqVo7jC', '30003072500397', '1', '2017-43', '123456556', 953, '2019-03-14 13:24:25', '2019-03-14 13:24:25', 0, NULL),
(921, 'امنية أحمد بكر صديق', 4, 4, '1212', '$2y$10$6FTvdQ43yZIkxc4z3NTRMudn0aJth9LtLR4PBsCslVU0fo3cFDAR2', '30009258800127', '1', '2017-44', '123456556', 954, '2019-03-14 13:24:26', '2019-03-14 13:24:26', 0, NULL),
(922, 'امنيه محمد عبدالعال عثمان', 4, 4, '1212', '$2y$10$YM/NcJWM0miv4bjhkKoZ4OVROnfspB8w6PaHI/hCS77xfizaHPWLO', '30006192500845', '1', '2017-45', '123456556', 955, '2019-03-14 13:24:26', '2019-03-14 13:24:26', 0, NULL),
(923, 'انتصار عاطف عبدالرحمن عمر', 4, 4, '1212', '$2y$10$szum10KcFadk8pxWk7cOhefPgf9pTJzxrQNudubW.IXqQsUDhMdUa', '29912042501121', '1', '2017-46', '123456556', 956, '2019-03-14 13:24:26', '2019-03-14 13:24:26', 0, NULL),
(924, 'اندرو حليم مترى اسكاروس', 4, 4, '1212', '$2y$10$9xvR0YqfN4FkEMaJWcyQkepBsRKHjVx5CT.RaMeIUFW4FPGxkk5Vq', '29911202500775', '1', '2017-47', '123456556', 957, '2019-03-14 13:24:26', '2019-03-14 13:24:26', 0, NULL),
(925, 'ايه ابوالعلا خالد سيد', 4, 4, '1212', '$2y$10$2Bu1ETCC.sR1tXuffX91yO9m/O/CMa3emPy5aOl7F3BAaDngRef8O', '29811102502105', '1', '2017-48', '123456556', 958, '2019-03-14 13:24:26', '2019-03-14 13:24:26', 0, NULL),
(926, 'ايه عبدالعظيم حسن احمد', 4, 4, '1212', '$2y$10$N9YWnA7L0AaJx8JMKrakCucY/cpiaSutKb2S2REvtKnDQtuM1/5NG', '30009142800243', '1', '2017-49', '123456556', 959, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(927, 'ايه عمر محمد السايح', 4, 4, '1212', '$2y$10$L7FewwnFoswP0ShXm7ocguqg/2RUtcP4aRU8ETO01aHNaWsdOWMnq', '29803192700765', '1', '2017-50', '123456556', 960, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(928, 'ايه غانم بيومى حسانين', 4, 4, '1212', '$2y$10$IPtqha4R2icNBUTmt9KGROPcoef.X6r5GOEQMsV1BG9LRO3b2EuPm', '30012052503445', '1', '2017-51', '123456556', 961, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(929, 'باسل امجد لبيب جرجس', 4, 4, '1212', '$2y$10$boDSw2A4207HDY.OaOYEmeK90NR/j7e3D2DA2Ff.DEKLYbAkgI8TW', '30003042500856', '1', '2017-52', '123456556', 962, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(930, 'بكر حسنى احمد همام', 4, 4, '1212', '$2y$10$Cd1oQk0Sr/jideIVmNyJQ.2e9ukdDVYkxEJzbdWOosLbpN5O0Z.Q6', '30005152606172', '1', '2017-53', '123456556', 963, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(931, 'بولا سمير اشعيا حنس', 4, 4, '1212', '$2y$10$oqRRvxP1EoUsq12.i84RRekqGCQQvBFPEF5cQbn0efnVhdRh/snAe', '29804152701056', '1', '2017-54', '123456556', 964, '2019-03-14 13:24:27', '2019-03-14 13:24:27', 0, NULL),
(932, 'بيشوى عاطف توفيق شاكر', 4, 4, '1212', '$2y$10$JxfWZjVoBTOb4LMXdK7Au.QwwNBXsyroAKHSdRN3/PerzsD92EGW6', '30001012518839', '1', '2017-55', '123456556', 965, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(933, 'حسام حامد خليل محمد', 4, 4, '1212', '$2y$10$naQIz8J0GxUYXiqrcY2oXeKXzGQZBehltkNlejzxj5/CmS6.cT0VK', '29908072602871', '1', '2017-56', '123456556', 966, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(934, 'حمزه عبدالرحمن محمد عبدالله', 4, 4, '1212', '$2y$10$eYqSp3xzfLt2SK77ZOPxL.xj3OfSO2x4fNISR8YI8LoYN1rOeSawa', '30001072500076', '1', '2017-57', '123456556', 967, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(935, 'خالد سالمان احمد سالمان', 4, 4, '1212', '$2y$10$ZVgX9SwLFHkqbyQgrz3JMOKk8zB6uKIY0hEoa63NSUPYDfXwuax7K', '29805142501772', '1', '2017-58', '123456556', 968, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(936, 'خلف مصباح خلف مخلوف', 4, 4, '1212', '$2y$10$2GGPewNjZh4A48O/JSQpj.BSkVotQzvR5RmPZmWxDtOLxmZgFakEi', '29910252504112', '1', '2017-59', '123456556', 969, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(937, 'خلود الحسينى احمد محمد', 4, 4, '1212', '$2y$10$ZmUAmutmjqe8nCnxu6WFLOK8qhwE1y/Omw9zc59zPi8mFj6AWkDOe', '30001092500609', '1', '2017-60', '123456556', 970, '2019-03-14 13:24:28', '2019-03-14 13:24:28', 0, NULL),
(938, 'دعاء ابراهيم محمد احمد', 4, 4, '1212', '$2y$10$UHquawDoPeDda2CkknB90u9w.Zf6Hdk70lN5uyu2ZaKTv3aoXQn9q', '30009232800285', '1', '2017-61', '123456556', 971, '2019-03-14 13:24:29', '2019-03-14 13:24:29', 0, NULL),
(939, 'دعاء احمد سالمان احمد', 4, 4, '1212', '$2y$10$hoX4mV6amkG61N96dfkfweZgsnMKqGSSFY0UZl.DCBzBpnDT6BqF6', '30003013100326', '1', '2017-62', '123456556', 972, '2019-03-14 13:24:29', '2019-03-14 13:24:29', 0, NULL),
(940, 'دعاء سعد الدين يسن احمد', 4, 4, '1212', '$2y$10$VaJkT3EToINt.oBaRbyI9eKBue08fwn4O5Gj6MIh0r6yt6//mFFw6', '30004292600763', '1', '2017-63', '123456556', 973, '2019-03-14 13:24:29', '2019-03-14 13:24:29', 0, NULL),
(941, 'دميان رفيق تاوضروس دميان', 4, 4, '1212', '$2y$10$V8w2uJ6LRqVhD.gSX7AWiOYp0UZm7HeeM2jHW.Y1rJ.FcSrSXidgm', '30007122601934', '1', '2017-64', '123456556', 974, '2019-03-14 13:24:29', '2019-03-14 13:24:29', 0, NULL),
(942, 'دولاجى باقى فرهيد شاكر', 4, 4, '1212', '$2y$10$5e1vmktEluxYajJtOujcbeYLIXjdUK.A6grXka38w2UON6Wfwp0Na', '30009092602283', '1', '2017-65', '123456556', 975, '2019-03-14 13:24:29', '2019-03-14 13:24:29', 0, NULL),
(943, 'دينا ابوزيد فرغلى عبدالحليم', 4, 4, '1212', '$2y$10$.qtSDawQyAkTXCLvmFqDBeYoNtdN5HPIJW798T8sLKB3QzpmtIaQa', '30004272501181', '1', '2017-66', '123456556', 976, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(944, 'رامى منازع علام زناتى', 4, 4, '1212', '$2y$10$/802J.pWIGckcKk9Fi8jw.beRtF94Kjp6E5ZZFRRMxnGkL2DUQP5S', '30008052601679', '1', '2017-67', '123456556', 977, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(945, 'رانيا كامل حبشى عبيد', 4, 4, '1212', '$2y$10$LXdJ2Z9mSmGq6PqMXlo.NOCF0zqv9xHatoSkIlC24TIerF1mVzQvm', '30006182601864', '1', '2017-68', '123456556', 978, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(946, 'رضوى هشام محمدحسني علم الدين', 4, 4, '1212', '$2y$10$ggtEWQ4lyjcLZznJ.s9qKuniYO3FIcrc6I.BsPPhGXQ3w.K0KJAJq', '30004252500367', '1', '2017-69', '123456556', 979, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(947, 'سعد صفوت سعد الدين محمد', 4, 4, '1212', '$2y$10$32/nAxATZRMC5qHUZlnaS.SXY3S7SQVLgBYEBrAjyoWAsDVI72coe', '29909152600892', '1', '2017-70', '123456556', 980, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(948, 'سلام راضى رمضان عثمان', 4, 4, '1212', '$2y$10$VrItV4c24q4KznglEDCzneAa6qE0GNGz7LnkheuiTrWLyvoef61BS', '29911012620537', '1', '2017-71', '123456556', 981, '2019-03-14 13:24:30', '2019-03-14 13:24:30', 0, NULL),
(949, 'سنا عبدالباقى راضى عبدالباقى', 4, 4, '1212', '$2y$10$3kC44FV/AbUA1cXmF8win.AflJ/BvLsWGC..CLcE1GVVf4QEbl2lu', '30004168800703', '1', '2017-72', '123456556', 982, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(950, 'شهاب هشام انور امين', 4, 4, '1212', '$2y$10$UoLvrCwgloGMUgelGFZ8RO6qzFcC1g9/FgJY8I6QvcBj1vxGxwqLq', '30003312500497', '1', '2017-73', '123456556', 983, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(951, 'ضياء الدين محمود محمد احمد', 4, 4, '1212', '$2y$10$pPEs7kuZsCgBcBpd9M2Whuu5dwElCyBrZKWqukM1.iY9NoI7AZNeW', '30002132600136', '1', '2017-74', '123456556', 984, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(952, 'عبد الله محمد محمود ابوبريك', 4, 4, '1212', '$2y$10$u9Bgq2torFCvdR7aWOb9meoqOJ8h9FJF3iORD294LWU2UxrT.nCOK', '30003228800795', '1', '2017-75', '123456556', 985, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(953, 'عبدالرحمن جمال احمد محمد', 4, 4, '1212', '$2y$10$h7QYQ3j4Bwtj5Sw/iDxnX.k2NPYTyjMwQlf2199IqAA4l/LlvcAYm', '29912112500535', '1', '2017-76', '123456556', 986, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(954, 'عبدالرحمن سيد عبدالرحمن سيد', 4, 4, '1212', '$2y$10$8VZ5T1HhnyDPfPBljP.i3eH.6S21FWM3SfOIKbdC6Lyp3HUp1WW3G', '30003262700295', '1', '2017-77', '123456556', 987, '2019-03-14 13:24:31', '2019-03-14 13:24:31', 0, NULL),
(955, 'عبدالرحمن ماهر مخلوف محمود', 4, 4, '1212', '$2y$10$W9/Adcj5/BW7EIs8T/MEDOEqp/IZyzWQUpofldJ.9Gq5pA7sNZ6dO', '30002152607971', '1', '2017-78', '123456556', 988, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(956, 'عبدالعزيز ناصر فتحى محمد', 4, 4, '1212', '$2y$10$lrbckm/lAyv7oYvzq9ADuO9YcJhWBz6MrRTuZWPF/NP8rBcSLQUDS', '30006242502836', '1', '2017-79', '123456556', 989, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(957, 'عبدالله احمد حمدى محمد', 4, 4, '1212', '$2y$10$6oPc0nI2kwnSRr0b22tMS.CDAYNNWtvYhMqgdpRYFePurT2t/P8Lq', '30005062501177', '1', '2017-80', '123456556', 990, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(958, 'عبدالله احمد عبدالباسط محمد', 4, 4, '1212', '$2y$10$KeAYeaNnX4gdXcGHMH/jZOxwHpFMafMo9oM3s3mGDa43CGhi/PQNi', '29912272500299', '1', '2017-81', '123456556', 991, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(959, 'عبدالله احمد مهدى عبدالسلام', 4, 4, '1212', '$2y$10$aJ3s2ykiV75El1D0fGhOc.reg4tdRo6MQY5F5EiyWnTIzFMTsEA4a', '29905032600893', '1', '2017-82', '123456556', 992, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(960, 'عبدالله الوردانى السيد محمود', 4, 4, '1212', '$2y$10$OKuoflRd.5ywIf7qurHzteK0sfY1DznL333OIi.DA/nb73PEi2ysG', '29910102602531', '1', '2017-83', '123456556', 993, '2019-03-14 13:24:32', '2019-03-14 13:24:32', 0, NULL),
(961, 'عبدالله صلاح الدين عبدالله عثمان', 4, 4, '1212', '$2y$10$VKryaWOKLWuXJUgajjK/o.OQ//p8P8rTzDZmqS0Zk.Rhja2duh.8i', '30003142800318', '1', '2017-84', '123456556', 994, '2019-03-14 13:24:33', '2019-03-14 13:24:33', 0, NULL),
(962, 'عبدالله عاطف عبدالعظيم على', 4, 4, '1212', '$2y$10$yRdvGQGReGWJAVuT1Bw0mOKG4iHY5sk5dxvIu/G.Eq1S8yNeBKUk.', '29811092502292', '1', '2017-85', '123456556', 995, '2019-03-14 13:24:33', '2019-03-14 13:24:33', 0, NULL),
(963, 'عثمان على محمد منصور', 4, 4, '1212', '$2y$10$riQMa3J8HT6LH4cZLRe.gevOMguItp9DnP7hByXVYWz1OzvDXqRYi', '30001112500473', '1', '2017-86', '123456556', 996, '2019-03-14 13:24:33', '2019-03-14 13:24:33', 0, NULL),
(964, 'عدنان مصطفى فريد فهمى محمد', 4, 4, '1212', '$2y$10$EIx/C5XEan8V2ldol/GWa.TjN8HS2m0OD85InQqAgyfcJGzPOBnGe', '29903162602992', '1', '2017-87', '123456556', 997, '2019-03-14 13:24:33', '2019-03-14 13:24:33', 0, NULL),
(965, 'علاء جاد عدلى حنا', 4, 4, '1212', '$2y$10$H6xSEfsta5NwbJGQWOT6tuLCSeen9.OkVZGxQZtc2CiYHszRT0O5O', '29805012505211', '1', '2017-88', '123456556', 998, '2019-03-14 13:24:33', '2019-03-14 13:24:33', 0, NULL),
(966, 'على احمد عبدالحميد احمد', 4, 4, '1212', '$2y$10$si3xGCm4rZNwdZYeNd94QOau14q8C2OHli/HeFr3JROpvtQOH0gzK', '30003262600258', '1', '2017-89', '123456556', 999, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL);
INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(967, 'على قضب محمد علي', 4, 4, '1212', '$2y$10$xT.K9OvgQVxNgzVv3V0B3euxbmOwp7IUdT4ZCJwwg/Ls0/GtwPC5O', '30007312500034', '1', '2017-90', '123456556', 1000, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL),
(968, 'على ماهر محمود محمد', 4, 4, '1212', '$2y$10$3M6vqHraOFUOiE7QR8XTGuAd75QFZdgaMznTcWvXa9vdgpGRN7TDy', '29911182601839', '1', '2017-91', '123456556', 1001, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL),
(969, 'علياء احمد على احمد', 4, 4, '1212', '$2y$10$bt/cmsRGJRvdJlwdtnou3uMShma72vsmAvhoVpLmJHIPSP77CsPO.', '30007152606086', '1', '2017-92', '123456556', 1002, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL),
(970, 'عمر اشرف عمر عجمى', 4, 4, '1212', '$2y$10$lyv28rxheVjmuwPpP/4xoOTFJV24pHWBM1ehTMIK2MMKvk/GsNzsC', '30005082602238', '1', '2017-93', '123456556', 1003, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL),
(971, 'عمر عبدالرازق عبدالعال سويفى', 4, 4, '1212', '$2y$10$4In3OPO2hS18fNtXtoSk6OG.w7VwHH8yBgccvlSlns5z9QRaypj4i', '29909302502274', '1', '2017-94', '123456556', 1004, '2019-03-14 13:24:34', '2019-03-14 13:24:34', 0, NULL),
(972, 'عمر عبدالناصر احمد سيد', 4, 4, '1212', '$2y$10$wLj1L.3rvmA/ZmrdN4yJTOYPyrb2Oz2qEt..iuXqLnmbjtvAYOmlC', '29802082706036', '1', '2017-95', '123456556', 1005, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(973, 'فاطمه عبدالحكيم محمد صادق', 4, 4, '1212', '$2y$10$SfUW1K4RJJXhpJRdwK3mBOl84iDvP.HDOc61aVpURqmXEhUrx8lre', '30009012508508', '1', '2017-96', '123456556', 1006, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(974, 'فايز حشمت فايز فهمي', 4, 4, '1212', '$2y$10$ZpGFZAbmXLHOmJILpN105uFxbgRJIeJzoOKAETo/OilpLL.4VP1Aq', '30009012620472', '1', '2017-97', '123456556', 1007, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(975, 'كريم خالد على احمد', 4, 4, '1212', '$2y$10$PZXCkVrdG9idvaQooBSFvOavwV.IXWwvCKSjR5QzJZ2TfLMohyE1.', '30008132500431', '1', '2017-98', '123456556', 1008, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(976, 'كيرلس انسى صبحى انيس', 4, 4, '1212', '$2y$10$6zzCLntzM6UyiDGvCgEM3eOFh9PXu51UkOFyRybF0HuRkwyov/z8i', '30101212501692', '1', '2017-99', '123456556', 1009, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(977, 'كيرلس رومانى صموئيل ميخائيل', 4, 4, '1212', '$2y$10$K5AIAy9uPG/ZlLWZSdzNVeMZ7Qbuzh6VA2iea9.mswv.MRaZY7NI.', '29910282501797', '1', '2017-100', '123456556', 1010, '2019-03-14 13:24:35', '2019-03-14 13:24:35', 0, NULL),
(978, 'كيرلس نادى اسرافيم تاوضروس', 4, 4, '1212', '$2y$10$oqik7AsRx4SYr9zNta2KMedzPjvOPE1BkSVSY0AFWmPH.0ax9gFoW', '30009192501832', '1', '2017-101', '123456556', 1011, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(979, 'ماتيوس متياس اسعد فهيم', 4, 4, '1212', '$2y$10$jE6FrMHNQeLGI3O7..VKDuUHnA3vk/467LUZOvtRKAYgJmsQtgP2G', '30002052503695', '1', '2017-102', '123456556', 1012, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(980, 'مايكل ميلاد لبيب فرج', 4, 4, '1212', '$2y$10$mq7.KiHQowCsE6RGAqAPdeY76ANeqO60i3bWRwZdHMDVE.hG87LEG', '30008242502251', '1', '2017-103', '123456556', 1013, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(981, 'محمد احمد حسن احمد', 4, 4, '1212', '$2y$10$rwISquldl0eRc1i8XUcBuO6htr8dp9LTDyCvi7RubHMsTzg4VTERS', '30005273100039', '1', '2017-104', '123456556', 1014, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(982, 'محمد احمد حسن شحاته', 4, 4, '1212', '$2y$10$EdnBMAQIJnvWvB5vnNALm.r90w.7gk6/BpX72yyfYAerdUMSW9yMC', '30001202700919', '1', '2017-105', '123456556', 1015, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(983, 'محمد احمد طه احمد', 4, 4, '1212', '$2y$10$c/nu/nNB.8Ftif3p4rTf2OFN5R4J62nbOFw094qdOIGb6c04OIFu.', '30006142501735', '1', '2017-106', '123456556', 1016, '2019-03-14 13:24:36', '2019-03-14 13:24:36', 0, NULL),
(984, 'محمد احمد محمد على', 4, 4, '1212', '$2y$10$w4ZoR0HXmiPTrdMN/rqVGOUVGJJWpkfJuEuXyNLF/tK0BazB6yBiC', '29905042500935', '1', '2017-107', '123456556', 1017, '2019-03-14 13:24:37', '2019-03-14 13:24:37', 0, NULL),
(985, 'محمد احمد هاشم محمود', 4, 4, '1212', '$2y$10$MwUga5QvsfZoV4pTzrESpu9juKFmdaMSbfGPLxFAW/ZC9JUl4zDuC', '29903012704312', '1', '2017-108', '123456556', 1018, '2019-03-14 13:24:37', '2019-03-14 13:24:37', 0, NULL),
(986, 'محمد انور نجيب عبدالنبى', 4, 4, '1212', '$2y$10$UlPtNLO5/O4Qw.vxP8Z78egbqP18nk1aQgNk3qLIOEn8K1htnxZy2', '29911082501799', '1', '2017-109', '123456556', 1019, '2019-03-14 13:24:37', '2019-03-14 13:24:37', 0, NULL),
(987, 'محمد ايمن على سليم', 4, 4, '1212', '$2y$10$TTvyhDRLV3Mfx4YcMyCKOeS985tnIHMdSpX.JJCO28yZsrpsMCfzO', '30101248800653', '1', '2017-110', '123456556', 1020, '2019-03-14 13:24:37', '2019-03-14 13:24:37', 0, NULL),
(988, 'محمد ايمن محمد عبدالمطلب', 4, 4, '1212', '$2y$10$1ij/dEdZGErDixTp8v4U.eTfNFon4q3bIdzybGHJu1klGE0GON9XO', '29907152603317', '1', '2017-111', '123456556', 1021, '2019-03-14 13:24:37', '2019-03-14 13:24:37', 0, NULL),
(989, 'محمد جادالرب عبدالحميد محمد', 4, 4, '1212', '$2y$10$Pd8raiMjtuo1ZWabNA2vMeE4xB9mSfeE.3M.jWFlfPw3q0to7mRmO', '29707132502418', '1', '2017-112', '123456556', 1022, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(990, 'محمد جمال عبدالناصر احمد عبدالحافظ', 4, 4, '1212', '$2y$10$fD6FbHkuSrbV1nFMg72rRueUXQSswXTjUA8mhDruieausSW9hEgUy', '29906052602376', '1', '2017-113', '123456556', 1023, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(991, 'محمد حسام الدين محمود عاطف حسن الشاذلى', 4, 4, '1212', '$2y$10$cc3U6lRniNqSELF85AkhjOCBK5FrgE0yjKNuzCfNCidOZUWgzDL7y', '30010272600392', '1', '2017-114', '123456556', 1024, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(992, 'محمد حسين السيد حسين الرزاز', 4, 4, '1212', '$2y$10$mDqbBvFNLDGxBRb5z5Asjem/4DQmHpoEdUUyz6jB6g2Z79g2z8cSC', '30006211200513', '1', '2017-115', '123456556', 1025, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(993, 'محمد حمدي عبدالرحيم احمد', 4, 4, '1212', '$2y$10$qZlH3Vwqif.0dwcsroCKyuzTZHiWeIQZDF1bJrVcD00VwQnoInJP6', '30008012802337', '1', '2017-116', '123456556', 1026, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(994, 'محمد حنفي محمود سيد', 4, 4, '1212', '$2y$10$PEaIKyykvRp1KD1HMXjXY.sXrZPOT8nPX5V4l5ZQt3QfQy8aqksF6', '30005063200057', '1', '2017-117', '123456556', 1027, '2019-03-14 13:24:38', '2019-03-14 13:24:38', 0, NULL),
(995, 'محمد خضر احمد هاشم', 4, 4, '1212', '$2y$10$UNr8iXZFTVwBGGRYFzKK5Oz0hODDxTcC02GBEQQ75n8fJjtY/zKcK', '30003272600256', '1', '2017-118', '123456556', 1028, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(996, 'محمد رشوان عبدالودود محمد', 4, 4, '1212', '$2y$10$n2Ci5Eli.cLzMl2NhhhMfuX5mR21lkes9yTyPW112PuCmzzw7wxga', '30007228800774', '1', '2017-119', '123456556', 1029, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(997, 'محمد رمضان جاد الله محمد', 4, 4, '1212', '$2y$10$/tdikFespacr7H5CDPFXX.4Bd6SWB2BhB6ZFo4rpRMjR0xHrSknlq', '30002012613595', '1', '2017-120', '123456556', 1030, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(998, 'محمد سامي وهبه متيرد', 4, 4, '1212', '$2y$10$205IcWsUI/oCi.Czvg6GEO40fO7pPnpc4GP8STBIIgs0jOG4iV73u', '30009251101177', '1', '2017-121', '123456556', 1031, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(999, 'محمد سيد محمود عبداللاه', 4, 4, '1212', '$2y$10$8p4OR24f.FEnVh15lEjKZ.a5YShcSF2wwnu2VWSFZiELj9XGmyTEy', '29910032501996', '1', '2017-122', '123456556', 1032, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(1000, 'محمد سيد محمود يوسف', 4, 4, '1212', '$2y$10$hl2u3TuVmimWHN.ZefUN2OIVB5h/cwNboWpCnmRJ9h.veIudd3jmS', '29911112500695', '1', '2017-123', '123456556', 1033, '2019-03-14 13:24:39', '2019-03-14 13:24:39', 0, NULL),
(1001, 'محمد صالح فكرى عبدالمجيد', 4, 4, '1212', '$2y$10$xv3EaPva9JiArcfuvf/wEuh.mtmTvITtj.HaHnQ/hiqYvhUacE7wO', '29810252500414', '1', '2017-124', '123456556', 1034, '2019-03-14 13:24:40', '2019-03-14 13:24:40', 0, NULL),
(1002, 'محمد صبرى رجب عبدالله', 4, 4, '1212', '$2y$10$xRwhlJh9mEicwwPuRNtYHOjj49HgNoKx2WZfTyC4mkoOHt/anf.9e', '30010012626371', '1', '2017-125', '123456556', 1035, '2019-03-14 13:24:40', '2019-03-14 13:24:40', 0, NULL),
(1003, 'محمد صفوت خضر حسين', 4, 4, '1212', '$2y$10$Lx2Ju76mbpA7n8QTcINvU.2.niYuH.sho2814yFQEI9BQqUBxFT3C', '30001022502116', '1', '2017-126', '123456556', 1036, '2019-03-14 13:24:40', '2019-03-14 13:24:40', 0, NULL),
(1004, 'محمد صلاح احمد عبدالحافظ', 4, 4, '1212', '$2y$10$fUtzjCr5j/O1nHq7/ZtRheJUw4DtTiMjDpcrQdMbuwY0hgdDX3MSq', '30002022502635', '1', '2017-127', '123456556', 1037, '2019-03-14 13:24:40', '2019-03-14 13:24:40', 0, NULL),
(1005, 'محمد طارق محمد ابوالمجد', 4, 4, '1212', '$2y$10$yvSSq6NskABxiZcvpI8lVOfOYD7HkFtlQG62eEa0rWc0qLFtKJGsi', '30103202503711', '1', '2017-128', '123456556', 1038, '2019-03-14 13:24:40', '2019-03-14 13:24:40', 0, NULL),
(1006, 'محمد عبدالحكيم عبدالعاطى عبدالحكيم', 4, 4, '1212', '$2y$10$SXp6ndtRTpTH2wxRfR/rWeMxWB34yHkLLmNXzMrF36epEgUtJ/nFW', '29905308800093', '1', '2017-129', '123456556', 1039, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1007, 'محمد عصام محمد حامد', 4, 4, '1212', '$2y$10$G1MkU1ETG/VVcQMOAx2wH.BXKzWL60kMjiXUQfeSnoMEm3/9.y1aS', '30005018800116', '1', '2017-130', '123456556', 1040, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1008, 'محمد فتوح محمود بهجه', 4, 4, '1212', '$2y$10$54KtVJEMeiSPt7bu9X0rluGgMqvJ6P7DtxPhLa/TLSot72ZGsz2tG', '30001012670398', '1', '2017-131', '123456556', 1041, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1009, 'محمد محمود عبدالتواب يوسف', 4, 4, '1212', '$2y$10$GZZ0.yfYt51GK6GBn6VCfOxhtO6voMqkQJazyV5rW8UCzguvbks7e', '30008312500111', '1', '2017-132', '123456556', 1042, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1010, 'محمد محمود عفيفى عطية', 4, 4, '1212', '$2y$10$ldA2ZJfSZMBuRh1ZkZEoH.zctVSCx2NOcepjDGnMirs3N6rMSh.fq', '30005171402316', '1', '2017-133', '123456556', 1043, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1011, 'محمد محى الدين سلامه محمد', 4, 4, '1212', '$2y$10$gUkk084r6ZlrLs1vtyIL1.QkR7QzWGygIGobrrTdIZtKpd7imWvtK', '29907252502755', '1', '2017-134', '123456556', 1044, '2019-03-14 13:24:41', '2019-03-14 13:24:41', 0, NULL),
(1012, 'محمد مصطفى فتحى عبدالجابر', 4, 4, '1212', '$2y$10$okPoE.mRj2UzbvJsvdh0.uA6YmgNtBQ0.zjYLFupQ4VP/WIhBHNju', '30002192501374', '1', '2017-135', '123456556', 1045, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1013, 'محمد ممدوح فتحى احمد', 4, 4, '1212', '$2y$10$ljpelGZRIvrO4zMfVpLjFeWZgCIdril9p5K.OFP24hOuDuIwkDqVi', '29812292501017', '1', '2017-136', '123456556', 1046, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1014, 'محمد نصر عبدالرازق جودة', 4, 4, '1212', '$2y$10$Fx8AWARlrPWifF720tW2.uCKMiM6RiFDPSNz6lvDSUqMxV5g8GlIe', '29911192500593', '1', '2017-137', '123456556', 1047, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1015, 'محمد يكن محمد جاد الرب', 4, 4, '1212', '$2y$10$GZ8mR.5IahtIfDl0cU1XLuoobfz/2sJ0UoomBZvsWejM7eBtDvja2', '30011268801096', '1', '2017-138', '123456556', 1048, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1016, 'محمد يوسف محمد مصطفى', 4, 4, '1212', '$2y$10$mAq/ZSQJ/OgvbZu6eUP2se9jBLzu6E9JUaRPEPzbAHDjeMqY7zQHa', '30001013100757', '1', '2017-139', '123456556', 1049, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1017, 'محمود ابراهيم خميس متولى', 4, 4, '1212', '$2y$10$0SmkvoUM8H0px.HZgU5LSObXdQycIDxhltXiIYYtlkWD1r5IZ6zDi', '29909132501154', '1', '2017-140', '123456556', 1050, '2019-03-14 13:24:42', '2019-03-14 13:24:42', 0, NULL),
(1018, 'محمود حسين عبد ربه عبدالعليم', 4, 4, '1212', '$2y$10$yhBdnmApfUr11GIdoV75xe00ImnD69VOJhc0reiCE.coynHYq1Gpe', '30001250202874', '1', '2017-141', '123456556', 1051, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1019, 'محمود حمدى مرسى احمد', 4, 4, '1212', '$2y$10$SxX7apG3EEDzJ8ycuWId9.Q.UtEPzZa1JqzW/RjW14W1iqKj0Yiwe', '30001092600255', '1', '2017-142', '123456556', 1052, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1020, 'محمود حنفى محمود عبدالكريم', 4, 4, '1212', '$2y$10$vz4VfKrGiUaE97PD07Hi4Of4eWs8EbdJy0HYkAe2NR8pipX0bOU9i', '29909012505695', '1', '2017-143', '123456556', 1053, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1021, 'محمود رجب بكري علي', 4, 4, '1212', '$2y$10$JoqWXoIE3AG8Rm8DPhhX.ODUcmVaWvm3HQTuf73WNKyYgyXYWh5jK', '30003282701611', '1', '2017-144', '123456556', 1054, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1022, 'محمود سيد حسن سيد', 4, 4, '1212', '$2y$10$d5PE8bIxxrX8cuD1Kt39SeaCKtfK4HhU2gTFMzdE7qA9F8bC1n/1m', '30002212500752', '1', '2017-145', '123456556', 1055, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1023, 'محمود عبدالرحيم عباس حسنين', 4, 4, '1212', '$2y$10$WYNzt.IXiy1uZdCXg5WY1.2oTQ09VdKhutWu0i9HE8LZY3LP8lclm', '30001102700873', '1', '2017-146', '123456556', 1056, '2019-03-14 13:24:43', '2019-03-14 13:24:43', 0, NULL),
(1024, 'محمود عبدالكريم محمد خلف', 4, 4, '1212', '$2y$10$rb0cvr2D1OAQ5GVWoyDqO.IagjNK9Jwa5/vjm6JjihABquHYGoiau', '30006192502295', '1', '2017-147', '123456556', 1057, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1025, 'محمود علاء القياس ابراهيم القياس', 4, 4, '1212', '$2y$10$UxvfhtRvk76pGJM923yef.cYo7WkcZplq/yiuWSezRNrq9iqLsds6', '30009090202512', '1', '2017-148', '123456556', 1058, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1026, 'محمود عماد الدين عبدالسلام اسماعيل', 4, 4, '1212', '$2y$10$F6CVg7Ee9t38dt0Dfi0F5efQ9N0dS.ZVqq0tmVIdXFfZ4loB4HFxa', '29902012701015', '1', '2017-149', '123456556', 1059, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1027, 'محمود محمد ابوضيف عبدالحفيظ', 4, 4, '1212', '$2y$10$vY3xzJShncxN/zusYYCp6.riZicMuzeZVNCBlGT4gmmHxU8IOdvKy', '30005012608515', '1', '2017-150', '123456556', 1060, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1028, 'محمود محمد الصادق علي محمود', 4, 4, '1212', '$2y$10$qxUOKFWzyFfpfwaKHWeJa.PBn.phvaYLX438Edr5guowYMFsrnMxe', '30009302801578', '1', '2017-151', '123456556', 1061, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1029, 'محمود محمد سيد محمد', 4, 4, '1212', '$2y$10$ndmiNbN02A9c4wgOekj5x.mYLRcTUVECBGay9gff/z4uTRfO0mWPm', '30005242501116', '1', '2017-152', '123456556', 1062, '2019-03-14 13:24:44', '2019-03-14 13:24:44', 0, NULL),
(1030, 'محمود محمد محمود عبدالعال', 4, 4, '1212', '$2y$10$Oz5/5XceFEwnIIMq1MF.B.gO0/XiuQm9jtMCccqSc3WOvBOT8dhAm', '30008092502495', '1', '2017-153', '123456556', 1063, '2019-03-14 13:24:45', '2019-03-14 13:24:45', 0, NULL),
(1031, 'محمود ناجى رمضان على', 4, 4, '1212', '$2y$10$fLF7EpJCkRBvwQdOM834rO.wCny/EagDwvP1gpDTFu.4WY4xt56Hq', '29810242502737', '1', '2017-154', '123456556', 1064, '2019-03-14 13:24:45', '2019-03-14 13:24:45', 0, NULL),
(1032, 'مروه عبداللاه على محمدين', 4, 4, '1212', '$2y$10$pL7o5lZfxKuOgk0s2qm88u3ThtxXEsUG7mfXAXf8CNEFTi2kAq6pq', '29911012506084', '1', '2017-155', '123456556', 1065, '2019-03-14 13:24:45', '2019-03-14 13:24:45', 0, NULL),
(1033, 'مريم اسامه عثمان على', 4, 4, '1212', '$2y$10$w.Xoqu..t2XYWz0uEY3aiufBHQzDB.QV1wM0mI.VbcEE8tV8cw3BK', '30009302500624', '1', '2017-156', '123456556', 1066, '2019-03-14 13:24:45', '2019-03-14 13:24:45', 0, NULL),
(1034, 'مصطفى احمد محمد السيد مرسى', 4, 4, '1212', '$2y$10$j18R3HvjazkaWJgcQQ8Dp..PCZMgBulTvU8KlBJI3EARLAfUoRGj2', '29812271400679', '1', '2017-157', '123456556', 1067, '2019-03-14 13:24:45', '2019-03-14 13:24:45', 0, NULL),
(1035, 'مصطفى احمد محمد حسن', 4, 4, '1212', '$2y$10$OPOe3JRhLS2COHZICCbM9.ptnzNCwEVnlT4TgNyC0QJrNriiLkh4S', '30008032502992', '1', '2017-158', '123456556', 1068, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1036, 'مصطفى حسنى فرغلى محمد', 4, 4, '1212', '$2y$10$lnFOeiiCI0yIcsdcsYidd.9pFLBjVZ4NshLJLmoac1mEA5Vk1ee0m', '29905062502373', '1', '2017-159', '123456556', 1069, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1037, 'مصطفي حسين امين محمود', 4, 4, '1212', '$2y$10$CD7vkF/KtBH/k6nGoJ3/xOE86UjRaa/I.eqqbTFbtjG88P7yXWapK', '29907242701156', '1', '2017-160', '123456556', 1070, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1038, 'مصطفى سمير مصطفى محفوظ', 4, 4, '1212', '$2y$10$7L8/euE.299fLwhOTrXMMe9xfCVMxOwM21Vdy7ExH2JJCi4yYCera', '29905082501292', '1', '2017-161', '123456556', 1071, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1039, 'مصطفى طلعت حسن احمد', 4, 4, '1212', '$2y$10$2UVOkSPFx2VkOuZIrVt5ZuMzfbnE4oZQuEGjxwBMlO2o51MoNzZUi', '29909242500951', '1', '2017-162', '123456556', 1072, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1040, 'مصطفي عادل محمد ابوبكر', 4, 4, '1212', '$2y$10$dmQGgxAO4E.qZv.NFC5NpuWVVuBvBx3wML3Qqaae7QOsCrkQ9j9qe', '30012103200094', '1', '2017-163', '123456556', 1073, '2019-03-14 13:24:46', '2019-03-14 13:24:46', 0, NULL),
(1041, 'مصطفي عطيه احمد حسن', 4, 4, '1212', '$2y$10$2WpFSi9wHdRz5OhUqy82m.68sHdkXWlIIMZdd3M8l5WWeB/j7B06e', '30009102703873', '1', '2017-164', '123456556', 1074, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1042, 'مصطفى محمد بخيت عبدالكريم', 4, 4, '1212', '$2y$10$o6xs5TsMQbrR0bMUjbjSsuKEhqbHpnOKWlthcqluiIO/8XANTkRfq', '30004012606214', '1', '2017-165', '123456556', 1075, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1043, 'مصطفى محمد عبدالمجيد ابراهيم دسوقى', 4, 4, '1212', '$2y$10$Gn.wfKMku0KAIK1Sc3Gs0e5MNcAEl5WB7c8LoHqJaKQQ8SULl0i3W', '30010211402938', '1', '2017-166', '123456556', 1076, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1044, 'مصطفى مقنع حسان عباس', 4, 4, '1212', '$2y$10$dVWkh3Qq8pZrfdkV9sQULu2OXn0OxwQM6ybShoj9pUxf3UJQAp1J6', '30003012511039', '1', '2017-167', '123456556', 1077, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1045, 'مهند هشام عبدالمنعم عبدالسلام', 4, 4, '1212', '$2y$10$qhVYL6vTdWuliN3khrp1EOfCJBEkcdweIA4lrMKjdNFl8pPaxVefK', '30001242501315', '1', '2017-168', '123456556', 1078, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1046, 'مولر مجدي نمر جاد الكريم', 4, 4, '1212', '$2y$10$GAwt5xLOnaOgV9w28U5fY.sqj7KWsThH4HBMzDefo2x9bO8M.skNy', '30007072502077', '1', '2017-169', '123456556', 1079, '2019-03-14 13:24:47', '2019-03-14 13:24:47', 0, NULL),
(1047, 'ميار عاطف نجيب عبد الظاهر', 4, 4, '1212', '$2y$10$Zx4zaywZJ6cXeDwRizWq3.R/D6frlRfLqP6DtXkT8Csn5YtLT5cR6', '30001052503206', '1', '2017-170', '123456556', 1080, '2019-03-14 13:24:48', '2019-03-14 13:24:48', 0, NULL),
(1048, 'ميرنا حربى عبدالشهيد رزق', 4, 4, '1212', '$2y$10$EcDFtrMr6xDtfp.HVWhwu.s87GxEOvnnlNUZLElE/6WfpDh9f4xHa', '29901012516483', '1', '2017-171', '123456556', 1081, '2019-03-14 13:24:48', '2019-03-14 13:24:48', 0, NULL),
(1049, 'مينا عماد حليم اسحق', 4, 4, '1212', '$2y$10$8uaX7YUR53BzTHobwZe6zu.V4H/DzwaeKfCRWLyKxqm6Itc./kqJC', '29812052502792', '1', '2017-172', '123456556', 1082, '2019-03-14 13:24:48', '2019-03-14 13:24:48', 0, NULL),
(1050, 'مينا ميلاد محروس يعقوب', 4, 4, '1212', '$2y$10$IUgImxLJ/R8bgEO0E8wmOeDbkfsPdewG62irp3WExnmvjtIDKr1jO', '30008022500096', '1', '2017-173', '123456556', 1083, '2019-03-14 13:24:48', '2019-03-14 13:24:48', 0, NULL),
(1051, 'نجم الدين عثمان سيد حسين', 4, 4, '1212', '$2y$10$.oBowJYBQL3dD6OJ26uQPuNYrvRi/r5O384y5dftV2CyEfbs10Qe6', '30008142501916', '1', '2017-174', '123456556', 1084, '2019-03-14 13:24:48', '2019-03-14 13:24:48', 0, NULL),
(1052, 'نحمده محمد عبدالباسط حسين', 4, 4, '1212', '$2y$10$GDI5KBvZ5qR61zVaekwkzeOTbwZGS/sdYbJkReJPGZ5VjPp96pi1q', '30006252500629', '1', '2017-175', '123456556', 1085, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1053, 'ندى وائل مصطفى محمود', 4, 4, '1212', '$2y$10$A1fGbBYW9BSS4wTBQgTJm.q3hm/.VTTsX7q44V2N7wFuniAhfbona', '30006072501864', '1', '2017-176', '123456556', 1086, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1054, 'نور محمد المختار سيد', 4, 4, '1212', '$2y$10$6kVDTOA84FBGBkiLozE6e.a3uCivuIfsYiuHDB1TqovMQGkqFvAxq', '30005282500775', '1', '2017-177', '123456556', 1087, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1055, 'نورا محمد عبداللاه سليمان', 4, 4, '1212', '$2y$10$Zz7AysNLYEVbl87dMq3s2OKsDxTmsFb5Z0Jj7Rh4hlfEnQcPz0Uiy', '29903032500446', '1', '2017-178', '123456556', 1088, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1056, 'هند جمعه علي بسيوني', 4, 4, '1212', '$2y$10$SvBL938THOzqG3y3Ag3upOBdqea8.x5WEfHbiGTAXzrUOssNTH2/y', '30003263200164', '1', '2017-179', '123456556', 1089, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1057, 'وجدى سيد على خلاف', 4, 4, '1212', '$2y$10$mjefW8VnUVQ/jn6NYON1QOXk8/vByCZpspPISySXGoYgXr7FxWn..', '30002022500691', '1', '2017-180', '123456556', 1090, '2019-03-14 13:24:49', '2019-03-14 13:24:49', 0, NULL),
(1058, 'ولاء عبدالحكيم محمد عبدالصمد', 4, 4, '1212', '$2y$10$LvCP2qWqheEnNpSdN9BKGueA7RqJH3y9rLMfPtfUYb0eMVZdtSZvW', '29909112603082', '1', '2017-181', '123456556', 1091, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1059, 'ياسمين محمود عبدالعظيم احمد مطر', 4, 4, '1212', '$2y$10$yz.XrGBo.JNVyxS3gbSnZOwy9zGw5bdxGOqbGoI5ZSRo.ImJ6c6Mq', '29901281402389', '1', '2017-182', '123456556', 1092, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1060, 'يوسف أحمد محمد كامل موقع', 4, 4, '1212', '$2y$10$cBwmjsANtNALZ1ZIvetJVuDGxknubMSt.wyBZApAWZIiRrEIWC8Me', '30003140202359', '1', '2017-183', '123456556', 1093, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1061, 'يوسف احمد نجاح مهران', 4, 4, '1212', '$2y$10$0JVXGt3.zFp4rfn5kFEz.ux5608AZdlJNucerEKOYsM5xhX2qDTli', '30002052500599', '1', '2017-184', '123456556', 1094, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1062, 'يوسف السيد يوسف عبدالله', 4, 4, '1212', '$2y$10$Za54zZ0E5FikB6fIEzj5F.hWey9aDlq4RVkEnD81Uw9GfRM8QqX0W', '30007152606574', '1', '2017-185', '123456556', 1095, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1063, 'يوسف عمرو محمد ابراهيم', 4, 4, '1212', '$2y$10$jYEa.Ax0aC7YvLV8A/BYDO/9Tb.ai4VcVJhEJJol2tohFhb5Ljq1m', '30008040103118', '1', '2017-186', '123456556', 1096, '2019-03-14 13:24:50', '2019-03-14 13:24:50', 0, NULL),
(1064, 'محمود ايمن السيد', 4, 4, '29902192100111', '$2y$10$7.jC1EAvtBgT/h1Y/JoEOO/Ii6QPTRMclgC9VAiA3nyFWedtcjtE2', '29902192100111', '1', '2020 -2021', '321465', 1097, '2019-03-16 06:31:37', '2019-03-16 06:31:37', 0, NULL),
(1065, 'محمد محروص تركى', 4, 4, '29812012604959', '$2y$10$tOb169XKi0JcfL8dcBQ6DO6aSpJNrlsZoJiWHlNjnkqSPvRO2NgWG', '29812012604959', '1', '2020 -2021', '654', 1098, '2019-03-16 06:32:10', '2019-03-16 06:32:10', 0, NULL),
(1066, 'عمر محمد عادل', 4, 4, '29809092502913', '$2y$10$y2XkF3J6T2VtMu9yjJljN.YNSsiQ5r/nyUAaHmdOaNTB12A6b85me', '29809092502913', '1', '2020 -2021', '321321', 1099, '2019-03-16 06:32:38', '2019-03-16 06:32:38', 0, NULL),
(1067, 'فادى اشرف سمير', 4, 4, '29905032502174', '$2y$10$n7Ql6lhOrPCbZ8lzE5yPT.PwJCQY7yIYGQfwsHx5IGAu.F5XTuG6C', '29905032502174', '1', '2020 -2021', '6546', 1100, '2019-03-16 06:37:16', '2019-03-16 06:37:16', 0, NULL),
(1068, 'فادى طلعت مختار', 4, 4, '29805182500159', '$2y$10$A4vJ9X7FihgCnXptHOJ8Ie/P.wH9VXZZZm8fdX/lffhRMl4H4Maye', '29805182500159', '1', '2020 -2021', '654', 1101, '2019-03-16 06:37:58', '2019-03-16 06:37:58', 0, NULL),
(1069, 'فاو تاج الدين', 4, 4, '29711252602618', '$2y$10$YRsVKiwkWquo32ywK2eQNeyAPF2Vcg1CCUDF3/a/.6j8vGsrQV4Pq', '29711252602618', '1', '2020 -2021', '5646', 1102, '2019-03-16 06:38:29', '2019-03-16 06:38:29', 0, NULL),
(1070, 'شريف محمد احمد', 4, 4, '29811212500698', '$2y$10$Ndm.4w1uY6JcuEStS4RYueXnM1fyJEWM8yIvPUyChOGRt9EumzAuu', '29811212500698', '1', '2020 -2021', '654', 1103, '2019-03-16 06:39:02', '2019-03-16 06:39:02', 0, NULL),
(1071, 'عبد الحميد محمد عبد الحميد', 4, 4, '29701202503036', '$2y$10$8ZYjOB.YB5UulzP0wg7DHOEmtk0WzLGfArXIwmCL1H780BtT1XwsS', '29701202503036', '1', '2020 -2021', '654', 1104, '2019-03-16 06:39:41', '2019-03-16 06:39:41', 0, NULL),
(1072, 'حسام احمد', 4, 4, '29801262500634', '$2y$10$AeuIbWzZ8df0KZM1kthoOujyxVBMolIc1yk.PS.x0op0pXPJ7Z.fO', '29801262500634', '1', '2020 -2021', '654', 1105, '2019-03-16 06:40:34', '2019-03-16 06:40:34', 0, NULL),
(1073, 'مصطفى حسن محمد', 4, 4, '29801012518619', '$2y$10$xMfvo6H/uExF1DC8WqMWjuPLUNlC7NBF441HeGnYS0EObosUfik8a', '29801012518619', '1', '2020 -2021', '654', 1106, '2019-03-16 06:41:08', '2019-03-16 06:41:08', 0, NULL),
(1074, 'محمد سيد حسن', 4, 4, '29804122503675', '$2y$10$RKeBmT/N0SCDHIoyKydMmuTlKrdyOFGq2UegX5U87Tp0ZzOs/3DFS', '29804122503675', '1', '2020 -2021', '64', 1107, '2019-03-16 06:42:19', '2019-03-16 06:42:19', 0, NULL),
(1075, 'عمر محمد عبد العظيم', 4, 4, '29607182500713', '$2y$10$CxxZr6kXVsMvatUrq/nYlecKqQzNQfTG2eF0MGHQFSt25uR5FEZTG', '29607182500713', '1', '2020 -2021', '654', 1108, '2019-03-16 06:48:11', '2019-03-16 06:48:11', 0, NULL),
(1076, 'محمد عاطف قطب', 4, 4, '29807022500317', '$2y$10$fNq5mYgILV3Y1p9nGRN35uUQdziQtf3K3sHCPd.aBLDyEvUDPKkO6', '29807022500317', '1', '2020 -2021', '654', 1109, '2019-03-16 06:48:37', '2019-03-16 06:48:37', 0, NULL),
(1077, 'محمد كرم صديق', 4, 4, '29908112500538', '$2y$10$i1jtYqa.eBxXU8aa3qEeTOd97bbQYgIshee4etcAuRjOoiM1T51lG', '29908112500538', '1', '2020 -2021', '654', 1110, '2019-03-16 06:48:59', '2019-03-16 06:48:59', 0, NULL),
(1078, 'على حسن دسوقى', 4, 4, '29901022607035', '$2y$10$4CPoL6ntLlZ8wp5fnHxkn.0LEJWGv6wuKhkBlmr9HbzOTpsnlM.b2', '29901022607035', '1', '2020 -2021', '564', 1111, '2019-03-16 06:49:23', '2019-03-16 06:49:23', 0, NULL),
(1079, 'عبدالرحمن احمد طه', 4, 4, '29901012711898', '$2y$10$RNEnx.9HpAAMY/vKvTPf8OgGLg.qFVFjQaD0kp/q2kKtG0idfRsRC', '29901012711898', '1', '2020 -2021', '654', 1112, '2019-03-16 06:49:45', '2019-03-16 06:49:45', 0, NULL),
(1080, 'test', 6, NULL, NULL, NULL, NULL, '', '', '', 0, NULL, NULL, 0, NULL),
(1081, 'ابراهيم احمد حامد عبدالكريم', 4, 4, '29809122800396', '$2y$10$YhfphMj2l51dx6oezwIuaO7RPX8s6oUkZLQhE2nkJx.teQbQzPV72', '29809122800396', '2', '2018-2019', '123456556', 1121, '2019-04-09 03:51:17', '2019-04-09 03:51:17', 0, NULL),
(1082, 'احمد حسنى حامد خالد', 4, 4, '29809192604934', '$2y$10$KyDzH/I36kkLltJ1LJ98E.yvdtMhkPbDJj5mZJE7j5XYMcA5CylKK', '29809192604934', '2', '2018-2019', '123456556', 1122, '2019-04-09 03:51:17', '2019-04-09 03:51:17', 0, NULL),
(1083, 'احمد رضا رجب غريب', 4, 4, '29608072500137', '$2y$10$PkJiIP9uhMkrzaATYVfDB.X.Rb7k2JW1Cy9DH6Ei7U1ca/bvDGXkW', '29608072500137', '2', '2018-2019', '123456556', 1123, '2019-04-09 03:51:17', '2019-04-09 03:51:17', 0, NULL),
(1084, 'احمد علاء احمد محمد', 4, 4, '29802282601174', '$2y$10$bHJ.l.23GVpn2sL0SN5CleNJdbDuF2vf/Proc/5uqjLT6hsc7MQG6', '29802282601174', '2', '2018-2019', '123456556', 1124, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1085, 'اسراء رشاد توفيق احمد', 4, 4, '29804282102588', '$2y$10$CtYjifYeFj6j.M33FjOnue1DPbZ2oNIv3ooFXkKrFr1gVmWGW24Ry', '29804282102588', '2', '2018-2019', '123456556', 1125, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1086, 'امال عثمان عبد المعز حسان', 4, 4, '29711102601249', '$2y$10$lLVm3EYbs/UPtbMk7edMQuF//kncXHK8s8y5/l3rmDQmDnlk5MFGe', '29711102601249', '2', '2018-2019', '123456556', 1126, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1087, 'بيتر محروس عزيز لبيب', 4, 4, '29612162500532', '$2y$10$GWUgiQu7dvQD46A/jDzoZORwiirnGhWtuZXyiNZhiSVw6wByq/BFm', '29612162500532', '2', '2018-2019', '123456556', 1127, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1088, 'دنيا محمد عبد الرحيم', 4, 4, '2970317104447', '$2y$10$xU5VC66ycDphlDJFaTkvJe4/UTJcHJmzXNm9FcgOLwcYgrpZYVoiy', '2970317104447', '2', '2018-2019', '123456556', 1128, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1089, 'سهير احمد احمد عبد الرحيم', 4, 4, '29712242600222', '$2y$10$qd/hdtPyzJpBB0n5oZrC8etoUQPrALJiT9zD9UeHHQkHVc.2zTb52', '29712242600222', '2', '2018-2019', '123456556', 1129, '2019-04-09 03:51:18', '2019-04-09 03:51:18', 0, NULL),
(1090, 'عبد الرحمن على سيد تهامي', 4, 4, '29803292500372', '$2y$10$rnAqZgd11nqPxZsBdP0ZtOEjxyzT3Dei61BF78wwBO9jGD34q55Ii', '29803292500372', '2', '2018-2019', '123456556', 1130, '2019-04-09 03:51:19', '2019-04-09 03:51:19', 0, NULL),
(1091, 'كريم عاطف محمد بقلى', 4, 4, '29801282500096', '$2y$10$LDz.C7zn/Y.7WdKXi/bWouWxwbTvcTr8WcK7copMa41cBPAEmIwyi', '29801282500096', '2', '2018-2019', '123456556', 1131, '2019-04-09 03:51:19', '2019-04-09 03:51:19', 0, NULL),
(1092, 'محمد على عثمان سيد', 4, 4, '29809022502096', '$2y$10$asiZ69m1K6iK53QlpSRM5.l9vd/WULUFStfsADvBfUJ66KARltoX.', '29809022502096', '2', '2018-2019', '123456556', 1132, '2019-04-09 03:51:19', '2019-04-09 03:51:19', 0, NULL),
(1093, 'محمد فتحى قطب محمد', 4, 4, '29711242500175', '$2y$10$qvTWyPg.BRRmXA0T5OTWUeGdIM0qmHA3VU9PadmwaFcv2uunGI35e', '29711242500175', '2', '2018-2019', '123456556', 1133, '2019-04-09 03:51:19', '2019-04-09 03:51:19', 0, NULL),
(1094, 'محمد مصطفى أحمد سيد', 4, 4, '29801202702416', '$2y$10$bLhmHWnREBRwL//IiUmjReUHr8brOIQnqePPd9eV2vZehmEN9Wpsm', '29801202702416', '2', '2018-2019', '123456556', 1134, '2019-04-09 03:51:19', '2019-04-09 03:51:19', 0, NULL),
(1095, 'محمد يوسف مصطفي أحمد', 4, 4, '29805033200118', '$2y$10$e8YHm9OhAkr95og9tFDncu7SsCmcgD46TuWjT3CR4660nLIKbl3XW', '29805033200118', '2', '2018-2019', '123456556', 1135, '2019-04-09 03:51:20', '2019-04-09 03:51:20', 0, NULL),
(1096, 'مؤمن احمد مصطفى عبد الفتاح', 4, 4, '29807192800838', '$2y$10$LU1.m87aEbNP8cABxl6zgOtOcMOm6T3Pfu17b2GMRYfcBZUtWGOES', '29807192800838', '2', '2018-2019', '123456556', 1136, '2019-04-09 03:51:20', '2019-04-09 03:51:20', 0, NULL),
(1097, 'نرمين عبد العظيم عبد الرازق احمد', 4, 4, '29711262501348', '$2y$10$aYGmQoF2g9aD.FvoX/Vpje9NIkKK/.55jDAVNZ2/HTJc4WxrP.xRS', '29711262501348', '2', '2018-2019', '123456556', 1137, '2019-04-09 03:51:20', '2019-04-09 03:51:20', 0, NULL),
(1098, 'نفيسه محمد احمد عبد الرحيم', 4, 4, '29710222601041', '$2y$10$ss4sZXnd6E6wIWl2S7K5B.9657ULTi6Mw4xzTHEFdFdJNGL74oCm6', '29710222601041', '2', '2018-2019', '123456556', 1138, '2019-04-09 03:51:20', '2019-04-09 03:51:20', 0, NULL),
(1099, 'محمد سيد عبد الغنى حسن', 4, 4, '29401052505554', '$2y$10$1myBDZAQjNjZQfCQD2iLm.y/mzlsFTdHVDBnY97Fmr/Uq8cKgwasS', '29401052505554', '2', '2018-2019', '123456556', 1139, '2019-04-09 03:51:20', '2019-04-09 03:51:20', 0, NULL),
(1100, 'عمر ممدوح إسماعيل', 4, 4, '11111111111111', '$2y$10$Xdp/iod8TG8zjGc6YZ1RoeTSGx50o4GC2IOPm6Asj1TPEgrRto2mK', '11111111111111', '2', '2018 -2019', '8889997', 1140, '2019-04-09 04:19:26', '2019-04-09 04:19:26', 0, NULL),
(1101, 'ابتسام فتحى محمد احمد', 6, 5, '30008142500685', '$2y$10$VGOcTjTlG8HEUNc0LEYUsODwi0/K.7mf1BbfktqjcFe4.vz1G8NvG', '30008142500685', '1', '2017-18', '123456556', 1143, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1102, 'ازهار فرغلى محمد محمود', 6, 5, '30003082501766', '$2y$10$WZ04Ry8M99LkwsfQqGTSJeWBd.flqK8aWg9kR9O/DP0Xz7JqNXg.a', '30003082501766', '1', '2017-18', '123456556', 1144, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1103, 'اسراء جمال فتحى عبدالقادر', 6, 5, '30009012505983', '$2y$10$i3AxwjL0Dn.qJdMPB1m.Q.tW6nI7X8hyL/9E1lHrQb0ztji5TGGUW', '30009012505983', '1', '2017-18', '123456556', 1145, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1104, 'اسماء عبدالسميع هلالى على', 6, 5, '30009092501207', '$2y$10$5g7fFVIqHaaD0LH7h7g9B.tFrHZ3aBDrIja17GxFO5BQXUzwp0fmG', '30009092501207', '1', '2017-18', '123456556', 1146, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1105, 'اسماء مصطفى كامل عبدالعال', 6, 5, '29909052500068', '$2y$10$uLgC5XQhUY8VnQ7rlnYOQe6I2QPfOFPmEsTaKgo0I.24SrXyVQTG6', '29909052500068', '1', '2017-18', '123456556', 1147, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1106, 'الهام عادل حسنى عبدالبارى', 6, 5, '29911182500587', '$2y$10$BQLYY/6VI1HpmSVoLfk9uOfXIHOaqx6OJBxSdfgoHTzgbKbulv3Z.', '29911182500587', '1', '2017-18', '123456556', 1148, '2019-04-15 06:36:43', '2019-04-15 06:36:43', 0, NULL),
(1107, 'ام هاشم محسن عبده عبداللطيف', 6, 5, '30001222502889', '$2y$10$03XHxlzoVrysoM1IFZr7hulY5jtlibClvZWVIPc7JVcv.Sxx7u9WS', '30001222502889', '1', '2017-18', '123456556', 1149, '2019-04-15 06:36:44', '2019-04-15 06:36:44', 0, NULL),
(1108, 'امانى محمود يوسف تمام', 6, 5, '29911032500945', '$2y$10$GQCQ0nEC7lVybDFMgdx6IODPPz0Sm.6vsxnTNIe45K1CWeLmqMHZ.', '29911032500945', '1', '2017-18', '123456556', 1150, '2019-04-15 06:36:44', '2019-04-15 06:36:44', 0, NULL),
(1109, 'امل ايهاب سيد شاكر', 6, 5, '30008152503062', '$2y$10$Igh3rAo35ZEteM4OMUapB.KnXQjvCjD3pmdkV.6lKiktQJOVLIN62', '30008152503062', '1', '2017-18', '123456556', 1151, '2019-04-15 06:36:44', '2019-04-15 06:36:44', 0, NULL),
(1110, 'امل محمود على عيسى', 6, 5, '30002152504648', '$2y$10$8k1O5IMnQJ.Pufrm5MfEiO4/E6mWJRGs3GFuIvvJBYbJ3BPrC4SDK', '30002152504648', '1', '2017-18', '123456556', 1152, '2019-04-15 06:36:44', '2019-04-15 06:36:44', 0, NULL),
(1111, 'اميره انور عبدالعال عبدالعليم', 6, 5, '30006012502764', '$2y$10$U2bpQvzUqZl86SBDZVrbI.2Oly0P6fVQofKOwJHCl6va/imlHKYXe', '30006012502764', '1', '2017-18', '123456556', 1153, '2019-04-15 06:36:44', '2019-04-15 06:36:44', 0, NULL),
(1112, 'اميره لطفى عبدالجابر احمد', 6, 5, '30006022500921', '$2y$10$OwyTdE8yB9RNgydKr2rac.egwcm3/tWo7I8t2lXpmKVZ43TrO3UVq', '30006022500921', '1', '2017-18', '123456556', 1154, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1113, 'اميمه احمد سيد حسين', 6, 5, '30001032503943', '$2y$10$8GUKgSK5L8ZUIlBojYZ6Get8MLGNpRhCB28OWki0HpLPSlyzygjAq', '30001032503943', '1', '2017-18', '123456556', 1155, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1114, 'انجى جمال شحات صليب', 6, 5, '30010012502729', '$2y$10$TeYWg7HNmZDHZCWcoIddtOzBmu51guQ1mIrqriDHaSJbav/a1y/du', '30010012502729', '1', '2017-18', '123456556', 1156, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1115, 'ايه احمد منير فايق', 6, 5, '29911012501546', '$2y$10$UqoyV1a8PhOvvB/eKPc3u.MZ8YfUikbLtsoUXYvvLJOkFTq6V.tHq', '29911012501546', '1', '2017-18', '123456556', 1157, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1116, 'ايه بهاء الدين فؤاد محمد', 6, 5, '30008102501328', '$2y$10$3VVE9tZMw9O1GCSbkhbqm.P6hb5XIRlC9pzfwjB0DzJ.XOJ6ap4F.', '30008102501328', '1', '2017-18', '123456556', 1158, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1117, 'ايه عبدالحكم عبدالستار يونس', 6, 5, '29912072503269', '$2y$10$5IUvzOIZ/yfHadjGsuWrQOfy4FHt.2/lV0wjBUIrI5iEkMQ3xmpzO', '29912072503269', '1', '2017-18', '123456556', 1159, '2019-04-15 06:36:45', '2019-04-15 06:36:45', 0, NULL),
(1118, 'ايه محمد على محمد', 6, 5, '30004122500101', '$2y$10$Gqzz0DyctS8JfbfIgYIT2.nUciqYb0bVMn4cJjVeM6CKZfgVxkwzy', '30004122500101', '1', '2017-18', '123456556', 1160, '2019-04-15 06:36:46', '2019-04-15 06:36:46', 0, NULL),
(1119, 'بسمه على سليم محمد', 6, 5, '30008202504065', '$2y$10$LhPX1a47Wk1agNuu8QzvMeCG.s9MeJuqutlgZ/Bfv8GxFENl/gRK2', '30008202504065', '1', '2017-18', '123456556', 1161, '2019-04-15 06:36:46', '2019-04-15 06:36:46', 0, NULL),
(1120, 'بيشوى هانى فخرى عوض', 6, 5, '30008192502158', '$2y$10$z/CyvWaecxmfI0n1J2HMBOD6razM5qFvpWGKfrYKRg.e7DUd16OIG', '30008192502158', '1', '2017-18', '123456556', 1162, '2019-04-15 06:36:46', '2019-04-15 06:36:46', 0, NULL),
(1121, 'جيلان طه خليفه احمد', 6, 5, '30008282502424', '$2y$10$KoaGYiqmn3HlYgzJIxyrGOCTQru3YQSp6zDUbZi/K7/qOjV2bT52a', '30008282502424', '1', '2017-18', '123456556', 1163, '2019-04-15 06:36:46', '2019-04-15 06:36:46', 0, NULL),
(1122, 'حسناء عاطف محمد عبدالعاطى', 6, 5, '30006152501083', '$2y$10$sBLPe6aRFtorgbzPQ0fFh.p.DhsoG.px4zeyfu./.TFKq2quapvu6', '30006152501083', '1', '2017-18', '123456556', 1164, '2019-04-15 06:36:46', '2019-04-15 06:36:46', 0, NULL),
(1123, 'حنان سمير عزيز ابراهيم', 6, 5, '29801292500809', '$2y$10$oRS..FUpvN7rItW0wn2NweiHy5qKbp3ManeIAhn9BR15TZ5bBvFLq', '29801292500809', '1', '2017-18', '123456556', 1165, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1124, 'خلود خالد قاسم قوشتي', 6, 5, '30006012506182', '$2y$10$kI4sURrRHrWf125VX56Bc.tsvJlK3haA0eRUZ6mtG/0tSfF7KuLze', '30006012506182', '1', '2017-18', '123456556', 1166, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1125, 'دعاء حامد احمد عبدالموجود', 6, 5, '29912152502883', '$2y$10$Xh5A/Vw87Uiq2UifVjgiueFJ9rbWhG4YNPA/vwWgSnZla.dMvk4Km', '29912152502883', '1', '2017-18', '123456556', 1167, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1126, 'دعاء عاطف عبد المنعم اسماعيل', 6, 5, '30003042502344', '$2y$10$GbxOQ3MD/eyKEdZsXa506.6oCoKgUZ11NL64jGEg9wHtmT2eGXEXK', '30003042502344', '1', '2017-18', '123456556', 1168, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1127, 'دنيا نبيل رشدى خليل', 6, 5, '30005052500865', '$2y$10$ER2YRhAH.yJWPMsLUwz1HOE4vZ9lNMfssVYe5yM48NzXvm9Imtv..', '30005052500865', '1', '2017-18', '123456556', 1169, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1128, 'دينا سعد محمد عبدالكريم', 6, 5, '30009202501364', '$2y$10$hjcfNj28NdIGGQojruAco.EOcj/LFiUXc3J1Vsh2d.TP8fUdWT23m', '30009202501364', '1', '2017-18', '123456556', 1170, '2019-04-15 06:36:47', '2019-04-15 06:36:47', 0, NULL),
(1129, 'رانيا محمود منصور حسن', 6, 5, '29912212500923', '$2y$10$SiXKGanvPmFikjhntni3COGYlvky6tzQ4V2WL0bOJmUDMTsAbWS4K', '29912212500923', '1', '2017-18', '123456556', 1171, '2019-04-15 06:36:48', '2019-04-15 06:36:48', 0, NULL),
(1130, 'رانيا ناجح رياض ابراهيم', 6, 5, '30007042501084', '$2y$10$ZgoQZ5FFdUTbPjlrdwSva.vr8HYxZDZDt1VEDMA.rOUZ7XgkF.gDy', '30007042501084', '1', '2017-18', '123456556', 1172, '2019-04-15 06:36:48', '2019-04-15 06:36:48', 0, NULL),
(1131, 'رحمه الامير محمد عبدالحافظ', 6, 5, '30004142500922', '$2y$10$wom9rk5HpkhhCGS9XK89puYeHbx8s5/nmsCFircW930iwyoXLYjYO', '30004142500922', '1', '2017-18', '123456556', 1173, '2019-04-15 06:36:48', '2019-04-15 06:36:48', 0, NULL),
(1132, 'رشا عواد بسيونى عواد', 6, 5, '30001122500609', '$2y$10$9Z2s9wUNzbHpIJ1GBf2qme9lvXP6zDc5oksl5XLzvr4goe4GOo8RS', '30001122500609', '1', '2017-18', '123456556', 1174, '2019-04-15 06:36:48', '2019-04-15 06:36:48', 0, NULL),
(1133, 'روفيده مدحت مصطفى احمد', 6, 5, '30001242502664', '$2y$10$sgquifYfL4vDbHegiFxh1urcSwTJDP9ugkbYX/uBaICEeGI6bUmWu', '30001242502664', '1', '2017-18', '123456556', 1175, '2019-04-15 06:36:48', '2019-04-15 06:36:48', 0, NULL),
(1134, 'ساره جبر سعد جبر', 6, 5, '30101012521567', '$2y$10$/o1SHwmwjq08zSNq9BAbIOmdUaVxlcwDFvjqiazkV5Hf4kLKZATsq', '30101012521567', '1', '2017-18', '123456556', 1176, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1135, 'ساره خليل ابراهيم خليفه', 6, 5, '29910092500867', '$2y$10$uz4c0Dxnn0bB/V7U05dU8uR4E31pslguYYoCJb0ieEuylBttx65ES', '29910092500867', '1', '2017-18', '123456556', 1177, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1136, 'سلمى حمدى محمد محمد', 6, 5, '29910282502149', '$2y$10$LLwO3kWnp.BcT8sKQ1.uQutazKhXPJPkrfn2aZCZosyJZI/ddXO5S', '29910282502149', '1', '2017-18', '123456556', 1178, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1137, 'سلوى صبره خلف محمد', 6, 5, '29906102500243', '$2y$10$nZPfSFsG6PbAJn2wUtze6uu0aZWxdijc9MBZKqwlVfv97LoG80fFy', '29906102500243', '1', '2017-18', '123456556', 1179, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1138, 'شيماء محمد احمد محمد', 6, 5, '29911122500766', '$2y$10$Kgb.zcWPFfNPQ4.j3Y3sauNYd84RQZ.JvZmAXT8EoSt9tsTy4GToG', '29911122500766', '1', '2017-18', '123456556', 1180, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1139, 'شيماء مصطفى محمد سليمان', 6, 5, '30006142500666', '$2y$10$BSEy7vbLctTPc7lyrXDNkeKx4mEL8EZ2VwjBVMVdZwC26BkjfFn5O', '30006142500666', '1', '2017-18', '123456556', 1181, '2019-04-15 06:36:49', '2019-04-15 06:36:49', 0, NULL),
(1140, 'صابرين خلف عبدالحى عبدالقادر', 6, 5, '30006182502181', '$2y$10$oNv.sQLcqioneZFj5rB9juebKM2Bxxj1A25VbGTiV0WxpPZpnke7C', '30006182502181', '1', '2017-18', '123456556', 1182, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1141, 'صفاء فوزى نقى شرابين', 6, 5, '30001302501026', '$2y$10$F2Q14aNgRHLjh8ZUr.UOH.LFqPMz/VkO3D159OzpQnKBGoyqpkdzm', '30001302501026', '1', '2017-18', '123456556', 1183, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1142, 'صموئيل فوزى جرجس صاروفيم', 6, 5, '30102082501071', '$2y$10$Twui2Uxi4kl3bwO3iXW6MOOySIRRCFiYDpGTJSev.Q.kE3SGzKgpq', '30102082501071', '1', '2017-18', '123456556', 1184, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1143, 'عبدالرحمن على محمد سيد', 6, 5, '30006102501619', '$2y$10$MvuxYB/O8mAg1Y0eSOhE1.8H8RZ.W0CWYmdqPZGxIQNqwhpm.OL3S', '30006102501619', '1', '2017-18', '123456556', 1185, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1144, 'عبير عبدالرحمن محمد احمد', 6, 5, '30005312501143', '$2y$10$AbRXDmFdJe1BLjv2dvr3s.4yzP0lg84YYkuNmzfikib9/BStOjO1O', '30005312501143', '1', '2017-18', '123456556', 1186, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1145, 'عبير غلاب عبدالله سيد', 6, 5, '30007092502847', '$2y$10$3nxkYJ6HpehL00BPZ7f2c.SFHJSDhbcGF1uzhvQpcCc2ZSkv3jw3S', '30007092502847', '1', '2017-18', '123456556', 1187, '2019-04-15 06:36:50', '2019-04-15 06:36:50', 0, NULL),
(1146, 'علياء علاء على احمد', 6, 5, '29911272501507', '$2y$10$nXQ0yD9asShVcxWn2kO.G.La0x5i4Q0QSitM.W86Vr65463NnOOd2', '29911272501507', '1', '2017-18', '123456556', 1188, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1147, 'عمرو محمد محمود على', 6, 5, '30006182501193', '$2y$10$WaR/dE2B6Y/fA3pnrnVP..vf04iXc2Pi4z4f7ueiTUMb5RjbhcVqu', '30006182501193', '1', '2017-18', '123456556', 1189, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1148, 'فاطمه راوى عباس حسن', 6, 5, '29910202505703', '$2y$10$hktmm6GK6fUwG2WkA2HOoOFYuo/fw6v7YAJbz8koeaCaJRr8ML41G', '29910202505703', '1', '2017-18', '123456556', 1190, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1149, 'كارولين ابراهيم ذكى جاد السيد', 6, 5, '30008092501545', '$2y$10$1.ize2/I9ygqUbImo6Gjjew10DPfvhn.YsM3wEmcIbIlyLbSXwW56', '30008092501545', '1', '2017-18', '123456556', 1191, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1150, 'ماجده داود عزيز سليمان', 6, 5, '30001252505025', '$2y$10$bLlZzksxT0tNzSTsN.E.euicJNMtq./lz3/f2W55OGnZJu.BsnXVe', '30001252505025', '1', '2017-18', '123456556', 1192, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1151, 'مادونا فكهى نسيم واصف', 6, 5, '30005282502646', '$2y$10$H2wH4rZ3bOMwMLIHlfc3HOzexzExcltpffKL2VWn5nLg/fu9qhsJK', '30005282502646', '1', '2017-18', '123456556', 1193, '2019-04-15 06:36:51', '2019-04-15 06:36:51', 0, NULL),
(1152, 'مارى صلاح شفيق جندى', 6, 5, '30005012505945', '$2y$10$3wtjdefVPELpONGO1H7oJ.HzQCV.AUEJTjayrdAQZHDmLwl0zfgA6', '30005012505945', '1', '2017-18', '123456556', 1194, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1153, 'مارى عياد عبدالملاك جاب الله', 6, 5, '29911012510804', '$2y$10$HpBuMhch0jroqjJk6sWRSeHdRTPsgjtj0NnPSRjv7zvY9FrTwaPwa', '29911012510804', '1', '2017-19', '123456556', 1195, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1154, 'مارى كمال كامل مسعود', 6, 5, '29912012501062', '$2y$10$oV3tJxDjUSh5bB34WziLOu6QeR9L3jS3LvlnIIAwgtC/k6Lt4rUmq', '29912012501062', '1', '2017-20', '123456556', 1196, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1155, 'مارى منير صادق جبره', 6, 5, '29912162502229', '$2y$10$f/gAxwmk9SdOpVOuGo634eCfWWNFtfHJUgtwadPbhdzsf4Z/jDvxe', '29912162502229', '1', '2017-21', '123456556', 1197, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1156, 'ماريا اميل كرم حنا', 6, 5, '29911232601304', '$2y$10$nKOaRp5o8yo7eu/QeqgVnuXvnGqU1y6T0X81YEc4AxHscNZXaSQsK', '29911232601304', '1', '2017-22', '123456556', 1198, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1157, 'ماريا صلاح ابراهيم حنا', 6, 5, '30006182500707', '$2y$10$to/P2kcpLQmMjton9xv7Su9TUbshyiufBV5YWqTAGZckLm6f2qQTu', '30006182500707', '1', '2017-23', '123456556', 1199, '2019-04-15 06:36:52', '2019-04-15 06:36:52', 0, NULL),
(1158, 'محمد اسامه حسن زارع', 6, 5, '29907302500333', '$2y$10$rMJu5LnW6xDrbaQSDq.65e38TiO/AJzyj/rFEjwWxyLye4MKYMYyC', '29907302500333', '1', '2017-24', '123456556', 1200, '2019-04-15 06:36:53', '2019-04-15 06:36:53', 0, NULL),
(1159, 'محمد تغيان رمضان على', 6, 5, '29912262501173', '$2y$10$nsneXQyIyXd3cMXLVa4Mg.hfZ/Q177GY7tMUOcd5opzyprt9uxJ7q', '29912262501173', '1', '2017-25', '123456556', 1201, '2019-04-15 06:36:53', '2019-04-15 06:36:53', 0, NULL),
(1160, 'محمد عبدالفتاح يونس طالب', 6, 5, '30003122502337', '$2y$10$hdPNFTOx0l88C1DRMZEmyeWvp7U1YL5VOtVPzGMttaNVGGVbd5KXa', '30003122502337', '1', '2017-26', '123456556', 1202, '2019-04-15 06:36:53', '2019-04-15 06:36:53', 0, NULL),
(1161, 'مدرونا حناوى ميخائيل حناوى', 6, 5, '30005212500662', '$2y$10$NxQW9UdNMi/yLvtMqmF9SOy5ZyoUMMk/.JXUQBstiNNLo6M6vIUD6', '30005212500662', '1', '2017-27', '123456556', 1203, '2019-04-15 06:36:53', '2019-04-15 06:36:53', 0, NULL),
(1162, 'مديحه محمد محمود محمد', 6, 5, '30009032502026', '$2y$10$qG0TxGSQrzaG3xF4JAPwUOhO0opT6SbBfwo9Mskmr7Iu3/nK/KQqK', '30009032502026', '1', '2017-28', '123456556', 1204, '2019-04-15 06:36:53', '2019-04-15 06:36:53', 0, NULL),
(1163, 'مرام صلاح شحاته احمد', 6, 5, '30009202501542', '$2y$10$l4HS.SmdIWrcAg5YhbjJ7.sRkXPf..qRz9ga9gXC8S390mXxBLzyO', '30009202501542', '1', '2017-29', '123456556', 1205, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1164, 'مروه بلال عبدالفضيل عياط', 6, 5, '29912090104509', '$2y$10$qaantz5lgV8pDrY5Y4HiGeo0JplzJg6y4ZhKN6zQH79/Iv/sl9Cxy', '29912090104509', '1', '2017-30', '123456556', 1206, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1165, 'مروه صلاح محمود سيد', 6, 5, '30006142500828', '$2y$10$uBA1BT6hIUtwGhKOXh9aE.HHyN5BYCVGpb2zMrpGadrWfsiJZjqq.', '30006142500828', '1', '2017-31', '123456556', 1207, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1166, 'مريم صليب رشدى صليب', 6, 5, '30007092501786', '$2y$10$yqyDn.UGybWzaN76b5FUDO7gTT6sLP5Ane1OPeDQMaqWan7yPkApC', '30007092501786', '1', '2017-32', '123456556', 1208, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1167, 'مريم عاطف محمد مرسي', 6, 5, '30008022503001', '$2y$10$3srLul3QFeZ.xuWaPysu5.rgEpnxzjT7wTGWdTh35.DRGz7ieoiYm', '30008022503001', '1', '2017-33', '123456556', 1209, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1168, 'مصطفى عبدالشافى ابراهيم محمود', 6, 5, '30009232502454', '$2y$10$wjnntTpCSG97XxzOvLHm6ee49LF0UKc9Z9miXOzyzcks15xYnDhuO', '30009232502454', '1', '2017-34', '123456556', 1210, '2019-04-15 06:36:54', '2019-04-15 06:36:54', 0, NULL),
(1169, 'منار جمال كامل محمد', 6, 5, '29902132501184', '$2y$10$QAle8B/kabUwWpOSS8SGfujX3CvL9oDq83fEBqTS6juAw1oGp8dRG', '29902132501184', '1', '2017-35', '123456556', 1211, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1170, 'منار فتحى عايد توفيق', 6, 5, '29904012512622', '$2y$10$vNeANsgpbc9Zm2pZPMXbQuDT3oXsE7KASXUrXbxojKDaiWDeQRW9m', '29904012512622', '1', '2017-36', '123456556', 1212, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1171, 'منار محمد همام حسانين', 6, 5, '30001012520582', '$2y$10$jpoQsit1hbQ2Fvi15LoPQOSakx91pNnfbyJ1d.103mSJEbVPojNZC', '30001012520582', '1', '2017-37', '123456556', 1213, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1172, 'منار مصطفى محمد احمد', 6, 5, '30003012506809', '$2y$10$N55hpHW1j7bF51mlGZFekeut6O21GjFq6NGlPTmnWn38TD4RtyCf2', '30003012506809', '1', '2017-38', '123456556', 1214, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1173, 'منار منصور عباس على', 6, 5, '30007052503123', '$2y$10$sPGxQ7tcsKqKxhuajLRa/.6t6xTUjucSC7g9Mf3HO9w5xoLvq4N.K', '30007052503123', '1', '2017-39', '123456556', 1215, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1174, 'مينا وليم زكي جرجس', 6, 5, '29804212503836', '$2y$10$aW4rkMeEEWm6t17YsTuNqOEBSBqBJIsWXu3hXR4H1uB1pk8ZIq.2.', '29804212503836', '1', '2017-40', '123456556', 1216, '2019-04-15 06:36:55', '2019-04-15 06:36:55', 0, NULL),
(1175, 'ندى عبدالله عبدالبارى محمد', 6, 5, '30004012500823', '$2y$10$ltDX1ztol78IsR51OsfNLuAGwHKpuZLO0NlnURH8WuMCWo/MD27SK', '30004012500823', '1', '2017-41', '123456556', 1217, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1176, 'نسمه عبدالرحيم عبدالشافى محمد', 6, 5, '29911042502067', '$2y$10$I6pbqk5tLxObznD6FOU7UOAeHYTK4hgKxCRUKRpqMyzF3BY5XRe2e', '29911042502067', '1', '2017-42', '123456556', 1218, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1177, 'نهير عاطف حسن على', 6, 5, '30004272501246', '$2y$10$YZ/7q5XuB.DfIPJnoNsuYugobkPf3npuWmLQm5xGi/V4o6zz4qsLi', '30004272501246', '1', '2017-43', '123456556', 1219, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1178, 'نوره ايمن حسن عبدالحميد', 6, 5, '30001212500543', '$2y$10$WFQGQMdYKQujS55rQDk2buV9PLtVBDl9DcK68MX4eyhi4Q5zQquWS', '30001212500543', '1', '2017-44', '123456556', 1220, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1179, 'نورهان عبدالنعيم عادل محمد', 6, 5, '30005292501583', '$2y$10$pq.EOm.T00i.kk8pgoeqzuQmoXHiFHZpx8Z/hrWyDF5NgbWg3Mhcu', '30005292501583', '1', '2017-45', '123456556', 1221, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1180, 'نورهان على مصطفى على', 6, 5, '30002112500143', '$2y$10$MVRRkT3MF571YJOgZnaj/uRuthKdxwPeMw003fd3ZBGV.c.SV0XfO', '30002112500143', '1', '2017-46', '123456556', 1222, '2019-04-15 06:36:56', '2019-04-15 06:36:56', 0, NULL),
(1181, 'هاجر على محمود محمد', 6, 5, '30004272500665', '$2y$10$qbMakt4S/FPB6nUfCh7z1.jEuko3bnWxrXS4VrdTy0IxlzxXKniye', '30004272500665', '1', '2017-47', '123456556', 1223, '2019-04-15 06:36:57', '2019-04-15 06:36:57', 0, NULL),
(1182, 'هاجر محمد عبد الغنى على', 6, 5, '29708132501728', '$2y$10$vnWCpDvy3Fw8Af.5OCnA5epeMBYOzr82kPRsryO1Ba/ImtQPPk42a', '29708132501728', '1', '2017-48', '123456556', 1224, '2019-04-15 06:36:57', '2019-04-15 06:36:57', 0, NULL),
(1183, 'ورده وديع ذكى مسعود', 6, 5, '30001132502243', '$2y$10$2hD527Cb3BPH7MDcGDKBPuxDiWDlVdPkTtDItSy.3Nc/ubu/6mkrK', '30001132502243', '1', '2017-49', '123456556', 1225, '2019-04-15 06:36:57', '2019-04-15 06:36:57', 0, NULL),
(1184, 'ياسمين خالد على عبدالناصر', 6, 5, '30005012503721', '$2y$10$UpuXCMkRqhbNPKMjpA.sE.iNFpUTq9aDkphFhNETDCPN2fImd7wr6', '30005012503721', '1', '2017-50', '123456556', 1226, '2019-04-15 06:36:57', '2019-04-15 06:36:57', 0, NULL),
(1185, 'أحمد عوني احمد حسين', 6, 11, '1001', '$2y$10$BiYxJC4rCxFVVtAWKM54PePghb6uRR.f2GKQrmmWwie9vchDmkJYu', '1001', '1', '2017-18', '123456556', 1227, '2019-04-22 10:19:11', '2019-04-22 10:19:11', 0, NULL),
(1186, 'اسلام عبده محمد عبده القصيري', 6, 11, '1002', '$2y$10$ZVWzM6avsYDD17FpdNVWru1gXdJOnmrpgO9rmYNIkP0bFxYeBTcLy', '1002', '1', '2017-18', '123456556', 1228, '2019-04-22 10:19:11', '2019-04-22 10:19:11', 0, NULL),
(1187, 'اسماء جمال عبد الناصر', 6, 11, '1003', '$2y$10$gC1rM42mM3klUEIL0qkRM.zlqiX1OPKgmUL7ZAqOyWlBsx6S5Vdxi', '1003', '1', '2017-18', '123456556', 1229, '2019-04-22 10:19:11', '2019-04-22 10:19:11', 0, NULL),
(1188, 'اسهام سعد صدقى', 6, 11, '1004', '$2y$10$7ghKObAaUxRyYqEH33c02ePRU7IR1evtvx.fvXKSpLoL0TEdy15bq', '1004', '1', '2017-18', '123456556', 1230, '2019-04-22 10:19:11', '2019-04-22 10:19:11', 0, NULL),
(1189, 'الهام صموئيل محروس', 6, 11, '1005', '$2y$10$LQ8j9TKwu56w/D69MPcjbOPSUa5zxb0DQcVptwsj9wd1r9tDrPofa', '1005', '1', '2017-18', '123456556', 1231, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL);
INSERT INTO `students` (`id`, `STUDENT_NAME`, `FACULTY_ID`, `DEPARTMENT_ID`, `STUDENT_SSN`, `STUDENT_PASSWORD`, `STUDENT_EMAIL`, `term`, `semester`, `phone`, `user_id`, `created_at`, `updated_at`, `class_id`, `stage`) VALUES
(1190, 'امال جابر عبد الرحمن', 6, 11, '1006', '$2y$10$AIu48fQwlu8kZvNLSH8y/O3WGqLVK95Si5BLhguWAiwV7LeXMn5Yq', '1006', '1', '2017-18', '123456556', 1232, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL),
(1191, 'اميرة محمد احمد', 6, 11, '1007', '$2y$10$yRtYwK..TksZhJMN7HK7xOmRCFmsK3EcFbHiIKT9B6QRgdcEfSjC2', '1007', '1', '2017-18', '123456556', 1233, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL),
(1192, 'ايمان يوسف زكريا', 6, 11, '1008', '$2y$10$fkersPWzN7O6MM.nz3uSNOc7dle/hmph/W7nhpeDNN2gbAe6UNksS', '1008', '1', '2017-18', '123456556', 1234, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL),
(1193, 'ايه الله محمود محمد', 6, 11, '1009', '$2y$10$hc0OHzkGjtiLTWtlMoLNs.9/W5Nc9/H9vvTMBvTD6hCI4./ZxU5Gi', '1009', '1', '2017-18', '123456556', 1235, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL),
(1194, 'تهاني محمد السعيد', 6, 11, '1010', '$2y$10$oS/tA4EywAFS6AtN7g3CTOVmkyzwqtHh7lnYXUq/SXnmpNKGdJt5S', '1010', '1', '2017-18', '123456556', 1236, '2019-04-22 10:19:12', '2019-04-22 10:19:12', 0, NULL),
(1195, 'جيهان كرم بولس', 6, 11, '1011', '$2y$10$3RLeiXMECEYYBqfqGvAYx.5twp32P/pIW1IWOkecoAjYj7UAAJ9eK', '1011', '1', '2017-18', '123456556', 1237, '2019-04-22 10:19:13', '2019-04-22 10:19:13', 0, NULL),
(1196, 'خالد زكي عبد الحافظ', 6, 11, '1012', '$2y$10$qMEp5XWscfkaJeSgsIAXSOQaOYo.FO9edP0lghsqv8L1JJxdBgz.2', '1012', '1', '2017-18', '123456556', 1238, '2019-04-22 10:19:13', '2019-04-22 10:19:13', 0, NULL),
(1197, 'دعاء محمد على', 6, 11, '1013', '$2y$10$ksxZrR3BWes.hvceuUkQR.uHgpjoJNRWL/V3KfqcUA40ZRUdnd3Ke', '1013', '1', '2017-18', '123456556', 1239, '2019-04-22 10:19:13', '2019-04-22 10:19:13', 0, NULL),
(1198, 'رباب عاطف فتحي', 6, 11, '1014', '$2y$10$yegauYi4/ZZ/AyFPntKL1.fNX0JlTSbDjKqI/ZBmq5yEjwRQuemQy', '1014', '1', '2017-18', '123456556', 1240, '2019-04-22 10:19:13', '2019-04-22 10:19:13', 0, NULL),
(1199, 'رضه زكي على', 6, 11, '1015', '$2y$10$ciFt2d4AWnVJNjN428di7e6/c8tfHpXSBUoXWHlsD9vMWcdrfkrje', '1015', '1', '2017-18', '123456556', 1241, '2019-04-22 10:19:13', '2019-04-22 10:19:13', 0, NULL),
(1200, 'سهير حمد الله على', 6, 11, '1016', '$2y$10$/2nGvAM2y0JpojeEIW0jS.3JkJ6XGMLptSTGhHKdEw0jpSGMT45xa', '1016', '1', '2017-18', '123456556', 1242, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1201, 'سهير فتحي ابراهيم', 6, 11, '1017', '$2y$10$NVUZLibbtEH8BKqJuuL9LeITAxImwoWve9vmP2jxaSNM0i3dwMuLu', '1017', '1', '2017-18', '123456556', 1243, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1202, 'سوزى وجدى مكاري', 6, 11, '1018', '$2y$10$6unfehK.Uf16lC6hifJrWuS4Nq.huNSR2rphDoaB8OdRjGRmFjnHO', '1018', '1', '2017-18', '123456556', 1244, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1203, 'شادية خلف الله عزيز', 6, 11, '1019', '$2y$10$OEzX7Tz6YmwQYMRmtOk25ezcV5ofJZQqykZrzZavQUM7xJc1WKNXK', '1019', '1', '2017-18', '123456556', 1245, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1204, 'علاء محمد توفيق', 6, 11, '1020', '$2y$10$XOvHlaQ4T.MNydcey1Dr0e7efy8lmg/dzb0Ll.Z0qrQKNt6Epcy9S', '1020', '1', '2017-18', '123456556', 1246, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1205, 'عمرو محمد عبد الكريم', 6, 11, '1021', '$2y$10$lpNeaNATLUDarLdlThOhe.SWopKkXepcrb01qxSh1FbYELb4NXfcu', '1021', '1', '2017-18', '123456556', 1247, '2019-04-22 10:19:14', '2019-04-22 10:19:14', 0, NULL),
(1206, 'عمير ابراهيم احمد', 6, 11, '1022', '$2y$10$CfIrq9EVFccIv8BiSbY1GO22NL7O/3XteD.fL.Kau7925vXdKGJ0K', '1022', '1', '2017-18', '123456556', 1248, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1207, 'عنتر عبد الصبور عبد الرحيم', 6, 11, '1023', '$2y$10$gUZ2OY9sIXx/zGMchruc5.rJL3NnFl309Ff0TMMsKA2r8JCDYV9s.', '1023', '1', '2017-18', '123456556', 1249, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1208, 'فاطمة ابراهيم على', 6, 11, '1024', '$2y$10$6eBXMPr84hasFjJcCpPZL.aMFrNZOxRgN9HKTukdIVTABGfsUv5M2', '1024', '1', '2017-18', '123456556', 1250, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1209, 'ماجدة محمود احمد', 6, 11, '1025', '$2y$10$oi9MU7YTg/5ngctuaRi0h.ojjWC3rbudZVrW8SkOSAhbI.WcuLfqC', '1025', '1', '2017-18', '123456556', 1251, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1210, 'محمد عشري شعبان', 6, 11, '1026', '$2y$10$CCto9NXN7eV5ZUOF323pxeT1yaibnK7uwqnE9rnWV34kCVDRgMX2.', '1026', '1', '2017-18', '123456556', 1252, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1211, 'محمد مصطفى محمدسيد', 6, 11, '1027', '$2y$10$gFYMJLLxN2YcLEMiQvxWQehDv0MYzD0K7pQjPXmIawC3Yzr9RMy4q', '1027', '1', '2017-18', '123456556', 1253, '2019-04-22 10:19:15', '2019-04-22 10:19:15', 0, NULL),
(1212, 'مادلين ابراهيم شوقى', 6, 11, '1028', '$2y$10$9tc6krvJJfGBDgRI/Ot5mOZApgwjtLOBPsU/uIcm8H2KfSkk.1j36', '1028', '1', '2017-18', '123456556', 1254, '2019-04-22 10:19:16', '2019-04-22 10:19:16', 0, NULL),
(1213, 'مرفت رشاد شاكر', 6, 11, '1029', '$2y$10$hPR/CUZanaX2gfvRGm0tHOohSJNNJPO4ZHzkJ7Y.6sEw9Oq1mNwc2', '1029', '1', '2017-18', '123456556', 1255, '2019-04-22 10:19:16', '2019-04-22 10:19:16', 0, NULL),
(1214, 'مصطفى عبد النظير محمد', 6, 11, '1030', '$2y$10$wjT7Yz8eCTjzGJwNPst44OWer621apBice4dMphRI2/h2r9D8tdTW', '1030', '1', '2017-18', '123456556', 1256, '2019-04-22 10:19:16', '2019-04-22 10:19:16', 0, NULL),
(1215, 'نجلاء فكري عبد الله', 6, 11, '1031', '$2y$10$h8Nixpm5bg3IAbFlb98di.vPOJrweoiKaFgIKqJ2p0yIcj4Q.NLlu', '1031', '1', '2017-18', '123456556', 1257, '2019-04-22 10:19:16', '2019-04-22 10:19:16', 0, NULL),
(1216, 'نجوى رزق حبيب', 6, 11, '1032', '$2y$10$9LQPMlEyHOUrXEbidC5CKuJdL8tnxaIJZY0YnOoJewMv0oTQNTY0q', '1032', '1', '2017-18', '123456556', 1258, '2019-04-22 10:19:16', '2019-04-22 10:19:16', 0, NULL),
(1217, 'نعمة محمد عبد الحميد', 6, 11, '1033', '$2y$10$DpGkw210v/6FZwT2hgroTe69ltAZgTYjJUKWPx62AO.P9Npg509Qu', '1033', '1', '2017-18', '123456556', 1259, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1218, 'نهال محمد يونس', 6, 11, '1034', '$2y$10$PwyLg1SCKY7giNVaiD8Iq.6j1f6c1bxwNgPwA9CMMMkPXGPASarWG', '1034', '1', '2017-18', '123456556', 1260, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1219, 'نيفين موريس جاد', 6, 11, '1035', '$2y$10$CLQfge0s/6JfEfwEvwtsoeDSfD7KikoXikat46N3gFZLqbmhSZuly', '1035', '1', '2017-18', '123456556', 1261, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1220, 'هبه محمد عبد الله', 6, 11, '1036', '$2y$10$M/Dob6LzbQMYAmQWjJBapOQpWLa0mEumdzMHi7KlKykkqRC9mlv8y', '1036', '1', '2017-18', '123456556', 1262, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1221, 'هبه محمد فراج', 6, 11, '1037', '$2y$10$qu5JMr898dFZp.BqVm9Q0el2HDbuvEfCImStGa4OPPZS/zVVt6rHa', '1037', '1', '2017-18', '123456556', 1263, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1222, 'هدى عيد عبد الرسول', 6, 11, '1038', '$2y$10$P39SpI3nOjeIhfgwrbneQOCSlqLiCj22KokxW6kJilfJmHYlZh6d6', '1038', '1', '2017-18', '123456556', 1264, '2019-04-22 10:19:17', '2019-04-22 10:19:17', 0, NULL),
(1223, 'هيام همام احمد', 6, 11, '1039', '$2y$10$eQUGr/DSs9iP18buCL.QDeztRNOsVonQdrbnlaclevcavJTpl42lu', '1039', '1', '2017-18', '123456556', 1265, '2019-04-22 10:19:18', '2019-04-22 10:19:18', 0, NULL),
(1224, 'وليد محمد عبد الحفيظ', 6, 11, '1040', '$2y$10$b8Pd/kHBlfhf0hzdnth9k.DzIICf5jl.RWRa/61zUfBrKDpQy6jEO', '1040', '1', '2017-18', '123456556', 1266, '2019-04-22 10:19:18', '2019-04-22 10:19:18', 0, NULL),
(1225, 'علاء محمد توفيق', 6, 11, '3030', '$2y$10$7LxGuahPjyHsKlG0t91EWepBkMa.wqDOrS3d176Ml5kp9v7BoPDie', '3030', '1', '2020 -2021', '3030', 1267, '2019-04-22 15:06:27', '2019-04-22 15:06:27', 0, NULL),
(1226, 'ليلى احمد خليفة', 4, 4, '29908012611227', '$2y$10$XmqmysHyY0/CqTRnSGvAjuj/RYpdpOUeG7.kxRtSRax9Aai2U4BsK', '29908012611227', '1', '2020 -2021', '0124', 1268, '2019-04-24 12:45:51', '2019-04-24 12:45:51', 0, NULL),
(1227, 'أندرو حليم 1', 4, 4, '123456', '$2y$10$j8PXuypXmQ/9ECPtER9Wp.6ovhxbCCXu46hp2JDU9CDmRbzx2gXoS', '112233445566', '1', '2018 -2019', '123456', 1269, '2019-05-13 06:24:55', '2019-05-13 06:24:55', 0, NULL),
(1228, 'اندرو حليم مترى اسكاروس2', 4, 4, '123456', '$2y$10$wSB3NJIOKQRwcSiGd8d4R.1tPN8BPkj07gMgVcZgpEAPtPJlS76xC', '11223344556677', '2', '2018 -2019', '123456', 1270, '2019-05-13 06:32:56', '2019-05-13 06:32:56', 0, NULL),
(1229, 'شريف مجدى هلال', 4, 4, '963852741', '$2y$10$efgSybSMDks21hbJrPopFelQyYIQ.O0qyWe4JHxnY32OqSoZ3/TFe', '963852741', '1', '2020 -2021', '2546', 1271, '2019-05-13 09:08:15', '2019-05-13 09:08:15', 0, NULL),
(1230, 'كيرلس ماجد', 4, 4, '147258369', '$2y$10$VaVbOjCWtvpV.SlVWwN/9..fxQXG98xxHmlVwuc10M7DrXfpD1R0q', '147258369', '1', '2020 -2021', '54', 1272, '2019-05-13 09:09:09', '2019-05-13 09:09:09', 0, NULL),
(1231, 'شروق محمود محمد', 4, 4, '55513292', '$2y$10$ZR/mHouzlsPZxlecm/XRt.GcOjQxcO2CAT61by3nJNEdgqERlJP52', '55513292', '1', '2020 -2021', '456', 1273, '2019-05-13 09:17:28', '2019-05-13 09:17:28', 0, NULL),
(1232, 'رودينة على حسن', 4, 4, '66613293', '$2y$10$lJypBMfVcL7xs3AW9bwcXeKA547b2gF9/gj8DWD8Z1d0HUjmoxwKa', '66613293', '1', '2020 -2021', '987', 1274, '2019-05-13 09:18:13', '2019-05-13 09:18:13', 0, NULL),
(1233, 'خالد محمد راشد', 4, 4, '555666', '$2y$10$gEGRCexOpFJT1BvESzrVGOu6vLgeb7aVYKk2kf6RJvpNnw7BVItMW', '555666', '1', '2020 -2021', '1231', 1275, '2019-05-13 09:25:38', '2019-05-13 09:25:38', 0, NULL),
(1234, 'menna stu', 4, 4, '556564', '$2y$10$RlW1JLcoPwsL/u9nqYgZFu0XKgUOu3xK6EzIzZZRMfLH1DOW/disK', 'ali2@gmail.com', '1', '2018 -2019', '21321', 1114, '2018-11-18 17:16:14', '2018-11-18 17:16:14', 0, NULL),
(1235, 'kkkkk', 1, 1, '01236258523', '$2y$10$1PU9ryYCCkaNIBCL7pBeUOyWC/F.DMbEB37mlsQQVrv68za4IPisi', 'kkk@gmail.com', '2', '2020 -2021', '1236523', 1277, '2019-11-13 06:47:55', '2019-11-13 06:47:55', 0, NULL),
(1236, 'hhghghghg', 4, 2, '123456789', '$2y$10$ZuOg/uQLOkpg4dbFxxLQYO1D8XD91SvvQIHo8Zmd5ALV0E4ZTXhKm', 'student@gmail.com', '1', '2020 -2021', '44343', 1280, '2020-01-15 11:14:27', '2020-01-15 11:14:27', 0, NULL),
(1237, 'asdsdadsa', 4, 2, '987654321', '$2y$10$6k7orpJnUoayA34R7I3g0OuPW2/0Q29dteIo.m32Tfdw3Fc.1v98m', 'student23@gmail.com', '1', '2020 -2021', '434434', 1281, '2020-01-15 11:16:28', '2020-01-15 11:16:28', 0, NULL),
(1238, 'testst1', 10, 12, '11111111111111', '$2y$10$SYlICy2uMGCD84yObFDYceqY1xtz/66osQ5jmrtdGKutynr1LyNea', 'testst1@gmail.com', '2', '2020 -2021', '331233131331', 1286, '2020-03-14 19:11:20', '2020-03-14 19:11:20', 0, NULL),
(1239, 'testst2', 10, 12, '43434343343', '$2y$10$BX5h75qDQ30JG0oiGS9QOOJmdwgiFUqBpVBXFZMfrCHW.cCgYKm1O', 'testst2@gmail.com', '2', '2020 -2021', '121221212', 1287, '2020-03-14 19:11:54', '2020-03-14 19:11:54', 0, NULL),
(1240, 'mahmoud', 10, 12, 'rrreeererr', '$2y$10$oU9pZ2w6URwYgG0irFcjm.1psOtgZszK1o9WncIMB/mGa/nPkELlS', 'testst6@gmail.com', NULL, NULL, NULL, 1291, '2020-04-20 21:30:28', '2020-04-20 21:30:28', -1, 4),
(1241, 'mahmoud', 10, NULL, '11111111111111', '$2y$10$okM7HDJ7HtfPUConHpIGYu0bu3DYS3WVX1hgSMa66kKYE8rM677N2', 'testst7@gmail.com', NULL, NULL, NULL, 1292, '2020-04-21 07:34:16', '2020-04-21 07:34:16', NULL, 4),
(1244, 'Ahmed Ali', 10, 12, '22222222222222', '$2y$10$Qj96jbbsRPbvPrMfPgxOdOlcBzgKQU3Bn5GrVPxe3/Nghzyl.bIUy', 'testst10@gmail.com', NULL, NULL, NULL, 1295, '2020-04-21 08:09:03', '2020-04-21 08:09:03', -1, 4),
(1245, 'testsads', 10, 12, '44444444444444', '$2y$10$obtD3sUeFteLT7XoURCpsOkDEvvoQRaSge0EuGd6V2evxDd/g0roa', 'testst12@gmail.com', NULL, NULL, NULL, 1296, '2020-04-21 08:43:04', '2020-04-21 08:43:04', -1, 4);

-- --------------------------------------------------------

--
-- بنية الجدول `student_cource_exams`
--

CREATE TABLE `student_cource_exams` (
  `id` int(11) NOT NULL,
  `STUDENT_ID` int(11) NOT NULL,
  `COURSE_ID` int(11) NOT NULL,
  `EXAM_ID` int(11) DEFAULT NULL,
  `SEMESTER_ID` int(11) DEFAULT NULL,
  `Total_Student_Score` double DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `student_cource_exams`
--

INSERT INTO `student_cource_exams` (`id`, `STUDENT_ID`, `COURSE_ID`, `EXAM_ID`, `SEMESTER_ID`, `Total_Student_Score`, `created_at`, `updated_at`) VALUES
(32, 86, 15, 27, NULL, NULL, '2018-11-18 17:47:16', '2018-11-18 17:48:48'),
(33, 87, 15, 27, NULL, NULL, '2018-11-18 17:47:16', '2018-11-18 17:48:48'),
(34, 88, 15, 27, NULL, NULL, '2018-11-18 17:47:16', '2018-11-18 17:48:48'),
(35, 89, 15, 27, NULL, NULL, '2018-11-18 17:47:16', '2018-11-18 17:48:48'),
(36, 90, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(37, 91, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(38, 92, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(39, 93, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(40, 94, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(41, 95, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(42, 96, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(43, 97, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(44, 98, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(45, 99, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(46, 100, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(47, 101, 15, 27, NULL, 4, '2018-11-18 17:47:17', '2018-11-18 17:56:13'),
(48, 102, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(49, 103, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(50, 104, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(51, 105, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(52, 106, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:48'),
(53, 107, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(54, 108, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(55, 109, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(56, 110, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(57, 111, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(58, 112, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(59, 113, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(60, 114, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(61, 115, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(62, 116, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(63, 117, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(64, 118, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(65, 119, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(66, 120, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(67, 121, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(68, 122, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(69, 123, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(70, 124, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(71, 125, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(72, 126, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(73, 127, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(74, 128, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(75, 129, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(76, 130, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(77, 131, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(78, 132, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(79, 133, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(80, 134, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(81, 135, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(82, 136, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(83, 137, 15, 27, NULL, NULL, '2018-11-18 17:47:17', '2018-11-18 17:48:49'),
(84, 138, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(85, 139, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(86, 140, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(87, 141, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(88, 142, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(89, 143, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(90, 144, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(91, 145, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(92, 146, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(93, 147, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(94, 148, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(95, 149, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(96, 150, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(97, 151, 15, 29, NULL, NULL, '2018-11-19 11:14:25', '2018-11-24 08:31:03'),
(98, 152, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(99, 153, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(100, 154, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(101, 155, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(102, 156, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(103, 157, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(104, 158, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(105, 159, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(106, 160, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(107, 161, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(108, 162, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(109, 163, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(110, 164, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(111, 165, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(112, 166, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(113, 167, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(114, 168, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(115, 169, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(116, 170, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(117, 171, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(118, 172, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(119, 173, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(120, 174, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(121, 175, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(122, 176, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(123, 177, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(124, 178, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(125, 179, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:03'),
(126, 180, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(127, 181, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(128, 182, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(129, 183, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(130, 184, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(131, 185, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(132, 186, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(133, 187, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(134, 188, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(135, 189, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(136, 190, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(137, 191, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(138, 192, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(139, 193, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(140, 194, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(141, 195, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(142, 196, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(143, 197, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(144, 198, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(145, 199, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(146, 200, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(147, 201, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(148, 202, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(149, 203, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(150, 204, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(151, 205, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(152, 206, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(153, 207, 15, 29, NULL, NULL, '2018-11-19 11:14:26', '2018-11-24 08:31:04'),
(154, 208, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(155, 209, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(156, 210, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(157, 211, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(158, 212, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(159, 213, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(160, 214, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(161, 215, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(162, 216, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(163, 217, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(164, 218, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(165, 219, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(166, 220, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(167, 221, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(168, 222, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(169, 223, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(170, 224, 15, 29, NULL, NULL, '2018-11-19 11:14:27', '2018-11-24 08:31:04'),
(171, 225, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:04'),
(172, 226, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:05'),
(173, 227, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:05'),
(174, 228, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:05'),
(175, 229, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:05'),
(176, 230, 15, 29, NULL, NULL, '2018-11-22 05:02:33', '2018-11-24 08:31:05'),
(177, 231, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(178, 232, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(179, 233, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(180, 234, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(181, 235, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(182, 236, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(183, 237, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(184, 238, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(185, 239, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(186, 240, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(187, 241, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(188, 242, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(189, 243, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(190, 244, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(191, 245, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(192, 246, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(193, 247, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(194, 248, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(195, 249, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(196, 250, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(197, 251, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(198, 252, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(199, 253, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(200, 254, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(201, 255, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(202, 256, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(203, 257, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(204, 258, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(205, 259, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(206, 260, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(207, 261, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(208, 262, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(209, 263, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(210, 264, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(211, 265, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(212, 266, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(213, 267, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(214, 268, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(215, 269, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(216, 270, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(217, 271, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(218, 272, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:05'),
(219, 273, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(220, 274, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(221, 275, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(222, 276, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(223, 277, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(224, 278, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(225, 279, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(226, 280, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(227, 281, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(228, 282, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(229, 283, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(230, 284, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(231, 285, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(232, 286, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(233, 287, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(234, 288, 15, 29, NULL, NULL, '2018-11-22 05:02:34', '2018-11-24 08:31:06'),
(235, 289, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(236, 290, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(237, 291, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(238, 292, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(239, 293, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(240, 294, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(241, 295, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(242, 296, 15, 29, NULL, NULL, '2018-11-22 05:02:35', '2018-11-24 08:31:06'),
(243, 85, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:31'),
(244, 297, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:31'),
(245, 298, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(246, 299, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(247, 300, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(248, 301, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(249, 302, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(250, 303, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(251, 304, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(252, 305, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(253, 306, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(254, 307, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(255, 308, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(256, 309, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(257, 310, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(258, 311, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(259, 312, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(260, 313, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(261, 314, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(262, 315, 15, 31, NULL, NULL, '2018-11-29 08:45:19', '2018-12-01 06:48:32'),
(263, 316, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(264, 317, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(265, 318, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(266, 319, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(267, 320, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(268, 321, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(269, 322, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(270, 323, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(271, 324, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(272, 325, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(273, 326, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(274, 327, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(275, 328, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(276, 329, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(277, 330, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(278, 331, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(279, 332, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(280, 333, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(281, 334, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(282, 335, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(283, 336, 15, 36, NULL, NULL, '2018-12-03 11:54:20', '2018-12-13 07:48:53'),
(284, 337, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(285, 338, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(286, 339, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(287, 340, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(288, 341, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(289, 342, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(290, 343, 15, 36, NULL, NULL, '2018-12-03 11:54:21', '2018-12-13 07:48:53'),
(291, 344, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(292, 345, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(293, 346, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(294, 347, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(295, 348, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(296, 349, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(297, 350, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(298, 351, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(299, 352, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(300, 353, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(301, 354, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(302, 355, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(303, 356, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(304, 357, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(305, 358, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(306, 359, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(307, 360, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(308, 361, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(309, 362, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(310, 363, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(311, 364, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(312, 365, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(313, 366, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(314, 367, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(315, 368, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(316, 369, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(317, 370, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(318, 371, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(319, 372, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(320, 373, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:53'),
(321, 374, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(322, 375, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(323, 376, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(324, 377, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(325, 378, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(326, 379, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(327, 380, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(328, 381, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(329, 382, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(330, 383, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(331, 384, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(332, 385, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(333, 386, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(334, 387, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(335, 388, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(336, 389, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(337, 390, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(338, 391, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(339, 392, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(340, 393, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(341, 394, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(342, 395, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(343, 396, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(344, 397, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(345, 398, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(346, 399, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(347, 400, 15, 36, NULL, NULL, '2018-12-03 12:24:42', '2018-12-13 07:48:54'),
(348, 401, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(349, 402, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(350, 403, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(351, 404, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(352, 405, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(353, 406, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(354, 407, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(355, 408, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(356, 409, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(357, 410, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(358, 411, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(359, 412, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(360, 413, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(361, 414, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(362, 415, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(363, 416, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(364, 417, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(365, 418, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(366, 419, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(367, 420, 15, 36, NULL, NULL, '2018-12-03 12:24:43', '2018-12-13 07:48:54'),
(368, 421, 15, 36, NULL, NULL, '2018-12-03 12:39:27', '2018-12-13 07:48:54'),
(369, 422, 15, 36, NULL, NULL, '2018-12-03 12:39:27', '2018-12-13 07:48:54'),
(370, 423, 15, 36, NULL, NULL, '2018-12-03 12:39:28', '2018-12-13 07:48:54'),
(371, 424, 20, 38, NULL, NULL, '2018-12-17 15:48:52', '2018-12-18 06:32:47'),
(372, 425, 20, 38, NULL, NULL, '2018-12-17 15:48:52', '2018-12-18 06:32:47'),
(373, 426, 20, 38, NULL, NULL, '2018-12-17 15:48:52', '2018-12-18 06:32:47'),
(374, 427, 20, 38, NULL, NULL, '2018-12-17 15:48:52', '2018-12-18 06:32:47'),
(375, 428, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(376, 429, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(377, 430, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(378, 431, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(379, 432, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(380, 433, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(381, 434, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(382, 435, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(383, 436, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(384, 437, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(385, 438, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(386, 439, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(387, 440, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(388, 441, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(389, 442, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(390, 443, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(391, 444, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(392, 445, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(393, 446, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(394, 447, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(395, 448, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(396, 449, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(397, 450, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(398, 451, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(399, 452, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(400, 453, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(401, 454, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(402, 455, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(403, 456, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(404, 457, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(405, 458, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(406, 459, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(407, 460, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(408, 461, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(409, 462, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(410, 463, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(411, 464, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(412, 465, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(413, 466, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(414, 467, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(415, 468, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(416, 469, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(417, 470, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(418, 471, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(419, 472, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(420, 473, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(421, 474, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(422, 475, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(423, 476, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(424, 477, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(425, 478, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:47'),
(426, 479, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(427, 480, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(428, 481, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(429, 482, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(430, 483, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(431, 484, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(432, 485, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(433, 486, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(434, 487, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(435, 488, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(436, 489, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(437, 490, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(438, 491, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(439, 492, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(440, 493, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(441, 494, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(442, 495, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(443, 496, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(444, 497, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(445, 498, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(446, 499, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(447, 500, 20, 38, NULL, NULL, '2018-12-17 15:48:53', '2018-12-18 06:32:48'),
(448, 501, 20, NULL, NULL, NULL, '2018-12-18 09:02:44', '2018-12-18 09:02:44'),
(449, 502, 17, NULL, NULL, NULL, '2019-01-15 13:39:46', '2019-01-15 13:39:46'),
(450, 503, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(451, 504, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(452, 505, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(453, 506, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(454, 507, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(455, 508, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(456, 509, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(457, 510, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(458, 511, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(459, 512, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(460, 513, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(461, 514, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(462, 515, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(463, 516, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(464, 517, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(465, 518, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(466, 519, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(467, 520, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(468, 521, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(469, 522, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(470, 523, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(471, 524, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(472, 525, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(473, 526, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(474, 527, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(475, 528, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(476, 529, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(477, 530, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(478, 531, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(479, 532, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(480, 533, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(481, 534, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(482, 535, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(483, 536, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(484, 537, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(485, 538, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(486, 539, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(487, 540, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(488, 541, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(489, 542, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(490, 543, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(491, 544, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(492, 545, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(493, 546, 21, 40, NULL, NULL, '2019-01-20 15:17:26', '2019-01-20 15:25:13'),
(494, 547, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(495, 548, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(496, 549, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(497, 550, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(498, 551, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(499, 552, 21, 40, NULL, NULL, '2019-01-20 15:17:27', '2019-01-20 15:25:13'),
(500, 502, 21, 48, NULL, NULL, '2019-01-21 11:07:18', '2019-02-18 15:02:03'),
(501, 553, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(502, 554, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(503, 555, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(504, 556, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(505, 557, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(506, 558, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(507, 559, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(508, 560, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(509, 561, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(510, 562, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(511, 563, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(512, 564, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(513, 565, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(514, 566, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(515, 567, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(516, 568, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(517, 569, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(518, 570, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(519, 571, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(520, 572, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(521, 573, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(522, 574, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(523, 575, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(524, 576, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(525, 577, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(526, 578, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(527, 579, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(528, 580, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(529, 581, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(530, 582, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(531, 583, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(532, 584, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(533, 585, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(534, 586, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(535, 587, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(536, 588, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(537, 589, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(538, 590, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(539, 591, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(540, 592, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(541, 593, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(542, 594, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(543, 595, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(544, 596, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(545, 597, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(546, 598, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(547, 599, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(548, 600, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(549, 601, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(550, 602, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(551, 603, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(552, 604, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(553, 605, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(554, 606, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(555, 607, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(556, 608, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(557, 609, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(558, 610, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(559, 611, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(560, 612, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(561, 613, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(562, 614, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(563, 615, 22, NULL, NULL, NULL, '2019-02-28 09:29:10', '2019-02-28 09:29:10'),
(564, 616, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(565, 617, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(566, 618, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(567, 619, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(568, 620, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(569, 621, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(570, 622, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(571, 623, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(572, 624, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(573, 625, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(574, 626, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(575, 627, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(576, 628, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(577, 629, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(578, 630, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(579, 631, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(580, 632, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(581, 633, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(582, 634, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(583, 635, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(584, 636, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(585, 637, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(586, 638, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(587, 639, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(588, 640, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(589, 641, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(590, 642, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(591, 643, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(592, 644, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(593, 645, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(594, 646, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(595, 647, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(596, 648, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(597, 649, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(598, 650, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(599, 651, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(600, 652, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(601, 653, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(602, 654, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(603, 655, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(604, 656, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(605, 657, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(606, 658, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(607, 659, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(608, 660, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(609, 661, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(610, 662, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(611, 663, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(612, 664, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(613, 665, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(614, 666, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(615, 667, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(616, 668, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(617, 669, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(618, 670, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(619, 671, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(620, 672, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(621, 673, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(622, 674, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(623, 675, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(624, 676, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(625, 677, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(626, 678, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(627, 679, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(628, 680, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(629, 681, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(630, 682, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(631, 683, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(632, 684, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(633, 685, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(634, 686, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(635, 687, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(636, 688, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(637, 689, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(638, 690, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(639, 691, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(640, 692, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(641, 693, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(642, 694, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(643, 695, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(644, 696, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(645, 697, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(646, 698, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(647, 699, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(648, 700, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(649, 701, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(650, 702, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(651, 703, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(652, 704, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(653, 705, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(654, 706, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(655, 707, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(656, 708, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(657, 709, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(658, 710, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(659, 711, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(660, 712, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(661, 713, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(662, 714, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(663, 715, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(664, 716, 22, NULL, NULL, NULL, '2019-02-28 09:29:11', '2019-02-28 09:29:11'),
(665, 717, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(666, 718, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(667, 719, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(668, 720, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(669, 721, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(670, 722, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(671, 723, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(672, 724, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(673, 725, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(674, 726, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(675, 727, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(676, 728, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(677, 729, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(678, 730, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(679, 731, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(680, 732, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(681, 733, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(682, 734, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(683, 735, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12');
INSERT INTO `student_cource_exams` (`id`, `STUDENT_ID`, `COURSE_ID`, `EXAM_ID`, `SEMESTER_ID`, `Total_Student_Score`, `created_at`, `updated_at`) VALUES
(684, 736, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(685, 737, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(686, 738, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(687, 739, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(688, 740, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(689, 741, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(690, 742, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(691, 743, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(692, 744, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(693, 745, 22, NULL, NULL, NULL, '2019-02-28 09:29:12', '2019-02-28 09:29:12'),
(694, 746, 22, NULL, NULL, NULL, '2019-02-28 09:36:31', '2019-02-28 09:36:31'),
(695, 85, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(696, 86, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(697, 87, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(698, 88, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(699, 89, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(700, 90, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(701, 91, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:09'),
(702, 92, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(703, 93, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(704, 94, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(705, 95, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(706, 96, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(707, 97, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(708, 98, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(709, 99, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(710, 100, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(711, 101, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(712, 102, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(713, 103, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(714, 104, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(715, 105, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(716, 106, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(717, 107, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(718, 108, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(719, 109, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(720, 110, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(721, 111, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(722, 112, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(723, 113, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(724, 114, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(725, 115, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(726, 116, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(727, 117, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(728, 118, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(729, 119, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(730, 120, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(731, 121, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(732, 122, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(733, 123, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(734, 124, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(735, 125, 24, 55, NULL, NULL, '2019-03-14 15:46:28', '2019-04-02 12:50:10'),
(736, 126, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(737, 127, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(738, 128, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(739, 129, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(740, 130, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(741, 131, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(742, 132, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(743, 133, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(744, 134, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(745, 135, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(746, 136, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(747, 137, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(748, 138, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(749, 139, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(750, 140, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(751, 141, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(752, 142, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(753, 143, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(754, 144, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(755, 145, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(756, 146, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(757, 147, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(758, 148, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(759, 149, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(760, 150, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(761, 151, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(762, 152, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(763, 153, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(764, 154, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(765, 155, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(766, 156, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(767, 157, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(768, 158, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(769, 159, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(770, 160, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(771, 161, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(772, 162, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(773, 163, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(774, 164, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(775, 165, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(776, 166, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(777, 167, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(778, 168, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(779, 169, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(780, 170, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:10'),
(781, 171, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(782, 172, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(783, 173, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(784, 174, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(785, 175, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(786, 176, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(787, 177, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(788, 178, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(789, 179, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(790, 180, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(791, 181, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(792, 182, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(793, 183, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(794, 184, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(795, 185, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(796, 186, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(797, 187, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(798, 188, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(799, 189, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(800, 190, 24, 55, NULL, NULL, '2019-03-14 15:46:29', '2019-04-02 12:50:11'),
(801, 191, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(802, 192, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(803, 193, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(804, 194, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(805, 195, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(806, 196, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(807, 197, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(808, 198, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(809, 199, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(810, 200, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(811, 201, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(812, 202, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(813, 203, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(814, 204, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(815, 205, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(816, 206, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(817, 207, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(818, 208, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(819, 209, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(820, 210, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(821, 211, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(822, 212, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(823, 213, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(824, 214, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(825, 215, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(826, 216, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(827, 217, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(828, 218, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(829, 219, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(830, 220, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(831, 221, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(832, 222, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(833, 223, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(834, 224, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(835, 225, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(836, 226, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(837, 227, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(838, 228, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(839, 229, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(840, 230, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(841, 231, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(842, 232, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(843, 233, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(844, 234, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(845, 235, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(846, 236, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(847, 237, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(848, 238, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(849, 239, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(850, 240, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(851, 241, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(852, 242, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(853, 243, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(854, 244, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(855, 245, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(856, 246, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(857, 247, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(858, 248, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(859, 249, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(860, 250, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(861, 251, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(862, 252, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(863, 253, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(864, 254, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(865, 255, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(866, 256, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(867, 257, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(868, 258, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(869, 259, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(870, 260, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(871, 261, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(872, 262, 24, 55, NULL, NULL, '2019-03-14 15:46:30', '2019-04-02 12:50:11'),
(873, 263, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(874, 264, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(875, 265, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(876, 266, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(877, 267, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(878, 268, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(879, 269, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(880, 270, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(881, 271, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(882, 272, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(883, 273, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:11'),
(884, 274, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(885, 275, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(886, 276, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(887, 277, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(888, 278, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(889, 279, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(890, 280, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(891, 281, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(892, 282, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(893, 283, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(894, 284, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(895, 285, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(896, 286, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(897, 287, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(898, 288, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(899, 289, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(900, 290, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(901, 291, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(902, 292, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(903, 293, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(904, 294, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(905, 295, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(906, 296, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(907, 297, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(908, 298, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(909, 299, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(910, 300, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(911, 301, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(912, 302, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(913, 303, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(914, 304, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(915, 305, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(916, 306, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(917, 307, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(918, 308, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(919, 309, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(920, 310, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(921, 311, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(922, 312, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(923, 313, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(924, 314, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(925, 315, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(926, 316, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(927, 317, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(928, 318, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(929, 319, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(930, 320, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(931, 321, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(932, 322, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(933, 323, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(934, 324, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(935, 325, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(936, 326, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(937, 327, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(938, 328, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(939, 329, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(940, 330, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(941, 331, 24, 55, NULL, NULL, '2019-03-14 15:46:31', '2019-04-02 12:50:12'),
(942, 332, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:12'),
(943, 333, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(944, 334, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(945, 335, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(946, 336, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(947, 337, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(948, 338, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(949, 339, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(950, 340, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(951, 341, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(952, 342, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(953, 343, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(954, 344, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(955, 345, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(956, 346, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(957, 347, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(958, 348, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(959, 349, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(960, 350, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(961, 351, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(962, 352, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(963, 353, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(964, 354, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(965, 355, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(966, 356, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(967, 357, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(968, 358, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(969, 359, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(970, 360, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(971, 361, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(972, 362, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(973, 363, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(974, 364, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(975, 365, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(976, 366, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(977, 367, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(978, 368, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(979, 369, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(980, 370, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(981, 371, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(982, 372, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(983, 373, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(984, 374, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(985, 375, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(986, 376, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(987, 377, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(988, 378, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(989, 379, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(990, 380, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(991, 381, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(992, 382, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(993, 383, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(994, 384, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(995, 385, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(996, 386, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(997, 387, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(998, 388, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(999, 389, 24, 55, NULL, NULL, '2019-03-14 15:46:32', '2019-04-02 12:50:13'),
(1000, 390, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:13'),
(1001, 391, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1002, 392, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1003, 393, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1004, 394, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1005, 395, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1006, 396, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1007, 397, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1008, 398, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1009, 399, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1010, 400, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1011, 401, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1012, 402, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1013, 403, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1014, 404, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1015, 405, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1016, 406, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1017, 407, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1018, 408, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1019, 409, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1020, 410, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1021, 411, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1022, 412, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1023, 413, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1024, 414, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1025, 415, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1026, 416, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1027, 417, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1028, 418, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1029, 419, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1030, 420, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1031, 421, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1032, 422, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1033, 423, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1034, 502, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1035, 503, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1036, 504, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1037, 505, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1038, 506, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1039, 507, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1040, 508, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1041, 509, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1042, 510, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1043, 511, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1044, 512, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1045, 513, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1046, 514, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1047, 515, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1048, 516, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1049, 517, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1050, 518, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1051, 519, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1052, 520, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1053, 521, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1054, 522, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1055, 523, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1056, 524, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1057, 525, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1058, 526, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1059, 527, 24, 55, NULL, NULL, '2019-03-14 15:46:33', '2019-04-02 12:50:14'),
(1060, 528, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1061, 529, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1062, 530, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1063, 531, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1064, 532, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1065, 533, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1066, 534, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:14'),
(1067, 535, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1068, 536, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1069, 537, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1070, 538, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1071, 539, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1072, 540, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1073, 541, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1074, 542, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1075, 543, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1076, 544, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1077, 545, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1078, 546, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1079, 547, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1080, 548, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1081, 549, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1082, 550, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1083, 551, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1084, 552, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1085, 747, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1086, 748, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1087, 749, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1088, 750, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1089, 751, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1090, 752, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1091, 753, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1092, 754, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1093, 755, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1094, 756, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1095, 757, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1096, 758, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1097, 759, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1098, 760, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1099, 761, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1100, 762, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1101, 763, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1102, 764, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1103, 765, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1104, 766, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1105, 767, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1106, 768, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1107, 769, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1108, 770, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1109, 771, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1110, 772, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1111, 773, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1112, 774, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1113, 775, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1114, 776, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1115, 777, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1116, 778, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1117, 779, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1118, 780, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1119, 781, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1120, 782, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1121, 783, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1122, 784, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1123, 785, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1124, 786, 24, 55, NULL, NULL, '2019-03-14 15:46:34', '2019-04-02 12:50:15'),
(1125, 787, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1126, 788, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1127, 789, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1128, 790, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1129, 791, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1130, 792, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1131, 793, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1132, 794, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1133, 795, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1134, 796, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1135, 797, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1136, 798, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1137, 799, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1138, 800, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1139, 801, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1140, 802, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1141, 803, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1142, 804, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1143, 805, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1144, 806, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1145, 807, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1146, 808, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1147, 809, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1148, 810, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1149, 811, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1150, 812, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1151, 813, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1152, 814, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1153, 815, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1154, 816, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1155, 817, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1156, 818, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1157, 819, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1158, 820, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1159, 821, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1160, 822, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1161, 823, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1162, 824, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1163, 825, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1164, 826, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:15'),
(1165, 827, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1166, 828, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1167, 829, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1168, 830, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1169, 831, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1170, 832, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1171, 833, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1172, 834, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1173, 835, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1174, 836, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1175, 837, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1176, 838, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1177, 839, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1178, 840, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1179, 841, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1180, 842, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1181, 843, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1182, 844, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1183, 845, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1184, 846, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1185, 847, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1186, 848, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1187, 849, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1188, 850, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1189, 851, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1190, 852, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1191, 853, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1192, 854, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1193, 855, 24, 55, NULL, NULL, '2019-03-14 15:46:35', '2019-04-02 12:50:16'),
(1194, 856, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1195, 857, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1196, 858, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1197, 859, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1198, 860, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1199, 861, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1200, 862, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1201, 863, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1202, 864, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1203, 865, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1204, 866, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1205, 867, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1206, 868, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1207, 869, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1208, 870, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1209, 871, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1210, 872, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1211, 873, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1212, 874, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1213, 875, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1214, 876, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1215, 877, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1216, 878, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1217, 879, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1218, 880, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1219, 881, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1220, 882, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1221, 883, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1222, 884, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1223, 885, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1224, 886, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1225, 887, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1226, 888, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1227, 889, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1228, 890, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1229, 891, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1230, 892, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1231, 893, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1232, 894, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1233, 895, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1234, 896, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1235, 897, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1236, 898, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1237, 899, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1238, 900, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1239, 901, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1240, 902, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1241, 903, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1242, 904, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1243, 905, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1244, 906, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1245, 907, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1246, 908, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1247, 909, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1248, 910, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1249, 911, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1250, 912, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1251, 913, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1252, 914, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1253, 915, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1254, 916, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1255, 917, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1256, 918, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1257, 919, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1258, 920, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1259, 921, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1260, 922, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1261, 923, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1262, 924, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1263, 925, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1264, 926, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:16'),
(1265, 927, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:17'),
(1266, 928, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:17'),
(1267, 929, 24, 55, NULL, NULL, '2019-03-14 15:46:36', '2019-04-02 12:50:17'),
(1268, 930, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1269, 931, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1270, 932, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1271, 933, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1272, 934, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1273, 935, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1274, 936, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1275, 937, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1276, 938, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1277, 939, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1278, 940, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1279, 941, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1280, 942, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1281, 943, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1282, 944, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1283, 945, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1284, 946, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1285, 947, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1286, 948, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1287, 949, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1288, 950, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1289, 951, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1290, 952, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1291, 953, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1292, 954, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1293, 955, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1294, 956, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1295, 957, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1296, 958, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1297, 959, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1298, 960, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1299, 961, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1300, 962, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1301, 963, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1302, 964, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1303, 965, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1304, 966, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1305, 967, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1306, 968, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1307, 969, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1308, 970, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1309, 971, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1310, 972, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1311, 973, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1312, 974, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1313, 975, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1314, 976, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1315, 977, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1316, 978, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1317, 979, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1318, 980, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1319, 981, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1320, 982, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1321, 983, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1322, 984, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1323, 985, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1324, 986, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1325, 987, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1326, 988, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1327, 989, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1328, 990, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1329, 991, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1330, 992, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1331, 993, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1332, 994, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1333, 995, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1334, 996, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17');
INSERT INTO `student_cource_exams` (`id`, `STUDENT_ID`, `COURSE_ID`, `EXAM_ID`, `SEMESTER_ID`, `Total_Student_Score`, `created_at`, `updated_at`) VALUES
(1335, 997, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1336, 998, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1337, 999, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1338, 1000, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1339, 1001, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1340, 1002, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1341, 1003, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1342, 1004, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1343, 1005, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1344, 1006, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1345, 1007, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1346, 1008, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1347, 1009, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1348, 1010, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1349, 1011, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1350, 1012, 24, 55, NULL, NULL, '2019-03-14 15:46:37', '2019-04-02 12:50:17'),
(1351, 1013, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1352, 1014, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1353, 1015, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1354, 1016, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1355, 1017, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1356, 1018, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1357, 1019, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1358, 1020, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1359, 1021, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1360, 1022, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1361, 1023, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1362, 1024, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1363, 1025, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1364, 1026, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1365, 1027, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1366, 1028, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1367, 1029, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1368, 1030, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:17'),
(1369, 1031, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1370, 1032, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1371, 1033, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1372, 1034, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1373, 1035, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1374, 1036, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1375, 1037, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1376, 1038, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1377, 1039, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1378, 1040, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1379, 1041, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1380, 1042, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1381, 1043, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1382, 1044, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1383, 1045, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1384, 1046, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1385, 1047, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1386, 1048, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1387, 1049, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1388, 1050, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1389, 1051, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1390, 1052, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1391, 1053, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1392, 1054, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1393, 1055, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1394, 1056, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1395, 1057, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1396, 1058, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1397, 1059, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1398, 1060, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1399, 1061, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1400, 1062, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1401, 1063, 24, 55, NULL, NULL, '2019-03-14 15:46:38', '2019-04-02 12:50:18'),
(1402, 1064, 24, 55, NULL, NULL, '2019-03-16 06:36:34', '2019-04-02 12:50:18'),
(1403, 1065, 24, 55, NULL, NULL, '2019-03-16 06:36:34', '2019-04-02 12:50:18'),
(1404, 1066, 24, 55, NULL, NULL, '2019-03-16 06:36:34', '2019-04-02 12:50:18'),
(1405, 1067, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1406, 1068, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1407, 1069, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1408, 1070, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1409, 1071, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1410, 1072, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1411, 1073, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1412, 1074, 24, 55, NULL, NULL, '2019-03-16 06:43:14', '2019-04-02 12:50:18'),
(1413, 1075, 24, 55, NULL, NULL, '2019-03-16 06:50:27', '2019-04-02 12:50:18'),
(1414, 1076, 24, 55, NULL, NULL, '2019-03-16 06:50:27', '2019-04-02 12:50:18'),
(1415, 1077, 24, 55, NULL, NULL, '2019-03-16 06:50:27', '2019-04-02 12:50:18'),
(1416, 1078, 24, 55, NULL, NULL, '2019-03-16 06:50:28', '2019-04-02 12:50:18'),
(1417, 1079, 24, 55, NULL, NULL, '2019-03-16 06:50:28', '2019-04-02 12:50:18'),
(1418, 424, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1419, 425, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1420, 426, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1421, 427, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1422, 428, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1423, 429, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1424, 430, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1425, 431, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1426, 432, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1427, 433, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1428, 434, 28, 54, NULL, NULL, '2019-04-01 17:47:49', '2019-04-02 11:46:36'),
(1429, 435, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1430, 436, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1431, 437, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1432, 438, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1433, 439, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1434, 440, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1435, 441, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1436, 442, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1437, 443, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1438, 444, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1439, 445, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1440, 446, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1441, 447, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1442, 448, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1443, 449, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1444, 450, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1445, 451, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1446, 452, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1447, 453, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1448, 454, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1449, 455, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1450, 456, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1451, 457, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1452, 458, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1453, 459, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1454, 460, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1455, 461, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1456, 462, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1457, 463, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1458, 464, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1459, 465, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1460, 466, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1461, 467, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1462, 468, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1463, 469, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1464, 470, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1465, 471, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1466, 472, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1467, 473, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1468, 474, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1469, 475, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1470, 476, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1471, 477, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1472, 478, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1473, 479, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:36'),
(1474, 480, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1475, 481, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1476, 482, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1477, 483, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1478, 484, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1479, 485, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1480, 486, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1481, 487, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1482, 488, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1483, 489, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1484, 490, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1485, 491, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1486, 492, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1487, 493, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1488, 494, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1489, 495, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1490, 496, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1491, 497, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1492, 498, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1493, 499, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1494, 500, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1495, 501, 28, 54, NULL, NULL, '2019-04-01 17:47:50', '2019-04-02 11:46:37'),
(1496, 1081, 27, NULL, NULL, NULL, '2019-04-09 03:53:50', '2019-04-09 03:53:50'),
(1497, 1082, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1498, 1083, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1499, 1084, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1500, 1085, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1501, 1086, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1502, 1087, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1503, 1088, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1504, 1089, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1505, 1090, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1506, 1091, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1507, 1092, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1508, 1093, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1509, 1094, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1510, 1095, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1511, 1096, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1512, 1097, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1513, 1098, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1514, 1099, 27, NULL, NULL, NULL, '2019-04-09 03:53:51', '2019-04-09 03:53:51'),
(1515, 85, 27, NULL, NULL, NULL, '2019-04-09 04:19:54', '2019-04-09 04:19:54'),
(1516, 1100, 27, NULL, NULL, NULL, '2019-04-09 04:19:54', '2019-04-09 04:19:54'),
(1517, 424, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1518, 425, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1519, 426, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1520, 427, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1521, 428, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1522, 429, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1523, 430, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1524, 431, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1525, 432, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1526, 433, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1527, 434, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1528, 435, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1529, 436, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1530, 437, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1531, 438, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1532, 439, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1533, 440, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1534, 441, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1535, 442, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1536, 443, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1537, 444, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1538, 445, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1539, 446, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1540, 447, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1541, 448, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1542, 449, 31, 65, NULL, NULL, '2019-04-22 10:21:05', '2019-04-22 12:07:48'),
(1543, 450, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1544, 451, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1545, 452, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1546, 453, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1547, 454, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1548, 455, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1549, 456, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1550, 457, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1551, 458, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1552, 459, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1553, 460, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1554, 461, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1555, 462, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1556, 463, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1557, 464, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1558, 465, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:48'),
(1559, 466, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1560, 467, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1561, 468, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1562, 469, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1563, 470, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1564, 471, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1565, 472, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1566, 473, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1567, 474, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1568, 475, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1569, 476, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1570, 477, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1571, 478, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1572, 479, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1573, 480, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1574, 481, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1575, 482, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1576, 483, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1577, 484, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1578, 485, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1579, 486, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1580, 487, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1581, 488, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1582, 489, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1583, 490, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1584, 491, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1585, 492, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1586, 493, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1587, 494, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1588, 495, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1589, 496, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1590, 497, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1591, 498, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1592, 499, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1593, 500, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1594, 501, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1595, 1080, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1596, 1101, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1597, 1102, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1598, 1103, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1599, 1104, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1600, 1105, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1601, 1106, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1602, 1107, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1603, 1108, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1604, 1109, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1605, 1110, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1606, 1111, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1607, 1112, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1608, 1113, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1609, 1114, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1610, 1115, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1611, 1116, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1612, 1117, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1613, 1118, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1614, 1119, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1615, 1120, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1616, 1121, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1617, 1122, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1618, 1123, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1619, 1124, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1620, 1125, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1621, 1126, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1622, 1127, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1623, 1128, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1624, 1129, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1625, 1130, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1626, 1131, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1627, 1132, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1628, 1133, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1629, 1134, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1630, 1135, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1631, 1136, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:49'),
(1632, 1137, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1633, 1138, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1634, 1139, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1635, 1140, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1636, 1141, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1637, 1142, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1638, 1143, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1639, 1144, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1640, 1145, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1641, 1146, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1642, 1147, 31, 65, NULL, NULL, '2019-04-22 10:21:06', '2019-04-22 12:07:50'),
(1643, 1148, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1644, 1149, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1645, 1150, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1646, 1151, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1647, 1152, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1648, 1153, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1649, 1154, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1650, 1155, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1651, 1156, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1652, 1157, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1653, 1158, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1654, 1159, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1655, 1160, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1656, 1161, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1657, 1162, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1658, 1163, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1659, 1164, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1660, 1165, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1661, 1166, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1662, 1167, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1663, 1168, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1664, 1169, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1665, 1170, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1666, 1171, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1667, 1172, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1668, 1173, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1669, 1174, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1670, 1175, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1671, 1176, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1672, 1177, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1673, 1178, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1674, 1179, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1675, 1180, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1676, 1181, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1677, 1182, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1678, 1183, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1679, 1184, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1680, 1185, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1681, 1186, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1682, 1187, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1683, 1188, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1684, 1189, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1685, 1190, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1686, 1191, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1687, 1192, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1688, 1193, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1689, 1194, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1690, 1195, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1691, 1196, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:50'),
(1692, 1197, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1693, 1198, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1694, 1199, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1695, 1200, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1696, 1201, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1697, 1202, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1698, 1203, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1699, 1204, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1700, 1205, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1701, 1206, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1702, 1207, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1703, 1208, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1704, 1209, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1705, 1210, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1706, 1211, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1707, 1212, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1708, 1213, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1709, 1214, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1710, 1215, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1711, 1216, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1712, 1217, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1713, 1218, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1714, 1219, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1715, 1220, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1716, 1221, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1717, 1222, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1718, 1223, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1719, 1224, 31, 65, NULL, NULL, '2019-04-22 10:21:07', '2019-04-22 12:07:51'),
(1720, 1225, 31, 74, NULL, NULL, '2019-04-22 15:07:32', '2019-07-02 00:25:18'),
(1721, 502, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1722, 503, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1723, 504, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1724, 505, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1725, 506, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1726, 507, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1727, 508, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1728, 509, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1729, 510, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1730, 511, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1731, 512, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1732, 513, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1733, 514, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1734, 515, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1735, 516, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1736, 517, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1737, 518, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1738, 519, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1739, 520, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1740, 521, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1741, 522, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1742, 523, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1743, 524, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1744, 525, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1745, 526, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1746, 527, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1747, 528, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1748, 529, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1749, 530, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1750, 531, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1751, 532, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1752, 533, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1753, 534, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1754, 535, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1755, 536, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1756, 537, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1757, 538, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1758, 539, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1759, 540, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1760, 541, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1761, 542, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1762, 543, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1763, 544, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1764, 545, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1765, 546, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1766, 547, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1767, 548, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1768, 549, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1769, 550, 15, NULL, NULL, NULL, '2019-04-24 05:01:35', '2019-04-24 05:01:35'),
(1770, 551, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1771, 552, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1772, 747, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1773, 748, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1774, 749, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1775, 750, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1776, 751, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1777, 752, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1778, 753, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1779, 754, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1780, 755, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1781, 756, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1782, 757, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1783, 758, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1784, 759, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1785, 760, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1786, 761, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1787, 762, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1788, 763, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1789, 764, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1790, 765, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1791, 766, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1792, 767, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1793, 768, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1794, 769, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1795, 770, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1796, 771, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1797, 772, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1798, 773, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1799, 774, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1800, 775, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1801, 776, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1802, 777, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1803, 778, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1804, 779, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1805, 780, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1806, 781, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1807, 782, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1808, 783, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1809, 784, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1810, 785, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1811, 786, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1812, 787, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1813, 788, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1814, 789, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1815, 790, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1816, 791, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1817, 792, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1818, 793, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1819, 794, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1820, 795, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1821, 796, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1822, 797, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1823, 798, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1824, 799, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1825, 800, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1826, 801, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1827, 802, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1828, 803, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1829, 804, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1830, 805, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1831, 806, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1832, 807, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1833, 808, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1834, 809, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1835, 810, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1836, 811, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1837, 812, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1838, 813, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1839, 814, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1840, 815, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1841, 816, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1842, 817, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1843, 818, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1844, 819, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1845, 820, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1846, 821, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1847, 822, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1848, 823, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1849, 824, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1850, 825, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1851, 826, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1852, 827, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1853, 828, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1854, 829, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1855, 830, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1856, 831, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1857, 832, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1858, 833, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1859, 834, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1860, 835, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1861, 836, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1862, 837, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1863, 838, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1864, 839, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1865, 840, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1866, 841, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1867, 842, 15, NULL, NULL, NULL, '2019-04-24 05:01:36', '2019-04-24 05:01:36'),
(1868, 843, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1869, 844, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1870, 845, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1871, 846, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1872, 847, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1873, 848, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1874, 849, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1875, 850, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1876, 851, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1877, 852, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1878, 853, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1879, 854, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1880, 855, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1881, 856, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1882, 857, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1883, 858, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1884, 859, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1885, 860, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1886, 861, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1887, 862, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1888, 863, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1889, 864, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1890, 865, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1891, 866, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1892, 867, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1893, 868, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1894, 869, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1895, 870, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1896, 871, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1897, 872, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1898, 873, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1899, 874, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1900, 875, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1901, 876, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1902, 877, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1903, 878, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1904, 879, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1905, 880, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1906, 881, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1907, 882, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1908, 883, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1909, 884, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1910, 885, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1911, 886, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1912, 887, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1913, 888, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1914, 889, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1915, 890, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1916, 891, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1917, 892, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1918, 893, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1919, 894, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1920, 895, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1921, 896, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1922, 897, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1923, 898, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1924, 899, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1925, 900, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1926, 901, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1927, 902, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1928, 903, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1929, 904, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1930, 905, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1931, 906, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1932, 907, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1933, 908, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1934, 909, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1935, 910, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1936, 911, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1937, 912, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1938, 913, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1939, 914, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1940, 915, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1941, 916, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1942, 917, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1943, 918, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1944, 919, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1945, 920, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1946, 921, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1947, 922, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1948, 923, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1949, 924, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1950, 925, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1951, 926, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1952, 927, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1953, 928, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1954, 929, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1955, 930, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1956, 931, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1957, 932, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1958, 933, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1959, 934, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1960, 935, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1961, 936, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1962, 937, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1963, 938, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1964, 939, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1965, 940, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1966, 941, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1967, 942, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1968, 943, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1969, 944, 15, NULL, NULL, NULL, '2019-04-24 05:01:37', '2019-04-24 05:01:37'),
(1970, 945, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1971, 946, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38');
INSERT INTO `student_cource_exams` (`id`, `STUDENT_ID`, `COURSE_ID`, `EXAM_ID`, `SEMESTER_ID`, `Total_Student_Score`, `created_at`, `updated_at`) VALUES
(1972, 947, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1973, 948, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1974, 949, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1975, 950, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1976, 951, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1977, 952, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1978, 953, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1979, 954, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1980, 955, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1981, 956, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1982, 957, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1983, 958, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1984, 959, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1985, 960, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1986, 961, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1987, 962, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1988, 963, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1989, 964, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1990, 965, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1991, 966, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1992, 967, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1993, 968, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1994, 969, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1995, 970, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1996, 971, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1997, 972, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1998, 973, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(1999, 974, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2000, 975, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2001, 976, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2002, 977, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2003, 978, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2004, 979, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2005, 980, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2006, 981, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2007, 982, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2008, 983, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2009, 984, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2010, 985, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2011, 986, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2012, 987, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2013, 988, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2014, 989, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2015, 990, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2016, 991, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2017, 992, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2018, 993, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2019, 994, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2020, 995, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2021, 996, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2022, 997, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2023, 998, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2024, 999, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2025, 1000, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2026, 1001, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2027, 1002, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2028, 1003, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2029, 1004, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2030, 1005, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2031, 1006, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2032, 1007, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2033, 1008, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2034, 1009, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2035, 1010, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2036, 1011, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2037, 1012, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2038, 1013, 15, NULL, NULL, NULL, '2019-04-24 05:01:38', '2019-04-24 05:01:38'),
(2039, 1014, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2040, 1015, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2041, 1016, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2042, 1017, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2043, 1018, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2044, 1019, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2045, 1020, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2046, 1021, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2047, 1022, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2048, 1023, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2049, 1024, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2050, 1025, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2051, 1026, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2052, 1027, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2053, 1028, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2054, 1029, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2055, 1030, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2056, 1031, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2057, 1032, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2058, 1033, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2059, 1034, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2060, 1035, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2061, 1036, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2062, 1037, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2063, 1038, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2064, 1039, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2065, 1040, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2066, 1041, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2067, 1042, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2068, 1043, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2069, 1044, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2070, 1045, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2071, 1046, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2072, 1047, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2073, 1048, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2074, 1049, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2075, 1050, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2076, 1051, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2077, 1052, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2078, 1053, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2079, 1054, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2080, 1055, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2081, 1056, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2082, 1057, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2083, 1058, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2084, 1059, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2085, 1060, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2086, 1061, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2087, 1062, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2088, 1063, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2089, 1064, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2090, 1065, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2091, 1066, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2092, 1067, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2093, 1068, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2094, 1069, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2095, 1070, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2096, 1071, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2097, 1072, 15, NULL, NULL, NULL, '2019-04-24 05:01:39', '2019-04-24 05:01:39'),
(2098, 1073, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2099, 1074, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2100, 1075, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2101, 1076, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2102, 1077, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2103, 1078, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2104, 1079, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2105, 1081, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2106, 1082, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2107, 1083, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2108, 1084, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2109, 1085, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2110, 1086, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2111, 1087, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2112, 1088, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2113, 1089, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2114, 1090, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2115, 1091, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2116, 1092, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2117, 1093, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2118, 1094, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2119, 1095, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2120, 1096, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2121, 1097, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2122, 1098, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2123, 1099, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2124, 1100, 15, NULL, NULL, NULL, '2019-04-24 05:01:40', '2019-04-24 05:01:40'),
(2125, 1226, 15, NULL, NULL, NULL, '2019-04-24 12:46:49', '2019-04-24 12:46:49'),
(2126, 1081, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2127, 1082, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2128, 1083, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2129, 1084, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2130, 1085, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2131, 1086, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2132, 1087, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2133, 1088, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2134, 1089, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2135, 1090, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2136, 1091, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2137, 1092, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2138, 1093, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2139, 1094, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2140, 1095, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2141, 1096, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2142, 1097, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2143, 1098, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2144, 1099, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2145, 1100, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2146, 1226, 24, 71, NULL, NULL, '2019-05-13 05:21:09', '2019-05-13 05:24:24'),
(2147, 1228, 15, NULL, NULL, NULL, '2019-05-13 07:04:35', '2019-05-13 07:04:35'),
(2148, 1229, 24, NULL, NULL, NULL, '2019-05-13 09:10:06', '2019-05-13 09:10:06'),
(2149, 1230, 24, NULL, NULL, NULL, '2019-05-13 09:10:06', '2019-05-13 09:10:06'),
(2150, 1231, 24, NULL, NULL, NULL, '2019-05-13 09:18:50', '2019-05-13 09:18:50'),
(2151, 1232, 24, NULL, NULL, NULL, '2019-05-13 09:18:50', '2019-05-13 09:18:50'),
(2152, 1233, 24, NULL, NULL, NULL, '2019-05-13 09:27:51', '2019-05-13 09:27:51'),
(2153, 1236, 13, 87, NULL, NULL, '2020-01-15 11:20:08', '2020-01-15 11:25:39'),
(2154, 1237, 13, 87, NULL, NULL, '2020-01-15 11:20:08', '2020-01-15 11:25:39'),
(2155, 1238, 34, 91, NULL, NULL, '2020-03-14 19:30:44', '2020-03-14 19:41:50'),
(2156, 1239, 34, 91, NULL, NULL, '2020-03-14 19:30:44', '2020-03-14 19:41:50');

-- --------------------------------------------------------

--
-- بنية الجدول `student_exams`
--

CREATE TABLE `student_exams` (
  `id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `result` double NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf16;

--
-- إرجاع أو استيراد بيانات الجدول `student_exams`
--

INSERT INTO `student_exams` (`id`, `student_id`, `exam_id`, `result`, `created_at`, `updated_at`) VALUES
(122, 228, 29, 6, '2018-11-28 19:26:49', '2018-11-28 17:26:49'),
(123, 284, 29, 8, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(124, 288, 29, 8, '2018-11-29 06:41:58', '2018-11-29 06:41:58'),
(125, 276, 29, 6, '2018-11-29 06:45:21', '2018-11-29 06:45:21'),
(126, 277, 29, 8, '2018-11-29 06:45:22', '2018-11-29 06:45:22'),
(127, 293, 29, 6, '2018-11-29 06:46:03', '2018-11-29 06:46:03'),
(128, 292, 29, 6, '2018-11-29 06:46:15', '2018-11-29 06:46:15'),
(129, 282, 29, 6, '2018-11-29 06:46:19', '2018-11-29 06:46:19'),
(130, 291, 29, 8, '2018-11-29 06:48:06', '2018-11-29 06:48:06'),
(131, 294, 29, 8, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(132, 287, 29, 8, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(133, 285, 29, 6, '2018-11-29 06:49:06', '2018-11-29 06:49:06'),
(134, 279, 29, 8, '2018-11-29 06:49:20', '2018-11-29 06:49:20'),
(135, 295, 29, 10, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(136, 275, 29, 6, '2018-11-29 06:50:38', '2018-11-29 06:50:38'),
(137, 286, 29, 8, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(138, 296, 29, 10, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(139, 278, 29, 8, '2018-11-29 06:53:09', '2018-11-29 06:53:09'),
(140, 289, 29, 8, '2018-11-29 06:58:15', '2018-11-29 06:58:15'),
(141, 290, 29, 8, '2018-11-29 06:59:10', '2018-11-29 06:59:10'),
(142, 280, 29, 10, '2018-11-29 07:00:12', '2018-11-29 07:00:12'),
(143, 283, 29, 8, '2018-11-29 07:00:27', '2018-11-29 07:00:27'),
(144, 241, 29, 8, '2018-11-29 10:45:17', '2018-11-29 08:45:17'),
(145, 250, 29, 8, '2018-11-29 08:42:23', '2018-11-29 08:42:23'),
(146, 247, 29, 6, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(147, 245, 29, 4, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(148, 239, 29, 2, '2018-11-29 08:43:59', '2018-11-29 08:43:59'),
(149, 231, 29, 2, '2018-11-29 08:44:05', '2018-11-29 08:44:05'),
(150, 243, 29, 10, '2018-11-29 10:52:19', '2018-11-29 08:52:19'),
(151, 226, 29, 10, '2018-11-29 08:44:06', '2018-11-29 08:44:06'),
(152, 246, 29, 10, '2018-11-29 10:47:40', '2018-11-29 08:47:40'),
(153, 237, 29, 4, '2018-11-29 08:44:09', '2018-11-29 08:44:09'),
(154, 238, 29, 6, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(155, 249, 29, 4, '2018-11-29 08:44:11', '2018-11-29 08:44:11'),
(156, 244, 29, 6, '2018-11-29 10:55:43', '2018-11-29 08:55:43'),
(157, 227, 29, 10, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(158, 229, 29, 10, '2018-11-29 10:53:52', '2018-11-29 08:53:52'),
(159, 236, 29, 10, '2018-11-29 10:53:30', '2018-11-29 08:53:30'),
(160, 248, 29, 10, '2018-11-29 10:57:46', '2018-11-29 08:57:46'),
(161, 312, 29, 8, '2018-11-29 11:02:55', '2018-11-29 09:02:55'),
(162, 299, 29, 2, '2018-11-29 08:56:44', '2018-11-29 08:56:44'),
(163, 235, 29, 8, '2018-11-29 08:57:40', '2018-11-29 08:57:40'),
(164, 304, 29, 10, '2018-11-29 08:57:50', '2018-11-29 08:57:50'),
(165, 301, 29, 8, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(166, 303, 29, 8, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(167, 302, 29, 4, '2018-11-29 09:01:01', '2018-11-29 09:01:01'),
(168, 300, 29, 6, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(169, 306, 29, 8, '2018-11-29 09:01:12', '2018-11-29 09:01:12'),
(170, 298, 29, 2, '2018-11-29 09:02:05', '2018-11-29 09:02:05'),
(171, 310, 29, 6, '2018-11-29 09:02:08', '2018-11-29 09:02:08'),
(172, 305, 29, 8, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(173, 307, 29, 10, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(174, 253, 29, 8, '2018-11-29 09:02:17', '2018-11-29 09:02:17'),
(175, 297, 29, 8, '2018-11-29 09:02:25', '2018-11-29 09:02:25'),
(176, 315, 29, 8, '2018-11-29 09:02:48', '2018-11-29 09:02:48'),
(177, 308, 29, 10, '2018-11-29 09:03:11', '2018-11-29 09:03:11'),
(178, 313, 29, 8, '2018-11-29 09:03:28', '2018-11-29 09:03:28'),
(179, 311, 29, 2, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(180, 314, 29, 6, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(181, 231, 31, 10, '2018-12-01 09:37:08', '2018-12-01 07:37:08'),
(182, 237, 31, 11, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(183, 108, 28, 0, '2018-12-01 09:56:33', '2018-12-01 09:56:33'),
(184, 108, 31, 3, '2018-12-01 11:11:42', '2018-12-01 09:11:42'),
(185, 113, 31, 6, '2018-12-01 09:10:34', '2018-12-01 09:10:34'),
(186, 143, 31, 11, '2018-12-01 09:11:11', '2018-12-01 09:11:11'),
(187, 114, 31, 3, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(188, 93, 31, 2, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(189, 153, 31, 11, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(190, 116, 31, 6, '2018-12-01 09:20:47', '2018-12-01 09:20:47'),
(191, 207, 31, 9, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(192, 156, 31, 6, '2018-12-01 09:24:27', '2018-12-01 09:24:27'),
(193, 115, 31, 11, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(194, 120, 31, 11, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(195, 100, 31, 3, '2018-12-01 09:25:44', '2018-12-01 09:25:44'),
(196, 205, 31, 5, '2018-12-01 09:25:59', '2018-12-01 09:25:59'),
(197, 97, 31, 3, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(198, 144, 31, 11, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(199, 101, 31, 4, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(200, 88, 31, 5, '2018-12-01 09:26:57', '2018-12-01 09:26:57'),
(201, 103, 31, 10, '2018-12-01 09:27:02', '2018-12-01 09:27:02'),
(202, 89, 31, 5, '2018-12-01 09:27:19', '2018-12-01 09:27:19'),
(203, 105, 31, 9, '2018-12-01 09:28:03', '2018-12-01 09:28:03'),
(204, 141, 31, 7, '2018-12-01 09:28:30', '2018-12-01 09:28:30'),
(205, 191, 31, 9, '2018-12-01 11:36:17', '2018-12-01 09:36:17'),
(206, 199, 31, 8, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(207, 87, 31, 2, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(208, 200, 31, 8, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(209, 94, 31, 6, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(210, 99, 31, 5, '2018-12-01 09:29:08', '2018-12-01 09:29:08'),
(211, 152, 31, 11, '2018-12-01 09:29:13', '2018-12-01 09:29:13'),
(212, 95, 31, 1, '2018-12-01 09:29:32', '2018-12-01 09:29:32'),
(213, 190, 31, 2, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(214, 102, 31, 5, '2018-12-01 09:31:00', '2018-12-01 09:31:00'),
(215, 90, 31, 5, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(216, 212, 31, 5, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(217, 122, 31, 1, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(218, 196, 31, 7, '2018-12-01 11:34:42', '2018-12-01 09:34:42'),
(219, 131, 31, 3, '2018-12-01 09:31:22', '2018-12-01 09:31:22'),
(220, 92, 31, 6, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(221, 187, 31, 5, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(222, 138, 31, 11, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(223, 155, 31, 5, '2018-12-01 11:37:59', '2018-12-01 09:37:59'),
(224, 86, 31, 5, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(225, 126, 31, 9, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(226, 154, 31, 4, '2018-12-01 11:32:41', '2018-12-01 09:32:41'),
(227, 133, 31, 3, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(228, 184, 31, 9, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(229, 180, 31, 3, '2018-12-01 09:33:13', '2018-12-01 09:33:13'),
(230, 173, 31, 7, '2018-12-01 11:33:19', '2018-12-01 09:33:19'),
(231, 112, 31, 7, '2018-12-01 09:33:15', '2018-12-01 09:33:15'),
(232, 140, 31, 5, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(233, 142, 31, 5, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(234, 185, 31, 4, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(235, 208, 31, 4, '2018-12-01 09:33:28', '2018-12-01 09:33:28'),
(236, 206, 31, 7, '2018-12-01 09:33:34', '2018-12-01 09:33:34'),
(237, 162, 31, 5, '2018-12-01 09:33:37', '2018-12-01 09:33:37'),
(238, 119, 31, 7, '2018-12-01 09:33:42', '2018-12-01 09:33:42'),
(239, 158, 31, 5, '2018-12-01 11:33:48', '2018-12-01 09:33:48'),
(240, 204, 31, 9, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(241, 194, 31, 5, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(242, 106, 31, 5, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(243, 130, 31, 7, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(244, 128, 31, 9, '2018-12-01 09:33:51', '2018-12-01 09:33:51'),
(245, 174, 31, 4, '2018-12-01 09:33:53', '2018-12-01 09:33:53'),
(246, 177, 31, 5, '2018-12-01 09:33:53', '2018-12-01 09:33:53'),
(247, 181, 31, 5, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(248, 171, 31, 7, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(249, 167, 31, 2, '2018-12-01 09:34:05', '2018-12-01 09:34:05'),
(250, 179, 31, 7, '2018-12-01 09:34:07', '2018-12-01 09:34:07'),
(251, 186, 31, 7, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(252, 134, 31, 6, '2018-12-01 09:34:14', '2018-12-01 09:34:14'),
(253, 96, 31, 7, '2018-12-01 09:34:22', '2018-12-01 09:34:22'),
(254, 209, 31, 3, '2018-12-01 09:34:23', '2018-12-01 09:34:23'),
(255, 110, 31, 4, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(256, 157, 31, 8, '2018-12-01 09:34:34', '2018-12-01 09:34:34'),
(257, 91, 31, 4, '2018-12-01 11:35:27', '2018-12-01 09:35:27'),
(258, 107, 31, 3, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(259, 195, 31, 7, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(260, 214, 31, 3, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(261, 216, 31, 9, '2018-12-01 09:34:48', '2018-12-01 09:34:48'),
(262, 218, 31, 11, '2018-12-01 09:34:51', '2018-12-01 09:34:51'),
(263, 219, 31, 6, '2018-12-01 09:34:51', '2018-12-01 09:34:51'),
(264, 111, 31, 3, '2018-12-01 09:34:53', '2018-12-01 09:34:53'),
(265, 166, 31, 7, '2018-12-01 09:34:55', '2018-12-01 09:34:55'),
(266, 161, 31, 7, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(267, 168, 31, 3, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(268, 125, 31, 5, '2018-12-01 09:34:57', '2018-12-01 09:34:57'),
(269, 175, 31, 5, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(270, 211, 31, 10, '2018-12-01 09:35:04', '2018-12-01 09:35:04'),
(271, 137, 31, 1, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(272, 160, 31, 3, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(273, 221, 31, 3, '2018-12-01 11:36:00', '2018-12-01 09:36:00'),
(274, 201, 31, 5, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(275, 210, 31, 7, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(276, 222, 31, 5, '2018-12-01 09:35:28', '2018-12-01 09:35:28'),
(277, 170, 31, 9, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(278, 159, 31, 3, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(279, 148, 31, 7, '2018-12-01 09:35:32', '2018-12-01 09:35:32'),
(280, 217, 31, 6, '2018-12-01 09:35:32', '2018-12-01 09:35:32'),
(281, 163, 31, 11, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(282, 182, 31, 4, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(283, 165, 31, 7, '2018-12-01 09:35:40', '2018-12-01 09:35:40'),
(284, 117, 31, 5, '2018-12-01 09:35:43', '2018-12-01 09:35:43'),
(285, 198, 31, 5, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(286, 147, 31, 7, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(287, 169, 31, 4, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(288, 197, 31, 3, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(289, 127, 31, 4, '2018-12-01 09:35:57', '2018-12-01 09:35:57'),
(290, 98, 31, 5, '2018-12-01 09:36:08', '2018-12-01 09:36:08'),
(291, 203, 31, 5, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(292, 223, 31, 7, '2018-12-01 09:36:14', '2018-12-01 09:36:14'),
(293, 213, 31, 7, '2018-12-01 09:36:15', '2018-12-01 09:36:15'),
(294, 121, 31, 7, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(295, 188, 31, 3, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(296, 150, 31, 6, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(297, 164, 31, 5, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(298, 132, 31, 7, '2018-12-01 09:36:38', '2018-12-01 09:36:38'),
(299, 109, 31, 5, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(300, 178, 31, 3, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(301, 145, 31, 6, '2018-12-01 09:37:02', '2018-12-01 09:37:02'),
(302, 123, 31, 5, '2018-12-01 09:37:23', '2018-12-01 09:37:23'),
(303, 176, 31, 5, '2018-12-01 09:37:24', '2018-12-01 09:37:24'),
(304, 202, 31, 3, '2018-12-01 09:37:30', '2018-12-01 09:37:30'),
(305, 224, 31, 4, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(306, 139, 31, 6, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(307, 146, 31, 7, '2018-12-01 09:38:02', '2018-12-01 09:38:02'),
(308, 118, 31, 2, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(309, 183, 31, 7, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(310, 189, 31, 11, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(311, 149, 31, 7, '2018-12-01 09:39:19', '2018-12-01 09:39:19'),
(312, 215, 31, 4, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(313, 135, 31, 5, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(314, 104, 31, 1, '2018-12-01 09:39:30', '2018-12-01 09:39:30'),
(315, 136, 31, 6, '2018-12-01 09:41:16', '2018-12-01 09:41:16'),
(316, 192, 31, 7, '2018-12-01 09:41:24', '2018-12-01 09:41:24'),
(317, 193, 31, 5, '2018-12-01 09:41:51', '2018-12-01 09:41:51'),
(318, 129, 31, 7, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(319, 220, 31, 5, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(320, 124, 31, 5, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(321, 228, 33, 4, '2018-12-03 08:55:31', '2018-12-03 08:55:31'),
(322, 94, 33, 2, '2018-12-03 09:18:33', '2018-12-03 09:18:33'),
(324, 237, 33, 4, '2018-12-03 09:37:37', '2018-12-03 09:37:37'),
(325, 239, 34, 4, '2018-12-03 12:36:17', '2018-12-03 12:36:17'),
(326, 414, 34, 7, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(327, 240, 34, 7, '2018-12-03 13:00:31', '2018-12-03 13:00:31'),
(328, 415, 34, 5, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(329, 386, 34, 9, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(330, 369, 34, 7, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(331, 301, 34, 7, '2018-12-03 13:11:16', '2018-12-03 13:11:16'),
(332, 371, 34, 5, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(333, 335, 34, 5, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(334, 309, 34, 7, '2018-12-03 13:15:14', '2018-12-03 13:15:14'),
(335, 316, 34, 7, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(336, 357, 34, 2, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(337, 413, 34, 5, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(338, 290, 34, 5, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(339, 350, 34, 5, '2018-12-03 13:22:22', '2018-12-03 13:22:22'),
(340, 326, 34, 9, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(341, 325, 34, 5, '2018-12-03 13:23:54', '2018-12-03 13:23:54'),
(342, 324, 34, 4, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(343, 286, 34, 2, '2018-12-03 13:26:19', '2018-12-03 13:26:19'),
(344, 340, 34, 7, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(345, 251, 34, 8, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(346, 230, 34, 5, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(347, 243, 34, 5, '2018-12-03 13:29:01', '2018-12-03 13:29:01'),
(348, 351, 34, 3, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(349, 334, 34, 4, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(350, 397, 34, 11, '2018-12-03 13:30:48', '2018-12-03 13:30:48'),
(351, 364, 34, 5, '2018-12-03 13:31:17', '2018-12-03 13:31:17'),
(352, 321, 34, 9, '2018-12-03 13:32:32', '2018-12-03 13:32:32'),
(353, 297, 34, 7, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(354, 342, 34, 11, '2018-12-03 13:33:19', '2018-12-03 13:33:19'),
(355, 366, 34, 5, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(356, 338, 34, 7, '2018-12-03 13:33:30', '2018-12-03 13:33:30'),
(357, 379, 34, 7, '2018-12-03 13:33:46', '2018-12-03 13:33:46'),
(358, 302, 34, 7, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(359, 227, 34, 6, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(360, 328, 34, 9, '2018-12-03 13:33:59', '2018-12-03 13:33:59'),
(361, 365, 34, 2, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(362, 250, 34, 11, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(363, 305, 34, 7, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(364, 327, 34, 5, '2018-12-03 13:36:29', '2018-12-03 13:36:29'),
(365, 375, 34, 7, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(366, 303, 34, 11, '2018-12-03 13:36:41', '2018-12-03 13:36:41'),
(367, 382, 34, 5, '2018-12-03 13:36:52', '2018-12-03 13:36:52'),
(368, 333, 34, 9, '2018-12-03 13:36:54', '2018-12-03 13:36:54'),
(369, 300, 34, 4, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(370, 406, 34, 5, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(371, 349, 34, 5, '2018-12-03 13:37:35', '2018-12-03 13:37:35'),
(372, 307, 34, 11, '2018-12-03 13:37:42', '2018-12-03 13:37:42'),
(373, 272, 34, 3, '2018-12-03 13:39:21', '2018-12-03 13:39:21'),
(374, 273, 34, 7, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(375, 269, 34, 7, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(376, 226, 34, 9, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(377, 409, 34, 2, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(378, 421, 34, 7, '2018-12-03 13:40:40', '2018-12-03 13:40:40'),
(379, 331, 34, 7, '2018-12-03 13:41:13', '2018-12-03 13:41:13'),
(380, 370, 34, 9, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(381, 298, 34, 5, '2018-12-03 13:41:33', '2018-12-03 13:41:33'),
(382, 228, 34, 5, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(383, 247, 34, 5, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(384, 341, 34, 5, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(385, 296, 34, 6, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(386, 315, 34, 9, '2018-12-03 13:42:01', '2018-12-03 13:42:01'),
(387, 373, 34, 7, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(388, 236, 34, 7, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(389, 256, 34, 3, '2018-12-03 13:42:18', '2018-12-03 13:42:18'),
(390, 235, 34, 4, '2018-12-03 13:42:23', '2018-12-03 13:42:23'),
(391, 238, 34, 5, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(392, 337, 34, 5, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(393, 284, 34, 7, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(394, 390, 34, 5, '2018-12-03 13:43:01', '2018-12-03 13:43:01'),
(395, 336, 34, 3, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(396, 291, 34, 9, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(397, 372, 34, 6, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(398, 417, 34, 9, '2018-12-03 13:43:34', '2018-12-03 13:43:34'),
(399, 229, 34, 7, '2018-12-03 13:43:42', '2018-12-03 13:43:42'),
(400, 248, 34, 5, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(401, 285, 34, 5, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(402, 293, 34, 5, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(403, 231, 34, 9, '2018-12-03 13:44:24', '2018-12-03 13:44:24'),
(404, 252, 34, 7, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(405, 314, 34, 5, '2018-12-03 13:44:36', '2018-12-03 13:44:36'),
(406, 294, 34, 4, '2018-12-03 13:44:40', '2018-12-03 13:44:40'),
(407, 244, 34, 9, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(408, 276, 34, 7, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(409, 249, 34, 5, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(410, 358, 34, 7, '2018-12-03 13:45:21', '2018-12-03 13:45:21'),
(411, 279, 34, 2, '2018-12-03 13:45:25', '2018-12-03 13:45:25'),
(412, 295, 34, 5, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(413, 292, 34, 3, '2018-12-03 13:45:38', '2018-12-03 13:45:38'),
(414, 289, 34, 7, '2018-12-03 13:45:41', '2018-12-03 13:45:41'),
(415, 288, 34, 6, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(416, 403, 34, 9, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(417, 277, 34, 5, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(418, 287, 34, 3, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(419, 410, 34, 5, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(420, 246, 34, 5, '2018-12-03 13:46:40', '2018-12-03 13:46:40'),
(421, 320, 34, 5, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(422, 281, 34, 5, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(423, 282, 34, 9, '2018-12-03 13:47:20', '2018-12-03 13:47:20'),
(424, 304, 34, 2, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(425, 258, 34, 9, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(426, 347, 34, 4, '2018-12-03 13:48:04', '2018-12-03 13:48:04'),
(427, 330, 34, 8, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(428, 416, 34, 6, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(429, 329, 34, 3, '2018-12-03 13:48:37', '2018-12-03 13:48:37'),
(430, 280, 34, 9, '2018-12-03 13:48:37', '2018-12-03 13:48:37'),
(431, 265, 34, 6, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(432, 268, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(433, 278, 34, 9, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(434, 311, 34, 9, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(435, 360, 34, 5, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(436, 339, 34, 9, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(437, 318, 34, 3, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(438, 367, 34, 4, '2018-12-03 13:49:54', '2018-12-03 13:49:54'),
(439, 262, 34, 7, '2018-12-03 13:49:59', '2018-12-03 13:49:59'),
(440, 383, 34, 3, '2018-12-03 13:50:10', '2018-12-03 13:50:10'),
(441, 374, 34, 5, '2018-12-03 13:50:19', '2018-12-03 13:50:19'),
(442, 389, 34, 8, '2018-12-03 13:50:55', '2018-12-03 13:50:55'),
(443, 356, 34, 5, '2018-12-03 13:50:55', '2018-12-03 13:50:55'),
(444, 299, 34, 5, '2018-12-03 13:50:56', '2018-12-03 13:50:56'),
(445, 391, 34, 8, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(446, 376, 34, 8, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(447, 399, 34, 5, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(448, 354, 34, 7, '2018-12-03 13:51:33', '2018-12-03 13:51:33'),
(449, 253, 34, 7, '2018-12-03 13:51:36', '2018-12-03 13:51:36'),
(450, 380, 34, 3, '2018-12-03 13:51:54', '2018-12-03 13:51:54'),
(451, 377, 34, 5, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(452, 263, 34, 2, '2018-12-03 13:52:19', '2018-12-03 13:52:19'),
(453, 404, 34, 11, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(454, 348, 34, 7, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(455, 267, 34, 9, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(456, 172, 34, 9, '2018-12-03 13:53:04', '2018-12-03 13:53:04'),
(457, 408, 34, 7, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(458, 255, 34, 11, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(459, 384, 34, 3, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(460, 363, 34, 6, '2018-12-03 13:53:36', '2018-12-03 13:53:36'),
(461, 271, 34, 8, '2018-12-03 13:53:39', '2018-12-03 13:53:39'),
(462, 362, 34, 7, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(463, 368, 34, 5, '2018-12-03 13:54:08', '2018-12-03 13:54:08'),
(464, 392, 34, 11, '2018-12-03 13:54:13', '2018-12-03 13:54:13'),
(465, 396, 34, 11, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(466, 378, 34, 3, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(467, 264, 34, 7, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(468, 359, 34, 11, '2018-12-03 13:55:01', '2018-12-03 13:55:01'),
(469, 283, 34, 5, '2018-12-03 13:55:05', '2018-12-03 13:55:05'),
(470, 411, 34, 5, '2018-12-03 13:55:12', '2018-12-03 13:55:12'),
(471, 353, 34, 3, '2018-12-03 13:55:14', '2018-12-03 13:55:14'),
(472, 274, 34, 7, '2018-12-03 13:55:18', '2018-12-03 13:55:18'),
(473, 401, 34, 5, '2018-12-03 13:55:19', '2018-12-03 13:55:19'),
(474, 394, 34, 7, '2018-12-03 13:55:19', '2018-12-03 13:55:19'),
(475, 381, 34, 3, '2018-12-03 13:55:29', '2018-12-03 13:55:29'),
(476, 405, 34, 7, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(477, 393, 34, 7, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(478, 398, 34, 3, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(479, 323, 34, 9, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(480, 387, 34, 5, '2018-12-03 13:55:54', '2018-12-03 13:55:54'),
(481, 395, 34, 5, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(482, 385, 34, 5, '2018-12-03 15:56:45', '2018-12-03 13:56:45'),
(483, 355, 34, 7, '2018-12-03 13:56:38', '2018-12-03 13:56:38'),
(484, 402, 34, 7, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(485, 388, 34, 5, '2018-12-03 13:56:49', '2018-12-03 13:56:49'),
(486, 412, 34, 11, '2018-12-03 13:57:07', '2018-12-03 13:57:07'),
(487, 419, 34, 6, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(488, 254, 34, 7, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(489, 259, 34, 7, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(490, 423, 34, 3, '2018-12-03 13:57:34', '2018-12-03 13:57:34'),
(491, 232, 34, 7, '2018-12-03 13:57:44', '2018-12-03 13:57:44'),
(492, 270, 34, 7, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(493, 400, 34, 7, '2018-12-03 13:58:07', '2018-12-03 13:58:07'),
(494, 346, 34, 4, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(495, 260, 34, 5, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(496, 266, 34, 3, '2018-12-03 14:01:59', '2018-12-03 14:01:59'),
(497, 422, 34, 9, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(498, 407, 34, 4, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(499, 361, 34, 7, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(501, 488, 38, 14, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(502, 469, 38, 16, '2018-12-18 08:52:36', '2018-12-18 08:52:36'),
(503, 483, 38, 14, '2018-12-18 08:56:21', '2018-12-18 08:56:21'),
(504, 478, 38, 20, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(505, 466, 38, 16, '2018-12-18 08:57:54', '2018-12-18 08:57:54'),
(506, 438, 38, 16, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(507, 481, 38, 14, '2018-12-18 09:00:05', '2018-12-18 09:00:05'),
(508, 465, 38, 24, '2018-12-18 09:02:04', '2018-12-18 09:02:04'),
(509, 482, 38, 20, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(510, 464, 38, 12, '2018-12-18 09:02:46', '2018-12-18 09:02:46'),
(511, 461, 38, 14, '2018-12-18 09:02:49', '2018-12-18 09:02:49'),
(512, 487, 38, 16, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(513, 446, 38, 20, '2018-12-18 09:03:02', '2018-12-18 09:03:02'),
(514, 480, 38, 16, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(515, 445, 38, 10, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(516, 443, 38, 12, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(517, 457, 38, 14, '2018-12-18 09:05:34', '2018-12-18 09:05:34'),
(518, 489, 38, 24, '2018-12-18 09:05:47', '2018-12-18 09:05:47'),
(519, 430, 38, 14, '2018-12-18 09:05:58', '2018-12-18 09:05:58'),
(520, 463, 38, 4, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(521, 500, 38, 24, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(522, 459, 38, 20, '2018-12-18 09:07:19', '2018-12-18 09:07:19'),
(523, 491, 38, 22, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(524, 460, 38, 20, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(525, 462, 38, 24, '2018-12-18 09:08:09', '2018-12-18 09:08:09'),
(526, 486, 38, 18, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(527, 447, 38, 16, '2018-12-18 09:08:32', '2018-12-18 09:08:32'),
(528, 495, 38, 24, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(529, 499, 38, 20, '2018-12-18 09:08:56', '2018-12-18 09:08:56'),
(530, 437, 38, 20, '2018-12-18 09:09:44', '2018-12-18 09:09:44'),
(531, 439, 38, 16, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(532, 493, 38, 16, '2018-12-18 09:10:43', '2018-12-18 09:10:43'),
(533, 451, 38, 14, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(534, 496, 38, 16, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(535, 479, 38, 20, '2018-12-18 09:11:07', '2018-12-18 09:11:07'),
(536, 474, 38, 18, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(537, 450, 38, 14, '2018-12-18 09:12:03', '2018-12-18 09:12:03'),
(538, 470, 38, 16, '2018-12-18 09:12:42', '2018-12-18 09:12:42'),
(539, 442, 38, 18, '2018-12-18 09:12:43', '2018-12-18 09:12:43'),
(540, 490, 38, 26, '2018-12-18 09:13:14', '2018-12-18 09:13:14'),
(541, 454, 38, 18, '2018-12-18 09:13:29', '2018-12-18 09:13:29'),
(542, 468, 38, 18, '2018-12-18 09:13:52', '2018-12-18 09:13:52'),
(543, 497, 38, 24, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(544, 494, 38, 18, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(545, 431, 38, 20, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(546, 433, 38, 24, '2018-12-18 09:16:53', '2018-12-18 09:16:53'),
(547, 448, 38, 18, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(548, 485, 38, 24, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(549, 456, 38, 18, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(550, 452, 38, 16, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(551, 440, 38, 20, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(552, 498, 38, 18, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(553, 435, 38, 18, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(554, 471, 38, 16, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(555, 472, 38, 16, '2018-12-18 09:19:49', '2018-12-18 09:19:49'),
(556, 475, 38, 10, '2018-12-18 09:20:06', '2018-12-18 09:20:06'),
(557, 424, 38, 18, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(558, 455, 38, 26, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(559, 467, 38, 14, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(560, 426, 38, 14, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(561, 449, 38, 12, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(562, 444, 38, 22, '2018-12-18 09:21:29', '2018-12-18 09:21:29'),
(563, 453, 38, 24, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(564, 477, 38, 24, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(565, 434, 38, 22, '2018-12-18 09:22:53', '2018-12-18 09:22:53'),
(566, 501, 38, 18, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(567, 436, 38, 10, '2018-12-18 09:23:42', '2018-12-18 09:23:42'),
(568, 427, 38, 22, '2018-12-18 09:24:07', '2018-12-18 09:24:07'),
(569, 484, 38, 8, '2018-12-18 09:24:50', '2018-12-18 09:24:50'),
(570, 441, 38, 20, '2018-12-18 09:26:07', '2018-12-18 09:26:07'),
(571, 425, 38, 8, '2018-12-18 09:29:24', '2018-12-18 09:29:24'),
(572, 458, 38, 18, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(573, 432, 38, 18, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(574, 492, 38, 16, '2018-12-18 09:39:38', '2018-12-18 09:39:38'),
(575, 237, 27, 2, '2019-01-02 08:04:34', '2019-01-02 08:04:34'),
(576, 272, 33, 0, '2019-01-02 08:26:09', '2019-01-02 08:26:09'),
(577, 271, 33, 4, '2019-01-05 04:44:02', '2019-01-05 04:44:02'),
(578, 523, 40, 0, '2019-01-21 10:33:22', '2019-01-21 10:33:22'),
(579, 524, 40, 0, '2019-01-21 10:33:22', '2019-01-21 10:33:22'),
(580, 532, 40, 0, '2019-01-21 10:33:49', '2019-01-21 10:33:49'),
(581, 545, 40, 0, '2019-01-21 10:34:05', '2019-01-21 10:34:05'),
(582, 550, 40, 0, '2019-01-21 10:34:16', '2019-01-21 10:34:16'),
(583, 548, 40, 0, '2019-01-21 10:34:20', '2019-01-21 10:34:20'),
(584, 504, 40, 0, '2019-01-21 10:34:34', '2019-01-21 10:34:34'),
(585, 551, 40, 0, '2019-01-21 10:34:40', '2019-01-21 10:34:40'),
(586, 517, 40, 0, '2019-01-21 10:36:36', '2019-01-21 10:36:36'),
(587, 533, 40, 0, '2019-01-21 10:36:42', '2019-01-21 10:36:42'),
(588, 535, 40, 0, '2019-01-21 10:36:45', '2019-01-21 10:36:45'),
(589, 521, 40, 0, '2019-01-21 10:37:07', '2019-01-21 10:37:07'),
(590, 506, 40, 0, '2019-01-21 10:37:12', '2019-01-21 10:37:12'),
(591, 516, 40, 0, '2019-01-21 10:37:25', '2019-01-21 10:37:25'),
(592, 520, 40, 0, '2019-01-21 10:38:18', '2019-01-21 10:38:18'),
(593, 538, 40, 0, '2019-01-21 10:38:42', '2019-01-21 10:38:42'),
(594, 549, 40, 0, '2019-01-21 10:38:58', '2019-01-21 10:38:58'),
(595, 511, 40, 0, '2019-01-21 10:43:57', '2019-01-21 10:43:57'),
(596, 544, 40, 0, '2019-01-21 10:49:30', '2019-01-21 10:49:30'),
(602, 528, 40, 0, '2019-01-21 11:09:03', '2019-01-21 11:09:03'),
(603, 503, 40, 0, '2019-01-21 11:10:41', '2019-01-21 11:10:41'),
(605, 525, 40, 0, '2019-01-21 11:12:45', '2019-01-21 11:12:45'),
(606, 531, 40, 0, '2019-01-21 13:15:11', '2019-01-21 13:15:11'),
(607, 505, 40, 0, '2019-01-21 13:18:23', '2019-01-21 13:18:23'),
(608, 540, 40, 0, '2019-01-21 13:18:54', '2019-01-21 13:18:54'),
(609, 510, 40, 0, '2019-01-21 13:19:58', '2019-01-21 13:19:58'),
(616, 529, 40, 0, '2019-01-21 13:25:15', '2019-01-21 13:25:15'),
(617, 519, 40, 0, '2019-01-21 13:25:33', '2019-01-21 13:25:33'),
(618, 512, 40, 0, '2019-01-21 13:25:41', '2019-01-21 13:25:41'),
(619, 518, 40, 0, '2019-01-21 13:25:46', '2019-01-21 13:25:46'),
(624, 530, 40, 2, '2019-01-21 11:29:34', '2019-01-21 11:29:34'),
(625, 526, 40, 0, '2019-01-21 13:30:02', '2019-01-21 13:30:02'),
(627, 547, 40, 0, '2019-01-21 13:32:22', '2019-01-21 13:32:22'),
(628, 275, 34, 5, '2019-01-22 15:35:29', '2019-01-22 15:35:29'),
(629, 418, 34, 3, '2019-01-22 15:35:29', '2019-01-22 15:35:29'),
(630, 237, 34, 7, '2019-01-22 15:35:29', '2019-01-22 15:35:29'),
(631, 310, 34, 6, '2019-01-22 15:35:30', '2019-01-22 15:35:30'),
(632, 308, 34, 11, '2019-01-22 15:35:30', '2019-01-22 15:35:30'),
(633, 234, 34, 3, '2019-01-22 15:35:30', '2019-01-22 15:35:30'),
(634, 306, 34, 9, '2019-01-22 15:35:30', '2019-01-22 15:35:30'),
(635, 312, 34, 5, '2019-01-22 15:35:30', '2019-01-22 15:35:30'),
(636, 322, 34, 5, '2019-01-22 15:35:31', '2019-01-22 15:35:31'),
(637, 313, 34, 3, '2019-01-22 15:35:31', '2019-01-22 15:35:31'),
(638, 343, 34, 5, '2019-01-22 15:35:31', '2019-01-22 15:35:31'),
(639, 746, 45, 12, '2019-02-28 09:38:45', '2019-02-28 09:38:45'),
(643, 581, 49, 55, '2019-03-06 07:40:34', '2019-03-06 07:40:34'),
(644, 586, 49, 40, '2019-03-06 07:44:21', '2019-03-06 07:44:21'),
(645, 582, 49, 51, '2019-03-06 07:48:14', '2019-03-06 07:48:14'),
(646, 588, 49, 51, '2019-03-06 07:48:30', '2019-03-06 07:48:30'),
(647, 578, 49, 39, '2019-03-06 07:55:10', '2019-03-06 07:55:10'),
(648, 599, 49, 29, '2019-03-06 11:04:54', '2019-03-06 11:04:54'),
(649, 670, 49, 30, '2019-03-06 09:09:10', '2019-03-06 09:09:10'),
(650, 573, 49, 42, '2019-03-11 05:59:16', '2019-03-11 05:59:16'),
(651, 589, 49, 59, '2019-03-11 05:59:17', '2019-03-11 05:59:17'),
(652, 740, 49, 54, '2019-03-11 06:17:31', '2019-03-11 06:17:31'),
(653, 594, 49, 11, '2019-03-11 06:21:40', '2019-03-11 06:21:40'),
(654, 576, 49, 53, '2019-03-11 07:47:52', '2019-03-11 07:47:52'),
(656, 580, 49, 50, '2019-03-11 07:53:00', '2019-03-11 07:53:00'),
(657, 574, 49, 55, '2019-03-11 07:55:05', '2019-03-11 07:55:05'),
(659, 698, 49, 63, '2019-03-13 09:30:35', '2019-03-13 09:30:35'),
(660, 649, 49, 65, '2019-03-13 09:48:31', '2019-03-13 09:48:31'),
(663, 704, 49, 52, '2019-03-14 07:20:11', '2019-03-14 07:20:11'),
(664, 610, 49, 65, '2019-03-14 07:24:33', '2019-03-14 07:24:33'),
(669, 707, 49, 65, '2019-03-14 08:07:02', '2019-03-14 08:07:02'),
(671, 708, 49, 65, '2019-03-14 08:36:54', '2019-03-14 08:36:54'),
(674, 684, 49, 56, '2019-03-14 08:50:09', '2019-03-14 08:50:09'),
(678, 738, 49, 57, '2019-03-14 09:30:25', '2019-03-14 09:30:25'),
(679, 86, 51, 4, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(680, 907, 51, 8, '2019-03-16 06:38:41', '2019-03-16 06:38:41'),
(681, 924, 51, 8, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(682, 897, 51, 4, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(683, 943, 51, 10, '2019-03-16 06:48:47', '2019-03-16 06:48:47'),
(684, 983, 51, 10, '2019-03-16 06:49:59', '2019-03-16 06:49:59'),
(685, 976, 51, 6, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(686, 1024, 51, 10, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(687, 910, 51, 10, '2019-03-16 06:58:04', '2019-03-16 06:58:04'),
(688, 898, 51, 6, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(689, 913, 51, 6, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(690, 1019, 51, 10, '2019-03-16 07:04:13', '2019-03-16 07:04:13'),
(691, 1054, 51, 10, '2019-03-16 07:04:27', '2019-03-16 07:04:27'),
(692, 909, 51, 8, '2019-03-16 07:04:31', '2019-03-16 07:04:31'),
(693, 1018, 51, 3, '2019-03-16 07:05:22', '2019-03-16 07:05:22'),
(694, 922, 51, 7, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(695, 967, 51, 6, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(696, 1048, 51, 6, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(697, 1000, 51, 6, '2019-03-16 07:10:29', '2019-03-16 07:10:29'),
(698, 1059, 51, 1, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(699, 1055, 51, 3, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(700, 1064, 51, 6, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(701, 1047, 51, 6, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(702, 1053, 51, 4, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(703, 950, 51, 10, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(704, 1044, 51, 6, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(705, 1051, 51, 8, '2019-03-16 07:13:15', '2019-03-16 07:13:15'),
(706, 920, 51, 6, '2019-03-16 07:13:24', '2019-03-16 07:13:24'),
(707, 1030, 51, 8, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(708, 984, 51, 6, '2019-03-16 07:13:50', '2019-03-16 07:13:50'),
(709, 1046, 51, 6, '2019-03-16 07:14:21', '2019-03-16 07:14:21'),
(710, 1045, 51, 1, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(711, 952, 51, 8, '2019-03-16 07:15:02', '2019-03-16 07:15:02'),
(712, 1035, 51, 5, '2019-03-16 07:15:05', '2019-03-16 07:15:05'),
(713, 987, 51, 6, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(714, 1036, 51, 5, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(715, 1022, 51, 4, '2019-03-16 07:15:27', '2019-03-16 07:15:27'),
(716, 1068, 51, 1, '2019-03-16 07:15:35', '2019-03-16 07:15:35'),
(717, 1049, 51, 5, '2019-03-16 07:15:36', '2019-03-16 07:15:36'),
(718, 903, 51, 5, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(719, 904, 51, 2, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(720, 901, 51, 8, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(721, 902, 51, 8, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(722, 981, 51, 4, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(723, 990, 51, 6, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(724, 936, 51, 2, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(725, 928, 51, 5, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(726, 982, 51, 8, '2019-03-16 07:18:46', '2019-03-16 07:18:46'),
(727, 931, 51, 4, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(728, 988, 51, 7, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(729, 978, 51, 10, '2019-03-16 07:19:03', '2019-03-16 07:19:03'),
(730, 930, 51, 4, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(731, 977, 51, 6, '2019-03-16 07:19:10', '2019-03-16 07:19:10'),
(732, 917, 51, 4, '2019-03-16 07:19:12', '2019-03-16 07:19:12'),
(733, 957, 51, 2, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(734, 925, 51, 2, '2019-03-16 07:19:19', '2019-03-16 07:19:19'),
(735, 989, 51, 7, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(736, 985, 51, 8, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(737, 1050, 51, 5, '2019-03-16 07:19:54', '2019-03-16 07:19:54'),
(738, 947, 51, 4, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(739, 1067, 51, 1, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(740, 1052, 51, 8, '2019-03-16 07:20:14', '2019-03-16 07:20:14'),
(741, 926, 51, 3, '2019-03-16 07:20:14', '2019-03-16 07:20:14'),
(742, 1027, 51, 6, '2019-03-16 07:20:27', '2019-03-16 07:20:27'),
(743, 927, 51, 4, '2019-03-16 07:20:46', '2019-03-16 07:20:46'),
(744, 948, 51, 4, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(745, 951, 51, 3, '2019-03-16 07:20:52', '2019-03-16 07:20:52'),
(746, 1026, 51, 6, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(747, 1014, 51, 6, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(748, 961, 51, 8, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(749, 1058, 51, 4, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(750, 1062, 51, 6, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(751, 1003, 51, 4, '2019-03-16 07:22:21', '2019-03-16 07:22:21'),
(752, 944, 51, 5, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(753, 1057, 51, 4, '2019-03-16 07:22:57', '2019-03-16 07:22:57'),
(754, 1065, 51, 4, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(755, 937, 51, 6, '2019-03-16 07:23:25', '2019-03-16 07:23:25'),
(756, 958, 51, 10, '2019-03-16 07:23:29', '2019-03-16 07:23:29'),
(757, 1009, 51, 5, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(758, 899, 51, 10, '2019-03-16 07:23:52', '2019-03-16 07:23:52'),
(759, 1029, 51, 4, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(760, 906, 51, 8, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(761, 945, 51, 6, '2019-03-16 07:24:05', '2019-03-16 07:24:05'),
(762, 1039, 51, 8, '2019-03-16 07:24:06', '2019-03-16 07:24:06'),
(763, 968, 51, 3, '2019-03-16 07:24:14', '2019-03-16 07:24:14'),
(764, 956, 51, 8, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(765, 1028, 51, 8, '2019-03-16 07:24:31', '2019-03-16 07:24:31'),
(766, 1041, 51, 2, '2019-03-16 07:24:31', '2019-03-16 07:24:31'),
(767, 1040, 51, 1, '2019-03-16 07:24:37', '2019-03-16 07:24:37'),
(768, 1038, 51, 8, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(769, 919, 51, 1, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(770, 1021, 51, 3, '2019-03-16 07:24:42', '2019-03-16 07:24:42'),
(771, 969, 51, 6, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(772, 939, 51, 4, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(773, 973, 51, 4, '2019-03-16 07:24:53', '2019-03-16 07:24:53'),
(774, 954, 51, 4, '2019-03-16 07:24:56', '2019-03-16 07:24:56'),
(775, 1031, 51, 5, '2019-03-16 07:24:56', '2019-03-16 07:24:56'),
(776, 900, 51, 4, '2019-03-16 07:24:57', '2019-03-16 07:24:57'),
(777, 1061, 51, 6, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(778, 960, 51, 10, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(779, 915, 51, 1, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(780, 914, 51, 4, '2019-03-16 07:25:30', '2019-03-16 07:25:30'),
(781, 923, 51, 2, '2019-03-16 07:25:50', '2019-03-16 07:25:50'),
(782, 1032, 51, 4, '2019-03-16 07:25:57', '2019-03-16 07:25:57'),
(783, 974, 51, 2, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(784, 896, 51, 1, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(785, 233, 51, 4, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(786, 975, 51, 10, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(787, 1037, 51, 4, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(788, 934, 51, 4, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(789, 971, 51, 6, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(790, 1023, 51, 1, '2019-03-16 09:27:12', '2019-03-16 07:27:12'),
(791, 921, 51, 6, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(792, 964, 51, 2, '2019-03-16 07:27:26', '2019-03-16 07:27:26'),
(793, 965, 51, 8, '2019-03-16 07:27:45', '2019-03-16 07:27:45'),
(794, 918, 51, 5, '2019-03-16 07:27:46', '2019-03-16 07:27:46'),
(795, 959, 51, 10, '2019-03-16 07:27:52', '2019-03-16 07:27:52'),
(796, 935, 51, 4, '2019-03-16 07:28:34', '2019-03-16 07:28:34'),
(797, 929, 51, 2, '2019-03-16 07:29:40', '2019-03-16 07:29:40'),
(798, 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(799, 953, 51, 8, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(800, 1074, 51, 2, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(801, 908, 51, 4, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(802, 905, 51, 4, '2019-03-16 07:31:14', '2019-03-16 07:31:14'),
(803, 912, 51, 6, '2019-03-16 07:31:26', '2019-03-16 07:31:26'),
(804, 916, 51, 6, '2019-03-16 07:31:33', '2019-03-16 07:31:33'),
(805, 949, 51, 10, '2019-03-16 07:31:35', '2019-03-16 07:31:35'),
(806, 941, 51, 2, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(807, 938, 51, 3, '2019-03-16 07:31:58', '2019-03-16 07:31:58'),
(808, 933, 51, 4, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(809, 942, 51, 4, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(810, 963, 51, 9, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(811, 940, 51, 10, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(812, 955, 51, 6, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(813, 1006, 51, 4, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(814, 979, 51, 1, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(815, 1002, 51, 4, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(816, 242, 51, 3, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(817, 997, 51, 1, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(818, 966, 51, 6, '2019-03-16 07:37:08', '2019-03-16 07:37:08'),
(819, 994, 51, 6, '2019-03-16 07:37:13', '2019-03-16 07:37:13'),
(820, 993, 51, 2, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(821, 1016, 51, 6, '2019-03-16 07:37:31', '2019-03-16 07:37:31'),
(822, 972, 51, 8, '2019-03-16 09:40:10', '2019-03-16 07:40:10'),
(823, 1072, 51, 4, '2019-03-16 07:39:17', '2019-03-16 07:39:17'),
(824, 980, 51, 4, '2019-03-16 07:39:52', '2019-03-16 07:39:52'),
(825, 1013, 51, 5, '2019-03-16 07:40:09', '2019-03-16 07:40:09'),
(826, 1077, 51, 6, '2019-03-16 07:40:54', '2019-03-16 07:40:54'),
(827, 1008, 51, 3, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(828, 1070, 51, 4, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(829, 1005, 51, 4, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(830, 1079, 51, 3, '2019-03-16 07:41:39', '2019-03-16 07:41:39'),
(831, 1069, 51, 4, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(832, 970, 51, 3, '2019-03-16 07:43:39', '2019-03-16 07:43:39'),
(833, 1001, 51, 4, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(834, 1073, 51, 2, '2019-03-16 07:46:38', '2019-03-16 07:46:38'),
(835, 1071, 51, 5, '2019-03-16 07:47:30', '2019-03-16 07:47:30'),
(836, 1075, 51, 3, '2019-03-16 08:05:47', '2019-03-16 08:05:47'),
(837, 1078, 51, 6, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(838, 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-16 08:10:53'),
(839, 610, 50, 65, '2019-03-20 07:52:37', '2019-03-20 07:52:37'),
(840, 670, 50, 56, '2019-03-20 08:10:33', '2019-03-20 08:10:33'),
(841, 738, 50, 56, '2019-03-20 08:20:25', '2019-03-20 08:20:25'),
(842, 698, 50, 53, '2019-03-20 09:32:02', '2019-03-20 09:32:02'),
(844, 649, 50, 64, '2019-03-20 09:44:43', '2019-03-20 09:44:43'),
(845, 704, 50, 66, '2019-03-20 10:05:02', '2019-03-20 10:05:02'),
(846, 648, 50, 55, '2019-03-21 08:51:11', '2019-03-21 08:51:11'),
(847, 741, 50, 58, '2019-03-21 09:17:40', '2019-03-21 09:17:40'),
(848, 588, 50, 56, '2019-03-21 09:49:22', '2019-03-21 09:49:22'),
(849, 582, 50, 56, '2019-03-21 09:49:56', '2019-03-21 09:49:56'),
(850, 574, 50, 58, '2019-03-24 09:00:18', '2019-03-24 09:00:18'),
(851, 573, 50, 64, '2019-03-24 09:02:41', '2019-03-24 09:02:41'),
(852, 581, 50, 56, '2019-03-24 09:11:29', '2019-03-24 09:11:29'),
(853, 580, 50, 66, '2019-03-24 09:16:08', '2019-03-24 09:16:08'),
(854, 707, 50, 52, '2019-03-25 09:10:45', '2019-03-25 09:10:45'),
(855, 708, 50, 74, '2019-03-25 09:15:40', '2019-03-25 09:15:40'),
(856, 740, 50, 63, '2019-03-25 09:25:30', '2019-03-25 09:25:30'),
(857, 576, 50, 67, '2019-03-27 07:58:16', '2019-03-27 07:58:16'),
(858, 589, 50, 66, '2019-03-27 08:06:29', '2019-03-27 08:06:29'),
(859, 684, 50, 66, '2019-03-27 08:15:09', '2019-03-27 08:15:09'),
(860, 424, 56, 0, '2019-04-08 19:04:23', '2019-04-08 19:04:23'),
(861, 1081, 58, 17, '2019-04-09 04:41:08', '2019-04-09 04:41:08'),
(862, 1099, 58, 15, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(863, 1096, 58, 19, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(864, 1087, 58, 20, '2019-04-09 04:48:01', '2019-04-09 04:48:01'),
(865, 1094, 58, 15, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(866, 1086, 58, 17, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(867, 1083, 58, 21, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(868, 1090, 58, 16, '2019-04-09 04:54:08', '2019-04-09 04:54:08'),
(869, 1088, 58, 11, '2019-04-09 04:54:39', '2019-04-09 04:54:39'),
(870, 1091, 58, 18, '2019-04-09 04:55:14', '2019-04-09 04:55:14'),
(871, 1098, 58, 13, '2019-04-09 04:56:16', '2019-04-09 04:56:16'),
(872, 1089, 58, 19, '2019-04-09 04:57:23', '2019-04-09 04:57:23'),
(873, 1093, 58, 16, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(874, 1095, 58, 17, '2019-04-09 04:58:10', '2019-04-09 04:58:10'),
(875, 1084, 58, 14, '2019-04-09 04:59:53', '2019-04-09 04:59:53'),
(876, 1085, 58, 20, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(877, 1082, 58, 19, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(878, 1100, 58, 5, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(879, 1210, 34, 0, '2019-04-22 14:47:35', '2019-04-22 14:47:35'),
(881, 1189, 65, 20, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(883, 1198, 65, 16, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(884, 1194, 65, 12, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(885, 1191, 65, 20, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(886, 1219, 65, 18, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(888, 1195, 65, 14, '2019-04-22 15:02:22', '2019-04-22 15:02:22'),
(889, 1224, 65, 12, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(890, 1193, 65, 18, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(891, 1220, 65, 16, '2019-04-22 15:03:34', '2019-04-22 15:03:34'),
(893, 1217, 65, 14, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(894, 1221, 65, 18, '2019-04-22 15:04:24', '2019-04-22 15:04:24'),
(895, 1223, 65, 18, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(896, 1201, 65, 18, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(897, 1216, 65, 10, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(898, 1204, 65, 0, '2019-04-22 17:05:22', '2019-04-22 17:05:22'),
(899, 1196, 65, 16, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(900, 1206, 65, 16, '2019-04-22 15:06:01', '2019-04-22 15:06:01'),
(901, 1222, 65, 14, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(902, 1188, 65, 18, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(903, 1202, 65, 14, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(904, 1212, 65, 18, '2019-04-22 15:06:34', '2019-04-22 15:06:34'),
(905, 1190, 65, 18, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(906, 1218, 65, 18, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(907, 1208, 65, 18, '2019-04-22 15:07:42', '2019-04-22 15:07:42'),
(908, 1203, 65, 18, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(909, 1209, 65, 18, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(910, 1200, 65, 16, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(911, 1214, 65, 18, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(912, 1197, 65, 16, '2019-04-22 15:08:49', '2019-04-22 15:08:49'),
(913, 1210, 65, 18, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(914, 1211, 65, 16, '2019-04-22 15:09:04', '2019-04-22 15:09:04'),
(915, 1185, 65, 10, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(916, 1215, 65, 16, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(917, 1199, 65, 18, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(918, 1225, 65, 12, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(919, 1187, 65, 18, '2019-04-22 15:11:28', '2019-04-22 15:11:28'),
(920, 1205, 65, 10, '2019-04-22 15:11:49', '2019-04-22 15:11:49'),
(921, 1213, 65, 16, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(922, 1192, 65, 18, '2019-04-22 15:14:48', '2019-04-22 15:14:48'),
(923, 214, 67, 8, '2019-04-24 12:50:50', '2019-04-24 12:50:50'),
(924, 408, 67, 8, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(925, 386, 67, 6, '2019-04-24 12:56:23', '2019-04-24 12:56:23'),
(926, 321, 67, 6, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(927, 309, 67, 8, '2019-04-24 12:59:57', '2019-04-24 12:59:57'),
(928, 340, 67, 4, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(929, 194, 67, 8, '2019-04-24 13:06:06', '2019-04-24 13:06:06'),
(930, 286, 67, 10, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(931, 318, 67, 4, '2019-04-24 13:24:42', '2019-04-24 13:24:42'),
(932, 320, 67, 4, '2019-04-24 13:26:57', '2019-04-24 13:26:57'),
(933, 205, 67, 8, '2019-04-24 13:30:52', '2019-04-24 13:30:52'),
(934, 240, 67, 6, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(935, 338, 67, 6, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(936, 238, 67, 8, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(937, 134, 67, 8, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(938, 100, 67, 4, '2019-04-24 13:34:25', '2019-04-24 13:34:25'),
(939, 109, 67, 6, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(940, 95, 67, 6, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(941, 104, 67, 6, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(942, 135, 67, 4, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(943, 190, 67, 4, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(944, 159, 67, 4, '2019-04-24 14:02:53', '2019-04-24 14:02:53'),
(945, 406, 67, 8, '2019-04-24 16:03:49', '2019-04-24 14:03:49'),
(946, 415, 67, 4, '2019-04-24 14:04:44', '2019-04-24 14:04:44'),
(947, 343, 67, 8, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(948, 93, 67, 6, '2019-04-24 16:06:43', '2019-04-24 14:06:43');
INSERT INTO `student_exams` (`id`, `student_id`, `exam_id`, `result`, `created_at`, `updated_at`) VALUES
(949, 118, 67, 4, '2019-04-24 16:07:47', '2019-04-24 14:07:47'),
(950, 1226, 67, 8, '2019-04-24 14:17:00', '2019-04-24 14:17:00'),
(977, 1021, 71, 4, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(983, 909, 70, 0, '2019-05-13 08:13:52', '2019-05-13 08:13:52'),
(986, 1081, 70, 6, '2019-05-13 06:20:04', '2019-05-13 06:20:04'),
(988, 903, 70, 4, '2019-05-13 08:45:07', '2019-05-13 06:45:07'),
(989, 983, 70, 10, '2019-05-13 08:48:10', '2019-05-13 06:48:10'),
(990, 950, 70, 10, '2019-05-13 09:15:59', '2019-05-13 07:15:59'),
(991, 987, 70, 8, '2019-05-13 08:44:09', '2019-05-13 06:44:09'),
(992, 955, 70, 12, '2019-05-13 09:14:39', '2019-05-13 07:14:39'),
(993, 941, 70, 10, '2019-05-13 09:31:35', '2019-05-13 07:31:35'),
(994, 914, 70, 6, '2019-05-13 09:05:09', '2019-05-13 07:05:09'),
(995, 944, 70, 10, '2019-05-13 09:06:08', '2019-05-13 07:06:08'),
(997, 1019, 70, 14, '2019-05-13 09:05:42', '2019-05-13 07:05:42'),
(998, 1035, 70, 4, '2019-05-13 09:10:07', '2019-05-13 07:10:07'),
(999, 975, 70, 14, '2019-05-13 06:20:05', '2019-05-13 06:20:05'),
(1000, 910, 70, 10, '2019-05-13 08:48:30', '2019-05-13 06:48:30'),
(1001, 1000, 70, 4, '2019-05-13 09:20:43', '2019-05-13 07:20:43'),
(1002, 1030, 70, 4, '2019-05-13 09:04:58', '2019-05-13 07:04:58'),
(1005, 924, 70, 0, '2019-05-13 08:33:39', '2019-05-13 08:33:39'),
(1007, 947, 70, 0, '2019-05-13 08:40:26', '2019-05-13 08:40:26'),
(1008, 912, 70, 0, '2019-05-13 08:45:07', '2019-05-13 08:45:07'),
(1010, 897, 70, 2, '2019-05-13 08:52:33', '2019-05-13 08:52:33'),
(1011, 907, 70, 0, '2019-05-13 08:57:11', '2019-05-13 08:57:11'),
(1012, 984, 70, 8, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(1013, 1018, 70, 4, '2019-05-13 07:03:12', '2019-05-13 07:03:12'),
(1014, 913, 70, 8, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(1015, 981, 70, 10, '2019-05-13 07:04:17', '2019-05-13 07:04:17'),
(1016, 898, 70, 2, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(1017, 1024, 70, 14, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(1018, 943, 70, 12, '2019-05-13 07:04:40', '2019-05-13 07:04:40'),
(1020, 926, 70, 0, '2019-05-13 09:07:44', '2019-05-13 09:07:44'),
(1021, 922, 70, 0, '2019-05-13 09:07:48', '2019-05-13 09:07:48'),
(1022, 1036, 70, 6, '2019-05-13 07:09:14', '2019-05-13 07:09:14'),
(1023, 990, 70, 8, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(1024, 1072, 70, 0, '2019-05-13 07:10:26', '2019-05-13 07:10:26'),
(1025, 902, 70, 6, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(1026, 927, 70, 0, '2019-05-13 09:11:31', '2019-05-13 09:11:31'),
(1027, 921, 70, 0, '2019-05-13 09:12:09', '2019-05-13 09:12:09'),
(1028, 1041, 70, 2, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(1029, 928, 70, 0, '2019-05-13 09:12:43', '2019-05-13 09:12:43'),
(1030, 954, 70, 4, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(1031, 1038, 70, 4, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(1032, 1026, 70, 4, '2019-05-13 07:13:42', '2019-05-13 07:13:42'),
(1033, 976, 70, 2, '2019-05-13 09:14:34', '2019-05-13 09:14:34'),
(1034, 1039, 70, 4, '2019-05-13 07:16:00', '2019-05-13 07:16:00'),
(1035, 908, 70, 8, '2019-05-13 07:16:01', '2019-05-13 07:16:01'),
(1036, 952, 70, 10, '2019-05-13 07:16:08', '2019-05-13 07:16:08'),
(1037, 1031, 70, 4, '2019-05-13 07:16:24', '2019-05-13 07:16:24'),
(1038, 1029, 70, 6, '2019-05-13 07:16:42', '2019-05-13 07:16:42'),
(1039, 967, 70, 2, '2019-05-13 07:17:10', '2019-05-13 07:17:10'),
(1040, 1028, 70, 2, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(1041, 900, 70, 4, '2019-05-13 07:17:25', '2019-05-13 07:17:25'),
(1042, 1037, 70, 10, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(1043, 916, 70, 4, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(1044, 948, 70, 8, '2019-05-13 07:18:40', '2019-05-13 07:18:40'),
(1045, 1009, 70, 8, '2019-05-13 09:19:56', '2019-05-13 07:19:56'),
(1046, 1021, 70, 2, '2019-05-13 09:19:42', '2019-05-13 07:19:42'),
(1047, 937, 70, 10, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(1048, 935, 70, 6, '2019-05-13 07:19:58', '2019-05-13 07:19:58'),
(1049, 953, 70, 6, '2019-05-13 09:21:24', '2019-05-13 07:21:24'),
(1050, 934, 70, 0, '2019-05-13 09:20:32', '2019-05-13 09:20:32'),
(1051, 1023, 70, 6, '2019-05-13 07:20:47', '2019-05-13 07:20:47'),
(1052, 1075, 70, 4, '2019-05-13 07:20:47', '2019-05-13 07:20:47'),
(1053, 968, 70, 2, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(1054, 1032, 70, 0, '2019-05-13 09:21:58', '2019-05-13 09:21:58'),
(1055, 936, 70, 8, '2019-05-13 07:23:27', '2019-05-13 07:23:27'),
(1056, 940, 70, 4, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(1057, 1074, 70, 4, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(1058, 1012, 70, 14, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(1059, 945, 70, 8, '2019-05-13 07:24:11', '2019-05-13 07:24:11'),
(1060, 949, 70, 10, '2019-05-13 11:28:17', '2019-05-13 09:28:17'),
(1061, 1068, 70, 8, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(1062, 1054, 70, 8, '2019-05-13 07:25:01', '2019-05-13 07:25:01'),
(1063, 951, 70, 2, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(1064, 939, 70, 2, '2019-05-13 07:26:07', '2019-05-13 07:26:07'),
(1065, 1057, 70, 6, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(1066, 1049, 70, 6, '2019-05-13 07:27:41', '2019-05-13 07:27:41'),
(1067, 242, 70, 6, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(1068, 1027, 70, 4, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(1069, 1048, 70, 8, '2019-05-13 07:30:29', '2019-05-13 07:30:29'),
(1070, 1070, 70, 10, '2019-05-13 07:30:49', '2019-05-13 07:30:49'),
(1071, 1040, 70, 10, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(1072, 1059, 70, 2, '2019-05-13 07:32:55', '2019-05-13 07:32:55'),
(1073, 956, 70, 4, '2019-05-13 07:33:25', '2019-05-13 07:33:25'),
(1074, 1065, 70, 12, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(1075, 1022, 70, 6, '2019-05-13 09:36:27', '2019-05-13 07:36:27'),
(1076, 989, 70, 4, '2019-05-13 07:34:32', '2019-05-13 07:34:32'),
(1077, 957, 70, 2, '2019-05-13 07:35:08', '2019-05-13 07:35:08'),
(1078, 1047, 70, 6, '2019-05-13 07:35:20', '2019-05-13 07:35:20'),
(1079, 977, 70, 8, '2019-05-13 07:35:22', '2019-05-13 07:35:22'),
(1080, 918, 70, 14, '2019-05-13 07:35:29', '2019-05-13 07:35:29'),
(1081, 979, 70, 8, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(1082, 938, 70, 4, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(1083, 942, 70, 2, '2019-05-13 09:37:41', '2019-05-13 07:37:41'),
(1084, 974, 70, 6, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(1085, 978, 70, 8, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(1086, 973, 70, 2, '2019-05-13 07:38:43', '2019-05-13 07:38:43'),
(1087, 906, 70, 10, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(1088, 1066, 70, 12, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(1089, 982, 70, 12, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(1090, 1067, 70, 4, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(1091, 896, 70, 6, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(1092, 1062, 70, 4, '2019-05-13 07:41:41', '2019-05-13 07:41:41'),
(1093, 1051, 70, 12, '2019-05-13 07:42:21', '2019-05-13 07:42:21'),
(1094, 988, 70, 6, '2019-05-13 07:42:21', '2019-05-13 07:42:21'),
(1095, 901, 70, 8, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(1096, 1055, 70, 4, '2019-05-13 07:43:17', '2019-05-13 07:43:17'),
(1097, 966, 70, 10, '2019-05-13 07:43:31', '2019-05-13 07:43:31'),
(1098, 1045, 70, 8, '2019-05-13 07:43:37', '2019-05-13 07:43:37'),
(1099, 1071, 70, 8, '2019-05-13 07:43:56', '2019-05-13 07:43:56'),
(1100, 1044, 70, 10, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(1101, 1052, 70, 6, '2019-05-13 07:44:17', '2019-05-13 07:44:17'),
(1102, 969, 70, 8, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(1103, 233, 70, 12, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(1104, 972, 70, 6, '2019-05-13 07:45:24', '2019-05-13 07:45:24'),
(1105, 1064, 70, 12, '2019-05-13 07:45:28', '2019-05-13 07:45:28'),
(1106, 1046, 70, 12, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(1107, 1058, 70, 4, '2019-05-13 07:46:08', '2019-05-13 07:46:08'),
(1108, 1050, 70, 2, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(1109, 1014, 70, 6, '2019-05-13 07:47:09', '2019-05-13 07:47:09'),
(1110, 920, 70, 2, '2019-05-13 07:48:44', '2019-05-13 07:48:44'),
(1111, 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(1112, 971, 70, 2, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(1113, 1077, 70, 2, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(1114, 980, 70, 4, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(1115, 1061, 70, 2, '2019-05-13 07:52:57', '2019-05-13 07:52:57'),
(1116, 1016, 70, 4, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(1117, 970, 70, 6, '2019-05-13 07:54:26', '2019-05-13 07:54:26'),
(1118, 993, 70, 8, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(1119, 959, 70, 10, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(1120, 917, 70, 2, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(1121, 1005, 70, 10, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(1122, 985, 70, 6, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(1123, 1073, 70, 12, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(1124, 997, 70, 4, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(1125, 1078, 70, 2, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(1126, 994, 70, 4, '2019-05-13 08:00:09', '2019-05-13 08:00:09'),
(1127, 929, 70, 2, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(1128, 905, 70, 10, '2019-05-13 08:02:39', '2019-05-13 08:02:39'),
(1129, 919, 70, 4, '2019-05-13 08:04:47', '2019-05-13 08:04:47'),
(1130, 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(1131, 899, 70, 8, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(1132, 963, 70, 2, '2019-05-13 08:09:34', '2019-05-13 08:09:34'),
(1133, 1008, 70, 6, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(1134, 1001, 70, 2, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(1135, 1006, 70, 4, '2019-05-13 08:12:56', '2019-05-13 08:12:56'),
(1136, 1013, 70, 6, '2019-05-13 08:17:04', '2019-05-13 08:17:04'),
(1137, 958, 70, 6, '2019-05-13 08:17:08', '2019-05-13 08:17:08'),
(1138, 1072, 72, 6, '2019-05-13 08:48:34', '2019-05-13 08:48:34'),
(1139, 909, 72, 14, '2019-05-13 08:52:47', '2019-05-13 08:52:47'),
(1140, 907, 72, 14, '2019-05-13 08:53:52', '2019-05-13 08:53:52'),
(1141, 897, 72, 14, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(1142, 924, 72, 14, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(1143, 976, 72, 8, '2019-05-13 08:59:44', '2019-05-13 08:59:44'),
(1144, 1002, 72, 6, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(1145, 912, 72, 14, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(1146, 834, 72, 10, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(1147, 843, 72, 12, '2019-05-13 09:07:31', '2019-05-13 09:07:31'),
(1148, 829, 72, 12, '2019-05-13 09:09:02', '2019-05-13 09:09:02'),
(1149, 822, 72, 12, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(1150, 836, 72, 10, '2019-05-13 09:12:52', '2019-05-13 09:12:52'),
(1151, 842, 72, 10, '2019-05-13 09:12:58', '2019-05-13 09:12:58'),
(1152, 947, 72, 10, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(1153, 840, 72, 8, '2019-05-13 09:14:22', '2019-05-13 09:14:22'),
(1154, 931, 72, 8, '2019-05-13 09:15:48', '2019-05-13 09:15:48'),
(1155, 835, 72, 10, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(1156, 806, 72, 10, '2019-05-13 11:18:22', '2019-05-13 09:18:22'),
(1157, 961, 72, 12, '2019-05-13 09:16:25', '2019-05-13 09:16:25'),
(1158, 748, 72, 6, '2019-05-13 11:18:22', '2019-05-13 09:18:22'),
(1159, 810, 72, 10, '2019-05-13 11:18:27', '2019-05-13 09:18:27'),
(1160, 809, 72, 8, '2019-05-13 11:17:04', '2019-05-13 09:17:04'),
(1161, 821, 72, 10, '2019-05-13 11:17:29', '2019-05-13 09:17:29'),
(1162, 861, 72, 10, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(1163, 804, 72, 2, '2019-05-13 09:17:54', '2019-05-13 09:17:54'),
(1164, 808, 72, 6, '2019-05-13 11:18:08', '2019-05-13 09:18:08'),
(1165, 807, 72, 8, '2019-05-13 11:19:23', '2019-05-13 09:19:23'),
(1166, 799, 72, 10, '2019-05-13 11:18:53', '2019-05-13 09:18:53'),
(1167, 818, 72, 4, '2019-05-13 09:18:44', '2019-05-13 09:18:44'),
(1168, 819, 72, 4, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(1169, 814, 72, 2, '2019-05-13 09:19:10', '2019-05-13 09:19:10'),
(1170, 802, 72, 8, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(1171, 765, 72, 8, '2019-05-13 11:21:13', '2019-05-13 09:21:13'),
(1172, 761, 70, 4, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(1173, 812, 72, 0, '2019-05-13 09:19:26', '2019-05-13 09:19:26'),
(1174, 800, 72, 6, '2019-05-13 11:22:04', '2019-05-13 09:22:04'),
(1175, 797, 72, 10, '2019-05-13 11:20:12', '2019-05-13 09:20:12'),
(1176, 796, 72, 6, '2019-05-13 09:19:49', '2019-05-13 09:19:49'),
(1177, 801, 72, 4, '2019-05-13 11:20:53', '2019-05-13 09:20:53'),
(1178, 803, 72, 4, '2019-05-13 09:19:52', '2019-05-13 09:19:52'),
(1179, 762, 72, 8, '2019-05-13 11:20:59', '2019-05-13 09:20:59'),
(1180, 833, 72, 6, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(1181, 815, 72, 10, '2019-05-13 11:20:51', '2019-05-13 09:20:51'),
(1182, 756, 72, 6, '2019-05-13 11:21:01', '2019-05-13 09:21:01'),
(1183, 763, 72, 10, '2019-05-13 11:21:19', '2019-05-13 09:21:19'),
(1184, 759, 72, 6, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(1185, 751, 72, 6, '2019-05-13 11:21:14', '2019-05-13 09:21:14'),
(1186, 766, 72, 10, '2019-05-13 11:24:36', '2019-05-13 09:24:36'),
(1187, 764, 72, 8, '2019-05-13 11:24:50', '2019-05-13 09:24:50'),
(1188, 754, 72, 6, '2019-05-13 11:22:38', '2019-05-13 09:22:38'),
(1189, 816, 72, 4, '2019-05-13 11:22:03', '2019-05-13 09:22:03'),
(1190, 820, 72, 10, '2019-05-13 09:21:46', '2019-05-13 09:21:46'),
(1191, 753, 72, 8, '2019-05-13 09:21:48', '2019-05-13 09:21:48'),
(1192, 844, 72, 10, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(1193, 862, 72, 8, '2019-05-13 11:27:58', '2019-05-13 09:27:58'),
(1196, 747, 72, 4, '2019-05-13 09:23:53', '2019-05-13 09:23:53'),
(1197, 755, 72, 6, '2019-05-13 09:24:24', '2019-05-13 09:24:24'),
(1198, 865, 72, 8, '2019-05-13 11:26:56', '2019-05-13 09:26:56'),
(1199, 853, 72, 2, '2019-05-13 11:27:08', '2019-05-13 09:27:08'),
(1200, 873, 72, 12, '2019-05-13 09:25:55', '2019-05-13 09:25:55'),
(1201, 750, 72, 6, '2019-05-13 09:26:26', '2019-05-13 09:26:26'),
(1202, 869, 72, 10, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(1203, 825, 72, 12, '2019-05-13 09:27:11', '2019-05-13 09:27:11'),
(1204, 854, 72, 8, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(1205, 860, 72, 2, '2019-05-13 09:27:41', '2019-05-13 09:27:41'),
(1206, 922, 72, 8, '2019-05-13 09:27:50', '2019-05-13 09:27:50'),
(1207, 749, 72, 8, '2019-05-13 09:27:53', '2019-05-13 09:27:53'),
(1208, 904, 70, 8, '2019-05-13 09:28:16', '2019-05-13 09:28:16'),
(1209, 1002, 70, 2, '2019-05-13 09:28:17', '2019-05-13 09:28:17'),
(1210, 925, 70, 4, '2019-05-13 09:28:19', '2019-05-13 09:28:19'),
(1211, 933, 70, 2, '2019-05-13 09:28:19', '2019-05-13 09:28:19'),
(1212, 965, 70, 0, '2019-05-13 09:28:19', '2019-05-13 09:28:19'),
(1213, 960, 70, 6, '2019-05-13 09:28:19', '2019-05-13 09:28:19'),
(1214, 805, 72, 6, '2019-05-13 09:30:13', '2019-05-13 09:30:13'),
(1215, 928, 72, 8, '2019-05-13 09:30:47', '2019-05-13 09:30:47'),
(1216, 826, 72, 8, '2019-05-13 11:31:21', '2019-05-13 09:31:21'),
(1217, 925, 72, 6, '2019-05-13 09:31:02', '2019-05-13 09:31:02'),
(1218, 934, 72, 12, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(1219, 880, 72, 14, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(1220, 867, 72, 8, '2019-05-13 09:31:49', '2019-05-13 09:31:49'),
(1221, 867, 72, 8, '2019-05-13 09:31:49', '2019-05-13 09:31:49'),
(1222, 839, 72, 12, '2019-05-13 09:32:00', '2019-05-13 09:32:00'),
(1223, 888, 72, 14, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(1224, 871, 72, 6, '2019-05-13 09:33:40', '2019-05-13 09:33:40'),
(1225, 757, 72, 10, '2019-05-13 09:33:43', '2019-05-13 09:33:43'),
(1226, 886, 72, 4, '2019-05-13 09:33:44', '2019-05-13 09:33:44'),
(1227, 878, 72, 6, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(1228, 847, 72, 12, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(1229, 1032, 72, 6, '2019-05-13 09:34:24', '2019-05-13 09:34:24'),
(1230, 828, 72, 10, '2019-05-13 11:34:39', '2019-05-13 09:34:39'),
(1231, 882, 72, 8, '2019-05-13 09:34:46', '2019-05-13 09:34:46'),
(1232, 850, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:12'),
(1233, 872, 72, 0, '2019-05-13 09:35:25', '2019-05-13 09:35:25'),
(1234, 927, 72, 10, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(1235, 823, 72, 6, '2019-05-13 09:35:47', '2019-05-13 09:35:47'),
(1236, 889, 72, 10, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(1237, 874, 72, 10, '2019-05-13 09:36:31', '2019-05-13 09:36:31'),
(1238, 851, 72, 2, '2019-05-13 09:36:42', '2019-05-13 09:36:42'),
(1239, 767, 72, 6, '2019-05-13 11:37:15', '2019-05-13 09:37:15'),
(1240, 890, 72, 8, '2019-05-13 09:36:55', '2019-05-13 09:36:55'),
(1241, 887, 72, 8, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(1242, 876, 72, 2, '2019-05-13 09:37:01', '2019-05-13 09:37:01'),
(1243, 859, 72, 10, '2019-05-13 09:37:03', '2019-05-13 09:37:03'),
(1244, 879, 72, 6, '2019-05-13 09:37:10', '2019-05-13 09:37:10'),
(1245, 881, 72, 8, '2019-05-13 09:37:17', '2019-05-13 09:37:17'),
(1246, 849, 72, 2, '2019-05-13 09:37:24', '2019-05-13 09:37:24'),
(1247, 852, 72, 2, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(1248, 832, 72, 2, '2019-05-13 09:38:00', '2019-05-13 09:38:00'),
(1249, 926, 72, 8, '2019-05-13 09:38:11', '2019-05-13 09:38:11'),
(1250, 877, 72, 8, '2019-05-13 09:38:16', '2019-05-13 09:38:16'),
(1251, 868, 72, 0, '2019-05-13 09:38:48', '2019-05-13 09:38:48'),
(1252, 790, 72, 14, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(1253, 884, 72, 10, '2019-05-13 09:41:25', '2019-05-13 09:41:25'),
(1254, 771, 72, 8, '2019-05-13 09:42:08', '2019-05-13 09:42:08'),
(1255, 870, 72, 6, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(1256, 773, 72, 8, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(1257, 788, 72, 6, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(1258, 921, 72, 12, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(1259, 923, 72, 8, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(1260, 781, 72, 4, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(1261, 782, 72, 10, '2019-05-13 09:45:04', '2019-05-13 09:45:04'),
(1262, 837, 72, 12, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(1263, 885, 72, 12, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(1264, 1053, 72, 8, '2019-05-13 09:46:01', '2019-05-13 09:46:01'),
(1265, 777, 72, 6, '2019-05-13 11:47:24', '2019-05-13 09:47:24'),
(1266, 857, 72, 4, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(1267, 785, 72, 6, '2019-05-13 11:47:17', '2019-05-13 09:47:17'),
(1268, 776, 72, 6, '2019-05-13 09:47:14', '2019-05-13 09:47:14'),
(1269, 831, 72, 8, '2019-05-13 11:50:01', '2019-05-13 09:50:01'),
(1270, 784, 72, 12, '2019-05-13 09:47:17', '2019-05-13 09:47:17'),
(1271, 783, 72, 6, '2019-05-13 11:48:26', '2019-05-13 09:48:26'),
(1272, 787, 72, 8, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(1273, 858, 72, 6, '2019-05-13 09:48:06', '2019-05-13 09:48:06'),
(1274, 789, 72, 14, '2019-05-13 11:51:35', '2019-05-13 09:51:35'),
(1275, 1229, 72, 8, '2019-05-13 09:48:17', '2019-05-13 09:48:17'),
(1276, 779, 72, 6, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(1277, 770, 72, 12, '2019-05-13 11:49:30', '2019-05-13 09:49:30'),
(1278, 769, 72, 6, '2019-05-13 11:52:03', '2019-05-13 09:52:03'),
(1279, 792, 72, 8, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(1280, 795, 72, 6, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(1281, 1230, 72, 6, '2019-05-13 09:49:16', '2019-05-13 09:49:16'),
(1282, 791, 72, 6, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(1283, 778, 72, 8, '2019-05-13 09:49:43', '2019-05-13 09:49:43'),
(1284, 794, 72, 12, '2019-05-13 09:50:14', '2019-05-13 09:50:14'),
(1285, 830, 72, 8, '2019-05-13 09:50:20', '2019-05-13 09:50:20'),
(1286, 793, 72, 8, '2019-05-13 09:50:29', '2019-05-13 09:50:29'),
(1287, 798, 72, 10, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(1288, 817, 72, 10, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(1289, 883, 72, 6, '2019-05-13 09:53:14', '2019-05-13 09:53:14'),
(1290, 864, 72, 2, '2019-05-13 09:53:27', '2019-05-13 09:53:27'),
(1291, 891, 72, 12, '2019-05-13 09:55:43', '2019-05-13 09:55:43'),
(1292, 786, 72, 14, '2019-05-13 09:56:59', '2019-05-13 09:56:59'),
(1293, 752, 72, 8, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(1294, 827, 72, 8, '2019-05-13 09:58:50', '2019-05-13 09:58:50'),
(1295, 1233, 72, 6, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(1296, 780, 72, 12, '2019-05-13 10:04:03', '2019-05-13 10:04:03'),
(1297, 768, 72, 8, '2019-05-13 12:08:53', '2019-05-13 10:08:53'),
(1298, 772, 72, 6, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(1299, 856, 72, 10, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(1300, 845, 71, 8, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(1301, 863, 71, 2, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(1302, 866, 71, 6, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(1303, 1231, 71, 8, '2019-05-13 11:19:31', '2019-05-13 11:19:31'),
(1304, 1232, 71, 10, '2019-05-13 11:21:55', '2019-05-13 11:21:55'),
(1305, 855, 71, 2, '2019-05-13 11:51:41', '2019-05-13 11:51:41'),
(1306, 775, 72, 6, '2019-05-13 11:56:12', '2019-05-13 11:56:12'),
(1307, 1234, 19, 0, '2019-07-31 09:51:30', '2018-11-29 06:40:17'),
(1308, 1238, 91, 0, '2020-03-14 19:43:13', '2020-03-14 19:43:13'),
(1309, 1238, 92, 0, '2020-03-14 19:45:18', '2020-03-14 19:45:18'),
(1310, 1238, 93, 0, '2020-03-14 20:33:40', '2020-03-14 20:33:40'),
(1311, 1238, 94, 10, '2020-03-14 22:21:09', '2020-03-14 22:21:09'),
(1312, 1238, 95, 5, '2020-04-07 14:05:02', '2020-04-07 14:05:02'),
(1313, 1238, 97, 0, '2020-04-16 19:08:31', '2020-04-16 19:08:31'),
(1314, 1238, 99, 0, '2020-04-16 19:56:41', '2020-04-16 19:56:41'),
(1315, 1238, 102, 3, '2020-04-17 07:01:35', '2020-04-17 07:01:35'),
(1316, 1239, 102, 5, '2020-04-17 07:24:35', '2020-04-17 07:24:35'),
(1317, 1238, 103, 5, '2020-04-17 18:39:24', '2020-04-17 18:39:24'),
(1318, 1238, 104, 6, '2020-04-17 19:10:36', '2020-04-17 19:10:36'),
(1319, 1238, 107, 0, '2020-04-20 19:22:56', '2020-04-20 19:22:56');

-- --------------------------------------------------------

--
-- بنية الجدول `student_exam_images`
--

CREATE TABLE `student_exam_images` (
  `id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exam_id` int(11) NOT NULL,
  `path` text COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `student_exam_images`
--

INSERT INTO `student_exam_images` (`id`, `student_id`, `exam_id`, `path`) VALUES
(1, 1238, 99, 'exams/2020-04-16_21_56_251452244065.png'),
(2, 1238, 100, 'exams/2020-04-16_22_07_33458063401.png'),
(3, 1238, 100, 'exams/2020-04-16_22_19_27448631922.png'),
(4, 1238, 100, 'exams/2020-04-16_22_20_151352313625.png'),
(5, 1238, 100, 'exams/2020-04-16_22_20_18745864625.png'),
(6, 1238, 100, 'exams/2020-04-16_22_20_21665211632.png'),
(7, 1238, 100, 'exams/2020-04-16_22_20_281878803385.png'),
(8, 1238, 100, 'exams/2020-04-16_22_21_022138703140.png'),
(9, 1238, 100, 'exams/2020-04-16_22_21_051499286727.png'),
(10, 1238, 100, 'exams/2020-04-16_22_21_081439125674.png'),
(11, 1238, 100, 'exams/2020-04-16_22_21_11556566609.png'),
(12, 1238, 100, 'exams/2020-04-16_22_21_141760573947.png'),
(13, 1238, 100, 'exams/2020-04-16_22_21_172010172251.png'),
(14, 1238, 100, 'exams/2020-04-16_22_21_202036539087.png'),
(15, 1238, 100, 'exams/2020-04-16_22_21_231819310731.png'),
(16, 1238, 100, 'exams/2020-04-16_22_21_26132361645.png'),
(17, 1238, 100, 'exams/2020-04-16_22_21_291280040148.png'),
(18, 1238, 100, 'exams/2020-04-16_22_21_321067160001.png'),
(19, 1238, 100, 'exams/2020-04-16_22_21_35643599459.png'),
(20, 1238, 100, 'exams/2020-04-16_22_21_38314890389.png'),
(21, 1238, 100, 'exams/2020-04-16_22_21_41190629091.png'),
(22, 1238, 100, 'exams/2020-04-16_22_21_45865515571.png'),
(23, 1238, 100, 'exams/2020-04-16_22_21_481495803300.png'),
(24, 1238, 100, 'exams/2020-04-16_22_21_51248705481.png'),
(25, 1238, 100, 'exams/2020-04-16_22_21_54643919086.png'),
(26, 1238, 100, 'exams/2020-04-16_22_21_571676462787.png'),
(27, 1238, 100, 'exams/2020-04-16_22_22_00118827728.png'),
(28, 1238, 100, 'exams/2020-04-16_22_22_031608808403.png'),
(29, 1238, 100, 'exams/2020-04-16_22_22_0673709349.png'),
(30, 1238, 100, 'exams/2020-04-16_22_22_091488799616.png'),
(31, 1238, 100, 'exams/2020-04-16_22_22_12558271714.png'),
(32, 1238, 100, 'exams/2020-04-16_22_22_15515974427.png'),
(33, 1238, 100, 'exams/2020-04-16_22_22_181286580178.png'),
(34, 1238, 100, 'exams/2020-04-16_22_22_21773009539.png'),
(35, 1238, 100, 'exams/2020-04-16_22_22_241896806462.png'),
(36, 1238, 100, 'exams/2020-04-16_22_22_271810006556.png'),
(37, 1238, 100, 'exams/2020-04-16_22_22_30266017072.png'),
(38, 1238, 100, 'exams/2020-04-16_22_22_3355429651.png'),
(39, 1238, 100, 'exams/2020-04-16_22_22_361871969589.png'),
(40, 1238, 100, 'exams/2020-04-16_22_22_39875400525.png'),
(41, 1238, 100, 'exams/2020-04-16_22_22_4216817430.png'),
(42, 1238, 100, 'exams/2020-04-16_22_22_451173974112.png'),
(43, 1238, 100, 'exams/2020-04-16_22_22_481189848690.png'),
(44, 1238, 100, 'exams/2020-04-16_22_22_51630079315.png'),
(45, 1238, 100, 'exams/2020-04-16_22_22_54504117043.png'),
(46, 1238, 100, 'exams/2020-04-16_22_22_572136860046.png'),
(47, 1238, 100, 'exams/2020-04-16_22_23_001118925704.png'),
(48, 1238, 100, 'exams/2020-04-16_22_23_031894038506.png'),
(49, 1238, 100, 'exams/2020-04-16_22_23_061819122507.png'),
(50, 1238, 100, 'exams/2020-04-16_22_23_091270745970.png'),
(51, 1238, 100, 'exams/2020-04-16_22_23_121220546034.png'),
(52, 1238, 100, 'exams/2020-04-16_22_23_152088808856.png'),
(53, 1238, 100, 'exams/2020-04-16_22_23_181475883306.png'),
(54, 1238, 100, 'exams/2020-04-16_22_23_211936670410.png'),
(55, 1238, 100, 'exams/2020-04-16_22_23_242090372835.png'),
(56, 1238, 100, 'exams/2020-04-16_22_23_281986128871.png'),
(57, 1238, 100, 'exams/2020-04-16_22_23_33919870759.png'),
(58, 1238, 100, 'exams/2020-04-16_22_23_36472162937.png'),
(59, 1238, 100, 'exams/2020-04-16_22_23_39427833940.png'),
(60, 1238, 100, 'exams/2020-04-16_22_23_421313092614.png'),
(61, 1238, 100, 'exams/2020-04-16_22_23_46664429348.png'),
(62, 1238, 100, 'exams/2020-04-16_22_23_49340849946.png'),
(63, 1238, 100, 'exams/2020-04-16_22_23_521148387849.png'),
(64, 1238, 100, 'exams/2020-04-16_22_23_55639710650.png'),
(65, 1238, 100, 'exams/2020-04-16_22_23_581366322155.png'),
(66, 1238, 100, 'exams/2020-04-16_22_24_022054075158.png'),
(67, 1238, 100, 'exams/2020-04-16_22_24_0519613452.png'),
(68, 1238, 100, 'exams/2020-04-16_22_24_08474527155.png'),
(69, 1238, 100, 'exams/2020-04-16_22_24_11434724760.png'),
(70, 1238, 100, 'exams/2020-04-16_22_24_14370788320.png'),
(71, 1238, 100, 'exams/2020-04-16_22_24_17394810564.png'),
(72, 1238, 100, 'exams/2020-04-16_22_24_20423001438.png'),
(73, 1238, 100, 'exams/2020-04-16_22_24_23421156012.png'),
(74, 1238, 100, 'exams/2020-04-16_22_24_261408770273.png'),
(75, 1238, 100, 'exams/2020-04-16_22_24_291197943593.png'),
(76, 1238, 100, 'exams/2020-04-16_22_24_322096263976.png'),
(77, 1238, 100, 'exams/2020-04-16_22_24_361988431525.png'),
(78, 1238, 100, 'exams/2020-04-16_22_24_392125706456.png'),
(79, 1238, 100, 'exams/2020-04-16_22_24_431198208701.png'),
(80, 1238, 100, 'exams/2020-04-16_22_24_451460142723.png'),
(81, 1238, 100, 'exams/2020-04-16_22_24_491332075345.png'),
(82, 1238, 100, 'exams/2020-04-16_22_24_52812921513.png'),
(83, 1238, 101, 'exams/2020-04-17_08_41_18574869411.png'),
(84, 1238, 101, 'exams/2020-04-17_08_46_171619491103.png'),
(85, 1238, 101, 'exams/2020-04-17_08_51_18196026399.png'),
(86, 1238, 101, 'exams/2020-04-17_08_56_17334106743.png'),
(87, 1238, 102, 'exams/2020-04-17_09_01_14929268652.png'),
(88, 1239, 102, 'exams/2020-04-17_09_20_281142473398.png'),
(89, 1239, 102, 'exams/2020-04-17_09_23_21720240180.png'),
(90, 1239, 102, 'exams/2020-04-17_09_23_241316611512.png'),
(91, 1239, 102, 'exams/2020-04-17_09_23_271846870969.png'),
(92, 1239, 102, 'exams/2020-04-17_09_23_30570347243.png'),
(93, 1239, 102, 'exams/2020-04-17_09_23_33575791958.png'),
(94, 1239, 102, 'exams/2020-04-17_09_23_36298873068.png'),
(95, 1239, 102, 'exams/2020-04-17_09_23_40866159464.png'),
(96, 1239, 102, 'exams/2020-04-17_09_23_422079775266.png'),
(97, 1239, 102, 'exams/2020-04-17_09_23_452036422850.png'),
(98, 1239, 102, 'exams/2020-04-17_09_23_48201028619.png'),
(99, 1239, 102, 'exams/2020-04-17_09_23_511514362521.png'),
(100, 1239, 102, 'exams/2020-04-17_09_23_541596534407.png'),
(101, 1239, 102, 'exams/2020-04-17_09_23_57373256511.png'),
(102, 1239, 102, 'exams/2020-04-17_09_24_00976258641.png'),
(103, 1239, 102, 'exams/2020-04-17_09_24_031102985732.png'),
(104, 1239, 102, 'exams/2020-04-17_09_24_06324223676.png'),
(105, 1239, 102, 'exams/2020-04-17_09_24_091792934121.png'),
(106, 1239, 102, 'exams/2020-04-17_09_24_12440352946.png'),
(107, 1239, 102, 'exams/2020-04-17_09_24_151473973092.png'),
(108, 1239, 102, 'exams/2020-04-17_09_24_181497396687.png'),
(109, 1239, 102, 'exams/2020-04-17_09_24_2324750874.png'),
(110, 1239, 102, 'exams/2020-04-17_09_24_29244523588.png'),
(111, 1239, 102, 'exams/2020-04-17_09_24_301159831269.png'),
(112, 1239, 102, 'exams/2020-04-17_09_24_331688510061.png'),
(113, 1239, 102, 'exams/2020-04-17_09_24_361480724962.png'),
(114, 1238, 103, 'exams/2020-04-17_20_35_25605649225.png'),
(115, 1238, 103, 'exams/2020-04-17_20_35_28121759976.png'),
(116, 1238, 103, 'exams/2020-04-17_20_35_30930607077.png'),
(117, 1238, 103, 'exams/2020-04-17_20_35_331191789805.png'),
(118, 1238, 103, 'exams/2020-04-17_20_35_3667622390.png'),
(119, 1238, 103, 'exams/2020-04-17_20_35_40133062872.png'),
(120, 1238, 103, 'exams/2020-04-17_20_35_42570207250.png'),
(121, 1238, 103, 'exams/2020-04-17_20_35_461432676829.png'),
(122, 1238, 103, 'exams/2020-04-17_20_35_48823583623.png'),
(123, 1238, 103, 'exams/2020-04-17_20_35_51531558708.png'),
(124, 1238, 103, 'exams/2020-04-17_20_35_54185341589.png'),
(125, 1238, 103, 'exams/2020-04-17_20_35_572136802850.png'),
(126, 1238, 103, 'exams/2020-04-17_20_36_01632810240.png'),
(127, 1238, 103, 'exams/2020-04-17_20_36_041380921906.png'),
(128, 1238, 103, 'exams/2020-04-17_20_36_061870966363.png'),
(129, 1238, 103, 'exams/2020-04-17_20_36_10564355562.png'),
(130, 1238, 103, 'exams/2020-04-17_20_36_131595919568.png'),
(131, 1238, 103, 'exams/2020-04-17_20_36_161649031197.png'),
(132, 1238, 103, 'exams/2020-04-17_20_36_19389395539.png'),
(133, 1238, 103, 'exams/2020-04-17_20_36_22851262448.png'),
(134, 1238, 103, 'exams/2020-04-17_20_36_25467349844.png'),
(135, 1238, 103, 'exams/2020-04-17_20_36_29459865460.png'),
(136, 1238, 103, 'exams/2020-04-17_20_36_34899435920.png'),
(137, 1238, 103, 'exams/2020-04-17_20_36_382139959648.png'),
(138, 1238, 103, 'exams/2020-04-17_20_36_42462864324.png'),
(139, 1238, 103, 'exams/2020-04-17_20_36_461571020252.png'),
(140, 1238, 103, 'exams/2020-04-17_20_36_501365865039.png'),
(141, 1238, 103, 'exams/2020-04-17_20_36_551765705908.png'),
(142, 1238, 103, 'exams/2020-04-17_20_36_58337898305.png'),
(143, 1238, 103, 'exams/2020-04-17_20_37_02602207538.png'),
(144, 1238, 103, 'exams/2020-04-17_20_37_1773716671.png'),
(145, 1238, 103, 'exams/2020-04-17_20_37_191608544077.png'),
(146, 1238, 103, 'exams/2020-04-17_20_37_22795027700.png'),
(147, 1238, 103, 'exams/2020-04-17_20_37_261879031369.png'),
(148, 1238, 103, 'exams/2020-04-17_20_37_301632356547.png'),
(149, 1238, 103, 'exams/2020-04-17_20_37_341825626901.png'),
(150, 1238, 103, 'exams/2020-04-17_20_37_38381392301.png'),
(151, 1238, 103, 'exams/2020-04-17_20_37_42575394145.png'),
(152, 1238, 103, 'exams/2020-04-17_20_37_461739843487.png'),
(153, 1238, 103, 'exams/2020-04-17_20_37_505770573.png'),
(154, 1238, 103, 'exams/2020-04-17_20_37_541941973918.png'),
(155, 1238, 103, 'exams/2020-04-17_20_37_581258258252.png'),
(156, 1238, 103, 'exams/2020-04-17_20_38_02417886125.png'),
(157, 1238, 103, 'exams/2020-04-17_20_38_061483466762.png'),
(158, 1238, 103, 'exams/2020-04-17_20_38_10761093108.png'),
(159, 1238, 103, 'exams/2020-04-17_20_38_14955846266.png'),
(160, 1238, 103, 'exams/2020-04-17_20_38_181061027970.png'),
(161, 1238, 103, 'exams/2020-04-17_20_38_231132587576.png'),
(162, 1238, 103, 'exams/2020-04-17_20_38_2634857565.png'),
(163, 1238, 103, 'exams/2020-04-17_20_38_30722669706.png'),
(164, 1238, 103, 'exams/2020-04-17_20_38_34184067792.png'),
(165, 1238, 103, 'exams/2020-04-17_20_38_38416314447.png'),
(166, 1238, 103, 'exams/2020-04-17_20_38_42357129073.png'),
(167, 1238, 103, 'exams/2020-04-17_20_38_431066933661.png'),
(168, 1238, 103, 'exams/2020-04-17_20_38_461784966716.png'),
(169, 1238, 103, 'exams/2020-04-17_20_38_4619869808.png'),
(170, 1238, 103, 'exams/2020-04-17_20_38_481686191560.png'),
(171, 1238, 103, 'exams/2020-04-17_20_38_50586857915.png'),
(172, 1238, 103, 'exams/2020-04-17_20_38_511279385698.png'),
(173, 1238, 103, 'exams/2020-04-17_20_38_541026081007.png'),
(174, 1238, 103, 'exams/2020-04-17_20_38_55539697414.png'),
(175, 1238, 103, 'exams/2020-04-17_20_38_57134086240.png'),
(176, 1238, 103, 'exams/2020-04-17_20_38_58431196147.png'),
(177, 1238, 103, 'exams/2020-04-17_20_39_001137597655.png'),
(178, 1238, 103, 'exams/2020-04-17_20_39_02730302985.png'),
(179, 1238, 103, 'exams/2020-04-17_20_39_041231538318.png'),
(180, 1238, 103, 'exams/2020-04-17_20_39_06405616413.png'),
(181, 1238, 103, 'exams/2020-04-17_20_39_071613310833.png'),
(182, 1238, 103, 'exams/2020-04-17_20_39_102079325759.png'),
(183, 1238, 103, 'exams/2020-04-17_20_39_10600287657.png'),
(184, 1238, 103, 'exams/2020-04-17_20_39_13511406814.png'),
(185, 1238, 103, 'exams/2020-04-17_20_39_142098111782.png'),
(186, 1238, 103, 'exams/2020-04-17_20_39_161472398489.png'),
(187, 1238, 103, 'exams/2020-04-17_20_39_181441263476.png'),
(188, 1238, 103, 'exams/2020-04-17_20_39_191266476270.png'),
(189, 1238, 103, 'exams/2020-04-17_20_39_22144167756.png'),
(190, 1238, 103, 'exams/2020-04-17_20_39_22994438145.png'),
(191, 1238, 103, 'exams/2020-04-17_20_39_25170481628.png'),
(192, 1238, 103, 'exams/2020-04-17_20_39_262079876575.png'),
(193, 1238, 103, 'exams/2020-04-17_20_39_3061387969.png'),
(194, 1238, 103, 'exams/2020-04-17_20_39_342040648309.png'),
(195, 1238, 103, 'exams/2020-04-17_20_39_381464336672.png'),
(196, 1238, 103, 'exams/2020-04-17_20_39_422123975914.png'),
(197, 1238, 103, 'exams/2020-04-17_20_39_451635327512.png'),
(198, 1238, 103, 'exams/2020-04-17_20_39_48611426798.png'),
(199, 1238, 104, 'exams/2020-04-17_21_09_22889968910.png'),
(200, 1238, 104, 'exams/2020-04-17_21_09_25295375317.png'),
(201, 1238, 104, 'exams/2020-04-17_21_09_281474874275.png'),
(202, 1238, 104, 'exams/2020-04-17_21_09_32116401924.png'),
(203, 1238, 104, 'exams/2020-04-17_21_09_351344093838.png'),
(204, 1238, 104, 'exams/2020-04-17_21_09_38661706368.png'),
(205, 1238, 104, 'exams/2020-04-17_21_09_41383560844.png'),
(206, 1238, 104, 'exams/2020-04-17_21_09_441645592336.png'),
(207, 1238, 104, 'exams/2020-04-17_21_09_47288779047.png'),
(208, 1238, 104, 'exams/2020-04-17_21_09_50789351829.png'),
(209, 1238, 104, 'exams/2020-04-17_21_09_531764955817.png'),
(210, 1238, 104, 'exams/2020-04-17_21_09_56743832012.png'),
(211, 1238, 104, 'exams/2020-04-17_21_09_592043266960.png'),
(212, 1238, 104, 'exams/2020-04-17_21_10_02524892713.png'),
(213, 1238, 104, 'exams/2020-04-17_21_10_051321659571.png'),
(214, 1238, 104, 'exams/2020-04-17_21_10_081928267772.png'),
(215, 1238, 104, 'exams/2020-04-17_21_10_111843448614.png'),
(216, 1238, 104, 'exams/2020-04-17_21_10_141348004410.png'),
(217, 1238, 104, 'exams/2020-04-17_21_10_1776297655.png'),
(218, 1238, 104, 'exams/2020-04-17_21_10_21331274575.png'),
(219, 1238, 104, 'exams/2020-04-17_21_10_24110442907.png'),
(220, 1238, 104, 'exams/2020-04-17_21_10_29909634838.png'),
(221, 1238, 104, 'exams/2020-04-17_21_10_322107881272.png'),
(222, 1238, 104, 'exams/2020-04-17_21_10_35663039344.png'),
(223, 1238, 104, 'exams/2020-04-17_21_10_381880501291.png'),
(224, 1238, 105, 'exams/2020-04-19_18_06_34581625879.png'),
(225, 1238, 105, 'exams/2020-04-19_18_06_36708623199.png'),
(226, 1238, 105, 'exams/2020-04-19_18_06_391749874031.png'),
(227, 1238, 105, 'exams/2020-04-19_18_06_43966170725.png'),
(228, 1238, 105, 'exams/2020-04-19_18_06_451387672422.png'),
(229, 1238, 105, 'exams/2020-04-19_18_06_491945180335.png'),
(230, 1238, 105, 'exams/2020-04-19_18_06_511150872579.png'),
(231, 1238, 105, 'exams/2020-04-19_18_06_552136400848.png'),
(232, 1238, 105, 'exams/2020-04-19_18_06_58754718015.png'),
(233, 1238, 105, 'exams/2020-04-19_18_07_01332411151.png'),
(234, 1238, 105, 'exams/2020-04-19_18_09_29600686827.png'),
(235, 1238, 105, 'exams/2020-04-19_18_09_321951143377.png'),
(236, 1238, 105, 'exams/2020-04-19_18_09_35387151438.png'),
(237, 1238, 105, 'exams/2020-04-19_18_09_381937888021.png'),
(238, 1238, 105, 'exams/2020-04-19_18_09_411629413854.png'),
(239, 1238, 105, 'exams/2020-04-19_18_09_455180967.png'),
(240, 1238, 105, 'exams/2020-04-19_18_11_571901797791.png'),
(241, 1238, 105, 'exams/2020-04-19_18_12_001855209599.png'),
(242, 1238, 105, 'exams/2020-04-19_18_12_031479985599.png'),
(243, 1238, 105, 'exams/2020-04-19_18_12_06341900992.png'),
(244, 1238, 105, 'exams/2020-04-19_18_12_09217834852.png'),
(245, 1238, 105, 'exams/2020-04-19_18_12_121199466036.png'),
(246, 1238, 105, 'exams/2020-04-19_18_12_1510032744.png'),
(247, 1238, 105, 'exams/2020-04-19_18_12_1871836345.png'),
(248, 1238, 105, 'exams/2020-04-19_18_12_21940565291.png'),
(249, 1238, 105, 'exams/2020-04-19_18_12_24854981675.png'),
(250, 1238, 105, 'exams/2020-04-19_18_12_27140872382.png'),
(251, 1238, 105, 'exams/2020-04-19_18_12_302102809080.png'),
(252, 1238, 105, 'exams/2020-04-19_18_12_332020255812.png'),
(253, 1238, 105, 'exams/2020-04-19_18_12_361249854479.png'),
(254, 1238, 105, 'exams/2020-04-19_18_12_391305550382.png'),
(255, 1238, 105, 'exams/2020-04-19_18_12_42666956640.png'),
(256, 1238, 105, 'exams/2020-04-19_18_12_452096950803.png'),
(257, 1238, 105, 'exams/2020-04-19_18_12_48724204667.png'),
(258, 1238, 105, 'exams/2020-04-19_18_12_511414941584.png'),
(259, 1238, 105, 'exams/2020-04-19_18_12_541457024792.png'),
(260, 1238, 105, 'exams/2020-04-19_18_12_571416964427.png'),
(261, 1238, 105, 'exams/2020-04-19_18_13_001662746553.png'),
(262, 1238, 105, 'exams/2020-04-19_18_13_031196271470.png'),
(263, 1238, 105, 'exams/2020-04-19_18_13_061735688567.png'),
(264, 1238, 105, 'exams/2020-04-19_18_13_091781590810.png'),
(265, 1238, 105, 'exams/2020-04-19_18_13_121241939753.png'),
(266, 1238, 105, 'exams/2020-04-19_18_13_15516423230.png'),
(267, 1238, 105, 'exams/2020-04-19_18_13_181321734377.png'),
(268, 1238, 105, 'exams/2020-04-19_18_13_21183976565.png'),
(269, 1238, 105, 'exams/2020-04-19_18_13_241289071313.png'),
(270, 1238, 105, 'exams/2020-04-19_18_13_272071935147.png'),
(271, 1238, 105, 'exams/2020-04-19_18_13_301725695849.png'),
(272, 1238, 105, 'exams/2020-04-19_18_13_33897458459.png'),
(273, 1238, 105, 'exams/2020-04-19_18_13_36780999104.png'),
(274, 1238, 105, 'exams/2020-04-19_18_13_391257276476.png'),
(275, 1238, 105, 'exams/2020-04-19_18_13_42341926120.png'),
(276, 1238, 105, 'exams/2020-04-19_18_13_46236118698.png'),
(277, 1238, 105, 'exams/2020-04-19_18_13_481607170299.png'),
(278, 1238, 105, 'exams/2020-04-19_18_13_521135802122.png'),
(279, 1238, 105, 'exams/2020-04-19_18_13_59202413110.png'),
(280, 1238, 105, 'exams/2020-04-19_18_14_021734558577.png'),
(281, 1238, 105, 'exams/2020-04-19_18_14_0536330799.png'),
(282, 1238, 105, 'exams/2020-04-19_18_14_08586054345.png'),
(283, 1238, 105, 'exams/2020-04-19_18_14_111949743548.png'),
(284, 1238, 105, 'exams/2020-04-19_18_14_152030887371.png'),
(285, 1238, 105, 'exams/2020-04-19_18_14_17512395684.png'),
(286, 1238, 105, 'exams/2020-04-19_18_14_20380343276.png'),
(287, 1238, 105, 'exams/2020-04-19_18_14_231634399268.png'),
(288, 1238, 105, 'exams/2020-04-19_18_23_54125363090.png'),
(289, 1238, 105, 'exams/2020-04-19_18_23_571926027370.png'),
(290, 1238, 105, 'exams/2020-04-19_18_24_00828232001.png'),
(291, 1238, 105, 'exams/2020-04-19_18_24_0399714401.png'),
(292, 1238, 105, 'exams/2020-04-19_18_24_06264473821.png'),
(293, 1238, 105, 'exams/2020-04-19_18_24_09446702222.png'),
(294, 1238, 105, 'exams/2020-04-19_18_24_12622328706.png'),
(295, 1238, 105, 'exams/2020-04-19_18_24_151085238804.png'),
(296, 1238, 105, 'exams/2020-04-19_18_24_191706261773.png'),
(297, 1238, 105, 'exams/2020-04-19_18_24_21591261861.png'),
(298, 1238, 105, 'exams/2020-04-19_18_24_241636045049.png'),
(299, 1238, 105, 'exams/2020-04-19_18_24_271107348418.png'),
(300, 1238, 105, 'exams/2020-04-19_18_24_31221534456.png'),
(301, 1238, 105, 'exams/2020-04-19_18_24_34592179586.png'),
(302, 1238, 105, 'exams/2020-04-19_18_24_37584231130.png'),
(303, 1238, 105, 'exams/2020-04-19_18_24_40747579110.png'),
(304, 1238, 105, 'exams/2020-04-19_18_24_431114437502.png'),
(305, 1238, 105, 'exams/2020-04-19_18_24_46681112190.png'),
(306, 1238, 105, 'exams/2020-04-19_18_24_491895412972.png'),
(307, 1238, 105, 'exams/2020-04-19_18_24_521454222130.png');

-- --------------------------------------------------------

--
-- بنية الجدول `student_question_answers`
--

CREATE TABLE `student_question_answers` (
  `id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- بنية الجدول `stud_ques_ans_choices`
--

CREATE TABLE `stud_ques_ans_choices` (
  `id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `choice` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `student_id` int(11) DEFAULT NULL,
  `exam_id` int(11) DEFAULT NULL,
  `point` float DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `stud_ques_ans_choices`
--

INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(4439, 57, '145', 228, 29, 2, '2018-11-28 17:26:48', '2018-11-28 17:26:49'),
(4440, 58, '146', 228, 29, 2, '2018-11-28 17:26:48', '2018-11-28 17:26:49'),
(4441, 59, '152', 228, 29, 2, '2018-11-28 17:26:48', '2018-11-28 17:26:49'),
(4442, 60, '154', 228, 29, 0, '2018-11-28 17:26:48', '2018-11-28 17:26:49'),
(4443, 61, '988', 228, 29, 0, '2018-11-28 17:26:48', '2018-11-28 17:26:49'),
(4592, 57, '145', 284, 29, 2, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(4593, 58, '146', 284, 29, 2, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(4594, 59, '152', 284, 29, 2, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(4595, 60, '155', 284, 29, 2, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(4596, 61, 'conctructor', 284, 29, 0, '2018-11-29 06:40:17', '2018-11-29 06:40:17'),
(4768, 57, '145', 288, 29, 2, '2018-11-29 06:41:57', '2018-11-29 06:41:58'),
(4769, 58, '147', 288, 29, 0, '2018-11-29 06:41:57', '2018-11-29 06:41:58'),
(4770, 59, '152', 288, 29, 2, '2018-11-29 06:41:57', '2018-11-29 06:41:58'),
(4771, 60, '155', 288, 29, 2, '2018-11-29 06:41:57', '2018-11-29 06:41:58'),
(4772, 61, 'immutable', 288, 29, 2, '2018-11-29 06:41:58', '2018-11-29 06:41:58'),
(4953, 57, '142', 276, 29, 0, '2018-11-29 06:45:11', '2018-11-29 06:45:20'),
(4954, 58, '146', 276, 29, 2, '2018-11-29 06:45:11', '2018-11-29 06:45:20'),
(4955, 59, '152', 276, 29, 2, '2018-11-29 06:45:11', '2018-11-29 06:45:20'),
(4956, 60, '155', 276, 29, 2, '2018-11-29 06:45:11', '2018-11-29 06:45:21'),
(4957, 61, 'constant', 276, 29, 0, '2018-11-29 06:45:11', '2018-11-29 06:45:21'),
(5006, 57, '145', 292, 29, 2, '2018-11-29 06:46:01', '2018-11-29 06:46:15'),
(5007, 58, '149', 292, 29, 0, '2018-11-29 06:46:01', '2018-11-29 06:46:15'),
(5008, 59, '152', 292, 29, 2, '2018-11-29 06:46:01', '2018-11-29 06:46:15'),
(5009, 60, '155', 292, 29, 2, '2018-11-29 06:46:01', '2018-11-29 06:46:15'),
(5010, 61, 'anoniemus', 292, 29, 0, '2018-11-29 06:46:01', '2018-11-29 06:46:15'),
(5011, 57, '145', 293, 29, 2, '2018-11-29 06:46:02', '2018-11-29 06:46:03'),
(5012, 58, '149', 293, 29, 0, '2018-11-29 06:46:02', '2018-11-29 06:46:03'),
(5013, 59, '152', 293, 29, 2, '2018-11-29 06:46:02', '2018-11-29 06:46:03'),
(5014, 60, '155', 293, 29, 2, '2018-11-29 06:46:02', '2018-11-29 06:46:03'),
(5015, 61, 'Immutable                                                                                   Immutable', 293, 29, 0, '2018-11-29 06:46:02', '2018-11-29 06:46:03'),
(5022, 57, '145', 282, 29, 2, '2018-11-29 06:46:09', '2018-11-29 06:46:18'),
(5023, 59, '152', 282, 29, 2, '2018-11-29 06:46:09', '2018-11-29 06:46:19'),
(5024, 60, '155', 282, 29, 2, '2018-11-29 06:46:09', '2018-11-29 06:46:19'),
(5025, 61, NULL, 282, 29, 0, '2018-11-29 06:46:09', '2018-11-29 06:46:19'),
(5072, 57, '145', 291, 29, 2, '2018-11-29 06:48:00', '2018-11-29 06:48:06'),
(5073, 58, '149', 291, 29, 0, '2018-11-29 06:48:00', '2018-11-29 06:48:06'),
(5074, 59, '152', 291, 29, 2, '2018-11-29 06:48:00', '2018-11-29 06:48:06'),
(5075, 60, '155', 291, 29, 2, '2018-11-29 06:48:00', '2018-11-29 06:48:06'),
(5076, 61, 'immutable', 291, 29, 2, '2018-11-29 06:48:00', '2018-11-29 06:48:06'),
(5099, 57, '145', 294, 29, 2, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(5100, 58, '146', 294, 29, 2, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(5101, 59, '152', 294, 29, 2, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(5102, 60, '155', 294, 29, 2, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(5103, 61, 'private', 294, 29, 0, '2018-11-29 06:48:24', '2018-11-29 06:48:24'),
(5104, 57, '145', 287, 29, 2, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(5105, 58, '146', 287, 29, 2, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(5106, 59, '152', 287, 29, 2, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(5107, 60, '155', 287, 29, 2, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(5108, 61, 'private', 287, 29, 0, '2018-11-29 06:48:34', '2018-11-29 06:48:34'),
(5128, 57, '144', 285, 29, 0, '2018-11-29 06:49:00', '2018-11-29 06:49:06'),
(5129, 58, '146', 285, 29, 2, '2018-11-29 06:49:00', '2018-11-29 06:49:06'),
(5130, 59, '152', 285, 29, 2, '2018-11-29 06:49:00', '2018-11-29 06:49:06'),
(5131, 60, '155', 285, 29, 2, '2018-11-29 06:49:00', '2018-11-29 06:49:06'),
(5132, 61, 'privet', 285, 29, 0, '2018-11-29 06:49:00', '2018-11-29 06:49:06'),
(5174, 57, '145', 279, 29, 2, '2018-11-29 06:49:25', '2018-11-29 06:49:26'),
(5175, 58, '149', 279, 29, 0, '2018-11-29 06:49:25', '2018-11-29 06:49:26'),
(5176, 59, '152', 279, 29, 2, '2018-11-29 06:49:25', '2018-11-29 06:49:26'),
(5177, 60, '155', 279, 29, 2, '2018-11-29 06:49:25', '2018-11-29 06:49:26'),
(5178, 61, 'immutable', 279, 29, 2, '2018-11-29 06:49:25', '2018-11-29 06:49:26'),
(5184, 57, '145', 277, 29, 2, '2018-11-29 06:49:28', '2018-11-29 06:49:29'),
(5185, 58, '146', 277, 29, 2, '2018-11-29 06:49:28', '2018-11-29 06:49:29'),
(5186, 59, '152', 277, 29, 2, '2018-11-29 06:49:28', '2018-11-29 06:49:29'),
(5187, 60, '155', 277, 29, 2, '2018-11-29 06:49:28', '2018-11-29 06:49:29'),
(5188, 61, 'private', 277, 29, 0, '2018-11-29 06:49:28', '2018-11-29 06:49:29'),
(5218, 57, '145', 295, 29, 2, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(5219, 58, '146', 295, 29, 2, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(5220, 59, '152', 295, 29, 2, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(5221, 60, '155', 295, 29, 2, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(5222, 61, 'immutable', 295, 29, 2, '2018-11-29 06:50:05', '2018-11-29 06:50:05'),
(5243, 57, '145', 275, 29, 2, '2018-11-29 06:50:37', '2018-11-29 06:50:37'),
(5244, 58, '149', 275, 29, 0, '2018-11-29 06:50:37', '2018-11-29 06:50:37'),
(5245, 59, '152', 275, 29, 2, '2018-11-29 06:50:37', '2018-11-29 06:50:37'),
(5246, 60, '154', 275, 29, 0, '2018-11-29 06:50:37', '2018-11-29 06:50:37'),
(5247, 61, 'immutable', 275, 29, 2, '2018-11-29 06:50:37', '2018-11-29 06:50:37'),
(5297, 57, '145', 286, 29, 2, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(5298, 58, '149', 286, 29, 0, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(5299, 59, '152', 286, 29, 2, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(5300, 60, '155', 286, 29, 2, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(5301, 61, 'immutable', 286, 29, 2, '2018-11-29 06:51:15', '2018-11-29 06:51:15'),
(5346, 57, '145', 296, 29, 2, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(5347, 58, '146', 296, 29, 2, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(5348, 59, '152', 296, 29, 2, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(5349, 60, '155', 296, 29, 2, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(5350, 61, 'immutable', 296, 29, 2, '2018-11-29 06:52:47', '2018-11-29 06:52:47'),
(5351, 57, '145', 278, 29, 2, '2018-11-29 06:53:08', '2018-11-29 06:53:09'),
(5352, 58, '146', 278, 29, 2, '2018-11-29 06:53:08', '2018-11-29 06:53:09'),
(5353, 59, '152', 278, 29, 2, '2018-11-29 06:53:08', '2018-11-29 06:53:09'),
(5354, 60, '155', 278, 29, 2, '2018-11-29 06:53:08', '2018-11-29 06:53:09'),
(5355, 61, 'Immutable', 278, 29, 0, '2018-11-29 06:53:08', '2018-11-29 06:53:09'),
(5418, 57, '142', 289, 29, 0, '2018-11-29 06:58:02', '2018-11-29 06:58:15'),
(5419, 58, '146', 289, 29, 2, '2018-11-29 06:58:02', '2018-11-29 06:58:15'),
(5420, 59, '152', 289, 29, 2, '2018-11-29 06:58:02', '2018-11-29 06:58:15'),
(5421, 60, '155', 289, 29, 2, '2018-11-29 06:58:02', '2018-11-29 06:58:15'),
(5422, 61, 'immutable', 289, 29, 2, '2018-11-29 06:58:02', '2018-11-29 06:58:15'),
(5428, 57, '145', 290, 29, 2, '2018-11-29 06:59:00', '2018-11-29 06:59:10'),
(5429, 58, '146', 290, 29, 2, '2018-11-29 06:59:00', '2018-11-29 06:59:10'),
(5430, 59, '152', 290, 29, 2, '2018-11-29 06:59:00', '2018-11-29 06:59:10'),
(5431, 60, '155', 290, 29, 2, '2018-11-29 06:59:00', '2018-11-29 06:59:10'),
(5432, 61, 'constructor', 290, 29, 0, '2018-11-29 06:59:00', '2018-11-29 06:59:10'),
(5438, 57, '145', 280, 29, 2, '2018-11-29 07:00:05', '2018-11-29 07:00:12'),
(5439, 58, '146', 280, 29, 2, '2018-11-29 07:00:05', '2018-11-29 07:00:12'),
(5440, 59, '152', 280, 29, 2, '2018-11-29 07:00:05', '2018-11-29 07:00:12'),
(5441, 60, '155', 280, 29, 2, '2018-11-29 07:00:05', '2018-11-29 07:00:12'),
(5442, 61, 'immutable', 280, 29, 2, '2018-11-29 07:00:05', '2018-11-29 07:00:12'),
(5443, 57, '145', 283, 29, 2, '2018-11-29 07:00:27', '2018-11-29 07:00:29'),
(5444, 58, '147', 283, 29, 0, '2018-11-29 07:00:27', '2018-11-29 07:00:29'),
(5445, 59, '152', 283, 29, 2, '2018-11-29 07:00:27', '2018-11-29 07:00:29'),
(5446, 60, '155', 283, 29, 2, '2018-11-29 07:00:27', '2018-11-29 07:00:29'),
(5447, 61, 'immutable', 283, 29, 2, '2018-11-29 07:00:27', '2018-11-29 07:00:29'),
(5506, 52, '128', 253, 28, NULL, '2018-11-29 07:03:03', '2018-11-29 07:03:03'),
(5507, 53, '131', 253, 28, NULL, '2018-11-29 07:03:03', '2018-11-29 07:03:03'),
(5508, 54, '132', 253, 28, NULL, '2018-11-29 07:03:03', '2018-11-29 07:03:03'),
(5509, 56, NULL, 253, 28, NULL, '2018-11-29 07:03:03', '2018-11-29 07:03:03'),
(6160, 57, '145', 247, 29, 2, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(6161, 58, '149', 247, 29, 0, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(6162, 59, '152', 247, 29, 2, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(6163, 60, '155', 247, 29, 2, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(6164, 61, 'immutable object', 247, 29, 0, '2018-11-29 08:42:59', '2018-11-29 08:42:59'),
(6180, 57, '142', 245, 29, 0, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(6181, 58, '149', 245, 29, 0, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(6182, 59, '152', 245, 29, 2, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(6183, 60, '155', 245, 29, 2, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(6184, 61, NULL, 245, 29, 0, '2018-11-29 08:43:13', '2018-11-29 08:43:13'),
(6276, 57, '142', 239, 29, 0, '2018-11-29 08:43:57', '2018-11-29 08:43:59'),
(6277, 58, '148', 239, 29, 0, '2018-11-29 08:43:57', '2018-11-29 08:43:59'),
(6278, 59, '152', 239, 29, 2, '2018-11-29 08:43:57', '2018-11-29 08:43:59'),
(6279, 60, '154', 239, 29, 0, '2018-11-29 08:43:57', '2018-11-29 08:43:59'),
(6280, 61, 'final', 239, 29, 0, '2018-11-29 08:43:57', '2018-11-29 08:43:59'),
(6311, 57, '145', 226, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:06'),
(6312, 58, '146', 226, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:06'),
(6313, 59, '152', 226, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:06'),
(6314, 60, '155', 226, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:06'),
(6315, 61, 'immutable', 226, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:06'),
(6316, 57, '143', 231, 29, 0, '2018-11-29 08:44:04', '2018-11-29 08:44:05'),
(6317, 58, '149', 231, 29, 0, '2018-11-29 08:44:04', '2018-11-29 08:44:05'),
(6318, 59, '152', 231, 29, 2, '2018-11-29 08:44:04', '2018-11-29 08:44:05'),
(6319, 60, '154', 231, 29, 0, '2018-11-29 08:44:04', '2018-11-29 08:44:05'),
(6320, 61, 'private', 231, 29, 0, '2018-11-29 08:44:04', '2018-11-29 08:44:05'),
(6336, 57, '145', 237, 29, 2, '2018-11-29 08:44:06', '2018-11-29 08:44:09'),
(6337, 58, '147', 237, 29, 0, '2018-11-29 08:44:06', '2018-11-29 08:44:09'),
(6338, 59, '152', 237, 29, 2, '2018-11-29 08:44:06', '2018-11-29 08:44:09'),
(6339, 60, '154', 237, 29, 0, '2018-11-29 08:44:06', '2018-11-29 08:44:09'),
(6341, 61, 'private', 237, 29, 0, '2018-11-29 08:44:06', '2018-11-29 08:44:09'),
(6351, 57, '145', 238, 29, 2, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(6352, 58, '147', 238, 29, 0, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(6353, 59, '152', 238, 29, 2, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(6354, 60, '154', 238, 29, 0, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(6355, 61, 'immutable', 238, 29, 2, '2018-11-29 08:44:10', '2018-11-29 08:44:10'),
(6356, 57, '145', 249, 29, 2, '2018-11-29 08:44:10', '2018-11-29 08:44:11'),
(6357, 58, '149', 249, 29, 0, '2018-11-29 08:44:10', '2018-11-29 08:44:11'),
(6358, 59, '152', 249, 29, 2, '2018-11-29 08:44:11', '2018-11-29 08:44:11'),
(6359, 60, '154', 249, 29, 0, '2018-11-29 08:44:11', '2018-11-29 08:44:11'),
(6360, 61, 'string', 249, 29, 0, '2018-11-29 08:44:11', '2018-11-29 08:44:11'),
(6361, 57, '145', 227, 29, 2, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(6362, 58, '146', 227, 29, 2, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(6363, 59, '152', 227, 29, 2, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(6364, 60, '155', 227, 29, 2, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(6365, 61, 'immutable', 227, 29, 2, '2018-11-29 08:44:17', '2018-11-29 08:44:17'),
(6431, 57, '145', 241, 29, 2, '2018-11-29 08:45:35', '2018-11-29 08:45:35'),
(6432, 58, '146', 241, 29, 2, '2018-11-29 08:45:35', '2018-11-29 08:45:35'),
(6433, 59, '152', 241, 29, 2, '2018-11-29 08:45:35', '2018-11-29 08:45:35'),
(6434, 60, '155', 241, 29, 2, '2018-11-29 08:45:35', '2018-11-29 08:45:35'),
(6435, 61, 'static variable', 241, 29, 0, '2018-11-29 08:45:35', '2018-11-29 08:45:35'),
(6461, 57, '145', 246, 29, 2, '2018-11-29 08:47:40', '2018-11-29 08:47:40'),
(6462, 58, '146', 246, 29, 2, '2018-11-29 08:47:40', '2018-11-29 08:47:40'),
(6463, 59, '152', 246, 29, 2, '2018-11-29 08:47:40', '2018-11-29 08:47:40'),
(6464, 60, '155', 246, 29, 2, '2018-11-29 08:47:40', '2018-11-29 08:47:40'),
(6465, 61, 'immutable', 246, 29, 2, '2018-11-29 08:47:40', '2018-11-29 08:47:40'),
(6681, 57, '145', 243, 29, 2, '2018-11-29 08:52:19', '2018-11-29 08:52:19'),
(6682, 58, '146', 243, 29, 2, '2018-11-29 08:52:19', '2018-11-29 08:52:19'),
(6683, 59, '152', 243, 29, 2, '2018-11-29 08:52:19', '2018-11-29 08:52:19'),
(6684, 60, '155', 243, 29, 2, '2018-11-29 08:52:19', '2018-11-29 08:52:19'),
(6685, 61, 'immutable', 243, 29, 2, '2018-11-29 08:52:19', '2018-11-29 08:52:19'),
(6752, 57, '145', 236, 29, 2, '2018-11-29 08:52:44', '2018-11-29 08:53:30'),
(6753, 58, '146', 236, 29, 2, '2018-11-29 08:52:44', '2018-11-29 08:53:30'),
(6754, 59, '152', 236, 29, 2, '2018-11-29 08:52:44', '2018-11-29 08:53:30'),
(6755, 60, '155', 236, 29, 2, '2018-11-29 08:52:44', '2018-11-29 08:53:30'),
(6756, 61, 'immutable', 236, 29, 2, '2018-11-29 08:52:44', '2018-11-29 08:53:30'),
(6832, 57, '142', 250, 29, NULL, '2018-11-29 08:53:15', '2018-11-29 08:53:15'),
(6833, 58, '146', 250, 29, NULL, '2018-11-29 08:53:15', '2018-11-29 08:53:15'),
(6834, 59, '152', 250, 29, NULL, '2018-11-29 08:53:15', '2018-11-29 08:53:15'),
(6835, 60, '155', 250, 29, NULL, '2018-11-29 08:53:15', '2018-11-29 08:53:15'),
(6836, 61, 'immutable', 250, 29, NULL, '2018-11-29 08:53:15', '2018-11-29 08:53:15'),
(6909, 57, '145', 229, 29, 2, '2018-11-29 08:53:51', '2018-11-29 08:53:52'),
(6910, 58, '146', 229, 29, 2, '2018-11-29 08:53:51', '2018-11-29 08:53:52'),
(6911, 59, '152', 229, 29, 2, '2018-11-29 08:53:51', '2018-11-29 08:53:52'),
(6912, 60, '155', 229, 29, 2, '2018-11-29 08:53:51', '2018-11-29 08:53:52'),
(6913, 61, 'immutable', 229, 29, 2, '2018-11-29 08:53:51', '2018-11-29 08:53:52'),
(7110, 48, '118', 237, 27, 2, '2018-11-29 08:55:33', '2019-01-02 08:04:34'),
(7111, 51, NULL, 237, 27, NULL, '2018-11-29 08:55:33', '2018-11-29 08:55:33'),
(7126, 57, '145', 244, 29, 2, '2018-11-29 08:55:43', '2018-11-29 08:55:43'),
(7127, 58, '147', 244, 29, 0, '2018-11-29 08:55:43', '2018-11-29 08:55:43'),
(7128, 59, '152', 244, 29, 2, '2018-11-29 08:55:43', '2018-11-29 08:55:43'),
(7129, 60, '155', 244, 29, 2, '2018-11-29 08:55:43', '2018-11-29 08:55:43'),
(7130, 61, 'Immutable', 244, 29, 0, '2018-11-29 08:55:43', '2018-11-29 08:55:43'),
(7267, 57, '142', 235, 29, 0, '2018-11-29 08:57:39', '2018-11-29 08:57:39'),
(7268, 58, '146', 235, 29, 2, '2018-11-29 08:57:39', '2018-11-29 08:57:40'),
(7269, 59, '152', 235, 29, 2, '2018-11-29 08:57:39', '2018-11-29 08:57:40'),
(7270, 60, '155', 235, 29, 2, '2018-11-29 08:57:39', '2018-11-29 08:57:40'),
(7271, 61, 'immutable', 235, 29, 2, '2018-11-29 08:57:39', '2018-11-29 08:57:40'),
(7294, 57, '145', 248, 29, 2, '2018-11-29 08:57:45', '2018-11-29 08:57:46'),
(7295, 58, '146', 248, 29, 2, '2018-11-29 08:57:45', '2018-11-29 08:57:46'),
(7296, 59, '152', 248, 29, 2, '2018-11-29 08:57:45', '2018-11-29 08:57:46'),
(7297, 60, '155', 248, 29, 2, '2018-11-29 08:57:45', '2018-11-29 08:57:46'),
(7298, 61, 'immutable', 248, 29, 2, '2018-11-29 08:57:45', '2018-11-29 08:57:46'),
(7309, 57, '145', 304, 29, 2, '2018-11-29 08:57:49', '2018-11-29 08:57:50'),
(7310, 58, '146', 304, 29, 2, '2018-11-29 08:57:49', '2018-11-29 08:57:50'),
(7311, 59, '152', 304, 29, 2, '2018-11-29 08:57:49', '2018-11-29 08:57:50'),
(7312, 60, '155', 304, 29, 2, '2018-11-29 08:57:49', '2018-11-29 08:57:50'),
(7313, 61, 'immutable', 304, 29, 2, '2018-11-29 08:57:49', '2018-11-29 08:57:50'),
(7533, 57, '145', 301, 29, 2, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(7534, 58, '146', 301, 29, 2, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(7535, 59, '152', 301, 29, 2, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(7536, 60, '155', 301, 29, 2, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(7537, 61, 'consept', 301, 29, 0, '2018-11-29 09:00:01', '2018-11-29 09:00:01'),
(7548, 57, '145', 303, 29, 2, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(7549, 58, '146', 303, 29, 2, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(7550, 59, '152', 303, 29, 2, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(7551, 60, '155', 303, 29, 2, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(7552, 61, 'costractor', 303, 29, 0, '2018-11-29 09:00:11', '2018-11-29 09:00:11'),
(7633, 57, '145', 299, 29, 2, '2018-11-29 09:00:37', '2018-11-29 09:00:37'),
(7634, 58, '149', 299, 29, 0, '2018-11-29 09:00:37', '2018-11-29 09:00:37'),
(7635, 59, '153', 299, 29, 0, '2018-11-29 09:00:37', '2018-11-29 09:00:37'),
(7636, 60, '154', 299, 29, 0, '2018-11-29 09:00:37', '2018-11-29 09:00:37'),
(7637, 61, 'private', 299, 29, 0, '2018-11-29 09:00:37', '2018-11-29 09:00:37'),
(7725, 57, '144', 302, 29, 0, '2018-11-29 09:01:00', '2018-11-29 09:01:01'),
(7726, 58, '146', 302, 29, 2, '2018-11-29 09:01:00', '2018-11-29 09:01:01'),
(7727, 59, '152', 302, 29, 2, '2018-11-29 09:01:01', '2018-11-29 09:01:01'),
(7728, 60, '154', 302, 29, 0, '2018-11-29 09:01:01', '2018-11-29 09:01:01'),
(7729, 61, 'private', 302, 29, 0, '2018-11-29 09:01:01', '2018-11-29 09:01:01'),
(7736, 57, '145', 300, 29, 2, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(7737, 58, '146', 300, 29, 2, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(7738, 59, '152', 300, 29, 2, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(7739, 60, '154', 300, 29, 0, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(7740, 61, NULL, 300, 29, 0, '2018-11-29 09:01:04', '2018-11-29 09:01:04'),
(7754, 57, '145', 306, 29, 2, '2018-11-29 09:01:11', '2018-11-29 09:01:11'),
(7755, 58, '146', 306, 29, 2, '2018-11-29 09:01:11', '2018-11-29 09:01:12'),
(7756, 59, '152', 306, 29, 2, '2018-11-29 09:01:11', '2018-11-29 09:01:12'),
(7757, 60, '155', 306, 29, 2, '2018-11-29 09:01:11', '2018-11-29 09:01:12'),
(7758, 61, 'immutable                                                                                              immutable', 306, 29, 0, '2018-11-29 09:01:11', '2018-11-29 09:01:12'),
(7848, 57, '142', 298, 29, 0, '2018-11-29 09:02:01', '2018-11-29 09:02:05'),
(7849, 58, '146', 298, 29, 2, '2018-11-29 09:02:01', '2018-11-29 09:02:05'),
(7850, 61, NULL, 298, 29, 0, '2018-11-29 09:02:01', '2018-11-29 09:02:05'),
(7871, 57, '145', 310, 29, 2, '2018-11-29 09:02:07', '2018-11-29 09:02:08'),
(7872, 58, '149', 310, 29, 0, '2018-11-29 09:02:08', '2018-11-29 09:02:08'),
(7873, 59, '152', 310, 29, 2, '2018-11-29 09:02:08', '2018-11-29 09:02:08'),
(7874, 60, '155', 310, 29, 2, '2018-11-29 09:02:08', '2018-11-29 09:02:08'),
(7875, 61, 'private', 310, 29, 0, '2018-11-29 09:02:08', '2018-11-29 09:02:08'),
(7886, 57, '145', 305, 29, 2, '2018-11-29 09:02:14', '2018-11-29 09:02:14'),
(7887, 58, '146', 305, 29, 2, '2018-11-29 09:02:14', '2018-11-29 09:02:14'),
(7888, 59, '152', 305, 29, 2, '2018-11-29 09:02:14', '2018-11-29 09:02:15'),
(7889, 60, '155', 305, 29, 2, '2018-11-29 09:02:14', '2018-11-29 09:02:15'),
(7890, 61, 'private', 305, 29, 0, '2018-11-29 09:02:14', '2018-11-29 09:02:15'),
(7891, 57, '145', 307, 29, 2, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(7892, 58, '146', 307, 29, 2, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(7893, 59, '152', 307, 29, 2, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(7894, 60, '155', 307, 29, 2, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(7895, 61, 'immutable', 307, 29, 2, '2018-11-29 09:02:15', '2018-11-29 09:02:15'),
(7896, 57, '145', 253, 29, 2, '2018-11-29 09:02:16', '2018-11-29 09:02:17'),
(7897, 58, '146', 253, 29, 2, '2018-11-29 09:02:16', '2018-11-29 09:02:17'),
(7898, 59, '152', 253, 29, 2, '2018-11-29 09:02:16', '2018-11-29 09:02:17'),
(7899, 60, '155', 253, 29, 2, '2018-11-29 09:02:16', '2018-11-29 09:02:17'),
(7900, 61, 'emmutable', 253, 29, 0, '2018-11-29 09:02:16', '2018-11-29 09:02:17'),
(7901, 57, '145', 297, 29, 2, '2018-11-29 09:02:24', '2018-11-29 09:02:25'),
(7902, 58, '146', 297, 29, 2, '2018-11-29 09:02:24', '2018-11-29 09:02:25'),
(7903, 59, '152', 297, 29, 2, '2018-11-29 09:02:24', '2018-11-29 09:02:25'),
(7904, 60, '155', 297, 29, 2, '2018-11-29 09:02:24', '2018-11-29 09:02:25'),
(7905, 61, 'private', 297, 29, 0, '2018-11-29 09:02:24', '2018-11-29 09:02:25'),
(7911, 57, '145', 315, 29, 2, '2018-11-29 09:02:47', '2018-11-29 09:02:47'),
(7912, 58, '146', 315, 29, 2, '2018-11-29 09:02:47', '2018-11-29 09:02:47'),
(7913, 59, '152', 315, 29, 2, '2018-11-29 09:02:47', '2018-11-29 09:02:47'),
(7914, 60, '155', 315, 29, 2, '2018-11-29 09:02:47', '2018-11-29 09:02:47'),
(7915, 61, 'private', 315, 29, 0, '2018-11-29 09:02:47', '2018-11-29 09:02:47'),
(7921, 57, '145', 312, 29, 2, '2018-11-29 09:02:55', '2018-11-29 09:02:55'),
(7922, 58, '146', 312, 29, 2, '2018-11-29 09:02:55', '2018-11-29 09:02:55'),
(7923, 59, '152', 312, 29, 2, '2018-11-29 09:02:55', '2018-11-29 09:02:55'),
(7924, 60, '155', 312, 29, 2, '2018-11-29 09:02:55', '2018-11-29 09:02:55'),
(7925, 61, 'private                                                                  private', 312, 29, 0, '2018-11-29 09:02:55', '2018-11-29 09:02:55'),
(7959, 57, '145', 308, 29, 2, '2018-11-29 09:03:10', '2018-11-29 09:03:11'),
(7960, 58, '146', 308, 29, 2, '2018-11-29 09:03:10', '2018-11-29 09:03:11'),
(7961, 59, '152', 308, 29, 2, '2018-11-29 09:03:10', '2018-11-29 09:03:11'),
(7962, 60, '155', 308, 29, 2, '2018-11-29 09:03:10', '2018-11-29 09:03:11'),
(7963, 61, 'immutable', 308, 29, 2, '2018-11-29 09:03:10', '2018-11-29 09:03:11'),
(7976, 57, '145', 313, 29, 2, '2018-11-29 09:03:27', '2018-11-29 09:03:27'),
(7977, 58, '149', 313, 29, 0, '2018-11-29 09:03:27', '2018-11-29 09:03:27'),
(7978, 59, '152', 313, 29, 2, '2018-11-29 09:03:27', '2018-11-29 09:03:28'),
(7979, 60, '155', 313, 29, 2, '2018-11-29 09:03:27', '2018-11-29 09:03:28'),
(7980, 61, 'immutable', 313, 29, 2, '2018-11-29 09:03:27', '2018-11-29 09:03:28'),
(7990, 57, '142', 311, 29, 0, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(7991, 58, '149', 311, 29, 0, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(7992, 59, '150', 311, 29, 0, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(7993, 60, '155', 311, 29, 2, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(7994, 61, 'imutable', 311, 29, 0, '2018-11-29 09:04:03', '2018-11-29 09:04:03'),
(8000, 57, '145', 314, 29, 2, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(8001, 58, '148', 314, 29, 0, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(8002, 59, '152', 314, 29, 2, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(8003, 60, '155', 314, 29, 2, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(8004, 61, 'privet', 314, 29, 0, '2018-11-29 09:04:37', '2018-11-29 09:04:37'),
(8132, 66, '170', 231, 31, 2, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8133, 68, '179', 231, 31, 2, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8134, 69, '185', 231, 31, 2, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8135, 70, '186', 231, 31, 1, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8136, 71, '188', 231, 31, 0, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8137, 72, '190', 231, 31, 1, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8138, 73, 'fdgdsfggbfds', 231, 31, 0, '2018-12-01 07:37:08', '2019-01-20 11:37:17'),
(8139, 74, 'ertewrt           dsfgwwege', 231, 31, 0, '2018-12-01 07:37:08', '2019-01-20 11:37:17'),
(8140, 76, 'erwtwert', 231, 31, 0, '2018-12-01 07:37:08', '2019-01-20 11:51:01'),
(8141, 77, '195', 231, 31, 2, '2018-12-01 07:37:08', '2018-12-01 07:37:08'),
(8241, 66, '170', 237, 31, 2, '2018-12-01 07:41:06', '2018-12-01 07:41:07'),
(8242, 68, '179', 237, 31, 2, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(8243, 69, '185', 237, 31, 2, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(8244, 70, '186', 237, 31, 1, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(8245, 71, '189', 237, 31, 1, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(8246, 72, '190', 237, 31, 1, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(8247, 73, 'hjjgh', 237, 31, 0, '2018-12-01 07:41:07', '2019-01-20 11:39:32'),
(8248, 74, 'ghff', 237, 31, 0, '2018-12-01 07:41:07', '2019-01-20 11:39:32'),
(8249, 76, 'gfffjfg', 237, 31, 0, '2018-12-01 07:41:07', '2019-01-20 11:53:22'),
(8250, 77, '195', 237, 31, 2, '2018-12-01 07:41:07', '2018-12-01 07:41:07'),
(47497, 66, '171', 113, 31, 0, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47498, 68, '179', 113, 31, 2, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47499, 69, '182', 113, 31, 0, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47500, 70, '187', 113, 31, 0, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47501, 71, '189', 113, 31, 1, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47502, 72, '190', 113, 31, 1, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47503, 73, 'public class Item{\r\npublic double price;   public String name;\r\npublic Item(double p,String s){\r\nprice=p; name=s; }\r\n public double calcNetPrcie(double price,double discount){\r\n             return price*discount;                                                                                                   \r\n         }    \r\n}', 113, 31, 2, '2018-12-01 09:10:33', '2019-01-20 11:44:02'),
(47504, 74, 'public class Biscuits extends Item {                                                                                                             \r\n                 public double discount;\r\n          public Biscuits(double pr,double di){\r\n                 super(pr);\r\n              di=0.07;\r\n                       }\r\npublic double calcNetPrcie(double pr,double di){\r\n             return pr*di;                                                                                                   \r\n         }    \r\n}', 113, 31, 1, '2018-12-01 09:10:33', '2019-01-20 11:42:17'),
(47505, 76, 'public class Employee{\r\n    public double salary;\r\n       public String name;\r\n    \r\n     public double calcTax(double w,double e){\r\nw=CalcTaxW(); e=CalcTaxE();\r\nreturn w+e; }\r\n}\r\npublic class Worker extends Employee{\r\n \r\npublic Worker (double s,String n){\r\n      super(s,n)   \r\n}\r\npublic double CalcTaxW(){\r\nreturn salary*0.05;\r\n}\r\n}\r\npublic class Engineer extends Employee {\r\n\r\npublic String departement;\r\npublic Employee(double s,String n,String d){\r\nsuper(s,n)\r\ndepartement=d;\r\n }\r\n\r\npublic double CalcTaxE(){\r\nreturn salary*0.05;\r\n}\r\n}\r\npublic class Test{\r\npublic static void man(Sring[]a){\r\nEmploee w=new Worker(); \r\nEmploee e1=new Engineer();\r\nEmploee e2=new Engineer();\r\nSystem.out.println(e2.calcTax(e2,e1,w));', 113, 31, 4, '2018-12-01 09:10:33', '2019-01-17 15:04:18'),
(47506, 77, '195', 113, 31, 2, '2018-12-01 09:10:33', '2018-12-01 09:10:34'),
(47680, 66, '170', 143, 31, 2, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47681, 68, '179', 143, 31, 2, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47682, 69, '185', 143, 31, 2, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47683, 70, '186', 143, 31, 1, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47684, 71, '189', 143, 31, 1, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47685, 72, '190', 143, 31, 1, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47686, 73, 'public class Item {\r\n   double price ;\r\n   String name ;\r\n\r\n   public double calcNetPrice (double percent){\r\n      double reduction = price * percent ;\r\n      return price - reduction ; \r\n\r\n  }\r\n}', 143, 31, 2, '2018-12-01 09:11:10', '2019-01-20 11:44:42'),
(47687, 74, 'public class Biscuits extends Item {\r\n\r\n   public Biscuits (){\r\n      price = calcNetPrice(7);\r\n}\r\n\r\n}', 143, 31, 2, '2018-12-01 09:11:10', '2019-01-20 11:44:42'),
(47688, 76, 'public class Human {\r\n  String name ;\r\n  double salary ;\r\n\r\n  public double calcTax(){\r\n    return salary*0.07;\r\n}\r\n\r\npublic class Worker extends Human {\r\n\r\n}\r\n\r\npublic class Engineer extends Human {\r\n   String department ;\r\n}\r\n\r\n\r\nimport Java.util.Scanner ;\r\n\r\npublic class Test {\r\n\r\n  public static void main (){\r\n    Worker w = new Worker () ;\r\n    Engineer e1 = new Engineer () ;\r\n    Engineer e2 = new Engineeer () ;\r\n    Scanner sc = new Scanner (System.in) ;\r\n    w.name = sc.nextLine()\r\n    sc.nextline () ;\r\n    w.salary = sc.nextDouble() ;\r\n    e1.name = sc.nextLine()\r\n    sc.nextline () ;\r\n    e1.salary = sc.nextDouble() ;\r\n    e2.name = sc.nextLine()\r\n    sc.nextline () ;\r\n    e2.salary = sc.nextDouble() ;\r\n    System.out.println(w.calcTax + e1.calcTax + e2.calcTax) ;\r\n  }\r\n}', 143, 31, 1, '2018-12-01 09:11:10', '2019-01-17 15:12:42'),
(47689, 77, '195', 143, 31, 2, '2018-12-01 09:11:10', '2018-12-01 09:11:10'),
(47797, 66, '171', 108, 31, 0, '2018-12-01 09:11:42', '2019-01-30 06:58:05'),
(47798, 70, '186', 108, 31, 1, '2018-12-01 09:11:42', '2019-01-30 06:58:05'),
(47800, 71, '189', 108, 31, 1, '2018-12-01 09:11:42', '2019-01-30 06:58:05'),
(47802, 72, '190', 108, 31, 1, '2018-12-01 09:11:42', '2019-01-30 06:58:05'),
(47804, 73, 'public class item {\r\ndouble price;\r\nString name;\r\n\r\npublic item (double p , String n){\r\n\r\nprice=p;\r\nname=n;\r\n}\r\n\r\npublic double calcNetPrice (double d ){\r\n\r\nreturn price*(1-(d/100));\r\n}\r\n\r\n}', 108, 31, 2, '2018-12-01 09:11:43', '2019-01-20 11:40:58'),
(47806, 74, NULL, 108, 31, 0, '2018-12-01 09:11:43', '2019-01-20 11:40:58'),
(47808, 76, NULL, 108, 31, 0, '2018-12-01 09:11:43', '2019-01-20 11:53:06'),
(48664, 66, '166', 114, 31, 0, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48665, 68, '181', 114, 31, 0, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48666, 69, '182', 114, 31, 0, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48667, 70, '186', 114, 31, 1, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48668, 71, '189', 114, 31, 1, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48669, 72, '190', 114, 31, 1, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(48670, 73, 'public class item\r\n {\r\nprivate float price;\r\nprivate string name;\r\nfloat sum=0;\r\npublic void calcNetprice ()\r\n{\r\nsystem.out.println(\"plz enter price\");\r\nsum+=price;\r\nsystem.out.println(\"net price=\"+sum);\r\n}\r\n}', 114, 31, 1, '2018-12-01 09:13:17', '2019-01-20 11:45:34'),
(48671, 74, 'public class biscuits extends item class\r\n{\r\n\r\n}', 114, 31, 1, '2018-12-01 09:13:17', '2019-01-20 11:45:34'),
(48672, 76, 'public class employee\r\n{\r\n  employee.worker(string name,float salary);\r\nemployee.engineer(string name, float salary ,string department);\r\n\r\n\r\n}', 114, 31, 0, '2018-12-01 09:13:17', '2019-01-17 15:17:06'),
(48673, 77, '194', 114, 31, 0, '2018-12-01 09:13:17', '2018-12-01 09:13:17'),
(49099, 66, '166', 93, 31, 0, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49100, 68, '178', 93, 31, 0, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49101, 69, '183', 93, 31, 0, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49102, 70, '186', 93, 31, 1, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49103, 71, '189', 93, 31, 1, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49104, 72, '191', 93, 31, 0, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49105, 73, 'class item {\r\npublic int price;\r\npublic string name;\r\npublic int discount;\r\npublic item{\r\nname=n;\r\nprice=p;\r\ndiscount=d;\r\n\r\n{      public void   calcNetPrcie  (){  \r\ndiscount n=new discount();\r\nn.discount=p-d;\r\n}}', 93, 31, 1, '2018-12-01 09:14:06', '2019-01-20 11:46:05'),
(49106, 74, 'public class Biscuits extends item{\r\npublic Biscuits()\r\n{public static discount=0.07;\r\n}\r\n}', 93, 31, 1, '2018-12-01 09:14:06', '2019-01-20 11:46:05'),
(49107, 76, 'class worker{\r\npublic string name;\r\npublic int salary;\r\npublic worker {\r\nname=\"Ahmed\";\r\nsalary=150;\r\n}}    \r\n\r\npublic class engineer extends worker{\r\npublic engineer(string n,int s,string d){\r\ndepartment =d;}\r\n}', 93, 31, 1, '2018-12-01 09:14:06', '2019-01-17 15:19:14'),
(49108, 77, '193', 93, 31, 0, '2018-12-01 09:14:06', '2018-12-01 09:14:06'),
(49274, 66, '170', 153, 31, 2, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49275, 68, '179', 153, 31, 2, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49276, 69, '185', 153, 31, 2, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49277, 70, '186', 153, 31, 1, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49278, 71, '189', 153, 31, 1, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49279, 72, '190', 153, 31, 1, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(49280, 73, 'public class Item {\r\ndouble price;\r\nstring name;\r\npuplic void calcNetprice(double discount){\r\ndiscount=price*(discount/100);\r\nprice-=discount;\r\n}\r\n}', 153, 31, 2, '2018-12-01 09:14:57', '2019-01-20 11:46:35'),
(49281, 74, 'class Biscuits extends item{\r\nfinal double discount;\r\nBiscutes(string name, double price)\r\n{\r\nsuper(price,name)\r\n}\r\npublic void calcNetprice()\r\n{    \r\ndiscount=price*(discount/100);                                                                                                            \r\n price-=discount;\r\n}\r\n}', 153, 31, 2, '2018-12-01 09:14:57', '2019-01-20 11:46:35'),
(49282, 76, 'class employee{\r\npublic string  name;\r\npublic double salary;\r\npublic employee(string name,double salary)\r\n{\r\nThis.name=name;\r\nThis.salary=salary;\r\n}\r\npublic double gettax(){\r\ndouble tax=salary*(0.05/100);\r\nsalary+=tax;\r\nreturn salary;\r\n}\r\n}\r\nclass Engineer extends employee{\r\npublic string departement;\r\npublic Engineer(string name,double salary,string departement){\r\nsuper(name,salary);\r\nThis.departement=departement;\r\n}\r\nclass Main{\r\npublic static void main(string[] args)\r\n{', 153, 31, 1, '2018-12-01 09:14:57', '2019-01-20 11:54:49'),
(49283, 77, '195', 153, 31, 2, '2018-12-01 09:14:57', '2018-12-01 09:14:57'),
(52428, 66, '166', 116, 31, 0, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52429, 68, '181', 116, 31, 0, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52430, 69, '185', 116, 31, 2, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52431, 70, '186', 116, 31, 1, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52432, 71, '189', 116, 31, 1, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52433, 72, '191', 116, 31, 0, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(52434, 73, 'class item{\r\n public String name ;\r\npublic double price ;\r\nitem(String n, double p){\r\nname=n;\r\nprice=p;\r\n}\r\n\r\npublic double calcNetPrcie( double discountRate) {\r\ndouble r=price *(discount/100);\r\nreturn price-r;\r\n}\r\n                                                                                                                    \r\n   }', 116, 31, 2, '2018-12-01 09:20:46', '2019-01-20 11:47:32'),
(52435, 74, 'public class Biscuits  extends  item{\r\nfinal   double discount=7/100;\r\ndouble t=calcNetPrcie(discount);\r\n\r\n\r\n}', 116, 31, 1, '2018-12-01 09:20:46', '2019-01-20 11:47:32'),
(52436, 76, 'public class   worker {\r\nString name ;\r\ndouble salary;\r\nfinal double tax=5/100;\r\nworker (String n , double s){\r\nname=n;\r\nsalary=s;\r\n} \r\npublic double taxsalary(){\r\ndouble r=salary*tax;\r\nreturn r;\r\n}\r\n\r\n\r\n}                                                                                                              \r\n   \r\npublic class Engineer extends worker {\r\n\r\nString department;\r\n\r\n\r\npublic Engineer (String n,double s,String department){\r\nsuper(n,s);\r\nthis.department=department;\r\n}\r\n\r\n}                                                     \r\n                                                                                                                    \r\n                                                                                                                                                                \r\n        import java.util.Scanner;                                                \r\n  class main{\r\npublic static void main(String[] args) {\r\nScanner input=new Scanner(System.in);\r\nString s, s1,s2,dp,dp1 ;\r\ndouble salary, salary1, salary2;\r\nSystem.out.println(\"enter name and salary for worker\");\r\ns=input.next();\r\n\r\nsalary=input.nextDouble();\r\n\r\n\r\nworker worker1=new worker(s,salary);\r\n\r\nSystem.out.println(\"enter name , salary and department for engineer1\");\r\ns1=input.next();\r\nsalary1=input.nextDouble();\r\ndp=input.next();\r\nEngineer Engineer1 =new Engineer(s1, salary1,dp);\r\nSystem.out.println(\"enter name , salary and department for engineer2\");\r\ns2=input.next();\r\nsalary2=input.nextDouble();\r\ndp1=input.next();\r\nEngineer Engineer2=new Engineer(s2,salary,dp1);\r\n\r\nSystem.out.println(\"total amount of collected taxes from all employees are \"+worker1.taxsalary()+Engineer1.taxsalary()+Engineer2.taxsalary()); \r\n\r\n\r\n\r\n\r\n}\r\n}', 116, 31, 5, '2018-12-01 09:20:46', '2019-01-20 12:16:42'),
(52437, 77, '195', 116, 31, 2, '2018-12-01 09:20:46', '2018-12-01 09:20:46'),
(53244, 66, '170', 207, 31, 2, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53245, 68, '179', 207, 31, 2, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53246, 69, '183', 207, 31, 0, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53247, 70, '186', 207, 31, 1, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53248, 71, '189', 207, 31, 1, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53249, 72, '190', 207, 31, 1, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(53250, 73, 'public static void main(String[] args)\r\n {            \r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n                                                                                                  \r\n  public class Item {\r\n          public double price;\r\n          public string name;\r\n}\r\nclass  calcNetPrcie {\r\n\r\n\r\n}', 207, 31, 1, '2018-12-01 09:21:55', '2019-01-20 11:48:01'),
(53251, 74, 'public class inherits Item\r\n{\r\ndouble discount;\r\npublic biscuits string \r\n\r\n}', 207, 31, 0, '2018-12-01 09:21:55', '2019-01-20 11:48:01'),
(53252, 76, 'import java.util.Scanner\r\npublic static void main(String[] args)\r\n{\r\n\r\n\r\n}                                                                                                           \r\n public class employee{\r\npublic String name;\r\npublic double salary; \r\n\r\n\r\n}    \r\npublic class  engineer {\r\npublic string name;\r\npublic double salary;\r\npublic string department;    \r\n\r\n\r\n}', 207, 31, 1, '2018-12-01 09:21:55', '2019-01-20 12:14:15'),
(53253, 77, '195', 207, 31, 2, '2018-12-01 09:21:55', '2018-12-01 09:21:55'),
(54711, 66, '170', 156, 31, 2, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54712, 68, '178', 156, 31, 0, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54713, 69, '182', 156, 31, 0, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54714, 70, '186', 156, 31, 1, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54715, 71, '189', 156, 31, 1, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54716, 72, '191', 156, 31, 0, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54717, 73, 'public class Item (){\r\nprivate double price ;\r\nprivate string name ;\r\npublic double calcNetPrice( double discount) \r\n{\r\ndouble p = price - ( price * discount ) ;\r\nreturn p ;\r\n  }\r\n}', 156, 31, 2, '2018-12-01 09:24:26', '2019-01-20 11:48:51'),
(54718, 74, 'public class Biscuits extends Item () \r\n{\r\ndouble discount = 0.07 ;\r\nSuper.calcNetPrice(0.07);        \r\n}', 156, 31, 2, '2018-12-01 09:24:26', '2019-01-20 11:48:51'),
(54719, 76, 'public class worker () \r\n{\r\nPublic string name ;\r\npublic double salary;\r\n\r\npublic class worker ( string n , double s )\r\n   {\r\nname = n;\r\nsalary = s;\r\n   }\r\n}\r\npublic class Engineer () \r\n{\r\npublic string name ;\r\npublic double salary ;\r\npublic string department ;\r\npublic class Engineer ( string n , double s, double d )\r\n{\r\nname = n ;\r\nsalary = s ;\r\ndepartment = d ;\r\n}\r\npublic double tax ( double s )\r\n{\r\ndouble s = salary * 0.05 ;\r\nreturn s ;\r\n}\r\n}\r\npublic void main ( string [ ] args )\r\n{\r\nSystem.out.print(\"please enter data of Worker 1 : \")\r\nWorker w1 = new Worker ();\r\nSystem.out.print(\"please enter data of Engineer 1 : \")\r\nEngineer E1 = new Engineer () ;\r\nSystem.out.print(\"please enter data of Engineer 2 : \")\r\nEngineer E2 = new Engineer () ;\r\ndouble a , b ,c ;\r\na = w1 .tax();\r\nb=E1 .tax();\r\nc=E2 .tax();\r\ndouble total = a + b + c ;\r\nSystem.out.println( \" The total amount of collected taxes is : \" + total + \" $ \" );\r\n}', 156, 31, 2, '2018-12-01 09:24:26', '2019-01-20 11:52:27'),
(54720, 77, '195', 156, 31, 2, '2018-12-01 09:24:26', '2018-12-01 09:24:27'),
(54807, 66, '170', 115, 31, 2, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54808, 68, '179', 115, 31, 2, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54809, 69, '185', 115, 31, 2, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54810, 70, '186', 115, 31, 1, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54811, 71, '189', 115, 31, 1, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54812, 72, '190', 115, 31, 1, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(54813, 73, 'public class Item{ \r\n        double price;\r\n        string name;\r\n        public double calcNetPrice( double p, double d){\r\n              System.out.println(\"enter the discount \");\r\n              Scanner input = new Scanner(\"System.in\");\r\n              double d =input.nextDouble();\r\n              p=price;\r\nreturn p*d/100;\r\n}\r\n\r\n}', 115, 31, 1, '2018-12-01 09:24:43', '2019-01-20 11:49:11'),
(54814, 74, 'public class Biscuits extends Item{\r\n	final double discount = 7;\r\n}', 115, 31, 1, '2018-12-01 09:24:43', '2019-01-20 11:49:11'),
(54815, 76, 'public class ManageHumRes{\r\npublic static viod mian(string[] args){\r\nWorker work1 = new Worker(String n, double s);\r\nEnginer eng1 = new Enginer(String n, double s);\r\nEnginer eng2 = new Enginer(String n, double s);\r\nSystem.out.print(\"the total amount of collected taxes from all employees is : \" + worker1.tax + eng1.tax + eng2.tax);\r\n\r\n}\r\n\r\n}\r\n\r\n\r\npublic class Worker{\r\n	string name;\r\n	double salary;\r\n	public Worker(string n, double s){\r\n	name = n;\r\n	salary = s;\r\n}\r\n	public double tax(){\r\n	return salary*5/100;\r\n}\r\n}\r\n\r\npublic class Engineer extends Worker {\r\n	string department;\r\n}', 115, 31, 5, '2018-12-01 09:24:43', '2019-01-20 12:18:00'),
(54816, 77, '195', 115, 31, 2, '2018-12-01 09:24:43', '2018-12-01 09:24:43'),
(55040, 66, '170', 120, 31, 2, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55041, 68, '179', 120, 31, 2, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55042, 69, '185', 120, 31, 2, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55043, 70, '186', 120, 31, 1, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55044, 71, '189', 120, 31, 1, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55045, 72, '190', 120, 31, 1, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55046, 73, 'public class  Item {\r\ndouble price ;\r\nString name ;\r\ndouble discount;\r\npublic Item()\r\n{\r\n}         \r\npublic Item(double p , String n,double d)\r\n{\r\nprice=p;\r\nname = n ;\r\ndiscount = d;\r\n}\r\npublic double calcNetPrice(double price , double  discount)\r\n{\r\nreturn price - discount ; \r\n}\r\n}', 120, 31, 1, '2018-12-01 09:25:01', '2019-01-20 11:49:42'),
(55047, 74, 'public class Biscuits extends Item {\r\npublic Biscuits (){\r\n}\r\npublic Biscuits (String name , double price , double discount){\r\nsuper(name,price,discount);\r\n}\r\n\r\n}\r\n................................................................\r\npublic class Test { \r\npublic static void main(String[] args) { \r\nBiscuits b1= new Biscuits (\"Biscuits\",2000,(2000*0.07));\r\nb1.calcNetPrice(2000, (2000*0.07))\r\n} \r\n}', 120, 31, 1, '2018-12-01 09:25:01', '2019-01-20 11:49:42'),
(55048, 76, 'public class Worker{\r\nString name ;\r\ndouble salary ;\r\ndouble tax = 0.05*salary;\r\npublic Worker()\r\n{\r\n\r\n}\r\npublic Worker(String n , double s)\r\n{\r\nname = n;\r\nsalary=s ;\r\n}\r\n@override\r\npublic void print (){\r\nsystem.out.println(\"The salary after tax is : \"+salary-tax);\r\n}\r\n}\r\n......................................\r\npublic class Engineer extends Worker {\r\nString department ;\r\npublic Engineer()\r\n{\r\n}   \r\npublic Engineer(String n , double s,String d)\r\n{\r\nsuper(n,s);\r\ndepartment = d ;\r\n}   \r\n@override\r\npublic void print (){\r\nsystem.out.println(\"The salary after tax is : \"+salary-tax);\r\n}\r\n} \r\n...................................................................\r\npublic class Test { \r\npublic static void main(String[] args) { \r\nWorker w1 = new worker (\"Ahmed\",2000);\r\nEngineer e1 = new Engineer (\"Mohammed \", 3000,\"IS\");\r\nEngineer e2 = new Engineer (\"Michael\", 4000,\"IT\");\r\nw1.print();\r\ne1.print();\r\ne2.print();\r\n}', 120, 31, 3, '2018-12-01 09:25:01', '2019-01-20 12:20:25'),
(55049, 77, '195', 120, 31, 2, '2018-12-01 09:25:01', '2018-12-01 09:25:01'),
(55439, 66, '173', 100, 31, 0, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55440, 68, '179', 100, 31, 2, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55441, 69, '184', 100, 31, 0, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55442, 70, '186', 100, 31, 1, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55443, 71, '188', 100, 31, 0, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55444, 72, '191', 100, 31, 0, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55445, 73, 'public class item ()\r\n{\r\ndouble prcie;\r\nstring name;\r\ndouble discount ;\r\npublic item( )\r\n{\r\ndouble prcie=p ;\r\n  string name=n ;\r\n double discount=d ;\r\n}\r\npublic double calcnetprice()\r\n}                                                                                                                \r\n    return prcie +discout ;\r\n{', 100, 31, 2, '2018-12-01 09:25:43', '2019-01-20 11:51:25'),
(55446, 74, 'public class biscuits extends item {\r\npublic biscuits(){\r\ndiscountvalue=price+discount %7;\r\nSystem.out.println(discountvalue);\r\n\r\n}\r\n}', 100, 31, 1, '2018-12-01 09:25:43', '2019-01-20 11:51:25'),
(55447, 76, 'import java.util scanner;\r\npublic static void;\r\npublic class company();\r\n{\r\nSystem.out.println(enter your name and salary);\r\nimport scanner =new scanner(system.in);\r\nworker(string workername    double workersalary  )\r\nstring workername= new workername()\r\ndouble workersalary =new workersalary()\r\ntax1()\r\ndouble tax1=workersalary%5;\r\n\r\n}  \r\n\r\n{\r\nSystem.out.println(enter your name and salary and departement);\r\nimport scanner =new scanner(system.in);                                           \r\nengineers(string engineername   double engineer salary string engineerdepartement  )                                                                  \r\n         string engineername= newengineername()\r\ndoubleengineersalary =newengineersalary()                                           \r\nstring engineerdepartement=newengineerdepartement()\r\ntax2()\r\ndouble tax2=engineersalary%5;\r\n}\r\ntax3()\r\ndouble tax3=tax1+tax2;\r\nSystem.out.println(tax3)\r\n}', 100, 31, 0, '2018-12-01 09:25:43', '2019-01-20 12:23:50'),
(55448, 77, '193', 100, 31, 0, '2018-12-01 09:25:43', '2018-12-01 09:25:44'),
(55832, 66, '173', 97, 31, 0, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55833, 68, '178', 97, 31, 0, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55834, 69, '185', 97, 31, 2, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55835, 70, '186', 97, 31, 1, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55836, 71, '188', 97, 31, 0, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55837, 72, '191', 97, 31, 0, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55838, 73, 'import . java.util \r\n public class Item {                                                                                                           \r\n\r\n   public static void main (String[] args ){        \r\nScanner input = new Scanner (System.in )\r\nString name ;\r\nint price ;\r\nSystem.out.println (\" Please Enter The price \");\r\nprice=input.nextInt() ;\r\n\r\nSystem.out.println (\" Please Enter The name \");\r\nname=input.nextString();\r\n\r\nSystem.out.println (\" Please Enter The value of the discount \");\r\ndouble discountValue = input.nextDouble ();\r\ncalcNetPrcie(double discountValue, int price );\r\nSystem.out.println(\"The price of \"+name+\"before discount is \"+price+\"and theafter the disount is \"+calcNetPrcie())}\r\n\r\npublic static int calcNetPrcie (double  discountValue , int price){\r\ndouble priceAfterDiscount =price / (discount value /100);\r\nreturn priceAfterDiscount ;\r\n\r\n\r\n\r\n                                        }}', 97, 31, 0, '2018-12-01 09:26:16', '2019-01-20 11:53:37'),
(55839, 74, 'public class biscuits extends item {\r\nname = \"biscuits\";\r\ndiscountValue = 7;\r\nprice =input.nextInt ();\r\ncalcNetPrice(discountValue , price ) ;\r\nSystem.out.println(\"The price of Biscuits before discount is \"+price+\"and theafter the disount is \"+calcNetPrcie());\r\n}', 97, 31, 2, '2018-12-01 09:26:16', '2019-01-20 11:53:37');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(55840, 76, 'import . java.util \r\n public class employees { \r\npublic static void main(String[] args) { \r\n\r\nString workerName ,  fEngineerName , sEngineerName;\r\nint workerSalary ,fEngineerSalary , sEngineerSlary;\r\nString fEngineerDepartment , sEngineerDepartment ;\r\n\r\nScanner input = new Scanner (System.in) ;\r\n\r\nSystem.out.println(\"We will ensert  the data of the worker\" ) ;\r\nSystem.out.println(\"insert the workers name \" ) ;\r\n\r\nworkerName = input.nextString() ;\r\nSystem.out.println(\"insert the workers salary \" ) ;\r\n\r\n\r\nworkerSalary = input.nextInt();\r\nSystem.out.println(\"We will insert  the data of theFirst Engineer\" ) ;\r\nSystem.out.println(\"insert the engineers name \" ) ;\r\n\r\n fEngineerName=input.nextInt() ;\r\n\r\n\r\nSystem.out.println(\"insert the engineers salary \" ) ;\r\n\r\nfEngineerSalary=input.nextInt();\r\n\r\nSystem.out.println(\"insert the engineers Department\" ) ;\r\nfEngineerDepartment=input.nextInt () ;\r\n*************************************************-*********\r\nSystem.out.println(\"We will insert  the data of the second Engineer\" ) ;\r\nSystem.out.println(\"insert the engineers name \" ) ;\r\n\r\n sEngineerName=input.nextInt() ;\r\n\r\n\r\nSystem.out.println(\"insert the engineers salary \" ) ;\r\n\r\nsEngineerSalary=input.nextInt();\r\n\r\nSystem.out.println(\"insert the engineers Department\" ) ;\r\nsEngineerDepartment=input.nextInt () ;\r\n\r\n\r\n\r\n\r\n\r\n}}', 97, 31, 1, '2018-12-01 09:26:16', '2019-01-20 12:26:56'),
(55841, 77, '194', 97, 31, 0, '2018-12-01 09:26:16', '2018-12-01 09:26:16'),
(55862, 66, '170', 144, 31, 2, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55863, 68, '179', 144, 31, 2, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55864, 69, '185', 144, 31, 2, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55865, 70, '186', 144, 31, 1, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55866, 71, '189', 144, 31, 1, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55867, 72, '190', 144, 31, 1, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(55868, 73, 'public class Item{\r\ndouble price;\r\nString name;\r\npublic double calcNetPrcie (double price){\r\ndouble priceafterdiscount=price*0.7;\r\nreturn priceafterdiscount;\r\n}                       \r\n  Item (){\r\nname=\"ahmed\";\r\nprice=3.0;\r\n}         \r\nItem(double price,String name){\r\nthis.price=price;\r\nthis.name=name;\r\n}\r\npublic double getPrice(){\r\nreturn price;\r\n}   \r\npublic double getName(){\r\nreturn name;\r\n}    \r\npublic void setPrice(double price){\r\nthis.price=price;\r\n} \r\npublic void setName(String name){\r\nthis.name=name;\r\n}                                                               \r\n }', 144, 31, 2, '2018-12-01 09:26:20', '2019-01-20 11:54:11'),
(55869, 74, 'public  class Biscuits extends Item  {   \r\nBiscuits (){}\r\n         }', 144, 31, 1, '2018-12-01 09:26:20', '2019-01-20 11:54:11'),
(55870, 76, 'public class human{\r\npublic  String name;\r\npublic  double salary;\r\npublic static double tax;\r\n     human(){\r\nname =\"ahmed\";\r\nsalary=3222;\r\ntax++;\r\n}\r\nhuman(String name, double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\ntax++;\r\n}  \r\n}\r\n  class worker extends person(){\r\nworker (){}\r\nworker (String name, double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\nworker (String name, double salary){\r\nsuper(name,salary);\r\n}\r\n}\r\nclass Engineer extends human {\r\n String department;\r\nEngineer(){}\r\nEngineer( String department){\r\nthis.department=department;\r\n}                                                                                         \r\n Engineer(String name, double salary,String department){\r\nsuper(name,salary,department);\r\n}\r\n }     \r\npublic static void  main(args[]string){   \r\n  human  s1=new human ();   \r\n   worker  s2= new worker() ; \r\n    Engineer  s3=new Engineer ();   \r\nSystem.out.println(tax);\r\n}', 144, 31, 2, '2018-12-01 09:26:20', '2019-01-20 12:29:39'),
(55871, 77, '195', 144, 31, 2, '2018-12-01 09:26:20', '2018-12-01 09:26:20'),
(56074, 66, '173', 101, 31, 0, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56075, 68, '181', 101, 31, 0, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56076, 69, '182', 101, 31, 0, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56077, 70, '186', 101, 31, 1, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56078, 71, '189', 101, 31, 1, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56079, 72, '191', 101, 31, 0, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56080, 73, 'public class item{\r\nString name;\r\ndouble price;\r\npublic item()\r\n{\r\n\r\n}\r\npublic item(n,p)\r\n{\r\n\r\n}\r\npublic set_name(string n)\r\n{\r\nname =n;\r\n}\r\npublic set_price(double p)\r\n{\r\nprice = p;\r\n}\r\npublic get_name()\r\n{\r\nreturn name ;\r\n}\r\npublic get_price()\r\n{\r\nreturn price;\r\n}\r\npublic calcNetprice()\r\n{\r\n}\r\n\r\n}', 101, 31, 1, '2018-12-01 09:26:44', '2019-01-20 11:54:34'),
(56081, 74, 'public class Biscuits extends item\r\n{\r\nprice_biscuits*=7%; \r\n\r\n}', 101, 31, 1, '2018-12-01 09:26:44', '2019-01-20 11:54:35'),
(56082, 76, 'public class employee{\r\nString name;\r\ndouble salary ;\r\ndouble  tax ;\r\npublic employee ()\r\n{\r\n}\r\npublic employee(String n , String d , double s,double t)\r\n{\r\n\r\n}\r\npublic class Engineer extends employee {\r\nString department ;\r\n{\r\npublic set_name (String n){\r\nname = n;\r\n}\r\npublic set_salary(double s){\r\nsalary = s;\r\n}\r\npublic set_department( String d){\r\ndepartment = d;\r\n}\r\npublic set_tax(double t){\r\ntax = t ;\r\n}\r\npublic get_name()\r\n{\r\nreturn name;\r\n}\r\npublic get_salary()\r\n{\r\nreturn salary;\r\n}\r\npublic get_department(){\r\nreturn department;\r\n}\r\npublic get_tax()\r\nreturn tax;\r\n}                                                                                                                 \r\n    }     \r\n           public static void main(String[] args) {\r\nemployee e =new employee ();\r\nSystem.out.println ( e.get_tax);\r\n}', 101, 31, 2, '2018-12-01 09:26:44', '2019-01-27 08:30:32'),
(56083, 77, '195', 101, 31, 2, '2018-12-01 09:26:44', '2018-12-01 09:26:44'),
(56122, 66, '170', 88, 31, 2, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56123, 68, '181', 88, 31, 0, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56124, 69, '182', 88, 31, 0, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56125, 70, '186', 88, 31, 1, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56126, 71, '189', 88, 31, 1, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56127, 72, '190', 88, 31, 1, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56128, 73, 'public class Item {\r\n    String name;\r\n    double price;\r\npublic Item() {}\r\npublic Item (double p){\r\n     price = p;\r\n}\r\npublic static double calcNetPrcie (double price){ \r\n       return (price*0.07);\r\n} \r\n}', 88, 31, 2, '2018-12-01 09:26:56', '2019-01-20 11:55:08'),
(56129, 74, 'public class Biscuits extends Item {\r\n     super(p);\r\n     System.out.prinln(calcNetPrcie(p));\r\n}', 88, 31, 1, '2018-12-01 09:26:56', '2019-01-20 11:56:02'),
(56130, 76, 'public class worker {\r\n  String name;\r\n  double salary;\r\npublic worker (){}\r\npublic static double CalcWTax(double s){\r\n  return (s*0.05); \r\n}\r\n}\r\npublic class Engineer {\r\n   String name;\r\n   double salary;\r\n   String department;\r\npublic Engineer(){}\r\npublic static double CalcETax(double s){\r\n   return (s*0.05);\r\n}\r\n}\r\npublic class Program {\r\n   public static void main (String [] args){\r\n      Scanner n = new Scanner(System.in);\r\nworker w1 = new worker();\r\nEngineer e1 = new Engineer();\r\nEngineer e2 = new Engineer();\r\nw1.name = n.next();\r\nw1.salary= n.nextDouble();\r\ne1.name = n.next();\r\ne1.salary = n.nextDouble();\r\ne1.department = n.next();\r\ne2.name = n.next();\r\ne2.salary = n.nextDouble();\r\ne2.department = n.next();\r\ndouble taxE1= CalcETax(e1.salary);\r\ndouble taxE2 = CalcETax(e2.salary);\r\ndouble taxW1 = CalcWTax(w1.salary);\r\ndouble TotalTax = taxE1 + taxE2 + taxW1;\r\nSystem.out.println (\"Total amount of collected taxes is \"+ TotalTax);\r\n}\r\n  \r\n}', 88, 31, 5, '2018-12-01 09:26:56', '2019-01-20 12:33:52'),
(56131, 77, '192', 88, 31, 0, '2018-12-01 09:26:56', '2018-12-01 09:26:56'),
(56181, 66, '170', 103, 31, 2, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56183, 68, '179', 103, 31, 2, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56185, 69, '185', 103, 31, 2, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56187, 70, '186', 103, 31, 1, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56190, 71, '188', 103, 31, 0, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56194, 72, '190', 103, 31, 1, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56196, 73, 'class item {\r\ndouble price ;\r\nString name ;\r\npublic void calcNetPrcie (double discount){\r\nprice  = price - discount ;\r\n}', 103, 31, 2, '2018-12-01 09:27:01', '2019-01-20 11:55:27'),
(56198, 74, 'class Biscuits extends item  {\r\ncalcNetPrcie (0.07); \r\n\r\n}', 103, 31, 1, '2018-12-01 09:27:01', '2019-01-20 11:55:27'),
(56200, 76, 'class employees {\r\nString name;\r\ndouble salary ;\r\nprivate double totaltax ;\r\n\r\npublic employees(int numworkers  ,int numengineer  ){\r\ntotaltax = (worker.calctax() * numworkers )+(numengineer * engineer.calctax) ; \r\n\r\n}\r\npublic double gettotaltax(){\r\n\r\nreturn totaltax;\r\n}\r\npublic double  calctax(){\r\ndouble tax = salary *0.05 ;\r\nreturn tax ;\r\n}\r\n}\r\nclass  worker extends employees {\r\npublic work(String name , double salary){\r\nsuper(name , salary) ;\r\n}\r\n}\r\nclass  engineer extends employees {\r\nString department;\r\npublic work(String name , double salary,String department){\r\nsuper(name , salary) ;\r\nthis.department = department ;\r\n}\r\n}\r\n\r\nclass test(){\r\nimport java.util.*;\r\npublic static void main(String[] arg){\r\nScanner scan = new Scanner(System.in);\r\nSystem.Out.println(\"enter number of worker\");\r\nint numwork= Scan.nextInt();\r\nSystem.Out.println(\"enter number of engineer\");\r\nint numengineerScan.nextInt(); ;\r\nemployees emp = new employees(numwork , numengineer) ;\r\nSystem.Out.println(emp.gettotaltax);\r\n\r\n\r\n}\r\n\r\n}', 103, 31, 3, '2018-12-01 09:27:01', '2019-01-20 12:35:27'),
(56202, 77, '195', 103, 31, 2, '2018-12-01 09:27:01', '2018-12-01 09:27:02'),
(56378, 66, '170', 89, 31, 2, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56379, 68, '181', 89, 31, 0, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56380, 69, '182', 89, 31, 0, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56381, 70, '186', 89, 31, 1, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56382, 71, '189', 89, 31, 1, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56383, 72, '190', 89, 31, 1, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56384, 73, 'class item;{\r\ndouble price;                                                                                                                \r\n string name;\r\ndouble calcNetprcie = price;\r\n                      price = discount();\r\n}', 89, 31, 1, '2018-12-01 09:27:13', '2019-01-20 11:57:59'),
(56385, 74, 'public class Biscuits extend item{\r\n                                                                           double discount();\r\n                                                                                 value val = new value();                                     \r\n                                                    double salary = value * discount;\r\n                                                   double salary();\r\n}', 89, 31, 1, '2018-12-01 09:27:13', '2019-01-20 11:57:59'),
(56386, 76, 'static void main (){\r\nclass workers (string name , double salary ){\r\nworkers wo =new worker; \r\n}\r\nclass engineer (string name , double salary , string department){\r\nengineer en =new engineer; \r\n}\r\n public class employee(){\r\nworkers name = new workers(); \r\nworkers salary = new workers();\r\nengineer name =new engineer();\r\nengineer salary =new engineer();\r\nengineer department =new engineer();\r\n}\r\n}', 89, 31, 2, '2018-12-01 09:27:13', '2019-01-22 14:03:57'),
(56387, 77, '194', 89, 31, 0, '2018-12-01 09:27:13', '2018-12-01 09:27:19'),
(56947, 66, '166', 205, 31, 0, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56949, 68, '179', 205, 31, 2, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56951, 69, '185', 205, 31, 2, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56953, 70, '187', 205, 31, 0, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56955, 71, '188', 205, 31, 0, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56957, 72, '190', 205, 31, 1, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(56959, 73, 'import java util.Scanner;\r\n                                                public class price\r\n                                                                public static double calcNetPrcie( (double) n)\r\nint sum =0;\r\nScanner input=new Sanner(system in) ;\r\nint a= input next.Int;\r\nsum =', 205, 31, 0, '2018-12-01 09:27:54', '2019-01-20 11:52:20'),
(56961, 74, 'public class q2{\r\nint s=0;\r\ns=a*0.07;\r\nreturn s;\r\n  }', 205, 31, 0, '2018-12-01 09:27:54', '2019-01-20 11:52:20'),
(56963, 76, 'import java.util Scanner \r\n                                 public  class res\r\n{\r\npublic static void main (string [ ] args)\r\n{\r\nint g1=input next Int;\r\ng1.name ;\r\ng1. salary;\r\nint g2=input next int ;\r\ng2.name;\r\ng2.salary;\r\ng2.department;\r\n}', 205, 31, 1, '2018-12-01 09:27:54', '2019-01-20 12:24:53'),
(56965, 77, '193', 205, 31, 0, '2018-12-01 09:27:54', '2018-12-01 09:27:55'),
(57076, 66, '170', 105, 31, 2, '2018-12-01 09:28:02', '2018-12-01 09:28:02'),
(57077, 68, '181', 105, 31, 0, '2018-12-01 09:28:02', '2018-12-01 09:28:02'),
(57078, 69, '185', 105, 31, 2, '2018-12-01 09:28:02', '2018-12-01 09:28:02'),
(57079, 70, '186', 105, 31, 1, '2018-12-01 09:28:02', '2018-12-01 09:28:03'),
(57080, 71, '189', 105, 31, 1, '2018-12-01 09:28:02', '2018-12-01 09:28:03'),
(57081, 72, '190', 105, 31, 1, '2018-12-01 09:28:02', '2018-12-01 09:28:03'),
(57082, 73, 'public class Item{\r\nString name;\r\ndouble price;\r\ndouble calcNetPrcie(double discount){\r\nprice*=discount;\r\nreturn price;\r\n}\r\n}', 105, 31, 2, '2018-12-01 09:28:02', '2019-01-20 11:58:21'),
(57083, 74, 'public class Biscuits extends Item{\r\ndouble discount;\r\nBiscuits(){\r\ndiscount=7/100.0;\r\n}\r\ndouble p=calcNetPrice(discount);\r\n}', 105, 31, 1, '2018-12-01 09:28:02', '2019-01-20 11:58:21'),
(57084, 76, 'public class employee{\r\nString name;\r\ndouble salary;\r\nemployee(String n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\ndouble calcTax(){\r\nreturn salary*0.05;\r\n}\r\n}               \r\npublic class Engineer extends employee{\r\nString department;\r\nEngineer(String n,double s,String d){\r\nsuper( n, s);\r\ndepartment=d;\r\n}\r\ndouble calcTax(){\r\ndouble x=super.calcTax();\r\nreturn x;\r\n}\r\n}     \r\npublic class test{\r\npublic static void main(String []args){\r\nemployee e=new employee(\"Ali\",5000);\r\ndouble a=e.calcTax();\r\nEngineer en1=new Engineer(\"Ahmed\",4000,\"it\");\r\ndouble b=en1.calcTax();\r\nEngineer en2=new Engineer(\"Mohamed\",6000,\"cs\");\r\ndouble c=en2.calcTax();\r\n\r\nSystem.out.println(a+b+c);\r\n}\r\n}', 105, 31, 5, '2018-12-01 09:28:02', '2019-01-20 12:55:16'),
(57085, 77, '195', 105, 31, 2, '2018-12-01 09:28:02', '2018-12-01 09:28:03'),
(57342, 66, '170', 141, 31, 2, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57343, 68, '181', 141, 31, 0, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57344, 69, '182', 141, 31, 0, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57345, 70, '186', 141, 31, 1, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57346, 71, '189', 141, 31, 1, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57347, 72, '190', 141, 31, 1, '2018-12-01 09:28:29', '2018-12-01 09:28:30'),
(57348, 73, 'public class Item{ protected double price=0.0; protected String name=\"\";\r\npublic Item(){}\r\npublic Item (double price ,String name)\r\n{this.price=price;\r\nthis.name=name;\r\n}\r\npublic double calcuNetPrice(double price, double discount)\r\n{this.price=price*discount;\r\nreturn price;\r\n}\r\n}', 141, 31, 1, '2018-12-01 09:28:29', '2019-01-20 11:58:50'),
(57349, 74, 'public class Biscuits extends Item{\r\nprotected double dis=7/100;\r\npublic  double calcuNetprice(double price ,double discount)\r\n{this.price=price*discount;\r\nreturn price;\r\n}\r\n}', 141, 31, 1, '2018-12-01 09:28:29', '2019-01-20 11:58:50'),
(57350, 76, 'public class human {\r\nstatic double s;\r\nprotected String name ;\r\nprotected double salary;\r\nhuman ()\r\n{}\r\nhuman(double salary,String name)\r\n{\r\nthis.salary=salary;\r\nthis.name=name;}\r\n}\r\nclass worker extends human {\r\npublic double a=salary*5/100;\r\ns+=a;\r\n}        \r\n  class eng extends human {\r\npublic double b=salary*5/100;\r\ns+=b;\r\n}            \r\npublic test{                                                                                         \r\n  public class void main(string []args)      {\r\nworker x1=new worker(15,\"ahmed\");\r\nworker x2=new worker(20,\"mohamed\");\r\neng y=new eng(30,\"MOa\");\r\nSystem.out.println(\"collected taxs =\"+s);\r\n}', 141, 31, 2, '2018-12-01 09:28:29', '2019-01-20 12:59:43'),
(57351, 77, '195', 141, 31, 2, '2018-12-01 09:28:30', '2018-12-01 09:28:30'),
(57382, 66, '170', 199, 31, 2, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57383, 68, '181', 199, 31, 0, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57384, 69, '185', 199, 31, 2, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57385, 70, '186', 199, 31, 1, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57386, 71, '188', 199, 31, 0, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57387, 72, '190', 199, 31, 1, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57388, 73, 'public class Item\r\n{\r\nprivate double price;\r\nprivate String name;\r\npublic Item(double price,String name)\r\n{\r\n  this.price=price;\r\nthis.name=name;\r\n}\r\n\r\npublic double calcNetPrice(double item_price,double discount)\r\n{\r\nprice-discount*100;\r\nreturn price;\r\n}\r\n}', 199, 31, 1, '2018-12-01 09:28:33', '2019-01-20 12:03:21'),
(57389, 74, 'public class Biscuits extends Item{\r\nsuper(price,name);\r\npublic double  calcNetPrice(double item_price,double discount){\r\ndouble discount=0.07;\r\nprice-discount*100;\r\nreturn price;\r\n}\r\n}', 199, 31, 1, '2018-12-01 09:28:33', '2019-01-20 12:03:21'),
(57390, 76, 'public class Employee{\r\nprivate String name;\r\nprivate double salary;\r\nprivate String department;\r\npublic Employee(String name,double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\npublic Employee(String name,double salary,String department){\r\nthis(name,salary)\r\nthis.department=department;\r\n}\r\npublic double Tax(double tax){\r\nsalary-tax;\r\nreturn salary;\r\n} \r\npublic double Total()\r\n{\r\n   double sum=0;\r\n    sum+=Tax();\r\n    return sum;\r\n}                                                                                                              \r\n} \r\npublic class Task\r\n{\r\npublic static void main(String [] args)\r\n{\r\nEmployee worker=new Employee (\"JOHN\",1000);\r\nEmployee engineer1=new  Employee (\"WICK\",2000,\"CS\");\r\nEmployee engineer2=new  Employee (\"WILLIAM\",2500,\"AI\");\r\nSystem.out.println(worker.Tax(12));\r\nSystem.out.println(engineer1.Tax(13));\r\nSystem.out.println(engineer2.Tax(11));\r\nSystem.out.println(worker.Total());\r\n\r\n}\r\n\r\n}', 199, 31, 2, '2018-12-01 09:28:33', '2019-01-20 13:05:46'),
(57391, 77, '195', 199, 31, 2, '2018-12-01 09:28:33', '2018-12-01 09:28:33'),
(57489, 66, '172', 87, 31, 0, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57490, 68, '181', 87, 31, 0, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57491, 69, '182', 87, 31, 0, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57492, 70, '186', 87, 31, 1, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57493, 71, '189', 87, 31, 1, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57494, 72, '191', 87, 31, 0, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57495, 73, 'public class  Item{\r\nprivate double price;\r\nprivate string name  ;\r\n}\r\npublic double calcNetPrcie   (double itemprice)   {\r\nitemprice=\r\n}', 87, 31, 2, '2018-12-01 09:28:43', '2019-01-20 12:09:26'),
(57496, 74, 'public class   Biscuits  extends Item         {\r\ndouble discount;\r\n\r\npublic Biscuits(){\r\n\r\npublic double biscuits(  double d, double p, string  n)\r\n{\r\nsuper (d,p,n)\r\nd=discount;    \r\nd=7/100*price;\r\n    }', 87, 31, 1, '2018-12-01 09:28:43', '2019-01-20 12:09:26'),
(57497, 76, 'import java.util.scanner;\r\nPublic class Worker extend employee{\r\nstring name;\r\ndouble salary;\r\n}\r\nPublic double worker (string n;double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n}\r\nPublic  Engineer extends employee{\r\nstring name ;\r\ndouble salary;\r\nstring department;\r\n}\r\nPublic double  Engineer ( string n, double s,string d)\r\n{\r\nsuper(n,s)\r\ndepartment=d;\r\n}\r\npublic void set_employees (int worker, int Engineer)\r\n{\r\n\r\npublic static void main (string [ ]args )\r\n{\r\nworker Worker= new worker (1)\r\ntax=5/100*salary;\r\n\r\nemployee Employee =new employee (2)\r\ntax=5/100*salary;\r\nemployees Employees = new employees (2,1)\r\nSystem.Out.print(\" the total amount of collected taxes from all employees\"+( double) tax=5/100*salary)\r\n}', 87, 31, 3, '2018-12-01 09:28:43', '2019-01-27 08:17:04'),
(57498, 77, '194', 87, 31, 0, '2018-12-01 09:28:43', '2018-12-01 09:28:43'),
(57590, 66, '170', 200, 31, 2, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57591, 68, '181', 200, 31, 0, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57592, 69, '185', 200, 31, 2, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57593, 70, '187', 200, 31, 0, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57594, 71, '189', 200, 31, 1, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57595, 72, '190', 200, 31, 1, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57596, 73, 'public class item{ private double price;\r\nprivate String name ;\r\npublic double calcNetPrice(double discount){\r\nreturn price-(price*discount);\r\n}\r\n\r\n}', 200, 31, 2, '2018-12-01 09:28:52', '2019-01-20 12:09:51'),
(57597, 74, 'public class Biscuits extend item{\r\nsuper. calcNetPrice(0.07);\r\n}', 200, 31, 1, '2018-12-01 09:28:52', '2019-01-20 12:09:51'),
(57598, 76, 'public class Person{\r\nString name;\r\ndouble salary;\r\npublic Person(String newName,double newSalary){\r\nname=newName;\r\nsalary=newSalary;\r\n}\r\npublic double tax(double taxs)\r\n{\r\nreturn .05*salary\r\n}}\r\nimport java.util.Scanner;\r\npublic class Worker extend Person{\r\nScanner input=new Scanner(System.in);\r\nstring n=input.nextLine();\r\ndouble s=input.nextDouble;\r\nsuper.person(n,s);\r\nsuper.tax(n,s)\r\n}\r\nimport java.util.Scanner;\r\npublic class Engineer extend Person{\r\nScanner input=new Scanner(System.in);\r\nstring n=input.nextLine();\r\ndouble s=input.nextDouble;\r\nString department;\r\nsuper.person(n,s);\r\nsuper.tax(n,s)\r\n}\r\n\r\n\r\npublic class Employees{\r\npublic static void main(String[] args){\r\nScanner input=new Scanner(System.in);\r\n\r\nWorker worker1=new Worker(null,1);\r\nworker1.tax();\r\nEngineer eng1=new Engineer(null,1);\r\nEngineer eng2=new Engineer(null,1);\r\neng1.tax();\r\neng2.tax();\r\nSystem.out.println(eng1.tax()+eng2.tax.worker1.tax);\r\n}', 200, 31, 2, '2018-12-01 09:28:52', '2019-01-20 13:11:08'),
(57599, 77, '195', 200, 31, 2, '2018-12-01 09:28:52', '2018-12-01 09:28:52'),
(57638, 66, '170', 94, 31, 2, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57639, 68, '181', 94, 31, 0, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57640, 69, '183', 94, 31, 0, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57641, 70, '186', 94, 31, 1, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57642, 71, '188', 94, 31, 0, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57643, 72, '190', 94, 31, 1, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57644, 73, 'Public class item {\r\ndouble price ;\r\nstring name ;\r\ndouble discount;\r\nPublic item(p, n ){\r\ndouble price =p;\r\nstring name =n;\r\n\r\n}\r\nPublic double calcnetprcie( p){\r\nprice=p;\r\ndouble discount=d;\r\nreturn p= p*d;\r\nSystem.out.println(p);\r\n\r\n}', 94, 31, 1, '2018-12-01 09:28:55', '2019-01-20 12:12:29'),
(57645, 74, 'Public class item {\r\ndouble price ;\r\nstring name ;\r\ndouble discount;\r\nPublic item(p, n ){\r\ndouble price =p;\r\nstring name =n;\r\n} \r\n    Public double calcnetprcie( p){\r\nprice=p;\r\n Final double discount=7% ;\r\nreturn p= p*d;\r\n\r\n}  \r\nPublic class Biscuits extends Item{\r\nsuper(p, n);\r\nPublic Biscuits (p, discount ){\r\nthis.price =p,\r\nthis.discount= discount;\r\n}   \r\n}', 94, 31, 1, '2018-12-01 09:28:55', '2019-01-20 12:12:29'),
(57646, 76, 'Public class Engineer{\r\nPublic Engineer( ){ }\r\nstring name ;\r\ndouble salary ;\r\n\r\n}                                                                                                              \r\n  Public class Engineer1{ \r\nPublic Engineer1( ){ }\r\nstring name ;\r\ndouble salary ;\r\nstring department ;\r\n}     \r\nPublic static void main (string []args){\r\nScanner s =new scanner();\r\ns=In.next();\r\n}', 94, 31, 0, '2018-12-01 09:28:55', '2019-01-20 13:13:00'),
(57647, 77, '195', 94, 31, 2, '2018-12-01 09:28:55', '2018-12-01 09:28:55'),
(57811, 66, '170', 99, 31, 2, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57812, 68, '179', 99, 31, 2, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57813, 69, '184', 99, 31, 0, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57814, 70, '187', 99, 31, 0, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57815, 71, '188', 99, 31, 0, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57816, 72, '190', 99, 31, 1, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57817, 73, 'public class Item(){\r\nprivate string name;\r\nprivate double price;\r\n}\r\npublic Item(){\r\n}\r\npublic Item(string n,double s){\r\nname=ahmed;\r\nprice=27;\r\n}\r\npublic calcNetPrice(){\r\nreturn price+discount;\r\n}\r\n}', 99, 31, 1, '2018-12-01 09:29:07', '2019-01-20 12:14:28'),
(57818, 74, 'public Biscuits extends Item(){\r\nprivate double discount;\r\n}\r\npublic Biscuits(){\r\n}\r\npublic Biscuits(double d){\r\ndiscount=d;\r\n}\r\ndiscount=new Biscuits(d);', 99, 31, 1, '2018-12-01 09:29:07', '2019-01-20 12:14:28'),
(57819, 76, 'Imprt java.util.*\r\n public class Employee(){\r\nprivate string name;\r\nprotected double salary;\r\n}                                     \r\npublic Employee(){\r\n}\r\npublic Employee(string n,double x){\r\nname=n;\r\nsalary=x;\r\n}\r\npublic int getname(){\r\nreturn name;\r\n}\r\npublic void getname(string n){\r\nname=n;\r\n}\r\npublic worker extends Employee(){\r\nprivate string name;\r\nprotected double salary;\r\n}\r\npublic worker(){\r\n}\r\npublic worker(string n,double s){\r\nsalary=s;\r\n}\r\npublic Engineer extends Employee(){\r\nprivate string department;\r\n}\r\npublic Engineer(){\r\n}\r\n public Engineer(string d){  \r\nstring d;\r\n}\r\nsuper(n,x,d);\r\nstring department;\r\n}\r\npublic class Employee{\r\npublic static void main(String[]args)   \r\n{\r\nint num;\r\nsum=0;\r\nScanner input=new Scanner(system.In) \r\nfor(int i=0;i<n;i++)\r\nsum*=tax;', 99, 31, 2, '2018-12-01 09:29:07', '2019-01-20 13:21:05'),
(57820, 77, '192', 99, 31, 0, '2018-12-01 09:29:07', '2018-12-01 09:29:08'),
(57880, 66, '170', 152, 31, 2, '2018-12-01 09:29:12', '2018-12-01 09:29:12'),
(57881, 68, '179', 152, 31, 2, '2018-12-01 09:29:12', '2018-12-01 09:29:12'),
(57882, 69, '185', 152, 31, 2, '2018-12-01 09:29:12', '2018-12-01 09:29:13'),
(57883, 70, '186', 152, 31, 1, '2018-12-01 09:29:12', '2018-12-01 09:29:13'),
(57884, 71, '189', 152, 31, 1, '2018-12-01 09:29:12', '2018-12-01 09:29:13'),
(57885, 72, '190', 152, 31, 1, '2018-12-01 09:29:12', '2018-12-01 09:29:13'),
(57886, 73, 'public class Item{\r\nprivate String name;\r\nprivate double price;\r\nItem(){\r\nprice=2.0;\r\nname=Biscuits;\r\n}\r\nItem(String name,double price){\r\nthis.name=name;\r\nthis.price=price;\r\n}\r\npublic void setPrice(double price){\r\nthis.price=price;\r\n}\r\npublic double gerPrice(){\r\nreturn price;\r\n}\r\npublic void setName(String name){\r\nthis.name=name;\r\n}\r\npublic String getName(){\r\nreturn name;\r\n}\r\n\r\npublic String toString(){\r\nreturn \"price :\"+price+\" , name :\"+name;\r\n}\r\n\r\npublic double calcNetPrice(double discount){\r\nreturn price=price-discount;\r\n}\r\n\r\n}', 152, 31, 2, '2018-12-01 09:29:12', '2019-01-20 12:16:32'),
(57887, 74, 'public class Biscuits extends Item{\r\nItem Biscuits;\r\npublic biscuitsPrice(){\r\nBiscuits=new Item();\r\nBiscuits.calcNetPrice(0.07); \r\n}\r\n\r\n}', 152, 31, 1, '2018-12-01 09:29:12', '2019-01-20 12:16:32'),
(57888, 76, 'public class Employee{\r\nprivate double salary;\r\nprivate String name;\r\nprivate String department;\r\nprivate static double tax;\r\nEmpolyee(){\r\nname=\"ahmed\";\r\nSalary=2000.0;\r\n}\r\n\r\nEmployee(String name,double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\n\r\nEmployee(String name,double salary,String department){\r\nthis.name=name;\r\nthis.salary=salary;\r\nthis.department=department;\r\n}\r\npublic void setSalary(double salary){\r\nthis.salary=salary;\r\n}\r\npublic double getSalary(){\r\nreturn salary;\r\n}\r\npublic setDepartment(String department){\r\nthis.department=department;\r\n}\r\npublic String getName(){\r\nreturn name;\r\n}\r\npublic void worker(String name,double Salary){\r\n tax;\r\ntax=salary*0.05;\r\nSystem.out.println(\"tax :\"+tax);\r\n}\r\npublic void Engineer(String name,double Salary,String department){\r\n tax;\r\ntax=salary*0.05;\r\n}\r\npublic double getTax(){\r\nreturn tax;\r\n}\r\n-----------------------------------------------------------\r\nimport java.util.*;\r\nclass Main{\r\npublic static void main(args[]String){\r\nScanner scan=new Scanner (System.in);\r\nString name;\r\nString department;\r\ndouble salary;\r\nSystem.out.println(\"enter employee name\");\r\nname=scan.nextLine;\r\nSystem.out.println(\"enter employee salary\");\r\nsalary=scan.nextDouble;\r\nSystem.out.println(\"enter employee department\");\r\ndepartment=scan.nextLine();\r\nEmpolyee worker1=new Empolyee(name,salary);\r\nSystem.out.println(\"enter employee name\");\r\nname=scan.nextLine;\r\nSystem.out.println(\"enter employee salary\");\r\nsalary=scan.nextDouble;\r\nSystem.out.println(\"enter employee department\");\r\ndepartment=scan.nextLine()\r\nEmployee Engineer1=new Employee(name,salary,department);\r\nSystem.out.println(\"enter employee name\");\r\nname=scan.nextLine;\r\nSystem.out.println(\"enter employee salary\");\r\nsalary=scan.nextDouble;\r\nSystem.out.println(\"enter employee department\");\r\ndepartment=scan.nextLine()\r\nEmployee Engineer2=new Employee(name,salary,department);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}                                                                                                                \r\n}', 152, 31, 1, '2018-12-01 09:29:12', '2019-01-20 13:23:19'),
(57889, 77, '195', 152, 31, 2, '2018-12-01 09:29:12', '2018-12-01 09:29:13'),
(58189, 66, '166', 95, 31, 0, '2018-12-01 09:29:28', '2018-12-01 09:29:32'),
(58190, 68, '180', 95, 31, 0, '2018-12-01 09:29:28', '2018-12-01 09:29:32'),
(58191, 69, '184', 95, 31, 0, '2018-12-01 09:29:28', '2018-12-01 09:29:32'),
(58192, 70, '186', 95, 31, 1, '2018-12-01 09:29:29', '2018-12-01 09:29:32'),
(58193, 71, '188', 95, 31, 0, '2018-12-01 09:29:29', '2018-12-01 09:29:32'),
(58194, 72, '191', 95, 31, 0, '2018-12-01 09:29:29', '2018-12-01 09:29:32'),
(58195, 73, 'public class Item()\r\n{\r\n   public double price ;\r\n   public String name ;\r\n   public double discount ;\r\npublic Item(String n, double p, double d)\r\n{\r\n   name =n;\r\n   price =p;\r\n  float =d;\r\n public void setPrice(double p)\r\n{\r\n  price =p;\r\n}\r\npublic void setName(String n)\r\n{\r\n name =n;\r\n}\r\npublic double getPrice()\r\n{\r\n return price;\r\n}\r\npublic String getName()\r\n{\r\n return name;\r\n}\r\n    public double calcNetPrcie()\r\n{\r\n   return price * discount ;\r\n}\r\n}', 95, 31, 1, '2018-12-01 09:29:29', '2019-01-20 12:17:14'),
(58196, 74, 'public class Biscuits extends Item()\r\n{\r\n super(n ,p );\r\nint discount = .07;\r\n\r\n}                                                                                                               \r\n public double getbiscuitsdiscount()\r\n{\r\nreturn price * discount; \r\n}', 95, 31, 2, '2018-12-01 09:29:29', '2019-01-20 12:17:14'),
(58197, 76, 'public class employee() //this is class 1\r\n{\r\n String name ;\r\ndouble salary;\r\n}\r\n public employee(){\r\n}\r\npublic employee(String n, double s) \r\n{\r\n name =n;\r\nsalary =s;\r\n} \r\npublic class worker extends employee ()//this is class 2\r\n{\r\n  super(n ,s);\r\n}\r\npublic worker (n ,s)\r\n{\r\nname =n;\r\nsalary =s;\r\n}\r\npublic class engineer extends employee()//this class 3\r\n{\r\n   super(n ,s);\r\n   String department; \r\n}                                                                                                                \r\npublic engineer(n ,s ,d)\r\n{\r\nname = n;\r\nsalary =s;\r\ndepartment =d;\r\n}\r\npublic static void main(String[] args) { \r\nemployee e =new employee();', 95, 31, 1, '2018-12-01 09:29:29', '2019-01-20 13:25:08'),
(58198, 77, '193', 95, 31, 0, '2018-12-01 09:29:29', '2018-12-01 09:29:32'),
(58535, 66, '172', 190, 31, 0, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58537, 68, '181', 190, 31, 0, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58539, 69, '182', 190, 31, 0, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58540, 70, '186', 190, 31, 1, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58541, 71, '188', 190, 31, 0, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58542, 72, '190', 190, 31, 1, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(58543, 73, 'importJava.util.scanner ();\r\n          public class item (){\r\nstring name;\r\ndouble price ;\r\npublic void calcpNetPrice (){\r\nscanner input =new scanner (system.in); \r\nprice=input . nextDouble();\r\n         }                                                                                              \r\n         public item (){\r\nthis.name=name ;\r\nthis.price=price;\r\n}', 190, 31, 1, '2018-12-01 09:29:59', '2019-01-20 12:18:30'),
(58544, 74, 'public class Biscuit inherits item (){\r\n           double discount ;\r\ndiscount =price * 0.7;   \r\n}', 190, 31, 1, '2018-12-01 09:29:59', '2019-01-20 12:18:30'),
(58545, 76, 'package employees;\r\nimportJava.util.scanner main ();\r\npublic class employees (){\r\nprotected string name ;\r\nprotected double salary ;\r\n}\r\npublic employees (){\r\nthis.name=name;\r\nthis.salary =salary; \r\n\r\n}\r\npublic class worker inherits employees (){ \r\ndouble tax =salary *0.5;\r\n}\r\npublic class engineer inherits employees (){\r\nprotected double department ;\r\n   double tax =salary *0.5;  \r\n}\r\npublic static void main (arg [ ] avg){\r\nint [ ] worker =int [1];\r\nint [ ] engineer =int [2];', 190, 31, 0, '2018-12-01 09:29:59', '2019-01-20 13:26:47'),
(58546, 77, '194', 190, 31, 0, '2018-12-01 09:29:59', '2018-12-01 09:29:59'),
(59005, 66, '166', 102, 31, 0, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59006, 68, '181', 102, 31, 0, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59007, 69, '182', 102, 31, 0, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59008, 70, '186', 102, 31, 1, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59009, 71, '189', 102, 31, 1, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59010, 72, '190', 102, 31, 1, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59011, 73, 'public class item{\r\nprivate double price;\r\n  private String name;\r\npublic double calcNetprcie(double dis) \r\n{\r\nprcie-=dis;\r\nreturn price;\r\n\r\n}\r\n\r\n}', 102, 31, 2, '2018-12-01 09:30:44', '2019-01-20 12:18:46'),
(59012, 74, 'public class Biscuits extends item()\r\n{\r\nfinal double dis =.07;\r\nreturn prcie*dis;\r\n}', 102, 31, 1, '2018-12-01 09:30:44', '2019-01-20 12:18:46'),
(59013, 76, 'public class worker{\r\n    private String name;\r\n    private double salary;\r\npublic void setsalary(double s)\r\n{\r\nsalary=s;\r\n}\r\npublic double collected_tax(double salary)\r\n{\r\n\r\ndouble tax =salary-salary*(5/100);\r\n\r\n}\r\n\r\npublic class Engineer extends worker{\r\nprivate String department;\r\n\r\n}\r\n}\r\npublic static void main(String[] args) {\r\nScanner input =new Scanner(); \r\nSystem.out.println(\"enter salary\");\r\nint salary =unput.nextInt();\r\nsetsalary()=salary;\r\nSystem.out.println(collect_tax());\r\n\r\n\r\n\r\n\r\n\r\n}', 102, 31, 1, '2018-12-01 09:30:44', '2019-01-20 13:27:51'),
(59014, 77, '195', 102, 31, 2, '2018-12-01 09:30:44', '2018-12-01 09:31:00'),
(59285, 66, '170', 90, 31, 2, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59286, 68, '181', 90, 31, 0, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59287, 69, '185', 90, 31, 2, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59288, 70, '187', 90, 31, 0, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59289, 72, '190', 90, 31, 1, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59290, 73, 'public class Item{\r\n\r\n                        String name;\r\n                        double price;\r\n                            \r\npublic Item()\r\n{}\r\npublic double calcNetPrcie(double discount)\r\n{\r\nreturn price-discount;\r\n}\r\n}\r\n\r\n                          \r\n}', 90, 31, 2, '2018-12-01 09:31:09', '2019-01-20 12:19:12'),
(59291, 74, 'public class  Biscuits extends Item {\r\npublic Biscuits ()\r\n{}\r\npublic double calcNetPrcie(double discount )\r\n{\r\ndouble discount1 =(7.0/100.0)*price;\r\nreturn price-discount1; \r\n}\r\n\r\n        \r\n}', 90, 31, 1, '2018-12-01 09:31:09', '2019-01-20 12:19:12'),
(59292, 76, 'public class Employee{\r\n\r\nString name;\r\ndouble salary;\r\npublic Employee (String n,double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n\r\n}\r\n\r\n}\r\n\r\n\r\npublic class Worker extends Employee {\r\npublic Worker (String n,double s)\r\n{\r\nsuper(n,s);\r\npublic double calctax ()\r\n{\r\nint result=(5.0/100)*salary;\r\nreturn result;\r\n}\r\n\r\n}\r\n                                                                \r\n public class Engineer extends Employee {\r\nString department;\r\npublic Engineer (String n,double s,String depart)\r\n{\r\nsuper(n,s);\r\ndepartment=depart;\r\n}\r\npublic double calctax()\r\n{\r\nint result = (5.0/100.0)*salary;\r\nreturn result;\r\n}\r\n}\r\n\r\n\r\npublic static void main(String[] a)\r\n{\r\nScanner s=new Scanner (System.in);\r\nSystem.out.println(\" enter the salary for the worker \");\r\ndouble workersalary;\r\n\r\nworkersalary=s.nextDouble();\r\nSystem.out.println(\"enter the name of worker\");\r\nString nameworker;\r\nnameworker=s.next();\r\n\r\nWorker w1=new worker(nameworker,workersalary);\r\ndouble taxofworker=w1.calctax();\r\nSystem.out.println(\"the tax for the worker is \" + taxofworker);\r\nSystem.out.println(\"enter the name and the salary and the depart of eng1\");\r\nString namee1;\r\ndouble salarye1;\r\nnamee1=s.next();\r\nsalarye1=s.nextDouble;\r\nString departe1;\r\ndeparte1=s.next();\r\nEngineer e1=new Engineer(namee1,salarye1,departe1);\r\nSystem.out.println(e1.calctax);\r\nString namee2;\r\ndouble salarye2;\r\nString departe2;\r\n\r\nSystem.out.println(\"enter the name and the salary and the depare of eng2\");\r\nnamee2=s.next();\r\nsalarye2=s.nextDouble();\r\ndeparte2=s.next();\r\nEngineer e2=new Engineer(namee2,salarye2,departe2);\r\nSystem.out.println(e2.calactax());\r\n}', 90, 31, 5, '2018-12-01 09:31:09', '2019-01-20 13:29:01'),
(59293, 77, '194', 90, 31, 0, '2018-12-01 09:31:09', '2018-12-01 09:31:09'),
(59304, 66, '173', 212, 31, 0, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59305, 68, '181', 212, 31, 0, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59306, 69, '182', 212, 31, 0, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59307, 70, '186', 212, 31, 1, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59308, 71, '189', 212, 31, 1, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59309, 72, '190', 212, 31, 1, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59310, 73, 'package ask;\r\nimport Java.Util.Scanner;\r\npublic class item{\r\nstring name;\r\ndouble price;\r\npublic  double calcNetPrice (double Item.price)\r\n{\r\ndouble d=7%;\r\ndouble p=Item.price;\r\nprice=p*d;\r\n\r\n}\r\n}', 212, 31, 1, '2018-12-01 09:31:12', '2019-01-20 12:26:03'),
(59311, 74, 'public class Biscuits extends Item {\r\npublic Biscuits (){\r\nname=bisc;\r\nprice=25.5;}\r\npublic Biscuits(string n, double p)\r\n{\r\nname=n;\r\nprice=p;\r\n}\r\npublic double getItemPrice(double p){\r\nprice =p;}\r\npublic void setItemPrice(){\r\nreturn p;}\r\n\r\npublic class test{\r\npublic Static void main (string[]args){\r\nScanner input=new Scanner (System.in);\r\ndouble p=input.nextDouble();\r\np=Item.price;\r\nSystem.out.println(price);\r\n}', 212, 31, 1, '2018-12-01 09:31:12', '2019-01-20 12:26:03'),
(59312, 76, 'package ask;\r\nimport Java.Util.Scanner;\r\npublic class employee\r\n{string name;\r\ndouble salary;\r\npublic employee(){\r\nname=ahmed;\r\nsalary=2000;}     \r\npublic employee(string name, double salary)\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\n}\r\npublic class engineer{\r\nstring name;\r\ndouble salary;\r\nstring department;\r\n}\r\npublic Engineer(){}\r\npublic Engineer(string name ,double salary ,string department)\r\n{this.name=name;\r\nthis.salary=salary;\r\nthis.department=department;\r\n}', 212, 31, 0, '2018-12-01 09:31:12', '2019-01-20 13:30:45'),
(59313, 77, '195', 212, 31, 2, '2018-12-01 09:31:12', '2018-12-01 09:31:12'),
(59331, 66, '169', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59333, 68, '181', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59335, 69, '182', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59336, 70, '187', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59337, 71, '188', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59338, 72, '190', 122, 31, 1, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59339, 73, 'public class Item {\r\n\r\nint price ;\r\nString name ;\r\ndouble discount  ;\r\n\r\npublic class double calcNetPrcie (double discount) {\r\n\r\nprice = price - ( price * discount ) ;\r\n\r\nreturn price ;\r\n    }\r\n}', 122, 31, 1, '2018-12-01 09:31:13', '2019-01-20 12:33:01'),
(59340, 74, 'public class Biscuits extends Item {\r\n\r\nsuper.calcNetPrcie (0.07);\r\n\r\n}', 122, 31, 1, '2018-12-01 09:31:13', '2019-01-20 12:33:01'),
(59341, 76, 'public class employee {\r\n\r\npublic int workers ( String name , double salary) {\r\n             String n = name;\r\n             double s = salary ; \r\n\r\n             double tax_w =  salary * 0.05  ;\r\n     \r\n             return tax_w ;\r\n    }\r\npublic int engineers ( String name , double salary , String department) {\r\n    \r\n             String n = name;\r\n             double s = salary ; \r\n             String d = department ;\r\n\r\n             double tax_e =  salary * 0.05  ;\r\n          \r\n              return tax_e ;\r\n    }\r\n}\r\npublic class taxs {\r\n   public static void main(String[] args) {\r\n      int total_tax = 0 , x , y , z ;\r\n      employee tax = new employee ();\r\n      x = tax.workers ();\r\n      y = tax.engineers ();\r\n      z = tax.engineers ();.\r\n\r\n     total_tax = x + y + z ;\r\n\r\n System.out.println (\" The total amount of collected taxes from all employees = \" + total_tax + \"$\")\r\n}\r\n\r\n}', 122, 31, 2, '2018-12-01 09:31:13', '2019-01-27 08:49:44'),
(59342, 77, '193', 122, 31, 0, '2018-12-01 09:31:13', '2018-12-01 09:31:13'),
(59412, 66, '173', 131, 31, 0, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59413, 68, '181', 131, 31, 0, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59414, 69, '183', 131, 31, 0, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59415, 70, '186', 131, 31, 1, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59416, 71, '189', 131, 31, 1, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59417, 72, '190', 131, 31, 1, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59418, 73, 'public class item{                                                                                                              \r\n   String name;\r\ndouble price;\r\n}\r\npublic double calcNetprice(double price){\r\nSystem.out.println(\"enter a discount\");\r\n}', 131, 31, 1, '2018-12-01 09:31:21', '2019-01-20 12:34:06'),
(59419, 74, 'public class biscuits extends Item class  {\r\ndouble discount =0.07;    \r\n}', 131, 31, 1, '2018-12-01 09:31:21', '2019-01-20 12:34:06'),
(59420, 76, 'public class onetype{\r\npublic onetype{\r\nString name;\r\ndouble salary;\r\npublic void setname(string name){\r\nname=n;\r\n}\r\npublic String getname(){\r\nreturn name;\r\n}\r\npublic void setsalary(double salary){\r\nsalary=s;}\r\npublic double getsalary(){\r\nreturn salary;}\r\n}\r\npublic class twotype extends onetype{\r\n\r\nstring department;\r\npublic void setdepartment(string department){\r\ndepartment=dep;\r\n}\r\npublic string getdepartment(){\r\nreturn department;\r\n}', 131, 31, 1, '2018-12-01 09:31:21', '2019-01-20 13:33:42'),
(59421, 77, '194', 131, 31, 0, '2018-12-01 09:31:21', '2018-12-01 09:31:22'),
(59747, 66, '170', 92, 31, 2, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59748, 68, '179', 92, 31, 2, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59749, 69, '182', 92, 31, 0, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59750, 70, '187', 92, 31, 0, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59751, 71, '189', 92, 31, 1, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59752, 72, '190', 92, 31, 1, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59753, 73, 'public class item{\r\nstring name;\r\ndouble price;\r\npublic item(){\r\n}\r\npublic item( string n, double p){\r\nname=n;\r\nprice=p;\r\n}\r\npublic double get price(){\r\nreturn price\r\n}\r\npublic double calc net prcie(    double    price)', 92, 31, 1, '2018-12-01 09:31:43', '2019-01-20 12:34:23'),
(59754, 74, 'public class Biscuit extends item{\r\nstring name;\r\ndouble price;\r\n}', 92, 31, 1, '2018-12-01 09:31:43', '2019-01-20 12:34:23'),
(59755, 76, 'public class human{\r\nstring name ;\r\ndouble salary;\r\npublic human(){\r\n}\r\npublic human (string n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\npublic worker extends human {\r\nstring name;\r\ndouble salary ;\r\npublic worker (){\r\n}\r\npublic worker (string n, double s){\r\nsuper(n,s)\r\n}\r\npublic Engineer extends human{\r\nstring department;\r\npublic Engineer (){\r\n}\r\npublic Engineer(string n, double s,string d){\r\nsuper(n, s)\r\ndepartment=d;\r\n}', 92, 31, 1, '2018-12-01 09:31:43', '2019-01-20 13:34:47'),
(59756, 77, '192', 92, 31, 0, '2018-12-01 09:31:43', '2018-12-01 09:31:43'),
(59971, 66, '173', 187, 31, 0, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59972, 68, '181', 187, 31, 0, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59973, 69, '185', 187, 31, 2, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59974, 70, '186', 187, 31, 1, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59975, 71, '189', 187, 31, 1, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59976, 72, '190', 187, 31, 1, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(59977, 73, 'public class Item{\r\ndouble price;\r\nString name;\r\npublic Item (String name, double price){\r\nthis.name = name;\r\nthis.price = price;                                                                                                     \r\n}\r\npublic double calcNetPrcie (double discount)\r\n{\r\nreturn this.price*discount;\r\n}\r\n}', 187, 31, 2, '2018-12-01 09:32:02', '2019-01-20 12:34:45'),
(59978, 74, 'public class Biscuits extends Item {\r\npublic Biscuits (String name, double price) {\r\nsuper (name, price)\r\n}\r\npublic double calcNetPrcie (double discount)\r\n{\r\nreturn this.price*0.07;\r\n}\r\n}', 187, 31, 1, '2018-12-01 09:32:02', '2019-01-20 12:34:45'),
(59979, 76, 'public class Employee\r\n{\r\nstatic taxValue = 0.05;\r\nString name;\r\ndouble salary;\r\npublic employee (String name, double salary)\r\n{\r\nthis.name = name;\r\nthis.salary = salary;\r\npublic double calcTaxes (){\r\nreturn this.salary*taxValue;\r\n}\r\n}\r\n}\r\npublic class Worker extends Employee\r\n{\r\npublic Worker (String name, double salary) \r\n{\r\nsuper (name, salary);\r\n}\r\n}\r\npublic class Engineer extends Employee {\r\nString department;\r\npublic Engineer (String name, double salary, String department)\r\n{\r\nsuper (name, salary)\r\nthis.department = department;\r\n}\r\n}                                                                                                                \r\npublic static void main(String[] args){\r\nScanner input = new Scanner (System.in);\r\nSystem.out.println (\"please enter the Worker\'s data   Name : );\r\nString name = input.next();\r\nSystem.out.println (\"Salary : \");\r\ndouble salary = input.nextDouble();\r\nWorker w1 = new Worker (name, salary);\r\nEngineer [2] eng;\r\nfor (int i = 0;i<2;i++){\r\nSystem.out.println (\"please enter the Engineer\'s data   Name : );\r\nString name = input.next();\r\neng [i].name = name;\r\nSystem.out.println (\"Salary : \");\r\neng [i].salary = salary;\r\ndouble salary = input.nextDouble();\r\nSystem.out.println (\"Departement : \");\r\neng [i].department = departement ;\r\nEngineer eng [i] = new Engineer (name, salary, department)\r\n}\r\nfor (int i)\r\nSystem.out.println (\"taxes = \" + w1.clacTaxes )\r\n}', 187, 31, 4, '2018-12-01 09:32:02', '2019-01-20 13:36:27'),
(59980, 77, '194', 187, 31, 0, '2018-12-01 09:32:02', '2018-12-01 09:32:02'),
(60111, 66, '170', 138, 31, 2, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60112, 68, '179', 138, 31, 2, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60113, 69, '185', 138, 31, 2, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60114, 70, '186', 138, 31, 1, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60115, 71, '189', 138, 31, 1, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60116, 72, '190', 138, 31, 1, '2018-12-01 09:32:09', '2018-12-01 09:32:09');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(60117, 73, 'class Item{\r\ndouble price;\r\nString name;\r\nItem(){}\r\nItem(double price,String name){\r\nthis.price=price;\r\nthis.name=name;\r\n}\r\npublic double calcNetPrcie(double discount){\r\ndiscount=price*(discount/100);\r\nprice-=discount;\r\nreturn price;\r\n}\r\n}', 138, 31, 2, '2018-12-01 09:32:09', '2019-01-20 12:43:46'),
(60118, 74, 'class Biscuits extends Item{\r\nBiscuits(){}\r\nBiscuits(double price,String name){\r\nsuper(price,name);\r\n}\r\npublic double calcNetPrcie(){\r\ndouble biscuitsPrice=super.calcNetPrcie(7);\r\nreturn biscuitsPrice;\r\n}\r\n}', 138, 31, 2, '2018-12-01 09:32:09', '2019-01-20 12:43:46'),
(60119, 76, 'class Employee{\r\npublic String name;\r\npublic double salary;\r\npublic Employee(){}\r\npublic Employee(String name,double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\npublic double getTax(){\r\ndouble tax=salary*0.05;\r\nreturn tax;\r\n}\r\n}\r\nclass Worker extends Employee{\r\npublic Worker(String name,double salary){\r\nsuper(name,salary);\r\n}\r\n}\r\nclass Engineer extends Employee{\r\npublic String department;\r\npublic Engineer(String name,double salary,String department){\r\nsuper(name,salary);\r\nthis.department=department;\r\n}\r\n}\r\nimport java.util.Scanner;\r\nclass Main{\r\npublic static void main(String[]args){\r\nScanner input=new Scanner(System.in);\r\nString name,department;\r\ndouble salary;\r\nname=input.next();\r\nsalary=input.nextDouble();\r\nWorker w1=new Worker(name,salary);\r\nname=input.next();\r\nsalary=input.nextDouble();\r\ndepartment=input.next();\r\nEngineer e1=new Engineer(name,salary,department);\r\nname=input.next();\r\nsalary=input.nextDouble();\r\ndepartment=input.next();\r\nEngineer e2=new Engineer(name,salary,department);\r\ndouble allTaxes=w1.getTax()+e1.getTax()+e2.getTax();\r\nSystem.out.println(\"The total calculated tax = \"+allTaxes);\r\n}\r\n}', 138, 31, 5, '2018-12-01 09:32:09', '2019-01-20 13:37:29'),
(60120, 77, '195', 138, 31, 2, '2018-12-01 09:32:09', '2018-12-01 09:32:09'),
(60318, 66, '172', 86, 31, 0, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60319, 68, '181', 86, 31, 0, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60320, 69, '182', 86, 31, 0, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60321, 70, '186', 86, 31, 1, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60322, 71, '189', 86, 31, 1, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60323, 72, '190', 86, 31, 1, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60324, 73, 'public class Item { \r\nprivate double price;\r\nprivate String name;\r\n\r\npublic Item() {\r\nprice = 0.0;\r\nname=\"null\";\r\n}\r\n\r\npublic double calcNetPrcie(double discount) {\r\nprice -= discount;\r\nreturn price;\r\n}', 86, 31, 2, '2018-12-01 09:32:29', '2019-01-20 12:44:30'),
(60325, 74, 'public class Biscuits extends Item {\r\nsuper(double price,String name);\r\npublic Biscuits() {\r\ndiscount = 7/100;\r\nBiscuit b = new Biscuit();\r\n}\r\n\r\npublic double price() {\r\nreturn b.calcNetPrcie;\r\n}', 86, 31, 1, '2018-12-01 09:32:29', '2019-01-20 12:44:30'),
(60326, 76, 'public class Company{\r\nprivate String name;\r\nprivate double salary;\r\nprivate String department;\r\n\r\npublic Company() {\r\nname = \"null\";\r\nsalary = 0.0;\r\ndepartment = \"null\";\r\n}\r\n\r\npublic Company(String n,double s)\r\n{\r\nname = n;\r\nsalary = s;\r\n}\r\n\r\npublic Company(String name,double salary,String dep) {\r\nthis(name,salary);\r\ndepartment = dep;\r\n}\r\n\r\npublic double setTaxes(double Salary) {\r\n\r\nsalary -= (5/100);\r\nreturn salary;\r\n}\r\n\r\npublic Company getTotalTaxes(Company c1,Company c2,Company c3) {\r\nCompany c4 = new Company();\r\n\r\nc3 = c1.add(c2);\r\nc4 = c3.add(c1);\r\n\r\nretrun c4;\r\n}\r\n\r\nimport java.util.*;\r\npublic class TestTaxes{\r\npublic static void main(String[] args) {\r\n\r\nScanner in = new Scanner(System.in);\r\nString name = \"null\";\r\nString x,a,b;\r\ndouble z,c;\r\nString department = \"null\";\r\ndouble salary = 0.0;\r\n\r\nSystem.out.println(\"enter the name and salary of employee\");\r\nx = in.nextLine();\r\nz = in.nextDouble();\r\n\r\nCompany c1 = new Company(x,z);\r\n\r\nc1.setTaxes(z);\r\n\r\nSystem.ou.println(\"enter the name ,salary and department of the engineer\");\r\na = in.nextLine();\r\nc = in.nextDouble();\r\nb = in.nextLine();\r\n\r\nCompany c2 = new Company(a,c,b);\r\nc2.setTaxes(c);\r\n\r\nSystem.ou.println(\"enter the name ,salary and department of the engineer\");\r\na = in.nextLine();\r\nc = in.nextDouble();\r\nb = in.nextLine();\r\n\r\nCompany c3 = new Company(a,c,b);\r\nc3.setTaxes(c);\r\n\r\nCompany c4 = new Cmpany(c1,c2,c3);\r\n\r\nSystem.out.println(c4.getTotalTaxes);\r\n\r\n}', 86, 31, 2, '2018-12-01 09:32:29', '2019-01-20 13:43:19'),
(60327, 77, '195', 86, 31, 2, '2018-12-01 09:32:29', '2018-12-01 09:32:29'),
(60338, 66, '170', 126, 31, 2, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60339, 68, '181', 126, 31, 0, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60340, 69, '185', 126, 31, 2, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60341, 70, '186', 126, 31, 1, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60342, 71, '189', 126, 31, 1, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60343, 72, '190', 126, 31, 1, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60344, 73, 'public class item{                                                                                                           \r\n     public int price;\r\n     public string name;\r\n}\r\npublic item (){ }   \r\n    public static calcNetPrcie{  int price,item price;\r\n    }\r\n     int item price =price*discount; \r\n     return item price;\r\n\r\n    }', 126, 31, 1, '2018-12-01 09:32:32', '2019-01-20 12:45:02'),
(60345, 74, 'public class Biscuit extends item{\r\n   int discount  =7%;\r\n\r\n   }', 126, 31, 1, '2018-12-01 09:32:32', '2019-01-20 12:45:02'),
(60346, 76, 'public class help{\r\npublic string name;\r\npublic int salary;\r\npublic static void main (string[]args){                                                                                                           \r\n \r\n}\r\n}', 126, 31, 0, '2018-12-01 09:32:32', '2019-01-20 13:44:02'),
(60347, 77, '195', 126, 31, 2, '2018-12-01 09:32:32', '2018-12-01 09:32:32'),
(60428, 66, '171', 154, 31, 0, '2018-12-01 09:32:40', '2018-12-01 09:32:40'),
(60429, 68, '179', 154, 31, 2, '2018-12-01 09:32:40', '2018-12-01 09:32:40'),
(60430, 69, '182', 154, 31, 0, '2018-12-01 09:32:40', '2018-12-01 09:32:40'),
(60431, 70, '186', 154, 31, 1, '2018-12-01 09:32:40', '2018-12-01 09:32:41'),
(60432, 71, '188', 154, 31, 0, '2018-12-01 09:32:40', '2018-12-01 09:32:41'),
(60434, 72, '190', 154, 31, 1, '2018-12-01 09:32:40', '2018-12-01 09:32:41'),
(60436, 73, 'Public class item{                                                                                                             \r\n         protected string name; \r\n         protected double price;\r\n      Public double calcnetprice(double price)\r\n       {\r\n           return this.price=price*70%;\r\n        }\r\n}', 154, 31, 2, '2018-12-01 09:32:40', '2019-01-20 12:45:27'),
(60438, 74, 'Public class biscuit extends item{\r\n          private double discount;\r\n         public biscuit(){\r\n             discount = 70%;\r\n          }\r\n}', 154, 31, 1, '2018-12-01 09:32:40', '2019-01-20 12:45:27'),
(60440, 76, 'Public class Employee{\r\n       protected string name;\r\n       protected double salary;\r\n       protected static double tax;\r\n}\r\n     public class worker extends Employee{\r\n       public worker ()\r\n     }\r\n   public class Engineer extends Employee{\r\n        private string department;\r\n     public engineer(){\r\n        department = \"Elictricity\";\r\n      }\r\n     public engineer( string d){\r\n        department = d;\r\n       public double tax( double s)\r\n       {\r\n          return tax -=s;\r\n     }\r\n     public engineer(string n,double s,double x,sting d)\r\n     {\r\n           super(n,s,x)\r\n           department=d;\r\n           x -= s;\r\n      }', 154, 31, 1, '2018-12-01 09:32:40', '2019-01-20 13:45:08'),
(60442, 77, '194', 154, 31, 0, '2018-12-01 09:32:40', '2018-12-01 09:32:41'),
(60644, 66, '170', 133, 31, 2, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60647, 68, '181', 133, 31, 0, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60650, 69, '182', 133, 31, 0, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60653, 70, '187', 133, 31, 0, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60656, 71, '188', 133, 31, 0, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60658, 72, '190', 133, 31, 1, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60661, 73, 'public class Item{\r\ndouble  price;\r\nString name;\r\npublic Item()\r\n{}\r\npublic Item(double p ,String n)\r\n{this.n=name;\r\nthis.p=price;\r\n}\r\npublic calcNetPrice(double discound,double calc,double p)\r\n{\r\ndiscound=d;\r\nthis.p=price;\r\ncalc=p*d;\r\n}\r\n}', 133, 31, 1, '2018-12-01 09:33:03', '2019-01-20 13:02:29'),
(60663, 74, 'public class Biscuits extend Item\r\n{double Biscuitsd;\r\npublic Biscuits()\r\n{}\r\npublic Biscuits(double bd,String n,double p)\r\n{this.bd=Biscuitsd;\r\nthis.n=name;\r\nthis.p=price;\r\nbd=7.00;\r\nsuper(p,d);}\r\n}', 133, 31, 1, '2018-12-01 09:33:03', '2019-01-20 13:02:29'),
(60665, 76, 'public class employee\r\n{string name;\r\ndouble salary;\r\npublic employee(){}\r\npublic class tax(double pay;){\r\npay=5.00;\r\nif(name=n){\r\npay=5.00}\r\nelse\r\npay=10.00\r\n}\r\n}                                 \r\npublic class worker extend employee\r\n{public worker(){}\r\npublic worker(String n, double s)\r\n{this.n=name;\r\nthis.s=salary;\r\nsuper(n,s);\r\n}\r\npublic class engineer extend employee\r\n{String department;\r\npublic engineer(){}\r\npublic engineer( string n, double s,string d)\r\nthis.n=name;\r\nthis.d=department;\r\nthis.s=salary;\r\nsuper (n,s);}\r\n}', 133, 31, 1, '2018-12-01 09:33:03', '2019-01-20 13:46:49'),
(60666, 77, '192', 133, 31, 0, '2018-12-01 09:33:03', '2018-12-01 09:33:03'),
(60685, 66, '170', 162, 31, 2, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60686, 68, '181', 162, 31, 0, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60687, 69, '182', 162, 31, 0, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60688, 70, '186', 162, 31, 1, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60689, 71, '189', 162, 31, 1, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60690, 72, '190', 162, 31, 1, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60691, 73, 'public class Item {\r\ndouble price ;\r\nString name ;\r\ndouble discount;\r\ndouble calcNetPrice(double price){\r\ndouble m=price *discount;\r\nreturn m;\r\n}\r\n}', 162, 31, 2, '2018-12-01 09:33:06', '2019-01-20 13:07:51'),
(60692, 74, 'public class Biscuits extends Item {\r\ndouble discount ;\r\ndiscount=7%;\r\n}', 162, 31, 1, '2018-12-01 09:33:06', '2019-01-20 13:07:51'),
(60693, 76, 'public class Employee {\r\nString name ;\r\ndouble Salary ;\r\nStatic double tax ;\r\n\r\npublic Employee (String name,double salary, double tax)\r\nthis.name=name ;\r\nthis.salary= salary ;\r\nthis.tax =tax; \r\n}\r\npublic class Worker extends Employee{\r\npublic Worker ()\r\ntax=5%;\r\nDate d=new Date();\r\n}\r\npublic class Engineer extends Employee{\r\nString department;\r\npublic Engineer (String department)\r\n{\r\nthis.department=department;\r\n}\r\ntax=5%;\r\nDate .d=new date;\r\n}\r\n\r\n\r\n}', 162, 31, 1, '2018-12-01 09:33:06', '2019-01-20 15:39:41'),
(60694, 77, '194', 162, 31, 0, '2018-12-01 09:33:06', '2018-12-01 09:33:37'),
(60765, 66, '170', 184, 31, 2, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60766, 68, '179', 184, 31, 2, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60767, 69, '185', 184, 31, 2, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60768, 70, '186', 184, 31, 1, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60769, 71, '189', 184, 31, 1, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60770, 72, '190', 184, 31, 1, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60771, 73, 'public class Item{\r\npublic double price;\r\npublic String name;\r\npublic item()\r\n{\r\n}\r\npublic double calcNetPrice (double x)\r\n{\r\nreturn this.price-(this.price*(x/100));\r\n}\r\n}', 184, 31, 2, '2018-12-01 09:33:08', '2019-01-20 13:02:53'),
(60772, 74, 'public class Biscuits extends Item\r\n{\r\npublic Biscuits()\r\n{\r\n}\r\n     super.calcNetPrice(7);\r\n}', 184, 31, 1, '2018-12-01 09:33:08', '2019-01-20 13:02:53'),
(60773, 76, 'import java.util.Scanner;\r\npublic class employee\r\n{\r\npublic String name;\r\npublic double salary;\r\npublic employee( )\r\n{\r\n}\r\n}   \r\n public class worker extends employee\r\n{\r\npublic worker()\r\n{\r\n\r\n}\r\n\r\npublic worker(String n,double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n}\r\npublic calculateTax(double s)\r\n{\r\nreturn s*(5/100);\r\n}\r\n}                                                                                                            \r\n   public class Engineer extends employee\r\n{\r\npublic String department;\r\npublic Engineer( )\r\n{\r\n}\r\npublic Engineer( String n,double s ,String d)\r\n{\r\nname=n;\r\nsalary=s;\r\ndepartment=d;\r\n}\r\npublic calculateTax(double s)\r\n{\r\nreturn s*(5/100);\r\n}\r\n}\r\npublic class Main\r\n{\r\npublic static void main(String [ ] args)\r\n{\r\ndouble myTax;\r\nScanner x=new Scanner(System.in);\r\nString nw=x.nextLine();\r\ndouble sw=x.nextDouble();\r\nworker a=new worker(nw ,sw);\r\nString ne1=x.nextLine();\r\ndouble se1=x.nextDouble();\r\nString de1=x.next();\r\nEngineer b1=new Engineer(ne1,se1,de1);\r\nString ne2=x.nextLine();\r\ndouble se2=x.nextDouble();\r\nString de2=x.next();\r\nEngineer b2=new Engineer (ne2,se2,de2);\r\nmyTax=(a.calculateTax(sw)+b1.calculateTax(se1)+b2.calculateTax(se2));\r\nSystem.out.println(\"The total amount of collected tax = \"+myTax);\r\n}\r\n}', 184, 31, 5, '2018-12-01 09:33:08', '2019-01-20 13:48:57'),
(60774, 77, '194', 184, 31, 0, '2018-12-01 09:33:08', '2018-12-01 09:33:08'),
(60785, 66, '173', 180, 31, 0, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60786, 68, '181', 180, 31, 0, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60787, 69, '182', 180, 31, 0, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60788, 70, '186', 180, 31, 1, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60789, 71, '189', 180, 31, 1, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60790, 72, '190', 180, 31, 1, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60791, 73, 'public class Item(){\r\n  protected double price;\r\n  protected String name;\r\n  Item(double p, String n){\r\n  price=p;\r\n name =n;\r\n}\r\n  public double calcNetPrice(int discount){\r\n  double a=price * discount/100;\r\n   price -=a;\r\n  return price;\r\n}', 180, 31, 2, '2018-12-01 09:33:10', '2019-01-20 13:03:12'),
(60792, 74, 'public class Biscuits extends Item{\r\nprivate static dis=7;\r\nBiscuits(){\r\n}\r\n}', 180, 31, 1, '2018-12-01 09:33:10', '2019-01-20 13:03:12'),
(60793, 76, 'import java.utile.Scanner; \r\npublic class Employee{\r\nprotected String name;\r\nprotected double salary;\r\nprotected static tax;\r\nEmployee(){\r\ntax=5;\r\n}\r\nEmployee(String s, double sal){\r\nname=s;\r\nsalary =sal;\r\n}\r\npublic double getTax(){\r\ndouble a=0;\r\na=salary *tax/100;\r\nreturn a;\r\n} \r\npublic void read(){\r\nScanner x=new Scanner(System.in);\r\nSystem.out.println(\"please enter your name\");\r\nx=x.next();\r\nSystem.out.println(\"please enter your salary\");\r\nx=x.nextDouble();\r\n}\r\n}                                                                                                                \r\n public class Worker{\r\nWorker(){}\r\npublic double getTax(){\r\ndouble a=0;\r\na=salary *super.tax/100;\r\nreturn a;\r\n} \r\npublic class Engineer{\r\nprivate String dep;\r\nEngineer(){}\r\nEngineer(String s, double sala,String dep){\r\nthis.dep=dep;\r\n}\r\npublic void read(){\r\nSystem.out.println(\"please enter your name\");\r\nx=x.next();\r\nSystem.out.println(\"please enter your salary\");\r\nx=x.nextDouble();\r\nSystem.out.println(\"please enter your department\");\r\nx=x.next();\r\n}\r\npublic double getTax(){\r\ndouble a=0;\r\na=salary *super.tax/100;\r\nreturn a ;\r\n}  \r\n} \r\npublic static void main(string[] args){\r\ndouble sum=0;\r\nEmployee[] arr=new Employee[3];\r\n(int i=0;i<3;i++){\r\narr[i].read;\r\nsum+=arr[i].tax;\r\n}\r\nSystem.out.println(\"the total tax is \"+sum);\r\n}', 180, 31, 3, '2018-12-01 09:33:10', '2019-01-20 13:51:05'),
(60794, 77, '192', 180, 31, 0, '2018-12-01 09:33:10', '2018-12-01 09:33:13'),
(60912, 66, '173', 140, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60914, 68, '179', 140, 31, 2, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60916, 66, '173', 142, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60917, 69, '182', 140, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60918, 68, '179', 142, 31, 2, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60920, 70, '186', 140, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60921, 69, '182', 142, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60922, 71, '189', 140, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60923, 70, '186', 142, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60924, 72, '190', 140, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60925, 71, '189', 142, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:17'),
(60926, 73, 'public class item{\r\npublic static void main [string args( )]{\r\nstring name ;\r\ndouble price ; \r\ndouble total = 0;\r\ndouble total 1 =0 ;\r\ndouble discount = 0.04 ;\r\ntotal 1=total * discount ;\r\nreturn total 1;\r\n}', 140, 31, 0, '2018-12-01 09:33:17', '2019-01-20 13:04:45'),
(60927, 72, '190', 142, 31, 1, '2018-12-01 09:33:17', '2018-12-01 09:33:18'),
(60928, 74, 'public class item {\r\npublic static void main [string args ( )]{\r\nstring name ;\r\ndouble price ;\r\npublic class biscuits extends class item {\r\ndouble biscuits  discount=0.07 ;\r\nprice = biscuits *0.07 ;\r\nSystem.out.print( price);\r\n}', 140, 31, 1, '2018-12-01 09:33:17', '2019-01-31 07:00:32'),
(60930, 73, 'public class Item{\r\ndouble price;\r\nstring name;\r\npublic void calcNetPrice(int num of item price ; double price){\r\ndouble total=0;\r\ndouble total 1=0;\r\ndouble discount =0.05;\r\ntotal=num of item price * price;\r\ntotal 1=total *discount;     \r\nreturn total 1;\r\n}', 142, 31, 1, '2018-12-01 09:33:17', '2019-01-20 13:05:08'),
(60931, 76, 'public class employee {\r\nstring name ;\r\ndouble salary ;\r\npublic worker (string name , double price )\r\nname = n;\r\nsalary = s ;\r\npublic worker ( ){ \r\n}\r\nthis ( n, s);\r\npublic class engineer extend class employee \r\n string department ;\r\npublic engineer (string name , double salary , string department )\r\n{\r\nworker w = new wo\r\n\r\n\r\n\r\n\r\n}', 140, 31, 1, '2018-12-01 09:33:17', '2019-01-31 07:00:32'),
(60933, 74, 'public class Biscuits extends item{\r\ndouble price discount ;\r\nBiscuits(){\r\ndiscount =0.07;\r\n}', 142, 31, 1, '2018-12-01 09:33:17', '2019-01-20 13:05:08'),
(60934, 77, '192', 140, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:18'),
(60935, 76, 'public class worker{\r\nstring name;\r\ndouble salary;\r\npublic worker(string s; double n){\r\nname = n;\r\nsalary = s;\r\n}\r\npublic worker (){\r\nthis(n;s);    \r\npublic class engineer extends worker{\r\nstring department;\r\npublic engineer (string name ;double salary ;string department){\r\n\r\npublic class test{\r\npublic static void main (string [ ]args){\r\nworker w=nem worker();\r\nengineer 1=nem engineer();\r\nengineer 2 =new e', 142, 31, 1, '2018-12-01 09:33:17', '2019-01-20 13:57:08'),
(60937, 77, '192', 142, 31, 0, '2018-12-01 09:33:17', '2018-12-01 09:33:18'),
(60981, 66, '172', 173, 31, 0, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60983, 68, '178', 173, 31, 0, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60985, 69, '185', 173, 31, 2, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60987, 70, '186', 173, 31, 1, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60988, 71, '189', 173, 31, 1, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60989, 72, '190', 173, 31, 1, '2018-12-01 09:33:18', '2018-12-01 09:33:18'),
(60990, 73, 'public class item{\r\nstring name;\r\ndouble price;}\r\n\r\npublic calcNetPrice(double price);\r\n{\r\ndouble z=price *discount;\r\n}', 173, 31, 2, '2018-12-01 09:33:18', '2019-01-20 13:03:46'),
(60991, 74, 'public class biscuits extents item;\r\ndouble discount=0.07;\r\nitem.calcNetPrice();                                                                                                               \r\n system.out.println(z);', 173, 31, 0, '2018-12-01 09:33:18', '2019-01-20 13:03:46'),
(60992, 76, 'class employee\r\npublic class worker(string name,double salary)\r\nthis.name=name,this.salary=salary;\r\npublic engineer(string name,double salary,string department)\r\nthis.name=name, this.salary=salary,this.department=department;\r\n\r\nclass main\r\npublic static void main(string , arg[])\r\nscanner input =new scanner(system.in)\r\nworker w=new worker;\r\nw.salary.tax=salary*0.05;\r\nengineer e1=new engineer;\r\ne1.salary.tax=salary*0.05;\r\nengineer e2= new engineer;\r\ne2.salary.tax=salary*0.05;\r\ndouble total=[(w.salary.tax+e1.salary.tax+e2.salary.tax)-(w.salary+e1.salary+e2.salary)]\r\nsystem.out.println(total);', 173, 31, 1, '2018-12-01 09:33:18', '2019-01-20 13:52:09'),
(60993, 77, '195', 173, 31, 2, '2018-12-01 09:33:18', '2018-12-01 09:33:19'),
(60994, 66, '173', 185, 31, 0, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(60995, 68, '179', 185, 31, 2, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(60996, 69, '182', 185, 31, 0, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(60997, 70, '187', 185, 31, 0, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(60998, 71, '189', 185, 31, 1, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(60999, 72, '190', 185, 31, 1, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(61000, 73, 'public class item(){\r\ndouble price ;\r\nString name;\r\nclass(){\r\n}\r\nclass(double p,String i){\r\nprice=p;\r\nid=i;\r\n}\r\npublic void set_name(String n){\r\nname=n;\r\n}\r\npublic void set_price(double p){\r\nif(p>0)\r\nprice=p;\r\n}public double get_price(){\r\nreturn price ;\r\n}\r\npublic String get_name(){\r\nreturn name ;\r\n}\r\npublic double calcNetPrcie(double discount){\r\nreturn price - discount;\r\n}\r\n}', 185, 31, 2, '2018-12-01 09:33:20', '2019-01-20 13:05:41'),
(61001, 74, 'public class biscuits extends item(){\r\ndouble price;\r\nString name;\r\n double discount;\r\nbiscuits(){\r\ndiscount=0.7;\r\n}\r\nbiscuits(String n,double p,double d){\r\nsuper(n,p);\r\ndiscount=d;\r\n}\r\n\r\n}', 185, 31, 1, '2018-12-01 09:33:20', '2019-01-20 13:05:41'),
(61002, 76, 'public class worker (){\r\nString name ;\r\ndouble salary ;\r\nworker(){\r\n}\r\nworker (String n, double s){\r\n}\r\nname=n;\r\nsalary=s;}\r\npublic String get_name(){\r\nreturn name ;\r\n}\r\npublic String get_salary(){\r\nreturn salary ;\r\n}\r\npublic void set_name(String n){\r\nname=n;\r\n}\r\npublic void set_salary(double s){\r\nsalary=s;\r\n}\r\npublic class engineer(){\r\nString name ;\r\ndouble salary ;\r\nString department ;\r\n}\r\nengineer(String n ,double s , department ){\r\n}\r\npublic void set_department(String d){\r\ndepartment=d;\r\n}\r\nimport java.util.Scanner;\r\npublic static void main (string [] agres){\r\n Scanner x=new Scanner (system.in);\r\nSystem.out.println(\"enter the one worker\");', 185, 31, 1, '2018-12-01 09:33:20', '2019-01-20 14:00:43'),
(61003, 77, '194', 185, 31, 0, '2018-12-01 09:33:20', '2018-12-01 09:33:20'),
(61014, 66, '173', 208, 31, 0, '2018-12-01 09:33:22', '2018-12-01 09:33:27'),
(61015, 68, '179', 208, 31, 2, '2018-12-01 09:33:22', '2018-12-01 09:33:27'),
(61016, 69, '182', 208, 31, 0, '2018-12-01 09:33:22', '2018-12-01 09:33:27'),
(61017, 70, '186', 208, 31, 1, '2018-12-01 09:33:22', '2018-12-01 09:33:27'),
(61018, 71, '189', 208, 31, 1, '2018-12-01 09:33:22', '2018-12-01 09:33:28'),
(61019, 72, '191', 208, 31, 0, '2018-12-01 09:33:22', '2018-12-01 09:33:28'),
(61020, 73, 'public class Item{\r\npublic String name;\r\npublic double price;                                          \r\n                               \r\n   public void calcNetPrcie(double discount){\r\n                  price*=discount;\r\n}\r\n}', 208, 31, 2, '2018-12-01 09:33:22', '2019-01-20 13:05:59'),
(61021, 74, 'public class Biscuits extends Item{\r\nsuper()\r\ndiscount=(7*100)/100;\r\nprice=price*((7*100)/100);\r\n}', 208, 31, 1, '2018-12-01 09:33:22', '2019-01-20 13:05:59'),
(61022, 76, 'public class worker{\r\npublic String name  ;\r\npublic double salary;          \r\n                                      public worker(String n,double s){\r\nname =n;\r\nsalary=s;              \r\n}\r\npublic void getsalary(){\r\nreturn salary*((5*100)/100);\r\n}\r\n}\r\nclass Engineer{\r\npublic String name;\r\npublic double salary;\r\npublic String department;\r\npublic Engineer(String Eng,double s,String D){\r\nname=Eng;\r\nsalary=s;\r\ndepartment=D;\r\n}\r\npublic void getsalary(){\r\nreturn salary*((5*100)/100);\r\n}\r\n}\r\npublic static void main(String []args){\r\nworker w1=new worker(asd,1500);\r\nEngineer e1=new Engineer(bsd,2000,vdf1);\r\nEngineer e2=new Engineer(bse,2000,vdf2);\r\ndouble total_amount=e1.getsalary+e2.getsalary+w1.getsalary;\r\nSystem.out.println(\"the total amount is : \"+total_amount);\r\n}', 208, 31, 4, '2018-12-01 09:33:22', '2019-01-20 15:38:44'),
(61023, 77, '192', 208, 31, 0, '2018-12-01 09:33:22', '2018-12-01 09:33:28'),
(61235, 66, '173', 206, 31, 0, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61237, 68, '179', 206, 31, 2, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61239, 69, '182', 206, 31, 0, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61241, 70, '186', 206, 31, 1, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61243, 71, '189', 206, 31, 1, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61247, 72, '190', 206, 31, 1, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61249, 73, 'Public class Item\r\n{\r\nint price;\r\nstring name;\r\n}\r\nItem()\r\n{\r\nprice=0;\r\nname=test;\r\n}\r\nItem(int p,string n)\r\n{\r\nprice=p;\r\nname=n;\r\n}\r\nPublic double calcNetPrcie (Item i,double d)\r\n{\r\ni.price*=d/100;\r\n}', 206, 31, 1, '2018-12-01 09:33:33', '2019-01-20 13:07:36'),
(61251, 74, 'Public class Biscuits extends Item\r\n{\r\n     double d;\r\n}\r\nBiscuits( )\r\n{\r\ndiscount=100;\r\n}\r\nBiscuits(int p,string n,double d)\r\n{\r\nsuper(p,n);\r\nthis.d=d;  \r\n}\r\ndouble c= calcNetPrcie ( Biscuits.p ,7)                                                                                        \r\nSystem.Out.Print(\"The price=\" + c + \"$\");', 206, 31, 1, '2018-12-01 09:33:33', '2019-01-20 13:07:36'),
(61253, 76, 'Import Jave.util.*;\r\nPublic class employee\r\n{\r\n public string name;\r\npublic double salary;\r\n}                                                                                                                \r\n employee( )\r\n{\r\nname =\"Ahmed\";\r\nsalary =1000;\r\n}\r\nemployee( string n, double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n}\r\nPublic class worker extends employee\r\n{\r\nsuper();\r\n}\r\nworker( )\r\n{\r\nsuper( );\r\n}\r\nworker (string n ,double s)\r\n{\r\nname =n;\r\nsalary =s;\r\n}\r\nPublic class Engineer extends employee\r\n{\r\nstring department;\r\n}\r\nEngineer( )\r\n{\r\ndepartment =\"decor\";\r\n}\r\nEngineer( string d)\r\n{\r\ndepartment =d;\r\n}\r\nEngineer( string n, double s, string d)\r\n{\r\nsuper(n,s);\r\ndepartment=d;\r\n}\r\nPublic static void main(string [ ] args)\r\nworker E1 =new worker ;\r\nEngineer E2 =new Engineer ;\r\n Engineer E3 =new  Engineer;\r\nemployee [ ]arr=new employee[ 3 ];\r\nfor(int i=0;i<arr.lengh;i++)\r\n{\r\nSystem.Out.Print(\"\'enter name\");\r\narr[i].name=integer.nextline/n();\r\nSystem.Out.Print(\"enter salary\");\r\narr[i].salary =', 206, 31, 2, '2018-12-01 09:33:33', '2019-01-20 15:39:17'),
(61255, 77, '195', 206, 31, 2, '2018-12-01 09:33:33', '2018-12-01 09:33:34'),
(61275, 66, '173', 167, 31, 0, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61276, 68, '181', 167, 31, 0, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61277, 69, '182', 167, 31, 0, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61278, 70, '186', 167, 31, 1, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61279, 71, '188', 167, 31, 0, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61280, 72, '190', 167, 31, 1, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61281, 73, 'public class item{                                                                                                            \r\n           protected double price; \r\n           protected string name;\r\n       calcNetPrcie (double p){\r\n              price=p;\r\n        }\r\n}', 167, 31, 2, '2018-12-01 09:33:35', '2019-01-20 13:22:36'),
(61282, 74, 'public class biscuits extends item{ \r\ndouble discount =calcNetPrice*0.07;\r\n}', 167, 31, 1, '2018-12-01 09:33:35', '2019-01-20 13:22:36'),
(61283, 76, 'public class worker{\r\n             protected string name;\r\n             protected double salary;\r\n        worker (string n , double s){\r\n               name=n;\r\n               salary=s;\r\n               }\r\n          }\r\n   public class engineer{\r\n         private string department;\r\nengineer(string d){\r\ndepartment=d;\r\n}\r\n      engineer(string n , double s , string d){\r\nsuper(n,s);\r\n          this.d=d;\r\n}\r\n salary(double s){\r\n     s*=0.05;  \r\n}\r\n}\r\nimport java . util. *;\r\npublic class employees  {\r\n      public static void main (string[ ]args){\r\n     scanner input=new scanner(system.in);\r\n    string x =input.next line();\r\n     double y =input.next double();  \r\n     string z = input. next line();\r\n  system.out.print(\"enter   the data of one worker and two engineers\");\r\nworker(x,y);\r\nengineer (x,y,z);\r\nengineer (x,y,z);\r\ndouble tax=salary(y);\r\nsystem.out.print(\"taxes\"+tax);\r\n}\r\n}', 167, 31, 1, '2018-12-01 09:33:35', '2019-01-22 10:53:17'),
(61284, 77, '194', 167, 31, 0, '2018-12-01 09:33:35', '2018-12-01 09:34:05'),
(61383, 66, '170', 119, 31, 2, '2018-12-01 09:33:41', '2018-12-01 09:33:41'),
(61384, 68, '181', 119, 31, 0, '2018-12-01 09:33:41', '2018-12-01 09:33:41'),
(61385, 69, '182', 119, 31, 0, '2018-12-01 09:33:41', '2018-12-01 09:33:41'),
(61386, 70, '186', 119, 31, 1, '2018-12-01 09:33:41', '2018-12-01 09:33:42'),
(61387, 71, '189', 119, 31, 1, '2018-12-01 09:33:41', '2018-12-01 09:33:42'),
(61388, 72, '190', 119, 31, 1, '2018-12-01 09:33:41', '2018-12-01 09:33:42'),
(61389, 73, 'public class Item {\r\nprivate double price ;\r\nprivate String name ;\r\npublic Item ()\r\n{}\r\npublic Item (double p ,String n)\r\n{\r\n    price =p;\r\n    name=n;\r\n}\r\npublic double calcNetprice(double discount)\r\n{    \r\n   int newprice = price * discount ;\r\n    return newprice ;\r\n\r\n}\r\n}\r\npackage Test ;\r\nimport java.util.Scanner ;\r\npublic class Test { \r\npubic static void main (string[] args){\r\nScanner input =new Scanner(System.in);\r\n System.out.println(\"please enter the price \");\r\n double p = input.nextDouble();\r\nSystem.out.println(\"please enter the name \");\r\n String n = input.nextLine();\r\n Item i =new Item(p,n);\r\n  double d = input.nextDouble();\r\n\r\n    i.calcNetprice(d);\r\n   System.out.println(\"the price after discount is =\"i.calcNetprice(d));\r\n}\r\n}', 119, 31, 2, '2018-12-01 09:33:41', '2019-01-20 13:08:39'),
(61390, 74, 'public class Item {\r\nprivate double price ;\r\nprivate String name ;\r\npublic Item ()\r\n{}\r\npublic Item (double p ,String n)\r\n{\r\n    price =p;\r\n    name=n;\r\n}\r\npublic double calcNetprice(double discount)\r\n{    \r\n   int newprice = price * discount ;\r\n    return newprice ;\r\n\r\n}\r\n}\r\npublic class Biscuits extends Item {\r\npublic Biscuits ()\r\n{}\r\n\r\npublic Biscuits (double p , String name)\r\n{\r\n   super(p,n)\r\n\r\n}\r\npublic double calcNetprice(double p)\r\n{    \r\n   int newprice = p * 0.07 ;\r\n    return newprice ;\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npackage Test ;\r\nimport java.util.Scanner ;\r\npublic class Test { \r\npubic static void main (string[] args){\r\nScanner input =new Scanner(System.in);\r\n System.out.println(\"please enter the price \");\r\n double p = input.nextDouble();\r\nSystem.out.println(\"please enter the name \");\r\n String n = input.nextLine();\r\n   Item i=new Item(p,n);\r\n \r\n   Biscuits b =new Biscuits(p,n)\r\n    b.calcNetprice(p);\r\n   System.out.println(\"the price after discount is =\"b.calcNetprice(p));\r\n}\r\n}', 119, 31, 1, '2018-12-01 09:33:41', '2019-01-20 13:08:39'),
(61391, 76, 'public class Employee {\r\nprivate double salary ;\r\nprivate String name ;\r\npublic Employee ()\r\n{}\r\npublic Employee (double s ,String n)\r\n{\r\n    salary =s;\r\n    name=n;\r\n}\r\npublic double tax(double t)\r\n{    \r\n   double newsalary = salary * 0.05 ;\r\n    return newsalary ;\r\n\r\n}\r\n}\r\npublic Engineer ()\r\n{}\r\npublic Engineer (double s ,String n)\r\n{\r\n    salary =s;\r\n    name=n;\r\n}\r\npublic double tax(double t)\r\n{    \r\n   double newsalary = salary * 0.05 ;\r\n    return newsalary ;\r\n\r\n}\r\n}\r\npackage Test ;\r\nimport java.util.Scanner ;\r\npublic class Test { \r\npubic static void main (string[] args){\r\nScanner input =new Scanner(System.in);\r\n System.out.println(\"please enter the Salary \");\r\n double s = input.nextDouble();\r\nSystem.out.println(\"please enter the name \");\r\n String n = input.nextLine();\r\n Employee e =new Employee(s,n);\r\n \r\n\r\n    e.calcNetprice(t);\r\n   System.out.println(\"the price after discount is =\" e.calcNetprice(t));\r\nSystem.out.println(\"please enter the Salary \");\r\n double s = input.nextDouble();\r\nSystem.out.println(\"please enter the name \");\r\n String n = input.nextLine();\r\n Engineer E =new Engineer(s,n);\r\n}\r\n}', 119, 31, 3, '2018-12-01 09:33:41', '2019-01-20 15:40:43'),
(61392, 77, '195', 119, 31, 2, '2018-12-01 09:33:41', '2018-12-01 09:33:42'),
(61437, 66, '170', 213, 31, 2, '2018-12-01 09:33:43', '2018-12-01 09:36:14'),
(61439, 68, '179', 213, 31, 2, '2018-12-01 09:33:43', '2018-12-01 09:36:14'),
(61441, 69, '182', 213, 31, 0, '2018-12-01 09:33:43', '2018-12-01 09:36:14'),
(61443, 70, '186', 213, 31, 1, '2018-12-01 09:33:43', '2018-12-01 09:36:14'),
(61445, 71, '189', 213, 31, 1, '2018-12-01 09:33:44', '2018-12-01 09:36:14'),
(61447, 72, '190', 213, 31, 1, '2018-12-01 09:33:44', '2018-12-01 09:36:14'),
(61448, 66, '166', 194, 31, 0, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61450, 73, 'public class Item{\r\n      protected double price;\r\n      protected String name;\r\n      public Item(){\r\n      }\r\n      public Item(double r,String n){\r\n       price=r;\r\n       name=n;  \r\n       }\r\n       public double getprice(){\r\n        return price;\r\n       }\r\n      public void setPrice(double r){ \r\n        price=r;\r\n       }\r\n      public String getname(){\r\n         return name;\r\n      }\r\n     public void setName(String n){\r\n       name=n;\r\n     }\r\n   public double calcNetPrice(double dis){\r\n     return price*dis;\r\n    }\r\n}', 213, 31, 2, '2018-12-01 09:33:44', '2019-01-20 14:28:34'),
(61451, 68, '179', 194, 31, 2, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61452, 74, 'public class Biscuits extends Item {\r\n      public Biscuits() {\r\n      }\r\n      public Biscuits( double pri,String na){\r\n        super(pri,na);\r\n       }\r\n     public double calcNetPrice( ){\r\n      return price*.7;\r\n     }     \r\n}', 213, 31, 2, '2018-12-01 09:33:44', '2019-01-20 14:28:34'),
(61453, 69, '182', 194, 31, 0, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61454, 76, 'class employee{\r\n     protected String name;\r\n     protected double salary;\r\n     public employee( ){\r\n      }\r\n     employee(String name,double salary){\r\n        this.name=name;\r\n        this.salary=salary; \r\n       }\r\n      public String getname(){\r\n         return name;\r\n       }\r\n      public void setname(String n){\r\n         name=n;\r\n       }\r\n      public double getSalary(){\r\n          return salary;\r\n       }\r\n      public void setSalary(double r){\r\n         salary=r;\r\n       }\r\n      public double taxes(){\r\n          return (salary-(salary*.5));\r\n       }\r\n} \r\n class engineer extends{\r\n   private String depart;\r\n   public engineer(){\r\n    }\r\n   public engineer(String d){\r\n     depart=d;\r\n     }\r\n    public engineer(String name,double salary,String dep){\r\n       super(name,salary);\r\n       depart=dep;\r\n    }\r\n  public double getSalary(){\r\n    return salary;\r\n  }\r\n  public void setSalary(double r){\r\n    salary=r;\r\n    }\r\n  public String getName(){\r\n    return name;\r\n  }\r\n  public void setName(String g){\r\n    name=g;\r\n   }\r\n  public String getDe(){\r\n    return depart;\r\n   }\r\n  public void setDe(String de){\r\n    depart=de;\r\n   }\r\n    public double taxes(){\r\n       return(salary-(salary*.5));\r\n   }\r\n}\r\nimport java.util.Scanner;\r\npublic class main{\r\n  public static void main(String[] args){\r\n    Scanner in=new Scanner(System.in);\r\n    employee e=new employee();\r\n     e.name=in.nextLine();\r\n     e.salary=in.nextDouble;\r\n     engineer eng1=new engineer();\r\n      eng1.name=in.nextLine();\r\n      eng1.salary=in.nextDouble();\r\n     eng1.depart=in.nextLine();\r\n     engineer eng2=new engineer();\r\n     eng2.name=in.nextLine();\r\n     eng2.salary=in.nextDouble();\r\n    eng2.depart=in.nextLine();\r\n    System.out.println(e.taxes()+eng1.taxes()+eng2.taxes());', 213, 31, 2, '2018-12-01 09:33:44', '2019-01-22 14:10:02'),
(61455, 70, '186', 194, 31, 1, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61456, 71, '189', 194, 31, 1, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61457, 72, '190', 194, 31, 1, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61458, 73, 'public class Item { \r\ndouble price;\r\nstring name;\r\npublic void ( calcNetPrice\r\n\r\n}', 194, 31, 1, '2018-12-01 09:33:44', '2019-01-20 13:11:58'),
(61459, 74, 'public class inherits{\r\n\r\n}', 194, 31, 0, '2018-12-01 09:33:44', '2019-01-20 13:11:58'),
(61460, 76, 'public class employee{\r\n(string name;double salary)\r\n}                       \r\npublic class employee2{\r\n(string name;double salary;string department)\r\n}\r\npublic static void main()', 194, 31, 0, '2018-12-01 09:33:44', '2019-01-20 15:48:25'),
(61461, 77, '193', 194, 31, 0, '2018-12-01 09:33:44', '2018-12-01 09:33:46'),
(61472, 66, '170', 204, 31, 2, '2018-12-01 09:33:44', '2018-12-01 09:33:45'),
(61473, 66, '173', 158, 31, 0, '2018-12-01 09:33:44', '2018-12-01 09:33:48'),
(61474, 68, '178', 204, 31, 0, '2018-12-01 09:33:44', '2018-12-01 09:33:45'),
(61475, 68, '181', 158, 31, 0, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61476, 69, '185', 204, 31, 2, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(61477, 69, '185', 158, 31, 2, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61478, 70, '186', 204, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(61479, 70, '186', 158, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61480, 71, '189', 204, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(61481, 71, '189', 158, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61482, 72, '190', 204, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(61483, 72, '190', 158, 31, 1, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61484, 73, 'public class item\r\n{public double price; public string name;\r\npublic double  calcNetprice (item.price   ,double discount  )   {double p;\r\np=item.price-(item.price*discount); return p;}\r\n}', 204, 31, 1, '2018-12-01 09:33:45', '2019-01-20 13:11:42'),
(61485, 73, 'public class item{  \r\nprivate double price;  \r\nprivate string name;\r\n}\r\npublic item()\r\n{\r\n}\r\npublic item(double price,string name){\r\nthis.name=name;\r\nthis.price=price;\r\n\r\n}\r\npublic double get calcnetprice()\r\n{\r\nreturn( price-discount /100)*100;\r\n}', 158, 31, 1, '2018-12-01 09:33:45', '2019-01-20 13:09:08'),
(61486, 74, 'public class Biscuits extends item\r\n{public double calcNetprice (Biscuits.price,0.07)\r\n{double p=Biscuits.price-(biscuits.price*0.07);\r\nreturn p;}\r\n}', 204, 31, 2, '2018-12-01 09:33:45', '2019-01-20 13:11:42'),
(61487, 74, 'public class biscuits extends item{\r\npublic biscuits (double price, string name)\r\n{\r\nsuper(price,name);\r\n}', 158, 31, 1, '2018-12-01 09:33:45', '2019-01-20 13:09:08'),
(61488, 76, 'public class worker \r\n{public string name ;public double salary;\r\n}\r\n class engineer{\r\npublic string name ;\r\npublic string department;\r\npublic double salary;\r\n}\r\npublic static double tax(double t)\r\n{double s=t+(t*0.05);\r\nreturn s;}\r\n class company{\r\nimport java.util.Scanner;\r\npublic static void main (String []args)\r\n{Scanner s=new Scanner(System.in);\r\nworker w1=new worker ();\r\nw1.name=s.next();\r\nw1.salary=s.nextDouble();\r\nfor(int i=1;i<=2;i++)\r\n{engineer e[i]=new engineer();\r\ne[i].name=s.next();\r\ne[i].salary=s.nextDouble();\r\ne[i].department=s.next();\r\n}\r\ndouble sum =0.0;\r\nsum=tax(w1.salary)+tax(e1.salary)+tax(e2.salary);\r\nSystem.out.print(sum);\r\n}\r\n}', 204, 31, 2, '2018-12-01 09:33:45', '2019-01-20 15:47:57'),
(61489, 76, 'public class employee 1{\r\nprivate string name;\r\nprivate double salary;\r\n}\r\npublic employee 1 (string name,double salary)\r\n{\r\nthis.name=nam\r\npublic static void main(string []args)\r\n{\r\nemployee 1=new employee(string name,double salary);\r\nemployee 2=new employee (string name ,double salary,int department);\r\n}', 158, 31, 0, '2018-12-01 09:33:45', '2019-01-20 15:42:33'),
(61490, 77, '195', 204, 31, 2, '2018-12-01 09:33:45', '2018-12-01 09:33:45'),
(61491, 77, '194', 158, 31, 0, '2018-12-01 09:33:45', '2018-12-01 09:33:48'),
(61512, 66, '171', 106, 31, 0, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61513, 68, '179', 106, 31, 2, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61514, 69, '182', 106, 31, 0, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61515, 70, '186', 106, 31, 1, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61516, 71, '189', 106, 31, 1, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61517, 72, '190', 106, 31, 1, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61518, 73, 'import java.util.Scanner\r\npublic class item{\r\ndouble price ;\r\nstring name ;\r\nSystem.out.print(\"enter the price\");\r\nScanner input= new Scanner(System.in);\r\ndouble p= input .nextdouble();\r\nSystem.out.print(\"enter the name\");\r\nScanner input= new Scanner(System.in);\r\nstring= input.next();\r\nSystem.out.print(\"enter the discount\");\r\nScanner input= new Scanner(System.in);\r\ndouble= input.nextdouble();\r\npublic calcnetprice(){\r\nreturn price*discount;\r\n}\r\nanother solution :\r\nimport java.util.Scanner\r\npublic class item {\r\ndouble price;\r\nstring name ;\r\ndouble discount;\r\nSystem.out.print(\"enter the name\");\r\nScanner input= new Scanner(System.in);\r\nstring= input.next();\r\npublic double getprice(){\r\nreturn price ;\r\n}\r\npublic double getdicount(){\r\nreturn discount ;\r\n}\r\ncalcnetprice(){\r\nreturn price*discount;\r\n}', 106, 31, 1, '2018-12-01 09:33:46', '2019-01-20 13:12:43'),
(61519, 74, 'class biscuits extends item {\r\nclass biscuits extends item {\r\npublic biscuits(){\r\n}\r\npublic double biscuits(double p ){\r\nprice= p ;\r\n}\r\ncalcnetprice(){\r\nreturn (price*7)/100;\r\n}\r\nanother solution:\r\nclass biscuits extends item {\r\ndouble price ;\r\npublic double getbiscuitsprice(double p){\r\nprice=p;\r\nreturn price;\r\n}\r\ncalcnetprice(){\r\nreturn (price*7)/100;\r\n}', 106, 31, 1, '2018-12-01 09:33:46', '2019-01-20 13:12:43'),
(61520, 76, 'public class employee {\r\nstring name;\r\ndouble salary;\r\npublic name(string n){\r\nname=n;}\r\npublic salary(double s)\r\n{\r\nsalary=s;}\r\ncalctax(){\r\ndoubletax=(salary*5)/100;}\r\nclass worker extends employee{\r\nstring name;\r\ndouble salary;\r\npublic name(string n){\r\nname=n;}\r\npublic salary(double s)\r\n{\r\nsalary=s;}\r\ncalctax(){\r\ndoubletax=(salary*5)/100;}\r\nclass engineer extends employee{\r\nstring name;\r\ndouble salary;\r\nstring department;\r\npublic name(string n){\r\nname=n;}\r\npublic salary(double s)\r\n{\r\nsalary=s;}\r\ncalctax(){\r\ndoubletax=(salary*5)/100;}\r\npublic department(string d){\r\ndepartment = d;}\r\nimport java.util.Scanner;\r\npublic class{\r\npublic static void main{\r\nSystem.out.print(\"Enter your name :\");\r\nScanner input- new Scanner (system.in);\r\nString S=input.next();\r\nSystem.out.print(\"Enter your salary :\");\r\nScanner input- new Scanner (system.in);\r\ndouble s =input.next();\r\nSystem.out.print(\"Enter your depart:\");\r\nScanner input- new Scanner (system.in);\r\nstring d=input.next();\r\ndouble calctax =taxofworker+(2*taxofengineer)', 106, 31, 3, '2018-12-01 09:33:46', '2019-01-27 08:38:27'),
(61521, 77, '192', 106, 31, 0, '2018-12-01 09:33:46', '2018-12-01 09:33:46'),
(61532, 66, '170', 130, 31, 2, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61533, 68, '181', 130, 31, 0, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61534, 69, '182', 130, 31, 0, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61535, 70, '186', 130, 31, 1, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61536, 71, '189', 130, 31, 1, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61537, 72, '190', 130, 31, 1, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61538, 73, 'public class Item {\r\ndouble price ;\r\nString name ;\r\npublic Item (String n,double p)\r\n{\r\nname=n;\r\nprice=p;\r\n}\r\npublic double calcNetPrice(double sale){\r\nprice=price-(price*(sale/100));\r\nreturn price;\r\n}\r\n}', 130, 31, 2, '2018-12-01 09:33:49', '2019-01-20 13:13:02'),
(61539, 74, 'public class Biscuits extends Item {\r\ndouble priseBiscuit;\r\npublic Biscuits (String na,double pr,double x=7)\r\n{\r\nsuper (na,pr);\r\npriseBiscuit=super.calcNetPrice(x)\r\n}\r\n}', 130, 31, 1, '2018-12-01 09:33:49', '2019-01-20 13:13:02'),
(61540, 76, '//Every solution at enough one class \r\n// class of worker \r\nPackage Test();\r\nimport java.util.*;\r\npublic class worker {\r\nString name ;\r\ndouble salary;\r\npublic engineer(){\r\n}\r\nScanner scan=new Scanner (System.in);\r\npublic void read {\r\nSystem.out.println(\"Enter name : \");\r\nname=scan.nextLine();\r\nSystem.out.println(\"Enter salary\");\r\nsalary=scan.nextDouble();\r\n}\r\npublic double tax()\r\n{\r\nsalary=salary*(5/100);\r\nreturn salary ;\r\n}\r\n}\r\n\r\n\r\n\r\n// class of engineer                                                                                                                \r\nPackage Test();\r\nimport java.util.*;\r\npublic class worker {\r\nString name ;\r\ndouble salary;\r\nString department;\r\npublic engineer(){\r\n}\r\nScanner scan=new Scanner (System.in);\r\npublic void read {\r\nSystem.out.println(\"Enter name: \");\r\nname=scan.nextLine();\r\nSystem.out.println(\"Enter salary: \");\r\nsalary=scan.nextDouble();\r\nSystem.out.println(\"Enter department : \");\r\ndepartment=scan.nextLine();\r\n}\r\npublic double tax()\r\n{\r\nsalary=salary*(5/100);\r\nreturn salary ;\r\n}\r\n}                                                                                                                \r\n\r\n\r\n// Main class\r\nPackage Test();\r\npublic class Test{\r\nimport\r\npublic static void main (Sting[]args){\r\n\r\nengineer e1=new engineer();\r\ne1.read();\r\n\r\nengineer e2=new engineer();\r\ne2.read();\r\n\r\nworker w1=new worker();\r\nw1.read();\r\n\r\nSystem.out.println(\"Taxes From all employee is : \"e1.tax()+w1.tax()+e2.tax());\r\n}\r\n}', 130, 31, 3, '2018-12-01 09:33:49', '2019-01-20 15:53:54'),
(61541, 77, '195', 130, 31, 2, '2018-12-01 09:33:49', '2018-12-01 09:33:49'),
(61561, 66, '170', 128, 31, 2, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61562, 68, '179', 128, 31, 2, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61563, 69, '185', 128, 31, 2, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61564, 70, '186', 128, 31, 1, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61565, 71, '189', 128, 31, 1, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61566, 72, '190', 128, 31, 1, '2018-12-01 09:33:50', '2018-12-01 09:33:50'),
(61567, 73, 'public class Item{\r\n String name;\r\n double price;\r\n Item(){\r\n name = \"as\" ;\r\n price = 20;\r\n}\r\npublic double  calcNetPrcie (double dis){\r\ndouble s = price * (dis/100); \r\nprice = price - s;\r\nreturn price;\r\n}\r\n\r\n\r\n}', 128, 31, 2, '2018-12-01 09:33:50', '2019-01-20 13:13:29'),
(61568, 74, 'public class Biscuits extends Item{\r\ndouble dis;\r\nBiscuits(){\r\ndis=7;\r\n}\r\npublic double calcNetPrcie (double dis){\r\ndouble s = price * (dis/100); \r\nprice = price - s;\r\nreturn  \"the price\" + price;\r\n}\r\n\r\n\r\n\r\n}', 128, 31, 1, '2018-12-01 09:33:50', '2019-01-20 13:13:29'),
(61569, 76, 'public employee {\r\nString name ;\r\ndouble salary;\r\nstatic int total=0; \r\nemployee(){\r\nname = \"mos\";\r\nsalary=1000;\r\ntotal++;\r\n}\r\nemployee(String n,int s){\r\nname = n;\r\nsalary= s;\r\n}\r\npublic int tax(int t){\r\ndouble s = salary * (t/100); \r\nsalary = salary + s*2;\r\nreturn  \"the salary\" + salary;\r\n} \r\npublic int totaltax(){\r\nsalary\r\n}\r\n\r\n\r\n}                \r\n\r\npublic  worker extends employee {\r\nworker(){\r\nsuper();\r\n} \r\nworker(String n,salary s){\r\nsuper(n,s);\r\n} \r\n\r\n}                 \r\n\r\n                                                                              \r\npublic  engineer  extends employee{\r\nString department;\r\nengineer(){\r\nsuper();\r\n}\r\nengineer(String n ,int s){\r\nsuper(n,s);\r\n}\r\n\r\n\r\n}', 128, 31, 1, '2018-12-01 09:33:50', '2019-01-20 15:55:07'),
(61570, 77, '193', 128, 31, 0, '2018-12-01 09:33:50', '2018-12-01 09:33:51'),
(61647, 66, '173', 174, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61649, 68, '179', 174, 31, 2, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61650, 66, '173', 177, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61652, 69, '182', 174, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(61653, 68, '179', 177, 31, 2, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61655, 70, '187', 174, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61656, 69, '182', 177, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61657, 71, '189', 174, 31, 1, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61659, 70, '186', 177, 31, 1, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61661, 72, '190', 174, 31, 1, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61662, 71, '189', 177, 31, 1, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61664, 73, 'public class item{\r\nint price;\r\nString name;\r\npublic item(int p,String n){\r\nprice=p;\r\nname=n;\r\n}\r\npublic int CalaNetPrice(int p){\r\nprice =(p*100)-(20*100);\r\nprie =prie/100;\r\nreturn price;\r\n\r\n}\r\n\r\n\r\n}', 174, 31, 2, '2018-12-01 09:33:52', '2019-01-27 06:25:04'),
(61665, 72, '190', 177, 31, 1, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61667, 74, 'public class Biscuits extends item {\r\n                            int disount;\r\n                            public int Bisuits (int p,String n){\r\n                             super(p,n);\r\n                              disount=(CalaNetPrice(p)*100)-(7*100);\r\n                              disount=disount/100;\r\n                                 return disount; \r\n}\r\n\r\n\r\n\r\n}', 174, 31, 1, '2018-12-01 09:33:52', '2019-01-27 06:25:05'),
(61668, 73, 'public class Item{\r\ndouble price;\r\nString name;}\r\npublic Item(){\r\nthis.(0,\"unknown\");}\r\npublic Item(double p,String n){\r\nthis.price=p;\r\nthis.name=n;}\r\npublic double calcNetPrice(double discount){\r\nreturn price*discount;}', 177, 31, 2, '2018-12-01 09:33:52', '2019-01-20 13:14:11'),
(61669, 76, 'import java.util.Scanner;\r\n                                       public class worker{\r\nproteted String name;\r\nproteted double salary;\r\nproteted double taxs;\r\npublic void worker(){\r\nname= \"shireef\";\r\nsalary=2000;\r\n}\r\npublic void read1(){\r\nSystem.out .println (\"enter the information\")\r\nname =input.nextLine();\r\nsalary=input.next double\r\n\r\n}\r\npublic void worker(String n,double s){\r\nname= n;\r\nsalary=s;\r\n\r\n}\r\npublic double tax(double salary){\r\nsalary=(s*100)-(5*100)\r\nsalary =salary/100;\r\nreturn salary;}\r\ntaxs=salary\r\n}\r\n public class Engineer extends worker{\r\nprotected double taxs;\r\nprotected String department;\r\npublic void Engineer(){\r\nsuper();\r\ndepartment=\"bioinformatics\";\r\n}\r\npublic void Engineer(String n,double s,String d){\r\nsuper(n,s);\r\ndepartment=d;\r\n}\r\npublic void read2(){\r\nSystem.out .println (\"enter the information\")\r\nname =input.nextLine();\r\nsalary=input.next double\r\ndepartment=input.nextLine();\r\n}\r\npublic double tax(double salary){\r\nsalary=(s*100)-(5*100)\r\nsalary =salary/100;}\r\ntaxs=salary;\r\n}             \r\npublic class test{\r\npublic static void main(String [ ] args){\r\nScanner input =new Scanner(System.in);\r\nworker w1.read1();\r\nEnginner eng1.read2();\r\nEnginner eng2.read2();\r\ndouble sum=0;\r\nsum+=eng1.taxs()+eng2.taxs+w1.taxs;\r\n\r\nSystem.out.println(\"collected taxes=\"+tax)\r\n}\r\n\r\n\r\n}', 174, 31, 3, '2018-12-01 09:33:52', '2019-01-20 15:59:35'),
(61671, 74, 'public class Biscuits extends  Item{\r\ndouble discount;\r\npublic Biscuits(double p, String n,double discount){\r\n discount=7%;}', 177, 31, 1, '2018-12-01 09:33:52', '2019-01-20 13:14:11'),
(61672, 77, '194', 174, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61673, 76, 'public class Employee{\r\nString name;\r\ndouble salary;\r\npublic Employee(String name,double salary){\r\nthis.name=name;\r\nthis.salary=salary;}\r\npublic  double taxOfSalary(double tax){      return salary*tax}}\r\npublic class Engineer extends Employee{\r\nString department ;}\r\npublic Employee (){};\r\n}\r\npublic class Worker{\r\npublic Worker(){};\r\n}\r\n         pu', 177, 31, 2, '2018-12-01 09:33:52', '2019-01-22 14:44:59'),
(61674, 77, '194', 177, 31, 0, '2018-12-01 09:33:52', '2018-12-01 09:33:53'),
(61694, 66, '170', 181, 31, 2, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61695, 68, '181', 181, 31, 0, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61696, 69, '182', 181, 31, 0, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61697, 70, '186', 181, 31, 1, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61698, 71, '189', 181, 31, 1, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61699, 72, '190', 181, 31, 1, '2018-12-01 09:33:54', '2018-12-01 09:33:54'),
(61700, 73, 'public class Item{\r\ndouble price;\r\nString name;\r\n\r\npublic double calcNetPrice(double discount)\r\n{\r\nItem.price=Item.price - Item.price*discount/100;\r\nreturn price;\r\n}', 181, 31, 2, '2018-12-01 09:33:54', '2019-01-20 13:22:02'),
(61701, 74, 'class Biscuits extends Item\r\n{\r\nfinal double discount=7.0;        \r\ndouble y=calcNetPrice(discount); \r\nSystem.out.println(\" Biscuits price after discount is \"+ y);\r\n}', 181, 31, 1, '2018-12-01 09:33:54', '2019-01-20 13:22:02'),
(61702, 76, 'import java.util.Scanner;                                                                                                           \r\npublic class employee{\r\nString name;\r\ndouble salary;\r\nemployee ()\r\n{\r\n}\r\npublic double tax(double sal)\r\n{\r\ndouble tax=sal*5/100;\r\nreturn tax;\r\n}          \r\nclass worker extends employee{\r\n  worker(String name,double salary)\r\n{\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\npublic double workerstax()\r\n{\r\ndouble x=tax(salary);\r\nreturn x;\r\n}\r\nclass engineer extends employee{\r\nString department;\r\nemployee(String name,double salary ,String department)\r\n{\r\nthis.name=name;\r\nthis.salary=salary;\r\nthis.department=department;\r\n}\r\npublic double engineertax()\r\n{\r\n   double y=tax(salary);\r\n          return y;\r\n}\r\npublic static void main(String [] args)\r\n{\r\nworker w=new worker(name:\"ahmed \",salary:1000.0);\r\nworker w2=new worker(name:\"omar:,salary:\"200.0);\r\nengineer e1=new engineer(name:\"ami\",salary:', 181, 31, 4, '2018-12-01 09:33:54', '2019-01-22 14:44:34'),
(61703, 66, '170', 171, 31, 2, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61704, 68, '179', 171, 31, 2, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61705, 69, '182', 171, 31, 0, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61706, 70, '186', 171, 31, 1, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61707, 71, '189', 171, 31, 1, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61708, 72, '190', 171, 31, 1, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61709, 73, 'public class item{\r\nprivate double price;\r\nprivate String name;\r\npublic double getcalcNetPrcie  () \r\n{\r\ndouble p=price-(double)i;\r\nreturn p;\r\n}', 171, 31, 2, '2018-12-01 09:33:56', '2019-01-20 13:22:23'),
(61710, 74, 'public biscuits extends item{\r\nsuper(price,name);\r\npublic double getcalcNetprcie(){\r\ndouble p=price-0.07;\r\nreturn p;\r\n}\r\n\r\n}', 171, 31, 1, '2018-12-01 09:33:56', '2019-01-20 13:22:23'),
(61711, 76, 'package employee{\r\npublic class worker{\r\nprotected String name;\r\nprotected double salary;\r\n} \r\npublic class engineer{\r\nprotected String name;\r\nprotected double salary;\r\nprotected String department;\r\n\r\n}    \r\npublic static void main(String [] args)\r\n{\r\nScanner input =new Scanner(System.in);\r\nworker.salary=input.nextDouble();\r\nengineer.salary=input.nextDouble();\r\ndouble total=0;\r\ntotal+=salary*0.05;\r\nSystem.out.println(total);\r\n}                                                                                                           \r\n                         }', 171, 31, 2, '2018-12-01 09:33:56', '2019-01-22 10:51:56'),
(61712, 77, '192', 171, 31, 0, '2018-12-01 09:33:56', '2018-12-01 09:33:56'),
(61792, 66, '173', 179, 31, 0, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61793, 68, '179', 179, 31, 2, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61794, 69, '182', 179, 31, 0, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61795, 70, '186', 179, 31, 1, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61796, 71, '189', 179, 31, 1, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61797, 72, '190', 179, 31, 1, '2018-12-01 09:34:06', '2018-12-01 09:34:07'),
(61798, 73, 'public class n{\r\nprivate String name;\r\nprivate double price;\r\n}\r\ndouble netprice,price,discount;\r\npublic static double calcNetPrice ()\r\n{\r\nSystem.out.println(\"enter the price\");\r\n\r\nprice=input.nextdouble();\r\nSystem.out.println(\"enter the discount\");\r\ndiscount=input.nextdouble();\r\n\r\nnetprice=(price*.10)-discount;\r\n\r\nreturn netprice;\r\n}                                                                                                         \r\n    System.out.println(\"the net price is\"+netprice);', 179, 31, 1, '2018-12-01 09:34:06', '2019-01-20 13:23:02'),
(61799, 74, NULL, 179, 31, 0, '2018-12-01 09:34:06', '2019-01-20 13:23:02'),
(61800, 76, 'import java.util.Scanner;\r\nScanner input=new Scanner(System.in);\r\nint employee;\r\nstring worker;\r\nString engineer;\r\nString name;\r\ndouble salary;\r\nworker();\r\nen();\r\ncalc();\r\npublic static int worker()\r\n{\r\nfor(int i=0;i<2;i++)\r\n{\r\nSystem.out.println(\"enter the worker name\");\r\nSystem.out.println(\"enter the worker salary\");\r\nsalary=input.nextdouble();\r\nname=worker;\r\ntax=salary-.05;\r\nreturn tax;\r\n}\r\nSystem.out.println(\"tax worker is\"+tax)\r\n}\r\npublic static int en()\r\n{\r\nfor(int i=0;i<3;++)\r\n{\r\nSystem.out.println(\"enter the engineer no \"+(i+1));\r\nSystem.out.println(\"enter the salary no \"+(i+1));\r\nsalary 1=input.nextdouble();\r\nsalary 2=input.nextdouble();\r\ntax 1=salary 1-(.05);\r\ntax 2=salary 2(-.05);\r\n}\r\nSystem.out.println(\"tax engineer 1 is\"+tax1);\r\nSystem.out.println(\"tax engineer 2 is\"+tax2);\r\n}\r\nSystem.out.println(\"tax engineer  is\"+tax1)\r\nSystem.out.println(\"tax  is\"+tax2)\r\npublic static int calc()\r\n{\r\nreturn tax1+tax2+tax3;\r\n}\r\n }', 179, 31, 0, '2018-12-01 09:34:06', '2019-01-22 10:54:28'),
(61801, 77, '195', 179, 31, 2, '2018-12-01 09:34:07', '2018-12-01 09:34:07'),
(61802, 66, '171', 186, 31, 0, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61803, 68, '181', 186, 31, 0, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61804, 69, '185', 186, 31, 2, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61805, 70, '186', 186, 31, 1, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61806, 71, '189', 186, 31, 1, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61807, 72, '190', 186, 31, 1, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61808, 73, 'public class Item {\r\n       String name;\r\n       protected double price;\r\n     }\r\n   public static double calcNetprice (double price,double discount){\r\n \r\n       double price_item   =price*discount;\r\n       return price_item;\r\n}', 186, 31, 1, '2018-12-01 09:34:09', '2019-01-20 13:23:24'),
(61809, 74, 'public class Biscuits  extends item{\r\n           double disc=0.07;\r\n}       \r\n          public static String  Biscuits (double disc){\r\n                  return  calcNetprice(price,disc);   \r\n}', 186, 31, 1, '2018-12-01 09:34:09', '2019-01-20 13:23:24'),
(61810, 76, 'public class Company{\r\n\r\npublic class Human{\r\n               protected String name;\r\n                protected double salary;    \r\n}\r\n public class Worker extends Human{\r\n}\r\npublic static double calcTax(){\r\nreturn salary*0.05;\r\n}\r\npublic class Engineer extends Human{\r\nString department;\r\n{\r\npublic static double calcTax(){\r\nreturn salary*0.05;\r\n}\r\npublic static void main(String [ ]args) {\r\n                                    \r\n    }\r\n}', 186, 31, 3, '2018-12-01 09:34:09', '2019-01-22 10:55:27'),
(61811, 77, '195', 186, 31, 2, '2018-12-01 09:34:09', '2018-12-01 09:34:09'),
(61873, 66, '170', 134, 31, 2, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61875, 68, '179', 134, 31, 2, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61877, 69, '182', 134, 31, 0, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61879, 70, '186', 134, 31, 1, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61881, 71, '188', 134, 31, 0, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61883, 72, '190', 134, 31, 1, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61884, 73, 'public class item(){\r\n                                                    \r\n}', 134, 31, 0, '2018-12-01 09:34:13', '2019-01-20 13:24:37'),
(61885, 74, 'z', 134, 31, 0, '2018-12-01 09:34:13', '2019-01-20 13:24:37'),
(61886, 76, 'a', 134, 31, 0, '2018-12-01 09:34:13', '2019-01-22 10:55:39'),
(61887, 77, '192', 134, 31, 0, '2018-12-01 09:34:13', '2018-12-01 09:34:14'),
(61988, 66, '170', 96, 31, 2, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61989, 68, '179', 96, 31, 2, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61990, 69, '182', 96, 31, 0, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61991, 70, '186', 96, 31, 1, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61992, 71, '189', 96, 31, 1, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61993, 72, '190', 96, 31, 1, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(61994, 73, 'public class Item {\r\ndouble price ;\r\nString name ;\r\n}\r\npublic double  calcNetPrcie () { \r\ndouble discount ;\r\ndouble ip = new double () ;\r\nSystem.out.print(discount * ip) ;\r\n}', 96, 31, 1, '2018-12-01 09:34:19', '2019-01-20 13:24:55'),
(61995, 74, 'class Biscuits extends Item {\r\ndouble discount () ;\r\ndouble salary () ;\r\nvalue val = new value () ;\r\ndouble sala = val * discount ;\r\nSystem.out.print(sala);\r\n}', 96, 31, 1, '2018-12-01 09:34:19', '2019-01-20 13:24:55'),
(61996, 76, 'public class worker {\r\nString name ;\r\ndouble salary ;\r\n}\r\n\r\nworker (String n , double s )\r\n{ name = n ;\r\nsalary = s ;\r\n}\r\npublic double calctax () {\r\nreturn salary * 0.05 ;\r\n} \r\nclass engineer extends worker {\r\nString department ;\r\nint hours ;\r\nsuper (String name , double salary , String d , int h  )\r\ndepartment = d ;\r\nhours = h ;\r\n}\r\npublic double calcovertime () { \r\ndouble t = new double () ;\r\nif (t<300)\r\nreturn 0 ;\r\nelse \r\nreturn hours * salary / 100 ;\r\n}\r\n\r\n public class test {\r\npublic static void main ( string [] args ) {\r\nstaff s = new staff (\"Ali\" , 5000 , \"science\" , 10 )\r\ndouble x = s.calctax ();\r\ndouble y = s.calctax (); \r\n}\r\npublic double calctax () {\r\ndouble t = super.calctax ;\r\nsalary -= t ;\r\nreturn t+salary*0.05 ;\r\n}', 96, 31, 4, '2018-12-01 09:34:19', '2019-01-27 08:26:14'),
(61997, 77, '193', 96, 31, 0, '2018-12-01 09:34:19', '2018-12-01 09:34:22'),
(62023, 66, '173', 209, 31, 0, '2018-12-01 09:34:22', '2018-12-01 09:34:23'),
(62026, 68, '181', 209, 31, 0, '2018-12-01 09:34:22', '2018-12-01 09:34:23'),
(62029, 69, '183', 209, 31, 0, '2018-12-01 09:34:22', '2018-12-01 09:34:23'),
(62030, 70, '186', 209, 31, 1, '2018-12-01 09:34:22', '2018-12-01 09:34:23'),
(62033, 71, '189', 209, 31, 1, '2018-12-01 09:34:22', '2018-12-01 09:34:23'),
(62035, 72, '190', 209, 31, 1, '2018-12-01 09:34:23', '2018-12-01 09:34:23'),
(62037, 73, 'public class Item{\r\nprotected double price ;\r\nprotected String name ;\r\npublic Item(){\r\nprice =0;\r\nname=\"m\";\r\n}\r\npublic double calcNetPrcie(double discount){\r\nprice=price-disacount;\r\nreturn price;               }\r\n}', 209, 31, 2, '2018-12-01 09:34:23', '2019-01-20 13:25:11'),
(62039, 74, 'public class   Biscuits  expends Item{   \r\n     protected static double  discount;\r\n public Biscuits  (){\r\ndouble static discount =7/100;\r\n}\r\npublic Biscuits  (double p, string n , double d){\r\nsuper(double p, string n)\r\nthis.discount = d;\r\n}\r\n}', 209, 31, 1, '2018-12-01 09:34:23', '2019-01-20 13:25:11'),
(62041, 76, 'public class employee{\r\nprotected String name ;\r\nprotected double  salary ;\r\nprotected static double tax=5/100;\r\npublic void read(){\r\nscanner s =new scanner(system.in)\r\nname= s.next line();\r\nsalary=s.nextDouble();\r\ndepartment=s.nextline();\r\n}\r\n}\r\npublic class Worker expend employee{\r\nprotected String name;\r\nprotected double salary ;\r\npublic Worker(String n, double s)\r\n{\r\nname =n;\r\nsalary =s;\r\n}\r\npublic double allSalary(double tax){\r\nsalary=salary-tax;\r\nreturn salary;\r\n}\r\n}\r\npublic class Engineer expend employee{\r\nsuper (n,s)\r\nprotected String department;\r\n\r\n    public Engineer(String n, double s, String d)\r\n{\r\nname =n;\r\nsalary =s;\r\n}\r\npublic double allSalary(double tax){\r\nsalary=salary-tax;\r\nreturn salary;\r\n}   \r\n       public static void main(string[]args){\r\nemployee s1=new Worker();\r\ns1.read();\r\n employee s2=new Engineer();\r\ns2.read();\r\nemployee s3=new Engineer();\r\ns3.read();\r\ndouble allTax =s1.allSalary+s2.allSalary+s3.allSalary;\r\nsystem.out.printl(allTax );\r\n}', 209, 31, 2, '2018-12-01 09:34:23', '2019-01-22 10:59:01'),
(62042, 77, '194', 209, 31, 0, '2018-12-01 09:34:23', '2018-12-01 09:34:23'),
(62062, 66, '173', 110, 31, 0, '2018-12-01 09:34:23', '2018-12-01 09:34:24'),
(62064, 68, '179', 110, 31, 2, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62066, 69, '182', 110, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62068, 70, '186', 110, 31, 1, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62070, 71, '189', 110, 31, 1, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62072, 72, '191', 110, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62074, 73, 'public class Item {\r\ndouble price;\r\nstring name;\r\npublic static double calcNetprcie(double price,double discount)\r\n{\r\nprice =price-discount;\r\n}\r\n\r\n\r\n\r\n}', 110, 31, 1, '2018-12-01 09:34:24', '2019-01-20 13:25:39'),
(62076, 74, 'public static void main ()(string[]args){\r\nScanner input=new Scanner(System.in);\r\ndouble price;\r\ndouble discount;\r\nSystem.Out.println(\"enter the price \");\r\nprice=input.nextInt();\r\n\r\npublic class Biscuits extends Item{\r\ncalcNetprice(double price,7);\r\nSystem.Out.println(\"the price after discount is\"+calcNetprice(double price,7));\r\n\r\n\r\n}', 110, 31, 1, '2018-12-01 09:34:24', '2019-01-20 13:25:39'),
(62077, 76, 'public class employee{\r\nstring name;\r\ndouble salary;\r\npublic static void main ()(string[]args){\r\ndouble sumtaxs=0;\r\npublic static double amount_of_taxs(double salary ,double taxs)\r\n\r\n{\r\nsumtaxs-=(salary*5.0%);\r\n\r\n}\r\npublic class Engineer extends employee{\r\nstring department;\r\nEngineer e1=new engineer();\r\nEngineer e2=new engineer();\r\n\r\namount_of_taxs(e1.salary,e2.salary);\r\n\r\n\r\n}\r\n\r\n\r\npublic class worker extends employee{\r\nEngineer w1=new engineer();\r\n\r\n\r\namount_of_taxs(w1.salary);\r\n}\r\n}', 110, 31, 0, '2018-12-01 09:34:24', '2019-01-22 10:59:39'),
(62078, 77, '194', 110, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:34:24'),
(62079, 66, '170', 223, 31, 2, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62081, 68, '181', 223, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62083, 69, '185', 223, 31, 2, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62085, 70, '186', 223, 31, 1, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62087, 71, '188', 223, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62089, 72, '191', 223, 31, 0, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62091, 73, 'public class Item{\r\ndouble price ; \r\nString name ;\r\npublic Item(){  }\r\npublic double calcNetPrice(double discount)  {\r\ndiscount=discount/100;\r\ndouble NetPrice =price *discount ; \r\nreturn NetPrice;\r\n}', 223, 31, 2, '2018-12-01 09:34:24', '2019-01-20 14:28:01'),
(62093, 74, 'public class Biscuits extends Item{\r\npublic calcNetPrice (){\r\ndouble NetPrice=price*0.07;\r\nreturn NetPrice;\r\n}', 223, 31, 2, '2018-12-01 09:34:24', '2019-01-20 14:28:01'),
(62095, 76, 'public class Worker {\r\nString name ;\r\ndouble salary ;\r\npublic Worker (){\r\n}\r\npublic Worker (String name ,double salary ){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\npublic calcTax(){\r\ndouble tax=salary*0.05;\r\nsystem.out.println (\"tax =\"+tax);\r\n}   \r\npublic class Engineer extends worker {\r\nString department ;\r\npublic engineer()\r\n{\r\n}\r\npublic Engineer (String department ){\r\nthis.department =department ;\r\n}\r\npublic Engineer (String name,double salary ,String department ){\r\nsuper(name,salary);\r\nthis.department=department ;\r\npublic calcTax(){\r\ndouble tax=salary*0.05;\r\nSystem.out.println (\"task=\"+task );\r\n\r\nimport java .util.Scanner ;\r\npublic class Main{\r\npublic Static void main(String [] args ){\r\nScanner sc=new Scanner (system.in);\r\ndouble total;\r\nSystem.out.Println(\"Enter data of 1 worker and 2 engineer \")\r\nWorker w=new Worker ( \"ahmed\",3000);\r\nEngineer e1=new Engineer ( \"mohamed \" ,4000,is);\r\nEngineer e2=new Engineer (omar ,5000,cs);\r\ndouble t1=w.calcTax();\r\ndouble t2=e1.calcTax();\r\ndouble t3=e2.calcTax();\r\ntotal =t1+t2+t3;\r\nSystem .out.println (\"the total amount of collected taxes is \"+ total);', 223, 31, 2, '2018-12-01 09:34:24', '2019-01-22 14:09:03'),
(62097, 77, '195', 223, 31, 2, '2018-12-01 09:34:24', '2018-12-01 09:36:14'),
(62286, 66, '170', 157, 31, 2, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62288, 68, '179', 157, 31, 2, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62290, 69, '182', 157, 31, 0, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62292, 70, '186', 157, 31, 1, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62294, 71, '188', 157, 31, 0, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62296, 72, '190', 157, 31, 1, '2018-12-01 09:34:33', '2018-12-01 09:34:34'),
(62299, 73, 'public clase item{\r\nprotected double price;\r\nprotected String name;\r\n\r\n\r\npublic void setprice(double price){this.price=price};\r\npublic void setname(String name){this.name=name};\r\npublic double getprice(){return price};\r\npublic String getname(){return name};\r\n\r\npublic void calcNetPrice(double discount){\r\nprice-=discount;\r\n}\r\n}', 157, 31, 2, '2018-12-01 09:34:34', '2019-01-20 13:27:45'),
(62301, 74, 'public class Biscuits extends item{\r\n\r\npublic void calcNetPrice(){\r\n\r\nprice-=0.7;\r\n}\r\n}', 157, 31, 2, '2018-12-01 09:34:34', '2019-01-20 13:27:45'),
(62303, 76, 'public clase employee{\r\nprotected String name;\r\nprotected double salary;\r\nprotected static tax=0;\r\n\r\npublic employee(String n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\npublic display(){\r\nScanner input=new Scanner(System.in);\r\nSystem.out.println(\"entre name\");\r\nname=input.next();\r\nSystem.out.println(\"entre salary\");\r\nsalary=input.nextDouble();\r\n\r\npublic double tax(){\r\ntax=salary*0.05;\r\nSystem.out.println(tax);\r\n};\r\n\r\n\r\n\r\n}\r\n\r\npublic clase worker extend employee{\r\n\r\npublic worker(String n,double s){\r\nsuper(n,s);\r\n}\r\n\r\npublic display(){\r\nScanner input=new Scanner(System.in);\r\nSystem.out.println(\"entre name\");\r\nname=input.next();\r\nSystem.out.println(\"entre salary\");\r\nsalary=input.nextDouble();\r\n}\r\n\r\n\r\n}\r\n\r\npublic clase Engineer extend employee{\r\nstring department;\r\n\r\npublic Engineer(String n,double s,String d){\r\nsuper(n,s);\r\ndepartment=d;\r\n}\r\n\r\npublic display(){\r\nScanner input=new Scanner(System.in);\r\nSystem.out.println(\"entre name\");\r\nname=input.next():\r\nSystem.out.println(\"entre salary\");\r\nsalary=input.nextDouble();\r\nSystem.out.println(\"entre department\");\r\ndepartment=input.next();\r\n}\r\n\r\n\r\n}\r\npackage test{\r\nimport java.utill.Scanner;\r\npublic clase main{\r\n\r\n\r\npublic static void main(String [] args){\r\nScanner input=new Scanner(System.in);\r\n worker w=new worker()\r\nw.desplay;\r\nEngineer e1=new Engineer();\r\ne1.desplay;\r\nEngineer e2=new Engineer();\r\ne2.desplay;\r\n\r\n}\r\n}\r\n}', 157, 31, 4, '2018-12-01 09:34:34', '2019-01-22 10:37:34'),
(62305, 77, '195', 157, 31, 2, '2018-12-01 09:34:34', '2018-12-01 09:34:34'),
(62378, 66, '170', 125, 31, 2, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62380, 68, '179', 125, 31, 2, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62382, 69, '182', 125, 31, 0, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62384, 70, '187', 125, 31, 0, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62386, 71, '188', 125, 31, 0, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62387, 72, '190', 125, 31, 1, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62388, 73, 'Class  Item()\r\n{\r\nString name;\r\ndouble price;\r\nItem()\r\n{\r\nname= \"Mohamed\";\r\nprice = 800.0;\r\n}\r\nItem(String n,double p)\r\n{\r\nname = n;\r\nprice = p;\r\n}\r\ndouble  calcNetPrcie (double discount)\r\n{\r\n   double pr = price - discount;\r\nreturn pr;\r\n}\r\n}', 125, 31, 2, '2018-12-01 09:34:39', '2019-01-20 13:43:40'),
(62389, 74, 'Class Biscuits extends Item()\r\n{\r\nString name;\r\ndouble price;\r\nBiscuits()\r\n{\r\nsuper();\r\n}\r\nBiscuits(String n , double p)\r\n{\r\nsuper(n,p);\r\n}\r\ndouble calcNetPrice()\r\n{\r\ndouble pri = price+((price/100)*7);\r\nreturn pri;\r\n}\r\n}', 125, 31, 2, '2018-12-01 09:34:39', '2019-01-20 13:43:41'),
(62390, 76, 'package m;\r\n             public class Test { \r\npublic static void main(String[] args) { \r\n{\r\nemployee e1 = new employee();\r\nemployee e2, new employee();\r\nengineer en1 =new engineer();\r\n   double a = e1.calctax();\r\n    double b = e2.calctax();\r\n     doube c = en1.calctax();\r\nSystem.out.println(\"the total amount of taxes is \"+(a+b+c+)); \r\n}\r\n\r\nclass employee()\r\n{\r\nString name;\r\ndouble salary;\r\nemployee()\r\n{\r\nname= \"mohamed\";\r\nsalary = 2500;\r\n}\r\nemployee(String n,double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n}\r\ndouble calctax()\r\n{\r\n double t = (salary/100)*5;\r\n} \r\n} \r\nclass engineer extends employee()\r\n{\r\nString name;\r\ndouble salary;\r\nString department;\r\nengineer()\r\n{\r\nsuper();\r\ndepartment =\"SE\";\r\n}\r\nengineer(String n,d salary,String department)\r\n{\r\nsuper(n,s);\r\nthis.department = department;\r\n}\r\ndouble calctax()\r\n{\r\n double t = (salary/100)*5;\r\n} \r\n}', 125, 31, 3, '2018-12-01 09:34:39', '2019-01-22 12:07:24'),
(62391, 77, '194', 125, 31, 0, '2018-12-01 09:34:39', '2018-12-01 09:34:57'),
(62412, 66, '170', 196, 31, 2, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62413, 68, '179', 196, 31, 2, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62414, 69, '182', 196, 31, 0, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62415, 70, '186', 196, 31, 1, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62416, 71, '189', 196, 31, 1, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62417, 72, '190', 196, 31, 1, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62418, 73, 'public class Item\r\n{privet price;\r\nprivet name ;             \r\npublic Item()\r\n{ price = 10;\r\nname=book;\r\n}\r\npublic Item(int price,String name)\r\n{this.price=price;\r\nthis.name=name;}\r\n\r\n\r\n\r\n                                                                          \r\n  }', 196, 31, 1, '2018-12-01 09:34:42', '2019-01-20 12:33:51'),
(62419, 74, 'public class{}', 196, 31, 0, '2018-12-01 09:34:42', '2019-01-20 12:33:51'),
(62420, 76, 'public class employee \r\n{\r\nprivet name;\r\nprivet salary;\r\npublic worker extends employee {\r\n\r\n}\r\npublic Engineer extends employee{\r\n privet department;\r\n}\r\n\r\n}', 196, 31, 0, '2018-12-01 09:34:42', '2019-01-20 13:32:58'),
(62421, 77, '193', 196, 31, 0, '2018-12-01 09:34:42', '2018-12-01 09:34:42'),
(62472, 66, '172', 107, 31, 0, '2018-12-01 09:34:45', '2018-12-01 09:34:45'),
(62473, 68, '181', 107, 31, 0, '2018-12-01 09:34:45', '2018-12-01 09:34:45'),
(62475, 69, '184', 107, 31, 0, '2018-12-01 09:34:45', '2018-12-01 09:34:45'),
(62477, 70, '186', 107, 31, 1, '2018-12-01 09:34:45', '2018-12-01 09:34:45'),
(62479, 71, '189', 107, 31, 1, '2018-12-01 09:34:45', '2018-12-01 09:34:45'),
(62481, 72, '190', 107, 31, 1, '2018-12-01 09:34:45', '2018-12-01 09:34:46'),
(62484, 73, 'public class item{\r\ndouble price;\r\nString name;\r\n}\r\npublic static double cal Net price(double price , string name)\r\n{     \r\n    item price =price *name;                                                                                                \r\n  return item price;\r\n}\r\n}', 107, 31, 1, '2018-12-01 09:34:45', '2019-01-20 13:28:31'),
(62487, 74, 'public class item{ \r\ndouble price;\r\n double discount; \r\nString item name;\r\npublic class Biscuit extends item{  \r\npublic Static double biscuit ()\r\ndouble discount =7%;\r\npublic static double get discount()\r\nreturn discount ;\r\n }                                                                                                       \r\n}', 107, 31, 1, '2018-12-01 09:34:45', '2019-01-20 13:28:31'),
(62490, 76, 'public class company{ \r\nString name ;\r\ndouble salary;\r\nint tax=5%;\r\n int  n;\r\n\r\npublic class employee extends   company{\r\ntotal =salary - tax\r\n}\r\npublic class engineer extends company{\r\nString department;\r\n}\r\npackage company;                                                                                                             \r\n  import java.util .Scanner ;\r\n// public class company {\r\n//public Static void main (String[]arg){\r\n//Scanner input =new Scanner (System .in  );\r\n\r\n//super(name ,salary,tax);', 107, 31, 0, '2018-12-01 09:34:45', '2019-01-22 10:41:57'),
(62493, 77, '194', 107, 31, 0, '2018-12-01 09:34:45', '2018-12-01 09:34:46'),
(62531, 66, '173', 214, 31, 0, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62532, 68, '179', 214, 31, 2, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62533, 69, '182', 214, 31, 0, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62534, 70, '187', 214, 31, 0, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62535, 71, '188', 214, 31, 0, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62536, 72, '190', 214, 31, 1, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62537, 73, 'public class Item{\r\nprotected double price;\r\nprotected String name;\r\npublic double CalcNetPrice (){\r\nprice.p=new price;\r\np+=p;\r\n}}', 214, 31, 1, '2018-12-01 09:34:46', '2019-01-20 13:37:35'),
(62538, 74, 'public class Biscuits extends Item{\r\n(CalcNetPrice () )*.7;\r\n}', 214, 31, 1, '2018-12-01 09:34:46', '2019-01-20 13:37:35'),
(62539, 76, 'public class employee{\r\n protected String name;\r\nprotected double salary;\r\nset name();\r\nname n= new name;\r\nset salary();\r\nsalary s=new salary;\r\n}\r\npublic class Engineer extends employee{\r\n protected String department();\r\n}\r\n\r\n public static int main(String[] args) {\r\nget employee.name();\r\nget Engineer 1.name();\r\nget Engineer 2.name();\r\ns= get employee.salary +get Engineer.salary;\r\ns*=.5;\r\nSystem.out.print(\"the total amount of collected taxes from all employees is\" +s);}', 214, 31, 1, '2018-12-01 09:34:46', '2019-01-22 10:39:44'),
(62540, 77, '194', 214, 31, 0, '2018-12-01 09:34:46', '2018-12-01 09:34:46'),
(62561, 66, '170', 216, 31, 2, '2018-12-01 09:34:47', '2018-12-01 09:34:47'),
(62562, 68, '181', 216, 31, 0, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62563, 69, '185', 216, 31, 2, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62564, 70, '186', 216, 31, 1, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62565, 71, '189', 216, 31, 1, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62566, 72, '190', 216, 31, 1, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62567, 73, 'public class Item {\r\ndouble price;\r\nString name;\r\npublic double calcNetPrcie(double discount)\r\n{  double newprice;\r\nnewprice=price - discount;\r\nreturn newprice;\r\n}\r\n}', 216, 31, 2, '2018-12-01 09:34:47', '2019-01-20 13:37:50'),
(62568, 74, 'public class Biscuits extends Item \r\n{  final double discount =7/100;\r\npublic double calcNetPrcie()\r\n{  double newprice;\r\nnewprice=price - discount;\r\nreturn newprice;\r\n}\r\n}', 216, 31, 2, '2018-12-01 09:34:47', '2019-01-20 13:37:50'),
(62569, 76, 'package com.company;\r\n\r\npublic class employee \r\n{\r\nstring name;\r\ndouble salary;\r\n}                  \r\npublic class worker extends employee {\r\n\r\n}\r\npublic class engineer extends employee {\r\nstring department;\r\n}\r\nimport java.util.Scanner;\r\npublic class Main {\r\n\r\npublic static void main (String []args)\r\n{ Scanner input =new Scanner (System.in);\r\nengineer x=new engineer();\r\nengineer y=new engineer();\r\nworker z = new worker();\r\nx.name= input.next();\r\nx.salary=input.nextDouble();\r\nx.department = input.next();\r\ny.name= input.next();\r\ny.salary=input.nextDouble();\r\ny.department = input.next();\r\nz.name= input.next();\r\nz.salary=input.nextDouble();\r\ndouble total ;\r\ntotal=(x.salary*0.05)+(y.salary*0.05)+(z.salary*0.05);\r\nsystem.out.print(total);\r\n}\r\n}', 216, 31, 2, '2018-12-01 09:34:47', '2019-01-22 10:34:58'),
(62570, 77, '195', 216, 31, 2, '2018-12-01 09:34:47', '2018-12-01 09:34:48'),
(62709, 66, '170', 218, 31, 2, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62712, 68, '179', 218, 31, 2, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62714, 69, '185', 218, 31, 2, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62717, 70, '186', 218, 31, 1, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62720, 71, '189', 218, 31, 1, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62723, 72, '190', 218, 31, 1, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62725, 66, '170', 219, 31, 2, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62726, 73, 'class Item{\r\ndouble price;\r\nstring name;\r\npublic double calcNetprice(double dis)\r\n{double discount =dis/100;\r\ndouble p=discount*price;\r\nreturn price-p;\r\n}                                                                                                              \r\n   }', 218, 31, 2, '2018-12-01 09:34:50', '2019-01-20 13:38:07'),
(62727, 68, '181', 219, 31, 0, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62729, 74, 'class Biscuits extends Item{\r\npublic double calcNetprice(double dis)\r\n{super.calcNetprice(7);\r\n} \r\n}', 218, 31, 2, '2018-12-01 09:34:50', '2019-01-20 13:38:07'),
(62730, 69, '183', 219, 31, 0, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62731, 76, 'class Employee{\r\nprivate String name ;\r\nprivate double salary;\r\npublic Employee()\r\n{}\r\npublic Employee(String name,double Salary)\r\n{this.name=name;\r\nthis.salary=salary;}\r\npublic String getName()\r\n{return name;}\r\nPublic double getSalary()\r\n{return salary;}\r\npublic setName(String name) \r\n{this.name=name;}\r\npublic setSalary(double salary)\r\n{this.salary=salary;}\r\npublic double calcTax()\r\n{double t=5/100;\r\ndouble Tax=t*salary;\r\nreturn Tax;\r\n}\r\n}\r\nclass worker extends Employee{\r\npublic worker()\r\n{\r\n}\r\npublic worker(String name,double salary)\r\n{super(name,salary);\r\n}\r\n }  \r\nclass worker extends Employee{\r\npublic worker()\r\n{\r\n}\r\npublic worker(String name,double salary)\r\n{super(name,salary);\r\n}\r\n }     class worker extends Employee{\r\npublic worker()\r\n{\r\n}\r\npublic worker(String name,double salary)\r\n{super(name,salary);\r\n}\r\n }     class engineer extends Employee{\r\nString department;\r\npublic engineer()\r\n{\r\n}\r\npublic engineer(String name,double salary,String dep)\r\n\r\n{super(name,salary);\r\ndepartment=dep;\r\n}\r\n }                                                                                                                 \r\n  public Static void main()\r\n{worker w1=new worker();\r\nengineer e1=new engineer();\r\nengineer e2=new engineer();\r\ndouble totalTax=0;\r\ntotalTax+=w1.calcTax()+e1.calcTax()+e2.calcTax();\r\nSystem.out.println(totalTax);\r\n}\r\n\r\n\r\n}', 218, 31, 4, '2018-12-01 09:34:50', '2019-01-22 11:03:25'),
(62732, 71, '189', 219, 31, 1, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62733, 77, '195', 218, 31, 2, '2018-12-01 09:34:50', '2018-12-01 09:34:51'),
(62734, 72, '190', 219, 31, 1, '2018-12-01 09:34:51', '2018-12-01 09:34:51'),
(62735, 73, 'public class Item{\r\nint price;\r\nstring name;\r\npublic void clcNetPrice(int price)\r\n{this.price=price;}         \r\n}', 219, 31, 1, '2018-12-01 09:34:51', '2019-01-20 13:38:26'),
(62736, 74, 'public class biscuits extends Item{\r\npublic void clcNetPrice(int x){\r\nprice=((x-7)/x)*100;\r\n}\r\n}', 219, 31, 1, '2018-12-01 09:34:51', '2019-01-20 13:38:26'),
(62737, 76, 'public class employee{\r\nprotected String name ;\r\nprotected  double salary;\r\npublic void setName(String name)\r\n{this.name=name;}         \r\npublic void setSalary(double salary)\r\n{this.salary=salary;}     \r\npublic double getSalary(){return salary}             \r\npublic String getSalary(){return name}    \r\npublic double tax(int x){\r\nsalary =((x-5)/x)*100;\r\nint y =x-salary;\r\n} \r\n}  \r\npublic class', 219, 31, 1, '2018-12-01 09:34:51', '2019-01-22 11:05:05'),
(62738, 77, '195', 219, 31, 2, '2018-12-01 09:34:51', '2018-12-01 09:34:51'),
(62759, 66, '166', 195, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62760, 68, '179', 195, 31, 2, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62761, 69, '182', 195, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62762, 70, '186', 195, 31, 1, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62763, 71, '189', 195, 31, 1, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62764, 72, '190', 195, 31, 1, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62765, 73, 'public class Item{                                                                                                                \r\n                protected  double price ;           \r\n                protected  string name;   \r\npublic Item(double p, string s){\r\nprice =p;\r\nname = s;\r\n}  \r\n             \r\npublic void calcNetPrcie(double disc){\r\ndouble v = price*(disc/100);\r\nprice - = v ;\r\n}\r\n}', 195, 31, 2, '2018-12-01 09:34:52', '2019-01-20 13:32:40'),
(62766, 74, 'public class inherits extends Item{\r\nsuper.calcNetPrci(7);\r\n\r\n}', 195, 31, 1, '2018-12-01 09:34:52', '2019-01-20 13:32:40'),
(62767, 76, 'public class employee{\r\nprotected string name ;\r\nprotected double salary;\r\nprotected double tax ;\r\n}                           \r\n\r\n                                                                                     \r\npublic worker extends employee{\r\n\r\npublic worker ( string s, double n)\r\n{\r\nname = s;\r\nsalary = n;\r\n\r\n}\r\npublic double getTax (){\r\ntax = salary * (5/100);\r\nreturn tax;\r\n}\r\n}                                         \r\n\r\npublic Engineer extends employee {\r\nprivate  string department;\r\npublic Engineer ( string s){\r\ndepartment = s;}\r\npublic Engineer (string s, double n, string r){\r\nname = s;\r\nsalary = n;\r\ndepartment = r }\r\npublic double getTax (){\r\ntax = salary * (5/100);\r\nreturn tax;\r\n}\r\n}\r\npublic class human{\r\npublic static void main (string [] args)\r\n{\r\nworker w1 =new worker (\"ahmed\",1000);\r\nEngineer e1 = new Engineer(\"samy\",3000,\"is\");\r\nEngineer e2 = new Engineer(\"ali\",2000,\"cs);\r\nSystem.out.println(\"all tax =\"+w1.getTax+e1.getTax+e2.getTax);\r\n\r\n}\r\n}', 195, 31, 5, '2018-12-01 09:34:52', '2019-01-22 10:41:05'),
(62768, 77, '195', 195, 31, 2, '2018-12-01 09:34:52', '2018-12-01 09:34:52'),
(62779, 66, '173', 111, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62780, 68, '181', 111, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62781, 69, '182', 111, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62782, 70, '187', 111, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62783, 71, '188', 111, 31, 0, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62784, 72, '190', 111, 31, 1, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62785, 73, 'public class    nameditem {\r\nstring name;\r\ndouble price;\r\n}                                                                                                        \r\n                       public void name (string n)    {\r\nname=n\r\nreturn n;\r\n}  \r\n                       public double price(double p )    {\r\nprice=p\r\nreturn p;\r\n}         \r\n       public double calcNetPrice (double calc ){\r\ndouble items , sum=0 , discount=0;\r\nfor(int i ; i<=items;i++){\r\nSystem.out.println(\"enter your price for  \" +price +i)\r\nprice();\r\nsum+(p-(p*discount));\r\n\r\n}\r\n public void print(string name)    {\r\nSystem.out.println(name());\r\nSystem.out.println(price());\r\nSystem.out.println(calcNetPrice );\r\n\r\n\r\n\r\n\r\n\r\n}', 111, 31, 1, '2018-12-01 09:34:52', '2019-01-20 13:39:01'),
(62786, 74, 'public class biscuits extend nameditem{\r\n\r\n}\r\nsuper calcNetPrice ( double calc );\r\ndiscount=.07', 111, 31, 1, '2018-12-01 09:34:52', '2019-01-20 13:39:01'),
(62787, 76, NULL, 111, 31, 0, '2018-12-01 09:34:52', '2019-01-22 11:05:20'),
(62788, 77, '195', 111, 31, 2, '2018-12-01 09:34:52', '2018-12-01 09:34:53'),
(62839, 66, '172', 161, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62840, 68, '181', 161, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62841, 69, '185', 161, 31, 2, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62842, 70, '186', 161, 31, 1, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62843, 71, '189', 161, 31, 1, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62844, 72, '190', 161, 31, 1, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62845, 73, 'public  class item { string name;  double price ;                                                                                                 \r\n                                 public double calcNetprice (double discount)   { price *= discount/100}   }', 161, 31, 2, '2018-12-01 09:34:56', '2019-01-20 13:41:59'),
(62846, 74, 'public class biscuits extends item {   calcNetprice (7)  }', 161, 31, 1, '2018-12-01 09:34:56', '2019-01-20 13:41:59'),
(62847, 76, 'class worker{ string Name ;  int Salary ;\r\n   worker (string name,int salary) {\r\n            Name=name;  Salary=salary ;  }                                                                       \r\n   class engineer { string Name; int Salary; string Department;\r\nengineer(string name,int salary,string department){\r\nName=name;  Salary=salary; Department=department; }\r\nclass main{\r\npublic static void main (string[ ]args) {\r\nscanner input =new scanner(system.in);\r\nworker w =new worker ();\r\nengineer e1 =new engineer();\r\nengineer e2 =new engineer();', 161, 31, 2, '2018-12-01 09:34:56', '2019-01-22 12:03:36'),
(62848, 77, '195', 161, 31, 2, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62849, 66, '170', 168, 31, 2, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62850, 68, '181', 168, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62851, 69, '182', 168, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62852, 70, '186', 168, 31, 1, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62853, 71, '188', 168, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62854, 72, '191', 168, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62855, 73, 'public class Item()\r\n{\r\nprivate double price;\r\nprivate string name;\r\n}\r\npublic static double CalcNetPrice (           double       p; double           d)\r\n{\r\ndouble discount=0;\r\ndiscount =p-d;\r\nreturn discount;   \r\n}', 168, 31, 1, '2018-12-01 09:34:56', '2019-01-20 13:43:19'),
(62856, 74, 'public class biscuits extends item()\r\n{\r\npublic biscuits ()\r\n{\r\ndouble discount=\r\n7%;\r\n}\r\n}', 168, 31, 1, '2018-12-01 09:34:56', '2019-01-20 13:43:19'),
(62857, 76, 'package ask;\r\nimport jave.util.scannr;\r\npublic class    Employee\r\n{\r\n                         private string name;\r\nprivate  double salary;\r\nprivate string department;\r\n}\r\npublic Emplyee()\r\n{\r\n}\r\npublic Emploee(\r\nstring s;double d)\r\n{\r\nstring s =name;\r\ndouble d=salary;\r\n}\r\npublic Employee ( strind s;\r\ndouble d; string t)\r\n{\r\nthis.Empo', 168, 31, 1, '2018-12-01 09:34:56', '2019-01-22 12:05:36'),
(62858, 77, '194', 168, 31, 0, '2018-12-01 09:34:56', '2018-12-01 09:34:56'),
(62899, 66, '173', 175, 31, 0, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62900, 68, '179', 175, 31, 2, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62901, 69, '182', 175, 31, 0, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62902, 70, '186', 175, 31, 1, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62903, 71, '189', 175, 31, 1, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62904, 72, '190', 175, 31, 1, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62905, 73, '{\r\n public class item \r\n{\r\ndouble price;\r\nstring name;\r\npublic item()\r\n{\r\n}\r\nvoid CalcNetprice()\r\nSystem.out.printIn(\"price\"+price+\"name\"+name)\r\n\r\n}', 175, 31, 1, '2018-12-01 09:35:03', '2019-01-20 13:44:16'),
(62906, 74, 'public class biscuits extends item\r\n{\r\npublic biscuits ()\r\n{\r\n}\r\nint dis=(biscuits*93)/100;\r\n}', 175, 31, 1, '2018-12-01 09:35:03', '2019-01-20 13:44:16'),
(62907, 76, 'import java .util.Scanner;\r\n{\r\npublic class worker\r\n{\r\nstring name;\r\ndouble salary;\r\npublic worker()\r\n{\r\n}\r\n}\r\npublic class engineer\r\n{\r\nstring name;\r\ndouble salary;\r\ndouble department;\r\npublic engineer()\r\n{\r\n}  \r\n}\r\npublic static void main (string []args)\r\nScanner input =new Scanner(System.in);\r\nint x,y;\r\nSystem .out.print (\"enter the number of the worker and engineer\");\r\nx=input.next Int();\r\ny=input.next Int();\r\nint a=worker (x);\r\nint b=engineer(y);\r\nint total  tax=((x+y)*95)/100;\r\nSystem .out.print(\"the total tax\"+total tax );', 175, 31, 2, '2018-12-01 09:35:03', '2019-01-22 13:00:26'),
(62908, 77, '194', 175, 31, 0, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62915, 66, '170', 211, 31, 2, '2018-12-01 09:35:03', '2018-12-01 09:35:03'),
(62917, 68, '179', 211, 31, 2, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(62919, 69, '185', 211, 31, 2, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(62921, 70, '186', 211, 31, 1, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(62923, 71, '188', 211, 31, 0, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(62925, 72, '190', 211, 31, 1, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(62927, 73, 'public class Item{                                                                                                            \r\n      public double price; \r\n public String name;   \r\n    puplic double calcNetPrcie (double d )\r\n{    double discountprice=price-(price*d);\r\n       return discountprice;}', 211, 31, 2, '2018-12-01 09:35:03', '2019-01-20 13:44:36'),
(62929, 74, 'public class Biscuits extends Item {\r\n          Biscuits b=new Biscuits();\r\n          b. calcNetPrcie (.07);', 211, 31, 1, '2018-12-01 09:35:03', '2019-01-20 13:44:36'),
(62931, 76, 'public class  worker{\r\npublic String name;\r\npublic double salary;\r\n}\r\npublic class engineer{\r\npublic String name;\r\npublic double salary;\r\npublic String department;\r\n\r\n}\r\npublic class test{\r\npublic static void main(String[ ]args)\r\n{\r\nworker w= new worker();\r\nengineer e1=new engineer();\r\nengineer e2=new engineer();\r\n Scanner input=new Scanner(System.in);\r\nSystem.out.println(\"Enter worker name\");\r\nw.name=input.nexteLine();\r\n     System.out.println(\"Enter worker salary\");\r\nw.salary=input.nexteDouble();\r\nSystem.out.println(\"Enter engineer1 name\");\r\n   e1.name=input.nexteLine();                                                                         \r\n    System.out.println(\"Enter engineer1 salary\");  \r\n     e1.salary=input.nexteDouble();    \r\n       System.out.println(\"Enter engineer1 department\");  \r\n       e1.name=input.nexteLine();\r\nSystem.out.println(\"Enter engineer2 name\");\r\n   e2.name=input.nexteLine();                                                                         \r\n    System.out.println(\"Enter engineer2 salary\");  \r\n     e2.salary=input.nexteDouble();    \r\n       System.out.println(\"Enter engineer2 department\");  \r\n       e2.name=input.nexteLine();\r\ndouble tax1=w.salary *.05;\r\ndouble tax2=e1.salary *.05;\r\ndouble tax3=e2.salary *.05;\r\nSystem.out.println(\"total taxes=\"tax1+tax2+tax3);\r\n}\r\n}', 211, 31, 3, '2018-12-01 09:35:03', '2019-01-22 12:17:58'),
(62933, 77, '195', 211, 31, 2, '2018-12-01 09:35:03', '2018-12-01 09:35:04'),
(63029, 66, '166', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63030, 68, '181', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63031, 69, '182', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63032, 70, '187', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63033, 71, '188', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63034, 72, '190', 137, 31, 1, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63035, 73, 'Public class Item\r\n{\r\nString name;\r\ndouble price;\r\n double discount;\r\nPublic double calcNetPrice(double d)\r\n{\r\nreturn price= d;\r\n}\r\nPublic static void main(String [] args)\r\n{\r\nItem it = new item(double d);\r\n}', 137, 31, 1, '2018-12-01 09:35:08', '2019-01-20 13:51:15'),
(63036, 74, 'public class Item\r\n{String name;\r\ndouble price;\r\n double discount;\r\nPublic double calcNetPrice(double d)\r\n{\r\nreturn price= d;\r\n}\r\n}\r\npublic class Biscuits extends Item\r\n{\r\nPublic double calcNetPrice(double d)\r\n{\r\nreturn double price= (d*7)/100;\r\n}\r\nPublic static void main(String [] args)\r\n{\r\nItem it = new item(double d);\r\n}', 137, 31, 2, '2018-12-01 09:35:08', '2019-01-20 13:51:15'),
(63037, 76, 'public class company\r\n{\r\n\r\nint Worker =1;\r\nint Engineer =2;\r\nString name;\r\ndouble salary;\r\nString department;\r\npublic void setWorker(String n,double s)\r\n{\r\nname = n;\r\nthis.salary=s;\r\n}\r\nPublic void setEngineer(String n ;double s; String d)\r\n{\r\nname=n;\r\nthis.salary=s;\r\ndepartment=d;\r\n}\r\npublic double getworkertax()\r\n{\r\nreturn t1= (salary*5)/100;\r\npublic double getengineertax()\r\n{\r\nreturn t2=(salary*5)/100;\r\n}\r\npublic double get total amount of collected taxes()\r\n{\r\nreturn t1+t2;\r\n}\r\npublic static void main(String [] args)\r\n{\r\nCompany w =new company();\r\nCompany e = new company();\r\nCompany t = new company();\r\nw.setWorker(string n; double s)\r\nSystem.out.println(w.getworkertax());\r\ne.setEngineeer(String n; double s; String d);\r\nSystem.put.println(e.getengineertax);\r\nSystem.out.prinln(t. total amount of collected taxes())\r\n}\r\n}\r\n}', 137, 31, 2, '2018-12-01 09:35:08', '2019-01-22 12:21:29');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(63038, 77, '194', 137, 31, 0, '2018-12-01 09:35:08', '2018-12-01 09:35:08'),
(63096, 66, '170', 166, 31, 2, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63097, 68, '181', 166, 31, 0, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63098, 69, '182', 166, 31, 0, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63100, 70, '186', 166, 31, 1, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63102, 71, '189', 166, 31, 1, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63104, 72, '190', 166, 31, 1, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63106, 73, 'public   class item{\r\nprivate double price;\r\nprivate String name;\r\npublic item(){ }\r\npublic String get_name(){return name;\r\n}\r\npublic void set_name(String name){\r\nthis.name=name;}\r\npublic double get_price(){\r\nreturn price;}\r\npublic void set_price(double price){\r\nthis.price=price;}\r\npublic  double calculate( double price){\r\ndiscount=price-(price*10/100);\r\nreturn discount;}', 166, 31, 2, '2018-12-01 09:35:11', '2019-01-20 13:39:40'),
(63108, 74, 'public class Biscuits extends item{\r\npublic double calculate(double price){\r\ndiscount=price-(price*/100/7)\r\nreturn discount;}', 166, 31, 1, '2018-12-01 09:35:11', '2019-01-20 13:39:40'),
(63110, 76, 'package com.company;\r\n\r\nimport java.util.employee;\r\nimport java.util.worker;\r\nimport java.util.engineer;\r\npublic class human{\r\npublic class employee{\r\npublic String name;\r\npublic human(){}\r\npublic human(){String name,double salary}\r\npublic double salary;\r\npublic double tax(double salary){\r\npay =salary-(salary*100/5);\r\nreturn pay;}\r\npublic class worker extends human{\r\npublic worker(){String name,double salary}\r\n}\r\npublic class engineer extends employee{\r\nString department;\r\npublic engineer(){String name,double salary,String department}\r\n}\r\npublic static void main(String[] args){\r\n                    double pay;                                                                                       \r\n                      worker w=new worker();\r\nw.name=\"worker\";\r\nw.salary=2000;\r\nengineer e=new engineer();\r\ne.name=\"engineer\";\r\ne.salary=3000;  \r\ne.department=\"is\";\r\nengineer g=new engineer();\r\ng.name=\"engineer\";\r\ng.salary=3500;\r\ng.department=\"bio\";\r\ndouble total+=pay;\r\nSystem.out.print(total);\r\n}\r\n}', 166, 31, 1, '2018-12-01 09:35:11', '2019-01-22 11:06:55'),
(63112, 77, '195', 166, 31, 2, '2018-12-01 09:35:11', '2018-12-01 09:35:11'),
(63116, 66, '170', 217, 31, 2, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63117, 68, '181', 217, 31, 0, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63118, 69, '182', 217, 31, 0, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63119, 70, '186', 217, 31, 1, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63120, 71, '189', 217, 31, 1, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63121, 72, '191', 217, 31, 0, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63122, 73, 'public class item{\r\nprotected double price;\r\nprotected string name;\r\n   public item(){}          \r\npublic void setcalcNetPrice(  double amount)\r\n{\r\n     price =price-amount;\r\n}\r\npublic double getcalcNetPrice()\r\n{\r\n        return price;                                                \r\n}                     \r\n}', 217, 31, 2, '2018-12-01 09:35:11', '2019-01-20 14:19:02'),
(63123, 74, 'public class Biscuits extends item{\r\n                                                         public Biscuits(){}\r\n                                                          super.getcalcNetPrice()*0.07;\r\n}', 217, 31, 1, '2018-12-01 09:35:11', '2019-01-20 14:19:02'),
(63124, 76, 'public class employee{\r\n                 public class worker extends employee{\r\n                           \r\n                 protected string name;\r\n                 protected double salary;\r\n               public worker()\r\n          { }\r\n            public worker(string x,double s)\r\n                       {\r\n                                name=x;\r\n                                salary=s;\r\n                       } \r\n      }\r\n           public class engineer extends worker{ \r\n            public string department;\r\n                public engineer(){}\r\n                         public engineer(string y)\r\n                    {\r\n                               department=y;\r\n                          }\r\n               public engineer(string n,double s,string y)\r\n                  {\r\n                           super.(n,s);\r\n                           department=y;\r\n                   }\r\n}', 217, 31, 0, '2018-12-01 09:35:11', '2019-01-22 12:48:47'),
(63125, 77, '195', 217, 31, 2, '2018-12-01 09:35:11', '2018-12-01 09:35:32'),
(63276, 66, '173', 210, 31, 0, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63277, 68, '179', 210, 31, 2, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63278, 69, '182', 210, 31, 0, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63279, 70, '186', 210, 31, 1, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63280, 71, '189', 210, 31, 1, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63281, 72, '190', 210, 31, 1, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63282, 73, 'pubic class Item {\r\nstring name;\r\ndouble price;\r\n  public double  netprice  (int discount){\r\nint item =1 ;\r\nif ( item > 0)\r\n{\r\nnetprice= item * discount ;\r\n} \r\n          return netprice ;\r\n}\r\n}', 210, 31, 2, '2018-12-01 09:35:17', '2019-01-20 14:14:25'),
(63283, 74, 'public class Biscuits extend Item {\r\npublic Biscuits () {\r\ndiscount =.07;\r\n}', 210, 31, 1, '2018-12-01 09:35:17', '2019-01-20 14:14:25'),
(63284, 76, 'import java .util .scanner ;                                                                                                                                                                                                                                          public class worker {\r\nstring name ;\r\nint salary ;\r\n}\r\n   public class engineer {\r\nstring name ;\r\nint salary; \r\nint department;\r\n\r\npublic double collectedtaxes (int salary )\r\n{\r\ndouble taxes =.05 ;\r\ncollectedtaxes = salary * taxes ;\r\nreturn collectedtaxes ;\r\n}\r\n\r\n}                         \r\n                            public static void main (string [ ] args ) {\r\nscanner x =new scanner (system .in ) ;\r\n  worker a = new worker ();\r\na.salary= x.nextInt();\r\na.name = x. next();\r\nt =collectedtaxes(a.salary);\r\nengineer b = new engineer ();\r\nb.name = x.next();\r\nb.department=x.nextInt();\r\nb.salary = x.nextInt();\r\n\r\nd = collectedtaxes(b.salary);\r\nsystem.out.printl(a+\"/n\"+b);\r\n}', 210, 31, 4, '2018-12-01 09:35:17', '2019-01-22 12:36:44'),
(63285, 77, '195', 210, 31, 2, '2018-12-01 09:35:17', '2018-12-01 09:35:23'),
(63348, 66, '166', 221, 31, 0, '2018-12-01 09:35:18', '2018-12-01 09:35:19'),
(63351, 68, '181', 221, 31, 0, '2018-12-01 09:35:18', '2018-12-01 09:35:19'),
(63354, 69, '182', 221, 31, 0, '2018-12-01 09:35:18', '2018-12-01 09:35:19'),
(63356, 70, '186', 221, 31, 1, '2018-12-01 09:35:19', '2018-12-01 09:35:19'),
(63360, 71, '189', 221, 31, 1, '2018-12-01 09:35:19', '2018-12-01 09:35:19'),
(63362, 72, '190', 221, 31, 1, '2018-12-01 09:35:19', '2018-12-01 09:36:00'),
(63366, 73, 'public class item {\r\nprotected double price;\r\nprotected String name;\r\npublic item()\r\n{\r\n}\r\npublic item ( double price , String name)\r\n{\r\nthis.price=price;\r\nthis.name=name;\r\n}\r\npublic double calcNetPrice ( double discount)\r\n{\r\ndouble newPrice = this.price - discount ;\r\nreturn newPrice ;\r\n}\r\n\r\n}', 221, 31, 2, '2018-12-01 09:35:19', '2019-01-20 14:13:28'),
(63368, 74, 'public class Biscuits extends item {\r\nprotected double discount = 7/100 ;\r\npublic Biscuits ()\r\n{\r\n}\r\npublic BicuitsPrice( )\r\n{\r\nsuper.calcNetPrice( 7/100 );\r\n}\r\n\r\n}', 221, 31, 1, '2018-12-01 09:35:19', '2019-01-20 14:13:28'),
(63370, 76, 'package com.company;\r\n\r\npublic class employee {\r\n                       protected String name;\r\n                        protected double salary;\r\n                        static count;\r\npublic employee (string name , double salary )\r\n{\r\nthis.name = name;\r\nthis.salary = salary;\r\ncount++;\r\n} \r\npublic void setName( String name ){\r\nthis.name=name;\r\n}\r\npublic void setSalary( double salary ){\r\nthis.salary=salary;\r\n}\r\n\r\npublic double tax ()\r\n{\r\ndouble taxes = salary - 5/100 ;\r\nreturn taxes ;\r\n}  \r\n   \r\n\r\n}\r\n\r\n             public class worker extend employee  {\r\n\r\npublic worker ()\r\n{\r\n\r\n}\r\n  public worker (String name , double salary)\r\n{\r\n          super (name , salary);\r\n}\r\n\r\n       }       \r\n\r\n                                                                                   \r\n                   public class engineer extends employee {\r\n                              protected String department ;\r\n\r\npublic engineer ()\r\n{\r\n}\r\npublic engineer (String name , double salary , String department)\r\n {\r\nsuper (name,salary);\r\nthis.department = department ;\r\n}\r\n\r\npublic void setDepartment(String department){\r\nthis.department=department;\r\n}\r\n       }\r\n\r\npublic class test {\r\n        public static void main ( String[] args)\r\n{\r\n employee [] x = new employee[3];\r\nx[0]=new worker();\r\nx[1]=new engineer();\r\nx[2]=new engineer();\r\n\r\nint sumTaxes = 0 ;\r\n for(int i=0 ; i< x.lenght ; i++ )\r\n{\r\n    x[i] . setName();\r\n    x[i].setSalary();\r\n    x[i].setDepartment();\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', 221, 31, 3, '2018-12-01 09:35:19', '2019-01-22 12:32:41'),
(63443, 66, '170', 201, 31, 2, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63444, 68, '181', 201, 31, 0, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63445, 69, '183', 201, 31, 0, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63446, 70, '186', 201, 31, 1, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63447, 71, '189', 201, 31, 1, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63448, 72, '190', 201, 31, 1, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63449, 73, 'public class Item\r\n{\r\n   String name;\r\n   double price;\r\n   public Item()\r\n   {\r\n    name=\"item\";\r\n    price=0.0;\r\n\r\n   } \r\n    public Item(String name,double price)\r\n   {\r\n      this.name=name;\r\n      this.price=price;\r\n\r\n   } \r\n     public String getName()\r\n      {\r\n         return name;\r\n      }\r\n     public void setName(String n)\r\n      {\r\n         name=n;\r\n      }\r\n      \r\n       public String getPrice()\r\n      {\r\n         return price;\r\n      }\r\n     public void setPrice(double p)\r\n      {\r\n         price=p;\r\n      }\r\n\r\n       public void calcNetPrcie(String s,double d)\r\n       {\r\n         name=s;\r\n         double x = price*d;\r\n         System.out.println(\"item name : \"+name+\" discount :\"+x);\r\n\r\n       }\r\n\r\n}', 201, 31, 1, '2018-12-01 09:35:21', '2019-01-20 14:14:01'),
(63450, 74, 'public class  Biscuits  extends Item\r\n            {\r\n                double discount ;\r\n\r\n                 public Biscuits()\r\n              { \r\n                   discount=0.7;\r\n              }\r\n                public Biscuits(String n,double p,double discount)\r\n              {\r\n                      super(n,p);\r\n                      this.discount=discount;\r\n              }\r\n                    public double getDiscount()\r\n                      {\r\n                        return discount;\r\n                      }\r\n                          @Override\r\n                             public void calcNetPrcie(String s,double d)\r\n                            {\r\n                                    name=s;\r\n                                  \r\n                                  System.out.println(\"item name = : \"+name+\" discount  =:\"+discount);\r\n\r\n                             }\r\n\r\n            }', 201, 31, 1, '2018-12-01 09:35:21', '2019-01-20 14:14:01'),
(63451, 76, 'public class Worker \r\n          { \r\n             String name;\r\n             double salary;\r\n              public Worker()\r\n              { \r\n                  name=\"employee\";\r\n                  salary=0.0; \r\n              }\r\n                public Worker(String name,double salary)\r\n                {\r\n                    this.name=name;\r\n                    this.salary=salary; \r\n                }\r\n                    public String getName()\r\n                   {\r\n                       return name;\r\n                    }\r\n                   public void setName(String n)\r\n                    {\r\n                         name=n;\r\n                     }\r\n                  public String getSalary()\r\n                   {\r\n                       return salary;\r\n                    }\r\n                   public void setSalary(double s)\r\n                    {\r\n                         salary=s;\r\n                     }\r\n                     public void print(String n,double )\r\n                     {\r\n                              name=n\r\n                              salary=s\r\n                          double tax=s*0,05;\r\n                           System.out.println(\"name = :\"+name+\"salary=: \"+salary+\" tax =\"+tax );\r\n                          \r\n                      }\r\n          }     \r\n\r\n            public class Employee extends Worker\r\n             {\r\n               String department;\r\n           \r\n              public Employee()\r\n             {\r\n                department=\"cs\";\r\n             }\r\n                  \r\n                 public Employee(String n,double s,String department)\r\n             {\r\n                   super(n,s);\r\n                this.department=department;\r\n             }\r\n               public String getDepartment()\r\n                {\r\n                           return department;\r\n                 }\r\n                       \r\n                    public String setDepartment(String d)\r\n                {\r\n                           department=d;;\r\n                 }\r\n                         @Override\r\n                              public void print(String n,double s,String d)\r\n                     {\r\n                             \r\n                              name=n\r\n                              salary=s\r\n                          double tax=s*0,05;\r\n                           System.out.println(\"name = :\"+name+\"salary=: \"+salary+\" tax =\"+tax+\"department =\"+department );\r\n                          \r\n                      }\r\n             }                  \r\n                                import java.util.Scanner;\r\n                     public class project\r\n                          {\r\n                                  public static void main(String[] args) \r\n                                      {\r\n                                              Scanner x=new Scanner(System.in);\r\n                                                   Worker w1=new Worker();\r\n                                           String s=x.next();\r\n                                                  w1.setName(s);\r\n                                                double m=  x.nextDouble();\r\n                                                    w1.setSalary(m); \r\n                                                     Employee e1=new Employee();\r\n                                                   Employee e2=new Employee();\r\n                                                     String f=x.next();\r\n                                              e1.setName(f);\r\n                                                     double s=x.nextDouble();\r\n                                                             e1.setSa\r\n                                      }\r\n                          }', 201, 31, 2, '2018-12-01 09:35:21', '2019-01-22 12:34:14'),
(63452, 77, '194', 201, 31, 0, '2018-12-01 09:35:21', '2018-12-01 09:35:21'),
(63493, 66, '170', 112, 31, 2, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63494, 68, '181', 112, 31, 0, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63495, 69, '185', 112, 31, 2, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63496, 70, '186', 112, 31, 1, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63497, 71, '189', 112, 31, 1, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63498, 72, '190', 112, 31, 1, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63499, 73, 'public class Item{\r\ndouble price;\r\nString  name;   \r\npublic Item()\r\n{\r\nprice=0.0;\r\nname=null;\r\n}\r\n public void clacNetPrice()\r\n{\r\nprcie*=(discount/100.0);\r\nSystem.out.println(\"the item price after discount\" + price);\r\n}', 112, 31, 2, '2018-12-01 09:35:23', '2019-01-20 13:04:07'),
(63500, 74, 'public class Biscuits extends Item{\r\n   public final int discount=7;                                                                                                             \r\n  }', 112, 31, 1, '2018-12-01 09:35:23', '2019-01-20 13:04:07'),
(63501, 76, 'improt  java.util.Scanner;\r\npublic class Worker{\r\nString name;\r\n double salary;\r\npublic Worker()\r\n{\r\nname=null;\r\nSalary=0.0;\r\n}\r\npublic void printDataworker()\r\n{Scanner input=new Scanner(System.in);\r\nname=input.nextLine();\r\nsalary=input.nextDouble();\r\nSystem.out.println(salary*=0.05);\r\n}\r\n}\r\npublic class Engineer{\r\nString name;\r\ndouble salary;\r\nString department;\r\npublic Engineer()\r\n{\r\nname=null;\r\nsalary=0.0;\r\ndepartment=null;\r\n}\r\npublic void  printData()\r\n{Scanner input=new Scanner(System.in);\r\nString name=input.nextLine();\r\nsalary=input.nextDouble;\r\ndepartment=input.nextLine;\r\nSystem.out.println(salary*=0.05);\r\n}\r\n}', 112, 31, 1, '2018-12-01 09:35:23', '2019-01-20 13:53:37'),
(63502, 77, '194', 112, 31, 0, '2018-12-01 09:35:23', '2018-12-01 09:35:23'),
(63513, 66, '170', 222, 31, 2, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63514, 68, '181', 222, 31, 0, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63515, 69, '182', 222, 31, 0, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63516, 70, '186', 222, 31, 1, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63517, 71, '189', 222, 31, 1, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63518, 72, '190', 222, 31, 1, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63519, 73, 'public class item;                                                                                                         \r\n  {   int price ;\r\n      string name;\r\n      public item();\r\n}\r\npublic class double calcNetprcie (double discount);\r\n{  return (the price after discount);\r\n}', 222, 31, 2, '2018-12-01 09:35:24', '2019-01-20 14:16:40'),
(63520, 74, 'public class biscuits extends item;\r\n{ public biscuits();\r\npublic class biscuits (string name,int price);\r\n{ super (name,price);\r\n}\r\npublic static void get item();\r\n{return  ( (int)(Math.random*7)\r\n}', 222, 31, 1, '2018-12-01 09:35:24', '2019-01-20 14:16:40'),
(63521, 76, 'package Ask;\r\nimport.Java.Util.Scanner;\r\npublic class employee;\r\n{\r\n    string name;\r\n    int salary;\r\n    public employee();\r\n}\r\npublic class worker extends employee\r\n{\r\n    public worker;\r\npublic class worker ( string name , int salary);\r\n{\r\n    super(name,salary);\r\n}\r\npublic class engineer extends employee \r\n{\r\n     char department;\r\n     this.department=department\r\n    public worker();\r\n}\r\n public static void main(string[]args)\r\n{\r\n    employee e = new employee();\r\n    worker w = new worker();\r\n    engineer E = new engineer();\r\n    system.out.println(e);\r\n    system.out.println(w);\r\n    system.out.println(E);\r\n}\r\n}', 222, 31, 2, '2018-12-01 09:35:24', '2019-01-22 12:39:51'),
(63522, 77, '192', 222, 31, 0, '2018-12-01 09:35:24', '2018-12-01 09:35:28'),
(63533, 66, '172', 91, 31, 0, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63534, 68, '179', 91, 31, 2, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63535, 69, '182', 91, 31, 0, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63536, 70, '187', 91, 31, 0, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63537, 71, '189', 91, 31, 1, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63538, 72, '190', 91, 31, 1, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63539, 73, 'public class item{\r\ndouble price;\r\nstring name;\r\npublic static double calcNetprcie (double price){\r\n return price;\r\n}\r\npublic static void main(string []args)\r\n{\r\nitem it=new item();\r\ndouble  p=new.next double;\r\nitem.price(input.next double);\r\n\r\n}\r\n\r\n\r\n }', 91, 31, 1, '2018-12-01 09:35:27', '2019-01-20 13:28:05'),
(63540, 74, 'public class biscuits extends item{\r\n public Biscuits(double price;string name);\r\nprice=price*7%;\r\nSystem.out.print(price);\r\n}', 91, 31, 1, '2018-12-01 09:35:27', '2019-01-20 13:28:05'),
(63541, 76, 'public class worker{\r\n   private   string name;\r\n    private double salary;\r\npublic worker(){\r\n}\r\npublic worker(string n;double s){\r\nname=n;\r\nsalary=s;\r\n}\r\npublic class engineer extends worker{\r\npublic engineer(string n;double s;string d){\r\nsuper(string n;double s)\r\nthis.department=department;\r\n}\r\npublic static void main (string []args){\r\nstring name=new. next();\r\ndouble salary=new .next double();\r\nstring department=new.next();\r\nemployees employee=new employees();\r\nemployee.worker(string name;double salary)\r\nemployee.engineer 1(string name;double salary;string department);\r\nemployee.engineer 2(string name;double salary;string department);\r\nsalary=salary*5%;\r\nsystem.out.print(salary);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n}', 91, 31, 1, '2018-12-01 09:35:27', '2019-01-22 10:43:40'),
(63542, 77, '194', 91, 31, 0, '2018-12-01 09:35:27', '2018-12-01 09:35:27'),
(63553, 66, '170', 170, 31, 2, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63554, 68, '179', 170, 31, 2, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63555, 69, '185', 170, 31, 2, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63556, 70, '186', 170, 31, 1, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63557, 71, '189', 170, 31, 1, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63558, 72, '190', 170, 31, 1, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63559, 73, 'public class Item \r\n{\r\nprotected double price ;\r\nprotected String  name;\r\npublic Item ()\r\n{\r\n}\r\npublic void calcNetPrice ( double p)\r\n{\r\ndouble x =  price * p;\r\n}', 170, 31, 2, '2018-12-01 09:35:30', '2019-01-20 14:17:08'),
(63560, 74, 'public Biscuits extends Item \r\n{\r\npublic Biscuits ()\r\n{\r\n}\r\n       super.calcNetPrice(0.07);  \r\n}', 170, 31, 1, '2018-12-01 09:35:30', '2019-01-20 14:17:08'),
(63561, 76, 'import java.util.*;\r\npublic class Worker \r\n{\r\nprotected double salary ;\r\nprotected String name ;\r\npublic Worker ()\r\n{\r\n}\r\npublic Worker ( String n , double m)\r\n{\r\nname=n;\r\nsalary=m;\r\n}\r\n\r\npublic class Engineer extends Worker \r\n{\r\nprotected String department ;\r\nprotected double s;\r\npublic Engineer ( String department , double q )\r\n{\r\nsuper ( name);\r\nthis.department = department;\r\ns =q;\r\n}  \r\nsuper.Tax(s);\r\n\r\npublic static void main (String [] args)\r\n{\r\nScanner input = new Scanner (System.in);\r\nSystem.out.print(\"please enter the name and salary\");\r\nString d =input.next();\r\ndouble r =input.nextDouble();\r\nWorker w = new Worker (d , r);\r\nSystem.out.print(\"please enter your department and salary\");\r\nString p = input.next();\r\ndouble q =input.nextDouble();\r\nEngineer e = new Engineer ( p,q);\r\ndouble k =r+q*0.05;\r\nSystem.out.print(k);', 170, 31, 1, '2018-12-01 09:35:30', '2019-01-22 12:41:32'),
(63562, 77, '194', 170, 31, 0, '2018-12-01 09:35:30', '2018-12-01 09:35:30'),
(63573, 66, '170', 159, 31, 2, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63574, 68, '181', 159, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63575, 69, '182', 159, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63576, 70, '186', 159, 31, 1, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63577, 71, '188', 159, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63578, 72, '191', 159, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63579, 73, 'public class item{\r\n      public string name; \r\n public double price;\r\n}  \r\npublic static void calcNetprice (         double  p ; double   d    )\r\n{\r\ndouble discount=();\r\ndiscount  =p.d;\r\nreturn discount; \r\n}', 159, 31, 1, '2018-12-01 09:35:31', '2019-01-20 14:17:46'),
(63580, 74, 'public class biscuits extends items ()\r\n{\r\npublic biscuits(){\r\n        double discount ;\r\n7%;\r\n       }\r\n}', 159, 31, 1, '2018-12-01 09:35:31', '2019-01-20 14:17:46'),
(63581, 76, 'import java.util.scanner;\r\npackage employee;\r\npublic class employee {\r\npublic static void main (string[]args){\r\npublic string name;\r\npublic double salary;\r\n}\r\npackage engineer;\r\npublic class engineer{\r\npublic static void main (string[]args){\r\npublic string name;\r\npublic double salary;\r\npublic string department;\r\n}\r\ndouble salary=salary;\r\n}\r\nstring name=name;', 159, 31, 1, '2018-12-01 09:35:31', '2019-01-22 12:43:53'),
(63582, 77, '194', 159, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:31'),
(63593, 66, '173', 148, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63594, 68, '179', 148, 31, 2, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63595, 69, '185', 148, 31, 2, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63596, 70, '186', 148, 31, 1, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63597, 71, '189', 148, 31, 1, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63598, 72, '190', 148, 31, 1, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63599, 73, 'public class  Item () {\r\ndouble price ;\r\nString name ;\r\ndouble discount ;\r\npublic String getname () { return name ;}\r\npublic double getprice () {return price ;}\r\npublic double getdiscount () {return discount ;}\r\npublic item ( String name,double price ) {\r\nthis.name=name;\r\nthis .price=price ; }\r\n\r\npublic double calcNetPrice (double price) {\r\nprice*=discount;\r\nreturn price ;\r\n}', 148, 31, 2, '2018-12-01 09:35:31', '2019-01-20 14:18:25'),
(63600, 74, 'public  class Biscuits extends Item  () {\r\nfinal puplic discount =7% ; }', 148, 31, 1, '2018-12-01 09:35:31', '2019-01-20 14:18:25'),
(63601, 76, 'public class employee () {\r\n           private  String name ;                                       \r\n private double salary ;\r\n private String department ;\r\npublic employee (String name , double salary ){\r\nthis.name = name ;\r\nthis.salary = salary ; }\r\npublic employee (String name ,double salary , String department ){\r\nthis(name,salary);\r\nthis.department=department;\r\n}\r\npublic String getname (){return name ;}\r\npublic void getname (String name ) {\r\nthis.name=name;}\r\npublic String getsalary (){return salary ;}\r\npublic void getsalary (double salary ) {\r\nthis.salary=salary;}\r\npublic String getdepartment (){return department ;}\r\npublic void getdepartment (String department) {\r\nthis.department=department;} \r\npublic double discount (double salary ) {\r\nsalary *=5% ;\r\ndouble amount;\r\namount=salary ;\r\nreturn amount ; \r\n}}\r\npackage.com company ;\r\nimport java .util ;\r\npublic class main () {\r\npublic static void main (String args ) {\r\nemployee.worker =new employee (\"mohamed\",200.0) ;\r\nemployee.engineer1=new employee(\"ali\",500.0,\"accounting\");\r\nemployee.engineer2=new employee(\"amr\",500.0,\"electical\");\r\nworker.discount();\r\nengineer1.discount();\r\nenginer2.discount();\r\ndouble total ;\r\ntotal = 5%*3 ;\r\ndouble sum; \r\nsum=(worker.amount +engineer1.amount+engineer2.amount);\r\nSystem.out.println( sum );\r\nSystem.out.println( total );\r\n}}', 148, 31, 1, '2018-12-01 09:35:31', '2019-01-22 13:01:45'),
(63602, 77, '194', 148, 31, 0, '2018-12-01 09:35:31', '2018-12-01 09:35:32'),
(63652, 66, '170', 163, 31, 2, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63653, 68, '179', 163, 31, 2, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63654, 69, '185', 163, 31, 2, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63655, 70, '186', 163, 31, 1, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63656, 71, '189', 163, 31, 1, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63657, 72, '190', 163, 31, 1, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63658, 73, 'class Item\r\n{\r\nprivate double price;\r\nprivate String name;\r\npublic void setName(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic String getName()\r\n{return name;}\r\npublic void setPrice(double price)\r\n{\r\nthis.price=price;\r\n}\r\npublic double getPrice()\r\n{\r\nreturn price;\r\n}\r\n\r\npublic double calcNetPrice(double discount)\r\n{\r\ndouble g=price-(discount*price)\r\n\r\nreturn g;\r\n}\r\n}', 163, 31, 2, '2018-12-01 09:35:35', '2019-01-20 14:19:47'),
(63659, 74, 'class Biscuits extends Item\r\n{\r\nfinal double discount =0.07;\r\n}', 163, 31, 2, '2018-12-01 09:35:35', '2019-01-27 06:46:42'),
(63660, 76, 'import.util.java.Scanner;\r\nclass human\r\n{\r\nprivate String name;\r\nprivate double salary;\r\npublic double gettax()\r\n{\r\ntax=0.05*salary;\r\nreturn tax;\r\n}\r\npublic void setName(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic String getName()\r\n{\r\nreturn name;\r\n}\r\npublic void setSalary(double salary)\r\n{\r\nthis.salary=salary;\r\n}\r\npublic double getSalary()\r\n{\r\nreturn salary;\r\n}\r\n}\r\nclass worker extends human\r\n{\r\n}\r\nclass engineer extends human\r\n{\r\n\r\nprivate String department;\r\npublic void setDepartment(String department)\r\n{\r\nthis.department=department;\r\n}\r\npublic String getDepartment()\r\n{\r\nreturn department;\r\n}\r\n\r\n}\r\npublic class Main\r\n{\r\npublic static void main(String []args)\r\n{\r\nScanner sc=new Scanner(System.in);\r\nworker w=new worker();\r\nengineer e1=new engineer ();\r\nengineer e2=new engineer();\r\nw.setName(sc.next());\r\ne1.setName(sc.next());\r\ne2.setName(sc.next());\r\nw.setSalary(sc.nextDoule());\r\ne1.setSalary(sc.nextDouble());\r\ne2.setSalary(sc.nextDouble());\r\ne1.setDepartment(sc.next());\r\ne2.setDepartment(sc.next());\r\ndouble total=w.gettax()+e1.gettax()+e2.gettax();\r\nsystem.out.println(\"The total taxs = \"+total);\r\n}\r\n}', 163, 31, 4, '2018-12-01 09:35:35', '2019-01-22 13:01:03'),
(63661, 77, '195', 163, 31, 2, '2018-12-01 09:35:35', '2018-12-01 09:35:35'),
(63672, 66, '172', 182, 31, 0, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63673, 68, '181', 182, 31, 0, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63674, 69, '182', 182, 31, 0, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63675, 70, '186', 182, 31, 1, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63676, 71, '188', 182, 31, 0, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63677, 72, '190', 182, 31, 1, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63678, 73, 'public class Item{\r\nprivate double price ;\r\nprotected string name;\r\n}\r\npublic static double calcNetPrcie ( double p  )\r\n{\r\ndouble pad = p*(7/100);\r\nreturn pad;\r\n}', 182, 31, 2, '2018-12-01 09:35:38', '2019-01-20 14:21:07'),
(63679, 74, 'public Biscuits extends Item {\r\nsuper( price , name )\r\n}', 182, 31, 1, '2018-12-01 09:35:38', '2019-01-20 14:21:07'),
(63680, 76, 'import java . util . Scanner ;                  \r\n  public class worker{\r\nprivate string name;\r\nprivate double salary ;\r\n}\r\npublic  Engineer extends worker {\r\nsuper( name, salary )\r\nprivate string department ;;\r\n}\r\npublic static double Tax ( double s ){\r\ndouble sat = s* (5/100);\r\n}\r\npublic void print {\r\nsystem . out . println( \" the total of taxes =\" + total );\r\n}\r\npublic class{\r\n}\r\npubic static void main ( String[ ]args{\r\nScanner input = new Scanner ( System . in );\r\nengineer e1 = new engineer ();\r\nengineer e2 = new engineer ();\r\nworker w = new worker ();', 182, 31, 2, '2018-12-01 09:35:38', '2019-01-22 13:03:02'),
(63681, 77, '195', 182, 31, 2, '2018-12-01 09:35:38', '2018-12-01 09:35:38'),
(63702, 66, '170', 165, 31, 2, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63703, 68, '181', 165, 31, 0, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63704, 69, '182', 165, 31, 0, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63705, 70, '186', 165, 31, 1, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63706, 71, '189', 165, 31, 1, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63707, 72, '190', 165, 31, 1, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63708, 73, 'public class Item{\r\n  double price;\r\n  String name;\r\n  public Item(){\r\n}\r\n  public Item(double p, String n){\r\n    price=p;\r\n    name=n; \r\n  }\r\n  public double calcNetPrice(double discount){\r\n      price*=discount;\r\n}\r\n}', 165, 31, 2, '2018-12-01 09:35:40', '2019-01-20 14:22:15'),
(63709, 74, 'public class Biscuits extends Item{\r\n  double discount;\r\n  Biscuits(){\r\n   discount=.07;\r\n   super.calcNetPrice(discount);\r\n}', 165, 31, 1, '2018-12-01 09:35:40', '2019-01-20 14:22:15'),
(63710, 76, 'public class Worker{\r\n String name;\r\n double salary;\r\n protected double taxes=.05;\r\n public Worker(){\r\n } \r\n \r\n}\r\npublic class Engineer extends Worker{\r\n  String department;\r\n  \r\n}\r\nimport java.util.Scanner;\r\npublic class Main{\r\n Worker w=new Worker()\r\n Engineer []e=new Engineer[2];\r\n for(int i=0;i<2;i++)\r\n       e[i]=new Engineer();\r\n  Scanner s=new Scanner(System.in);\r\n for(int i=0;i<2;i++){\r\n System.out.print(\"enter the name \");\r\n e[i].name=s.next();\r\n System .out.print(\"enter salary  \");\r\n e[i].salary=s.nextDouble();\r\n System.out.print(\"enter the department \");\r\ne[i].department=s.next();\r\n}\r\nSystem .out.print(\" enter the name for the worker\");\r\nw.name=s.next();\r\nSystem .out.print(\"\"enter the salary);\r\nw.salary=s.next double();\r\n\r\n}\r\n}', 165, 31, 2, '2018-12-01 09:35:40', '2019-01-22 13:48:36'),
(63711, 77, '195', 165, 31, 2, '2018-12-01 09:35:40', '2018-12-01 09:35:42'),
(63712, 66, '172', 117, 31, 0, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63713, 68, '181', 117, 31, 0, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63714, 69, '184', 117, 31, 0, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63715, 70, '186', 117, 31, 1, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63716, 71, '189', 117, 31, 1, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63717, 72, '190', 117, 31, 1, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63718, 73, 'public class Item {\r\npublic static void main(String[] args) {\r\n\r\npublic String= \" name \" ;\r\npublic double =price ;\r\n\r\ndouble discount = price-(price*.07) ;         \r\n}\r\n\r\npublic double calcNetPrcie(double price){\r\n\r\ndouble p= price;\r\n}\r\n                                                                            \r\n         }', 117, 31, 2, '2018-12-01 09:35:42', '2019-01-20 14:22:42'),
(63719, 74, 'public class Biscuits \r\n{\r\nfinal discount = price-(price*.07);\r\nclass Items extends Biscuits { \r\npublic void discount;\r\nSystem.out.print(\"discount\"+discount);\r\n\r\n} \r\n}', 117, 31, 0, '2018-12-01 09:35:42', '2019-01-20 14:22:42'),
(63720, 76, 'import java.util.Scanner;\r\npublic class employee {\r\npublic static void main(String[]args){\r\nScanner input=new Scanner(System.in);\r\nString name_employee=\" \";\r\n\r\nString name=\" \";\r\ndouble salary;\r\n\r\n}\r\n\r\n\r\n\r\n}', 117, 31, 0, '2018-12-01 09:35:42', '2019-01-22 13:49:11'),
(63721, 77, '195', 117, 31, 2, '2018-12-01 09:35:42', '2018-12-01 09:35:43'),
(63730, 66, '173', 198, 31, 0, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63731, 68, '181', 198, 31, 0, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63732, 69, '182', 198, 31, 0, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63733, 70, '186', 198, 31, 1, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63734, 71, '189', 198, 31, 1, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63735, 72, '190', 198, 31, 1, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63736, 73, 'public class item{\r\nprotected double price;\r\nprotected string name;\r\nprotected int discound;\r\npublic item(){\r\nname= \"asss\";\r\nprice =3.0;\r\ndiscound=50%;}\r\npublic item(double p;string n;int d){\r\nprice=p;\r\nname=n;\r\ndiscound=d;}\r\npublic  void double calcNetPrcie (double price){\r\nprice= price/ discound *100;}', 198, 31, 2, '2018-12-01 09:35:44', '2019-01-20 14:24:13'),
(63737, 74, 'public  class biscuits extends item{\r\npublic bisites(){\r\ndiscond 7%}\r\npublic biscites(double p;string n;){\r\nsuper(p.n);\r\ndiscount=7%;}   \r\n    public  void double calcNetPrcie (double price){\r\nprice= price/ 7 *100     ;}', 198, 31, 1, '2018-12-01 09:35:44', '2019-01-20 14:24:13'),
(63738, 76, 'public  class  workar{\r\nstring name;\r\ndouble solary;  \r\npublic workar(){\r\nname= \"sss\";\r\nsalary = 3.5;}\r\npublic workar(string n; double s)\r\n                                                                                                              \r\n                 }                           \r\npublic class engneer{ \r\nstring name;\r\ndouble salary;\r\nstring department;\r\n}\r\npublic  static void main(string [] args)', 198, 31, 1, '2018-12-01 09:35:44', '2019-01-22 13:52:38'),
(63739, 77, '195', 198, 31, 2, '2018-12-01 09:35:44', '2018-12-01 09:35:44'),
(63750, 66, '170', 147, 31, 2, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63751, 68, '179', 147, 31, 2, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63752, 69, '182', 147, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63753, 70, '186', 147, 31, 1, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63754, 71, '189', 147, 31, 1, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63755, 72, '190', 147, 31, 1, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63756, 66, '166', 169, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63757, 73, 'class Item{\r\n      protect double price;\r\n      protect string name;\r\n      Item(){\r\n       price=0.0;\r\n       name=thing;\r\n      }\r\n      Item(double p, string n){\r\n      price=p;\r\n      name=n;\r\n      }\r\npublic static double calNetPrice (double price,  double discount)\r\n{\r\ndouble f=price*discount;\r\nreturn f; \r\n}\r\n}', 147, 31, 1, '2018-12-01 09:35:46', '2019-01-20 14:25:06'),
(63758, 68, '181', 169, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63759, 74, 'class Biscuits extends from Item{\r\n          double discount;                                                                                                           \r\n           Biscuits()  \r\n            { \r\n                discount=0.7 ;\r\n              }\r\n             Biscuits( double p , string n , double d)                  \r\n             {\r\n                  super(p , n );\r\n                   discount=d;\r\n              } \r\n         }', 147, 31, 1, '2018-12-01 09:35:46', '2019-01-20 14:25:06'),
(63760, 69, '182', 169, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63761, 76, 'public class employee\r\n{\r\n   string name;\r\n   double salary;\r\n    double tax;\r\n employee() {\r\n   name= \"ahmed\";\r\n   salary=0.0;\r\n    tax=0.5;\r\n }\r\nemployee(string n , double s ) {\r\n   name = n;\r\n   salary =s ;\r\n}\r\npublic class worker extends from employee {\r\n   worker() {\r\n   }\r\n worker ( string n , double s ) {\r\n   name =n;\r\n   salary = s;\r\n }\r\npublic static double Pay1 (double s) {\r\n   double amount1=s+0.5;\r\n    return amount1 ;\r\n  }\r\n}\r\npublic class engineer extends from employee {\r\n   string department;\r\n  engineer() {\r\n    }\r\n  engineer ( string n , double s , string d)  {\r\n        super (n,s);\r\n        department = d;\r\n  } \r\npublic static double Pay2 (double s) {\r\n     double amount2 = s+ 0.5;\r\n     return amount2;  \r\n  }\r\n}\r\nimport java .Util.Scanner ; \r\npublic class company {\r\n    public static void main (string [] args)  {\r\n         worker w1 = new worker ();\r\n         System.Out.Println (\"enter salary of worker \");\r\n          Scanner in = new Scanner (System.in);\r\n           double salary= in.nextDouble ();\r\n           engineer e1 = new engineer();\r\n           engineer e2 = new engineer ();\r\n           double total =0;\r\n           doble s1= Pay(salary);\r\n            System.Out.Println (\"enter salary of engineer \");\r\n          Scanner in = new Scanner (System.in);\r\n           double salary2= in.nextDouble ();\r\n               double salary3= in.nextDouble ();\r\n double s2 = Pay (salary2);\r\ndouble s3 = Pay (salary3 );\r\ntotal = s1+s2+s3;\r\nSystem.Out.Println(total);\r\n }\r\n}', 147, 31, 3, '2018-12-01 09:35:46', '2019-01-22 13:56:16'),
(63762, 70, '186', 169, 31, 1, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63763, 77, '194', 147, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63764, 71, '189', 169, 31, 1, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63765, 72, '191', 169, 31, 0, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63766, 73, 'public class Item{\r\ndouble price;\r\nString name;\r\npublic Item( ){\r\n}\r\npublic Item(double price,String name)\r\n{\r\nthis.price=price;\r\nthis.name=name;\r\n}\r\npublic double calcNetPrice(int discount)\r\n{\r\nreturn input.price-(price*discount)/100;\r\n}', 169, 31, 2, '2018-12-01 09:35:46', '2019-01-20 14:25:26'),
(63767, 74, 'public class Biscuits extends Item{\r\npublic double calcNetPrice(int discount)\r\n{\r\nreturn input.price-(price*7)/100;\r\n}', 169, 31, 2, '2018-12-01 09:35:46', '2019-01-20 14:25:26'),
(63768, 76, 'public class Main{\r\npublic static void main(String [ ] args)\r\n{\r\nScanner s=new Scanner(System.in);\r\nint task=5%;\r\nWorker e=new Worker();\r\nEngineers a=new Engineers();\r\ne.name=s.next();\r\ne.salary=s.next Double();\r\na.department=s.next Int(); \r\na.name=s.next();\r\na.salary=s.nextDouble();\r\nnew worker(name,salary);\r\nnew engineers(name,salary,department);\r\nSystem.out.print(a.toString+e.toString)\r\n\r\n}\r\npublic class Employees{\r\nint task=5%;\r\n}\r\n\r\nclass Worker extends Employees{\r\nString name;\r\ndouble salary;\r\npublic Worker()\r\n{\r\n}\r\n\r\npublic Worker(String name,double salary)\r\n{\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\npublic String toString()\r\n{\r\nreturn salary-task;\r\n}\r\n}\r\nclass Engineers extends Employees{\r\nString name;\r\ndouble salary;\r\nint department;\r\npublic Engineers(String name,double salary,int department)\r\n{\r\nthis.name=name;\r\nthis.salary=salary;\r\nthis.department=department;\r\n}\r\npublic String toString()\r\n{\r\nreturn salary-task;\r\n}\r\n}', 169, 31, 2, '2018-12-01 09:35:46', '2019-01-22 13:57:44'),
(63769, 77, '195', 169, 31, 2, '2018-12-01 09:35:46', '2018-12-01 09:35:46'),
(63779, 66, '170', 197, 31, 2, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(63780, 69, '183', 197, 31, 0, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(63781, 70, '187', 197, 31, 0, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(63782, 71, '188', 197, 31, 0, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(63783, 72, '190', 197, 31, 1, '2018-12-01 09:35:47', '2018-12-01 09:35:47'),
(63784, 73, 'public class Item {\r\ndouble price;\r\nstring name;\r\n}\r\npublic  void calcNetprice( doudle n)\r\n{\r\ndouble discount=y;\r\ndouble item price= n*(y/100);\r\n{\r\nreturn item class;\r\n}\r\npublic static void main(string[ ] args){\r\nScanner input=new Scanner(System . in);\r\nint d=new input();\r\ndoubl d=calcNetprice(double n);\r\ncalcNetprice(d);\r\n}', 197, 31, 1, '2018-12-01 09:35:47', '2019-01-20 14:25:49'),
(63785, 74, 'public class Biscuits extends item{\r\npublic void calcNetprice(double n)\r\n{ \r\ndouble discount = 7%;\r\n}', 197, 31, 2, '2018-12-01 09:35:47', '2019-01-20 14:25:49'),
(63786, 76, 'package app;\r\njava . util . Scanner;\r\npublic class employee{\r\nstring name;\r\ndouble salary ;\r\nstring department;\r\n}\r\npublic class worker extends employee{\r\n\r\nsuper(string n , duoble s)\r\nname=n;\r\nsalary=s;\r\n}\r\npublic class engineer extends employee{\r\nsuper(string n, double s, string d)\r\nname=n;\r\nsalary=s;\r\ndepartment=d;\r\n}\r\nemployee salary = new employee();', 197, 31, 1, '2018-12-01 09:35:47', '2019-01-22 13:59:08'),
(63809, 66, '172', 160, 31, 0, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63811, 68, '178', 160, 31, 0, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63813, 69, '183', 160, 31, 0, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63815, 70, '187', 160, 31, 0, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63817, 71, '189', 160, 31, 1, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63819, 72, '191', 160, 31, 0, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63821, 73, 'package ask;\r\nimportant Java.Util.scanner;\r\npublic class program\r\n{\r\npublic static void main(String[]args)\r\n{\r\n    System.in=in.next\r\n     string name=in.next();\r\n     Double price=in.next();\r\n      price=price-discount;\r\n      System.out.println((price);\r\n}\r\n}', 160, 31, 0, '2018-12-01 09:35:53', '2019-01-20 13:53:16'),
(63823, 74, 'package ask;\r\n    \r\n    import Java.Util.Scannner()\r\n\r\n    public calss programm\r\n    {\r\n     public statuc void main(String[]args)\r\n       {\r\n           }\r\n      System.out.println();', 160, 31, 0, '2018-12-01 09:35:53', '2019-01-20 13:53:16'),
(63825, 76, 'package ask;\r\nimportant Java.Util.scanner;\r\npublic class program\r\n{\r\npublic static void main(String[]args)\r\n{\r\n    System.in=in.next\r\n     string name=in.next();\r\n     Double price=in.next();\r\n      price=price-discount;\r\n      duoble salary=in.nextdouble();\r\n     salary=salary*18;\r\n    system.out.println()\r\n}\r\n}', 160, 31, 0, '2018-12-01 09:35:53', '2019-01-22 12:27:05'),
(63826, 77, '195', 160, 31, 2, '2018-12-01 09:35:53', '2018-12-01 09:35:53'),
(63847, 66, '170', 127, 31, 2, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63848, 68, '181', 127, 31, 0, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63849, 69, '182', 127, 31, 0, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63850, 70, '186', 127, 31, 1, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63851, 71, '188', 127, 31, 0, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63852, 72, '190', 127, 31, 1, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63853, 73, 'public class Item{\r\ndouble price;\r\nString name;\r\n public Item(double p,String n){\r\nprice=p;\r\n name=n;\r\n}\r\n\r\npublic Static double calcNetPrcie(double price,double discount){\r\ndouble result=price;\r\nprice*=discount;\r\nresult-=price;\r\nreturn result;\r\n}\r\n}', 127, 31, 1, '2018-12-01 09:35:56', '2019-01-20 14:26:29'),
(63854, 74, 'public class Biscuits extends Item{\r\nFinal double discount=7%;\r\npublic Biscuits(){\r\nsuper();\r\nFinal double discount=7%;\r\n}\r\npublic Biscuits(double p,String n,double d){\r\nsuper(p,n);\r\nd=Final double discount=7%;\r\n\r\n}\r\npublic double getPrice(){\r\nreturn this.calcNetPrice;\r\n}             \r\n}', 127, 31, 1, '2018-12-01 09:35:56', '2019-01-20 14:26:29'),
(63855, 76, 'Import java.util.Scanner;\r\n public class Test{\r\npublic Static void main (String [ ]args){\r\nScanner input=new Scanner(System.in);\r\n\r\nSystem.out.println( printTaxes);\r\n\r\n\r\n}\r\n}                                                                              \r\npublic class Worker{\r\nString name;\r\ndouble salary;\r\n\r\npublic Worker(String n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\n\r\n}   \r\npublic class Engineer{\r\nString name;\r\ndouble salary;\r\nString department;\r\npublic Engineer (String n,double s,String d ){\r\nname=n;\r\nsalary=s;\r\ndepartment=d;\r\n}\r\npublic void ptintTaxes(double taxes){\r\nSystem.out.println(taxes);\r\n}\r\n}', 127, 31, 2, '2018-12-01 09:35:56', '2019-01-27 08:52:38'),
(63856, 77, '194', 127, 31, 0, '2018-12-01 09:35:56', '2018-12-01 09:35:57'),
(63936, 66, '170', 98, 31, 2, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63937, 68, '181', 98, 31, 0, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63938, 69, '182', 98, 31, 0, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63939, 70, '186', 98, 31, 1, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63940, 71, '189', 98, 31, 1, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63941, 72, '190', 98, 31, 1, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63942, 73, 'public class item{\r\ndouble price ;\r\nString name;\r\n}\r\npublic item (double p,String n)\r\n{\r\nprice =p;\r\nname=n;\r\n\r\n}                                                                                                   \r\ndouble item price ;\r\npublic static double calcNetPrcie  (double p) {\r\ndouble calculate +=item price;\r\nreturn calculate;\r\n\r\n}', 98, 31, 1, '2018-12-01 09:36:07', '2019-01-20 14:27:01'),
(63943, 74, 'public class Biscuits extends item{\r\nint biscuits;\r\n}\r\n  public biscuits(){\r\n\r\n}', 98, 31, 1, '2018-12-01 09:36:07', '2019-01-20 14:27:01'),
(63944, 76, 'public class     worker     {\r\nString name ;\r\ndouble salary;\r\n}                                                                                         \r\npublic worker(String n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\npublic static  String set name(String n)\r\n{\r\nname=n;\r\n}\r\npublic static  double set salary(double s){\r\nsalary=s;\r\n}\r\npublic static void get name(){\r\nreturn name;\r\n} \r\npublic static void get salary(){\r\nreturn salary;\r\n}  \r\npublic class Engineer{\r\nsuper(String name,double salary);\r\nString department;\r\n}  \r\n  public Employee{\r\npublic static void main (String[] args){\r\nworker r1=new worker();\r\nr1.set name();\r\nr1.set salary();\r\nSystem.out.printlin(r1.get(name));\r\nSystem.out.printlin(r1.get(salary));\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n}', 98, 31, 2, '2018-12-01 09:36:07', '2019-01-22 14:02:13'),
(63945, 77, '194', 98, 31, 0, '2018-12-01 09:36:07', '2018-12-01 09:36:08'),
(63976, 66, '173', 203, 31, 0, '2018-12-01 09:36:11', '2018-12-01 09:36:11');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(63977, 68, '179', 203, 31, 2, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(63978, 69, '182', 203, 31, 0, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(63979, 70, '186', 203, 31, 1, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(63980, 71, '189', 203, 31, 1, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(63981, 72, '190', 203, 31, 1, '2018-12-01 09:36:11', '2018-12-01 09:36:11'),
(63982, 73, 'public class item{\r\ndouble price;\r\nString name;\r\n}\r\npublic item(double price,String name){\r\nthis.name=name;\r\nthis.price=price;\r\n}\r\npublic item(){}\r\npublic double calaNetPrice(double discount);{\r\ndouble Discount=discount*price;\r\ndouble price1=price;\r\ndouble price2=price1 - Discount;\r\nreturn price1,price2;}', 203, 31, 1, '2018-12-01 09:36:11', '2019-01-20 14:27:39'),
(63983, 74, 'public class Biscuits extends item{\r\ndouble discount;\r\nsuper(double price,string name);\r\npublic biscuits(){}\r\npublic biscuits(double discount){\r\nthis.discount=discount;\r\n}\r\ncalcNetPrice(0.07);\r\n}', 203, 31, 1, '2018-12-01 09:36:11', '2019-01-20 14:27:39'),
(63984, 76, 'public class Main {\r\nimport java.util.Scanner;\r\npublic static void main (string [] args)\r\n{\r\nworker a=new worker();\r\nengineer b=new en\r\n}}\r\ndouble paytax(double salary){\r\ndouble tax=salary*0.05;\r\nreturn tax; }\r\ndouble totaltax(double Tax,doubl tax1){\r\ndouble Total=Tax +tax1;\r\nreturn total;}\r\npublic class worker{\r\ndouble salary ;\r\nString name ;\r\npublic worker(){}\r\npublic worker(double salary,string name){\r\npublic double getsalary(){\r\nreturn salary;}\r\npublic void setsalary(double salary){\r\nthis.salary=salary;}\r\npublic String getname(){\r\nreturn name;}\r\npublic void setname(String name){\r\nthis.name=name;}\r\ntax1=paytax(salary);\r\nSystem.out.println(name,salary,tax1);\r\n}\r\npublic class engineer extends worker{\r\nsuper(name,salary);\r\nString department;\r\npublic engineer{\r\npublic worker(double salary,String name);\r\npublic String getdepartment(){\r\nreturn department;}\r\npublic void setdepartment(String department){\r\nthis.department=department;}\r\ndouble Tax=paytax(salary);\r\nSystem.out.println(name,salary,department,Tax);\r\n}\r\n}\r\n}', 203, 31, 1, '2018-12-01 09:36:11', '2019-01-22 14:07:54'),
(64034, 66, '170', 121, 31, 2, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64035, 68, '181', 121, 31, 0, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64036, 69, '185', 121, 31, 2, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64037, 70, '186', 121, 31, 1, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64038, 71, '188', 121, 31, 0, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64039, 72, '191', 121, 31, 0, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64040, 73, 'puplic class item \r\n{\r\ndouble price ;\r\nString name;\r\npublic double calcNetPrice (double discount)\r\n{\r\nreturn price - discount;\r\n\r\n}\r\n\r\n}', 121, 31, 2, '2018-12-01 09:36:17', '2019-01-20 14:29:29'),
(64041, 74, 'public class Biscuits extends Item {\r\nBiscuits B1=new Biscuits();\r\ndouble discount=((7*price)/100)\r\nB1.calcNetPrice( discount);\r\nSystem.out.println(B1.calcNetPrice( discount));\r\n\r\n}', 121, 31, 1, '2018-12-01 09:36:17', '2019-01-20 14:29:29'),
(64042, 76, 'public class employee{\r\nString name;\r\ndouble salary;\r\npublic void set_name(String n)\r\n{\r\nname=n;\r\n}\r\npublic void set_salary(double b)\r\n{\r\nsalary=n;\r\n}\r\npublic String get_name()\r\n{\r\nreturn name;\r\n}\r\npublic double get_salary()\r\n{\r\nreturn salary;\r\n}\r\npublic double calc_taxs(double salary,double tax)\r\n{\r\ndouble result =salary-((salary*tax)/100)\r\nreturn result;\r\n}\r\n\r\n}\r\npublic class worker extends employee {\r\n\r\n}\r\npublic class engineer {\r\nString department;\r\npublic void set_department (String n)\r\n{\r\ndepartment =n;\r\n}\r\npublic String get_department{\r\n\r\nreturn department;\r\n}\r\n\r\n}   \r\nimport java.util.Scanner;                                                                     \r\npublic class test {\r\npublic static void main (String []  args){\r\nScanner input =new Scanner(Systerm.in);\r\ndouble worker_salary ,engineerer1_salary,engineerer2_salary, tax;\r\nworker_salary=input.nextDouble();\r\n engineerer1_salary=input.nextDouble();\r\nengineerer2_salary=input.nextDouble();\r\ntax=input.nextDouble();\r\nworker w1=new worker();\r\ndouble wo= w1.calctaxs(worker_salary,tax);\r\nengineer e1=new engineer();\r\nengineer e2=new engineer();\r\ndouble en1=e1.calctaxs(engineer1_salary,tax);\r\ndouble en2=en.calctaxs(engineer2_salary,tax);\r\ndouble sum =wo+en1+en2;\r\nSystem.out.println(\"All taxs = \" +sum);\r\n}\r\n\r\n}', 121, 31, 2, '2018-12-01 09:36:17', '2019-01-22 14:11:10'),
(64043, 77, '195', 121, 31, 2, '2018-12-01 09:36:17', '2018-12-01 09:36:17'),
(64054, 66, '166', 188, 31, 0, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64055, 68, '181', 188, 31, 0, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64056, 69, '182', 188, 31, 0, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64057, 70, '186', 188, 31, 1, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64058, 71, '188', 188, 31, 0, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64059, 72, '191', 188, 31, 0, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64060, 73, 'public class item{\r\ndouble price;\r\nString name;\r\npublic item(){}\r\npublic item (double price ;string name ){\r\nthis .price =price ;\r\nthis .name =name }\r\npublic static double calcNetprice(double discount ) {\r\nprice .discount ;\r\nreturn price;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 188, 31, 1, '2018-12-01 09:36:21', '2019-01-20 14:29:58'),
(64061, 74, 'public Class biscuits extends item{\r\npublic biscuits(){}\r\n\r\npublic Static double discount(double i){\r\ndouble discount=0;\r\ndiscount =price -(price *(7/100));\r\nreturn discount;\r\n}\r\n}', 188, 31, 1, '2018-12-01 09:36:21', '2019-01-20 14:29:58'),
(64062, 76, 'public class worker {\r\nString name;\r\ndouble salary ;\r\npublic worker(){}\r\npublic worker( double salary,string name){\r\nthis.salary=salary;\r\nthis .name =name;}\r\npublic static double taxt(double i){\r\ndouble text=0;\r\ntext=salary-(salary *(5/100));\r\nreturn text;\r\n}\r\n}                                                                                                               \r\n  public class engineer extends worker {\r\nstring department;\r\npublic engeneer(string department ){\r\nsuper (name ,salary)\r\nthis.department =department;\r\n\r\n}\r\n}      \r\nimportant jave .utale ;\r\nstring []main(){\r\nworker m=new worker (\"mohsen\"154);\r\nengeneer k=new engeneer (\"hgo\",145,\"cs\");\r\nengegeneer j=new engeneer (\"jijh\",486,\"is\")\r\n\r\n}', 188, 31, 2, '2018-12-01 09:36:21', '2019-01-22 14:12:26'),
(64063, 77, '195', 188, 31, 2, '2018-12-01 09:36:21', '2018-12-01 09:36:21'),
(64094, 66, '170', 150, 31, 2, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64095, 68, '178', 150, 31, 0, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64096, 69, '182', 150, 31, 0, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64097, 70, '187', 150, 31, 0, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64098, 71, '189', 150, 31, 1, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64099, 72, '190', 150, 31, 1, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64100, 73, 'Public class Item() {String name;                                                                                                               \r\n     double price;  }  \r\npublic double calcNetPrice(double price ) { double  discount;   \r\n      return price*discount;}}', 150, 31, 2, '2018-12-01 09:36:30', '2019-01-20 14:37:38'),
(64101, 74, 'public class Biscuit extends item(){  double discount ;}                                                                                                        \r\n            public double getnetpricce(){return price *0.07;}', 150, 31, 1, '2018-12-01 09:36:30', '2019-01-20 14:37:38'),
(64102, 76, 'public class Worker(){ String name,double salary ;     \r\n   public Worker(String n,double s)   public double getsalary() {return (salary+=salary*0.05);\r\n}}  public class Enginee extends(){ String department ;       public Enginee(String name,double salary,String department)} \r\npublic double get allatx(){\r\nif(n%2==0)return Worker.salary+=Worker.salary*0.05;\r\n   else \r\n   return Enginee.salary+=Enginee.salary*0.5;}return Worker.salary+enginee.salary}', 150, 31, 0, '2018-12-01 09:36:30', '2019-01-22 14:13:31'),
(64103, 77, '195', 150, 31, 2, '2018-12-01 09:36:30', '2018-12-01 09:36:30'),
(64104, 66, '172', 164, 31, 0, '2018-12-01 09:36:30', '2018-12-01 09:36:31'),
(64105, 68, '181', 164, 31, 0, '2018-12-01 09:36:30', '2018-12-01 09:36:31'),
(64106, 69, '182', 164, 31, 0, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(64107, 70, '186', 164, 31, 1, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(64108, 71, '189', 164, 31, 1, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(64109, 72, '190', 164, 31, 1, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(64110, 73, 'public class Item{ public double price=x; public String name=s;   public calcNetPrcie  (){ }  public  void  calcNetPrcie (double discount;){   System.out.print (\"the \" s \"price is\" +(x- (x*discount));   )                                     }       }', 164, 31, 1, '2018-12-01 09:36:31', '2019-01-20 14:38:32'),
(64111, 74, 'public class Biscuits extends Item {   calcNetPrcie (0.07) ;   }', 164, 31, 1, '2018-12-01 09:36:31', '2019-01-20 14:38:32'),
(64112, 76, 'class company { String name ; double salary;    }     class employee extends company {   public employee(){ } public void employee (double x=0.05;){  tax = salary-(salary*x);   System.out.print(\"the tax of employee is \" + tax }   }                                                                                                      \r\n                                                    class engineers extends company {    public engineer(){ } public void engineer(double x =0.05) { tax =salary -(salary*x); System.out.print(\"the tax of engineer  is \" + tax }   }  double total amount =tax.employee+ tax.engineer; System.out.print (total amount);', 164, 31, 2, '2018-12-01 09:36:31', '2019-01-22 14:14:31'),
(64113, 77, '195', 164, 31, 2, '2018-12-01 09:36:31', '2018-12-01 09:36:31'),
(64151, 66, '170', 132, 31, 2, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64152, 68, '179', 132, 31, 2, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64153, 69, '182', 132, 31, 0, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64154, 70, '186', 132, 31, 1, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64155, 71, '189', 132, 31, 1, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64156, 72, '190', 132, 31, 1, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64157, 73, 'public class item{\r\nString name;\r\ndouble price;\r\npublic item(){\r\nname=\" asd\";\r\nprice=700.0;\r\n\r\n\r\n}\r\npublic item(String n, double p){\r\nname=n;\r\nprice=p;\r\n}\r\n\r\n\r\npublic void CalcNetPrice(){\r\ndouble discount=0;\r\nprice-=discount;\r\n\r\n}\r\n}', 132, 31, 1, '2018-12-01 09:36:37', '2019-01-20 14:39:30'),
(64158, 74, 'public class Biscuits extends item{\r\npublic void CalcNetPrice(){\r\nprice=price-0.07;\r\n\r\n}\r\n}', 132, 31, 2, '2018-12-01 09:36:37', '2019-01-20 14:39:30'),
(64159, 76, 'public class employee{\r\ndouble salary;\r\nString name ;\r\npublic employee(){\r\nname=\" ahmed\";\r\nsalary=\" 2000.0 \";\r\n}\r\npublic employee(String n, double s){\r\nname=n;\r\nsalary=s;\r\n\r\n}\r\n\r\npublic void CalcTax(){\r\ndouble tax=0;\r\nsalary-=salary*tax;\r\n\r\n}\r\n\r\n}                                                                                                             \r\npublic class worker extends employee{\r\npublic worker(){\r\nsuper();\r\n}\r\n\r\npublic void nprint(){\r\nSystem.out.println(\"enter worker name\"\"\\n\" \" enter worker salary \")\r\n\r\n}\r\npublic void CalcTax(){\r\n\r\n}\r\n\r\n}\r\npublic class Engineer extends employee{\r\nString department;\r\npublic Engineer(){\r\nsuper();\r\ndepartment=\"cs\";\r\n}\r\npublic class Employee(String n,double s,String d){\r\nsuper(n,s);\r\ndepartment=d;\r\n}\r\npublic void CalcTax(){\r\n\r\n}\r\n} \r\nimport java.util.Scanner;\r\npublic class test{\r\npublic main static void  (string[]args){  \r\nengineer n = new engineer();\r\nSystem.out .println(n.CalcTax);', 132, 31, 2, '2018-12-01 09:36:37', '2019-01-22 14:16:33'),
(64160, 77, '194', 132, 31, 0, '2018-12-01 09:36:37', '2018-12-01 09:36:38'),
(64227, 66, '172', 109, 31, 0, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64228, 68, '181', 109, 31, 0, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64229, 69, '182', 109, 31, 0, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64230, 70, '186', 109, 31, 1, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64231, 71, '189', 109, 31, 1, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64232, 72, '190', 109, 31, 1, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64233, 73, 'public class item(  )\r\n    {   double price;\r\nstring name;\r\npublic double calcNetPrice ( double price,string name);\r\n     {\r\n\r\n\r\n      }\r\n}', 109, 31, 1, '2018-12-01 09:36:50', '2019-01-20 14:39:49'),
(64234, 74, 'system', 109, 31, 0, '2018-12-01 09:36:50', '2019-01-20 14:39:49'),
(64235, 76, 'import.java.util.*;\r\n    public class worker ;\r\n{public double wor (  int salary);    \r\nstring name;\r\n     \r\ndouble tax;\r\ntax=salary *5 /100;  \r\nSystem.out.println(\"tax is \" +tax )\r\n}\r\n  public class eng extend worker(  int salary) ;\r\n{  public double eng  ();\r\n {  \r\nstring department;}\r\n\r\n}                                                                                              \r\n   public static void main( ){\r\nworker x=new worker( );\r\nx=wor(int i );\r\neng y=new eng( );\r\ny=eng( int j);\r\n}', 109, 31, 1, '2018-12-01 09:36:50', '2019-01-22 14:18:40'),
(64236, 77, '195', 109, 31, 2, '2018-12-01 09:36:50', '2018-12-01 09:36:50'),
(64237, 66, '172', 178, 31, 0, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64238, 68, '181', 178, 31, 0, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64239, 69, '182', 178, 31, 0, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64240, 70, '186', 178, 31, 1, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64241, 71, '189', 178, 31, 1, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64242, 72, '190', 178, 31, 1, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64243, 73, 'public class Item()\r\n{\r\n     double price ;\r\n      String name ;\r\n\r\n  public double calcNetPrice(double p , double discount)\r\n{\r\n   price = ( p - discount*100) ;\r\n}\r\n}', 178, 31, 1, '2018-12-01 09:36:54', '2019-01-20 14:40:09'),
(64244, 74, 'public class Biscuits extends Item()\r\n{\r\n   public double calcNetPrice(double b)\r\n   {\r\n       private price = (p - 7*100);\r\n    }\r\n}', 178, 31, 1, '2018-12-01 09:36:54', '2019-01-20 14:40:09'),
(64245, 76, 'import java.util.Scanner ;\r\n public class Employee()\r\n{\r\n  private Strring name ;\r\n  private double salary ;\r\n\r\npublic Employee()\r\n{\r\n\r\n}\r\n\r\npublic Employee(String n , double s)\r\n{\r\n  name = n;\r\n  salary = s;\r\n}\r\npublic void setname(String n)\r\n{\r\n  name = n;\r\n}\r\npublic void setsalary(double s)\r\n{\r\n   salary = s ;\r\n}\r\npublic String getname()\r\n{\r\n    return name;\r\n}\r\n\r\npublic double getsalary()\r\n {\r\n  return salary - 5*100;\r\n  }\r\n}                                                                                                             \r\n   public static void main()\r\n{\r\n  \r\n  Scanner s = new Scanner(System.in);\r\n  System.out.print|( \"pls enter the data for employee \" );\r\n  worker w1 = new worker(n,s);\r\n  Scanner q = new Scanner(System.in);\r\n  System.out.print|( \"pls enter the data for the first engineer \" );\r\n  Engineer e1 = new Engineer(n,s,d);\r\n Scanner t = new Scanner(System.in);\r\n  System.out.print|( \"pls enter the data for the second engineer  \" );\r\n  Engineer  e2 = new Engineer(n,s,d);\r\n  System.out.print ((w1.getsalary)+(e1.getsalary)+(e2.getsalary) ); \r\n}\r\n\r\npublic class worker extends Employee()\r\n{\r\n   public worker()\r\n   {\r\n\r\n   }\r\n\r\n  public worker(String name , double salary)\r\n   {\r\n      super(n,s);\r\n    }\r\n}  \r\n\r\n\r\npublic class Engineer extends Employee()\r\n{ \r\n  private String department;\r\n\r\n  public Engineer()\r\n  {\r\n  \r\n   }\r\npublic Engineer(String n, double s,String d)\r\n   {\r\n       super(n,s);\r\n       department = d;\r\n    }\r\npublic void setdepartment(String d)\r\n   {\r\n      department = d;\r\n    }\r\n   \r\n   public String getdepartment()\r\n   {\r\n     return department; \r\n   }\r\n}', 178, 31, 2, '2018-12-01 09:36:54', '2019-01-22 14:17:49'),
(64246, 77, '194', 178, 31, 0, '2018-12-01 09:36:54', '2018-12-01 09:36:54'),
(64277, 66, '170', 145, 31, 2, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64278, 68, '178', 145, 31, 0, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64279, 69, '185', 145, 31, 2, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64280, 70, '186', 145, 31, 1, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64281, 71, '188', 145, 31, 0, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64282, 72, '190', 145, 31, 1, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64283, 73, 'public class items{Sting name;      double price=100;     public items(){}     public items(string a,double b){name=a; price=b;} public double calcnetprice(double discount){\r\n\r\ndouble r;\r\n\r\nr=price*=discount;}\r\n return price-r;', 145, 31, 1, '2018-12-01 09:37:01', '2019-01-20 14:41:09'),
(64284, 74, 'public biscuits extends items{\r\nfinal double discount=.07;\r\nbiscuits(){\r\n\r\n}\r\npublic biscuits(  string name,double b){\r\nsuper(name,price);\r\n}\r\npublic double  getnetpric (){\r\nreturn price- (price*.07);\r\n}', 145, 31, 2, '2018-12-01 09:37:01', '2019-01-20 14:41:09'),
(64285, 76, 'public class employee{\r\n string name;\r\ndouble salary;\r\nemployee(){\r\n}\r\npublic company(string n,double s){\r\nname=n;\r\nsalary=s;\r\n}\r\npublic double gettax(){\r\nreturn salary*.05;\r\n}\r\npublic class worker extends employee{\r\nworker(string n,double s){\r\nsuper(name,salary);}\r\npublic void setname(string name){\r\nsuper.name=name;}\r\npublic void setsalary(double salary){\r\nthis..syalary=salary;\r\n}\r\npublic eng extends employee{\r\nstring d;\r\neng()\r\n{\r\n}\r\npublic eng(string d){\r\nthis', 145, 31, 3, '2018-12-01 09:37:01', '2019-01-22 14:19:53'),
(64286, 77, '193', 145, 31, 0, '2018-12-01 09:37:01', '2018-12-01 09:37:02'),
(64417, 66, '173', 123, 31, 0, '2018-12-01 09:37:22', '2018-12-01 09:37:22'),
(64418, 68, '179', 123, 31, 2, '2018-12-01 09:37:22', '2018-12-01 09:37:22'),
(64419, 69, '185', 123, 31, 2, '2018-12-01 09:37:22', '2018-12-01 09:37:23'),
(64420, 70, '187', 123, 31, 0, '2018-12-01 09:37:22', '2018-12-01 09:37:23'),
(64421, 71, '189', 123, 31, 1, '2018-12-01 09:37:22', '2018-12-01 09:37:23'),
(64422, 72, '191', 123, 31, 0, '2018-12-01 09:37:22', '2018-12-01 09:37:23'),
(64423, 73, 'public class item{\r\npublic double price;\r\npublic String name;\r\npublic int calcNetPrice(double x){\r\nreturn (price-(price*x/100);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', 123, 31, 2, '2018-12-01 09:37:22', '2019-01-20 14:46:01'),
(64424, 74, 'public class Biscuit extends item {\r\n\r\n@overload\r\npublic int calcNetPrice(){\r\n\r\nreturn (price-(price*7/100);\r\n\r\n}\r\n}', 123, 31, 2, '2018-12-01 09:37:22', '2019-01-20 14:46:02'),
(64425, 76, '//first class\r\npublic class worker {\r\n\r\nString name;\r\ndouble salary;\r\npublic worker(){\r\nsalary-=salary*0.05;\r\nreturn salary;\r\n}\r\npublic worker (String n , double s){\r\n\r\nname = n;\r\nsalary = s;\r\n}\r\npublic getsalray(){\r\nreturn salary;\r\n}\r\n}\r\n//second class\r\npublic class Engineer extends worker{\r\n\r\nString department;\r\npublic Engineer(String n , double s ,String d){\r\n\r\nsuper(n,s);\r\ndepartment=d;\r\n}\r\n\r\npublic  show(int x,int y ){\r\n\r\nreturn worker.salary*x;\r\nreturn Engineer.salary*y;  \r\n\r\n}\r\n}', 123, 31, 1, '2018-12-01 09:37:22', '2019-01-22 14:22:02'),
(64426, 77, '194', 123, 31, 0, '2018-12-01 09:37:22', '2018-12-01 09:37:23'),
(64427, 66, '172', 176, 31, 0, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64428, 68, '181', 176, 31, 0, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64429, 69, '182', 176, 31, 0, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64430, 70, '186', 176, 31, 1, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64431, 71, '189', 176, 31, 1, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64432, 72, '190', 176, 31, 1, '2018-12-01 09:37:23', '2018-12-01 09:37:24'),
(64433, 73, 'public class item{\r\ndouble price;\r\nstring name ;\r\nitem(){}\r\nitem(double price ,string name){\r\nthis.price=price;\r\nthis.name=name;\r\n}\r\npublic  double calNetprice (double discount){\r\nreturn price *discount;\r\n}\r\n\r\n}', 176, 31, 2, '2018-12-01 09:37:23', '2019-01-20 14:46:46'),
(64434, 74, 'public class biscuits extends item{\r\nbiscuit(){\r\n calNetprice()*.07;\r\n}\r\n\r\n}', 176, 31, 1, '2018-12-01 09:37:23', '2019-01-20 14:46:46'),
(64435, 76, 'import java.util.scanner;\r\npublic class employee{\r\nstring name;\r\ndouble salary;\r\nemployee(){\r\nname=\"aaaa\";\r\nsalary=1000;\r\n}\r\nemployee(string name,double salary){\r\nthis.name=name;\r\nthis.salary =salary;\r\n}\r\npublic double tax(double y){\r\nreturn y*.05;}\r\n}\r\npublic class worker extends employee{\r\nworker(){}\r\nworker(string name, double salary){\r\nthis.name=name;\r\nthis.salary=salary;\r\n}\r\n}\r\npublic class engineer extends employee{\r\nstring dept ;\r\nengineer (string name , double salary,string dept){\r\nthis name=name;\r\nthis salary = salary;\r\nthis dept = dept;\r\n}string b1\r\npublic static void main (string[]args){\r\nworker a = new worker();\r\nengineer b1= new engineer();\r\nengineer b2 =new engineer();\r\nscanner s = new scanner (system.in)\r\nsystem.out.println(\"please enter the name and salary of worker\");\r\nstring  a.name = s.next();\r\ndouble a.salary=s.nextdouble();\r\nsystem.out.println(\"please enter name,salary and department of first engineer\");\r\nstring b1.name=s.next();\r\ndouble b1.salary=s.nextdouble();\r\nstring b1.dept=s.next();\r\nsystem.out.println(\"please enter name,salary and department of second engineer\");\r\ndouble b2.salary=s.nextdouble();\r\nstring b2.dept=s.next();\r\nstring b2.name=s.next();\r\ndouble x=a.tax(a.salary);\r\ndouble z= b1.tax(b1.salary);\r\ndouble n = b2.tax(b2.salary);\r\nststem.out.println(\"total tax=\"x+z+n);\r\n\r\n\r\n\r\n}', 176, 31, 3, '2018-12-01 09:37:24', '2019-01-22 14:23:31'),
(64436, 77, '195', 176, 31, 2, '2018-12-01 09:37:24', '2018-12-01 09:37:24'),
(64577, 66, '166', 224, 31, 0, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64578, 68, '181', 224, 31, 0, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64579, 69, '182', 224, 31, 0, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64580, 70, '186', 224, 31, 1, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64581, 71, '189', 224, 31, 1, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64582, 72, '191', 224, 31, 0, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64583, 73, 'public item class { \r\ndouble price ;\r\nstring name ;\r\n public  double GetcalcNetprice ()\r\n\r\n  }', 224, 31, 1, '2018-12-01 09:37:51', '2019-01-20 14:48:30'),
(64584, 74, 'public class', 224, 31, 0, '2018-12-01 09:37:51', '2019-01-20 14:48:30'),
(64585, 76, 'public class worker{\r\nstring name;\r\ndouble salary;\r\npublic double calculate(s){\r\ndouble salary;\r\ns=salary*(5/100);}\r\n}\r\npublic class engineer{\r\nstring name;\r\ndouble salary; string department;\r\npublic double calculate (s)\r\ndouble salary;\r\ns=salary*(5/100);\r\n\r\n}\r\nSystem.out.println(\"salary is :\"+s);\r\n}\r\n}', 224, 31, 1, '2018-12-01 09:37:51', '2019-01-22 14:24:16'),
(64586, 77, '195', 224, 31, 2, '2018-12-01 09:37:51', '2018-12-01 09:37:51'),
(64607, 66, '170', 139, 31, 2, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64608, 68, '181', 139, 31, 0, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64609, 69, '182', 139, 31, 0, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64610, 70, '186', 139, 31, 1, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64611, 71, '189', 139, 31, 1, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64612, 72, '191', 139, 31, 0, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64613, 73, 'public class item {\r\npublic double price ;\r\npublic String name;\r\npublic item (double p, String n)\r\n{\r\nprice=p;\r\nname=n;\r\n}\r\npublic double calcNetPrice (double discount)\r\n{\r\ndouble dis=price*discount;\r\nprice=dis-price;\r\nreturn price;                                                                                                               \r\n }\r\n}', 139, 31, 2, '2018-12-01 09:37:56', '2019-01-20 14:49:57'),
(64614, 74, 'public  class Biscuits extends item{\r\npublic Biscuts( double p, String n , double d )\r\n{\r\nsuper(p,n)\r\ndicount = 0.007\r\n@override\r\npublic double calcNetPrice(double dicount )\r\n\r\nretu', 139, 31, 2, '2018-12-01 09:37:56', '2019-01-20 14:49:57'),
(64615, 76, 'public class Emplyee{\r\npublic String name;\r\npublic double salary;     \r\n                                                                                                         \r\n          public Employee()\r\n{\r\n}\r\npublic Employee(String n, double s)\r\n{\r\nname=n;\r\nsalary=s;\r\n}\r\npublic void setname(String n)\r\n{\r\nname = n;\r\n}\r\npublic setsalaary(double s)\r\n{\r\nsalary=s;}\r\npublic string getname( string n)\r\n{\r\nreturn n;\r\n}\r\npublic double getsalary( double salary)\r\n{\r\nreturn salary = salary+salary*.005;\r\n}\r\n}\r\n2- public class worker extends Employee{\r\npublic worker ()\r\n{\r\n}\r\npublic worker ( String name, double salary )\r\n{\r\nsuper(n,s)\r\n}\r\n}\r\n3-public class  enginerer extands Employee{\r\npublic String department;\r\n public engineer ( String n, double s, String de )\r\n{\r\nsuper (n,s)\r\ndepartment=de;\r\n}\r\n}\r\npublic  Static void main(String[]arges)\r\n{\r\nemployee e1= new Employee(\"ahmed\" ,5000)\r\n employee e2= new engineer( \"mohame\" , 6000, swoft)\r\nsystem.out.println(', 139, 31, 3, '2018-12-01 09:37:56', '2019-01-22 14:25:09'),
(64617, 77, '195', 139, 31, 2, '2018-12-01 09:37:56', '2018-12-01 09:37:56'),
(64647, 66, '170', 146, 31, 2, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64648, 68, '181', 146, 31, 0, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64649, 69, '182', 146, 31, 0, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64650, 70, '186', 146, 31, 1, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64651, 71, '189', 146, 31, 1, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64652, 72, '190', 146, 31, 1, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64653, 73, 'public class Item()\r\n{\r\n\r\ndouble price;\r\nString name;\r\npublic Item()\r\n{\r\n//default constructor\r\nprice = 20;\r\nname =\"finefood\";\r\n}\r\n\r\npublic double CalcNetPrice(double discount) \r\n//calculate price after discount method\r\n{\r\ndouble dis = price * discount;\r\nprice = price - dis;\r\nreturn price;\r\n}\r\n}', 146, 31, 2, '2018-12-01 09:38:01', '2019-01-20 14:50:27'),
(64654, 74, 'public class Biscuts etends Item\r\n{\r\nCalcNetPrice(0.07);\r\n //calling method\r\n}', 146, 31, 1, '2018-12-01 09:38:01', '2019-01-20 14:50:27'),
(64655, 76, 'public class worker() \r\n//super class\r\n{\r\nString name;\r\ndouble salary;\r\npublic void setsalary(double s)\r\n{  salary =s ;}\r\npublic void setname(String  n)\r\n{  name = n ;}\r\npublic double getsalary()\r\n{\r\nreturn salary;}\r\npublic worker ()\r\n{\r\n// default constructor\r\nname = \" Ahmed\";\r\nsalary = 3500;\r\n}  \r\npublic double TotalTax() \r\n//calcmethode\r\n{\r\ndouble tax;\r\ntax = salary*0.05;\r\nreturn tax;\r\n}       \r\n}   \r\npublic class Engineer etends worker \r\n// sub class \r\n{\r\nString department;\r\n}                                                                                             \r\n  public Engineer()\r\n // default constructor\r\n{\r\nsuper();\r\ndepartment =\" Asyut\";\r\n}\r\nTotalTax();\r\n //calling method\r\n}\r\npackage companyprogram\r\nimport java.util.Scanner;\r\npublic  class totaltaxcalc()\r\n{\r\npublic static void main (string[ ] args)\r\n{\r\nScanner input = new Scanner(System.in);\r\nworker w1 = new worker();\r\nEngineer g1= new Engineer(); \r\nEngineer g2= new Engineer();\r\n\r\n\r\n\r\ndouble total = w1.TotalTax()  +g1.TotalTax() + g2.TotalTax() ;\r\n\r\nSystem.out.println(\"totaltaxes =\" + total)\r\n} \r\n}', 146, 31, 5, '2018-12-01 09:38:01', '2019-01-22 14:26:08'),
(64656, 77, '195', 146, 31, 2, '2018-12-01 09:38:01', '2018-12-01 09:38:02'),
(64667, 66, '166', 191, 31, 0, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64668, 68, '179', 191, 31, 2, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64669, 69, '185', 191, 31, 2, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64670, 70, '186', 191, 31, 1, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64671, 71, '189', 191, 31, 1, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64672, 72, '190', 191, 31, 1, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64673, 73, 'class item{\r\ndouble price;\r\nstring name;\r\npublic item(){}\r\npublic item(double disc){}\r\npublic static double calcNetprice(double disc)\r\n{\r\ndouble price=price-disc*price;\r\nreturn(\"the price of\"+name+\"is\"+price)\r\n\r\n}       \r\n}', 191, 31, 1, '2018-12-01 09:38:04', '2019-01-20 11:59:13'),
(64674, 74, 'class biscuits extends item{\r\ndisc=.07                                                                                                    \r\n           System.out.println(\"the price of biscuits =\"+item(.07))', 191, 31, 1, '2018-12-01 09:38:04', '2019-01-20 11:59:13'),
(64675, 76, 'class company{    \r\ndouble tax=.05;\r\nstring name;\r\ndouble salary;\r\npublic company(){}\r\npublic double worker(string name,double salary)\r\n{\r\nreturn(salary*.05)\r\n}\r\npublic double Eng(string [] name,double [] salary,string[] department){\r\ndouble taxes=0;\r\nfor(int i=0;i<2;i++)\r\ntaxes+=salary[i]*.05\r\nreturn(taxes)\r\n}\r\n  public class program{\r\npublic static void main(string [] arges)\r\n{\r\nscanner s=new scanner(system.in);\r\ndouble w=s.next Double();\r\nstring W=s.next();\r\nstring [2] Engn=new [] s;\r\ndouble [2] Engs=new [] s;\r\nfor(i=0;i<2;i++)\r\nEngn[i]=s.next();\r\nfor(j=0;j<2;j++)\r\nEngs[j]=s.next Double();\r\nstring [2] Engd=new [] s;\r\nfor(i=0;i<2;i++)\r\nEngd[i]=s.next();\r\ncompany c=new company;\r\nsystem.out.Println(\"all the taxes is\"+c.worker(W,w)+c.Eng(Engn,Engs,Engd))\r\n}}', 191, 31, 2, '2018-12-01 09:38:04', '2019-01-20 13:04:11'),
(64676, 77, '195', 191, 31, 2, '2018-12-01 09:38:04', '2018-12-01 09:38:04'),
(64687, 66, '172', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64688, 68, '181', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64689, 69, '182', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64690, 70, '187', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64691, 71, '188', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64692, 72, '191', 118, 31, 0, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64693, 73, 'public class item{\r\n\r\ndouble price;\r\nstring name;\r\npublic double calcNetprice(){\r\nreturn item price ;\r\n}\r\n\r\n\r\n}', 118, 31, 1, '2018-12-01 09:38:14', '2019-01-20 14:51:06'),
(64694, 74, 'public class Biscuits extends item{\r\ndouble discount=((7*price)/100)\r\nB1.calNetprice(discount)\r\nsystem.out.println(B1.calNetprice(discount));\r\n\r\n\r\n}', 118, 31, 1, '2018-12-01 09:38:14', '2019-01-20 14:51:06'),
(64695, 76, 'import java.util.*\r\npublic class worker{\r\nstring name;\r\ndouble salary;\r\nstring department;\r\n} \r\npublic class Eng{\r\nstring name;\r\ndouble salary;\r\nstring department;\r\n}\r\npublic static void main (string[].args){\r\nScanner s=new Scanner( System.in);\r\nstring name worker=S.next();\r\ndouble salary worker=S.next Double();\r\nstring name Eng=S.next();\r\ndouble salary Eng=S.next Double();\r\nstring department Eng=S.next();\r\n\r\n}\r\n\r\n\r\n\r\n}', 118, 31, 0, '2018-12-01 09:38:14', '2019-01-22 14:27:00'),
(64696, 77, '195', 118, 31, 2, '2018-12-01 09:38:14', '2018-12-01 09:38:14'),
(64717, 66, '170', 183, 31, 2, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64718, 68, '179', 183, 31, 2, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64719, 69, '182', 183, 31, 0, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64720, 70, '186', 183, 31, 1, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64721, 71, '189', 183, 31, 1, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64722, 72, '190', 183, 31, 1, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64723, 73, 'public class item{\r\nstring name;\r\ndouble price;\r\nitem(){\r\n\r\n}\r\npublic double calcNetPrice (double  price){\r\nreturn price*discount;  \r\n\r\n} \r\n\r\n\r\n}', 183, 31, 2, '2018-12-01 09:38:17', '2019-01-20 14:51:21'),
(64724, 74, 'public class Biscuits extends item {\r\ndouble discount = 0.07;\r\n\r\n\r\n}', 183, 31, 1, '2018-12-01 09:38:17', '2019-01-20 14:51:21'),
(64725, 76, 'public class employee{\r\nString name;\r\ndouble salary;\r\nemployee (String n, double s  ){\r\nname = n;\r\nsalary = s;\r\n\r\n}\r\n\r\n}   \r\npublic class  worker extends employee {\r\n\r\nworker (String name , double salary ){\r\nsuper (name,salary )\r\n\r\n}\r\npublic double calctax(double salary){\r\n\r\nreturn this.salary *0.05;\r\n}\r\n}\r\npublic class engineer extends employee {\r\nString department;\r\nengineer(String name, double salary, String department){\r\nsuper(name,salary)\r\nthis.department = department\r\n}\r\npublic double calctax ( double salary  ){\r\nreturn this.salary*0.05; \r\n\r\n}\r\n}\r\npublic class main[\r\nimport java.util.scanner;\r\npublic static void main(String [ ]args){\r\nScanner input = new Scanner (System.in);\r\nSystem.out.println(\"please enter your name   \")\r\nString n = input.nextLine( );\r\nSystem.out.println(\"please enter your salary  \")\r\ndouble s = input.nextDouble( ); \r\nemployee em = new employee(n, s );\r\nworker w1 = new worker (em);\r\nSystem.out.println(\"please enter your department   \")\r\nString d1 = input.nextline( );\r\nengineer e1 = new engineer (em,d1 );\r\nSystem.out.println(\"please enter your department  \")\r\nString d2 = input.nextLine( );\r\nengineer e2 = new engineer (em,d2);\r\n\r\ndouble total_taxes = w1.calctax( s ) +e1.calctax ( s )+e2.calctax (s );\r\nSystem.out.println(\"the total amount of collected taxes is =\" + total=taxes);\r\n}\r\n}\r\n\r\n\r\n}', 183, 31, 5, '2018-12-01 09:38:17', '2019-01-22 14:27:43'),
(64726, 77, '193', 183, 31, 0, '2018-12-01 09:38:17', '2018-12-01 09:38:17'),
(64816, 66, '170', 189, 31, 2, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64817, 68, '179', 189, 31, 2, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64818, 69, '185', 189, 31, 2, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64819, 70, '186', 189, 31, 1, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64820, 71, '189', 189, 31, 1, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64821, 72, '190', 189, 31, 1, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64822, 73, 'public class Item {\r\n double price;\r\n String name;\r\npublic double calcNetPrice (double discount){\r\nreturn price *discount/100;\r\n}', 189, 31, 2, '2018-12-01 09:38:31', '2019-01-20 14:51:57'),
(64823, 74, 'public class Biscuits extends Item {\r\npublic double calcNetPrice (){\r\nreturn price*0.07;\r\n}                                                                                                               \r\n                                                    or\r\nsuper.calcNetPrice(7);', 189, 31, 2, '2018-12-01 09:38:31', '2019-01-20 14:51:57'),
(64824, 76, 'public class Worker{\r\n  String name;\r\n  double salary;\r\npublic double calcTax(){\r\nreturn salary*0.05;\r\n}\r\n}                                                                                                   \r\n pubic class Engineer extends Worker{\r\nString department;\r\n}\r\nimport java.util.Scanner;\r\n public class Main{\r\npublic static void main (String []args){\r\nScanner input =new Scanner (System.in);\r\nWorker w=new Worker();\r\nEngineer e1=new Engineer();\r\nEngineer e2=new Engineer();\r\nw.name=input.nextLine();\r\nw.salary=input.nextDouble();\r\ne1.name=input.nextLine();\r\ne1.salary=input.nextDouble();\r\ne1.department=input.nextLine();\r\ne2.name=input.nextLine();\r\ne2.salary=input.nextDouble();\r\ne2.department=input.nextLine();\r\nSystem.out.print(w.calcTax ()+e1.calcTax()+e2.calcTax());\r\n}\r\n}', 189, 31, 5, '2018-12-01 09:38:31', '2019-01-22 11:10:59'),
(64825, 77, '195', 189, 31, 2, '2018-12-01 09:38:31', '2018-12-01 09:38:31'),
(64846, 66, '173', 155, 31, 0, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64847, 68, '179', 155, 31, 2, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64848, 69, '182', 155, 31, 0, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64849, 70, '186', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64850, 71, '189', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64851, 72, '190', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64852, 73, 'public class Item{\r\nString name;\r\ndouble price;\r\npublic void calcNetPrice(int num of items,double price){\r\ndouble total=0;\r\ndouble tatal1=0;\r\ndouble discount=0.05;\r\ntotal=num of items*price;\r\ntatal1=tatal*discount;\r\nreturn total 1;', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-20 12:44:08'),
(64853, 74, 'public Biscuits extends Item{\r\ndouble discount;\r\nBiscuits(){ \r\ndiscount=0.07;\r\n}', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-20 12:44:08'),
(64854, 76, 'public class worker{\r\nstring name;\r\ndouble salary;\r\npublic worker(string n, double s ){\r\nname =n;\r\nsalary=s;}\r\npublic void calculatetax(double salary){\r\ndouble total salary=0;\r\ntotal salary=salary*tax;\r\n}\r\npublic worker(){\r\nthis(n,s)}\r\npublic class engineer extends worker{\r\nString department;\r\npublic engineer(String n,double s,String department){\r\nsuper(s,n);\r\nthis department=department;\r\n}\r\n}\r\npublic class Test{\r\npublic static void main(String []args){\r\nworker w=new worker ();\r\nengineer n1=new engineer ();\r\nengineer n2=new engineer ();\r\nw. calculateta();', 155, 31, 1, '2018-12-01 09:38:36', '2019-01-20 13:39:07'),
(64855, 77, '192', 155, 31, 0, '2018-12-01 09:38:36', '2019-01-30 06:58:07'),
(64955, 66, '173', 135, 31, 0, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64956, 68, '181', 135, 31, 0, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64958, 69, '182', 135, 31, 0, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64960, 70, '186', 135, 31, 1, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64962, 71, '189', 135, 31, 1, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64964, 72, '190', 135, 31, 1, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64966, 73, 'puplic class item {\r\npuplic static void main    (string [ ] arrgs)  {\r\nint price ;\r\nstring name;\r\nsystem .out .print (\"enter name and price\");\r\nfinal double discount =10%\r\nint new price=0;\r\nnew price ==price*(10/100)\r\nsystem.out.print(\"price after discount=\"+new price);\r\n\r\n}\r\n}', 135, 31, 0, '2018-12-01 09:39:18', '2019-01-20 14:54:00'),
(64968, 74, 'puplic class ibiscuit {\r\npuplic static void main(string [ ] arrgs)  {\r\nclass item extends biscuit { \r\nprice ;\r\nsystem .print (\"enter price  of biscuit\");\r\nfinal double discount of biscuit =7%\r\nint new p of b =price*(7/100)\r\nsystem .print (\"enter price  of biscuit=\"+new p of b);\r\n}\r\n}\r\n}', 135, 31, 0, '2018-12-01 09:39:18', '2019-01-20 14:54:00'),
(64970, 76, 'java.util.scanner \r\npuplic class company {\r\npuplic static void main    (string [ ] arrgs)  {   \r\ndouble salary ; \r\nstring name ;\r\nstring depart ;\r\nsystem.out.print(\"enter name and salary of employee\");\r\ninput scanner s =new scanner :\r\nstring s =new .scanner string()\r\ndoubles =new. scanner double ()\r\nsystem.out.print(\"enter your name and salary and depart of engineer\" );\r\nstrings =new .scanner string();\r\nscanner s =new. scanner double ();\r\nscanner s=new.scanner string ();\r\nfinal int tax=5%\r\n\r\ndouble new salary =(5/100)*salary;\r\ndouble sum=0;\r\nsum =+new salary;\r\nsystem.out.print (\"total amount=\"+ sum);\r\nfinal int ta\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}                                                                                                         \r\n  }', 135, 31, 1, '2018-12-01 09:39:18', '2019-01-27 08:57:14'),
(64972, 77, '195', 135, 31, 2, '2018-12-01 09:39:18', '2018-12-01 09:39:22'),
(64985, 66, '170', 149, 31, 2, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64986, 68, '181', 149, 31, 0, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64987, 69, '182', 149, 31, 0, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64988, 70, '186', 149, 31, 1, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64989, 71, '189', 149, 31, 1, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64990, 72, '190', 149, 31, 1, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(64991, 73, 'public class Item {\r\npublic String name ;\r\npublic double price;\r\npublic double calcNetPrice (double discount){\r\ndouble dis = price * discount;\r\nprice = price - discount;\r\nreturn price;\r\n\r\n}\r\n \r\n}', 149, 31, 2, '2018-12-01 09:39:19', '2019-01-20 14:53:14'),
(64992, 74, 'public class Biscuits extends Item {\r\ndouble discount;\r\npublic Biscuits (){\r\nsuper();\r\ndiscount = 0.07;\r\n}\r\npublic Biscuits(String n , double p , double d ){\r\nsuper(n,p);\r\ndiscount = d;\r\n}\r\n}', 149, 31, 1, '2018-12-01 09:39:19', '2019-01-20 14:53:14'),
(64993, 76, 'public class Worker {\r\nString name;\r\ndouble salary;\r\nWorker(){\r\nname = \"eman\";\r\nsalary = 5000;\r\n}\r\nWorker(String n  , double s){\r\nname = n;\r\nsalary=s;\r\n}\r\npublic String get_name(){\r\nreturn name;\r\n}\r\npublic void set_name(String n){\r\nname = n;\r\n}\r\npublic double get_salary(){\r\nreturn salary;\r\n}\r\npublic void set_salary(double s){\r\nsalary = s;\r\n}\r\npublic double tax()\r\n{\r\ndouble tax = salary*0.05;\r\nreturn tax;\r\n}\r\npublic class Engineer extends Worker{\r\nString department;\r\nEngineer(){\r\nsuper();\r\ndepartment = \"softWare\";\r\n}\r\npublic Engineer (String n , double s , String d){\r\nsuper(n,s);\r\ndepartment = d;\r\n}\r\npublic String get_department (){\r\nreturn department;\r\n}\r\npublic void set_department (String d){\r\ndepartment = d;\r\ntax();\r\n}\r\n}\r\n// Main\r\npublic static void main(string[] args){\r\nWorker w1 = new Worker();\r\nEngineer e1 = new E\r\n}', 149, 31, 4, '2018-12-01 09:39:19', '2019-01-22 14:30:30'),
(64994, 77, '195', 149, 31, 2, '2018-12-01 09:39:19', '2018-12-01 09:39:21'),
(65005, 66, '166', 215, 31, 0, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65006, 68, '181', 215, 31, 0, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65007, 69, '182', 215, 31, 0, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65008, 70, '186', 215, 31, 1, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65009, 71, '188', 215, 31, 0, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65010, 72, '190', 215, 31, 1, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65011, 73, 'public class Item{\r\n     double price;\r\n     String name;\r\n                                                                               \r\n   public double calcNetPrice (double price){\r\ndouble discount;\r\ndouble p;\r\np=this.price*discount;\r\nreturn p;\r\n}        }', 215, 31, 2, '2018-12-01 09:39:22', '2019-01-20 14:53:34'),
(65012, 74, 'public class  Biscuits extends Item{\r\n  public double calcNetPrice (double price){\r\ndouble final discount= 0.07;\r\ndouble p;\r\np=this.price*discount;\r\nreturn p;\r\n}', 215, 31, 1, '2018-12-01 09:39:22', '2019-01-20 14:53:34'),
(65013, 76, 'public class Employee{\r\nString name ;\r\ndouble salary;\r\nfinal static double tax=this.salary*0.05;\r\npublic Employee(String n,double s){\r\nname =n;\r\nsalary=s;\r\n}\r\npublic static double totalTax(){\r\nthis.tax+=tax;\r\n}      \r\n      \r\npublic class Worker extends Employee{\r\npublic Worker(String n,double s){ super(n,s)}\r\n                                                                                                   \r\n public class Engineer extends Employee{\r\nString department;\r\npublic Worker(String n,double s,String d){\r\n super(n,s)\r\ndepartment=d;\r\n}                   \r\nimport  java .util.Scanner;\r\npublic class Main{\r\nScanner s=new Scanner(System.in);\r\nWorker w=new Worker();\r\nw.name = s.next();\r\nw.salary=s.nextDouble();\r\nEngineer e1=new Engineer();\r\ne1.name = s.next();\r\ne1.salary=s.nextDouble();\r\ne1.department=s.next();\r\nEngineer e2=new Engineer();\r\ne2.name = s.next();\r\ne2.salary=s.nextDouble();\r\ne2.department=s.next();\r\nSystem.out.print(Employee.totalTax());\r\n}', 215, 31, 2, '2018-12-01 09:39:22', '2019-01-22 14:32:11'),
(65014, 77, '195', 215, 31, 2, '2018-12-01 09:39:22', '2018-12-01 09:39:22'),
(65107, 52, '128', 191, 28, NULL, '2018-12-01 09:39:52', '2018-12-01 09:39:52'),
(65109, 53, '130', 191, 28, NULL, '2018-12-01 09:39:52', '2018-12-01 09:39:52'),
(65110, 54, '134', 191, 28, NULL, '2018-12-01 09:39:52', '2018-12-01 09:39:52'),
(65111, 56, NULL, 191, 28, NULL, '2018-12-01 09:39:52', '2018-12-01 09:39:52'),
(65235, 66, '172', 104, 31, 0, '2018-12-01 09:40:29', '2018-12-01 09:40:30'),
(65236, 68, '181', 104, 31, 0, '2018-12-01 09:40:29', '2018-12-01 09:40:30'),
(65237, 69, '183', 104, 31, 0, '2018-12-01 09:40:29', '2018-12-01 09:40:30'),
(65238, 70, '186', 104, 31, 1, '2018-12-01 09:40:29', '2018-12-01 09:40:30'),
(65239, 71, '188', 104, 31, 0, '2018-12-01 09:40:30', '2018-12-01 09:40:30'),
(65240, 72, '191', 104, 31, 0, '2018-12-01 09:40:30', '2018-12-01 09:40:30'),
(65241, 73, 'public class item{\r\n\r\npublic double price;\r\nstring name;\r\npublic double net price{\r\nprice= price-7%;\r\nsystem .out.print ln(\"the item after dis\"+the item price);\r\n}\r\n\r\n\r\n\r\n}', 104, 31, 1, '2018-12-01 09:40:30', '2019-01-20 14:56:06'),
(65242, 74, 'public class item{\r\n\r\npublic double price;\r\nstring name;\r\npublic double net price{\r\n\r\npublic class biscuits{\r\npublic class biscuits extent class item\r\nprice= price-7%;\r\n}}', 104, 31, 0, '2018-12-01 09:40:30', '2019-01-20 14:56:06'),
(65243, 76, 'javax.swing.joptionpane;\r\npublic class worker{\r\ndouble salary;\r\nstring name;\r\npublic class engineer{\r\n\r\nstring name;\r\nstring dep;\r\ndoule salary;}\r\npublic double salary{\r\nsalary-=5%;\r\nstatic public worker(){\r\n}\r\nstatic public engineer(){\r\n}\r\nworker. w1=new worker();\r\nworker. w2=new worker();\r\nengineer .e1= new engineer();\r\n}\r\n\r\nstring s= joptionane.input(worker.w,worker.w2,engineer.e1)\r\n\r\nsystem. out.println(salary);\r\n\r\n}', 104, 31, 0, '2018-12-01 09:40:30', '2019-01-22 14:34:00'),
(65244, 77, '192', 104, 31, 0, '2018-12-01 09:40:30', '2018-12-01 09:40:30'),
(65404, 66, '170', 136, 31, 2, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65405, 68, '181', 136, 31, 0, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65406, 69, '182', 136, 31, 0, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65407, 70, '186', 136, 31, 1, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65408, 71, '188', 136, 31, 0, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65409, 72, '190', 136, 31, 1, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65410, 73, 'class Named_Item {\r\ndouble price;\r\nString name;\r\n\r\nnamed item(){\r\n}\r\nnamed item(Double p, String n){\r\nprice =p;\r\nname=n;\r\n}\r\npublic static int calc_Net_Prcie (double p,String n) {\r\nint item price=0;\r\nint discount=0;\r\nSystem.out.println(\"enter your discount\");\r\nScanner input=new Scanner(System.in);\r\nint discount = input.nextInt();\r\nitem price +=discount;\r\nSystem.out.println(item price);\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 136, 31, 1, '2018-12-01 09:41:15', '2019-01-20 14:56:34'),
(65411, 74, 'class Biscuits extends  Named_Item{\r\nBiscuits(){\r\n}\r\nBiscuits(double discount){\r\n\r\nfinal discount =0.07;}\r\n\r\n}', 136, 31, 1, '2018-12-01 09:41:15', '2019-01-20 14:56:34');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(65412, 76, 'class worker(){\r\nworker(){}\r\nworker( String name,double salary){\r\nname=n;\r\nsalary=s;\r\n}\r\nEngineer extends worker{\r\nEngineer( String name, double salary,String department)\r\nSuper();\r\ndepartment d;\r\n}\r\npublic static double tax(double taxOfsalary){\r\nfinal int taxs=0.05;\r\ndouble taxOfsalary +=taxs;\r\nSystem .out. println(taxOfsalary );\r\n}public void read(){\r\nScanner input=new Scanner;\r\nSystem .out .println(\"enter your name\");\r\n}\r\npublic static int total(double amount){\r\namount =0;\r\nint total =0;\r\ntatal+=tax;}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n}\r\npublic static void main(String[] args){\r\nworker w= new worker();\r\nEngineer e1=new Engineer();\r\nEngineer e2=new Engineer();\r\nScanner input =new Scanner(System.in);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 136, 31, 1, '2018-12-01 09:41:15', '2019-01-22 14:35:45'),
(65413, 77, '195', 136, 31, 2, '2018-12-01 09:41:15', '2018-12-01 09:41:16'),
(65414, 66, '170', 192, 31, 2, '2018-12-01 09:41:23', '2018-12-01 09:41:23'),
(65415, 68, '178', 192, 31, 0, '2018-12-01 09:41:23', '2018-12-01 09:41:23'),
(65416, 69, '182', 192, 31, 0, '2018-12-01 09:41:23', '2018-12-01 09:41:24'),
(65417, 70, '186', 192, 31, 1, '2018-12-01 09:41:23', '2018-12-01 09:41:24'),
(65418, 71, '189', 192, 31, 1, '2018-12-01 09:41:23', '2018-12-01 09:41:24'),
(65419, 72, '190', 192, 31, 1, '2018-12-01 09:41:23', '2018-12-01 09:41:24'),
(65420, 73, 'public class item{ \r\nprivate double price;\r\nprivate String name;\r\n\r\npublic void setname(String name )\r\n\r\n{this.name=name;}\r\npublic void setprice( double price)\r\n{this .price=price;}\r\npublic String getname(){return name;}\r\npublic double getprice(){return price;} \r\n\r\npublic class(){  }\r\npublic double calcNetprice(double price,double discount)\r\n{\r\ndouble newprice;\r\nnewprice=price*discount;\r\nreturn newprice ;\r\n}\r\n \r\n\r\n\r\n}', 192, 31, 1, '2018-12-01 09:41:23', '2019-01-20 14:56:59'),
(65421, 74, 'public class Biscuits extends item{\r\n\r\n  \r\n\r\n\r\n\r\n}', 192, 31, 1, '2018-12-01 09:41:23', '2019-01-20 14:56:59'),
(65422, 76, 'public class humanresources{\r\n\r\nprivate String name;\r\nprivate double salary;\r\n public void setname (String n){name=n;}\r\n public void setsalary (double  s){salary=s;}\r\npublic double getsalary(){return salary;}\r\npublic Strring getname(){return name;}\r\n\r\npublic humanresources(String n,double s ){\r\nname=n;\r\nsalary=s;\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\npublic class employee extends humanresourses{\r\nsub(n,s);\r\n\r\n\r\npublic double tax( double salary){\r\ndouble valueoftax;\r\nvalueoftax=salary*0.05;\r\nreturn valueoftax;\r\n}\r\n\r\n\r\n\r\n}\r\npublic class engineer extends humanresourses{\r\nsup(n,s);\r\nprivate String department;\r\npublic void setdepartment(String department){this.department=department;}\r\npublic String getdepartment(){return department;}\r\n\r\n\r\n\r\n\r\npublic double tax( double salary){\r\ndouble valueoftax;\r\nvalueoftax=salary*0.05;\r\nreturn valueoftax;\r\n}\r\n}\r\npublic calss main{\r\npublic static void main (String [] args)\r\n{\r\nemployee e1=new employee(\"ahmed ,12\");\r\nemployee e2=new employee(\"sayed,123\");\r\nengineer r1=new engineer();\r\nr1.setname(\"mahmoud\");\r\nr1.setsalary(1232);\r\nr1.setdepartment(\"accounting\");\r\ne1.tax(12);\r\ne1.tax(123);\r\nr1.tax(1232);\r\ndouble net tax=e1.tax(12)+e1.tax(123)+r1.tax(1232);\r\nsystem.out.println(\"the total tax is =\"+net tax);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', 192, 31, 4, '2018-12-01 09:41:23', '2019-01-22 14:36:56'),
(65423, 77, '195', 192, 31, 2, '2018-12-01 09:41:23', '2018-12-01 09:41:24'),
(65444, 66, '172', 202, 31, 0, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65445, 68, '181', 202, 31, 0, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65446, 69, '182', 202, 31, 0, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65447, 70, '186', 202, 31, 1, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65448, 71, '189', 202, 31, 1, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65449, 72, '190', 202, 31, 1, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65450, 73, 'import java.util.scanner;\r\npublic class item{ double price;\r\nstring name;\r\npublic static double CalcNetPrice (double discound,double price)\r\n{double net price;\r\n     net price=  price  -  price* discound ;\r\nreturn net price;}\r\npublic static void main(string[]args){\r\nitem book=new item();\r\nbook.name=\"java\" ;\r\nbook.price=200.0;\r\nscanner sc=new scanner(system.in);\r\ndouble diss=sc.next Double();\r\ndouble price=sc.nextDouble();\r\ndouble net price=CalcNetPrice(diss,price)\r\nsystem .out.println(net price);}', 202, 31, 1, '2018-12-01 09:41:32', '2019-01-20 14:48:07'),
(65451, 74, 'public class Biscuits extend item{ double discount  =0.07; \r\n double price  =sc. nextDouble();\r\ncalcNetPrcie(diss,price);}', 202, 31, 1, '2018-12-01 09:41:32', '2019-01-20 14:48:07'),
(65452, 76, NULL, 202, 31, 0, '2018-12-01 09:41:32', '2019-01-22 14:23:44'),
(65453, 77, '194', 202, 31, 0, '2018-12-01 09:41:32', '2019-01-30 06:58:07'),
(65454, 66, '173', 193, 31, 0, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65455, 68, '179', 193, 31, 2, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65456, 69, '182', 193, 31, 0, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65457, 70, '186', 193, 31, 1, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65458, 71, '189', 193, 31, 1, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65459, 72, '190', 193, 31, 1, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65460, 73, 'import java.util.Scanner;\r\npublic double Item(){\r\n  double price,name;\r\n  double discount;\r\n  public double calcNetPrice(double dicount){\r\n      Scanner in=new Scanner(System.in);\r\n      doublie name=in.nextDouble;\r\n      double price =in.nextDouble;\r\n      dicount*=price;\r\n      price-=discount;\r\n  }\r\nreturn discount;\r\n}', 193, 31, 0, '2018-12-01 09:41:50', '2019-01-20 14:57:18'),
(65461, 74, 'public double Biscuits extends Item(){\r\ncalcNetPrice(0.07);\r\n   \r\n    System.out.println(\"price after discount\"+price);\r\n}', 193, 31, 0, '2018-12-01 09:41:50', '2019-01-20 14:57:18'),
(65462, 76, 'package javaApp;\r\nimport java.util.Scanner;\r\npublic static void main(){\r\nScanner in=new Scanner(System.in);\r\n Worker w=new Worker(\"ali\",553);\r\nSystem.out.println(\"w.salary\");\r\nEngineer e1=new Engineer(\"ahmed\",1322,1);\r\nEngineer e2=new Engineer(\"adam\",5522,2);\r\nSystem.out.println(\"e1.salary\");\r\nSystem.out.println(\"e2.salary\");\r\n} \r\npublic double Employee(){\r\n  String name;\r\n  double salary,tax;\r\npublic Employee(){\r\n  name=\"mohamed\";\r\n  Salary=1200\r\n}\r\npublic Employee(String n,double s){\r\n  name=n;\r\n  salary=s;\r\n}\r\n  public int getName(){\r\n     return name;\r\n  }\r\n  public void setName(String n){\r\n    name =n;\r\n  }\r\n  public double getSalary(){\r\n    return salary;\r\n  }\r\n  public void setSalary(double s){\r\n    salary = s; \r\n}\r\n}\r\npublic  double Worker extends Employee(){\r\n  tax=0.05;\r\n  tax*=salary;\r\n  salary -= tax;\r\n}\r\npublic  double  Engineer extends Employee(){\r\n  int department;\r\n   tax=0.05;\r\n  tax*=salary;\r\n  salary -= tax;\r\n   public double getDepartment(){\r\n    return salary;\r\n  }\r\n  public void setDepartment(double s){\r\n    salary = s; \r\n}', 193, 31, 0, '2018-12-01 09:41:50', '2019-01-22 14:42:14'),
(65463, 77, '194', 193, 31, 0, '2018-12-01 09:41:50', '2018-12-01 09:41:51'),
(65464, 66, '170', 129, 31, 2, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65465, 68, '178', 129, 31, 0, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65466, 69, '185', 129, 31, 2, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65467, 70, '186', 129, 31, 1, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65468, 71, '189', 129, 31, 1, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65469, 72, '190', 129, 31, 1, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65470, 73, 'public class Item {\r\npublic double price;\r\npublic String name;\r\npublic double calcNetPrice (double discount)\r\n{\r\nreturn price - discount\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 129, 31, 2, '2018-12-01 09:42:00', '2019-01-20 14:57:40'),
(65471, 74, 'public class Biscuits extends Item {\r\ndouble final discount =0.07;\r\n}\r\n]', 129, 31, 1, '2018-12-01 09:42:00', '2019-01-20 14:57:40'),
(65472, 76, 'public class Em {\r\nString name ;\r\ndouble salary ; \r\npublic Em ( double s ,String n){\r\n\r\nsalary =s\r\nname=n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\npublic double calc tax ( )\r\n\r\n{\r\nreturn salary *0.05\r\n}\r\npublc void read ( )\r\n{\r\nScanner input = new Scanner ( System.in)\r\nname = input.next( );\r\nsalary =input.next Double;\r\n\r\n}\r\npublic class worker extends Em {\r\npublic worker (double s , String n )\r\n{\r\nsuper( s,n)\r\n}\r\n\r\n}\r\npublic En extends Em{\r\nString department;\r\npublic En ( double s ,String n, String d )\r\n{\r\nsuper (s,n);\r\nd=department;\r\n}\r\n\r\n}\r\n}                                                                            \r\n   public class test( )\r\n{\r\npublic static void main ( String [ ] args )\r\n{\r\nworker a = new worker ( );\r\na.read( );\r\nEn b =new En ( );\r\nb.read ( )\r\nEn c =new En ( );\r\nc.read ( );\r\nc.calc tax ( );\r\n}\r\n\r\n}', 129, 31, 5, '2018-12-01 09:42:00', '2019-01-27 08:54:00'),
(65473, 77, '193', 129, 31, 0, '2018-12-01 09:42:00', '2018-12-01 09:42:00'),
(65564, 66, '171', 220, 31, 0, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65565, 68, '181', 220, 31, 0, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65566, 69, '182', 220, 31, 0, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65567, 70, '186', 220, 31, 1, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65568, 71, '189', 220, 31, 1, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65569, 72, '190', 220, 31, 1, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65570, 73, 'public class item{\r\n private String name;\r\n private double price;\r\npublic double calcNetprice(double discount){\r\ndouble a=price*discount;\r\nreturn    price-a;', 220, 31, 2, '2018-12-01 09:55:07', '2019-01-20 14:58:00'),
(65571, 74, 'public class Biscuits extends item{\r\npublic  double a;\r\npublic Biscuits(){\r\na =122.0;\r\n    public double Biscuits() {  \r\ndouble discount=  a*0.7;                                                                                                  \r\n        return     discount;}', 220, 31, 1, '2018-12-01 09:55:07', '2019-01-20 14:58:00'),
(65572, 76, 'public class hr{\r\npublic static void main(String[]args){\r\nworker r1=new worker();\r\nEng e1=new Eng();\r\nEng e2=new Eng();\r\nr1.name=\"qw\";\r\nr1.salary=365.2;\r\ne1.name=\"aa\";\r\ne1.salary=1223.5;\r\ne2.name=\"ee\";\r\ne2.salary=\"234.5;\r\ndouble a=r1.caltex;\r\ndouble z=e1.calctex;\r\ndouble x=e2.calctax;\r\nSystem.out.println(a+z+x);\r\n}\r\n}\r\nclass worker {\r\n private String name;\r\n private double salary;\r\npublic worker (){\r\nname=\"ss\";\r\nsalary=300.3;}\r\npublic worker (String s,double y){\r\n name=s;\r\nsalary=y;}\r\n public double caltax(){\r\ndouble a=salary*0.5\r\nreturn a-salary;\r\n}\r\n}\r\n public class Eng{\r\nprivate String name;\r\nprivate double salary;\r\nprivate String department  ;\r\npublic Eng (String n, double s, String d){\r\nname=n;\r\nsalary=s;\r\ndepartment=d;}\r\npublic double calcetax(salary){\r\ndouble z=salary*0.5;\r\nreturn z-salary;}\r\n}', 220, 31, 3, '2018-12-01 09:55:07', '2019-01-22 14:38:21'),
(65573, 77, '195', 220, 31, 2, '2018-12-01 09:55:07', '2018-12-01 09:55:07'),
(65584, 66, '173', 124, 31, 0, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65585, 68, '181', 124, 31, 0, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65586, 69, '182', 124, 31, 0, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65587, 70, '186', 124, 31, 1, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65588, 71, '189', 124, 31, 1, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65589, 72, '190', 124, 31, 1, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65590, 73, 'public class item{\r\nString name;\r\ndouble price;\r\npublic double  calculate (int d){\r\nprice= ( price_((price*d)/100));\r\nreturn price;\r\n}', 124, 31, 2, '2018-12-01 09:55:43', '2019-01-20 14:58:14'),
(65591, 74, 'public Class Biscuits     extends item {\r\n                                                                                                        \r\n                     Biscuits b=new Biscuits();\r\nb.calculate( 7);\r\n           }', 124, 31, 1, '2018-12-01 09:55:43', '2019-01-20 14:58:14'),
(65592, 76, 'import java.util.Scanner;    \r\n   public class worker{\r\nString name;\r\ndouble salary;\r\npublic void worker (String n,double s){\r\nthis.name=n;\r\nthis.salary=d;\r\n}public class engineer  extends  worker{\r\nString department;\r\npublic engineer(String n,double d,String p){\r\n\r\nthis.name=n;\r\nthis.salary=d;\r\nthis.department=p;\r\n                                                                                      \r\n                   }          \r\npublic static void main (String []args){\r\n\r\n                    Worker w=new Worker();\r\n   w.worker(String n,double s)\r\nScanner IN=new Scanner(System.in);\r\nSystem.out.println(\"enter data of one worker\");\r\nn=IN.nextLine();\r\ns=IN.nextDouble();\r\nSystem.out.println(\"enter data of 2 engineers\");\r\nengineer a=new engineer();\r\na.worker(String n,double s);\r\nScanner I=new Scanner(System.in);\r\nn=I.nextString();\r\ns=I.nextDouble();\r\nSystem.out.println(\"enter dep\");\r\nString dep=I.nextString;\r\nn=I.nextString();\r\ns=I.nextDouble();\r\nSystem.out.println(\"enter dep\")\r\nString dep=I.nextString;\r\nSystem.out.println((w.salary*5)/100+(a.salary*5)/100+a.salary*', 124, 31, 3, '2018-12-01 09:55:43', '2019-01-22 14:37:24'),
(65593, 77, '195', 124, 31, 2, '2018-12-01 09:55:43', '2018-12-01 09:55:43'),
(65707, 80, '205', 94, 33, 0, '2018-12-03 08:53:32', '2018-12-03 09:18:32'),
(65708, 81, '211', 94, 33, 0, '2018-12-03 08:53:32', '2018-12-03 09:18:32'),
(65709, 82, '214', 94, 33, 2, '2018-12-03 08:53:32', '2018-12-03 09:18:32'),
(65710, 83, '216', 94, 33, 0, '2018-12-03 08:53:32', '2018-12-03 09:18:33'),
(65711, 84, 'gjghjgjh', 94, 33, NULL, '2018-12-03 08:53:32', '2018-12-03 08:53:32'),
(65732, 80, '204', 228, 33, 2, '2018-12-03 08:55:31', '2018-12-03 08:55:31'),
(65733, 81, '210', 228, 33, 0, '2018-12-03 08:55:31', '2018-12-03 08:55:31'),
(65734, 82, '214', 228, 33, 2, '2018-12-03 08:55:31', '2018-12-03 08:55:31'),
(65735, 83, '216', 228, 33, 0, '2018-12-03 08:55:31', '2018-12-03 08:55:31'),
(65736, 84, '[\r\np\r\np\r\n[\r\nlk\r\nlklkp', 228, 33, 2, '2018-12-03 08:55:31', '2018-12-03 09:39:45'),
(65802, 80, '204', 271, 33, 2, '2018-12-03 09:36:35', '2018-12-03 09:36:35'),
(65803, 81, '209', 271, 33, 0, '2018-12-03 09:36:35', '2018-12-03 09:36:35'),
(65804, 82, '214', 271, 33, 2, '2018-12-03 09:36:35', '2018-12-03 09:36:35'),
(65805, 83, '216', 271, 33, 0, '2018-12-03 09:36:35', '2018-12-03 09:36:35'),
(65806, 84, 'lkjlkjlkjlkjlklkjl', 271, 33, NULL, '2018-12-03 09:36:35', '2018-12-03 09:36:35'),
(65830, 80, '204', 237, 33, 2, '2018-12-03 09:37:37', '2018-12-03 09:37:37'),
(65831, 81, '209', 237, 33, 0, '2018-12-03 09:37:37', '2018-12-03 09:37:37'),
(65832, 82, '214', 237, 33, 2, '2018-12-03 09:37:37', '2018-12-03 09:37:37'),
(65833, 83, '216', 237, 33, 0, '2018-12-03 09:37:37', '2018-12-03 09:37:37'),
(65834, 84, '78\r\nkxzcv\r\nxzbknxz\r\nxbzckj\r\nbajsf', 237, 33, 1.5, '2018-12-03 09:37:37', '2018-12-03 09:38:31'),
(65835, 84, NULL, 272, 33, NULL, '2018-12-03 09:40:57', '2018-12-03 09:40:57'),
(66023, 85, NULL, 275, 34, 0, '2018-12-03 12:19:28', '2019-01-22 15:44:04'),
(66024, 86, '220', 275, 34, 2, '2018-12-03 12:19:28', '2019-01-22 15:35:29'),
(66025, 90, '234', 275, 34, 2, '2018-12-03 12:19:28', '2019-01-22 15:35:29'),
(66027, 91, '236', 275, 34, 1, '2018-12-03 12:19:28', '2019-01-22 15:35:29'),
(68677, 85, NULL, 418, 34, 0, '2018-12-03 12:35:32', '2019-01-22 15:44:16'),
(68678, 86, '219', 418, 34, 0, '2018-12-03 12:35:32', '2019-01-22 15:35:29'),
(68679, 88, '227', 418, 34, 0, '2018-12-03 12:35:32', '2019-01-22 15:35:29'),
(68680, 89, '232', 418, 34, 0, '2018-12-03 12:35:32', '2019-01-22 15:35:29'),
(68681, 90, '235', 418, 34, 0, '2018-12-03 12:35:32', '2019-01-22 15:35:29'),
(68682, 91, '236', 418, 34, 1, '2018-12-03 12:35:32', '2019-01-22 15:35:29'),
(68683, 92, '241', 418, 34, 2, '2018-12-03 12:35:33', '2019-01-22 15:35:29'),
(70784, 85, 'jklmvrkl;jgl;mc./v,', 239, 34, 0, '2018-12-03 12:39:04', '2019-01-03 14:50:27'),
(70791, 86, '218', 239, 34, 0, '2018-12-03 12:39:04', '2019-01-22 15:35:29'),
(70800, 88, '229', 239, 34, 2, '2018-12-03 12:39:04', '2019-01-22 15:35:29'),
(70809, 89, '233', 239, 34, 0, '2018-12-03 12:39:04', '2019-01-22 15:35:29'),
(70814, 92, '241', 239, 34, 2, '2018-12-03 12:39:04', '2019-01-22 15:35:29'),
(75371, 85, 'public class trip ()\r\n{}', 414, 34, 6, '2018-12-03 12:52:14', '2018-12-05 04:57:50'),
(75372, 86, '220', 414, 34, 2, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(75373, 88, '227', 414, 34, 0, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(75374, 89, '233', 414, 34, 0, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(75375, 90, '234', 414, 34, 2, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(75376, 91, '236', 414, 34, 1, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(75377, 92, '241', 414, 34, 2, '2018-12-03 12:52:14', '2018-12-03 12:52:14'),
(76800, 85, 'class trip {\r\nprivata String name;\r\nprivata String place; \r\nStatic  int day;\r\n} \r\nclass scientifictrip extends trip{\r\nprivata String startdate;\r\nprivata String enddate; \r\n}              \r\nclass entertainmenttrip extends trip{\r\nprivata String date;\r\n}', 237, 34, 3, '2018-12-03 12:59:19', '2019-01-22 15:44:48'),
(76801, 86, '220', 237, 34, 2, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(76802, 88, '229', 237, 34, 2, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(76803, 89, '232', 237, 34, 0, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(76804, 90, '234', 237, 34, 2, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(76805, 91, '236', 237, 34, 1, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(76806, 92, '240', 237, 34, 0, '2018-12-03 12:59:19', '2019-01-22 15:35:29'),
(77041, 85, 'import.until.date ;\r\nimport java.until ;\r\nstring name ;\r\nstring place ; \r\n)', 240, 34, 0, '2018-12-03 13:00:30', '2019-01-03 14:51:27'),
(77042, 86, '218', 240, 34, 0, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77043, 88, '229', 240, 34, 2, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77044, 89, '233', 240, 34, 0, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77045, 90, '234', 240, 34, 2, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77046, 91, '236', 240, 34, 1, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77047, 92, '241', 240, 34, 2, '2018-12-03 13:00:30', '2018-12-03 13:00:31'),
(77886, 85, 'scientific trip\r\n first class ()\r\n\r\n private String startDate;\r\nprivate String endDate;\r\nprivate String name;\r\nprivate String place;\r\nprivate int days;\r\nClass trip()\r\n{\r\nstart Date=\"2\\10\\2003\";\r\nend Date=\"5\\10\\2003\";\r\nname=\"mena\";\r\nplace=\"assuit\";\r\ndays=\"1\";\r\n}\r\nfor(int d;String n;String p)\r\n{\r\nData=d;\r\nname=n;\r\nplace=p;\r\n}\r\npublic int setDays(int x)\r\n{\r\nx=1;\r\n}\r\npublic void getDays()\r\n{\r\nreturn x;\r\n}                                                                                                        \r\n scand class\r\nint date;\r\nString name;\r\nString place;\r\n   class trip()\r\n{\r\ndate=\"5\\3\\2003\";\r\nname=\"ahmed\";\r\nplace=\"assuit\";\r\n}', 415, 34, 3, '2018-12-03 13:04:50', '2019-01-15 10:41:59'),
(77887, 86, '220', 415, 34, 2, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77888, 88, '228', 415, 34, 0, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77889, 89, '230', 415, 34, 0, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77890, 90, '234', 415, 34, 2, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77891, 91, '236', 415, 34, 1, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77892, 92, '239', 415, 34, 0, '2018-12-03 13:04:50', '2018-12-03 13:04:50'),
(77917, 85, 'public class trip()\r\n{\r\npublic string name,place;\r\npublic trip\r\n{\r\nname=\"none\"\r\nplace=\"none\"\r\n}\r\npublic trip(string n,string p)\r\n{\r\n}\r\n\r\npublic int get period (trip t)\r\n{\r\n]\r\n}                                                                                                                \r\n  public class scientific extends trip()\r\n{\r\nString start date;\r\nString end date;\r\n}                      \r\n  public scientific  trip()\r\n{\r\n}                                                                                          \r\n  public class entertainment extends trip()\r\n{\r\nDate date;\r\n}', 386, 34, 3, '2018-12-03 13:04:54', '2019-01-15 10:43:25'),
(77918, 86, '220', 386, 34, 2, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(77919, 88, '227', 386, 34, 0, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(77920, 89, '231', 386, 34, 2, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(77921, 90, '234', 386, 34, 2, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(77922, 91, '236', 386, 34, 1, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(77923, 92, '241', 386, 34, 2, '2018-12-03 13:04:54', '2018-12-03 13:04:54'),
(78848, 85, 'package ask;\r\npublic class trip{\r\nprotected String name;\r\nprotected String place;\r\n\r\npublic trip(){}\r\npublic trip(String name,String place){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic int getperiod (String startdate, String enddate){\r\nchart [] sday=new chart[3];\r\nchart [] eday=new chart[3];\r\nchart [] sday=startdate.split(\"/\");\r\nchart [] eday=enddate.split(\"/\");\r\nint x=sday[0]-eday;\r\nreturn x;\r\n}\r\n}                                                                                                            \r\n public class scientific extends trip{\r\nString startdate;\r\nString enddate;\r\n\r\npublic scientific(){}\r\npublic scientific(String startdate, String enddate){\r\nthis.String startdate=String startdate;\r\nthis.String enddate=String enddate;\r\n}\r\npublic scientific(String name,String place,String startdate, String enddate){\r\nsuper(name,place);\r\nthis.String startdate=String startdate;\r\nthis.String enddate=String enddate;\r\n}\r\npublic int getperiod (String startdate, String enddate){\r\nchart [] sday=new chart[3];\r\nchart [] eday=new chart[3];\r\nchart [] sday=startdate.split(\"/\");\r\nchart [] eday=enddate.split(\"/\");\r\nint x=sday[0]-eday;\r\nreturn x;\r\n}\r\n}      \r\npublic class entertainment{\r\nString date;\r\n\r\npublic entertainment(){}\r\npublic entertainment(String date){\r\nthis.date=date;\r\n}\r\npublic entertainment(String name,String place,String date){\r\nsuper(name,place);\r\nthis.date=date;\r\n}\r\npublic int getperiod(){\r\nreturn 1;\r\n}\r\n}      \r\npublic void main(String[]args){\r\nscientific s1=new scientific();\r\nscientific s2=new scientific();\r\nentertainment e1=new entertainment();\r\nentertainment e2=new entertainment();\r\nentertainment e3=new entertainment();\r\nString startdate=Joptionpane.showInputDialog;\r\nString enddate=Joptionpane.showInputDialog;\r\nString date=Joptionpane.showInputDialog;\r\nint x=s1.getperiod(startdate,enddate)+s2.getperiod(startdate,enddate)+e1.getperiod+e2.getperiod+e3.getperiod\r\n}', 369, 34, 6, '2018-12-03 13:09:45', '2019-01-15 10:45:34'),
(78849, 86, '220', 369, 34, 2, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(78850, 88, '229', 369, 34, 2, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(78851, 89, '233', 369, 34, 0, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(78852, 90, '234', 369, 34, 2, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(78853, 91, '236', 369, 34, 1, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(78854, 92, '238', 369, 34, 0, '2018-12-03 13:09:45', '2018-12-03 13:09:45'),
(79231, 85, 'package ask;\r\nimport java.util.*;\r\npublic class A trip\r\n{\r\nprotected String name;\r\nprotected String place;\r\npublic A trip(){}\r\npublic A trip(String name,String place) \r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic class scientific extends A trip\r\n{\r\nprotected Date start date;\r\nprotected Date end date;\r\npublic scientific(){}\r\npublic scientific(String name,String place,Date start date,Date end date)\r\n{\r\nSuper(name,place);\r\nthis. start date=start date;\r\nthis.end date=end date;\r\n}\r\n}\r\npublic class entertainment extends A trip()\r\n{\r\nprotected Date date;\r\npublic  entertainment(){}\r\npublic  entertainment(String name,String place,Date date)\r\n{\r\nSuper(name,place);\r\nthis.date=date;\r\n}\r\n}\r\n}\r\npublic class project{\r\npublic static void main()\r\n{\r\nScanner s =new Scanner (System.in);\r\nString name;\r\nString place;\r\nname=s.next();\r\nplace=s.next();\r\n\r\nscientific x=new scientific(name,place,20/3/2018,25/3/2018);\r\nscientific y=new scientific(name,place,16/5/2018,5/6/2018);\r\nentertainment a=new entertainment(name,place,4/1/2018);\r\nentertainment b=new entertainment(name,place,20/2/2018);\r\nentertainment c=new entertainment(name,place,6/3/2018);\r\n}\r\n\r\n\r\n\r\n}', 301, 34, 7, '2018-12-03 13:11:15', '2019-01-15 10:47:24'),
(79232, 86, '220', 301, 34, 2, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79233, 88, '229', 301, 34, 2, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79234, 89, '230', 301, 34, 0, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79235, 90, '234', 301, 34, 2, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79236, 91, '236', 301, 34, 1, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79237, 92, '240', 301, 34, 0, '2018-12-03 13:11:15', '2018-12-03 13:11:16'),
(79338, 85, 'package exam;\r\nimport java.util.*;\r\npublic class trip{\r\nprivate String name;\r\nprivate String place;\r\npublic trip(){}\r\npublic trip(String name,String place){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic void setName(String name){\r\nthis.name=name;\r\n}\r\npublic String getName(){\r\nreturn name;\r\n}\r\npublic void setPlace(String place){\r\nthis.place=place;\r\n}\r\npublic String getPlace(){\r\nreturn place;\r\n}\r\n}\r\n.....................................................................\r\npublic class scientfictrip extends trip{\r\nprotected String startdate;\r\nprotected String enddate;\r\npublic scientfictrip(){}\r\npublic scientfictrip(String startdate,String enddate){\r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\n}\r\npublic scientfictrip(String startdate,String enddate,String name,String place){\r\nsuper(name,place);\r\n}\r\n}\r\n.......................................................................\r\npublic class entertainmenttrip extends trip{\r\nprotected int num_of_date;\r\nprotected String date;\r\npublic entertainmenttrip(){}\r\npublic entertainmenttrip(int num_of_date,String date){\r\nthis.date=date;\r\nnum_of_date=1;\r\n}\r\npublic entertainmenttrip(int num_of_date,String date,String name,String place){\r\nsuper(name,place);\r\n}\r\n}', 371, 34, 5, '2018-12-03 13:11:43', '2019-01-15 10:48:38'),
(79339, 86, '220', 371, 34, 2, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79340, 88, '227', 371, 34, 0, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79341, 89, '233', 371, 34, 0, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79342, 90, '234', 371, 34, 2, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79343, 91, '236', 371, 34, 1, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79344, 92, '240', 371, 34, 0, '2018-12-03 13:11:43', '2018-12-03 13:11:43'),
(79762, 85, 'public class sctrip1{\r\n\r\n\r\n\r\n\r\n}', 335, 34, 0, '2018-12-03 13:13:26', '2019-01-15 10:49:13'),
(79763, 86, '218', 335, 34, 0, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(79764, 88, '227', 335, 34, 0, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(79766, 89, '233', 335, 34, 0, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(79768, 90, '234', 335, 34, 2, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(79770, 91, '236', 335, 34, 1, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(79771, 92, '241', 335, 34, 2, '2018-12-03 13:13:26', '2018-12-03 13:13:26'),
(80011, 85, 'public class organizes some trips {\r\n             \r\n             public  static void main(string[] args){\r\n              \r\n\r\n\r\n\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 309, 34, 0, '2018-12-03 13:15:13', '2019-01-15 10:49:37'),
(80012, 86, '218', 309, 34, 0, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80013, 88, '229', 309, 34, 2, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80014, 89, '230', 309, 34, 0, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80015, 90, '234', 309, 34, 2, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80016, 91, '236', 309, 34, 1, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80018, 92, '241', 309, 34, 2, '2018-12-03 13:15:13', '2018-12-03 13:15:14'),
(80503, 85, 'puplic class; {\r\n\r\n    puplic static void main(string[] args){\r\n     \r\n          strung name , place;\r\n\r\n          scanner s=new scanner (system.in)\r\n   \r\n              new= s.nextin() +nextln();\r\n               \r\n              place=', 316, 34, 0, '2018-12-03 13:18:17', '2019-01-15 10:50:00'),
(80504, 86, '218', 316, 34, 0, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80505, 88, '229', 316, 34, 2, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80506, 89, '230', 316, 34, 0, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80507, 90, '234', 316, 34, 2, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80508, 91, '236', 316, 34, 1, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80509, 92, '241', 316, 34, 2, '2018-12-03 13:18:17', '2018-12-03 13:18:17'),
(80779, 85, 'public class Faculty of computers and Information()\r\n{\r\nprivate String year;\r\n\r\n} \r\n public class Trip extends Faculty of computers and Information()\r\n{\r\nprivate String name;\r\nprivate String place;\r\n} \r\n public class scientific extends Trip ()\r\n{\r\nprivate String  start date;\r\nprivate String end date;\r\n}  \r\n   public class  entertainment extends Trip ()\r\n{\r\npublic class  entertainment ()\r\n{\r\nsuper();\r\n}    \r\n public String getPeriod()\r\n{\r\n return number;\r\n}\r\n}', 357, 34, 1, '2018-12-03 13:19:42', '2019-01-15 10:50:46'),
(80780, 86, '219', 357, 34, 0, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80781, 88, '228', 357, 34, 0, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80782, 89, '233', 357, 34, 0, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80783, 90, '234', 357, 34, 2, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80784, 91, '237', 357, 34, 0, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80785, 92, '239', 357, 34, 0, '2018-12-03 13:19:42', '2018-12-03 13:19:42'),
(80859, 85, 'public class trip{\r\n          protected string name,place;\r\n          trip()\r\n           {\r\n                    name=\"Men7a\";\r\n                    place =\"Assut\";\r\n           }\r\n          trip(string s,string p)\r\n          {\r\n                   name=s;\r\n                   place=p;\r\n          }\r\n   \r\n}\r\nclass scientific \r\n{\r\n        int start_date,end_date;\r\n        scientific ()\r\n        {\r\n                   start_date=1;\r\n                   end_date=1;\r\n         }\r\n         scientific (int s,int e)\r\n         {\r\n                    start_date=s;end_date=e;\r\n          }\r\n         public int getPeriod()\r\n         {\r\n                   return end_date-start_date+1;\r\n         }\r\n}\r\nclass entertainment \r\n{\r\n           int date;\r\n           entertainment ()\r\n           {date=1;}\r\n           entertainment (int d)\r\n          {date=d;}\r\n         public int getPeriod()\r\n         {\r\n                   return 1;\r\n         }\r\n}\r\n\r\n\r\n\r\nimport java.util.*;\r\npublic static void main(String[] args) {\r\n           Scanner x=new Scanner(System.in);\r\n            trip [] t = new trip (5);\r\n            for(int i=0;i<5;i++)\r\n           {\r\n                     if(i%2==0)\r\n                             t[i]=new entertainment();\r\n                      else\r\n                                t[i]=new scientific();\r\n            }\r\n            for(int i=0;i<5;i++)\r\n           {\r\n                     if(i%2==0)\r\n                     {\r\n                              int d=nextInteger();\r\n                             t[i](d);\r\n                      }\r\n                      else\r\n                      {\r\n                              int d=nextInteger();\r\n                              int s=nextInteger();\r\n                             t[i](d,s);\r\n                      }\r\n            }\r\n            int total=0;\r\n            for(int i=0;i<5;i++)\r\n           {\r\n                   total+= t[i].getPeriod();\r\n            }\r\n            System.out.println(\"the total number of days for all trips in this list :\"+  total);\r\n}', 413, 34, 6, '2018-12-03 13:20:06', '2019-01-15 10:52:25'),
(80860, 86, '219', 413, 34, 0, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(80861, 88, '228', 413, 34, 0, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(80862, 89, '230', 413, 34, 0, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(80863, 90, '234', 413, 34, 2, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(80864, 91, '236', 413, 34, 1, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(80865, 92, '241', 413, 34, 2, '2018-12-03 13:20:06', '2018-12-03 13:20:06'),
(81024, 85, 'import java.util.Date;                                                                                                         \r\n        class  scientific trip  {\r\npublic int start_ date;\r\npublic String name;\r\npublic int end_date;\r\npublic String place;\r\nDate d=new Date();\r\nstart_date=Integer purseInt(format.(d).trim());\r\nend_date=Integer purseInt(format.(d).trim());\r\n}      \r\nclass    entertainment trip   {\r\npublic String name1;\r\npublic int date;\r\npublic String place1;\r\n}\r\npublic getperiod(){\r\nreturn( (end_date-end_date)+1)*5;\r\n}', 290, 34, 1, '2018-12-03 13:21:06', '2019-01-15 10:55:12'),
(81025, 86, '220', 290, 34, 2, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81026, 88, '227', 290, 34, 0, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81027, 89, '233', 290, 34, 0, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81028, 90, '234', 290, 34, 2, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81029, 91, '236', 290, 34, 1, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81030, 92, '240', 290, 34, 0, '2018-12-03 13:21:06', '2018-12-03 13:21:06'),
(81445, 85, 'public class trip() {\r\n                                           private String name, place;\r\n                                           private int s_date, e_date;\r\n\r\n                                            public trip(){\r\n                                             name = null; place = null; s_date=0; e_date=0;\r\n                                              }\r\n                                              public trip(String name, place, int s_date, int e_date){\r\n\r\n                                              this.name;\r\n                                              this.place;\r\n                                              this.s_date;\r\n                                              this.e_date;\r\n                                             }\r\n\r\n                               \r\n                              public static   int getPeriod (int start, it end){\r\n                                        int period = end - start;\r\n                                       return perod\r\n\r\n\r\n                                  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                pubic class Scientific extend trip(){', 350, 34, 1, '2018-12-03 13:22:21', '2019-01-15 10:55:55'),
(81446, 86, '219', 350, 34, 0, '2018-12-03 13:22:21', '2018-12-03 13:22:22'),
(81447, 88, '226', 350, 34, 0, '2018-12-03 13:22:21', '2018-12-03 13:22:22'),
(81448, 89, '232', 350, 34, 0, '2018-12-03 13:22:21', '2018-12-03 13:22:22'),
(81449, 90, '234', 350, 34, 2, '2018-12-03 13:22:21', '2018-12-03 13:22:22'),
(81450, 91, '236', 350, 34, 1, '2018-12-03 13:22:22', '2018-12-03 13:22:22'),
(81451, 92, '241', 350, 34, 2, '2018-12-03 13:22:22', '2018-12-03 13:22:22'),
(81719, 85, 'public class trips{\r\nstring name , place ;\r\n}                                                                                                                \r\npublic class scientific extends trips{\r\nint s_date , e_date;\r\n}  \r\npublic class entertainment  extends trips{\r\nint date;\r\n}   \r\nint getperiod () {\r\nreturn num;\r\n}   \r\npublic static void main (string [] args)  {\r\nscientific one = new scientific;\r\nscientific two = new scientific;\r\nentertainment t1 = new entertainment;\r\nentertainment t2 = new entertainment;\r\nentertainment t3 = new entertainment;\r\nint num;\r\n}', 326, 34, 2, '2018-12-03 13:23:18', '2019-01-15 10:56:36'),
(81720, 86, '220', 326, 34, 2, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81721, 88, '229', 326, 34, 2, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81722, 89, '232', 326, 34, 0, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81723, 90, '234', 326, 34, 2, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81724, 91, '236', 326, 34, 1, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81725, 92, '241', 326, 34, 2, '2018-12-03 13:23:18', '2018-12-03 13:23:18'),
(81810, 85, 'public classTrip()\r\n{\r\nString name;\r\nString place;\r\npublic Trip()\r\n{\r\nprotected name=\"soliman\";\r\nprotected place=\"asuit\";\r\n\r\n\r\n\r\n}\r\npublic Trip(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n\r\n}\r\n\r\n\r\n\r\n}\r\npublic class Scientifictrip extends Trip()\r\n{\r\n\r\nprotected String sdate;\r\nprotected String edate;\r\npublic Scientifictrip()\r\n{\r\nsdate=\"12/11/2018\";\r\nedate=\"15/11/2018\";\r\n\r\n}\r\npublic Scientifictrip(String sd,string ed)\r\n{\r\nsdate=sd;\r\nedate=ed;\r\n\r\n}\r\npublic Scientifictrip(String sd,String ed,String n,String p)\r\n{\r\nsuper(n,p);\r\nsdate=sd;\r\nedate=ed;\r\n\r\n}\r\n\r\n}\r\npublic class Entertanmenttrip extends Trip()\r\n{\r\n\r\nprotected String date;\r\npublic Entertanmenttrip()\r\n{\r\ndate = \"16/11/2018\";\r\n\r\n}\r\npublic Entertanmenttrip(Stirng d)\r\n{\r\ndate = d;\r\n\r\n}\r\npublic Entertanmenttrip (Stirng d,String n,String p)\r\n{\r\nsuper(n,p);\r\ndate = d;\r\n\r\n}\r\n\r\n\r\n}', 325, 34, 5, '2018-12-03 13:23:53', '2019-01-15 10:57:49'),
(81811, 86, '220', 325, 34, 2, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(81812, 88, '227', 325, 34, 0, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(81813, 89, '232', 325, 34, 0, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(81814, 90, '234', 325, 34, 2, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(81815, 91, '236', 325, 34, 1, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(81816, 92, '239', 325, 34, 0, '2018-12-03 13:23:53', '2018-12-03 13:23:54'),
(82069, 85, 'class trip{\r\n      string name;\r\n      string place;\r\n       \r\n      public trip()\r\n{\r\n\r\n}\r\n          class scientifictrip extends trip()\r\n{\r\nint sdate;\r\nint edate;\r\nstatic int day=0;\r\npublic   scientific trip  ()\r\n{\r\nday++;\r\n}\r\npublic int getperiodic()\r\n{\r\nreturn day;\r\n}\r\n         class enterainmenttrip   extends trip()    {\r\nint date;\r\npublic enterainmenttrip ()\r\n{\r\n}\r\n}  \r\npackage main;\r\nimport java.util.Scanner;     \r\nclass main{\r\npublic static void main (String [ ] args){\r\n           int [ ]arr=new int(5);\r\nenterainmenttrip x=new enterainmenttrip() ;\r\n scientifictrip y=new scientifictrip() ;\r\nx=0;\r\ny=0;\r\nfor(int i=0;i<5;i++)\r\n{\r\nif (i%2==0)\r\n{\r\nx=x+1;\r\n}\r\nelse\r\n{\r\ny=y+1;\r\n}\r\n}\r\nSystem.out.println(x+\"number of   enterainmenttriptrips this year\");\r\nSystem.out.println(y+\"number of   scientifictrip  this year\");', 324, 34, 3, '2018-12-03 13:25:18', '2019-01-15 10:59:17'),
(82070, 86, '218', 324, 34, 0, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82071, 88, '229', 324, 34, 2, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82072, 89, '230', 324, 34, 0, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82073, 90, '234', 324, 34, 2, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82074, 91, '237', 324, 34, 0, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82075, 92, '240', 324, 34, 0, '2018-12-03 13:25:18', '2018-12-03 13:25:18'),
(82164, 85, 'public static void main(string[] args){\r\nstring name;\r\nstring place;\r\nstring date;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 286, 34, 0, '2018-12-03 13:26:18', '2019-01-15 10:59:31'),
(82165, 86, '218', 286, 34, 0, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82166, 88, '228', 286, 34, 0, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82167, 89, '233', 286, 34, 0, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82168, 90, '234', 286, 34, 2, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82169, 91, '237', 286, 34, 0, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82170, 92, '240', 286, 34, 0, '2018-12-03 13:26:18', '2018-12-03 13:26:19'),
(82446, 85, 'public class trip();\r\n{\r\nstring name ;\r\nstring place;\r\nint day;\r\n}\r\ntrip scientific ();\r\n{\r\ndouble SD , ED;\r\n}\r\ntrip entertainment();\r\n{\r\ndouble d;\r\nd.range=1;\r\n}\r\npublic static void main(String[] args) {\r\n\r\ntrip scientific one=new trip();\r\ntrip scientific two=new trip();\r\n\r\ntrip entertainment one=new trip();\r\ntrip entertainment two=new trip();\r\ntrip entertainment three=new trip();\r\n\r\n\r\nSystem.out.print(\"the number of  scientific trips =\"+ scientific one.trip+ scientific two.trip);\r\nSystem.out.print(\"the number of  entertainment  trips =\"+  entertainment one.trip+  entertainment two.trip +entertainment three.trip);\r\n\r\n\r\n}\r\n\r\nint get period (n);\r\n{\r\nn.day=ED-SD\r\n}', 340, 34, 1, '2018-12-03 13:27:55', '2019-01-15 11:00:18'),
(82447, 86, '220', 340, 34, 2, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82448, 88, '227', 340, 34, 0, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82449, 89, '233', 340, 34, 0, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82450, 90, '234', 340, 34, 2, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82451, 91, '236', 340, 34, 1, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82452, 92, '241', 340, 34, 2, '2018-12-03 13:27:55', '2018-12-03 13:27:55'),
(82684, 85, 'trip()\r\n{\r\nString name ;\r\nString place ;\r\n}              \r\nscientific trip extends trip ()\r\n{\r\nDate start ;\r\nDate end;\r\nString name;\r\nString place;\r\n}\r\nentertainment trip extends trip()\r\n{\r\nDate date;\r\nString name;\r\nString place;\r\n}\r\npublic static int  getperiod()\r\n{\r\nreturn \"the number of days for trip is \" + D ;\r\n}\r\nPublic static void main (String[] args)\r\n{\r\n\r\n\r\n\r\n}', 251, 34, 1, '2018-12-03 13:28:48', '2019-01-15 11:00:54'),
(82685, 86, '220', 251, 34, 2, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82686, 88, '228', 251, 34, 0, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82687, 89, '231', 251, 34, 2, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82688, 90, '234', 251, 34, 2, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82689, 91, '237', 251, 34, 0, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82690, 92, '241', 251, 34, 2, '2018-12-03 13:28:48', '2018-12-03 13:28:48'),
(82705, 85, 'packege fci                  \r\n   import java .util.date ;\r\n\r\nimport java.util. * ;                                                                                             \r\n                                                    public class trips {\r\nstring name ;\r\nstring place ; \r\n}\r\npublic trips ()\r\n{\r\nname = \"ahmed\" ; \r\nplace = \"aswan\" ; \r\n}\r\npublic trips (string n , string p){\r\nname = n ; \r\nplace = p ; \r\n}\r\npublic void set name (string a) \r\n{\r\nname = a ; \r\n}\r\npublic void set place (string z) \r\n{\r\nplace = z ; \r\n}\r\npublic int get name ()\r\n{\r\nreturn name ; \r\n} \r\npublic int get name ()\r\n{\r\npublic class scientific trip extends trips {\r\nint start date ;\r\nint end date  ; \r\n}\r\npublic scientific trip () \r\n{\r\n  start date = new date () ; \r\n  end date = new date () ; \r\n} \r\npublic scientific trip (int s , int e )\r\n{\r\nstart date = s ; \r\nend date = e ; \r\n} \r\n public scientific trip (int w , int h, string f , string v  )\r\n{\r\nname = f ;\r\nplace = v ; \r\nstart date = w ; \r\nend date = h ; \r\n}\r\npublic class entertainment extends trips {\r\n}\r\npublic class organize {\r\npublic static void main (string [ ] args ) \r\nScanner input = new scanner (System.in)  ;\r\nSystem .out .print (\"choose the types of trip \\ n1_ scientific \\ n2 _ entertainment \")\r\nif (x==1 && s>0 )\r\ns-- ; \r\nstring n =input.next line () ; \r\nscientific o1 = new scientific () ; \r\no1.set name () ;  \r\nentertainment o2 = new entertainment () ; \r\no2 . set name () ;', 230, 34, 4, '2018-12-03 13:28:57', '2019-01-15 11:02:10'),
(82706, 86, '218', 230, 34, 0, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82707, 88, '226', 230, 34, 0, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82708, 89, '232', 230, 34, 0, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82709, 90, '234', 230, 34, 2, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82710, 91, '236', 230, 34, 1, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82711, 92, '241', 230, 34, 2, '2018-12-03 13:28:57', '2018-12-03 13:28:57'),
(82722, 85, 'package Ex1;\r\nimport java.util.*;\r\npublic class Ex1\r\n{\r\nclass trip \r\n{\r\n     protected String name ;\r\n     protected String place;\r\n         \r\n     trip()\r\n       {}\r\n\r\n trip(String n,String p)\r\n  {\r\n      name =n ;\r\n     place = p ;\r\n   }\r\n\r\n }\r\nclass scientifictrip extends trip\r\n  {\r\n      private Date  sdate;\r\n       private Date  edate;\r\n\r\n  scientifictrip ()\r\n    {}\r\n\r\n     scientifictrip (String n,String p,string s,string e)\r\n    {\r\n               super(n,s);\r\n               sdate =new date(); \r\n               sdate= Integer .parseInt(s);\r\n  \r\n                 edate =new date(); \r\n                 edate= Integer .parseInt(e);  \r\n        \r\n            abstract double getPeriod()\r\n        {\r\n                    double total1=0;\r\n                double numofday;\r\n              String s= this . edate -this sdate; \r\n             string [] arr = s.split(\"/\");\r\n         double numofday = Double.parseDouble(arr[0].trim);\r\n                  total1+=numofday;\r\n              return numofday;\r\n         }             \r\n\r\n    }\r\n\r\n\r\nclass entertainmenttrip extends trip\r\n  {\r\n      private Date  sdate=0;\r\n        private Date  edate;\r\n\r\nentertainmenttrip ()\r\n    {}\r\n\r\n   entertainmenttrip (String n,String p,string e)\r\n    {\r\n               super(n,s);\r\n               edate =new date(); \r\n               edate= Integer .parseInt(e);\r\n    \r\n    }\r\n\r\n               abstract double getPeriod()\r\n        {    \r\n\r\n                double total2=0;\r\n                double numofday;\r\n              String s= this . edate -this sdate; \r\n             string [] arr = s.split(\"/\");\r\n         double numofday = Double.parseDouble(arr[0].trim);\r\n                 total2+=numofday;\r\n              return numofday;\r\n         }             \r\n\r\n  }\r\n\r\npublic static void main(String[] args) \r\n{\r\n    trip [] arr = new trip [5];  \r\n  \r\n         for (int i=0;i<arr.length;i++)                          \r\n         {    \r\n                 if (i%2==0)\r\n                  {\r\n                               arr[i]=new scintifictrip();\r\n                  }  \r\n                   \r\n               else \r\n                {\r\n                        arr[i]=new entertainmenttrip();\r\n                 }  \r\n\r\n                       double sum=0;\r\n        sum =total1+total2;\r\n    System.out.println(\"the sum of days =\"+sum); \r\n\r\n         }                       \r\n                            \r\n}\r\n\r\n\r\n\r\n                                                                                                                \r\n}', 243, 34, 7, '2018-12-03 13:29:00', '2019-01-15 11:05:38'),
(82723, 86, '219', 243, 34, 0, '2018-12-03 13:29:00', '2018-12-03 13:29:01'),
(82724, 88, '229', 243, 34, 2, '2018-12-03 13:29:00', '2018-12-03 13:29:01'),
(82725, 89, '230', 243, 34, 0, '2018-12-03 13:29:00', '2018-12-03 13:29:01'),
(82726, 90, '234', 243, 34, 2, '2018-12-03 13:29:00', '2018-12-03 13:29:01'),
(82727, 91, '236', 243, 34, 1, '2018-12-03 13:29:00', '2018-12-03 13:29:01'),
(82728, 92, '240', 243, 34, 0, '2018-12-03 13:29:00', '2018-12-03 13:29:01');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(82845, 85, 'class trip {\r\nString name;\r\nString place;\r\ntrip(){\r\nname =\"null\";\r\nplace=\"null\";\r\n}\r\ntrip(String name,String place){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n}\r\n______________________________________________________________\r\nclass date{\r\nint day;\r\nint month;\r\nint year;\r\npublic date(int  day,int  month,int year){\r\nthis.day=day;\r\nthis.month=month;\r\nthis.year=year;\r\n\r\n}\r\n\r\n}\r\n____________________________________________________________________________\r\nclass Thescientifictrip extends trip{\r\ndate start;\r\ndate end ;\r\nvoid enterstartdate(){\r\nScanner input =new Scanner(System.in);\r\nstart.day=input.nextInt();\r\nstart.month=input.nextInt();\r\nstart.year=input.nextInt();\r\n}\r\nvoid enterenddate(){\r\nScanner input =new Scanner(System.in);\r\nend.day=input.nextInt();\r\nend.month=input.nextInt();\r\nend.year=input.nextInt();\r\n}\r\npublic int getperiod(){\r\nint i=0;\r\ni=end.day-start.day\r\nreturn i;\r\n}\r\n}\r\n______________________________________________________________                                                                                              \r\n class', 310, 34, 4, '2018-12-03 13:29:36', '2019-01-22 15:45:59'),
(82846, 86, '220', 310, 34, 2, '2018-12-03 13:29:36', '2019-01-22 15:35:29'),
(82847, 88, '227', 310, 34, 0, '2018-12-03 13:29:36', '2019-01-22 15:35:29'),
(82848, 89, '231', 310, 34, 2, '2018-12-03 13:29:36', '2019-01-22 15:35:29'),
(82849, 90, '234', 310, 34, 2, '2018-12-03 13:29:36', '2019-01-22 15:35:30'),
(82851, 91, '237', 310, 34, 0, '2018-12-03 13:29:36', '2019-01-22 15:35:30'),
(82853, 92, '240', 310, 34, 0, '2018-12-03 13:29:36', '2019-01-22 15:35:30'),
(83013, 85, 'public class Trip{\r\n                                                                        String name;\r\n                                                                         String place;\r\n                                                 public Trip(String n,String p){\r\n                                                                           name=n;      place=p;};      \r\n                                             class scientificTrip extends Trip{\r\n                                                      String name;\r\n                                                      String place;\r\n                                                      Date stratDate;\r\n                                                     Date endDate;\r\n                                                public scientificTrip(String n,String p,Date sd,Date ed){\r\n                                                                            name=n;   place=p;   startDate=st;     endDate=en; }\r\n                                    class entertainmentTrip extends Trip{\r\n                                                               String name;\r\n                                                               String place;\r\n                                                              final Date   date=1;\r\n                                                           \r\n}                                                \r\n}\r\nimport java.Util.*;\r\npublic Static void main(String []args){ \r\nscientificTrip t1=new scientificTrip();\r\nscientificTrip t2=new scientificTrip();\r\nentertainmentTrip et1=new entertainmentTrip();\r\nentertainmentTrip et2=new entertainmentTrip();\r\nentertainmentTrip et3=new entertainmentTrip();\r\n}\r\n}', 351, 34, 5, '2018-12-03 13:30:00', '2019-01-15 11:07:40'),
(83014, 86, '220', 351, 34, 2, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83015, 88, '228', 351, 34, 0, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83016, 89, '233', 351, 34, 0, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83017, 90, '235', 351, 34, 0, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83018, 91, '236', 351, 34, 1, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83019, 92, '239', 351, 34, 0, '2018-12-03 13:30:00', '2018-12-03 13:30:00'),
(83093, 85, 'public class trip {\r\n   public string name;\r\n   public  string place;\r\n\r\npublic  trip(string x;string y) \r\n{\r\n  this.name=x;\r\n  this.place=y;\r\n}\r\n  }\r\n  \r\n public class  scientific   extends  trip{\r\n    int   stat date;\r\n   int end  date;\r\npublic  scientific(){\r\n}\r\n}          \r\n\r\n public class  entertainment  extends trip {\r\n  int  one-day;\r\nint date ;\r\npublic  entertainment(){\r\n}\r\npublic int get period(int a){\r\nthis.one-day=a;\r\nreturn a;\r\n}\r\n\r\n}                \r\n\r\npublic class java program{\r\n\r\n\r\npublic static void main(string[ ] args)\r\n{\r\nscientific ob 1=new scientific ();\r\nentertainment ob 2= new entertainment();\r\n\r\nob 2.get period(0)\r\n\r\n}\r\n\r\n}', 334, 34, 4, '2018-12-03 13:30:16', '2019-01-15 11:08:41'),
(83094, 86, '218', 334, 34, 0, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83095, 88, '227', 334, 34, 0, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83096, 89, '230', 334, 34, 0, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83097, 90, '234', 334, 34, 2, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83098, 91, '237', 334, 34, 0, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83099, 92, '241', 334, 34, 2, '2018-12-03 13:30:16', '2018-12-03 13:30:16'),
(83205, 85, 'class Trip{\r\n	protected String name;\r\n	protected String place;\r\n	protected int numberOfDays;\r\n	public Trip(){\r\n		this(\"defaultName\",\"defaultPlace\",1);\r\n	}\r\n	public Trip(String name,String place,int numberOfDays){\r\n		this.name = name;\r\n		this.place = place;\r\n		this.numberOfDays = numberOfDays;\r\n	}\r\n	public String getName(){\r\n		return name;\r\n	}\r\n 	public String getPlace(){\r\n		return place;\r\n	}\r\n	public void setName(String name){\r\n		this.name = name;\r\n	}\r\n	public void setPlace(String place){\r\n		this.place = place;\r\n	}\r\n	public int getPeriod(){\r\n		return numberOfDays;\r\n	}\r\n\r\n	public String toString(){return \"Trip Class\";}\r\n}\r\nclass ScienteficTrip extends Trip{\r\n	private String startDate;\r\n	private String endDate;\r\n	\r\n	public ScienteficTrip(){\r\n		super();\r\n		startDate = \"1/1/2018\";\r\n		endDate = \"2/1/2018\";			\r\n	}\r\n	public ScienteficTrip(String startDate,String endDate){\r\n		super();\r\n		this.startDate = startDate;\r\n		this.endDate = endDate;\r\n	}\r\n	public ScienteficTrip(String name,String place,String startDate,String endDate,int numberOfDays){\r\n		super(name,place,numberOfDays);\r\n		this.startDate = startDate;\r\n		this.endDate = endDate; \r\n	}\r\n\r\n	public void setSDate(String s){\r\n		this.startDate = s;\r\n	}\r\n	public void  setEDate(String e){\r\n		this.endDate = e;	\r\n	}\r\n	public String getE(){\r\n		return endDate;\r\n	}\r\n	public String getS(){return startDate;}\r\n	\r\n	public int getPeriod(){\r\n		return numberOfDays;\r\n	}\r\n	public String toString(){return \"ScienteficTrip\";}\r\n}\r\nclass EntertainmentTrip extends Trip{\r\n	private String date;\r\n	public EntertainmentTrip(){\r\n		super();\r\n		date = \"1/1/2018\";\r\n		\r\n	}\r\n	public EntertainmentTrip(String date){\r\n		super();\r\n		this.date = date;\r\n	}\r\n	public EntertainmentTrip(String name,String place,String startDate,String endDate){\r\n		super(name,place,1);// one bacause it\'s a one day trip\r\n		this.startDate = startDate;\r\n		this.endDate = endDate; \r\n	}	\r\n	public void setDate(String date){\r\n		this.date = date;\r\n	}\r\n\r\n	public String getDate(){return date;}\r\n	\r\n	public int getPeriod(){\r\n		return numberOfDays;\r\n	}\r\n	public String toString(){return \"EntertainmentTrip\";}\r\n}\r\npublic class Main{\r\n	public static void main(String[] args){\r\n		int totalDays;\r\n		Trip[5] totalTrips ;\r\n		ScienteficTrip totalTrips[0] = new ScienteficTrip ();\r\n		ScienteficTrip totalTrips[1] = new ScienteficTrip ();\r\n		EntertainmentTrip totalTrips[2] = new EntertainmentTrip ();\r\n		EntertainmentTrip totalTrips[3] = new EntertainmentTrip ();\r\n		EntertainmentTrip totalTrips[4] = new EntertainmentTrip ();\r\n		//to calculate total number of days for all trips\r\n		for(int i = 0;i < totalTrips.length;i++){\r\n			totalDays += totalTrips[i].getPeriod();\r\n		}\r\n		\r\n	}\r\n}', 397, 34, 7, '2018-12-03 13:30:47', '2019-01-15 11:10:42'),
(83206, 86, '220', 397, 34, 2, '2018-12-03 13:30:47', '2018-12-03 13:30:48'),
(83207, 88, '229', 397, 34, 2, '2018-12-03 13:30:47', '2018-12-03 13:30:48'),
(83208, 89, '231', 397, 34, 2, '2018-12-03 13:30:47', '2018-12-03 13:30:48'),
(83209, 90, '234', 397, 34, 2, '2018-12-03 13:30:48', '2018-12-03 13:30:48'),
(83210, 91, '236', 397, 34, 1, '2018-12-03 13:30:48', '2018-12-03 13:30:48'),
(83211, 92, '241', 397, 34, 2, '2018-12-03 13:30:48', '2018-12-03 13:30:48'),
(83304, 85, 'public class trip{\r\nString name;\r\nString place;\r\n\r\npublic trip(){\r\n\r\n\r\n}\r\npublic trip(String n ,String p){\r\nname =n;\r\nplace =p;\r\n}\r\npublic class scientific extends trip{\r\nDate start_date ;\r\nDate end_date ;\r\nstatic int n_trips;\r\n\r\npublic scientific(){\r\nDate s=new Date;\r\nDate e =new Date;\r\nname =\"trip\";\r\nplace =\"assuit\";\r\nn_of_trips++;\r\n\r\n\r\n\r\n}\r\npublic scientific(String n,String p,Date s,Date e){\r\nsuper(n,p);\r\nstart_date=s;\r\nend_date= e;\r\n}\r\npublic class intertainment extends trip{\r\nDate date ;\r\n\r\npublic intertainment (){\r\n\r\n}\r\npublic intertainment (String n,String p,Date d){\r\nsuper(n,p);\r\ndate=d;\r\n\r\n}\r\npublic int getPeriod(Date s,Date e){\r\nreturn s.day+e.day+1;\r\n\r\n}\r\nimport java.util.Scanner ;\r\npublic static void main(String[] args){\r\ntrip t =new trip();\r\nScientific s =new Scientific();\r\n\r\n\r\n}', 364, 34, 5, '2018-12-03 13:31:16', '2019-01-15 11:11:24'),
(83305, 86, '218', 364, 34, 0, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83306, 88, '227', 364, 34, 0, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83307, 89, '232', 364, 34, 0, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83308, 90, '234', 364, 34, 2, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83309, 91, '236', 364, 34, 1, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83310, 92, '241', 364, 34, 2, '2018-12-03 13:31:16', '2018-12-03 13:31:17'),
(83479, 85, 'class trip()\r\nprotected String name;\r\nprotected String place;\r\npublic trip()\r\n{\r\n     this (\"default name\",default place\");\r\n}\r\npublic trip(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic String setplace()\r\n{\r\nreturn place;\r\n}\r\npublic void setname(String name)\r\n{\r\n\r\n}', 321, 34, 2, '2018-12-03 13:32:31', '2019-01-15 11:12:35'),
(83480, 86, '220', 321, 34, 2, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83481, 88, '229', 321, 34, 2, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83482, 89, '231', 321, 34, 2, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83483, 90, '234', 321, 34, 2, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83484, 91, '236', 321, 34, 1, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83485, 92, '239', 321, 34, 0, '2018-12-03 13:32:31', '2018-12-03 13:32:32'),
(83622, 85, 'public class trip(){\r\nString name;\r\nString place;\r\npublic trip()\r\n{\r\n}\r\npublic trip(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic int getperiod()\r\n{\r\nreturn num(int numberdays)+num2(date); \r\n}\r\n}\r\npublic class scientifictrip extends trip(){\r\nint startdate;\r\nint enddate;\r\npublic scientifictrip(String name,String place,int startdate,int enddate){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\nint numberdays=enddate-startdate;\r\n}\r\npublic int num(int numberdays)\r\n{\r\nreturn numberdays;\r\n}\r\n\r\n\r\n}\r\npublic class entertainmenttrip extends trip(){\r\nint date;\r\npublic entertainmenttrip(String name,String place,int date){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.date=date;\r\n}\r\npublic int num2(int date)\r\n{\r\nreturn this.date; \r\n}\r\n}\r\npublic Static void main(String [] args)\r\n{\r\ntrip a=new trip();\r\nSystem.out.println(a. getperiod());\r\n\r\n}', 297, 34, 5, '2018-12-03 13:33:18', '2019-01-15 11:13:54'),
(83623, 86, '220', 297, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83624, 88, '227', 297, 34, 0, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83625, 89, '233', 297, 34, 0, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83626, 90, '234', 297, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83627, 91, '236', 297, 34, 1, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83628, 92, '241', 297, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83636, 85, 'import java.util.*;\r\n\r\npublic class trip {\r\nprotected string name;\r\nprotected string place;\r\npublic trip()\r\n{\r\nname = \"null\";\r\nplace = \"null\";\r\n}                          \r\npublic trip (string x , string y)\r\n{\r\nname = x ;\r\nplace = y;\r\n}\r\npublic int getperiod ();\r\n{\r\nreturn -1;\r\n}\r\n}\r\n//_________________________________________________________________________\r\npublic class entertainment extends trip\r\n{\r\nprivate string date;\r\npublic entertainment()\r\n{\r\ndate = \"null\";\r\n}\r\npublic entertainment(string n , string p , string d)\r\n{\r\nsuper(n , p);\r\ndate = d;\r\n}\r\npublic int getperiod()\r\n{\r\nreturn 1;\r\n}\r\n}\r\n//_____________________________________________________________________\r\nclass scientifictrip extends trip{\r\nint d1 , d2  , m1  ,  m2  ,  y1  ,  y2 ;\r\npublic int getperiod()\r\n{\r\nstring start , end;\r\nstart = this.d1+(this.m1*30)+(this.y1*365);\r\nend = this.d2+(this.m2*30)+(this.y2*365);\r\nreturn end-start;\r\n} \r\n}\r\n//______________________________________________________________\r\npublic static void main (string[] args)\r\n{\r\nscientifictrip [] x = new scientifictrip [2];\r\neentertainment [] y = new entertainment [3];\r\nfor (int i = 0 ; i <=arr.lenght;i++)\r\nx[i]=new scientifictrip ();\r\nfor (int i = 0 ; i <=arr.lenght;i++)\r\ny[i]=new entertainment ();\r\n}', 342, 34, 7, '2018-12-03 13:33:18', '2019-01-15 11:15:11'),
(83637, 86, '220', 342, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83638, 88, '229', 342, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:18'),
(83639, 89, '231', 342, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:19'),
(83640, 90, '234', 342, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:19'),
(83641, 91, '236', 342, 34, 1, '2018-12-03 13:33:18', '2018-12-03 13:33:19'),
(83642, 92, '241', 342, 34, 2, '2018-12-03 13:33:18', '2018-12-03 13:33:19'),
(83664, 85, 'public class trips\r\n{\r\nprotected String name;\r\nprotected  String place;\r\nprotected int num_trips;\r\ntrips(int num_trips)\r\n{\r\nthis.num_trips=num_trips;\r\n}\r\npublic int get_num_trips()\r\n{\r\nreturn num_trips;\r\n}\r\n\r\n}    \r\npublic class scientific_trip extends  trips\r\n{\r\nprivate Date start_date;\r\nprivate Date end_date;\r\npublic scientific_trip (Date start_date,Date end_date )\r\n{\r\nthis.start_date=new Date;\r\nthis.end_date=new Date;\r\n}\r\npublic int getPeriod ()\r\n{\r\nreturn (start_date-end_date);\r\n}\r\n}\r\n\r\n\r\npublic class entertainment _trip extends  trips\r\n{\r\nprivate Date date;\r\npublic entertainment _trip(Date date)\r\n{\r\n date=new Date();\r\n\r\n}\r\npublic int getPeriod ()\r\n{\r\nreturn (3);\r\n}\r\n\r\n}\r\n\r\npublic class test{\r\npublic static void main(String [] args)\r\n{\r\n \r\ntrips t1=new trips(5);\r\nscientific_trip  t2=new scientific_trip ();\r\nentertainment _trip t3=new entertainment _trip();\r\nSystem.out.println(\"the total number of days for all trips = \"+t2.getPeriod() +t3.getPeriod ());\r\nSystem.out.println(\"number of trips for scientific trip and entertainment trip = \"+t1.get_num_trips);\r\n\r\n}\r\n\r\n}', 366, 34, 8, '2018-12-03 13:33:25', '2019-01-15 11:19:32'),
(83665, 86, '220', 366, 34, 2, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83666, 88, '227', 366, 34, 0, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83667, 89, '233', 366, 34, 0, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83668, 90, '234', 366, 34, 2, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83669, 91, '236', 366, 34, 1, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83670, 92, '240', 366, 34, 0, '2018-12-03 13:33:25', '2018-12-03 13:33:25'),
(83684, 85, 'class trip{      \r\n                                  \r\n                                                        private int b;\r\n                                                        private int e;\r\n                                                         private string nametrip;\r\n                                                          private string place;\r\n                                                                                public  trip()                                  \r\n                                                    {\r\n                                                           b=1;\r\n                                                             e=1;\r\n                                                            nametrip= \"not fond\";\r\n                                                        place=\"not fond\"\r\n                                                    }\r\n                                                                public  trip(int b, int e,string nametrip, string place)                                  \r\n                                                    {\r\n                                                       this .b= b;\r\n                                                       this .e=e;\r\n                                                          this .nametrip=nametrip;\r\n                                                            this .place=place;\r\n                                                       \r\n                                                    }\r\n\r\n                                                public setb(int x)\r\n                                            {\r\n                                                  b=x.b;\r\n                                            }\r\n                                       public sete(int y)\r\n                                            {\r\n                                                  e=y.e;\r\n                                            }\r\n                                     public setnametrip(strang j)\r\n                                            {\r\n                                                  nametrip=j.nametrip;\r\n                                            }\r\n                                                  public setplace(strang k)\r\n                                            {\r\n                                                  place=k.place;\r\n                                            }\r\n                                   public getnumberofday(int l)\r\n                                    {\r\n                                        trip numofday=new trip();\r\n                                          numofday=l.e-l.b;           \r\n                                     }', 338, 34, 2, '2018-12-03 13:33:29', '2019-01-15 11:21:01'),
(83685, 86, '220', 338, 34, 2, '2018-12-03 13:33:29', '2018-12-03 13:33:29'),
(83686, 88, '229', 338, 34, 2, '2018-12-03 13:33:29', '2018-12-03 13:33:29'),
(83687, 89, '230', 338, 34, 0, '2018-12-03 13:33:29', '2018-12-03 13:33:29'),
(83688, 90, '234', 338, 34, 2, '2018-12-03 13:33:29', '2018-12-03 13:33:30'),
(83689, 91, '236', 338, 34, 1, '2018-12-03 13:33:29', '2018-12-03 13:33:30'),
(83690, 92, '239', 338, 34, 0, '2018-12-03 13:33:29', '2018-12-03 13:33:30'),
(83701, 85, 'package Faculty;\r\n            import java.util.scanner;\r\npublic class Main{\r\n public static void main(string[]args){\r\nscanner inp= new scanner(Systen.in);\r\nstring name= inp.nextline();\r\nscientific trip a1=new scientific trip();\r\nscientific trip a1=new scientific trip();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\npublic class trips{\r\nprivate string name;\r\nprivate string place;\r\ntrips(){\r\n)\r\ntrips(string name, string place){\r\nif(name.Length>0)\r\nthis name=name;\r\nif(place.Length>0)\r\nthis place=place;\r\n}\r\n}\r\npublic void set name(string name){\r\nif(name.Length>0)\r\nthis name=name;\r\n}\r\npublic void set place(string place){\r\nif(place.Length>0)\r\nthis place=place;\r\n}\r\npublic string get  name(){\r\nreturn name;\r\n}\r\npublic string get  place(){\r\nreturn place;\r\n}\r\n}', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:46:47'),
(83703, 86, '220', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83705, 88, '229', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83706, 89, '231', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83707, 90, '234', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83708, 91, '236', 308, 34, 1, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83709, 92, '241', 308, 34, 2, '2018-12-03 13:33:32', '2019-01-22 15:35:30'),
(83764, 85, '++                                                                                                                \r\n        import java.util,Scanner;\r\npublic static void main(String[] args ){\r\nScanner input=new Scanner(System.in);\r\ntrip t=new trip()\r\ntripscient x1= new tripscient();\r\ntripscient x2= new tripscient();\r\n\r\ntripenter y1=new tripenter()\r\n;tripenter y2=new tripenter();\r\ntripenter y3=new tripenter();\r\n\r\n}        \r\n   public class  trip {\r\nstring name;\r\nstring place;\r\ntrip(){\r\nname=ttt;\r\nplace=ppp;\r\n}\r\ntrip( string name, string place ){\r\nthis name =name;\r\nthis place =place;\r\n}\r\n}   \r\npublic class tripscient extends trip{\r\nint stdate;\r\nint enddate;\r\n\r\ntripscient (){\r\nstdate=1;\r\nenddate =1;\r\n}\r\ntripscient(int stdate ,int enddate){\r\nthis stdate =stdate;\r\nthis enddate =enddate;\r\n\r\n}\r\n\r\ntripscient(int stdate ,int enddate ,string name, string place){\r\nthis name =name;\r\nthis place =place;\r\nthis stdate =stdate;\r\nthis enddate =enddate;\r\n\r\n}  \r\npublic class tripinter  extends trip{\r\nint data;\r\ntripinter(){\r\ndate=1;\r\n}\r\ntripinter(int date){\r\nthis date =date;\r\n}\r\n}   \r\npublic int  getperiod(){\r\n\r\n int long =enddate-stdate;\r\n return long;\r\n}', 379, 34, 6, '2018-12-03 13:33:45', '2019-01-15 11:22:03'),
(83765, 86, '220', 379, 34, 2, '2018-12-03 13:33:45', '2018-12-03 13:33:45'),
(83766, 88, '227', 379, 34, 0, '2018-12-03 13:33:45', '2018-12-03 13:33:45'),
(83767, 89, '233', 379, 34, 0, '2018-12-03 13:33:45', '2018-12-03 13:33:45'),
(83768, 90, '234', 379, 34, 2, '2018-12-03 13:33:45', '2018-12-03 13:33:45'),
(83769, 91, '236', 379, 34, 1, '2018-12-03 13:33:45', '2018-12-03 13:33:45'),
(83770, 92, '241', 379, 34, 2, '2018-12-03 13:33:45', '2018-12-03 13:33:46'),
(83778, 85, 'public class trip ()\r\n{\r\n    protected String name;\r\n    protected String place;\r\n       public void setname (String name)\r\n{\r\n      this.name=name; \r\n}\r\n   public void setplace  (String place)\r\n{\r\n      this.place=place; \r\n}\r\n   public String getname ()\r\n{ \r\n      return name;\r\n}\r\n   public String getplace ()\r\n{ \r\n      return place;\r\n}\r\n}\r\npublic class scientific_trip extends trip \r\n{\r\n   private Date s_date ;\r\n   private Date e_date;\r\n   public void sets_date (date s_date)\r\n  {\r\n      this.s_date=s_date; \r\n  }\r\n   public void sete_date (date e_date)\r\n{ \r\n      this.e_date=e_date;\r\n}\r\n   public date gets_date ()\r\n{ \r\n      return s_date;\r\n}\r\n   public date gets_date ()\r\n{ \r\n   return e_date;\r\n}\r\n   public int getperiod (int num)\r\n{\r\n   Date = e_date - s_date\r\n    num = date ; \r\n}\r\n}\r\npublic class entertainments_trip extends trip\r\n{\r\n     private date date;\r\n  public viod setdate (date date)\r\n{\r\n    this.date=date;\r\n}\r\npublic date getdate ()\r\n{\r\n     return date;\r\n}\r\npublic static void main (String [] args)\r\n{', 302, 34, 5, '2018-12-03 13:33:47', '2019-01-15 11:23:45'),
(83779, 86, '220', 302, 34, 2, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83780, 88, '227', 302, 34, 0, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83781, 89, '230', 302, 34, 0, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83782, 90, '234', 302, 34, 2, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83783, 91, '236', 302, 34, 1, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83784, 92, '241', 302, 34, 2, '2018-12-03 13:33:47', '2018-12-03 13:33:47'),
(83802, 85, 'public class ScientificTrip (){\r\npublic int Sday , Smonth ;\r\npublic int Eday , Emonth ;\r\npublic string name;\r\npublic string place;\r\nint d ;\r\npublic int getPeriod(){\r\n\r\nd=Eday-Sday;\r\nreturns d ; \r\n  }\r\n}                                                                                                               \r\npublic class EntertainmentTrip extends ScientificTrip(){\r\nEday=Sday+1;\r\n}\r\npublic static void main(String[] args) {\r\nScientificTrip S =new S1() ;\r\nScientificTrip S =new S2() ;\r\nEntertainmentTrip E =new E1();\r\nEntertainmentTrip E =new E2();\r\nEntertainmentTrip E =new E3();\r\n\r\nint NofD=0 ;\r\n NofD+=d;\r\nSystem.out.println(\"the num of day of total trips = \" + NofD );\r\n }', 227, 34, 2, '2018-12-03 13:33:56', '2019-01-15 11:24:29'),
(83803, 86, '220', 227, 34, 2, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83804, 88, '229', 227, 34, 2, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83805, 89, '232', 227, 34, 0, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83806, 90, '234', 227, 34, 2, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83807, 91, '237', 227, 34, 0, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83808, 92, '240', 227, 34, 0, '2018-12-03 13:33:56', '2018-12-03 13:33:56'),
(83837, 85, 'public class FCITrip\r\n{\r\nprotected int name;\r\nprotected int place;\r\n\r\npublic types()\r\n  {\r\nname=\"ahmed\";\r\nplace=\"fci\"\r\n  }\r\npuplic types(string n ,string b)\r\n  {\r\nname=n;\r\nplace=b;\r\n  }\r\npublic void print()\r\n  {\r\nsystem.out.println(\"name : \"+n+\"place : \"+  b)\r\n  }\r\n}\r\n\r\npublic class scientific extended FCITrip\r\n{\r\nprotected int sdate;\r\nprotected int edate;\r\n\r\npublic scientific()\r\n   {\r\nsdate=10;\r\nedate=15;\r\n   }\r\npublic scientific (int sdate ,int  edate )\r\n  {\r\nthis.sdate=sdate;\r\nthis.edate=edate;\r\n  }\r\npublic scientific (string n,string b,int sdate ,int edate)\r\n  {\r\n  }\r\npublic void print()\r\n  {\r\nsystem.out.println(string n , string b,int sdate, int edate)\r\n  }\r\n} \r\npublic class entertainment extended FCItrip\r\n{\r\n   int Oday;\r\npublic entertainment()\r\n  {\r\nOday=0;\r\n  }\r\npublic entertainment( int Oday,string n,string b)\r\n  {\r\n  }', 328, 34, 5, '2018-12-03 13:33:58', '2019-01-15 11:25:10'),
(83838, 86, '220', 328, 34, 2, '2018-12-03 13:33:58', '2018-12-03 13:33:58'),
(83839, 88, '229', 328, 34, 2, '2018-12-03 13:33:58', '2018-12-03 13:33:59'),
(83840, 89, '230', 328, 34, 0, '2018-12-03 13:33:58', '2018-12-03 13:33:59'),
(83841, 90, '234', 328, 34, 2, '2018-12-03 13:33:58', '2018-12-03 13:33:59'),
(83842, 91, '236', 328, 34, 1, '2018-12-03 13:33:58', '2018-12-03 13:33:59'),
(83843, 92, '241', 328, 34, 2, '2018-12-03 13:33:58', '2018-12-03 13:33:59'),
(84047, 85, 'public class trips {\r\nprotected string name ; \r\nprotected string place ;\r\npublic trips (){\r\nname =\"no name\" ;\r\nplace=\" no place\";\r\npublic trips (string t , string y)\r\nname = t ;\r\nplace = y ; \r\n}\r\npublic class scientific_trips extends trips{\r\nint start_time ;\r\nint end _ time ;\r\npublic scientific_trips()\r\nstart_time=0;\r\nend_time=0;\r\nname = \"name\";\r\nplace=\"place\";\r\n}\r\npublic scientific_trips(int start_time , int end_time , string name , string place ){\r\nstart_date=4;\r\nend_time=23;\r\nname=\"name\";\r\nplace=\"place\";\r\n}\r\npublic class enter extends trips {\r\nint start_time=0 ;\r\n} \r\npublic static int get_period(){\r\nreturn period ;\r\n}\r\n}\r\n}\r\npublic static void main (string [ ] args)\r\n{\r\n\r\n}', 365, 34, 4, '2018-12-03 13:34:23', '2019-01-15 11:26:00'),
(84048, 86, '218', 365, 34, 0, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84049, 88, '226', 365, 34, 0, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84050, 89, '233', 365, 34, 0, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84051, 90, '234', 365, 34, 2, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84052, 91, '237', 365, 34, 0, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84053, 92, '239', 365, 34, 0, '2018-12-03 13:34:23', '2018-12-03 13:34:23'),
(84309, 85, 'public class asd{\r\n    public static void main(String[] args) {\r\n        trips[] arr = new trips[5] // 2 + 3 trips\r\n        int totalNumOfDays = 0;\r\n        \r\n        //initializing the specific objects;\r\n        arr[0] = new sTrip(\"sTrip1\", \"Place1\", 10, 20);  // (20-10) is 10 days;\r\n        arr[1] = new sTrip(\"sTrip2\", \"Place2\", 11, 13);  // (13-11) is 2 days;\r\n        arr[2] = new eTrip(\"sTrip2\", \"Place2\", 23);  //  entertainment trip is a one-day trip (1 days)\r\n        arr[3] = new eTrip(\"sTrip2\", \"Place2\", 15);  //  entertainment trip is a one-day trip (1 days)\r\n        arr[4] = new eTrip(\"sTrip2\", \"Place2\", 31);  //  entertainment trip is a one-day trip (1 days)\r\n        \r\n        for(int i = 0 ; i < arr.length ; i++){\r\n            totalNumOfDays = totalNumOfDays + (arr[i].getPeriod);\r\n        }\r\n\r\n        System.out.println(\"The total number of days for all trips in this list is \" + totalNumOfDays);\r\n        // it should output 15 days (10 + 2 + 1 + 1 + 1);\r\n\r\n    }\r\n}\r\n\r\n// ___________________________________________________________________\r\n\r\nclass trips{\r\n    String name;\r\n    String place;\r\n    \r\n//no-arg constructor;\r\n    public trips(){\r\n    }\r\n    \r\n    public trips(String n, String p){\r\n        name = n;\r\n        place = p;\r\n    }\r\n}\r\n\r\n\r\n// s (scientific) trip\r\nclass sTrip extends trips{\r\n    int startDate; // as a day in month;\r\n    int endDate; // as a day in the same month;\r\n    \r\n    public sTrip(String name, String place, int startDate, int endDate){\r\n        super(name, place);\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n    }\r\n    \r\n    public int getPeriod(){\r\n        return endDate - startDate;\r\n    }\r\n}\r\n\r\n\r\n//e (entertainment) trip\r\nclass eTrip extends trips{\r\n    int Date; // as a day in month;\r\n    \r\n    public eTrip(String name, String place, int Date){\r\n        super(name, place);\r\n        this.Date = Date;\r\n    }\r\n    \r\n    public int getPeriod(){\r\n        return 1; // because the eTrip is only one day\r\n    }\r\n}', 250, 34, 8, '2018-12-03 13:35:41', '2019-01-15 11:27:39'),
(84310, 86, '220', 250, 34, 2, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84311, 88, '229', 250, 34, 2, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84312, 89, '231', 250, 34, 2, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84313, 90, '234', 250, 34, 2, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84314, 91, '236', 250, 34, 1, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84315, 92, '241', 250, 34, 2, '2018-12-03 13:35:41', '2018-12-03 13:35:41'),
(84356, 85, 'public class Entertainment{\r\nstring data ;  \r\n string name;       \r\n string place;\r\nstring data A ;  \r\n string name A;       \r\n string place A;\r\nstring data b ;  \r\n string name b;       \r\n string place b;\r\n  public class Entertainment(){\r\n  data=1/1/2019 ;  \r\n  name=\" fun\";       \r\n  place=\"Alex\";\r\n  data A =30/1/2019 ;  \r\n  name A=\"fun 2\";       \r\n   place A= \"aswin\";\r\n  data b  =3 /3/2019;  \r\n name b=\"fun 3\";       \r\n  place b=\"fawm\";\r\n}\r\n  public class Entertainment(string data ,string name=  ,string place ){\r\n\r\n this.data =data;\r\n    this.name=name ;\r\n  this.place=place; \r\n}\r\n public void show( ){\r\nSystem.Out.println (data+\"  \"+name+\" \"+place);\r\nSystem.Out.println (dataA+\"  \"+nameA+\" \"+placeA);\r\nSystem.Out.println (datab+\"  \"+nameb+\" \"+placeb);\r\n}\r\npublic string get data (string s)\r\nstring m=s.string.split(\"/\");\r\n int n=  parseInt (m);}\r\n\r\n   class scientific extends entertainment   {\r\nstring  start date; \r\nstring  end date ;\r\nstring name1 ;  \r\nstring  place1;\r\npublic class  scientific(  ){\r\n   this.start date = 12/10/1999; \r\n   this.end date= 12/ 12/1999 ;    \r\nthis.name1 = \"java\";  \r\n this.place1= \"usA\";\r\n}\r\n  public class Entertainment( string  start date  , string  end date  ,string name1  ,string  place1){\r\n   this.start date =start date; \r\n   this.end date=end date ;    \r\nthis.name1 =name1;  \r\n this.place1=place1;\r\n}\r\n public void get trips( string  start date; string  end date; string name1 ,  string   place1 ;){\r\nsuper(data,name ,place);\r\n return (data+\"  \"+name+\" \"+place+\" \"+start date  +\" \"+ end date +\" \"+ name1  +\" \"+  place1);}\r\n}\r\n\r\nimport java.util.*;\r\npublic Static void main(){\r\nentertainment x=new entertainment();\r\nx.show;\r\n}', 305, 34, 2, '2018-12-03 13:35:48', '2019-01-15 11:28:29'),
(84357, 86, '220', 305, 34, 2, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84358, 88, '227', 305, 34, 0, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84359, 89, '232', 305, 34, 0, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84360, 90, '234', 305, 34, 2, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84361, 91, '236', 305, 34, 1, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84362, 92, '241', 305, 34, 2, '2018-12-03 13:35:48', '2018-12-03 13:35:48'),
(84577, 85, 'public class trip{\r\nprotected String name;\r\n protected String place;   \r\n public   trip(){\r\n}\r\n                                                                                                   \r\n  public   trip( String n,String p){\r\nname=n;\r\nplace=c;\r\n}\r\n}\r\npublic     class   scientific trip extends trip{\r\nprotected String start day;\r\nprotected String end day;\r\npublic scientific trip(){\r\n}\r\npublic scientific trip( String s,String e){\r\nstart day=s;\r\nend day=e;\r\n}\r\n  public scientific trip(String n,string p, String s,String e){\r\nsuper(n,p);\r\nstart day=s;\r\nend day=e;\r\n}   \r\n String   get Period(){\r\nfor (int i=0;i<2;i++){\r\n  number of day for a trip= end day[i]-start day[i];\r\n\r\nreturn  number of day for a trip;\r\n}\r\n}\r\n    }\r\npublic class   entertainment  trip extends  trip{\r\nprotected String data;\r\npublic     entertainment  trip(){\r\n}\r\n  public     entertainment  trip(String d){\r\ndata=d;\r\n}    \r\n public     entertainment  trip( String n,String p,String d){\r\nsuper(n,p);\r\ndata=d;\r\n}\r\n\r\n}       \r\npublic class test{\r\npublic static void main(String[] args){\r\n     scientific trip st=new  scientific trip();\r\n     \r\n     entertainment  trip en=new  entertainment  trip();', 327, 34, 6, '2018-12-03 13:36:28', '2019-01-15 11:42:12'),
(84578, 86, '220', 327, 34, 2, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84579, 88, '227', 327, 34, 0, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84580, 89, '232', 327, 34, 0, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84581, 90, '234', 327, 34, 2, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84582, 91, '236', 327, 34, 1, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84583, 92, '238', 327, 34, 0, '2018-12-03 13:36:28', '2018-12-03 13:36:29'),
(84590, 85, 'public tripe\r\n{\r\nString name;\r\nString place;\r\npublic trip(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n} \r\n\r\npublic String toString()\r\n{\r\nreturn\" name:\" +name+\"place\"+place;\r\n\r\n}  \r\n\r\npublic scientific extends  tripe\r\n{\r\n//String std;\r\n//String ed;\r\nData std;\r\nData ed;\r\npublic scientific (String s,String e,String n,String p))\r\n{\r\nsuper(n,p);\r\nstd=s;\r\ned=e;\r\n//to calculate the Period of a tripe\r\ndataperiod=ed-std;\r\npublic String toString()\r\n{\r\nreturn \" place tripe scientific  \"+ std+ \" \" +ed \" \" ;\r\n\r\n}  \r\n\r\n\r\n}\r\npublic entertainment extends  tripe{\r\nString data=1;\r\npublic entertainment(String d)\r\n{\r\ndata=d;\r\n}\r\npublic entertainment(String d,String n,String p)\r\n{\r\nsuper(n,p);\r\ndata=d;\r\n\r\n}\r\n\r\n\r\n}\r\npublic String toString()\r\n{\r\nreturn\" data :\" +data\r\n\r\n}  \r\n\r\npublic String  getPeriod ()\r\n{\r\n\r\nretrun  dataforperiod+entertainment .data() ;\r\n\r\n\r\n}\r\npublic String toString()\r\n{\r\nreturn\" data :\" +data\r\n\r\n}  \r\n\r\n\r\n}\r\n}    \r\n\r\nimport.java.Data data=new.java.Data;\r\nimport. java.util.*;                                                                                                    \r\npublic static main\r\n{\r\nString arr[] int=new String(5);\r\nfor(int i=0;i<arr;lenght() ;i++)\r\n{\r\narr[i]=new tripe()\r\nif (i%2==0)\r\nfor(int i=0;i<arr;lenght() ;i++ )\r\n{\r\nscientific c1=new scientific() ;\r\nSystem.out.println(arr[i].scientific +\" \" );\r\n\r\n}\r\nelse\r\n{\r\n entertainment  c1=new scientific() ;\r\nSystem.out.println(arr[i]entertainment  .+\" \" );\r\n\r\n}\r\n}\r\n                 \r\n\r\n}', 375, 34, 6, '2018-12-03 13:36:35', '2019-01-15 11:44:00'),
(84591, 86, '220', 375, 34, 2, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84592, 88, '229', 375, 34, 2, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84593, 89, '233', 375, 34, 0, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84594, 90, '234', 375, 34, 2, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84595, 91, '236', 375, 34, 1, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84596, 92, '239', 375, 34, 0, '2018-12-03 13:36:35', '2018-12-03 13:36:35'),
(84616, 85, 'public class trip\r\n{\r\n    protected String name ;\r\n    protected String   place;\r\n    public static totaldaytrip;\r\n   public trip()\r\n{\r\nname =\"trip name \";\r\nplace = \" place name \";\r\ntotaldaytrip++;\r\n}\r\npublic trip (String name, String place )\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic void set_name(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic void set_place(String place)\r\n{\r\nthis.place=place;\r\n}\r\npublic String get_name()\r\n{\r\nreturn this.name;\r\n}\r\npublic String get_place ()\r\n{\r\nreturn this.place;\r\n}\r\ntotaldaytrip=totalscientificdate ()+totalentertainmentdate;\r\n}\r\npublic class scientific extends trip\r\n{\r\nprivate int start_date;\r\nprivate int end_date;\r\npublic scientific ()\r\n{\r\nname=\"scientific trip\";\r\nplace=\"scientific place \";\r\nstart_date=0;\r\nend_date=0;\r\n}\r\npublic scientific (String   name;String  place; int start_date ;int  end_date)\r\n{\r\nsupper(name , place );\r\nthis.start_date=start_date;\r\nthis.end_date=end_date;\r\n}\r\npublic void setstart_date(int start_date)\r\n{\r\nthis.start_date=start_date;\r\n}\r\npublic void setend_date(int end_date)\r\n{\r\nthis.end_date=end_date;\r\n}\r\npublic int getstart_date()\r\n{\r\nreturn start_date;\r\n}\r\npublic int getend_date()\r\n{\r\nreturn end_date;\r\n}\r\npublic static int totalscientificdate ()\r\n{\r\nreturn end_date - start_date;\r\n}\r\n}\r\npublic class entertainment  extends trip\r\n{\r\nprivate int date;\r\npublic entertainment()\r\n{\r\n  date=1;\r\n} \r\npublic entertainment(int date )\r\n{\r\nthis.date=date;\r\n}\r\npublic void setdate(int date)\r\n{\r\nthis.date=date;\r\n}\r\npublic int getdate()\r\n{\r\nreturn date;\r\n}\r\npublic static int totalentertainmentdate()\r\n{\r\nreturn date;\r\n}\r\n}', 303, 34, 6, '2018-12-03 13:36:40', '2019-01-15 11:45:04'),
(84617, 86, '220', 303, 34, 2, '2018-12-03 13:36:40', '2018-12-03 13:36:40'),
(84618, 88, '229', 303, 34, 2, '2018-12-03 13:36:40', '2018-12-03 13:36:40'),
(84619, 89, '231', 303, 34, 2, '2018-12-03 13:36:40', '2018-12-03 13:36:41'),
(84620, 90, '234', 303, 34, 2, '2018-12-03 13:36:40', '2018-12-03 13:36:41'),
(84621, 91, '236', 303, 34, 1, '2018-12-03 13:36:40', '2018-12-03 13:36:41'),
(84622, 92, '241', 303, 34, 2, '2018-12-03 13:36:40', '2018-12-03 13:36:41'),
(84674, 85, 'import java.util.Scanner;\r\npublic class trips{\r\nprivate string name;\r\nprivate string place;\r\n\r\n]\r\npublic class scientific_trip extends trips{\r\nprivate int start_date; \r\nprivate int end_date;\r\nts(){\r\n}\r\nts(String n,String p,int sd,int ed){\r\nname=n;\r\nplace=p;\r\nstart_date=sd;\r\nend_date=ed;\r\n}\r\n}\r\npublic class entertainment_trip extends trips(){\r\nprivate int date;\r\nt(){\r\n}\r\nt(String n,String p,int d){\r\nname=n;\r\nplace=p;\r\ndate=d;\r\n}\r\n}\r\n\r\n\r\n\r\npublic int getperiod(){\r\nScanner input=new Scanner(System.in);\r\nSystem.out.print(\"start day:\");\r\nint statrt_day=input.nextInt();\r\nSystem.out.print(\"end day:\");\r\nint end_day=input.nextInt();\r\nreturn end_date-start_date;\r\n}\r\npublic class trips{\r\npublic static void main(string[],args){\r\nint []x=new x[5];\r\nfor(int i=0;i<x.length;i++)\r\nif(i%2==0)\r\nx[i]=scientific_trip;\r\nelse\r\nx[i]=entertainment _trip;\r\n}\r\nscientific_trip1=new scientific_trip();\r\nscientific_trip2=new scientific_trip();\r\nint a=getperiod(scientific_trip1));\r\nint b=getperiod(scientific_trip2));\r\nSystem.out.print(\"the total days:\"+(a+b+3);\r\n}\r\n}', 382, 34, 5, '2018-12-03 13:36:51', '2019-01-15 11:45:49'),
(84675, 86, '220', 382, 34, 2, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84676, 88, '228', 382, 34, 0, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84677, 89, '230', 382, 34, 0, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84678, 90, '234', 382, 34, 2, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84679, 91, '236', 382, 34, 1, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84680, 92, '239', 382, 34, 0, '2018-12-03 13:36:51', '2018-12-03 13:36:52'),
(84688, 85, 'import java.util.*;\r\npublic class  trip{\r\nprotected string name;\r\nprotected string place;\r\nprotected int start date;\r\npublic trip(string n , string p, int s )\r\n name=n;\r\n place=p;\r\nstart date=s;\r\npublic static int scientific days (){\r\n\r\nreturn  \"dates=\"end date - start date;   \r\n}\r\n\r\npublic static int entertainment days(){\r\nreturn 1;\r\n}\r\npublic class scientific extends trip{\r\npublic scientific(string n , string p , int s)\r\nsuper(n,p,s)\r\nint end date;\r\n}\r\npublic class entertainment extends trip{\r\npublic entertainment(string n , string p , int s)\r\nsuper(n,p,s)\r\n}\r\n}   \r\nclass test{\r\npublic static void main(string[ ]args){\r\nint one , two ,three ,four ,five;\r\nint sum=0;\r\nsystem.out.print(\" enter name,place , start date and end date \" )\r\nname=n;\r\nplace=p;\r\nstart date=s;\r\nend date=d;\r\nscientific sf=new scientific(n,p,s)\r\n  \r\nsystem.out.print(\" enter name,place , start date and end date \" )\r\nname=n;\r\nplace=p;\r\nstart date=s;\r\nend date=d;\r\nscientific s=new scientific(n,p,s)\r\n\r\nsystem.out.print(\"enter name,place and start date\")\r\nname=n;\r\nplace=p;\r\nstart date=s;\r\nentertainment a=new entertainment(n,p,s)\r\n\r\nsystem.out.print(\"enter name,place and start date\")\r\nname=n;\r\nplace=p;\r\nstart date=s;\r\nentertainment b=new entertainment(n,p,s)\r\n\r\nsystem.out.print(\"enter name,place and start date\")\r\nname=n;\r\nplace=p;\r\nstart date=s;\r\nentertainment c=new entertainment(n,p,s)\r\none= sf.scientific days\r\ntwo=s..scientific days\r\nthree=a. entertainment days \r\nfour =b. entertainment days\r\nfive=c. entertainment days\r\nsum=one+two+three+four+five\r\nsystem.out.print(\"sum is =\"+ sum) \r\n}\r\n\r\n}', 333, 34, 7, '2018-12-03 13:36:53', '2019-01-15 12:03:26'),
(84689, 86, '220', 333, 34, 2, '2018-12-03 13:36:53', '2018-12-03 13:36:53'),
(84690, 88, '229', 333, 34, 2, '2018-12-03 13:36:53', '2018-12-03 13:36:53'),
(84691, 89, '230', 333, 34, 0, '2018-12-03 13:36:53', '2018-12-03 13:36:53'),
(84692, 90, '234', 333, 34, 2, '2018-12-03 13:36:53', '2018-12-03 13:36:54'),
(84693, 91, '236', 333, 34, 1, '2018-12-03 13:36:53', '2018-12-03 13:36:54'),
(84694, 92, '241', 333, 34, 2, '2018-12-03 13:36:53', '2018-12-03 13:36:54'),
(84702, 85, 'class trip{\r\n               string name;\r\n               string place;\r\n   class scientifictrip extends trip{\r\n      int startdata,end date;\r\n      string place;\r\n     }\r\n\r\n   class entertainmenttrip extends trip{\r\n        int date;\r\n        string name,place;\r\n           }\r\n        int getPeriod (){\r\n\r\n      }\r\n}   \r\nimport java.utilr.*;\r\npublic static void main(String[] args){\r\nscientifictrip x = new scientifictrip();\r\nentertainmenttrip y  = new entertainmenttrip();\r\nx.getPeriod ();\r\ny.getPeriod ();\r\nSystem.out.print(x.getPeriod ());\r\nSystem.out.print(y.getPeriod ());\r\n}', 300, 34, 3, '2018-12-03 13:36:55', '2019-01-15 15:03:28'),
(84703, 86, '218', 300, 34, 0, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84704, 88, '227', 300, 34, 0, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84705, 89, '232', 300, 34, 0, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84706, 90, '234', 300, 34, 2, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84707, 91, '237', 300, 34, 0, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84708, 92, '241', 300, 34, 2, '2018-12-03 13:36:55', '2018-12-03 13:36:55'),
(84827, 85, 'classe tripe(){ptotrctded String name; protected String palce;\r\ntrip(String name,String palce){\r\nthis.name=name;  this.place=place;}}\r\n\r\ncalsse tripeA extends tripe()\r\n{ protected int startdate; protected int enddate;\r\ntripeA (int sd,int ed,String n,String p)       startdate=sd;  enddate=ed; super(n,p)   }\r\nint getPeriod()\r\n}\r\n\r\nclasse tripe_B extends tripe(){int day=1;  \r\ntripe_B(int a,String x,String v)\r\n{\r\nday=a; super(x,v)\r\n}\r\n\r\n}', 234, 34, 4, '2018-12-03 13:37:28', '2019-01-22 15:47:35'),
(84828, 86, '218', 234, 34, 0, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84829, 88, '229', 234, 34, 2, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84830, 89, '233', 234, 34, 0, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84831, 90, '235', 234, 34, 0, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84832, 91, '236', 234, 34, 1, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84834, 92, '238', 234, 34, 0, '2018-12-03 13:37:28', '2019-01-22 15:35:30'),
(84849, 85, 'import java.util.Scanner;                                                                                                            \r\n  public class trip(){\r\nstring StartData;\r\nstring EndDate;\r\nstring name;\r\nstring place;\r\n}\r\npublic class scinentific extands trip (){\r\nscinentific(string sd, string ed, string n, string p){\r\nStartData = sd; \r\nEndDate = ed;\r\nname = n;\r\nplace = p;\r\n}\r\n}\r\n public class  entertainment  extands trip(){\r\nEndDate = StartDate + 1;\r\nentertainment(string sd,, string n, string p){\r\nStartData = sd; \r\nname = n;\r\nplace = p;\r\n\r\n} \r\npublic static void main(String[] args){\r\nScanner input = new Scanner(System.in);\r\nif(trip is entertainment)\r\nsystem.out.println(just one day);\r\nelse\r\n getPeriod(fuck your self);', 406, 34, 0, '2018-12-03 13:37:29', '2019-01-15 15:13:54'),
(84851, 86, '221', 406, 34, 0, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84853, 88, '227', 406, 34, 0, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84855, 89, '230', 406, 34, 0, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84857, 90, '234', 406, 34, 2, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84859, 91, '236', 406, 34, 1, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84861, 92, '241', 406, 34, 2, '2018-12-03 13:37:29', '2018-12-03 13:37:29'),
(84883, 85, 'class Trip {\r\n   public Trip (){\r\nstr name;\r\nstr place;\r\n}\r\nclass Scientific extends Trip{\r\n  public Scientific (){\r\ntrip start_date[ ];\r\ntrip end_date[ ];\r\ntrip name[ ];\r\ntrip place[ ]; \r\ngetPeriod (){\r\nreturn System.out.print(\"trip period =\" end_date - start_date);\r\n}\r\n}\r\n}\r\nclass Entertainment extends Trip{\r\npublic Entertainment (){\r\ntrip date[ ];\r\ntrip name[ ];\r\ntrip place[ ];\r\n}\r\n}                                                                                                               \r\n  public static void main(String[] args) {\r\n    Entertainment   ent1 = new Entertainment();\r\n     Entertainment   ent2 = new Entertainment();\r\n    Entertainment   ent3 = new Entertainment();\r\n        Scientific  sci1 = new Scientific();\r\n         Scientific  sci2 = new Scientific(); \r\narr trips=[ ent1, ent2,ent3,sci1,sci2];\r\ngetPeriod();\r\nint total;\r\nfor(int i=0 , i<getPeriod , i++)\r\n{\r\ntotal ++ }\r\n}\r\n}', 349, 34, 4, '2018-12-03 13:37:34', '2019-01-15 15:15:09'),
(84884, 86, '220', 349, 34, 2, '2018-12-03 13:37:34', '2018-12-03 13:37:35'),
(84885, 88, '229', 349, 34, 2, '2018-12-03 13:37:34', '2018-12-03 13:37:35'),
(84886, 89, '232', 349, 34, 0, '2018-12-03 13:37:34', '2018-12-03 13:37:35'),
(84887, 90, '235', 349, 34, 0, '2018-12-03 13:37:34', '2018-12-03 13:37:35'),
(84888, 91, '236', 349, 34, 1, '2018-12-03 13:37:34', '2018-12-03 13:37:35'),
(84889, 92, '239', 349, 34, 0, '2018-12-03 13:37:34', '2018-12-03 13:37:35');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(84930, 85, 'package exam;\r\n\r\npublic class exam{\r\npublic static void main(string [] args){\r\nscientific a=new scientific(\"haitham\",\"egypt\",15,30);\r\nscientific b =new scientific(\"ahmed\",\"sohag\",16,30);\r\nentertainment x =new entertainment(\"mohamed\",\"assuit\",1,10);\r\nentertainment y =new entertainment(\"ahmed\",\"cairo\",2,20);\r\nentertainment z =new entertainment(\"assad\",\"alex\",6,30);\r\nSystem.out.print(a.get_Period(15,30));\r\nSystem.out.print(b.get_Period(16,30));\r\nSystem.out.print(x.get_Period(1,10));\r\nSystem.out.print(y.get_Period(2,20));\r\nSystem.out.print(z.get_Period(6,30));\r\n\r\n\r\n\r\n}\r\n\r\n}                                                                 \r\n class trip(){\r\ndate x=new date();\r\nprotect String name;\r\nprotect String place;\r\nprotect int start_date;\r\nprotect int end_date;\r\n trip(){ }\r\n trip(String n,String p,  int s, int e){\r\nthis.name=n;\r\nthis.place=p;\r\nthis.start_date=s;\r\nthis.end_date=e;\r\n                                                    }\r\n public int get_Period(int s, int e){\r\nthis.start_date=s;\r\nthis.end_date=e;\r\nreturn e-s;\r\n                                           }\r\n\r\n                    }\r\n\r\n                                             \r\n class scientific extends trip(){\r\nscientific (String s,String l, int b, int c)\r\n   {\r\nthis.name=s;\r\n this.place=l;\r\nthis.start_date=b;\r\nthis.end_date=c;\r\n   }\r\n\r\n\r\n                                                      }    \r\nclass entertainment extends trip()\r\n{\r\nentertainment (String a,String b, int  c, int  d)\r\n   {\r\nthis.name=a;\r\n this.place=b;\r\nthis.start_date=c;\r\nthis.end_date=d;\r\n   }\r\n}', 307, 34, 5, '2018-12-03 13:37:41', '2019-01-15 15:16:58'),
(84931, 86, '220', 307, 34, 2, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84932, 88, '229', 307, 34, 2, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84933, 89, '231', 307, 34, 2, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84934, 90, '234', 307, 34, 2, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84935, 91, '236', 307, 34, 1, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84936, 92, '241', 307, 34, 2, '2018-12-03 13:37:41', '2018-12-03 13:37:42'),
(84997, 85, 'package  FACULTY ;\r\nimport java.util.Scanner;\r\npublic class Main{ \r\npublic static void main ( String [] args){\r\nScanner sc =new Scanner(System.in);\r\nString name =sc.nextline();\r\n String place =sc.nextline();\r\nString startDate  =sc.nextline();\r\n String endDate =sc.nextline();\r\nscientifictrip a1 =new scientifictrip(name , place , startDate , endDate);\r\nSystem.out.println(\" for seconed trip\");\r\nname =sc.nextline();\r\n  place =sc.nextline();\r\n startDate  =sc.nextline();\r\n endDate =sc.nextline();\r\nscientifictrip a2 =new scientifictrip(name , place , startDate , endDate);\r\n\r\n\r\n\r\n} \r\n}\r\npublic class Trips{\r\nprivate String name;\r\nprivate String place;\r\n      trips(){\r\n    }\r\n     trips(String name  , String place){\r\n   if (name.length()>0)\r\n    this.name=name;\r\n    if (place.length()>0)\r\n       this.place=place;\r\n}\r\npuplic void setName(String name){\r\n  if (name.length()>0)\r\n    this.name=name;\r\n}\r\npuplic void setPlace(String place){\r\n      if (place.length()>0)\r\n       this.place=place;\r\n\r\n\r\n\r\n}\r\npuplic String getName(){\r\n   return name;\r\n}\r\npuplic String getPlace(){\r\n   return place;\r\n}\r\n}\r\npublic class entertainmenttrip extends Trips {\r\n  private  static int date=0;\r\n  private String startDate;\r\nentertainmenttrip (){\r\n   this.date++;\r\n}\r\nentertainmenttrip (String name , String place , ,String startDate, int date ){\r\n   super(name,place);\r\nif (startDate.lenght()>0)\r\nthis.startDate=startDate;\r\n\r\n    this.date++;\r\n}\r\n\r\npublic String getPeriode(){\r\nreturn this.date;\r\n}\r\n\r\n}\r\npublic class scientifictrip extends Trips {\r\n   private String startDate;\r\n   private String endDate;\r\n    scientifictrip (){\r\n}\r\nscientifictrip (String name , String place , String startDate , String endDate ){\r\n   super(name,place);\r\n    if( startDate.lenght() > 0)\r\n   this.startDate =startDate ;\r\n      if( endtDate.lenght() > 0)\r\n this.endDate =endDate;\r\n}\r\npuplic void setStratDate(String startDate){\r\n  if ( startDate.length()>0)\r\n     this.startDate= startDate;\r\n  }\r\npuplic void setEndDate(String endDate){\r\n  if ( endDate.length()>0)\r\n this.endDate=endDate;\r\n  }\r\npuplic String getStartDate(){\r\n   return startDate;\r\n }\r\npuplic String getEndDate(){\r\n   return endDate;\r\n}\r\npublic String getPeriode(){\r\nreturn \r\n}\r\n\r\n}', 306, 34, 5, '2018-12-03 13:38:00', '2019-01-22 15:48:57'),
(84998, 86, '219', 306, 34, 0, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(84999, 88, '229', 306, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85000, 89, '231', 306, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85001, 90, '234', 306, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85002, 91, '236', 306, 34, 1, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85003, 92, '241', 306, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85010, 85, 'import java.util.Date;  \r\n  public class trip{\r\nString name;\r\nString place;\r\ntrip(){\r\n\r\n\r\n}\r\ntrip(String name,String place)\r\n{\r\n\r\nthis.name=name;\r\nthis.place=place;\r\n}}\r\nclass scientifictrip extends tirp{\r\nDate stardate;\r\nDate enddate;\r\n\r\n}\r\nscientifictrip(){\r\n\r\n}\r\nscientifictrip(Date stardate,Date enddate){\r\nsuper(name,place);\r\nthis.stardate=new Date();\r\nthis.enddate=new Date();\r\n}\r\nvoid getperiod();{\r\nreturn this.stardate-this.enddate;\r\n}\r\nclass entertainment extends trip{\r\n\r\nDate date;\r\nentertainment (){\r\n}\r\nentertainment (Date date){\r\nsuper(name,place);\r\ndate=new Date();\r\n\r\n} \r\nentertainment (String name,String place,Date date){\r\nsuper(name,place);\r\ndate=new Date();\r\n\r\n\r\n}\r\nvoid getperiod()\r\n{\r\nreturn 1;\r\n\r\n}\r\n\r\nimport java.util,Scanner;\r\npublic class exam{\r\npublic Static void main(String []args){\r\nScanner reader=new Scanner(System.in);\r\nSystem.out.println(\"ente your number trips:\")\r\nint size=reader.nextInt();\r\n\r\ntrip []arr=new trip[size];\r\nfor(int i=0;i<arr.length;i++)\r\nSystem.out.println(\"ente your name trips:\")\r\narr[i]=new trip\r\n\r\n}\r\n       }', 312, 34, 6, '2018-12-03 13:38:00', '2019-01-22 15:49:51'),
(85012, 86, '220', 312, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85013, 88, '227', 312, 34, 0, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85014, 89, '233', 312, 34, 0, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85015, 90, '234', 312, 34, 2, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85016, 91, '236', 312, 34, 1, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85017, 92, '240', 312, 34, 0, '2018-12-03 13:38:00', '2019-01-22 15:35:30'),
(85145, 85, 'import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\n\r\nclass  scientific_trip{  public int static period=0;\r\n        public String name;\r\n	public String place;\r\n	public int []start_date= new int[3];\r\n	public int []end_date= new int[3];\r\n\r\n	public int getPeriod(int []start_date, int []end_date){   period+=((end_date[0]*12+end_date[1]*30+end_date[2])-(start_date[0]*12+start_date[1]*30+start_date[2]));\r\n		return period;\r\n	} \r\n}\r\nclass  entertainment_trips(int date){\r\n        public String name;\r\n	public String place;\r\n	this.date=date;\r\n	public int getPeriod(){    period+=1;\r\n		return period;\r\n	} \r\n}\r\n\r\nclass trips {\r\n	public static void main (String[] args) throws java.lang.Exception\r\n	{  Scanner s=new Scanner (System.in);\r\n		System.out.println(\"if the trip is scientific trip enter 1 ,if it is entertainment trip enter 2\");\r\n              int kind=s.next();\r\n          int []arr=new int[3];\r\n           int []arr1=new int[3];\r\n            \r\n               if(kind == 1){\r\nSystem.out.println(\"enter the start date seprated by spaces and the end date seprated by spaces\");\r\n	for(int i=0;i<3;i++){  arr[i]=s.nextint();}\r\n	} scientific op=new scientific(arr);\r\nelse{ \r\nSystem.out.println(\"enter the date seprated by spaces\");\r\n for(int i=0;i<3;i++){  arr1[i]=s.nextint();\r\n} entertainment op1=new entertainment(arr1);\r\n\r\nSystem.out.println(op.getPeriod()+op1.getPeriod());\r\n\r\n\r\n\r\n\r\n}}', 322, 34, 3, '2018-12-03 13:38:24', '2019-01-22 15:51:26'),
(85146, 86, '218', 322, 34, 0, '2018-12-03 13:38:24', '2019-01-22 15:35:30'),
(85147, 88, '227', 322, 34, 0, '2018-12-03 13:38:24', '2019-01-22 15:35:30'),
(85148, 89, '230', 322, 34, 0, '2018-12-03 13:38:24', '2019-01-22 15:35:30'),
(85149, 90, '234', 322, 34, 2, '2018-12-03 13:38:24', '2019-01-22 15:35:31'),
(85150, 91, '236', 322, 34, 1, '2018-12-03 13:38:24', '2019-01-22 15:35:31'),
(85151, 92, '241', 322, 34, 2, '2018-12-03 13:38:24', '2019-01-22 15:35:31'),
(85243, 85, 'class faculty{\r\nString name;\r\nString place;\r\nfaculty(String n,String p){\r\nname=n;\r\nplace=p\r\n}}\r\nclass scientific extends faculty{\r\nDate start date;\r\nDate end date;\r\nscientific(String n,String p,Date s,Date e){\r\nsuper(n,p);\r\n start date=s;\r\n end date=e;}\r\npublic int getPeriod(){\r\nint t= end date- start date;\r\nreturn t;\r\n}\r\n\r\n\r\n\r\n}\r\nclass entertainment extends  faculty {\r\nint day;\r\n entertainment(String n,String p,int d){\r\nsuper(n,p);\r\nday=d;\r\npublic int getPeriod(){\r\n\r\nreturn  1;\r\n}\r\n}\r\npublic class you{\r\npublic static void main(String[] args){\r\nscientific trip=new scientific(\"ytre\",\"ghgad\",1/12/2019,4/12/2019);\r\nscientific trip2=new scientific(\"ghf\",\"hihaf\",2/1/2019,6/1/2019);\r\ntrip.public int getPeriod();\r\ntrip2.public int getPeriod();\r\n entertainment trip 3=new  entertainment(,1/12/2019,\"uyty\",\"yy\");\r\n entertainment trip4=new  entertainment(6/1/2019,\"hk\",\"kh\");\r\n entertainment trip 5=new  entertainment(3/3/2019,\"yu\",\"gh\");\r\ntrip3.public int getPeriod();\r\ntrip4.public int getPeriod();\r\ntrip5.public int getPeriod();', 313, 34, 7, '2018-12-03 13:38:34', '2019-01-22 15:52:17'),
(85245, 86, '219', 313, 34, 0, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85247, 88, '226', 313, 34, 0, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85249, 89, '233', 313, 34, 0, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85251, 90, '234', 313, 34, 2, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85253, 91, '236', 313, 34, 1, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85255, 92, '239', 313, 34, 0, '2018-12-03 13:38:34', '2019-01-22 15:35:31'),
(85379, 85, 'class trip;                                                               \r\n{\r\nString name;  String place;\r\n\r\npublic trip{\r\n}\r\n}                                                                                                                 \r\npublic class scientific extends trip\r\n{\r\nString start_date;     String end_date;\r\n\r\npublic scientific\r\n{\r\n}\r\npublic int get_period_scient()\r\n{\r\nreturn (int) star_date - (int) end_date;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\npublic class entertainment extends trip\r\n{\r\nString date;\r\n}       \r\npublic entertainment\r\n{\r\n}\r\npublic int get_period()\r\n{\r\nreturn (int)date=1;\r\n}    \r\n}\r\npublic static void main(String[] args) { \r\npublic class fci()\r\n{\r\nscientific [] ass=new scientific();\r\nentertainment [] arr=new entertainment();\r\nfor(int i=0;i<ass.length;i++)\r\n{\r\nass[i]=new scientific();\r\n}\r\nfor(int h=0;h<arr.length;h++)\r\n{\r\narr[i]=new entertainment();\r\n}\r\n\r\nSystem.out.println(ass.get_period_scient()+arr.get_period())\r\n\r\n\r\n\r\n}', 272, 34, 3, '2018-12-03 13:39:20', '2019-01-15 15:41:16'),
(85380, 86, '218', 272, 34, 0, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85381, 88, '228', 272, 34, 0, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85382, 89, '232', 272, 34, 0, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85383, 90, '234', 272, 34, 2, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85384, 91, '236', 272, 34, 1, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85385, 92, '239', 272, 34, 0, '2018-12-03 13:39:20', '2018-12-03 13:39:21'),
(85426, 85, 'public class trip\r\n{   \r\n  string name , place ;\r\n   public trip ()\r\n     {\r\n       name = \"friest\"; \r\n        place = \"assiut\";\r\n      }                                               \r\n   public trip (string n , string p )\r\n      {\r\n        name = n; \r\n         place= p ;\r\n       }\r\n}\r\n   public class scientific extands trip \r\n   { \r\n      data start ;\r\n       data end ;\r\n     public scientific ()\r\n      {\r\n        start =16;\r\n        end = 20;\r\n       }\r\n     public scientific (data s , data e)\r\n      {\r\n       \r\n    private   start = s;\r\n    private   end = e; \r\n   }\r\n   public int getstart()\r\n   {\r\n    return start;\r\n    } \r\n public int getenend()\r\n   {\r\n    return end;\r\n    } \r\n  \r\n}\r\n   public class entertainment extands trip \r\n    {\r\n    data d;\r\n\r\n    public entertarinment()\r\n    {  \r\n   \r\n    d =12;\r\n      \r\n     } \r\n    public entertarinment ( d ) \r\n    { \r\n      scanner input = new sanner (system in);\r\n      system.out.prientln(\"enter the day\");\r\n      int d=input.nextInt (); \r\n     }\r\n      public int getd()\r\n   {\r\n    return d;\r\n    } \r\n}\r\n imput java.util.scanner;\r\n public class trip \r\n{\r\npublic static void main (string [] args)\r\n{ \r\ntrip [] arr =new trip[5];\r\n   for(int i=0 ; i < arr.length ;i++)\r\n   {\r\n    if (i%2 ==0)\r\n   }\r\n  system.out.prient( i)  \r\narr[i]=new entertainment(s,e);\r\nfor(int i=0 ;i<arr.length;i++)\r\n{\r\nif (i==s \\\\ i==e)\r\nsystem.out.prientln (i) ;\r\n\r\n\r\n\r\n}', 273, 34, 5, '2018-12-03 13:39:29', '2019-01-15 15:44:02'),
(85427, 86, '220', 273, 34, 2, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85428, 88, '227', 273, 34, 0, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85429, 89, '233', 273, 34, 0, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85430, 90, '234', 273, 34, 2, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85431, 91, '236', 273, 34, 1, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85432, 92, '241', 273, 34, 2, '2018-12-03 13:39:29', '2018-12-03 13:39:29'),
(85488, 85, 'import java.util.Scanner;\r\npublic class trip{\r\nString name;\r\nString place;\r\npublic trip(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic void setname(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic void setplace(String place)\r\n{\r\nthis.place=place;\r\n}\r\npublic String getplace()\r\n{\r\nreturn place;\r\n}\r\n}\r\npublic class scientifictrip extends trip\r\n{\r\nint startdate;\r\nint enddate;\r\npublic scientifictrip (String n.String p,int st , int ed)\r\n{\r\nsuper(n,p)\r\nstartdate=st;\r\nenddate=ed;\r\npublic void setstartdate(int startdate)\r\n{\r\nthis.startdate=startdate;\r\n}\r\npublic int getstartdate()\r\n{\r\nreturn startdate;\r\n}\r\npublic void setenddate(int enddate)\r\n{\r\nthis.enddate=enddate;\r\n}\r\npublic int getenddate()\r\n{\r\nreturn enddate;\r\n}\r\nstatic int getperiod()\r\n{\r\nreturn enddate-startdate;\r\n}\r\n\r\n}\r\n}\r\npublic entertainmenttrip extends trip\r\n{\r\nint date;\r\npublic entertainmenttrip (String n , String p , int d)\r\nsuper (n,p)\r\ndate=d;\r\npublic void setdate(int date)\r\n{\r\nthis.date=date;\r\n}\r\npublic int getdate()\r\n{\r\nreturn date;\r\n}\r\n}\r\n\r\npublic class fci{\r\npublic static void main (String[]args){\r\ntrip t=new trip(ahmed,alex);\r\nSystem.out.println(t.getname + \" \" + t.getplace)\r\ntrip t2=new trip(5,10,ahmed,alex);\r\nSystem.out.println(t2.gerperiod \" \" + t.getname + \" \" + t.getplace)\r\ntrip 3=new trip(10,ahmed,alex);\r\nSystem.out.println(t3.getdate \" \" + t.getname + \" \" + t.getplace)\r\nSystem.out.println(\"the total number of days = \" + (2*t2.getperiod)+(3*t3.getdate));\r\n}', 269, 34, 5, '2018-12-03 13:39:47', '2019-01-15 15:45:35'),
(85489, 86, '220', 269, 34, 2, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85490, 88, '229', 269, 34, 2, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85491, 89, '230', 269, 34, 0, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85492, 90, '234', 269, 34, 2, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85493, 91, '236', 269, 34, 1, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85494, 92, '239', 269, 34, 0, '2018-12-03 13:39:47', '2018-12-03 13:39:47'),
(85571, 85, NULL, 331, 34, 6, '2018-12-03 13:40:11', '2019-01-03 14:49:36'),
(85572, 86, '218', 331, 34, 0, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85573, 88, '229', 331, 34, 2, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85574, 89, '230', 331, 34, 0, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85575, 90, '234', 331, 34, 2, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85576, 91, '236', 331, 34, 1, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85577, 92, '241', 331, 34, 2, '2018-12-03 13:40:11', '2018-12-03 13:41:13'),
(85585, 85, 'public clas trip(){\r\nprivate String name;\r\nprivate String place;\r\n\r\npublic trip(String n,String p){\r\nname = n;\r\np=place;\r\n}\r\n\r\npublic String getName(){\r\nreturn name;\r\n}\r\n\r\npublic void setName(String n){\r\nname = n;\r\n}\r\n\r\npublic String place(){\r\nreturn place;\r\n}\r\n\r\npublic void setPlace(String p){\r\nplace = p;\r\n}\r\n\r\n}\r\n________________________________________________________________________\r\npublic class scientificTrip extends trip{\r\nprivate Date startDate;\r\nprivate Date endDate;\r\n\r\npublic scientificTrip(String name,String place,Date s,Date e){\r\nsuper(name,place);\r\nstartDate = s;\r\nendDate = e;\r\n}\r\npublic Date getStartDate(){\r\nreturn startDate;\r\n}\r\npublic void setStartDate(Date s){\r\nstartDate = s;\r\n}\r\n\r\npublic Date getEndDate(){\r\nreturn endDate;\r\n}\r\npublic void setEndDate(Date e){\r\nendDate = e;\r\n}\r\n\r\npublic int getPeriod(){\r\nreturn (int)(endDate-startDate);\r\n}\r\n\r\n}\r\n___________________________________________________________\r\npublic class entertainmentTrip extends trip{\r\nprivate Date dateOfTrip;\r\nprivate static int numberOfDays;\r\n\r\npublic entertainmnentTrip(String n,String p,Date d){\r\nsuper(n,p);\r\ndateOfTrip = d;\r\nnumberOfdays++;\r\n}\r\n\r\npublic Date getDateOfTrip(){\r\nreturn dateOfTrip; \r\n}\r\n\r\npublic void setDateOfTrip(Date d){\r\ndateOfTrip = d;\r\n}\r\n\r\npublic int getPeriod(){\r\nreturn numberOfDays;\r\n}\r\n}\r\n________________________________________________________________\r\nPublic class test{\r\npublic static void main(String[] args){\r\n//here should make the objects and then we make t1.getPeriod ()+ t2.getPeriod()+............  to get the number of all days we spend in the trip.\r\n}', 226, 34, 6, '2018-12-03 13:40:13', '2019-01-15 15:47:16'),
(85586, 86, '220', 226, 34, 2, '2018-12-03 13:40:13', '2018-12-03 13:40:14'),
(85587, 88, '227', 226, 34, 0, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(85588, 89, '231', 226, 34, 2, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(85589, 90, '234', 226, 34, 2, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(85590, 91, '236', 226, 34, 1, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(85591, 92, '241', 226, 34, 2, '2018-12-03 13:40:14', '2018-12-03 13:40:14'),
(85637, 85, 'public static void main(String [ ] arrgs   )\r\n\r\n tripscienrifc1 =new  tripscienrifc();\r\n tripscienrifc2 =new  tripscienrifc();\r\nripentertainment1 =new ripentertainment();\r\nripentertainment2 =new ripentertainment();\r\nripentertainment3 =new ripentertainment();\r\n\r\nsolution\r\n{\r\ntrip [ ] trip =new int [5];\r\nfor (int i=0.i<trip.length;i++)\r\n{\r\nif ( i%2==0)\r\ntrip[i] =new ripentertainment();\r\nelse \r\ntrip[i]= new  tripscienrifc();  }\r\n}\r\nfor (int i=0.i<trip.length;i++)\r\n{\r\nif (trip[i] anstanceof tripscientific)\r\nSystem.out.print(((tripscientific)trip[i] +\"  \");\r\nelse\r\n if (trip[i] anstanceof tripentertainment)\r\nSystem.out.print(((tripentertainment)trip[i]+\"  \");\r\n\r\n\r\n}\r\n}\r\npublic class trip {\r\nString  typetrip;\r\nstring nameee;\r\npublic trip(){\r\n}\r\npublic trip(String t, String hh){\r\ntypetrip=t;\r\nnameee=hh;\r\n}\r\n}\r\npublic class tripscienrifc extends trip() {\r\nString startdate;\r\nString enddate;\r\nString name;\r\nstring place;\r\n\r\npublic  tripscienrifc()\r\n{\r\n}\r\npublic  tripscienrifc(String fg,String sd, String ed,String name,String place){\r\nsuper(fg);\r\nstartdate=sd;\r\nenddate =ed;\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic class tripentertainment extends trip(){\r\nString datee;\r\nString namee;\r\nString placee;\r\n}\r\npublic tripentertainment(){\r\n}\r\npublic (String gg,String dd, String name,String place){\r\nsuper(gg);\r\ndatee=dd;\r\nthis.namee =name;\r\nthis.placee=place;\r\n}\r\npublic static int getperiod()\r\n{\r\n int dattte1 =Integer.parseInt(datestart);\r\n int dattte2 =Integer.parseInt(dateend);\r\ndattte =datte1-dattte2;\r\nreturn dattte;\r\n}\r\n}', 409, 34, 6, '2018-12-03 13:40:25', '2019-01-15 15:50:34'),
(85638, 86, '221', 409, 34, 0, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85639, 88, '227', 409, 34, 0, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85640, 89, '232', 409, 34, 0, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85641, 90, '234', 409, 34, 2, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85642, 91, '237', 409, 34, 0, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85643, 92, '238', 409, 34, 0, '2018-12-03 13:40:25', '2018-12-03 13:40:25'),
(85672, 85, 'class trip{\r\n  String name;       \r\nString place;\r\npublic trip(){\r\n}\r\ntrip(String n, String p){\r\nname = n;\r\nplace = p;\r\n}\r\npublic void getPeriod(Date s, Date e){\r\n\r\n}\r\n}\r\nclass scientific extends trip{\r\nDate sDate = new Date();\r\nDate eDate = new Date();\r\n\r\n}\r\nclass entertainment extends trip{\r\nDate date;\r\nentertainment(String n,String p,Date d){\r\nname =n;          place=p;         date =d;\r\n}\r\n}\r\npublic class test{\r\npublic static void main(String[] args){\r\nscientific s1= new scientific();\r\nscientific s2= new scientific();\r\n\r\n\r\n\r\n}\r\n}', 421, 34, 4, '2018-12-03 13:40:39', '2019-01-15 15:51:55'),
(85673, 86, '220', 421, 34, 2, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85674, 88, '227', 421, 34, 0, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85675, 89, '231', 421, 34, 2, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85676, 90, '235', 421, 34, 0, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85677, 91, '236', 421, 34, 1, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85678, 92, '241', 421, 34, 2, '2018-12-03 13:40:39', '2018-12-03 13:40:40'),
(85825, 85, 'public class trip()\r\n{\r\n        public String name;\r\n        public   String place;\r\n    public trip()\r\n    {\r\n        name=\"first trip\";\r\n        place =\"luxor\";\r\n    }\r\n}  \r\n\r\npublic scientific extends trip()\r\n{\r\n     public  Date start_date=new Date();    \r\n     public  Date end_date=new Date();\r\n  public scientific()\r\n   {\r\n     super();\r\n         start_date =new Date(1,1,2018); \r\n          end_date =new Date(2,1,2018); \r\n  }\r\n    public int getPeriod ()\r\n     {\r\n        return  end_date.day  -  start_date.day;\r\n\r\n     }\r\n}  \r\n\r\npublic entertainment extends trip()\r\n{\r\n     public Date date=new Date();      \r\n public entertainment()\r\n   {\r\n     super();\r\n         date =new Date(5,5,2018); \r\n        \r\n  }\r\n    public int getPeriod ()\r\n     {\r\n          return 1;\r\n     }\r\n}       \r\n\r\n\r\npublic test()\r\n{\r\n   import java.util.Scanner;\r\n        public static void main(String args[ ] )\r\n        {\r\n             Scanner input=new Scanner(System.in);\r\n              int total_days=0;\r\n              trip [ ] arr=new trip[5];\r\n             for(int i=0;i<5;i++)\r\n                { \r\n                        System.out.println(\"if trip is entertainment write 1 else write 0\");\r\n                     int x=input.nextInt();\r\n                   if(x==1)   arr[i]=new entertainment();\r\n                  else arr[i]=new scientific ();\r\n                 }\r\n              for(int i=0;i<5;i++)\r\n                { \r\n                     total_days+= getPeriod ();\r\n                 }\r\n             System.out.println(total_days);\r\n         }\r\n }', 370, 34, 7, '2018-12-03 13:41:16', '2019-01-17 14:21:09'),
(85826, 86, '220', 370, 34, 2, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(85827, 88, '226', 370, 34, 0, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(85828, 89, '231', 370, 34, 2, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(85829, 90, '234', 370, 34, 2, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(85830, 91, '236', 370, 34, 1, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(85831, 92, '241', 370, 34, 2, '2018-12-03 13:41:16', '2018-12-03 13:41:16'),
(86023, 85, 'public class trip{\r\n                                                        protected sting name;\r\n                                                    protected sting place;\r\npublic ststic   int x;\r\n                                                      trip(){\r\n                                   }\r\n                       public static int getPeriod(int x){\r\n                                                    return x;\r\n}\r\n\r\n\r\n                              }\r\n                                         public class scientific extends trip{\r\n                                        private Date start,end;\r\n                    Date a=new Date(start,end);\r\npublic void setstart(int star){\r\nthis.star=star;\r\n}\r\npublic void setend(int end){\r\nthis.end=end;\r\n}\r\npublic int gets(int strar)\r\n{ return star;}\r\npublic int gets(int end)\r\n{ return end;}\r\n                              x++;\r\n\r\n                                    }\r\n                                     public class  entertainment extends trip{\r\n                                        private Date my;\r\n                            Date my =new Date();\r\n                                  x++;\r\n\r\n                                    }\r\n\r\npublic class min {\r\npublic static void main(String[] args) {\r\n\r\n}', 298, 34, 6, '2018-12-03 13:41:32', '2019-01-17 14:22:51'),
(86024, 86, '220', 298, 34, 2, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86025, 88, '227', 298, 34, 0, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86026, 89, '233', 298, 34, 0, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86027, 90, '234', 298, 34, 2, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86028, 91, '236', 298, 34, 1, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86029, 92, '238', 298, 34, 0, '2018-12-03 13:41:32', '2018-12-03 13:41:33'),
(86043, 85, 'public class scientific (){\r\nprivate  double start data;\r\nprivate    double end data;\r\nprivate   String name ;\r\nprivate   String place;\r\n  public scientific (){} \r\npublic void scientific(double start data,double end data,String name,String place){\r\nthis.double   start data=double   start data;\r\nthis. double end data= double end data;\r\nthis.String name=String name;\r\nthis.String place=String place;\r\n}\r\npublic double getstartdata(double start data){\r\nreturn start data;\r\n}\r\npublic double getenddata(double end data){\r\nreturn end data;\r\n}\r\npublic String  getname(String name){\r\nreturn name;\r\n}\r\npublic String  getplace(String place){\r\nreturn place;\r\n}\r\npublic int getPeriod( int days ){\r\nreturn days;\r\n}\r\n}  \r\n________________________________________________\r\npublic class entertainment extends scientific  (){\r\nprivate int  date;\r\npublic entertainment (){}\r\nSuper (name,place);\r\npublic void setdate(int  date){\r\nthis.date=date;\r\n}\r\npublic int getdate (int  date){\r\nreturn date ;\r\n}\r\n}                                                                                                         \r\n_______________________________________________\r\npakage FCI;\r\nImport.java.Utile.\r\n\r\npublic static void main(String[] args){\r\npublic class main FCI(){\r\nScanner.in=new Scanner (System.in);\r\ndouble x,y;\r\nString z,v;\r\n int c;\r\nx=in.nextDouble;\r\ny=in.nextDouble;\r\nz=in.next;\r\nv=in.next;\r\nc=in.nextInt;\r\nscientific A1 =new scientific;\r\nscientific A2 =new scientific;\r\nentertainment r1=new entertainment;\r\nentertainment r2=new entertainment ;\r\nentertainment r3=new entertainment;\r\n \r\n\r\nA1.scientific(x,y,z,v );\r\nA2.scientific(x,y,z,v );\r\nr1.entertainment(z,v,c);\r\nr2.entertainment(z,v,c);\r\nr3.entertainment(z,v,c);\r\n\r\n\r\n} \r\n}', 228, 34, 4, '2018-12-03 13:41:34', '2019-01-17 14:23:50'),
(86044, 86, '220', 228, 34, 2, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86045, 88, '229', 228, 34, 2, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86046, 89, '233', 228, 34, 0, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86047, 90, '235', 228, 34, 0, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86048, 91, '236', 228, 34, 1, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86049, 92, '240', 228, 34, 0, '2018-12-03 13:41:34', '2018-12-03 13:41:35'),
(86050, 85, 'public class trips {\r\nstring name;\r\nstring place;   \r\n\r\npublic trips()\r\n{name=\"ahmed\";\r\nplace=\"alexandria\";\r\n}\r\npublic trips(int name,int place)\r\n{this.name=name;\r\nthis.place=place;\r\n}\r\n}\r\npublic class sctrips extends trips{\r\nString start;\r\nString end;\r\npublic sctrips(){\r\nstart=\"5/12/2018\";\r\nend=\"6/12/2018\";\r\npublic sctrips(string start,string end)\r\n{this.start=start;\r\nthis.end=end;\r\n}\r\npublic sctrips(sting name,string place ,string start,string end)\r\n{this.name=name;\r\nthis.place=place;\r\nthis.start=start;\r\nthis.end=end;}\r\npublic void sconvert()\r\n{  string[]arr1=  start.split\"/\";\r\n     string[]arr2 =  end.splite\"/\";\r\nint m1=Integer.parseInt(arr1[0]);\r\nint m2=Integer.parseInt(arr2[0]);\r\nsystem.out.print ( m2-m1  +  \" \"  )\r\n}\r\n}\r\npublic entrips extends trips{\r\nstring sdate;\r\nstring edate;\r\npublic entrips(){\r\nsdate=\"20/12/2018\";\r\nedate=\"30/12/2018\";\r\n}\r\npublic entrips(string sdate , string edate){\r\nthis.sdate=sdate;\r\nthis.edate=edate;\r\n}\r\npublic entrips(string sdate,string edate,string name,string place)\r\n{ this.sdate=sdate;\r\nthis.edate=edate;\r\nthis.name=name;\r\nthis.place =place;\r\n}\r\npublic void econvert()\r\n{  string[]arr3=  sdate.split\"/\";\r\n     string[]arr4 =  edate.splite\"/\";\r\nint m3=Integer.parseInt(arr1[0]);\r\nint m4=Integer.parseInt(arr2[0]);\r\nsystem.out.print ( m4-m3  +  \" \"  )\r\n}\r\n}\r\npublic class ex4{\r\npublic static void main(string[] args)\r\n{ trips t1= new trips();\r\nsctrips t2=new sctrips();\r\nentrips t3=new entrips();\r\n t2.sconvert();\r\nt3.convert();\r\n}\r\n}', 247, 34, 6, '2018-12-03 13:41:34', '2019-01-17 14:26:30'),
(86051, 86, '220', 247, 34, 2, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86052, 88, '227', 247, 34, 0, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86053, 89, '233', 247, 34, 0, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86054, 90, '234', 247, 34, 2, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86055, 91, '236', 247, 34, 1, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86056, 92, '239', 247, 34, 0, '2018-12-03 13:41:35', '2018-12-03 13:41:35'),
(86137, 85, 'public  class trip{\r\nString  name;\r\nString place; \r\ntotal=0;\r\npublic int calculate_day(int total){\r\nreturn total=3+2(end_date-start_date);\r\n}\r\n}\r\npublic class scientific extend trip{\r\nString start_date;\r\nString end_date;\r\npublic get_date(String end_date,String start_date ){\r\nreturn ( end_date-start_date);\r\n}\r\nsuper(name,place);\r\n\r\n}\r\npublic scientific{}\r\n\r\n}\r\n}\r\npublic class entertainment extend trip{\r\nint date ;\r\nsuper(name,place);\r\n\r\npublic int get_period(int date)\r\n{return date;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\npublic static void main(String[] args) { \r\n\r\n\r\n\r\ntrip [] arr=new trip; \r\nfor (int i=0;i<arr.length;i++){\r\narr[i]=new trip();\r\n\r\n}\r\nSystem.out.print(get_period());\r\n{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 341, 34, 3, '2018-12-03 13:41:54', '2019-01-17 14:27:43'),
(86138, 86, '219', 341, 34, 0, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86139, 88, '229', 341, 34, 2, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86140, 89, '232', 341, 34, 0, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86141, 90, '234', 341, 34, 2, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86142, 91, '236', 341, 34, 1, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86143, 92, '238', 341, 34, 0, '2018-12-03 13:41:54', '2018-12-03 13:41:54'),
(86164, 85, 'importjava.util.Date;                                                                                                                                                                                                                                         import java . util.Scanner; \r\npublic class scintefictrip extends Trip{\r\nDate startdate;\r\nDate enddate;\r\n\r\npublic scientifictrip()\r\n{\r\nstartdate =\"1/1/2010\";\r\nenddate=\"1/1/2033\";\r\n}\r\npublic scientifictrip(String n , String p ,String sd , String ed)\r\n{\r\nsuper (n,p);\r\nstartdate=new Date();\r\nenddate =new Date();\r\nsd=startdate.parse(sd);\r\ned=startdate.parse(ed);\r\n}\r\npublic int getPeriod()\r\n{\r\nreturn enddate-startdate ;\r\n}\r\npublic String toString()\r\n{\r\nreturn \"name\"+name +\"place \"+place +(enddate-startdate); \r\n}\r\nsuper.read(n,p,sd,ed);\r\n\r\n________________________________________________________________\r\nimport java.util.Date;\r\npublic class entertainmenttrip extends Trip{\r\nDate date;\r\npublic entertainmenttrip()\r\n{\r\ndate=\"12/1/1234\";\r\n}\r\npublic enmtertainmenttrip(String n , String p , String datee )\r\n{\r\nsuper (n , p);\r\ndate =new Date ();\r\ndate =date.parse(date);\r\n}\r\n\r\npublic String toString()\r\n{\r\nreturn \"name\"+name +\"place \"+place +\"date\"+date; \r\n}\r\nsuper.read(n,p,date);\r\n______________________________________________________________\r\npublic static void main (String [] args )\r\n{\r\n\r\nTrip t1 =new Trip();\r\nTrip t2 =new Trip(\"ahmed \", \"hurghada\");\r\nentertainmenttrip e1 =new entertainmenttrip();\r\nentertainmenttrip e2 =new entertainmenttrip(\"sal\",\"wadyelryan\",\"1/1/2010\");\r\nscientifictrip s1 =new scientifictrip();\r\nscientifictrip s2 =new scientifictrip(\"ahmed \", \"hur\",\"1/1/2018\",\"1/2/2018\");\r\nSystem.out.println (Trip);\r\nSystem.out.println (entertainmenttrip);\r\nSystem.out.println(scientifictrip);              \r\nSystem.out.println(scientifictrip.getPeriod());                                                                                                                                                                                                           \r\n}\r\npublic class Trip{\r\nString name ;\r\nString place ;\r\npublic Trip()\r\n{\r\n\r\n}\r\npublic Trip(String n , String p)\r\n{\r\nname=n;\r\nplace =p;\r\n}\r\npublic int getPeriod()\r\n{\r\nreturn Period ;\r\n}\r\npublic void read ()\r\n{\r\n\r\nScanner input =new Scanner (system.in);\r\nname=input.nextLine();\r\nplace=input.nextLine();\r\n\r\nstartdate=input.nextLine();\r\nenddate=input.nextLine();\r\ndate=input.nextLine();\r\n}', 296, 34, 5, '2018-12-03 13:42:00', '2019-01-17 14:33:26'),
(86165, 86, '220', 296, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86166, 88, '227', 296, 34, 0, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86167, 89, '230', 296, 34, 0, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86168, 90, '234', 296, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86169, 91, '237', 296, 34, 0, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86170, 92, '241', 296, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86178, 85, 'class scientific()\r\n           {\r\n         String name;\r\n        String place;\r\n        String start-date;\r\n       String end-date;\r\npublic scientific(String n , String p , String s-d, String e-d)\r\n{\r\nname =n;\r\nplace = p;\r\nstart-date =s-d;\r\nend-date =e-d;\r\n}\r\n  public int getperiod ()\r\n{\r\n\r\nreturn start-date  - end-date ;\r\n}\r\n\r\n            }                        \r\n\r\n\r\nclass entertainment()\r\n{\r\n\r\nString date;\r\nString name;\r\nString place;\r\npublic entertainment(String n , String p , String s-d)\r\n{\r\nname =n;\r\nplace = p;\r\nstart-date =s-d;\r\n}\r\npublic getperoid()\r\n{\r\nreturn date\r\n}\r\n\r\n\r\n}               \r\npublic static void main(string[] args)\r\n{\r\nscientific s1= new scientific(Eslam, Assuit,14/10/2018,16/10/2018);\r\nscientific s2= new scientific(Ahmed,Qina,20/10/2018,25/10/2018);\r\n entertainment e1 = new  entertainment(John,Sohag,14/10/2018);\r\nentertainment e2 = new  entertainment(Mohamed,Alix,15/11/2018);\r\nentertainment e3 = new  entertainment(Mahamooud,Cairo,20/12/2018);\r\n\r\nSystem.out.printlin(s1.getperiod+ s2.getperiod+ e1.getperiod+ e2.getperiod+ e3.getperiod);\r\n\r\n\r\n\r\n\r\n\r\n}', 315, 34, 7, '2018-12-03 13:42:00', '2019-01-17 14:35:32'),
(86179, 86, '220', 315, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86180, 88, '229', 315, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:00'),
(86181, 89, '233', 315, 34, 0, '2018-12-03 13:42:00', '2018-12-03 13:42:01'),
(86182, 90, '234', 315, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:01'),
(86183, 91, '236', 315, 34, 1, '2018-12-03 13:42:00', '2018-12-03 13:42:01'),
(86184, 92, '241', 315, 34, 2, '2018-12-03 13:42:00', '2018-12-03 13:42:01'),
(86239, 85, 'string name,place;\r\nint x=0;\r\n  public class trip{\r\n   public trip (string s,string p)\r\n{\r\nx++;\r\nstring name=n;\r\nstring place=p;\r\n\r\n}\r\n***************                                                                                                          \r\n public scientific extends trip(,string n,string p,int s,int e)\r\n{\r\nint start,end;\r\nint day=e-s;\r\npublic void showdays()\r\n{\r\n\r\nsystem .out .println(\"no of days =\"+day)\r\n}\r\npublic void int showtrips()\r\n{\r\nSystem .out. println (\"no of trips = \"+x);\r\n} \r\n *****************\r\n public entertaiment extends trip()\r\n{\r\n\r\nint y=0;\r\nint d=0;\r\npublic entertainment()\r\n{\r\ny++;\r\n\r\n}\r\n\r\npublic void showdays1()\r\n{\r\nsystem .out .println(\"no of days =\"+d)\r\n}\r\npublic void int showtrips1()\r\n{\r\nSystem .out. println (\"no of trips = \"+y);\r\n} \r\n \r\n{\r\ny++;\r\nint ndays++;\r\n}\r\n\r\n}                                                 \r\npublic static void main(String[] args) {\r\n\r\nscientfic s=new scientfic(ahmed,cairo,22,24);\r\nscientfic s1=new scientfic(ali,cairo,22,25);\r\nentertainment e=new entertainment(ss,cairo);\r\nentertainment e1=new entertainment(ee,alex);\r\nentertainment e2=new entertainment(ww,alex);\r\n}\r\n}\r\n}\r\n}', 373, 34, 3, '2018-12-03 13:42:06', '2019-01-17 14:36:22'),
(86240, 86, '220', 373, 34, 2, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86241, 88, '226', 373, 34, 0, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86242, 89, '232', 373, 34, 0, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86243, 90, '234', 373, 34, 2, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86244, 91, '236', 373, 34, 1, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86245, 92, '241', 373, 34, 2, '2018-12-03 13:42:06', '2018-12-03 13:42:06'),
(86277, 85, 'pakage fci;\r\nimport java.util.Scanner;\r\nimport java.util.Date;\r\npublic class trip{\r\nString name;\r\nString place;\r\npublic void setname(String n){name=n;}\r\npublic void setplace(String p){place=p;}\r\npublic String getname(String n1 ){name=n1;}\r\npublic String getplace(String p1 ){plca=p1;}\r\n}                                                                                                                \r\npublic class scientific extends trip{\r\nString a,b;\r\npublic void seta(String d){a=d;}\r\npublic void setb(String c){b=c;}\r\n}\r\npublic entertainment class  extends trip{\r\n\r\n}\r\npublic class organize{\r\npublic static void main(String[] args) {   \r\nScanner input=new Scanner (System.in);\r\nstatic int numberofdays=0;\r\nscientific []o=new scientific()[2];\r\nentertainment  []o1=new entertainment ()[3];\r\nint s=2,e=3;\r\nwhile(s>0 &&e>0)\r\n{\r\nSystem.out.println(\"choose the type of trip or show list\\n1-scientific\\n2-entertainment\\n3-show\" +\"thelist\");\r\nint x=input.nextInt();\r\nif(x==1 && s>0)\r\n{s--;\r\nSystem.out.println(\"enter the name \");\r\nString n=input.next(); \r\no[s]. setname(n);\r\nSystem.out.println(\"enter the place \");\r\nString p=input.next();\r\no[s]. setplace(p);\r\n}else if(x==2 &&e>0)\r\n{e--;\r\nSystem.out.println(\"enter the name \");\r\nString n=input.next(); \r\no1[e]. setname(n);\r\nSystem.out.println(\"enter the place \");\r\nString p=input.next();\r\no1[e]. setplace(p);\r\nnumberofdays++;\r\nSystem.out.println(\"enter the start date \");\r\nString m=input.next();\r\no1[e].seta(m);\r\nSystem.out.println(\"enter the end date \");\r\nString fm=input.next();\r\no1[e].setb(f);\r\n}else if(x==3)\r\n{\r\n\r\n}\r\n\r\n\r\n}\r\n}\r\n}', 236, 34, 5, '2018-12-03 13:42:12', '2019-01-17 14:40:34'),
(86278, 86, '218', 236, 34, 0, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86279, 88, '229', 236, 34, 2, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86280, 89, '233', 236, 34, 0, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86281, 90, '234', 236, 34, 2, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86282, 91, '236', 236, 34, 1, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86283, 92, '241', 236, 34, 2, '2018-12-03 13:42:12', '2018-12-03 13:42:12'),
(86319, 85, 'public class trip{\r\n	protected String name;\r\n	protected String place;\r\n	public static int sumOfDays=0;\r\n\r\npublic trip(){\r\nname=\"trip1\";\r\nplace=\"cairo\";\r\n}\r\npublic trip(String n ,String p){\r\nname=n;\r\nplace=p;\r\n}\r\n\r\n\r\n}\r\npublic class scientific_trip extends trip{\r\n	private String start_date;\r\n	private String end_date;\r\npublic scientific_trip(){\r\nthis(\"1/1/2000\",\"1/5/2000\");\r\n\r\n\r\n}\r\npublic scientific_trip(String s,String e){\r\nstart_date=s;\r\nfinish_date=e;\r\n}\r\npublic scientific_trip(String name,String place,String s,String e){\r\nsuper(name,place);\r\nstart_date=s;\r\nfinish_date=e;\r\n}\r\npublic int getPeriod(String Sday,String Eday){\r\n	String[] days=	Sday.split(\"/\");\r\n	Sday=Integer.parseInt(days[0].trim());\r\n	String[] days=	Eday.split(\"/\");\r\n	Eday=Integer.parseInt(days[0].trim());\r\nint period=Eday-Sday;\r\nsumOfDays+=period;\r\n	return period;\r\n}\r\n\r\n}\r\npublic class entertainment_trip extends trip{\r\n	private String date;\r\n\r\npublic entertainment_trip(){\r\nthis(\"1/1/2000\");\r\n}\r\npublic entertainment_trip(String d){\r\ndate=d;\r\n\r\n}\r\npublic entertainment_trip(String name,String place,String d){\r\nsuper(name,place);\r\n\r\ndate=d;\r\n}\r\npublic int getPeriod(){\r\nint period=1;\r\nsumOfDays+=period;\r\nreturn period;\r\n}\r\n	}\r\npublic class main{\r\n	public static void main(String[] args){\r\nscientific_trip[] s1=new scientific_trip[2];\r\nfor(int i=0;i<s1.length;i++)\r\n{\r\n	s1[i] = new scientific_trip();\r\n}\r\nfor(int i=0;i<s1.length;i++)\r\n{\r\n	System.out.print(s1[i].getPeriod(\"1/1/2000\",\"2/2/2000\"));\r\n}\r\n	\r\n	entertainment_trip[] e1 = new entertainment_trip[3];\r\nfor(int i=0;i<e1.length;i++){	\r\n	e1[i]= new entertainment_trip();\r\n}\r\nfor(int i=0;i<e1.length;i++)\r\n{\r\n	System.out.print(e1[i].getPeriod());\r\n}\r\nSystem.out.println(\"total number of days\"+trip.sumOfDays);\r\n\r\n}\r\n}', 256, 34, 9, '2018-12-03 13:42:17', '2019-01-17 14:42:45'),
(86320, 86, '220', 256, 34, 2, '2018-12-03 13:42:17', '2018-12-03 13:42:17'),
(86321, 88, '227', 256, 34, 0, '2018-12-03 13:42:17', '2018-12-03 13:42:18'),
(86322, 89, '232', 256, 34, 0, '2018-12-03 13:42:17', '2018-12-03 13:42:18'),
(86323, 90, '235', 256, 34, 0, '2018-12-03 13:42:17', '2018-12-03 13:42:18'),
(86324, 91, '236', 256, 34, 1, '2018-12-03 13:42:17', '2018-12-03 13:42:18'),
(86325, 92, '240', 256, 34, 0, '2018-12-03 13:42:17', '2018-12-03 13:42:18'),
(86354, 85, 'public class trip {\r\nint start;\r\nint end;\r\nsting name;\r\nstring place;\r\n\r\npublic void read ()\r\n{\r\nscanner input =new scanner(system.in);\r\n\r\nsystem . out .println(       \"enter the name of the trip and   enter the date of the start day   then   enter the date of the end day        \" );\r\n\r\nDate d = new date ();\r\nsystem . out .println (       \"    the date of this day =  \"+d   );\r\nstring name = input . next line;\r\nint start = input.next int();\r\nint end =  input.next int();\r\n\r\n}\r\n\r\n}\r\n\r\n\r\npublic static void main ( string [ ] args ) { \r\n\r\ntrip [ ] arr = new trip [5];\r\nfor ( int i=0; i<arr.length; i++)\r\n{\r\narr[i]=new trip();\r\narr[i].read;\r\nint z=0 , y=o;\r\nz= end - start;\r\ny=y+z;\r\n\r\n\r\n}\r\nsystem . out .println(     \" the total no. of day of all trip =  \" + y  );\r\n\r\n\r\n\r\n}', 235, 34, 2, '2018-12-03 13:42:22', '2019-01-17 15:44:38'),
(86355, 86, '218', 235, 34, 0, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86356, 88, '227', 235, 34, 0, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86357, 89, '233', 235, 34, 0, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86358, 90, '234', 235, 34, 2, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86359, 91, '237', 235, 34, 0, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86360, 92, '241', 235, 34, 2, '2018-12-03 13:42:22', '2018-12-03 13:42:23'),
(86442, 85, NULL, 343, 34, 0, '2018-12-03 13:42:40', '2019-01-22 15:52:29'),
(86443, 86, '218', 343, 34, 0, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86444, 88, '227', 343, 34, 0, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86445, 89, '233', 343, 34, 0, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86446, 90, '234', 343, 34, 2, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86447, 91, '236', 343, 34, 1, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86448, 92, '241', 343, 34, 2, '2018-12-03 13:42:40', '2019-01-22 15:35:31'),
(86463, 85, 'public class fci_trips()\r\n{\r\nString name;\r\nString place;\r\npublic fci_trips()\r\n{\r\n}\r\npublic fci_trips(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n\r\n}\r\n}\r\npublic class scientific extends aci_trip()\r\n{\r\nString start_date;\r\nString end_date;\r\n\r\npublic scientific()\r\n{\r\n\r\n}\r\npublic scientific(String n,String p,String st,String ed)\r\n{\r\nsuper(n,p);\r\nstart_date=st;\r\nend_date=ed;\r\n}\r\npublic void setperiod(int number_of_date)\r\n{\r\n number_of_date=end_day-start_day;\r\n\r\nday=number_of_date;\r\n\r\n}\r\npublic int getperiod()\r\n{\r\n\r\nreturn number_of_date;\r\n\r\n}\r\n}\r\npublic class enterainment extends fci_trip()\r\n{\r\nString date;\r\n\r\npublic enterainment()\r\n{\r\n\r\n}\r\npublic enterainment(String n,String p,String d)\r\n{\r\nsuper(n,p);\r\ndate=d;\r\n}\r\npublic int getperiod()\r\n{\r\nreturn 1;\r\n}\r\n}\r\n\r\nimport java.utile;\r\npublic static void main(String[] args)\r\n{\r\nfci_trips t1=new fci_trips ();)\r\n\r\n\r\n\r\n\r\n\r\n}\r\npublic static int  calcdays() \r\n{\r\nint result;\r\nresult=2*(end_day-start_day)+3*1;\r\nreturn result;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 238, 34, 6, '2018-12-03 13:42:52', '2019-01-17 15:45:56'),
(86464, 86, '218', 238, 34, 0, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86465, 88, '227', 238, 34, 0, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86466, 89, '232', 238, 34, 0, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86467, 90, '234', 238, 34, 2, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86468, 91, '236', 238, 34, 1, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86469, 92, '241', 238, 34, 2, '2018-12-03 13:42:52', '2018-12-03 13:42:52'),
(86480, 85, 'public class  {\r\n\r\nimport java.util.scanner;\r\n public class trips{\r\nprivate String name;\r\nprivate String place;\r\n}\r\npublic trips(){\r\n}\r\npublic trips(String n ,String p){\r\nname=n;\r\nplace=p;\r\n}\r\npublic void set_name (String n)\r\n{\r\nname=n;\r\n} \r\npublic void set_place (String p)\r\n{\r\nplace=p;\r\n}\r\npublic String get_name ()\r\n{\r\nreturn name;\r\n}\r\npublic String get_place(){\r\nreturn place;\r\n}\r\npublic class scientific extends trips{\r\nsuper(String n,String p);\r\n\r\n\r\n}\r\npublic class entertainment extends trips{\r\nsuper(String n,String p);\r\n}\r\n                                                                                                           \r\npublic static void main(String [ ]args)\r\n{\r\n\r\n\r\n\r\n\r\n\r\n}', 337, 34, 3, '2018-12-03 13:42:55', '2019-01-17 15:46:56');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(86482, 86, '219', 337, 34, 0, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86484, 88, '229', 337, 34, 2, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86486, 89, '232', 337, 34, 0, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86488, 90, '234', 337, 34, 2, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86489, 91, '236', 337, 34, 1, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86490, 92, '238', 337, 34, 0, '2018-12-03 13:42:55', '2018-12-03 13:42:55'),
(86498, 85, 'package trip;\r\npublic class trip{\r\nString name;String place;\r\ntrip(String n,String p){\r\nname=n;\r\nplace=p;\r\n}\r\n}public class scientific  extends trip{    \r\nString  start;\r\nString end;    \r\npublic scientific (String n,String p,String s,String  e  ){\r\nsuper(n,p);\r\nstart =s;\r\nend=e;\r\n}\r\npublic int getPeriod(String s,String e){\r\nString a1,a2,a3;\r\nString b1,b2,b3;\r\nString []a=new s.split(\"-\");\r\nfor(int i=0;i<a.length;i++){\r\na1=a[0];a2=a[2];a3=a[3];}\r\nString []b=new s.split(\"-\");\r\nfor(int i=0;i<b.length;i++){\r\nb1=b[1];b2=b[2];b3=b[3];}\r\nint x1=Integer.paseInt(\"a1\");\r\nint z1=Integer.paseInt(\"b1\");\r\nint x2=Integer.paseInt(\"a2\");\r\nint z2=Integer.paseInt(\"b2\");\r\nif(x2<z2)\r\nz1+=(30-x1);\r\nelse\r\nz1=z1-x1+1;\r\nreturn z1;}\r\n}\r\npublic class entertainment extends trip{    \r\nString date;   \r\npublic entertainment (String n,String p,String d  ){\r\nsuper(n,p);\r\ndate=d;\r\n}}\r\npackage trip;\r\nimport java.util.Scanner;\r\npublic static void main(String[] args) {\r\nScanner input=new Scanner (System.in);\r\nentertainment s=new entertainment(lon,london,3-12-2018);\r\nentertainment t=new entertainment(lox,luxor,3-1-2019);\r\nentertainment u=new entertainment(axe,axendare,4-1-2019);\r\nscientific k=new scientific(ca,cairo,4-12-2018,6-12-2018);\r\nSystem.out.println(k.getPeroid());\r\nint m =k.getPeroid();\r\nscientific y=new scientific(fa,fayom,28-12-2018,1-1-2019);\r\nSystem.out.println(y.getPeroid());\r\nint l=y.getPeroid();\r\nSystem.out.println(l+m+3);\r\n}', 284, 34, 8, '2018-12-03 13:42:56', '2019-01-17 15:48:33'),
(86499, 86, '220', 284, 34, 2, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86500, 88, '227', 284, 34, 0, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86501, 89, '232', 284, 34, 0, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86502, 90, '234', 284, 34, 2, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86503, 91, '236', 284, 34, 1, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86504, 92, '241', 284, 34, 2, '2018-12-03 13:42:56', '2018-12-03 13:42:56'),
(86512, 85, 'public class Faculty {\r\nimport java.util.Scanner ;\r\npublic static void main(String  [] args){\r\nTrips t=new Trips() ;\r\nt.setname(\"hhhh\") // for exam ;\r\nt.setplace(\" jjjj\")  // for exam ;\r\n\r\n\r\n}\r\n} \r\nclass Trips{\r\nprivate String name ;\r\nprivate String place ;\r\npublic Trips()\r\n{\r\n}\r\npublic void setname(String n){\r\nname=n ;\r\n}\r\npublic void setplace(String p){\r\nplace=p;\r\n}\r\n\r\n}\r\nclass Scientific extend Trips {\r\nprivate static final int  num_S=2 ;\r\nprotected  int no_day_s ;\r\npublic void setnumofdays (int n)\r\n{\r\n no_day_s =n ;\r\n}\r\npublic int getnumofdays ()\r\n{\r\nreturn  no_day_s ;\r\n}\r\npublic int sum_of_ds()\r\n{\r\n\r\nreturn 2* no_day_s ;\r\n}\r\n\r\n}\r\nclass Entertainment  extend Trips {\r\nprivate static  final int  num_E=3 ;\r\nprotected int n_day_E ;\r\npublic void setnumofdayE (int n)\r\n{\r\n no_day_s =n ;\r\n}\r\npublic int getnumofdaye ()\r\n{\r\nreturn  no_day_E ;\r\n}\r\npublic int sum_of_de()\r\n{\r\n\r\nreturn 3* n_day_E ;\r\n}\r\n\r\n\r\n\r\n\r\n}', 390, 34, 5, '2018-12-03 13:43:00', '2019-01-17 15:50:50'),
(86513, 86, '219', 390, 34, 0, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86514, 88, '229', 390, 34, 2, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86515, 89, '232', 390, 34, 0, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86516, 90, '234', 390, 34, 2, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86517, 91, '236', 390, 34, 1, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86518, 92, '238', 390, 34, 0, '2018-12-03 13:43:00', '2018-12-03 13:43:01'),
(86523, 85, 'public class Faculty{\r\n\r\n\r\nimport java.util.Scanner;\r\nstatic Scanner input=new Scanner(System.in);\r\npublic class Trip {\r\n protected String name;\r\n protected String place;\r\n\r\npublic Trip ()\r\n{\r\n}\r\npublic Trip( String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n\r\n}\r\n\r\npublic static void set_name(String n){\r\nname=n;\r\n\r\n}\r\npublic static void set_place(String p){\r\nplace=p;\r\n\r\n\r\n}\r\npublic static String get_name()\r\n{\r\nreturn name;\r\n}\r\npublic static  String get_place()\r\n{\r\nreturn place;\r\n}\r\npublic static int get_period()\r\n{\r\n\r\n}\r\n}\r\n\r\npublic class Scientific Trip extends Trip {\r\n private string start_date;\r\n private String end_date;\r\n\r\npublic Scientific Trip()\r\n{\r\n}\r\npublic Scientific Trip (String n,String p,String d,String day )\r\n{\r\nsuper (n,p);\r\nstart_date=d;\r\nend_date=day;\r\n\r\n\r\n}\r\npublic static void set_start_date(String d )\r\n{\r\nstart_date=d;\r\n\r\n}\r\n\r\npublic static void set_end_date(String d )\r\n{\r\nend_date=d;\r\n\r\n}\r\npublic static String get_start_date( )\r\n{\r\nreturn start_date;\r\n\r\n}\r\npublic static String get_end_date( )\r\n{\r\nreturn end_date;\r\n\r\n}\r\npublic static int get_period()\r\n{\r\nreturn ( end_date)_(start_date);\r\n}\r\n}\r\npublic class Entertainment Trip extends Trip {\r\n\r\nprivate String date;\r\n\r\npublic Entertainment Trip()\r\n{\r\n}\r\n\r\npublic Entertainment Trip(String n,String p,String d  )\r\n{\r\nsuper (n,p);\r\ndate=d;\r\n\r\n}\r\n\r\npublic static void set_date( String d)\r\n{\r\ndate=d;\r\n}\r\n\r\npublic static String get_date( )\r\n{\r\nreturn date;\r\n}\r\n\r\n\r\npublic static int get_period()\r\n{\r\nreturn 1;\r\n}\r\n\r\n\r\n}\r\npublic static void main ( String [ ]  args ){\r\n\r\n\r\n Trip t=new Scientific Trip;\r\n Trip tr=new Scientific Trip;\r\n\r\nTrip e=new  Entertainment Trip ;\r\nTrip p=new  Entertainment Trip ;\r\nTrip c=new  Entertainment Trip ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n}', 336, 34, 7, '2018-12-03 13:43:05', '2019-01-17 15:54:12'),
(86524, 86, '219', 336, 34, 0, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86525, 88, '229', 336, 34, 2, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86526, 89, '232', 336, 34, 0, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86527, 90, '235', 336, 34, 0, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86528, 91, '236', 336, 34, 1, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86529, 92, '238', 336, 34, 0, '2018-12-03 13:43:05', '2018-12-03 13:43:05'),
(86600, 85, 'public class Trip\r\n{\r\n protected String name;  protected String place; static int list trip=0; public Trip(){   name=\" aaa \"; place=\"Assuit\";           } public Trip(String n,String p){ name=n; place=p;       }              } \r\n\r\npublic class scientific extends Trip{protected  String start date;  protected  String end date;   scientific( ){start date=\"1-1-2012\" ; end date=\"23-1-2012\";    list trip++;     }; scientific(String sd,String ed){  start date=sd; end date=ed;  list trip++;} scientific(String n,String p,String sd,String ed){  super(n,p);   start date=sd; end date=ed; list trip++;}         }    public int getPeriod(String d){ String j[ ]=d.split(\"-\");\r\nreturn Integer.parseInt(j[0]);        }             }\r\npublic class entertainment extends Trip{ protected String date;    entertainment(){   date=\"11-2-2012\";  list trip++;     } entertainment(String d){  date=d;} entertainment(String n,String p,String d){  super(n,p); date=d; list trip++; }        public int (String d1,String d2){  String [ ]a=d1.split(\"-\"); d1=Integer.parseInt(a[0]); String [ ]z=d2.split(\"-\"); d2=Integer.parseInt(z[0]); return d2-d1;                                      }                                                                              }\r\n public static void main(String[ ] args)\r\n{   scientific r=new scientific(\"sss\",\"123\",\"1-12-2018\",3-1-2018\");        scientific t=new scientific(\"ddd\",\"234\",23-3-2018\",12-4-2018\");    entertainment y=new entertainment(\"qqq\",\"111\",\"12-9-2018\");       entertainment b=new entertainment(\"fff\",332\",\"11-10-2018\");\r\nentertainment m=new entertainment(\"eee\",\"443\",\"23-12-2018\");       \r\n    System.out.print(b.list trip);\r\nint i=0;\r\ni+=r.getPeriod+ t.getPeriod+y.getPeriod+b.getPeriod+m.getPeriod;                                }', 291, 34, 6, '2018-12-03 13:43:21', '2019-01-17 15:58:17'),
(86601, 86, '220', 291, 34, 2, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86602, 88, '229', 291, 34, 2, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86603, 89, '233', 291, 34, 0, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86604, 90, '234', 291, 34, 2, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86605, 91, '236', 291, 34, 1, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86606, 92, '241', 291, 34, 2, '2018-12-03 13:43:21', '2018-12-03 13:43:21'),
(86614, 85, 'import java.utile.scanner;\nclass trip{\nstring name ;\nstring place;\npublic void setname(string n){\nname = n;\n}\npublic getname(){\nreturn name;\n}\n}                                                                                                                \nclass scientific extends trip{\nint startdate;\nint enddate;\npublic void setstartdate(int s){\nstartdate = s;\n}\npublic void setendrtdate(int e){\nstartdate = e;\n}\npublic int getstartdate(){\nreturn startdate;\n}\npublic int getenddate(){\nreturn enddate;\n}\npublic int getperiod(){\nreturn enddate - startdate ;\n}\n}\nclass entertainment extends trip{\nint datename;\npublic int getperiod(){\nreturn 1;\n}\n}\npublic class c{\npublic static void main(string[] args){\nscientific s1 = new scientific;\nscientific s2 = new scientific;\nentertainment e1 = new entertainment;\nentertainment e2 = new entertainment;\nentertainment e3 = new entertainment;\nscanner input = new scanner;\ns1.setname = input.next();\ns2.setname = input.next();\ne1.setname = input.next();\ne2.setname = input.next();\ne3.setname = input.next();\ns1.setstartdate = input.nextint();\ns1.setenddate = input.nextint();\ns2.setstartdate = input.nextint();\ns2.setenddate = input.nextint();\nsystem.out.println(s1.getname);l\nsystem.out.println(s2.getname);\nsystem.out.println(e1.getname);\nsystem.out.println(e2.getname);\nsystem.out.println(e3.getname);\nsystem.out.println(s1.getperiod + s2.getperiod + e1.getperiod+ e2.getperiod+ e3.getperiod);\n\n}\n}', 231, 34, 7, '2018-12-03 13:43:25', '2019-01-20 15:47:34'),
(86615, 86, '220', 231, 34, 2, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86616, 88, '229', 231, 34, 2, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86617, 89, '230', 231, 34, 0, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86618, 90, '234', 231, 34, 2, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86619, 91, '236', 231, 34, 1, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86620, 92, '241', 231, 34, 2, '2018-12-03 13:43:25', '2018-12-03 13:44:24'),
(86628, 85, 'public class trip{\r\nString name;\r\nString place;\r\npublic trip(){\r\nname=;\r\n\r\n\r\n\r\n}\r\npublic class scientific trip extends trip{\r\nString \r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 372, 34, 1, '2018-12-03 13:43:26', '2019-01-17 15:59:29'),
(86629, 86, '219', 372, 34, 0, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86630, 88, '229', 372, 34, 2, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86631, 89, '232', 372, 34, 0, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86632, 90, '234', 372, 34, 2, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86633, 91, '237', 372, 34, 0, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86634, 92, '241', 372, 34, 2, '2018-12-03 13:43:26', '2018-12-03 13:43:26'),
(86667, 85, 'package Fci;\r\npublic class Trip{\r\nprotected String name;\r\nprotected String place;\r\nprotected static int days;\r\npublic Trip()\r\n{\r\nname=\"fciStudent\";\r\nplace=\"cairo\";\r\ndays=0;\r\n}\r\npublic Trip(String name , String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic class scientificTrip extends Trip\r\n{\r\nprivate String startDate;\r\nprivate String endDate;\r\npublic scientificTrip()\r\n{\r\nstartDate=\"1/1/2011\";\r\nendDate=\"5/1/2011\";\r\n} \r\npublic scientificTrip(String startDate , String endDate)\r\n{\r\nthis.startDate=startDate ;\r\nthis.endDate=endDate;\r\n}\r\npublic scientificTrip(String name , String place , String startDate , String endDate)\r\n{\r\nsuper(name,place);\r\nthis.startDate=startDate ;\r\nthis.endDate=endDate;\r\n}\r\npublic int getPeriod(String startDate , String endDate)\r\n{\r\nint [] arrofstartDate=new int[3];\r\nint [] arrofendDate=new int[3];\r\nfor(int i=0;i<3;i++)\r\n{\r\narrofstartDate[i]=Integer.parseInt(startDate.split(\"/\").trim())\r\n}\r\nfor(int j=0;j<3;j++)\r\n{\r\narrofendDate[j]=Integer.parseInt(endDate.split(\"/\").trim())\r\n}\r\nint sum=0 ;\r\nsum= ((arrofendDate[0] - arrofstartDate[0]) + ((arrofendDate[1] - (arrofstartDate[1])*30) + ((arrofendDate[2] - (arrofstartDate[2])*30*12)));\r\nsuper.days=super.days+sum;\r\nreturn sum ;\r\n}\r\npublic class entertainmentTrip extends Trip\r\n{\r\nprivate String date ;\r\npublic entertainmentTrip()\r\n{\r\ndate=\"1/2/2011\";\r\nsuper.days++;\r\n}\r\npublic entertainmentTrip(String date)\r\n{\r\nthis.date=date;\r\n}\r\npublic entertainmentTrip(String name , String place , String date)\r\n{\r\nsuper(name,place);\r\nthis.date=date;\r\n}\r\n}\r\n}\r\n}    \r\npackage Fci;\r\n{\r\nimport java.util.*;\r\npublic class Fci\r\n{\r\npublic static void main(string [] args)\r\n{\r\nscietificTrip sc1=new scietificTrip (\"10/1/2018\",\"15/1/2018\");\r\nscietificTrip sc2=new scietificTrip (\"12/1/2018\",\"18/1/2018\");\r\nentertainmentTrip et1=new scietificTrip (\"12/5/2018\");\r\nentertainmentTrip et2=new scietificTrip (\"16/5/2018\");\r\nentertainmentTrip et3=new scietificTrip (\"18/5/2018\");\r\nSystem.out.println(\"the total number of days:\"+Trip.days)\r\n\r\n}\r\n}\r\n}', 417, 34, 6, '2018-12-03 13:43:33', '2019-01-20 15:40:23'),
(86668, 86, '219', 417, 34, 0, '2018-12-03 13:43:33', '2018-12-03 13:43:33'),
(86669, 88, '229', 417, 34, 2, '2018-12-03 13:43:33', '2018-12-03 13:43:33'),
(86670, 89, '231', 417, 34, 2, '2018-12-03 13:43:33', '2018-12-03 13:43:33'),
(86671, 90, '234', 417, 34, 2, '2018-12-03 13:43:33', '2018-12-03 13:43:33'),
(86672, 91, '236', 417, 34, 1, '2018-12-03 13:43:33', '2018-12-03 13:43:34'),
(86673, 92, '241', 417, 34, 2, '2018-12-03 13:43:33', '2018-12-03 13:43:34'),
(86701, 85, 'package java ;\r\nimport java.util.Scanner; \r\npublic class program ;\r\n\r\npublic class  trip {\r\npublic trip () {\r\nprivate string name;\r\nprivate string place;\r\n}\r\npublic void settrip (string name , string place){\r\nthis.name=name;\r\nthis.place=place;\r\n} \r\npublic string gettrip(){\r\nreturn name;\r\n\r\n}\r\npublic string gettrip(){\r\nreturn place ;\r\n}\r\n\r\n}\r\npublic class scientific extends trip {\r\npublic scientific (){\r\nint start_date;\r\nint end_date;\r\n\r\npublic int getperiod1 (int day){\r\n;int day =day ;\r\nreturn day;\r\n}\r\n}\r\npublic class entertainment extends trip {\r\npublic entertainment (){\r\nint date ;\r\n\r\n\r\n}\r\n\r\npublic int getperiod2 (int day){\r\nint day = day\r\nreturn day;\r\n}\r\n\r\n public static void main(string[] args){\r\n\r\nScanner inp =new Scanner (System.in);\r\ntrip H=new trip ();\r\nH.settrip(Ahmed , Alex);\r\n\r\nscientific A =new scientific ();\r\nscientific B =new scientific ();\r\n\r\nentertainment C =new entertainment ();\r\nentertainment D= new entertainment ():\r\nentertainment F= new entertainment ():\r\n\r\n\r\nint Number = getperiod1(2) + getperiod2(3);\r\n System.out.println(\"number of day is\" +Number); \r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 229, 34, 6, '2018-12-03 13:43:44', '2019-01-20 15:41:26'),
(86702, 86, '220', 229, 34, 2, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86703, 88, '229', 229, 34, 2, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86704, 89, '233', 229, 34, 0, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86705, 90, '234', 229, 34, 2, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86706, 91, '236', 229, 34, 1, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86707, 92, '240', 229, 34, 0, '2018-12-03 13:43:44', '2019-01-22 15:35:31'),
(86725, 85, 'public class trips{\nstring name;\nstring place;\n\n\npublic trips()\n{name=\"ahmed\";\n  place=\"alx\";\n}\npublic trips(int name,int place)\n{this.name=name;\nthis.place=place;\n}\n}\npublic class sctrips extends trips{\nstring start;\nsrting end:\npublic script()\n{\nstart=\"5/12/2018\";\nend=\"6/12/2018\";\n\n\n\npublic sctrips(string start,string end)\n{\nthis.star=star;\nthis.end=end;\n}\npublic sctrips(\n\n\n\npublic class entrips extends trips{\nstring \nstring \n\n\n\n\npublic class ex1{\npublic static void main(string[ ]args)\n{', 248, 34, 5, '2018-12-03 13:43:47', '2019-01-20 15:44:09'),
(86727, 86, '220', 248, 34, 2, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86729, 88, '226', 248, 34, 0, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86731, 89, '233', 248, 34, 0, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86733, 90, '234', 248, 34, 2, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86734, 91, '236', 248, 34, 1, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86735, 92, '238', 248, 34, 0, '2018-12-03 13:43:47', '2018-12-03 13:43:47'),
(86864, 85, 'package ask;\r\nimport java.util.*;\r\n\r\npublic class Trip{\r\n String name ;\r\n String place ;\r\n\r\npublic Trip(){}\r\npublic Trip (String name , String place ){\r\nthis.name =name ;\r\nthis.place = place;\r\n}\r\n\r\n//public String getPeriod (){}\r\n\r\n}\r\n\r\npublic class Scientific extends Trip {\r\n String startDate ;\r\n String endDate ;\r\n//Date startDate;\r\n//Date endDate;\r\npublic Scientific (){}\r\n\r\npublic Scientific(String name ,String place , String  startDate , String  endDate ){\r\n  super (name , place );\r\n  this.startDate = startDate;\r\n  this.endDate = endDate; \r\n}\r\npublic String getPeriod (){\r\n\r\nreturn endDate - startDate ;\r\n\r\n}\r\n}\r\n\r\npublic class Entertainment extends Trip {\r\n String date;\r\n//Date date;\r\npublic Entertainment (){}\r\n\r\npublic entertainment(String name ,String place , String  date ){\r\n  super (name , place );\r\n  this.date =date;\r\n \r\n}\r\npublic String getPeriod (){\r\n\r\nreturn 1 ;\r\n\r\n}\r\n}\r\n\r\npublic class Main{\r\npublic static void main (string [] a) {\r\nScanner s= new Scanner(System.in);\r\nString name = s.next ;\r\nString place = s.next ;\r\nString startDate = s.next ;\r\nString endDate = s.next ;\r\nString date ;\r\n\r\nScientific s1 = new Scientific(name , place , startDate , endDate );\r\nScientific s2 = new Scientific(name , place , startDate , endDate);\r\n\r\nEntertainment e1 = new Entertainment(name , place , date);\r\nEntertainment e2 = new Entertainment(name , place , date);\r\nEntertainment e3 = new Entertainment(name , place , date);\r\n\r\nint x = Integer. parseInt (s1.getPeriod ());\r\nint y = Integer. parseInt (s2.getPeriod ());\r\nint z = Integer. parseInt (e1.getPeriod ());\r\nint d = Integer. parseInt (e2.getPeriod ());\r\nint t = Integer. parseInt (e3.getPeriod ());\r\nint n =x +y+z+ d+t ;\r\nSystem.out .println (\" The total number of days : \" + n );\r\n\r\n}', 285, 34, 8, '2018-12-03 13:44:03', '2019-01-20 15:46:01'),
(86865, 86, '220', 285, 34, 2, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86866, 88, '227', 285, 34, 0, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86867, 89, '233', 285, 34, 0, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86868, 90, '234', 285, 34, 2, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86869, 91, '236', 285, 34, 1, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86870, 92, '239', 285, 34, 0, '2018-12-03 13:44:03', '2018-12-03 13:44:04'),
(86885, 85, 'package FCI;\r\nimport java.util.*;\r\npublic class trip {\r\n      private String name;\r\n      private String place ;\r\npublic trip(){}\r\npublic trip (String name,String place )\r\n{\r\n    this.name=name;\r\n    this.place=place;\r\n}\r\npublic int getPeriod ( ){}\r\n}\r\npublic class scientific trip extends trip {\r\n   private String startDate;\r\n   private String endDate;\r\npublic  scientific trip(){}\r\npublic  scientific trip(String name,String place , String startDate , String endDate ){\r\n     super(name,place);\r\n     this.startDate=startDate;\r\n     this.endDate=endDate;\r\n}\r\npublic int getPeriod ( String startdate , String endDate)\r\n{\r\n      return (endDate - startDate);\r\n}\r\n\r\n}         \r\n\r\npublic class entertainment trip extends trip {\r\n     private String date;\r\npublic entertainment trip (){}\r\npublic entertainment trip (String name,String place , String date){\r\n    super (name,place);\r\n    this.date=date;\r\n\r\n}\r\npublic int getPeriod ()\r\n{\r\n      return 1;\r\n}\r\n} \r\n\r\npublic class program {\r\n   public static void main (String [] args){\r\n           scientific trip s1=new scientific trip(\" Trip 1 \",\" Cairo \",\" 3-12-2018 \",\" 6-12-2018 \");\r\n            scientific trip  s2=new scientific trip(\" Trip 2 \",\" Fayoum \",\" 12-12-2018 \",\" 16-12-2018 \");\r\n           entertainment trip e1 = new entertainment trip (\" Trip A \",\" Alex \",\" 20-12-2018 \");\r\n           entertainment trip e2 = new entertainment trip (\" Trip B \",\" Sinai \",\" 24-12-2018 \");\r\n           entertainment trip e3 = new entertainment trip (\" Trip C \",\" Louxor \",\" 1-1-2018 \");\r\n         \r\n          System.out.println(s1);\r\n          System.out.println(s2);\r\n          System.out.println(e1);\r\n          System.out.println(e2);\r\n          System.out.println(e3);\r\n\r\n         System.out.println(s1.getPeriod(\" 3-12-2018 \",\" 6-12-2018 \"));\r\n         System.out.println(s2.getPeriod(\" 12-12-2018 \",\" 16-12-2018 \"));\r\n         System.out.println(e1.getPeriod());\r\n         System.out.println(e2.getPeriod());\r\n         System.out.println(e3.getPeriod());\r\n\r\n}\r\n\r\n\r\n}', 293, 34, 7, '2018-12-03 13:44:04', '2019-01-20 15:46:49'),
(86886, 86, '219', 293, 34, 0, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(86887, 88, '227', 293, 34, 0, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(86888, 89, '231', 293, 34, 2, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(86889, 90, '234', 293, 34, 2, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(86890, 91, '236', 293, 34, 1, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(86891, 92, '239', 293, 34, 0, '2018-12-03 13:44:04', '2018-12-03 13:44:04'),
(87131, 85, 'public class test{\r\npublic static void main(String[]args){\r\nstatic int numberofdays=0;\r\nScientifictrip t1=new Scientifictrip(\"trip1\",\"museum\",\"10/9/2018\",\"13/9/2018\" );\r\nt1.getperiod();\r\nScientifictrip t2=new Scientifictrip(\"trip2\",\"museum\",\"10/11/2018\",\"14/11/2018\" );\r\nt2.getperiod();\r\nEntertainmenttrip e1=new Entertainmenttrip(\"tripe1\",\"zoo\",\"11/11/207/19\");\r\ne1.getperiod();\r\nEntertainmenttrip e2=new Entertainmenttrip(\"tripe2\",\"zoo\",\"14/12/2018\");\r\ne2.getperiod();\r\nEntertainmenttrip e3=new Entertainmenttrip(\"tripe3\",\"club\",\"5/9/2018\");\r\ne3.getperiod();\r\nSystem.out.print(\"number of days= \"+numberofdays);\r\n}                                                                                                                \r\n }  \r\npublic class Trip{\r\nString name;\r\nString place;\r\npublic Trip(){\r\n}\r\npublic Trip(String name,String place){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n} \r\npublic class Scientifictrip extends Trip{\r\nString startdate ;\r\nString enddate;\r\nString name;\r\nString place;\r\nint z;\r\n\r\npublic Scientifictrip(){\r\n}\r\npublic Scientifictrip(string name,String place,String startdate,String enddate){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\n\r\n}\r\npublic void parse(String startdate,String enddate){\r\nint [] x=new int[3];\r\nint [] y=new int[3];\r\nfor(int i=0;i<x.length;i++){\r\nx[i]=Integer.parseInt(startdate.split(\"/\"));\r\n}\r\nfor(int i=0;i<y.length;i++){\r\ny[i]=Integer.parseInt(enddate.split(\"/\"));\r\n}\r\n z=y[3]-x[3];\r\n}\r\npublic  int getperiod(){\r\nreturn numberofdays+=z;\r\n}\r\n}\r\n\r\npublic class Entertainmenttrip extends Trip{    \r\nString date;\r\nString name;\r\nString place;\r\npublic  Entertainmenttrip(){\r\n}          \r\npublic Entertainmenttrip(string name,String place,String date){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.date=date;\r\n}          \r\npublic  int getperiod(){\r\nreturn numberofday++;                 \r\n}', 294, 34, 7, '2018-12-03 13:44:32', '2019-01-20 15:51:16'),
(87133, 86, '218', 294, 34, 0, '2018-12-03 13:44:32', '2018-12-03 13:44:39'),
(87135, 88, '227', 294, 34, 0, '2018-12-03 13:44:32', '2018-12-03 13:44:40'),
(87137, 89, '230', 294, 34, 0, '2018-12-03 13:44:32', '2018-12-03 13:44:40'),
(87138, 90, '234', 294, 34, 2, '2018-12-03 13:44:32', '2018-12-03 13:44:40'),
(87139, 91, '237', 294, 34, 0, '2018-12-03 13:44:32', '2018-12-03 13:44:40'),
(87140, 92, '241', 294, 34, 2, '2018-12-03 13:44:32', '2018-12-03 13:44:40'),
(87141, 85, 'import java.util.Scanner;                                                                                                                \r\npublic static void main (String []args){\r\nScanner input =new Scanner (System.in)\r\n scientific_trips []arr;\r\n   entertainment_trips []arr2;\r\nfor(int c=0; c=1||c=0;)\r\nSystem.out.print (\" please enter number 1  if it is a scientific trip    \");\r\nSystem.out.println (\" and enter number 0  if it is an entertainment trips   \");\r\nint c=nextInt();\r\nif (c=1)\r\n{\r\nSystem.out.println (\" please enter the name of the trip \");\r\nint i;\r\narr[i].name=nextstring();\r\nSystem.out.println (\" please enter the place of the trip \");\r\narr[i].place=nextstring();\r\ni++;\r\n};\r\nif (c=0)\r\nSystem.out.println (\" please enter the name of the trip \");\r\nint j;\r\narr2[j].name=nextstring();\r\nSystem.out.println (\" please enter the place of the trip \");\r\narr2[j].place=nextstring();\r\nj++;\r\n};\r\nint sum1=(i+1)*3;\r\nint sum2=(j+1);\r\nSystem.out.println(\"the total number of days for all trips =\"+ (sum1+sum2))                                              \r\n}\r\npublic trips {protected String name;\r\nprotected string place;\r\nprotected int date;\r\n class  scientific_trips extends trips{protected double number_of_days;\r\nprotected int fristdate;\r\nprotected int enddate;\r\npublic  scientific_trips{protected double number_of_days=3;} } \r\nclass  entertainment_trips extends trips{protected double number_of_days; \r\nprotected int date;\r\npublic  entertainment_trips{protected double number_of_days=1;} }\r\n}', 252, 34, 2, '2018-12-03 13:44:34', '2019-01-20 15:48:47'),
(87142, 86, '220', 252, 34, 2, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87143, 88, '228', 252, 34, 0, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87144, 89, '230', 252, 34, 0, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87145, 90, '234', 252, 34, 2, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87146, 91, '236', 252, 34, 1, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87147, 92, '241', 252, 34, 2, '2018-12-03 13:44:34', '2018-12-03 13:44:34'),
(87162, 85, 'public  class exam\r\n                  {\r\npublic static void main(String[] args) \r\n{\r\nint total number of days ;\r\nscientific trip a = new scientific trip ();\r\nThe entertainment trip m=new The entertainment trip();\r\n\r\ntotal number of days =2*a.getPeriod(1,2) +3*m.getPeriod (5,9);\r\nSystem.out.print(\" total number of days = \"+total number of days);\r\n}                                                                        \r\n                    public class trips ()\r\n{\r\npublic string place;\r\npublic string name;\r\n\r\npublic trips ()\r\n{\r\n\r\n}\r\n\r\n}                    \r\n\r\n  public class  scientific trip extend  trips (){\r\nint start date;\r\nint end date;\r\n\r\npublic  scientific trip(){\r\nstart date=12;\r\n end date=20;\r\n\r\n\r\n}\r\npublic  scientific trip(string place ,string  name ,int start date,int end date){\r\n\r\n this.name=name;\r\n this.place=place;\r\n this.start date= start date;\r\n this.end date=end date;\r\n}\r\npublic int  getPeriod (int start date , int end date ){\r\n\r\n this.start date= start date;\r\n this.end date=end date;\r\nreturn this.end date-this.start date ;\r\n}\r\n}\r\n\r\n  public class    The entertainment trip extend scientific trip (){\r\n\r\nint day ;\r\n\r\n\r\n public    The entertainment trip(){\r\n\r\n start date=1;\r\nend date=2;\r\n}\r\npublic int  getPeriod (int start date , int end date ){\r\n\r\n this.start date= start date;\r\n this.end date=end date;\r\nreturn  this.start date-this.end date ;\r\n\r\n}\r\n\r\n}', 314, 34, 5, '2018-12-03 13:44:35', '2019-01-20 15:49:59'),
(87163, 86, '220', 314, 34, 2, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87164, 88, '227', 314, 34, 0, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87165, 89, '230', 314, 34, 0, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87166, 90, '234', 314, 34, 2, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87167, 91, '236', 314, 34, 1, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87168, 92, '239', 314, 34, 0, '2018-12-03 13:44:35', '2018-12-03 13:44:36'),
(87192, 85, 'package quiz;\r\nimport java.util.*;                                                                                                                \r\n                                                    \r\npublic class Trip{                                                                                                               \r\npublic trip(){\r\npublic string name; \r\npublic string place;\r\n}\r\n\r\npublic void setname( string n){\r\nname = n;\r\n}}\r\npublic int getname( ){\r\nreturn name; \r\n}\r\n\r\npublic void setclass( string c){\r\nclass =c;\r\n}}\r\npublic int getclass( ){\r\nreturn class; \r\n}}\r\n\r\npublic class Scientific extends Trip{\r\npublic scientific(){\r\npublic int startdate;\r\npublic int enddate;\r\n}\r\npublic void setstartdate(int sd){\r\nstartdate=sd;\r\n}\r\npublic int setstartdate(){\r\nreturn startdate;\r\n}\r\npublic void setenddate(int ed){\r\nenddate=ed;\r\n}\r\npublic int setenddate(){\r\nreturn enddate;\r\n}\r\npublic int getPeriod(int s,int e){\r\nint d=(e-s);\r\nreturn d;\r\n}\r\n}\r\n\r\npublic class Entertainment extends Trip{\r\npublic entertainment(){\r\npublic int date;\r\n}\r\npublic void setdate(int d){\r\ndate=d;\r\n}\r\npublic int getdate(){\r\nreturn date;\r\n}\r\n}\r\n\r\npublic class Quiz;\r\npublic static void main(String[] args){\r\ntrip t=new trip;\r\nScientific s1=new Scientific;\r\nScientific s2=new Scientific;\r\nEntertainment e1=new Entertainment;\r\nEntertainment e2=new Entertainment;\r\nEntertainment e3=new Entertainment;\r\ns1.getPeriod(startdate,enddate)\r\ns2.getPeriod(startdate,enddate)\r\n}', 244, 34, 6, '2018-12-03 13:44:42', '2019-01-20 15:52:16'),
(87193, 86, '220', 244, 34, 2, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87194, 88, '229', 244, 34, 2, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87195, 89, '231', 244, 34, 2, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87196, 90, '234', 244, 34, 2, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87197, 91, '236', 244, 34, 1, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87198, 92, '240', 244, 34, 0, '2018-12-03 13:44:42', '2018-12-03 13:44:42'),
(87212, 85, 'Import java.util.Scanner;\r\n      \r\n public class trip{\r\npublic static void main(String[] args) {\r\npublic void getInformtion(){\r\nScanner  i=new Scanner(System.in);\r\nSystem.out.print(\"enter type of tripe enter 1 for scientific trip or 2 for entertainment trip. \");\r\n\r\nint n=Integer.parseInt(i.nextInt());\r\nif (n==1){\r\nscientific d =new scientific ();\r\n}\r\nif(n==2){\r\nentertainment f=new entertainment(); \r\n}\r\npublic class scientific {\r\nscientific(){\r\nScanner  i=new Scanner(System.in);\r\nSystem.out.print(\"enter start date for EX 11/02/1999 \");\r\nString s=i.nextLine();\r\nSystem.out.print(\"enter end date for EX 11/02/1999 \");\r\nString n=i.nextLine();\r\nSystem.out.print(\"enter palese\");\r\nString p=i.nextLine();\r\nint=(int)s.charAt(\r\n}\r\npublic class  entertainment{\r\nScanner  i=new Scanner(System.in);\r\nint t=0;\r\nentertainment(){\r\nt++;\r\nSystem.out.print(\"enter date\")\r\nString d=i.nextLine();\r\nSystem.out.print(\"enter palese\");\r\nString p=i.nextLine();\r\n}}', 276, 34, 1, '2018-12-03 13:44:51', '2019-01-20 15:53:17'),
(87213, 86, '218', 276, 34, 0, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87214, 88, '229', 276, 34, 2, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87215, 89, '233', 276, 34, 0, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87216, 90, '234', 276, 34, 2, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87217, 91, '236', 276, 34, 1, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87218, 92, '241', 276, 34, 2, '2018-12-03 13:44:51', '2018-12-03 13:44:51'),
(87258, 85, 'public   class trip(){\r\n private String name;\r\nprivate String place;\r\n  \r\npublic trip(String a, String b){\r\nname=a;\r\nplace = b;\r\n}\r\n}\r\npublic class scientifictrip extends trip(){\r\nint date;\r\nint enddate;\r\nint numberofday;\r\npublic scientifictrip(String x , String y , int d , int ed , int c){\r\nsuper(x,y);\r\ndate=d;\r\nenddate=ed;\r\nnumberofday=c;\r\n\r\n}\r\nString getname(){\r\nreturn name;\r\n}\r\nString getplase(){\r\nreturn place;\r\n}\r\nint setdate(){\r\nreturn \r\n}\r\n\r\npublic void setdays(){\r\nnumberofday=(enddate-date)*2;\r\n}\r\nint getperiod(){\r\nreturn numberofday;\r\n}\r\n}\r\npublic class entertainment extends trip(){\r\nint date;\r\n\r\npublic entertainment(String n , String m , int d){\r\nsuper(n,m);\r\ndate=d;\r\n}\r\npublic void setday(){\r\nd=d*3;\r\n}\r\nint getperiod(){\r\nreturn d;\r\n}\r\n\r\n\r\n}\r\npublic class test(){\r\npublic ststic void main(String[] args)\r\nscientific s1=new scientific(\"fun\",\"giza\",16,18,2);\r\n\r\n\r\n}', 249, 34, 5, '2018-12-03 13:45:00', '2019-01-20 15:54:13'),
(87259, 86, '218', 249, 34, 0, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87260, 88, '227', 249, 34, 0, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87261, 89, '233', 249, 34, 0, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87262, 90, '234', 249, 34, 2, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87263, 91, '236', 249, 34, 1, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87264, 92, '241', 249, 34, 2, '2018-12-03 13:45:00', '2018-12-03 13:45:00'),
(87324, 85, 'public abstract trip{\r\nprotected  string name;\r\nprotected  string place;\r\npublic trip( string n,string p)\r\n{\r\nname=n;\r\nplace=p;\r\n\r\n}\r\npublic trip()\r\n{\r\nthis(entertainment,Aissut);\r\n}\r\npublic string abstract getperiod()\r\n{}\r\n}\r\npublic entertainment trip extends trip{\r\nprivate string date;\r\nstatic int numoftrip;\r\npublic entertainment trip( string d)\r\n{\r\ndate=d;\r\nnumoftrip++;\r\n}\r\n\r\npublic entertainment trip( string n,string p,string d)\r\n{\r\nsupr(n,p);\r\ndate=d;\r\nnumoftrip++;\r\n}\r\npublic entertainment trip()\r\n{\r\ndate=\"30/5/3012\"\r\n}\r\n\r\npublic string getperiod()\r\n return\" one_day\";\r\n\r\n}\r\npublic int getnumoftrip();\r\nreturn numoftrip;\r\n\r\npublic  scientific trip extends trip{\r\nprivate string start date ;\r\nprivate string end date ;\r\nstatic int numoftrip;\r\npublic scientific trip(string s,string e)\r\n{\r\nstart date=s;\r\nend date=d;\r\nnumoftrip++;\r\n}\r\npublic scientific trip(string n,string p,string s,string e)\r\n{\r\nsupr(n,p);\r\nstart date=s;\r\nend date=d;\r\nnumoftrip++;\r\n}\r\n      public string getperiod()\r\n return end date-start date;\r\npublic int getnumoftrip();\r\nreturn numoftrip;\r\n }\r\npublic class test{\r\npublic static void main(String[] args) {\r\n scientific trips s1=new  scientific trips(\"20/11/1/2010\",\"6/12/2010\");\r\nscientific trips s2=new  scientific trips(scientific,ceiro,\"21/11/1/2010\",\"10/12/2010\");\r\nentertainment trips p1=new entertainment trips(\"5/9/2007\");\r\nentertainment trips p2=new entertainment trips(entertainment ,assiut,\"6/8/2009\");\r\nentertainment trips p3=new entertainment trips();\r\nint x=s1.getnumoftrip();\r\nint y=p3.getnumoftrip();\r\nint total number=x+y;', 358, 34, 7, '2018-12-03 13:45:20', '2019-01-20 15:56:32'),
(87325, 86, '220', 358, 34, 2, '2018-12-03 13:45:20', '2018-12-03 13:45:21'),
(87326, 88, '229', 358, 34, 2, '2018-12-03 13:45:20', '2018-12-03 13:45:21'),
(87327, 89, '232', 358, 34, 0, '2018-12-03 13:45:20', '2018-12-03 13:45:21'),
(87328, 90, '234', 358, 34, 2, '2018-12-03 13:45:20', '2018-12-03 13:45:21'),
(87329, 91, '236', 358, 34, 1, '2018-12-03 13:45:21', '2018-12-03 13:45:21'),
(87330, 92, '239', 358, 34, 0, '2018-12-03 13:45:21', '2018-12-03 13:45:21'),
(87331, 85, 'packaje ; \r\n\r\n  public class trips{\r\n\r\nString name;\r\nstring place;\r\npublic trips( string c,string a){\r\nname=c;\r\nplace=a;\r\n}\r\n\r\n} \r\npublic class entertainementtrip extends trips{\r\n\r\n\r\nint date++;\r\n public entertainementtrip ( String s,string n,int d){\r\n\r\nsuper(s,n);\r\ndate=d;\r\n}\r\n}                                                                                                            \r\n       public class scientifictrip extends trips{\r\ni\r\nstartdate; \r\nenddate;\r\npublic scientific (string a,string b,string[ ] start ,string [ ]end)\r\n{\r\nsuper(a,b)\r\nstart=\" startday\".split(\" /\")\r\nend  =\"enddate\".split(\"/\");\r\n\r\n \r\n}\r\npublic int getperoid( string[] arr){\r\n arr=\"  day/month/year\".split(\"  /\");\r\n\r\n}\r\n\r\n}  \r\npublic class test{\r\npublic static void main(string[] args){\r\nscientific s=new scientific(\"trip\",\"luxor\",12/12/2018);\r\ns.getperod();\r\n}\r\n\r\n}', 279, 34, 4, '2018-12-03 13:45:24', '2019-01-20 15:57:21'),
(87332, 86, '218', 279, 34, 0, '2018-12-03 13:45:24', '2018-12-03 13:45:24'),
(87333, 88, '227', 279, 34, 0, '2018-12-03 13:45:24', '2018-12-03 13:45:24'),
(87334, 89, '233', 279, 34, 0, '2018-12-03 13:45:24', '2018-12-03 13:45:25'),
(87335, 90, '234', 279, 34, 2, '2018-12-03 13:45:24', '2018-12-03 13:45:25'),
(87336, 91, '237', 279, 34, 0, '2018-12-03 13:45:24', '2018-12-03 13:45:25'),
(87338, 92, '239', 279, 34, 0, '2018-12-03 13:45:24', '2018-12-03 13:45:25'),
(87385, 85, 'class trip{\r\nprotected String name;\r\nprotected String place;\r\n\r\npublic trip(){\r\n\r\n}\r\n\r\npublic trip(String name,String place){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n\r\n\r\n\r\n\r\nclass scientifictrip extends trip{\r\n String startDate;\r\n String endDate;\r\n\r\npublic scientifictrip(){\r\nstartDate=\"1/1/2018\";\r\nendDate=\"5/1/2018\";\r\n\r\n}\r\npublic scientifictrip(String name,String place,String s,String e){\r\nsuper(name,place);\r\nstartDate=s;\r\nendDate=e;\r\n\r\n}\r\n\r\n\r\npublic int getPeriod(){\r\nString sdate;\r\nString edate;\r\nString[] arr=sdate.split(\"/\");\r\nint day=Integer.parseInt(arr[0].trim());\r\nint month=Integer.parseInt(arr[1].trim());\r\nint year=Integer.parseInt(arr[2].trim());\r\n \r\n\r\nString[] arr2=edate.split(\"/\");\r\nint day2=Integer.parseInt(arr[0].trim());\r\nint month2=Integer.parseInt(arr[1].trim());\r\nint year2=Integer.parseInt(arr[2].trim());\r\nSystem.out.println(\"Duration of trip\");\r\nreturn day2-day;\r\n}\r\n\r\n\r\nclass entertainment extends trip{\r\nprivate String date;\r\nprivate static int numoftrips;\r\npublic entertainment(){\r\n\r\ndate=\"4/2/2018\"\r\n}\r\n\r\npublic entertainment(String name,String place,String d)\r\n{\r\nsuper(name,place);\r\ndate=d;\r\nnumoftrips++;\r\n}\r\n\r\n\r\npublic int getPeriod(){\r\nnumoftrips++;\r\nreturn numoftrips;\r\n}\r\n\r\n\r\n\r\npublic class main{\r\npublic static void main(String[] args){\r\n\r\nscientifictrip t1=new scientifictrip(\"java\",\"cairo\",\"5/1/2018\",\"10/1/2018\");\r\nscientifictrip t2=new scientifictrip(\"c++\",\"assuit\",\"14/5/2018\",\"21/5/2018\");\r\n\r\nentertainment t3=new entertainment(\"Dreampark\",\"cairo\",\"12/12/2018\");\r\nentertainment t4=new entertainment(\"Elhussien\",\"cairo\",\"1/1/2018\");\r\nentertainment t5=new entertainment(\"elgiza\",\"cairo\",\"3/1/2018\");\r\n\r\nint x=t1.getPeriod();\r\nint y=t2.getPeriod();\r\nint z=t3.getPeriod();\r\nint f=t4.getPeriod();\r\nint w=t5.getPeriod();\r\nint total=x+y+z+f+w;\r\nSystem.out.println(\"Total days of all trips is: \" +  total + \"Days\");\r\n\r\n\r\n}\r\n}', 295, 34, 8, '2018-12-03 13:45:32', '2019-01-20 15:58:19'),
(87386, 86, '220', 295, 34, 2, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87387, 88, '227', 295, 34, 0, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87388, 89, '232', 295, 34, 0, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87389, 90, '234', 295, 34, 2, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87390, 91, '236', 295, 34, 1, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87391, 92, '239', 295, 34, 0, '2018-12-03 13:45:32', '2018-12-03 13:45:32'),
(87405, 85, 'public class  trip {\r\nprotected string name;\r\nprotected string place;\r\npublic trip(){\r\nname=\"athar\";\r\nplace=\"aqsor\";\r\n}\r\npublic trip(string n, string p){\r\nname=n;\r\nplace=p\r\n}\r\npublic int getperiod(){\r\n\r\n}\r\n}  \r\npublic class scientific extends  trip {\r\nprivate string startdate;\r\nprivate string enddate;\r\npublic scientific(){\r\nstartdate=\"1/2/2012\";\r\nenddate=\"5/2/2013\";\r\n}\r\npublic scientific(string d1,string d2){\r\nstartdate=d1;\r\nenddate=d2;\r\n}\r\npublic scientific(string n, string p,string d1,string d2){\r\nsuper(n,p);\r\nstartdate=d1;\r\nenddate=d2;\r\n }\r\npublic string getperiod(){\r\nreturn startdate\"-\"enddate;\r\n}\r\npublic string toString(){\r\nreturn \"the number of trips\" +this.startdate\"-\"enddate;\r\n\r\n}   \r\n}\r\npublic class entertainment extends trip{\r\nprivate string date;\r\npublic entertainment(){\r\ndate=\"1/3/2013\";\r\n}\r\npublic  entertainment(string d){\r\ndate=d;\r\n} \r\npublic  entertainment(string n, string p,string d){\r\nsuper(n,p);\r\ndate=d;\r\n}\r\npublic int getperiod(){\r\nreturn 1;\r\n}\r\npublic string toString(){\r\nreturn \"the number of trips\"+1\r\n\r\n}   \r\n\r\n\r\n}                                                                                                         \r\npublic static void main (String[] args) {\r\nScanner input=new Scanner(System.in);\r\n   int [ ]arr=input.nextint();  \r\nfor(int i=0 ;i<arr.length;i++){\r\nif(i%2==0){\r\narr[i]=new scientific();\r\n}\r\nelse{\r\narr[i]=new entertainment();\r\n}  \r\n}\r\nfor(int i=0 ;i<arr.length;i++){\r\nsystem.out.print(\"the number of trips this year\") ;\r\nif(arr[i] instanceof   scientific()){\r\nscientific)arr[i].\r\n}\r\nelse if(arr[i] instanseof   entertainment()){', 292, 34, 7, '2018-12-03 13:45:37', '2019-01-20 15:59:26'),
(87406, 86, '219', 292, 34, 0, '2018-12-03 13:45:37', '2018-12-03 13:45:38'),
(87407, 88, '227', 292, 34, 0, '2018-12-03 13:45:37', '2018-12-03 13:45:38'),
(87408, 89, '230', 292, 34, 0, '2018-12-03 13:45:38', '2018-12-03 13:45:38'),
(87409, 90, '234', 292, 34, 2, '2018-12-03 13:45:38', '2018-12-03 13:45:38'),
(87410, 91, '236', 292, 34, 1, '2018-12-03 13:45:38', '2018-12-03 13:45:38'),
(87411, 92, '239', 292, 34, 0, '2018-12-03 13:45:38', '2018-12-03 13:45:38'),
(87412, 85, 'import java.util.Scanner;\r\npublic Class Trip {\r\nprotected string name;\r\nprotected string place;\r\npublic Trip( String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic int getPeriod(String d1,String d2 ){\r\narr[]string=d1.split(\"/\");\r\narr2[]string=d2.splite(\"/\");\r\nint day1=Interger.parseInt(arr[0]);\r\nint day2=Integer.parseInt(arr2[0]);\r\nreturn (day2-day1);}\r\n\r\n}\r\npublic class ScientificTrip extends Trip\r\n{\r\nString startdate;\r\nString enddate;\r\npublic ScientificTrip( string s,string e, string n,string p)\r\n{\r\nsuper(n,p)\r\nstartdate=s;\r\nenddate=e;\r\n}\r\n}\r\npublic Entertrip extends Trip\r\n{\r\nstring date;\r\npublic Entertrip(string d,string n,string p)\r\n{ super(n,p);\r\ndate=d;\r\n}\r\n}\r\npublic class test()\r\n{\r\npublic static void main( string[] args)\r\n{\r\n{ ScientificTrip trip1=new ScientificTrip( \"11/2/2018\",\"15/2/2018\",\" tripnumber1\",\"place1\");\r\nScientificTrip trip2=new ScientificTrip(\"20/2/2018\",\"25/2/2018\",\"tripnumber2\",\"place2\");\r\n\r\n Entertrip trip3=new  Entertrip (.getPeriod(\"20/2/2018\",\"25/2/2018\");,\"tripnumber3\",\"place3\");\r\nEntertrip trip4=new  Entertrip (\"27/2/2018\",\"tripnumber4\",\"place4\");\r\nEntertrip trip5=new  Entertrip (\"28/2/2018\",\"tripnumber5\",\"place5\");\r\n\r\n int a=trip1.getPeriod(\"11/2/2018\",\"15/2/2018\");\r\nint b= trip2.getPeriod(\"20/2/2018\",\"25/2/2018\");\r\nint c= trip3..getPeriod(\"20/2/2018\",20/2/2018\");\r\nint d=  trip4..getPeriod(\"27/2/2018\",27/2/2018\");\r\nint e= trip5..getPeriod(\"28/2/2018\",28/2/2018\");\r\nint sum= a+b+c+d+e;\r\nSystem.out.print( \"number of days is=\"+sum);\r\n}}', 289, 34, 7, '2018-12-03 13:45:38', '2019-01-21 15:38:02'),
(87413, 86, '220', 289, 34, 2, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87414, 88, '229', 289, 34, 2, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87415, 89, '233', 289, 34, 0, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87416, 90, '234', 289, 34, 2, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87417, 91, '236', 289, 34, 1, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87418, 92, '240', 289, 34, 0, '2018-12-03 13:45:38', '2018-12-03 13:45:41'),
(87476, 85, 'import java.utill.Scanner;\r\n\r\npublic class trip \r\n{\r\n\r\nString name;\r\nString place;\r\n\r\ntrip () {}\r\n\r\ntrip (String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\r\npublic class scTrip extends trip \r\n{\r\n\r\nint sDateD;\r\nint eDateM;\r\nint sDateD;\r\nint eDateM;\r\n\r\nscTrip () {}\r\n\r\nscTrip (String name,String place,String sDate,eDate)\r\n{\r\nsuper(name,place)\r\nthis.sDate=sDate;\r\nthis.eDate=eDate;\r\n\r\n}\r\n}\r\n\r\npublic class enTrip extends trip \r\n{\r\nint DateD;\r\nint DateM;\r\n\r\nenTrip () {}\r\n\r\nenTrip (String name,String place,String date)\r\n{\r\nsuper(name.place);\r\nthis.date=date;\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\npublic class main\r\n{\r\npublic static void main (String [] args)\r\n{\r\nScanner input = new Scanner;\r\n\r\nSystem.out.print(\"Enter name of trip : \");\r\nString name = input.next();\r\nSystem.out.print(\"Enter place of trip : \");\r\nString place = input.next();\r\nSystem.out.print(\"Enter start date of trip seperated by space (day month) : \");\r\nint sDateD = input.next();\r\nint sDateM = input.next();\r\nSystem.out.print(\"Enter end date of trip seperated by space (day month) : \");\r\nint eDateD = input.next();\r\nint eDateM = input.next();\r\nSystem.out.print(\"Enter start date of entertainment trip seperated by space (day month) : \");\r\nint dateD = input.next();\r\nint dateM = input.next();\r\nscTrip sc1 = new scTrip(name,place,sDateD,sDateM,eDateD,eDateM);\r\nscTrip sc2 = new scTrip(name,place,sDateD,sDateM,eDateD,eDateM);\r\nenTrip en1 = new enTrip(name,place,dateD,dateM);\r\nenTrip en2 = new enTrip(name,place,dateD,dateM);\r\nenTrip en3 = new enTrip(name,place,dateD,dateM);\r\n\r\nsc1.getPeriod;\r\nsc2.getPeriod;\r\nen1.getPeriod;\r\nen2.getPeriod;\r\nen3.getPeriod;\r\n\r\n}\r\npublic int getPeriod (int day,int month)\r\n{\r\nint d;\r\nd=month*30;\r\nday=day+d;\r\nreturn day;\r\n\r\n}\r\n\r\n}', 288, 34, 5, '2018-12-03 13:45:50', '2019-01-21 15:39:34'),
(87477, 86, '220', 288, 34, 2, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87478, 88, '227', 288, 34, 0, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87479, 89, '233', 288, 34, 0, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87480, 90, '234', 288, 34, 2, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87481, 91, '237', 288, 34, 0, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87482, 92, '241', 288, 34, 2, '2018-12-03 13:45:50', '2018-12-03 13:45:50'),
(87563, 92, '241', 403, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87564, 85, 'public class scientific \r\n{\r\nint date\r\nString name ;\r\nString place;\r\npublic \r\npublic static void main (String [] args )\r\n{', 403, 34, 1, '2018-12-03 13:46:06', '2019-01-21 15:41:33'),
(87565, 86, '220', 403, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87566, 88, '229', 403, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87567, 89, '230', 403, 34, 0, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87568, 90, '234', 403, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87569, 91, '236', 403, 34, 1, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87570, 92, '241', 403, 34, NULL, '2018-12-03 13:46:06', '2018-12-03 13:46:06');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(87571, 85, 'public class trip {\r\n         String name;\r\n         String place;\r\n\r\n	public trip(String s,String p){\r\n		name = s;\r\n		place = p;\r\n	}\r\n	\r\n}\r\npublic class scientific extends trip {\r\n       String start_date;\r\n       String end_date;\r\n\r\n	public scientific (String n,String p,String s,String e){\r\n		super(n,p);\r\n		start_date=s;\r\n		end_date=e;\r\n	}\r\n	int a [] = Intiger.parseInt(start_date.split(\"/\"));\r\n	int b [] = Intiger.parseInt(end_date.split(\"/\"));\r\n	\r\n	int SumDays=0;\r\n	\r\n	SumDays=b[0]-a[0];\r\n	SumDays+=(b[1]-a[1])*30;\r\n	\r\n	public int getPeriod(){\r\n		return SumDays;\r\n	}\r\n\r\n\r\n}\r\npublic class entertainment extends trip {\r\n      	String date;\r\n	public entertainment(String date,String n,String p){\r\n		super(n,p);\r\n		this.date=date;\r\n	}\r\n	@override\r\n	public int getPeriod(){\r\n		return 1;  //because this trip is only one day\r\n	}\r\n\r\n}\r\npublic class main {\r\n	public static void main(String a[]){\r\n		scientific t1 = new scientific (\"Ahmed\",\"Paris\",\"1/10\",\"5/10\");\r\n		scientific t2 = new scientific (\"Hossam\",\"German\",\"1/11\",\"10/12\");\r\n		entertainment t3 = new entertainment(\"5/11\",\"ali\",\"Alex\");\r\n		entertainment t4 = new entertainment(\"10/11\",\"mohamed\",\"Barazil\");\r\n		entertainment t5 = new entertainment(\"20/11\",\"mahmoud\",\"Egypt\");\r\n		int total_days=t1.getPeriod()+t2.getPeriod()+t3.getPeriod()+t4.getPeriod()+t5.getPeriod();\r\n		System.out.print(total);\r\n		\r\n		\r\n	}\r\n	\r\n}', 277, 34, 8, '2018-12-03 13:46:06', '2019-01-21 15:42:38'),
(87572, 86, '218', 277, 34, 0, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87573, 88, '227', 277, 34, 0, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87574, 89, '230', 277, 34, 0, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87575, 90, '234', 277, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87576, 91, '236', 277, 34, 1, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87577, 92, '241', 277, 34, 2, '2018-12-03 13:46:06', '2018-12-03 13:46:06'),
(87675, 85, 'import java.util.*;\r\npublic class trip{\r\nprivate String name;\r\nprivate String place;\r\nprotector  static int numberofdays=0;\r\npublic trip(String n,String p){\r\nthis.name=n;\r\nthis.place=p;\r\n\r\n}\r\n}\r\npublic class scientificalTrip extands trip{\r\nprivate String startdate;\r\nprivate String endtdate;\r\n\r\npublic scientificalTrip(String n,String p,String s,String e){\r\nsuper(n,p);\r\nthis.startdate=s;\r\nthis.enddate=e;\r\n\r\n}\r\n\r\npublic String getperiod(){\r\nString [] a=new String[3];\r\nString date=a.spilt(\"/\");\r\n\r\nint day=Integer.parseInt(date.spilt(a[0].trimp()));\r\nint month=Integere.parseInt(date.spilt(a[1].trimp()));\r\nint year=Integer.parseInt(date.spilt(a[2].trim()));\r\nnumberofdays++;\r\nreturn numberofdays;\r\n}\r\npublic static int getnumberofdays(){\r\nreturn numberofdays;\r\n\r\n}\r\n\r\n}\r\npublic class enterainmentTrip extands trip{\r\nprivate String oneday;\r\n\r\npublic scientificalTrip(String n,String p,String o){\r\nsuper(n,p);\r\nthis.onedaye=o;\r\n\r\n}\r\npublic String getperiod(){\r\nString [] a=new String[3];\r\nString date=a.spilt(\"/\");\r\n\r\nint day=Integer.parseInt(date.spilt(a[0].trimp()));\r\nint month=Integere.parseInt(date.spilt(a[1].trimp()));\r\nint year=Integer.parseInt(date.spilt(a[2].trim()));\r\n numberofdays++;\r\nreturn numberofdays;\r\n}}\r\npublic static void main(String[]args){\r\n Scanner input=new Scanner(System.in);\r\nscientificalTrip trip1=new scientificalTrip(\"ahmed\",\"alex\",\"1/9/2018\",\"4/9/2018\");\r\nscientificalTrip trip2=new scientificalTrip(\"mahamed\",\"assuite\",\"5/9/2018\",\"7/9/2018\");\r\nenterainmentTrip trip3=new enterainmentTrip(\"ahmed\",\"cairo\",\"8/9/2018\");\r\nenterainmentTrip trip4=new enterainmentTrip(\"sahar\",\"aswan\",\"9/9/2018\");\r\nenterainmentTrip trip5=new enterainmentTrip(\"fahd\",\"loxer\",\"11/9/2018\");\r\n\r\ntrip1.getperiod();\r\ntrip2.getperiod();\r\ntrip3.getperiod();\r\ntrip4.getperiod();\r\ntrip5.getperiod();\r\n\r\nint x=trip.getnumberofdays();\r\nSystem.out.println(\"total number of days=\"+numberofdays);\r\n\r\n}', 287, 34, 7, '2018-12-03 13:46:37', '2019-01-21 15:44:04'),
(87676, 86, '218', 287, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87677, 88, '227', 287, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87678, 89, '230', 287, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87679, 90, '235', 287, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87680, 91, '236', 287, 34, 1, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87681, 92, '241', 287, 34, 2, '2018-12-03 13:46:37', '2018-12-03 13:46:37'),
(87682, 85, 'public class trip(){\r\nstring name ;\r\nstring place;\r\n\r\n}\r\npublic class scientific extends trip()\r\n{\r\npublic void setname(string n)(name=n)\r\npublic void setplace(string p)(place=p)\r\npublic string getname(string )(name=n1)\r\npublic string getplace(string)(place=p1)\r\n}                                    \r\npublic class scientific extends trip{\r\n\r\n}\r\npublic entertainment  class extends trip{\r\n}\r\n\r\npublic class organizes(){\r\n\r\n}\r\npublic static  void main(string[ ] args){\r\nScanner input=new Scanner(System.in)\r\nscientific s1=new scientific();\r\nscientific s2=new scientific();\r\nint c=2,e=3;\r\n\r\nwhile(c>0&&e>0);\r\n{\r\nSystem.out.print(\"enter name of trip\")\r\n\r\nSystem.out.print(\"enter place of trip\")\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 246, 34, 4, '2018-12-03 13:46:37', '2019-01-21 15:45:58'),
(87683, 86, '218', 246, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87684, 88, '226', 246, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87685, 89, '233', 246, 34, 0, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87686, 90, '234', 246, 34, 2, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87687, 91, '236', 246, 34, 1, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87688, 92, '241', 246, 34, 2, '2018-12-03 13:46:37', '2018-12-03 13:46:40'),
(87696, 85, 'public class Trip\r\n{\r\nString name;\r\nString place;\r\n Trip()\r\n{\r\n   name=\"Amar\";\r\n   place=\"Assiut\";\r\n}\r\n Trip(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n}\r\npublic ScientificTrip extends Trip()\r\n{\r\nString StartDate;\r\nString EndDate;\r\n\r\nScientificTrip ()\r\n{\r\nStartDate=\"3/12/2018\";\r\nEndDate=\"5/12/2018\";\r\n\r\n}\r\nScientificTrip (String StartDate, String EndDate )\r\n{\r\nthis.StartDate=StartDate;\r\nthis.EndDate=EndDate;\r\n}\r\n\r\nScientificTrip (String name,String place, String StartDate, String EndDate )\r\n{\r\nsuper(name,place);\r\nthis.StartDate=StartDate;\r\nthis.EndDate=EndDate;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\npublic EntertainmentTrip extends Trip()\r\n{\r\nString date;\r\n\r\nEntertainmentTrip ()\r\n{\r\ndate=\"3/12/2018\";\r\n}\r\n\r\nEntertainmentTrip (String date )\r\n{\r\nthis.date=date;\r\n\r\n}\r\n\r\nEntertainmentTrip (String name, String place , String date)\r\n{\r\n super(name,place);\r\nthis.date=date;\r\n\r\n}\r\n\r\n}\r\npublic String getPeriod(String startdate)\r\n{\r\n   String [] start=startdate.split(\"/\");\r\n    int period= start[0].trim();\r\nreturn period;   \r\n}\r\npublic String getPeriod(String startdate, String enddate)\r\n{\r\n   String [] start=startdate.split(\"/\");\r\n    int start = start[0].trim();\r\n   String [] end=enddate.split(\"/\");\r\n    int end = end[0].trim();\r\n int period;\r\n  period=end-start;\r\nreturn period;   \r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npackage 5;\r\nimport java.util.*;\r\n\r\npublic static main (String[] args)\r\n{\r\nScientificTrip T1=new ScientificTrip ();\r\nScientificTrip T2=new ScientificTrip ();\r\n\r\nEntertainmentTrip t1=new EntertainmentTrip ();\r\nEntertainmentTrip t2=new EntertainmentTrip ();\r\nEntertainmentTrip t3=new EntertainmentTrip ();\r\n\r\nint S1= T1.getPeriod();\r\nint S2= T2.getPeriod();\r\nint S3= t1.getPeriod();\r\nint S4= t2.getPeriod();\r\nint S5= t3.getPeriod();\r\nint sumT= S1+S2+S3+S4+S5;\r\nSystem.out.println(\"Sum of Scientific Trip : \" + sum )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 410, 34, 7, '2018-12-03 13:46:39', '2019-01-21 15:44:58'),
(87697, 86, '220', 410, 34, 2, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87698, 88, '228', 410, 34, 0, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87699, 89, '233', 410, 34, 0, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87700, 90, '234', 410, 34, 2, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87701, 91, '236', 410, 34, 1, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87702, 92, '239', 410, 34, 0, '2018-12-03 13:46:39', '2018-12-03 13:46:39'),
(87826, 85, 'class trip()\r\n{\r\nString name;\r\nString place;\r\nclass scientific trip ()\r\n{\r\nint startData;\r\nint endData;\r\nString name;\r\nString place\r\n\r\n}    \r\nclass entertainment()\r\nint day=1;\r\nint data;\r\nString name;\r\nString place;\r\n\r\n}       \r\n public abstract getPeriod ()\r\n{\r\nreturn 1*total dayes ;\r\n}       \r\n\r\npublic static void main(string[ ] args)       {\r\ntrip();\r\nscientific trip ();\r\n\r\nScanner s = new Scanner(System.in);\r\ns.name=nextString();\r\nsystem.out.print l(\"enter place\");\r\nScanner s = new Scanner(System.in);\r\ns.place=nextString();\r\nsystem.out.printl(\"enter start data\");\r\nScanner s= new Scanner(System.in);\r\ns.startData=nextint();\r\nsystem.out.printl(\"enter end data\");\r\nScanner s= new Scanner(System.in);\r\ns.endData=nextint();\r\nint numofdayes=0\r\nfor(int i =1;i<endData && i> sartData;i++)\r\n{\r\nnumofdayes=i;\r\n}             \r\nsystem.out println(\"numofdayes=\"+i) ;\r\n\r\nentertainment trip();\r\nint numofdayestrip=0;\r\nnumofdayesertrip=1*3;\r\nsystem.out.prinln(\"total dayes=\"+numofdayesertrip+numofdayes);', 320, 34, 2, '2018-12-03 13:46:59', '2019-01-21 15:46:26'),
(87827, 86, '220', 320, 34, 2, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87828, 88, '229', 320, 34, 2, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87829, 89, '233', 320, 34, 0, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87830, 90, '235', 320, 34, 0, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87831, 91, '236', 320, 34, 1, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87832, 92, '239', 320, 34, 0, '2018-12-03 13:46:59', '2018-12-03 13:46:59'),
(87928, 85, 'public class trip{\r\n          String name;\r\n          String   place;\r\npublic void set_name(String t)\r\n{\r\nname=t;\r\n}\r\npublic void set_ place(String y)\r\n{\r\nplace=y;\r\n}\r\n          }                                                                                    \r\n          public class  scientific trip  extends trip{\r\nstring start_date;\r\n      string   end_date;\r\nint number_days;\r\npublic scientific trip(String f,String k,int t)\r\n{start_date=f;\r\n  end_date=k;\r\nnumber_days= t;\r\n}\r\n             public void set_  start_date(String y) {  \r\nstart_date=y  \r\n}\r\n public void set_  end_date(String x) {\r\n             end_date=x;\r\n}\r\npublic class  entertainment trip extends trip{\r\nstring date;\r\nint number_days=1;\r\npublic void set_date(String j)\r\n{\r\ndate=j;\r\n}\r\n\r\npublic static void main( )\r\n{\r\nscientific s1=new scientific(', 281, 34, 5, '2018-12-03 13:47:11', '2019-01-21 15:47:08'),
(87929, 86, '220', 281, 34, 2, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87930, 88, '227', 281, 34, 0, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87931, 89, '232', 281, 34, 0, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87932, 90, '234', 281, 34, 2, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87933, 91, '236', 281, 34, 1, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87934, 92, '239', 281, 34, 0, '2018-12-03 13:47:11', '2018-12-03 13:47:11'),
(87977, 85, 'public  class trip {\r\n          public  String  name ;                                                                                             \r\n           public  String place ;\r\n   public void trip ( String n, String p )\r\n{\r\nname = n;\r\nplace = p;\r\n}\r\npublic void setname(String n)\r\n{\r\nname = n;\r\n}\r\npublic void setplace (String p)\r\n{\r\nplace = p;\r\n}\r\npublic String getname()\r\n{\r\nreturn name ;\r\n}\r\npublic String place ()\r\n{\r\n return place ;\r\n}\r\n   }\r\npublic class scientific extends trip {\r\nprivate int startdate ;\r\nprivate int enddate ;\r\npublic scientific (String n, String p ,int sd ,int ed )\r\n{\r\nsuper (n,p)\r\nstartdate =sd;\r\nenddate = ed; \r\n}\r\npublic void setstartdate (int sd)\r\n{\r\nstartdate =sd;\r\n}\r\npublic void setenddat (int ed)\r\n{\r\nenddate =ed;\r\n}\r\npublic String  getstartdate ()\r\n{\r\n return startdate ;\r\n}\r\npublic String getenddat ()\r\n{\r\n return enddate ;\r\n}\r\npublic class entertainment extends trip {\r\nprivate int  date; \r\nprivate String  day ;\r\npublic entertainment (String n, String p ,int d, String da){\r\nsuper (n,p)\r\ndate =d; \r\nday = da ;\r\n}\r\npublic void setdate (int d)\r\n{\r\ndate =d; \r\n}\r\npublic void setday (int da)\r\n{\r\nday =da; \r\n}\r\npublic int getdate ()\r\n{\r\nreturn date; \r\n}\r\npublic String  getday ()\r\n{\r\nreturn day ; \r\n}\r\npackeg medterm ;\r\n\r\npublic Static void main (String [args])\r\n{\r\nscientific s1= new scientific (java, cairo ,12 ,17)\r\nscientific s2= new scientific (c, roma ,3 ,9)\r\nentertainment  e1 = new entertainment (khg, assut ,13, sater  day )\r\nentertainment e2 = new entertainment()\r\nentertainment e3 =  ne\r\n}', 282, 34, 5, '2018-12-03 13:47:23', '2019-01-21 15:48:51'),
(87978, 86, '220', 282, 34, 2, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87979, 88, '229', 282, 34, 2, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87980, 89, '231', 282, 34, 2, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87981, 90, '234', 282, 34, 2, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87982, 91, '236', 282, 34, 1, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87983, 92, '239', 282, 34, 0, '2018-12-03 13:47:23', '2019-01-22 15:35:31'),
(87984, 85, 'public class  trip\r\n{\r\nprotected String name;\r\nprotected String place;\r\npublic set_name(string q)\r\n{\r\nname=q;\r\n}\r\npublic set_place(string place)\r\n{\r\nname=place;\r\n}\r\npublic string get_name()\r\n{\r\nreturn name;\r\n}\r\npublic string get_place()\r\n{\r\nreturn place;\r\n}\r\npublic trip()\r\n{\r\nname=\"dd\";\r\nplace=\"ass\";\r\n}\r\npublic trip(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n}\r\npublic class scientific extends trip\r\n{\r\nString start_date;\r\nString end_date;\r\npublic  scientific()\r\n{\r\nstart_date=\"22/3/2018\";\r\nend_date=\"25/3/2018\";\r\n}\r\npublic  scientific(String x,String y)\r\n{\r\nstart_date=x;\r\nend_date=y;\r\n}\r\npublic  scientific(String name,String place,String x,String y)\r\n{\r\nsuper(name,place);\r\nstart_date=x;\r\nend_date=y;\r\n}\r\npublic set_start_date(string s)\r\n{\r\n start_date=s;\r\n}\r\npublic set_end_date(string e)\r\n{\r\n start_date=e;\r\n}\r\npublic string get_start_gate()\r\n{\r\nreturn start_date;\r\n}\r\npublic string get_end_gate()\r\n{\r\nreturn end_date;\r\n}\r\n}                                                                                                              \r\n public class entertainment extends trip\r\n{\r\nString date;\r\npublic entertainment()\r\n{\r\ndate=\"15/5/2018\";\r\n}\r\npublic entertainment(String w)\r\n{\r\ndate=w;\r\n}\r\npublic entertainment(String a,String b,String w)\r\n{\r\nsuper(a,b);\r\ndate=w;\r\n}\r\npublic set_date(string date)\r\n{\r\nthis.da\r\n}\r\n}        \r\npublic class exam{\r\npublic static void main(string [] args)\r\n{\r\nscanner input =new scanner(System.in);\r\nsystem.out.print(enter start date);\r\nString x=input.next();\r\npar(x);\r\npublic String get_period(String date[])\r\n{\r\nString arr[]=date.split(\"/\");\r\nint day=Integer.parseInt(arr[0].trim());\r\nint month=Integer.parseInt(arr[1].trim());\r\nint year=Integer.parseInt(arr[2].trim());\r\n}\r\n}\r\n}', 304, 34, 5, '2018-12-03 13:47:26', '2019-01-21 15:49:31'),
(87985, 86, '219', 304, 34, 0, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(87986, 88, '227', 304, 34, 0, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(87987, 89, '230', 304, 34, 0, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(87988, 90, '234', 304, 34, 2, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(87989, 91, '237', 304, 34, 0, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(87990, 92, '240', 304, 34, 0, '2018-12-03 13:47:26', '2018-12-03 13:47:26'),
(88025, 85, 'class trip\r\n                      {    String name ;\r\n                           String place  ;  \r\n                           int  start_day ; \r\n                           int finish_day;\r\n                                                      trip (  String name , String place, int start_day,  int finish_day)\r\n                                                             {  this.name=name;   this.place=place;  this.start_day=start_day;  this.finish_day=finish_day;} \r\n                                                      trip (){}\r\n                                                      trip (  String name , String place, int start_day)\r\n                                                             {  this.name=name;   this.place=place;  this.start_day=start_day;}  \r\n\r\n                    public int get_period()\r\n                          { \r\n                        return ( finish_day  -  start_day );\r\n                          }\r\n                             \r\n                 }                                                                                                 \r\n               class   scientific extends trip\r\n                                 {  \r\n                                              scientific (){                }   \r\n                                              scientific  (  String name , String place, int start_day,  int finish_day)\r\n                                                                 {  super(name,place, start_day, finish_day);} \r\n                                  }\r\n               class   entertainment extends trip\r\n                          {    \r\n                                            entertainment (){}   \r\n                                            entertainment  (  String name , String place, int start_day)\r\n                                           {  super(name,place, start_day);} \r\n                                              public int get_period()\r\n                                                  { return (1 );} \r\n                           }\r\n     public class Main \r\n                      { \r\n                     public static void main (String []args)\r\n                          {     scientific s= new scientific(\"asd\",\"cairo\",5,7);\r\n                                 scientific  a= new scientific(\"awe\",\"cairo\",8,10);\r\n                                 entertainment  t=new  entertainment(\"zxc\",\"alex\",5);\r\n                                 entertainment  w =new  entertainment(\"yc\",\"alex\",9);\r\n                                 entertainment  k =new  entertainment(\"rc\",\"alex\",10);\r\n                                 /* the value sent is generated from my mind  it is  not real */\r\n                                 int sum =   s. get_period() + a. get_period() +  t. get_period() + w. get_period()+  k. get_period() ; \r\n                                 System.out.println (\" days for all trips :  \"  + sum);\r\n                         \r\n                          }\r\n                       }', 258, 34, 5, '2018-12-03 13:47:37', '2019-01-21 15:50:24'),
(88026, 86, '220', 258, 34, 2, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88027, 88, '229', 258, 34, 2, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88028, 89, '231', 258, 34, 2, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88029, 90, '234', 258, 34, 2, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88030, 91, '236', 258, 34, 1, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88031, 92, '240', 258, 34, 0, '2018-12-03 13:47:37', '2018-12-03 13:47:37'),
(88095, 85, 'public class trip{\r\nprivet name;\r\nprivet place;\r\n\r\nSystem.out.println(\"tow scientific trip\");\r\nSystem.out.println(\"tow  entertainment trip\");\r\n}\r\npublic trip(String n,String p)\r\n{\r\nname=n;\r\n place=p;\r\n}\r\n\r\npublic class scientific\r\n{\r\nString name;\r\nString place;\r\nint start_date;\r\nint end_date;\r\n}\r\npublic scientific(String n,String p,int s,int e)\r\n{\r\nname=n;\r\nplace=p;\r\nstart_date=s;\r\nend_date=e;\r\n}\r\npublic class entertainment extends trip\r\n{\r\nprivet date;\r\n\r\n}public entertainment (int d,String n,string p) \r\n{\r\nSuper(n,p);\r\ndate= d;\r\n}\r\npublic int getperiod()\r\n{\r\nint period;\r\nperiod =e-s;\r\nreturn period;\r\n}public int total_number_of_scientif_trip()\r\n{\r\ntotal_number_of_scientif_trip=2*period;\r\nreturn total_number_of_scientif_trip;\r\n}public int total_number_of_entertainment_trip()\r\n{\r\npublic int total_number_of_entertainment_trip=3;\r\nreturn public int total_number_of_entertainment_trip;\r\n}\r\n public static void main(String[] args) {\r\nscientif ss=new scientif();\r\nSystem.out.println(\" total_number_of_scientif_trip\"+ss. total_number_of_scientif_trip())\r\nentertainment en=new entertainment ();\r\nSystem.out.println(\" total_number_of_entertainment_trip\"+en. total_number_of_entertainment_trip())\r\n}', 347, 34, 3, '2018-12-03 13:48:03', '2019-01-21 15:51:06'),
(88096, 86, '220', 347, 34, 2, '2018-12-03 13:48:03', '2018-12-03 13:48:03'),
(88097, 88, '227', 347, 34, 0, '2018-12-03 13:48:03', '2018-12-03 13:48:03'),
(88098, 89, '233', 347, 34, 0, '2018-12-03 13:48:03', '2018-12-03 13:48:03'),
(88099, 90, '234', 347, 34, 2, '2018-12-03 13:48:03', '2018-12-03 13:48:03'),
(88100, 91, '237', 347, 34, 0, '2018-12-03 13:48:03', '2018-12-03 13:48:04'),
(88101, 92, '238', 347, 34, 0, '2018-12-03 13:48:03', '2018-12-03 13:48:04'),
(88114, 85, 'public class scientific \r\n{\r\n      protected string strat-date;\r\n      protected string end-date;\r\n      protected String name;\r\n      protected string place;\r\n\r\n     public scientific ()\r\n    {\r\n        strat-date = \"12/3/2018\";\r\n        end-date = \"15/3/2018\";\r\n        name = \"Mohammed\"\r\n        place = \"Alx\";\r\n    }\r\n    public scientific (String s, String e, String n, String p)\r\n    {\r\n        strat-date = s;\r\n        end-date = e;\r\n        name  = n;\r\n        place = p;\r\n    }\r\n    public int getPeriod (int num)\r\n    {\r\n        return num * 2;\r\n    }\r\n}\r\n\r\npublic class entertainment extends scientific   {\r\n   \r\n   public entertainment ()\r\n   {\r\n       \r\n   }\r\n\r\n   public entertainment (String s, String e, String n, String p)\r\n   {\r\n       super(s, e, n, p);\r\n   }\r\n\r\n   public int getPeriod (int num)\r\n    {\r\n        return num * 3;\r\n    }\r\n\r\n}                                                                                    \r\n public class  trips{\r\n\r\n        public static void min(String [ ]  args)\r\n        {\r\n            scientific  s = new scientific (\"25/5/2019\", \"28/5/2019\", \"Ali\", \"cairo\"); \r\n            System.out.println(s.getPeriod(3));\r\n\r\n            entertainment n = new entertainment (\"5/5/2017\", \"6/5/2017\", \"Mohammed\", \"Alx\"); \r\n            System.out.println(n.getPeriod(1));\r\n        }\r\n\r\n}', 330, 34, 3, '2018-12-03 13:48:27', '2019-01-21 15:51:45'),
(88115, 86, '220', 330, 34, 2, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88116, 88, '229', 330, 34, 2, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88117, 89, '232', 330, 34, 0, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88118, 90, '234', 330, 34, 2, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88119, 91, '237', 330, 34, 0, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88120, 92, '241', 330, 34, 2, '2018-12-03 13:48:27', '2018-12-03 13:48:27'),
(88136, 85, 'public class trip() {\r\n  string name =\"name\";\r\n  string place=\"assiut\";\r\n}\r\n\r\npublic class trip(string n , string p) {\r\n  string name =n;\r\n  string place=p;\r\n}\r\n\r\npublic scientific extend trip()                                                                                                           \r\n{\r\nstring Start_Date=\"1/12/2018\";\r\nstring End_Date=\"3/12/2018\";\r\n\r\n}\r\n\r\npublic scientific extend trip(string n,string p,string s, string e)                                                                                                           \r\n{\r\nsuper (n,p);\r\nstring StartDate=s;\r\nstring EndDate=e;\r\n}\r\n\r\npublic entertainment extend trip()\r\n{\r\nstring date=\"3/12/2018\";\r\n\r\n}\r\n\r\npublic entertainment extend trip(string n, string p, string d)\r\n{\r\nsuper(n,p); \r\nstring date=d;\r\n\r\n}\r\n\r\npublic int  getPeriod(int start , int end)\r\n{\r\n return end - start ;\r\n}\r\n\r\n\r\npublic static void main(String[] args){\r\n\r\nScanner scientific s1 = new scanner;\r\nScanner scientific s2 = new scanner;\r\nScanner entertainment e1 = new scanner;\r\nScanner entertainment e2 = new scanner;\r\nScanner entertainment e3 = new scanner;\r\nstring [] arr = date.split(\"/\");\r\nint day=integer.parseInt(arr[0].trim())\r\nint month=integer.parseInt(arr[1].trim())\r\nint year=integer.parseInt(arr[2].trim())\r\n\r\nint x=0;\r\nx=getperiod (s1.StartDate,s1.EndDate);\r\nx=x + getperiod (s2.StartDate,s2.EndDate) ;\r\nx = x+3;                                  // 3 day for 3 entertainment trips\r\n\r\nSystem.out.println(s1+s2+s3);\r\nSystem.out.println(e1+e2);\r\n\r\nSystem.out.println(x);\r\n}', 416, 34, 2, '2018-12-03 13:48:33', '2019-01-21 15:52:19'),
(88137, 86, '220', 416, 34, 2, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88138, 88, '227', 416, 34, 0, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88139, 89, '230', 416, 34, 0, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88140, 90, '234', 416, 34, 2, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88141, 91, '237', 416, 34, 0, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88142, 92, '241', 416, 34, 2, '2018-12-03 13:48:33', '2018-12-03 13:48:33'),
(88143, 85, 'class hussien {\r\npublic static void main(string []args()){\r\nScanner input=new Scanner(system.in);\r\nscientecttrip scientecttrip_one=input.next();\r\nscientecttrip scientecttrip_twe=input.next();\r\nenterainmenttrip enterainmenttrip_one=new enterainmenttrip();\r\nenterainmenttrip enterainmenttrip_two=new enterainmenttrip();\r\nenterainmenttrip enterainmenttrip_three=new enterainmenttrip();\r\n\r\nenter tianment trip_ one.s_day=input.nextint();\r\nenter tianment trip_ one.s_monthe=input.nextint();\r\nenter tianment trip_ one.s_year=input.nextint();\r\nenter tianment trip_ one.e_day=input.nextint();\r\nenter tianment trip_ one.e_monthe=input.nextint();\r\nenter tianment trip_ one.e_year=input.nextint();\r\nscientctrip_one.monthe=input.nextint();\r\nscientctrip_one.place=input.nextint();\r\nscientctrip_one.monthe=input.nextint();\r\n\r\nSystem.out.println(\"the number of days=\"+ days);\r\n}\r\n}\r\nclass entertainmenttrip{\r\nstatic int cnt =0;\r\nint s_day;\r\nint s_manthe;\r\nint s_year;\r\nString name;\r\nString place;\r\ngetperiod{\r\nreturn 1;\r\n\r\n}\r\n}\r\npublic scientifictrip extends entertainmenttrip{\r\nint e_day;\r\nint e_manthe;\r\nint e_year;\r\ngetperiod\r\n{for (int i=0;i<=e_day&&s_monthe&&s_year==e_year)\r\nbreak;\r\nelse\r\nc++;\r\nif(i==30)\r\ni=0;\r\ns_monthe++;\r\nif(s_monthe==12&&i==30)\r\ns_year++;\r\ns_monthe=1;\r\n}\r\n}\r\n}return c;\r\n}\r\n}', 280, 34, 3, '2018-12-03 13:48:34', '2019-01-21 15:53:51'),
(88144, 86, '220', 280, 34, 2, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88145, 88, '229', 280, 34, 2, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88146, 89, '231', 280, 34, 2, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88147, 90, '234', 280, 34, 2, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88148, 91, '236', 280, 34, 1, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88149, 92, '239', 280, 34, 0, '2018-12-03 13:48:34', '2018-12-03 13:48:37'),
(88150, 85, 'import java.util.*;\r\n         public class Trip\r\n{\r\nprivate String name;\r\nprivate String place;\r\npublic Trip(String s,String a)\r\n{\r\nname=s;\r\nplace c;\r\n}\r\npublic Trip()\r\n{\r\nname=x;\r\nplace=y;\r\n}\r\npublic class Scientific trip extends Trip\r\n{\r\nprivate String start data;\r\nprivate String end data\r\npublic class Scientific trip(String q,String z)\r\n{\r\nstart data=q;\r\nstart data=z;\r\n}\r\npublic class Scientific trip()\r\n{\r\nstart data=t;\r\nstart data=e;\r\n}\r\npublic class Scientific trip(String s,String a,String q,String z)\r\nsuper(s,a)\r\nthis.q=q;\r\nthis.z=z;\r\n}\r\npublic class Entertainment trip extends Trip\r\n{\r\nString date;\r\npublic class Entertainment trip(String r)\r\n{\r\nthis\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n}    \r\npublic class Fci\r\n{\r\npulic static void main(String[] args)\r\n{\r\n\r\n} \r\n}', 329, 34, 5, '2018-12-03 13:48:36', '2019-01-21 15:53:09'),
(88151, 86, '220', 329, 34, 2, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88152, 88, '227', 329, 34, 0, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88153, 89, '233', 329, 34, 0, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88154, 90, '235', 329, 34, 0, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88155, 91, '236', 329, 34, 1, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88156, 92, '239', 329, 34, 0, '2018-12-03 13:48:36', '2018-12-03 13:48:37'),
(88170, 85, 'package  trips{\r\nimport Java.util.*;\r\nclass trip{\r\nprotected String name;\r\nprotected String place;\r\npublicString getName()\r\n{\r\nreturn name;\r\n}\r\npublic String getPlace()\r\n{\r\nreturn place;\r\n}public void setName(String name)\r\n{\r\nthis.name=name;\r\n}\r\n}public string setPlace(String place)\r\n{\r\nthis.place=place;\r\n}\r\n\r\n}\r\nclass scientific extends trip{\r\nprivate date startDate=new date();\r\nprivate date endDate=new date();\r\npublic scientific()\r\n{\r\nstartDate=1/12/2017;\r\nendDate=1/12/2017;\r\n}\r\npublic scientific(date x,date y)\r\n{\r\nstartDate=x;\r\nendDate=y;\r\n}\r\nclass entertainment extends trip{\r\nprivate static int numberOfDays=0;\r\npublic entertainment()\r\n{\r\nnumberOfdays++;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\npublic class main{\r\npublic static void main(String[] args)\r\n{\r\nscientific x=new scientific();\r\nx.setName=\"scientific\";\r\nx.setPlace=\"paris\";\r\n\r\nscientific o=new scientific();\r\no.setName=\"scientific\";\r\no.setPlace=\"luxor\";\r\nentertainmen i=new entertainmen();\r\ni.setName=\"entertainmen\";\r\ni.setPlace=\"luxor\";\r\n\r\nentertainmen p=new entertainmen();\r\np.setName=\"entertainmen\";\r\np.setPlace=\"paris\";\r\n\r\nentertainmen f=new entertainmen();\r\nf.setName=\"entertainmen\";\r\nf.setPlace=\"assuit\";\r\n}\r\n}\r\n}\r\n}', 265, 34, 5, '2018-12-03 13:48:46', '2019-01-21 15:55:04'),
(88171, 86, '220', 265, 34, 2, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88172, 88, '227', 265, 34, 0, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88173, 89, '233', 265, 34, 0, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88174, 90, '234', 265, 34, 2, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88175, 91, '237', 265, 34, 0, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88176, 92, '241', 265, 34, 2, '2018-12-03 13:48:46', '2018-12-03 13:48:46'),
(88191, 85, 'import java.util.*;\r\n\r\npublic class fci;\r\n\r\n{\r\npraived String name;\r\nprivate String place;\r\n//private trips scientific;\r\n//private trips entertainment;\r\n\r\npublic fci(String name ,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n{\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic void setname(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic String getplace()\r\n{\r\nreturn place;\r\n}\r\npublic void setplace(String place)\r\n{\r\nthis.place=place;\r\n}\r\n/*public int getPeriod(int day)\r\n{\r\nreturn day;\r\n}*/\r\n\r\npublic String toString()\r\n{\r\n@override\r\nreturn (\"name:\"+name +\"place\" +place) \r\n}\r\n\r\n}\r\npublic class scientific extends fci()\r\n{\r\nprivate int start_date;\r\nprivate int end_date;\r\npublic scientific(int start_date ,int ent_date ,String name ,String place)   \r\n{\r\nsuper(name,place);\r\nthis.start_date=start_date;\r\nthis.end_date=end_date;\r\n}\r\npublic int getPeriod(int day)\r\n{\r\nreturn day;\r\n}\r\npublic String toString()\r\n{\r\n@override\r\nreturn (\"start_day:\"+start_day+\"end_day\"+end_day+\"name\"+super.getname()+\"place\"+super.getplace()) \r\n}\r\n\r\n} \r\n\r\n\r\npublic class entertainment extends fci()\r\n{\r\nprivate int date;\r\npublic scientific(int date ,String name ,String place)   \r\n{\r\nsuper(name,place);\r\nthis.date=date;\r\n}\r\npublic int getPeriod(int day)\r\n{\r\nreturn day;\r\n}\r\npublic String toString()\r\n{\r\n@override\r\nreturn (\"start_day:\"+start_day+\"end_day\"+end_day+\"name\"+super.getname()+\"place\"+super.getplace()) \r\n}\r\n\r\n}\r\npublic static void main(String[] args)\r\nScanner input =new Scanner(System.in);\r\n{\r\n  fci f1=new fci(\"ali\",\"assiut\");\r\nfci f2 = new fci(\"ahmed\",\"cairo\",2014,2018);\r\nfci f3 =new fci(\"aiman\",\"giza\",2019);\r\nSystem.out.print(f1.getname()+\" \"+fi.getplace());\r\nSytem.out.print(f2.scientific ());\r\nSytem.out.print(f3.entertainment());\r\n\r\n}', 268, 34, 5, '2018-12-03 13:48:53', '2019-01-21 15:55:42'),
(88192, 85, 'package program\r\npublic class scientific_trip extends trip\r\n{\r\nprivate String endDate;\r\n//static int nums=0;\r\npublic scientific_trip(String name,String place,String startDate,String endDate)\r\n{\r\nsuper(String name,String place,String startDate);\r\nthis.endDate=endDate;\r\n}\r\n/*public static int getnums()\r\n{\r\nnums++;\r\n}*/\r\npublic int getPeriod\r\n{\r\nString[] arr=endDate.split(\"/\",0);\r\nString[] arr1=startDate.split(\"/\",0);\r\nreturn ((Integer.paresInt(arr1[0])-nteger.paresInt(arr[0]))+((Integer.paresInt(arr1[1])-nteger.paresInt(arr[1]))*30)+(Integer.paresInt(arr1[2])-nteger.paresInt(arr[2])*365));\r\n}\r\n}\r\npackage program\r\npublic class entertainment_trip extends trip\r\n{\r\nstatic int nume;\r\npublic entertainment_trip(String name,String place,String startDate)\r\n{\r\nsuper(String name,String place,String startDate);\r\nnume++;\r\n}\r\n/*public static int getnume()\r\n{\r\nnume++;\r\n}*/\r\n}    \r\npackage program\r\npublic class trip\r\n{\r\npublic String name;\r\npublic String place;\r\npublic String startDate;\r\npublic trip(String name,String place,String startDate)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\nthis.startDate=startDate;\r\n}\r\npublic void setname(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic void setplace(String place)\r\n{\r\nthis.place=place;\r\n}\r\npublic void setplace(String startDate)\r\n{\r\nthis.startDate=startDate;\r\n}\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic String getplace()\r\n{\r\nreturn place;\r\n}\r\npublic void getstartDate(String startDate)\r\n{\r\nreturn startDate;\r\n}\r\n}  \r\npackage program\r\npublic class program\r\n{\r\npublic static void main(String[] args)\r\n{\r\nscientific_trip s1=new scientific_trip(\"tr1\",\"Asyut\",\"12/12/2018\",\"15/12/2018\");\r\nscientific_trip s2=new scientific_trip(\"tr2\",\"Cairo\",\"17/12/2018\",\"18/12/2018\");\r\nentertainment_trip e1=new entertainment_trip(\"tr3\",\"England\",\"20/12/2018\");\r\nentertainment_trip e2=new entertainment_trip(\"tr4\",\"Spani\",\"22/12/2018\");\r\nentertainment_trip e3=new entertainment_trip(\"tr5\",\"Tunis\",\"25/12/2018\");\r\nint list=((s1.getPeriod()+s2.getPeriod())+entertainment_trip.nume);\r\nSystem.out.println(\"Total number of days for all trips = \"+list);\r\n}\r\n}', 278, 34, 8, '2018-12-03 13:48:53', '2019-01-21 15:56:58'),
(88193, 86, '219', 268, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88194, 86, '220', 278, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88195, 88, '228', 268, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88196, 88, '229', 278, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88197, 89, '233', 268, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88198, 89, '231', 278, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88199, 90, '234', 268, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88200, 90, '234', 278, 34, 2, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88201, 91, '237', 268, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88202, 91, '236', 278, 34, 1, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88203, 92, '238', 268, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88204, 92, '239', 278, 34, 0, '2018-12-03 13:48:54', '2018-12-03 13:48:54'),
(88212, 85, 'public class trip \r\n{\r\npublic String name,place;\r\npublic trip()\r\n{\r\nname=\"none\";\r\nplace=\"none\';\r\n}\r\npublic trip(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic int get period (trip t) \r\n{\r\nif (t.instance of(scientific trip));\r\n{\r\nString [] arr 1=t.start date.split(\":\");\r\nint day 1=Integer.parseInt(arr[0].trim());\r\nint month 1=Integer.parseInt(arr[1].trim());\r\nint year 1=Integer.parseInt(arr[2].trim());\r\nString [] arr 2=t.end date.split(\":\");\r\nint day 2=Integer.parseInt(arr[0].trim());\r\nint month 2=Integer.parseInt(arr[1].trim());\r\nint year 2=Integer.parseInt(arr[2].trim());\r\nint day 3=day 2-day 1;\r\nint month 3=day 2-day 1;\r\nint year 3=day 2-day 1;\r\nreturn day 3;\r\n}\r\nelse\r\n{\r\nString [] arr 3=t.split(\":\");\r\nint day 4=Integer.parseInt(arr[0].trim());\r\nint month 4=Integer.parseInt(arr[1].trim());\r\nint year 4=Integer.parseInt(arr[2].trim());\r\nreturn day 4;\r\n}\r\n\r\n}\r\n}\r\npublic class scientific trip extends trip \r\n{\r\nString start date;\r\nString end date;\r\npublic scientific trip()\r\n{\r\nstart date=\"none\";\r\nend date=\"none\";\r\n} \r\npublic scientific trip(String s , String e )\r\n{\r\nstart date=s;\r\nend date=e;\r\n}\r\npublic scientific trip(,string n,String p,String s , String e )\r\n{\r\nsuper(n,p);\r\nstart date=s;\r\nend date=e;\r\n}\r\n\r\n} \r\npublic class entertainment trip extends trip \r\n{\r\nString date;\r\n public entertainment trip()\r\n{\r\ndate=\"none\";\r\n}\r\n public entertainment trip(String d)\r\n{\r\ndate=d;\r\n}\r\n public entertainment trip(String n,String p,String d)\r\n{\r\nsuper(n,p);\r\ndate=d;\r\n}\r\n} \r\npublic class main\r\n{\r\npublic static void main(String [] args)\r\n{\r\ntrip [] trips=new trip[5];\r\nfor(int i=0;i<2;i++)\r\n{\r\ntrips[i]=new scientific trip();\r\n}\r\nfor(int i=2;i<5;i++)\r\n{\r\ntrips[i]=new entertainment trip ();\r\n}\r\nlong total days;\r\nfor(int i=0;i<trips.length;i++)\r\n{\r\ntotal days+=trips[i].get period();\r\n}\r\n\r\nSystem.out.println(\"the total days is : \"+total days);\r\n}\r\n}', 311, 34, 7, '2018-12-03 13:49:07', '2019-01-21 15:58:17'),
(88213, 86, '220', 311, 34, 2, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88214, 88, '227', 311, 34, 0, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88215, 89, '231', 311, 34, 2, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88216, 90, '234', 311, 34, 2, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88217, 91, '236', 311, 34, 1, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88218, 92, '241', 311, 34, 2, '2018-12-03 13:49:07', '2018-12-03 13:49:07'),
(88219, 85, 'class trips{\r\nprivate String name;\r\nprivate String place;\r\n\r\n}\r\nclass scientific trip extends trips{\r\nprivate int startdate;\r\nprivate int enddate;\r\n}\r\n    class entertainment trip extends trips   {\r\nprivate int day;\r\n private int date;\r\npublic void setperiod(int d){\r\nthis.day=d;\r\n}\r\npublic int getperiod(){\r\nreturn this.day;\r\n\r\n}\r\n   } \r\nin main:\r\n trips []ab=new  trips[5];\r\n scientific trip []arr=new scientific trip[2]; \r\nentertainment trip []a=new entertainment trip[3];\r\nfor (int i=0;i<a.length;i++){\r\nint sum =0;\r\nsum+=a[i].day;\r\n System.out.print (\"sum=\"+sum);\r\n}', 360, 34, 3, '2018-12-03 13:49:08', '2019-01-21 15:58:52'),
(88220, 86, '219', 360, 34, 0, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88221, 88, '227', 360, 34, 0, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88222, 89, '232', 360, 34, 0, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88223, 90, '234', 360, 34, 2, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88224, 91, '236', 360, 34, 1, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88225, 92, '241', 360, 34, 2, '2018-12-03 13:49:08', '2018-12-03 13:49:08'),
(88240, 85, 'public class scientific_trip{\r\nString name;\r\nString place;\r\nString date_Start;\r\nString date_End;\r\n\r\npublic scientific_trip(){\r\nname = \"s\";\r\nplace = \"Aswan\";\r\ndate_Start = \"1/11/2018\";\r\ndate_End = \"4/11/2018\";\r\n}\r\n\r\npublic scientific_trip(String n, String p, String d, String dd){\r\nname = n;\r\nplace = p;\r\ndate_Start = d;\r\ndate_End = dd;\r\n}\r\npublic getName(){\r\nreturn name;\r\n}\r\npublic String setName(String name){\r\nthis name = name;\r\n}\r\n\r\npublic getPlace(){\r\nreturn place;\r\n}\r\npublic String setPlace(String name){\r\nthis place= place;\r\n}\r\n\r\npublic getDate_Start(){\r\nreturn date_Start;\r\n}\r\npublic String setDate_Start(String name){\r\nthis date_Start= date_Start;\r\n}\r\n\r\npublic getDate_End(){\r\nreturn date_End;\r\n}\r\npublic String setDate_End(String name){\r\nthis date_Start= date_End;\r\n}\r\npublic void print(){\r\n\r\npublic void dd(String date_Start){\r\nString [] arr = new arr[3];\r\nint day = integer.parseInt(arr[0].trim());\r\n}\r\npublic void ddd(String date_End){\r\nString [] arr = new arr[3];\r\nint day = integer.parseInt(arr[0].trim());\r\n}\r\nint i = dd - ddd;\r\nreturn i;\r\n}\r\n}                                                                                                                \r\n \r\n\r\npublic class entertainment_trip{\r\nString name;\r\nString place;\r\nString date;\r\n\r\npublic entertainment_trip(){\r\nname = \"v\";\r\nplace = \"Aswan\";\r\ndate_Start = \"1/10/2018\";\r\n}\r\n\r\npublic entertainment_trip(String n, String p, String d, String dd){\r\nname = n;\r\nplace = p;\r\ndate_Start = d;\r\n}\r\n\r\npublic getName(){\r\nreturn name;\r\n}\r\npublic String setName(String name){\r\nthis name = name;\r\n}\r\n\r\npublic getPlace(){\r\nreturn place;\r\n}\r\npublic String setPlace(String name){\r\nthis place= place;\r\n}\r\n\r\npublic getDate(){\r\nreturn date;\r\n}\r\npublic String setDate(String name){\r\nthis date= date;\r\n}\r\npublic void print1(){\r\ni = 1;\r\n} \r\n}       \r\n\r\npublic static void main(String[] args) {\r\n\r\nscientific_trip o = new scientific_trip(\"sdd\", \"cairo\", \"12/5/2017,\" \"15/5/2017\");\r\nscientific_trip m = new scientific_trip(ssa\", \"Luxor\", \"12/4/2018,\" \"18/5/2018\");\r\n\r\nentertainment_trip u = new entertainment_trip();\r\nentertainment_trip p = new entertainment_trip();\r\nentertainment_trip t = new entertainment_trip();\r\n\r\nSystem.out.println(\"Number of all trip is : \" + print() + print1());\r\n\r\n}}', 339, 34, 4, '2018-12-03 13:49:25', '2019-01-22 08:20:35'),
(88241, 86, '220', 339, 34, 2, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88242, 88, '227', 339, 34, 0, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88243, 89, '231', 339, 34, 2, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88244, 90, '234', 339, 34, 2, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88245, 91, '236', 339, 34, 1, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88246, 92, '241', 339, 34, 2, '2018-12-03 13:49:26', '2018-12-03 13:49:26'),
(88247, 85, 'public class trip()\r\n{\r\nString name ;    \r\nString place;\r\n}  \r\nclass scientific trip()\r\n{\r\nstring day=1;\r\n double start date; \r\ndouble end date;\r\n string place;\r\n}   \r\nclass entertainment trip()\r\n{string name;   \r\ndouble date; \r\n string place;\r\n}\r\n\r\npublic get period ()\r\n{system. out .print(number of day for a trip);\r\n}\r\n\r\npublic static void main (string [] args){\r\ntrip();\r\nscientific trip ();\r\nc\r\nscanner s=new scanner(system.in)\r\ns name=next string;\r\nsystem. out .print(enter name);\r\nscanner s=new scanner(system.in)\r\ns start date=next int;\r\nsystem .out.print( enter statr date);\r\nscanner s=new scanner(system.in)\r\ns end date=next  int;\r\nsystem .out .print(enter ent date)\r\n}', 318, 34, 3, '2018-12-03 13:49:27', '2019-01-22 08:21:33'),
(88248, 86, '219', 318, 34, 0, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88249, 88, '229', 318, 34, 2, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88250, 89, '233', 318, 34, 0, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88251, 90, '235', 318, 34, 0, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88252, 91, '236', 318, 34, 1, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88253, 92, '239', 318, 34, 0, '2018-12-03 13:49:27', '2018-12-03 13:49:27'),
(88327, 85, 'public class Trip\r\n{\r\n     protected String name;\r\n     protected String place;\r\n     public Trip( String s, String x){\r\n     name=s;\r\n     place=x;\r\n   }\r\n}    \r\npublic  class Scientific_trip  extends Trip\r\n{\r\n  protected int start_date;\r\n  protected int end_date;\r\n  public Scientific_trip(String s,String x,int h , int t){\r\n  super(s,x);\r\n  start_date=h;\r\n  end_date=t;\r\n  }\r\n}\r\n  \r\npublic class  Entertainment_trip extends Trip\r\n{\r\n  protected int date;\r\n public  Entertainment_trip ( String s , String x , int d)\r\n {\r\n  super(s,x);\r\n  date= d;\r\n  }\r\n public int[]  get_Period()\r\n  {\r\n    start_date=String.split(\"/\");\r\n    int day[]=ParseInt(start_date[].trim);\r\n    int month[]=ParseInt(start_date[].trim);\r\n    int year[]=ParseInt(start_date[].trim);\r\n   int day1[]=ParseInt(end_date[].trim);\r\n    int month1[]=ParseInt(end_date[].trim);\r\n    int year1[]=ParseInt(end_date[].trim);\r\n    return ((day1-day)+(month1-month)*30+(year1-year)*365)*2+3;\r\n  //or\r\n    return (end_date - start_date)*2+3*1;\r\n   }\r\n}                                                                                       \r\nclass Ali\r\n{\r\n public static void main(String[] args)\r\n{\r\n  \r\n}\r\n}', 367, 34, 5, '2018-12-03 13:49:53', '2019-01-22 08:23:36'),
(88328, 86, '219', 367, 34, 0, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88329, 88, '229', 367, 34, 2, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88330, 89, '232', 367, 34, 0, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88331, 90, '234', 367, 34, 2, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88332, 91, '237', 367, 34, 0, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88333, 92, '238', 367, 34, 0, '2018-12-03 13:49:53', '2018-12-03 13:49:54'),
(88341, 85, 'package trip;\r\npublic class tripe{\r\n\r\nString name ;\r\nString place;\r\npublic tripe()\r\n{\r\n}\r\npublic tripe (String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic String tostring()\r\n{\r\nreturn\"the trip name : \"+name+\" the place is \"+place;\r\n}\r\n}\r\npackage trip;\r\nimport java.util.Date;\r\npublic class scientific extends tripe {\r\n\r\nDate startdate;\r\nDate enddate;\r\npublic scientific()\r\n{\r\nstartdate=new Date();\r\nenddate=new Date();\r\n}\r\npublic scientific(Date s,Date e)\r\n{\r\nstartdate=s;\r\nenddate=e;\r\n}\r\npublic scientific(String n,String p,Date s,Date e)\r\n{\r\nsuper(n,p);\r\nstartdate=s;\r\nenddate=e;\r\n}\r\npublic int getperiod()\r\n{\r\nreturn enddate-startdate;\r\n}\r\npublic String tostring()\r\n{\r\nreturn super.tostring()+\" the start date is : \"+startdate+\" the end date :\"+enddate;\r\n}\r\n\r\n\r\n}\r\npackage trip;\r\nimport java.util.Date;\r\npublic class entertainment extends tripe{\r\n\r\nDate date;\r\npublic entertainment()\r\n{\r\ndate=new Date();\r\n}\r\npublic entertainment(Date d)\r\n{\r\ndate=d;\r\n}\r\npublic entertainment(String n,String p,Date d)\r\n{\r\nsuper(n,p);\r\ndate=d;\r\n\r\n}\r\npublic int getperiod()\r\n{\r\nreturn 1;\r\n}\r\npublic String tostring()\r\n{\r\nreturn super.tostring()+\" the date :\"+date;\r\n}\r\n\r\n\r\n\r\n\r\n}\r\npackage trip;\r\n\r\nimport java.util.Date;\r\npublic class Trip{\r\npublic static void main (String [] args)\r\n{\r\nDate sd1=new Date();\r\nDate ed1=new Date(5);\r\nDate sd2=new Date();\r\nDate ed2=new Date(6);\r\nDate d1=new Date(1);\r\nDate d2=new Date(2);\r\nDate d3=new Date(3);\r\n\r\n\r\nscientific s1=new scientific(\"musem\",\"cairo\",sd1,ed1);\r\nscientific s2=new scientific(\"pyramids\",\"giza\",sd2,ed2);\r\n\r\nentertainment e1= new entertainment(\"sagya\",\"fayoum\",d1);\r\nentertainment e2= new entertainment(\"musem\",\"cairo\",d2);\r\nentertainment e3= new entertainment(\"pyramids\",\"giza\",d3);\r\nSystem.out.println(s1.tostring());\r\nSystem.out.println(s2.tostring());\r\nSystem.out.println(e1.tostring());\r\nSystem.out.println(e2.tostring());\r\nSystem.out.println(e3.tostring());\r\n\r\n\r\nSystem.out.println(s1.getperiod());\r\nSystem.out.println(s2.getperiod());\r\nSystem.out.println(e1.getperiod());\r\nSystem.out.println(e2.getperiod());\r\nSystem.out.println(e3.getperiod());\r\nSystem.out.println(s1.getperiod()+s2.getperiod()+3);\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}', 262, 34, 9, '2018-12-03 13:49:58', '2019-01-22 13:16:54'),
(88342, 86, '218', 262, 34, 0, '2018-12-03 13:49:58', '2018-12-03 13:49:58'),
(88343, 88, '229', 262, 34, 2, '2018-12-03 13:49:58', '2018-12-03 13:49:59'),
(88344, 89, '233', 262, 34, 0, '2018-12-03 13:49:58', '2018-12-03 13:49:59'),
(88345, 90, '234', 262, 34, 2, '2018-12-03 13:49:58', '2018-12-03 13:49:59'),
(88346, 91, '236', 262, 34, 1, '2018-12-03 13:49:58', '2018-12-03 13:49:59'),
(88347, 92, '241', 262, 34, 2, '2018-12-03 13:49:58', '2018-12-03 13:49:59');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(88387, 85, 'import java.util.Date;\r\npublic class trip \r\n{\r\nprotected String name ;\r\nprotected String place ;\r\nprotected int counter ;\r\npublic trip (String n , String p )\r\n{\r\n    name=n;\r\n     place=p;\r\n}\r\n}\r\npublic class scientifictrip extends trip \r\n{\r\nprotected String startdate ;\r\nprotected String enddate;\r\n\r\n\r\n   public scientifictrip (String sdate , String edate)\r\n{\r\n   startdate = sdate;\r\n    enddate = edate;\r\n  \r\n}\r\n    public scientifictrip (String sdate ,String edate , String n ,String p )\r\n{\r\n super (n , p );\r\n   startdate = sdate;\r\n  enddate = edate ;\r\n}\r\npublic int getPeriod ()\r\n{\r\nString [] arr = startdate.split(\"/\");\r\nString [] arre = enddate.split(\"/\");\r\nint day = arre [0] - arr[0];\r\nint month = arr[1] - arr[1];\r\nint period = (month*30) + day ;\r\nreturn period ;\r\n}\r\n}\r\n      public class entertainmenttrip \r\n{\r\nprotected String date ;\r\npublic  entertainmenttrip ()\r\n{\r\ncounter ++;\r\n}\r\npublic entertainmenttrip (String d )\r\n{\r\n  date = d ;\r\ncounter ++ ;\r\n}\r\npublic entertainmenttrip (String d , String n , String p )\r\n{\r\n  super (n ,p );\r\ndate = d ;\r\ncounter ++;\r\n}\r\npublic void getcounter ()\r\n{\r\nreturn counter ;\r\n}\r\n} \r\n                public class main \r\n{\r\npublic static void main (String [] args )\r\n{\r\nscientifictrip s1 = new scientifictrip (\"1/11/2005\",\"10/11/2005\");\r\ns1.getPeriod;\r\nscientifictrip s2 = new scientifictrip (\"20/11/2005\",\"30/11/2005\");\r\ns2.getPeriod;\r\n\r\n entertainmenttrip e1=new  entertainmenttrip ();\r\n entertainmenttrip e2=new  entertainmenttrip ();\r\n entertainmenttrip e3=new  entertainmenttrip ();\r\nint period ;\r\nperiod = s1.getPeriod+s2.getPeriod+e1.getcounter;\r\nSystem.out.println(\"the number days is \"+period);\r\n}\r\n}', 383, 34, 8, '2018-12-03 13:50:09', '2019-01-22 13:17:10'),
(88388, 86, '218', 383, 34, 0, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88389, 88, '228', 383, 34, 0, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88390, 89, '232', 383, 34, 0, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88391, 90, '234', 383, 34, 2, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88392, 91, '236', 383, 34, 1, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88393, 92, '239', 383, 34, 0, '2018-12-03 13:50:09', '2018-12-03 13:50:10'),
(88420, 85, 'public class Trip()\r\n{\r\nprivate string  name ;\r\nprivate string place;\r\npublic Trip ()\r\n{\r\n}\r\npublic Trip(string n , sting p)\r\n{\r\nname  n;\r\nplace  p;\r\n}\r\npublic void setname(string n)\r\n{\r\nname = n;\r\n}\r\npublic string getname()\r\n{\r\nreturn name; \r\n}\r\n\r\npublic void setplace(string p)\r\n{\r\nplace = p;\r\n}\r\npublic string getplace()\r\n{\r\nreturn place;\r\n}\r\n} \r\npublic clacc scientificTrip extends Trip()\r\n{\r\nsuper(n,p)\r\nprivate int startDate;\r\nprivate int endDate ;\r\nprivate int NumOfDays\r\npublic sceientificTrip()\r\n{\r\n}\r\npublic sceintificTrip (string S_D , string E_D)\r\n{\r\nstartDate  S_D;\r\nendDate  E_D;\r\n}\r\npublic void setstartDate(int S_D)\r\n{\r\nstartDate = S_D;\r\n}\r\npublic int getstartDate()\r\n{\r\nreturn starttDate;\r\n}\r\npublic void setendDate(int E_D)\r\n{\r\nendtDate = E_D;\r\n}\r\npublic int getendDate()\r\n{\r\nreturn endtDate;\r\n}\r\npublic void setPeriod(int NumOfDays)\r\n{\r\nP = NumOfDays;\r\n}\r\npublic int getPeriod()\r\n{\r\nreturn NumOfDays;\r\n}\r\n}\r\n\r\npublic class entertainmentTrip extends Trip()\r\n{\r\nsuper(n,p)\r\nprivate int date;\r\nprivate int NumOfDays;\r\npublic entertainmentTrip()\r\n{\r\n}\r\npublic entertainmentTrip(int d)\r\n{\r\ndate d;\r\n}\r\npublic void setPeriod(int NumOfDays)\r\n{\r\nP =NumOfDays;\r\n}\r\npublic int getPeriod()\r\n{\r\nreturn NumOfDays;\r\n}\r\npublic void setDate(int d)\r\n{\r\ndate = d;\r\n}\r\npublic int getDate()\r\n{\r\nreturn Date;\r\n}\r\n}    \r\npublic static void main(string[]args)\r\n{\r\nsceintificTrip s1 = new scientificTrip();\r\nentertainmentTrip e1 = new entertainmentTrip();\r\nSystem.out.print(s1.getNumOfDays());\r\nSystem.out.print(s1.getNumOfDays());\r\n\r\n\r\n\r\n}', 374, 34, 6, '2018-12-03 13:50:18', '2019-01-22 13:17:33'),
(88421, 86, '220', 374, 34, 2, '2018-12-03 13:50:18', '2018-12-03 13:50:18'),
(88422, 88, '227', 374, 34, 0, '2018-12-03 13:50:18', '2018-12-03 13:50:19'),
(88423, 89, '230', 374, 34, 0, '2018-12-03 13:50:18', '2018-12-03 13:50:19'),
(88424, 90, '234', 374, 34, 2, '2018-12-03 13:50:18', '2018-12-03 13:50:19'),
(88425, 91, '236', 374, 34, 1, '2018-12-03 13:50:18', '2018-12-03 13:50:19'),
(88426, 92, '239', 374, 34, 0, '2018-12-03 13:50:18', '2018-12-03 13:50:19'),
(88487, 85, 'package ex;\r\nimport java.util.*; \r\npublic class ex;\r\n{\r\npublic static void main(String[] args)\r\n{\r\nscientific T1=new scientific();\r\nscientific T2=new scientific(\"saro\",\"parse\");\r\nentertainment T3=new entertainment ();\r\nentertainment T4=new entertainment ();\r\nentertainment T5=new entertainment ();\r\nT1.setstartdate(23,12,2018);\r\nT2.setstartdate(1,1,2019);\r\nT3.setstartdate(12,12,2018);\r\nT4.setstartdate(3,12,2018);\r\nT5.setstartdate(6,12,2018);\r\nT1.setenddate(25,12,2018);\r\nT2.setenddate(13,1,2019);\r\nSystem.out.println(\"the total number of days for trips is : \"+T1.getPeriod+T2.getPeriod+T3.getPeriod+T4.getPeriod+T5.getPeriod);\r\n\r\n}}\r\npublic class scientific\r\n{\r\nDate  startdate ;\r\nDate  endend ;\r\nString name;\r\nString place;\r\npublic scientific()\r\n{\r\nname =\"trip\";\r\nplace =\"Assiut\";\r\n Date startdate=new Date;\r\nDate endend=new Date;\r\n\r\n}\r\npublic scientific(String name,String place )\r\n{\r\nthis.name =name;\r\nthis.place =place;\r\n Date startdate=new Date;\r\nDate enddate=new Date;\r\n\r\n}\r\npublic int getPeriod(Date a,Date b) \r\n{\r\nif(a.month==b.month)\r\n{\r\n  return b.day-a.day+1;\r\n}\r\nelse\r\n return (b.month-a.month)*30+b.day-a.day+1;\r\n}\r\npublic void setenddate(int day,int month,int year)\r\n{ \r\nenddate.day=day;\r\nenddate.month=month;\r\nenddate.year=year;\r\n}\r\npublic void setstartdate(int day,int month,int year)\r\n{ \r\nstartdate.day=day;\r\nstartdate.month=month;\r\nstartdate.year=year;\r\n}\r\n\r\n}\r\npublic class entertainment \r\n{\r\nDate  startdate ;\r\nString name;\r\nString place;\r\npublic int getPeriod() \r\n{\r\n  return 1;\r\n}\r\npublic entertainment ()\r\n{\r\n Date startdate=new Date;\r\nname =\"trip\";\r\nplace =\"Assiut\";\r\n}\r\npublic entertainment (String name,String place )\r\n{\r\n Date startdate=new Date;\r\nthis.name =name;\r\nthis.place =place;\r\n}\r\npublic void setstartdate(int day,int month,int year)\r\n{ \r\nstartdate.day=day;\r\nstartdate.month=month;\r\nstartdate.year=year;\r\n}}', 389, 34, 6, '2018-12-03 13:50:54', '2019-01-22 13:17:46'),
(88488, 86, '220', 389, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:54'),
(88489, 88, '229', 389, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:54'),
(88490, 89, '230', 389, 34, 0, '2018-12-03 13:50:54', '2018-12-03 13:50:54'),
(88491, 90, '234', 389, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:54'),
(88492, 91, '237', 389, 34, 0, '2018-12-03 13:50:54', '2018-12-03 13:50:54'),
(88493, 92, '241', 389, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:55'),
(88494, 85, 'package FCI;\r\nimport java.util.*;\r\npublic class trip()\r\n{\r\n   protected  String name;\r\n   protected  String place; \r\npublic trip(){}\r\npublic trip(String name, String place)\r\n{\r\n   this name=name;\r\n   this place= place;\r\n}\r\npublic int get period(int start_date )\r\n{\r\nreturn period start date++;\r\n}\r\npublic class scientific extends trip(){\r\n   protected int start_date;\r\n   protected  int end_date;\r\npublic scientific (){}\r\npublic scientific(int start_date,int end_date){\r\n   this start_data=start_date;\r\n   this end_data=end date;\r\n}\r\npublic scientific (string name,string place, int start_date,int end_date)\r\n{\r\n  super (name,place);\r\n  this int start_data;\r\n  this int end_date;\r\n}\r\npublic int get period(int start_date){\r\n   return period start_date++;\r\n}}\r\npublic class entertainment extends trip(){\r\n   protected int date;\r\npublic entertainment(){}\r\npublic entertainment(int data)\r\n{   \r\nthis date= date;\r\n}\r\npublic entertainment (String name,String place,int date)\r\n{  \r\n super(name,place);\r\n  this date=date; \r\n}\r\npublic int get period(int date)\r\n{\r\n    if(date==1)\r\n    return period date 1;\r\n}}\r\npublic class program(){\r\npublic static void main(String [],args)\r\n{ \r\n         String name;\r\n         String place;\r\nscanner input=new scanner(System.in);\r\n  name=input next ();\r\n   place =input next();\r\n  scientific s1=new scientific ();\r\n  scientific s2=new scientific ();\r\n  entertainment e1=new entertainment();\r\n  entertainment e2=new entertainment();\r\n  entertainment e3=new entertainment();\r\n  System.out.print ln(s1);\r\n  System.out.print ln(s2);\r\n  System.out.print ln(e1);\r\n  System.out.print ln(e2);\r\n  System.out.print ln(e3);\r\n}}', 356, 34, 6, '2018-12-03 13:50:54', '2019-01-22 08:34:57'),
(88495, 86, '220', 356, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:55'),
(88496, 88, '227', 356, 34, 0, '2018-12-03 13:50:54', '2018-12-03 13:50:55'),
(88497, 89, '233', 356, 34, 0, '2018-12-03 13:50:54', '2018-12-03 13:50:55'),
(88498, 90, '234', 356, 34, 2, '2018-12-03 13:50:54', '2018-12-03 13:50:55'),
(88499, 91, '236', 356, 34, 1, '2018-12-03 13:50:55', '2018-12-03 13:50:55'),
(88500, 92, '238', 356, 34, 0, '2018-12-03 13:50:55', '2018-12-03 13:50:55'),
(88501, 85, 'import java .util.Scanner;\r\npublic class s{\r\n String name ;String place ; int  s ;int e;\r\ns(String na,String pl,int  a,int b){\r\n}\r\npublic int getperiod(int s,int  e){\r\nint sum =0;\r\nfor(Int i=s;i<e;i++){\r\nsum++;\r\n}\r\n\r\nreturn sum ;\r\n}\r\n\r\n}   \r\npublic class e{ \r\nString date ;String name; String place;\r\n e(String n , String p, String da){}\r\npublic int getPeriod(String date)\r\n{int sum2 =0;\r\nsum2=date;\r\nreturn sum2;\r\n\r\n}\r\n\r\n}\r\npublic static void main(String[] args){\r\ns  [] s1 = new s[2];\r\ne e1 = new e[3]; Scanner input = new Scanner (System.in)\r\nfor(int i=0 ;i<2;i++){e1 = new e();\r\ns1 = news();}\r\nfor(int i=0;i<s1.length;i++){\r\ns1[i].s = input.nextInt();\r\ne1[i].e = input.nextInt();          } int sum =0; int sum2=0;\r\nfor (int i=0;i<s1.lentgh;i++){\r\nsum2 += e1.getperiod();}\r\nfor(int i=0;i<s1.length;i++){\r\nsum +=s1.getperiod():;\r\n}\r\nint sum2 =sum +sum2;\r\nSystem.out.println(\"nember of day is == \"+ sum3);\r\n}', 299, 34, 4, '2018-12-03 13:50:55', '2019-01-22 08:39:04'),
(88502, 86, '220', 299, 34, 2, '2018-12-03 13:50:55', '2018-12-03 13:50:56'),
(88503, 88, '227', 299, 34, 0, '2018-12-03 13:50:55', '2018-12-03 13:50:56'),
(88504, 89, '232', 299, 34, 0, '2018-12-03 13:50:56', '2018-12-03 13:50:56'),
(88505, 90, '234', 299, 34, 2, '2018-12-03 13:50:56', '2018-12-03 13:50:56'),
(88506, 91, '236', 299, 34, 1, '2018-12-03 13:50:56', '2018-12-03 13:50:56'),
(88507, 92, '240', 299, 34, 0, '2018-12-03 13:50:56', '2018-12-03 13:50:56'),
(88578, 85, 'public class Trip\r\n{\r\nstring name;\r\nstring place;\r\n}\r\n class Sc_Trip extends Trip\r\n{ \r\nthis.trip(string name,string place)\r\nint start date;\r\nint end Date;\r\n} \r\npublic static void class En_Trip extends Trip\r\n{\r\nclass En_Trip extends Trip{\r\nvoid set_day(int d){\r\nday= d;\r\none_day_Trip();\r\nset_Period ();\r\nget_Period ();\r\n}\r\npublic static void main(String[] args){\r\nTrip t=new Trip();\r\n\r\n}', 391, 34, 2, '2018-12-03 13:51:07', '2019-01-22 08:40:35'),
(88579, 86, '220', 391, 34, 2, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88580, 88, '229', 391, 34, 2, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88581, 89, '230', 391, 34, 0, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88582, 90, '234', 391, 34, 2, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88583, 91, '237', 391, 34, 0, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88584, 92, '241', 391, 34, 2, '2018-12-03 13:51:07', '2018-12-03 13:51:08'),
(88585, 85, 'public class trips{\r\nprotected string name;\r\nprotected string place;\r\npublic trips(){\r\nname=\"no name\";\r\nplace=\"no place\";\r\npublic trips(String t,String y){\r\nname =t;\r\nplace=y;\r\n}\r\n}\r\npublic class scientific _Trips extends trips{\r\nint date;\r\nint end date;\r\n}\r\npublic scientific_trips(){\r\nname=\"name\";\r\ndate =0;\r\nend date=0;\r\nplace=\"place\";\r\n}\r\npublic scientific_trips(int date,int end date,String name,String place){\r\ndate=4;\r\nend date=23;\r\nname=\"name\";\r\nplace=\"place\";\r\n}\r\npublic class enter extends trips{\r\nint date;\r\npublic enter(){\r\ndate =0;\r\n}public enter(int x){\r\ndate=x;\r\n}\r\n}\r\npublic static int get_Period(){\r\n\r\nreturn end date-date;\r\n}\r\n}\r\n}                                                                                                              \r\n                                                    public static void main(String[] args) {\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 376, 34, 5, '2018-12-03 13:51:08', '2019-01-22 08:46:11'),
(88586, 86, '220', 376, 34, 2, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88587, 88, '229', 376, 34, 2, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88588, 89, '230', 376, 34, 0, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88589, 90, '234', 376, 34, 2, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88590, 91, '237', 376, 34, 0, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88591, 92, '241', 376, 34, 2, '2018-12-03 13:51:08', '2018-12-03 13:51:08'),
(88650, 85, 'import java.util.*;\r\npublic class java { public static void main (String []  args) { }}\r\n/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\nclass trip \r\n{\r\n  private String name , Place ; \r\n trip (){ name = \"work\" ; place = \"Cairo\";}\r\ntrip (String name , String place) {\r\nthis.name = name;\r\nthis.place = place;\r\n}\r\npublic String getName ()\r\n{ return name ;}\r\npublic String getPlace ()\r\n{ return place ;}\r\n}\r\n/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\nclass   scientific_trip  extends trip { String startdate ;  String enddate ; \r\nscientific_trip ()\r\n{startdate = \"1 / 2 /2010\"; enddate = \"10 / 2 / 2010\";}\r\nscientific_trip (String startdate , String enddate) { this.startdate = startdate ; this.enddate = enddate;}\r\nscientific_trip (String name , String place , String startdate , String enddate)\r\n{ super (name , place); this.startdate = startdate; this.enddate = enddate ;}\r\npublic String getstartdate ()\r\n{ return startdate ;}\r\npublic String getenddate ()\r\n{ return enddate;}\r\n}\r\n/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\nentertainment_trip extends trip { String date ;\r\nentertainment_trip ()\r\n{date = \"5 / 10 /2005\"; }\r\nentertainment_trip (String date) { this.date = date}\r\nentertainment_trip (Strind date , String name , String place) { super (name , place); this.date = date ;}\r\npublic String getDate ()\r\n{\r\nreturn date ;\r\n}\r\n}', 399, 34, 5, '2018-12-03 13:51:32', '2019-01-22 08:47:47'),
(88651, 86, '220', 399, 34, 2, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88652, 88, '228', 399, 34, 0, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88653, 89, '230', 399, 34, 0, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88654, 90, '234', 399, 34, 2, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88655, 91, '236', 399, 34, 1, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88656, 92, '239', 399, 34, 0, '2018-12-03 13:51:32', '2018-12-03 13:51:32'),
(88657, 85, 'public class trip { \r\nString name;\r\nString place;\r\ntrip () {}\r\ntrip (String name,String place)\r\n{this.name=name;\r\nthis.place=place;} \r\n}\r\npublic class sctrip extends trip {\r\nString stdate;\r\nString endate;\r\nsctrip () {}\r\nsctrip (String name,String place,String st ,String end){\r\nsupper(name,place);\r\nstdate=st;\r\nendate=end;}\r\npublic int getPeriod(String s1,String s2){\r\nString [] arr1 =s1.split(\"/\");\r\nString [] arr2=s2.split(\'/\");\r\nint day1 = Integer.parseInt(arr1[0].trim());\r\n int day2 = Integer.parseInt(arr2[0].trim());\r\nint month1 = Integer.parseInt(arr1[1].trim());\r\nint month2 = Integer.parseInt(arr2[1].trim());\r\nint year1= Integer.parseInt(arr1[2].trim());\r\nint year2 = Integer.parseInt(arr2[2].trim());\r\nif(month1==month2)\r\nreturn day2 - day1;\r\nelse return ((30-day1)+day2)+((month2-month1)*30);}}\r\npublis class entTrip {\r\nString date;\r\nint static num=0;\r\nentTrip () { }\r\nentTrip (String n,String p,String d){\r\nsupper (n,p);\r\ndate=d;\r\nnum++;}\r\npublic int getNum (){\r\nreturn num;\r\n}}\r\nimport java.util.*;\r\npublic class test {\r\npublic static void main (String []args){\r\n\r\nsctrip t1 =new sctrip ();\r\nsctrip t2 =new sctrip();\r\nentTrip t3=new entTrip();\r\nentTrip t4=new entTrip() ;\r\nentTrip t5 =new entTrip();\r\nint y =t1.getpriod +t2.getpriod+t3.getNum+t4.getNum+t5.getNum;\r\nSystem.out.print (\"total number of day for all trips =\" +y);\r\n}', 354, 34, 8, '2018-12-03 13:51:32', '2019-01-22 13:18:08'),
(88658, 86, '220', 354, 34, 2, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88660, 88, '227', 354, 34, 0, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88663, 89, '233', 354, 34, 0, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88664, 90, '234', 354, 34, 2, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88667, 91, '236', 354, 34, 1, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88669, 92, '241', 354, 34, 2, '2018-12-03 13:51:32', '2018-12-03 13:51:33'),
(88671, 85, 'public class Trip {\r\nString name , place ;\r\npublic Trip (){\r\nname = \"First\"; \r\nplace = \"Assuit\";\r\n}\r\npublic Trip (String n , String p){\r\nname = n ;\r\nplace = p ;\r\n}\r\n}\r\npublic class Scientific extends Trip{\r\nString start , end ;\r\npublic Scientific (){\r\nstart = \"17 November\";\r\nend = \"20 November\";\r\n}\r\npublic Scientific (String s , String e ){\r\nstart = s;\r\nend = e;\r\n}\r\npublic Scientific (String n , String p , String s , String e){\r\nsuper (n , p);\r\nstart = s;\r\nend = e;\r\n}\r\npublic String getPeriod (){\r\nreturns (\"the duration is \" + end - start);\r\n}\r\n}\r\n\r\npublic class Entertainment extends Trip {\r\n\r\nString date ;\r\n\r\npublic Entertainment (){\r\ndate =  \" 15 November\";\r\n}\r\npublic Entertainment (String d){\r\ndate = d;\r\n}\r\npublic Entertainment (String n , String p , String d){\r\nsuper (n , p);\r\ndate = d;\r\n}\r\n\r\npublic int getPeriod (){\r\nreturns (\"the duration is  \" + 1 );\r\n}\r\n}\r\n\r\npublic static void main (String [] args){\r\nint T=0;\r\nTrip [] arr = new Trip [5];\r\nfor (i=0 ; i<arr.length ; i++ ){\r\nif (i%2==0){\r\nScenner scr = new Scanner (System.in);\r\nString d ; \r\nSystem.out.println (\"Enter the Date of the trip as a string\");\r\nd = scr.next(); \r\narr[i]= new Entertainment (d);\r\n}\r\nelse {\r\nScenner scr = new Scanner (System.in);\r\nString s , e ; \r\nSystem.out.println (\"Enter the start Date of the trip as a string\");\r\ns = scr.next();\r\nSystem.out.println (\"Enter the end Date of the trip as a string\");\r\ne = scr.next(); \r\narr[i]= new Entertainment (s , e);\r\n}\r\n}\r\nfor (int i = 0 ; i < arr.length ; i++){\r\nSystem.out.println(arr[i]);\r\nif (arr[i] instanceof Scientific )\r\nT+=((Scientific)arr[i]).getPeriod ();\r\nelse \r\nT+=((Entertainment)arr[i]).getPeriod ();\r\nSystem.out.println(\"the total days = \"+T+\" day \");\r\n\r\n} \r\n}', 253, 34, 7, '2018-12-03 13:51:35', '2019-01-22 09:04:39'),
(88672, 86, '220', 253, 34, 2, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88673, 88, '227', 253, 34, 0, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88674, 89, '233', 253, 34, 0, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88675, 90, '234', 253, 34, 2, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88676, 91, '236', 253, 34, 1, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88677, 92, '241', 253, 34, 2, '2018-12-03 13:51:35', '2018-12-03 13:51:36'),
(88718, 85, 'Public class trip {                                                                                                                \r\nprotect string name ;                                    \r\nProtect string place;\r\nPublic trip()\r\n{\r\nString name=\"test\";\r\nString  place=\"school\";\r\n}\r\nPublic trip(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic void setname(String name);\r\n{\r\nthis.name=name;\r\n}\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic void setplace (String place)\r\n{\r\nthis.place=place;\r\n}\r\npublic String getplace ()\r\n{\r\nreturn place;\r\n}\r\npublic class Scientific Trip extends trip()\r\n{\r\nPrivate String Start Date;\r\nPrivate String  End  Date;\r\n}\r\nPublic Scientific Trip()\r\n{\r\n String Start Date=\"1/1/2001\";\r\nString  End  Date=\"2/2/2002\";\r\n}\r\nPublic Scientific Trip(String  Start Date,String  End  Date,String name,String place)\r\nsuper(name,place);\r\nthis.Start Date=Start Date;\r\nthis.End  Date=End  Date;\r\n}\r\npublic String tostring()\r\n{\r\nreturn \"Start Date:\" +Start Date+,\"End  Date:\"+End  Date;\r\n}\r\npublic Entertainment  Trip extends trip()\r\n{\r\nPrivate String date;\r\npublic Entertainment  Trip()\r\n{\r\nString data=\"3/3/2003\";\r\n}\r\nPublic Entertainment  Trip(String data,String name,String place)\r\n{\r\nsuper(name,place);\r\nthis.data=data;\r\n}\r\npublic void setname(String name);\r\n{\r\nthis.name=name;\r\n}\r\npublic String getname()\r\n{\r\nreturn name;\r\n}\r\npublic void setplace (String place)\r\n{\r\nthis.place=place;\r\n}\r\npublic String getplace ()\r\n{\r\nreturn place;\r\n}\r\npublic void set data(string data)\r\n{\r\nthis.data=data;\r\n}\r\npublic String setdata()\r\n{\r\nreturn data;\r\n}\r\npublic String getperiod(String number)\r\n{\r\nstring[]array=array.split(\"/\");\r\nint x=Intger.Parseint(number);\r\nnumber=End  Date -Start Date;\r\nreturn \"number of trip:\" +number;\r\n}\r\npublic void package\r\nimport java.util.scanner;\r\npublic static void main(string[]args)\r\n{\r\ntrip t 1=new trip();\r\ntrip t 2=new trip()\r\ntrip [] arr=new trip[2]\r\n{\r\nfor(int i=0;i<arr.length;i++)\r\n{\r\narr[i]=new Scientific Trip;\r\n}\r\nscanner x=new scanner(system.in);\r\nfor(int i=0;i<arr.length;i++)\r\n{\r\narr[i]=setname.( x.next());\r\narr[i]=setnplace.(x.next());\r\narr[i]=setStart Date(x.next());\r\narr[i]=setEnd Date(x.next());\r\n}\r\nfor(int i=0;i<arr.length;i<i++)\r\n{\r\n Scientific Trip .to string;\r\n}\r\ntrip [] arr=new trip[3]\r\n{\r\nfor(int i=0;i<arr.length;i++)\r\n{\r\narr[i]=new Entertainment Trip;\r\n}\r\nfor(int i=0;i<arr.length;i++)\r\n{\r\narr[i]=setname.( x.next());\r\narr[i]=setnplace.(x.next());\r\narr[i]=setDate(x.next());\r\n}\r\nfor (int i=0;i<arr.length;i++)\r\n{\r\nEntertainment Trip.to string;\r\n}\r\nfor(int i=0;i<arr.length;i++)\r\n{\r\nint total;\r\ntotal=number.Scientific Trip+number.Entertainment Trip;\r\nsystem.out.print(\"total number of day for all trips\"+total;\r\n}', 380, 34, 6, '2018-12-03 13:51:53', '2019-01-22 09:05:59'),
(88719, 86, '220', 380, 34, 2, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88720, 88, '227', 380, 34, 0, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88721, 89, '233', 380, 34, 0, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88722, 90, '235', 380, 34, 0, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88723, 91, '236', 380, 34, 1, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88724, 92, '239', 380, 34, 0, '2018-12-03 13:51:53', '2018-12-03 13:51:54'),
(88725, 85, 'import java.util*;\r\npublic class time \r\n{\r\nprotected int day ;\r\nprotected int  month ;\r\nprotected int year ;\r\npublic time (int d , int m, int y)\r\n{\r\nday = d;\r\nmonth = m ;\r\nyear = y;\r\n}\r\n}\r\npublic class trip \r\n{\r\nprotected String name ;\r\nprotected String place ;\r\npublic trip ()\r\n{\r\nname= \"Test \";\r\nplace = \"Alex \";\r\n}\r\npublic trip (String n , String p )\r\n{\r\nname=n;\r\nplace = p ;\r\n} \r\n}\r\npublic class scientific extends trip \r\n{\r\nprotected time start ;\r\nprotected time end ;\r\nprotected int Period ;\r\npublic scientific ()\r\n{\r\nstart = \"20/11/2018\";\r\nend = \"22/11/2018\";\r\nPeriod = 2 ;\r\n}\r\npublic scientific (time s , time e , int p )\r\n{\r\nstart = s ;\r\nend = e ;\r\nPeriod = p ;\r\n}\r\npublic scientific (String n , String p , time s , time e , int p )\r\n{\r\nsuper (n , p );\r\nstart = s ;\r\nend = e ;\r\nPeriod = p ;\r\n}\r\npublic class entertainment extends trip \r\n{\r\nDate date = new Date ();\r\n}\r\npublic  entertainment (String n , String p )\r\n{\r\nsuper (n , p);\r\nSystem.out.print (date );\r\n}\r\npublic int getPeriod ()\r\n{\r\nreturn end.day-start.day;\r\n}\r\n}\r\npublic class Test \r\n{\r\npublic static void main (String [] args )\r\n{\r\nscientific trip1 = new scientific ();\r\nscientific trip2 = new scientific ();\r\nentertainment trip3 = new entertainment ();\r\nentertainment trip4 = new entertainment ();\r\nentertainment trip5 = new entertainment ();\r\nSystem.out.println (\"FCI  will organize 2 scientific trips and 3 entertainment trips \");\r\nint periodofscientific  = trip1.getPeriod  ()+ trip2.getPreiod ();\r\nint periodofentertainment = trip3.date+trip4.date+trip5.date ;\r\nint total = periodofscientific+periodofentertainment;\r\nSystem.out.println (\"The Total Number of Days for all Trips this Year  : \" + total );\r\n}\r\n}', 377, 34, 6, '2018-12-03 13:51:59', '2019-01-22 13:18:23'),
(88726, 86, '220', 377, 34, 2, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88727, 88, '227', 377, 34, 0, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88728, 89, '231', 377, 34, 2, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88729, 90, '235', 377, 34, 0, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88730, 91, '236', 377, 34, 1, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88731, 92, '239', 377, 34, 0, '2018-12-03 13:51:59', '2018-12-03 13:51:59'),
(88750, 85, 'public class faculty{                                                                                                     \r\n  protected string name;\r\n   protected   string place;\r\npublic faculty(string n,string p) {\r\nname=n;\r\nplace=p;\r\n} \r\npublic static int get Period(int day){\r\nstatic int number of day=day;\r\nreturn number of day;\r\n}\r\n\r\n\r\n\r\n}   \r\npublic class scientific   extends faculty{\r\n protected  string Data start_data;\r\n protected  string Data end_data;\r\npublic scientific(string n,string e ,string s,string p){\r\nname=n;\r\nplace=p;\r\nstart_data=new Data();\r\nstart_data=s;\r\nend_data=new Data();\r\nend_data=e;\r\n}\r\npublic class  entertainment extends faculty{\r\nprotected string data;\r\npublic  entertainment(string n,string p,string d) {\r\nname=n;\r\nplace=p;\r\ndata=d;\r\n\r\n\r\n}\r\n\r\n}      \r\npublic class text{\r\npublic static void main (string [] args ){\r\nscientific s=new scientific(\"karam\",\" Assiut \",\"12\\4\\2018\",25\\8\\2018\");\r\nscientific s 2=new scientific(\"Ali\",\" cario \",\"1\\4\\2018\",25\\8\\2018\");\r\nscientific s 3=new scientific(\"ahmed\",\" alx \",\"7\\4\\2018\",25\\8\\2018\");\r\nentertainment e 1=new entertainment(Ali\",\" Assiut \",\"12\\4\\2018)\r\nentertainment e 2=new entertainment(Ali\",\" Assiut \",\"12\\4\\2018\")\r\n\r\nSystem.out.print(faculty. get Period) ;\r\n\r\n}', 263, 34, 6, '2018-12-03 13:52:18', '2019-01-22 09:11:43'),
(88751, 86, '219', 263, 34, 0, '2018-12-03 13:52:18', '2018-12-03 13:52:18'),
(88752, 88, '227', 263, 34, 0, '2018-12-03 13:52:18', '2018-12-03 13:52:18'),
(88753, 89, '230', 263, 34, 0, '2018-12-03 13:52:18', '2018-12-03 13:52:18'),
(88754, 90, '234', 263, 34, 2, '2018-12-03 13:52:18', '2018-12-03 13:52:18'),
(88755, 91, '237', 263, 34, 0, '2018-12-03 13:52:18', '2018-12-03 13:52:18'),
(88756, 92, '239', 263, 34, 0, '2018-12-03 13:52:18', '2018-12-03 13:52:19'),
(88771, 85, 'public class trip{\r\n\r\n  protected String name;\r\n    protected String place; \r\n\r\npublic    trip(){\r\nthis(\"trip1\",\"cairo\");\r\n}                         \r\npublic    trip(String n,String p){\r\nname=n;\r\nplace=p;\r\n\r\n}       \r\nPublic String toString(){\r\nreturn \"name\"+name+\"\\nplace \"+place;\r\n}\r\n\r\n}\r\npublic class scientificTrip extends trip{\r\nprivate int startDate;\r\nprivate int endtDate;\r\npublic scientificTrip (){startDate=1;endtDate=1;}\r\npublic scientificTrip (int stDate,int eDate){startDate=stDate; endtDate=eDate;}\r\npublic scientificTrip (int stDate,int eDate,String n,String p){startDate=stDate; endtDate=eDate; name=n;\r\nplace=p; }\r\n\r\npublic static int getperiod(){ \r\nstatic int total += endtDate-startDate;\r\nreturn  total ;}\r\n\r\nPublic String toString(){\r\nreturn \"name\"+name+\"\\nplace \"+place+\"\\nstartdate\"+startDate+\"\\nendDate\"+endtDate+\"\\ntotal number of date until now \"+super.getperiod();\r\n}\r\n\r\n}\r\n\r\npublic class entertainmentTrip extends trip{\r\nprivate int dateOftrip;\r\n\r\npublic entertainmentTrip (){dateOftrip= 1;}\r\npublic entertainmentTrip (int date){dateOftrip=date;}\r\npublic entertainmentTrip (int date,String n,String p){dateOftrip=date; name=n;\r\nplace=p; }\r\npublic static int getperiod(){return ++total;}\r\nPublic String toString(){\r\nreturn \"name\"+name+\"\\nplace \"+place+\"startdate\"+startDate+\"endDate\"+endtDate+\"total number of date until now \"+super.getperiod();\r\n}\r\n\r\n}\r\npublic class test{\r\npublic static void main(String [] args){\r\n scientificTrip  s1=new scientificTrip ();\r\n  scientificTrip  s1=new scientificTrip (1,15,\"trip4\",\"sina\");\r\n \r\n System.out.println(s1);\r\n System.out.println(s2);\r\n \r\n entertainmentTrip E1=new entertainmentTrip ();\r\n entertainmentTrip E2=new entertainmentTrip (2);\r\n entertainmentTrip E3=new entertainmentTrip (10,\"trip5\",\"turkia\");\r\n \r\nSystem.out.println(E1);\r\nSystem.out.println(E2); \r\nSystem.out.println(E2);\r\n\r\n}\r\n\r\n}', 404, 34, 6, '2018-12-03 13:52:21', '2019-01-22 13:18:40'),
(88772, 86, '220', 404, 34, 2, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88773, 88, '229', 404, 34, 2, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88774, 89, '231', 404, 34, 2, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88776, 90, '234', 404, 34, 2, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88778, 91, '236', 404, 34, 1, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88780, 92, '241', 404, 34, 2, '2018-12-03 13:52:21', '2018-12-03 13:52:21'),
(88792, 85, 'package trip()\r\n{\r\nimport java.util.Scanner;         \r\n\r\n\r\n}                                                                                                          \r\n            public class trip(){\r\nprotected String name;\r\nprotected String place;\r\n\r\n\r\n\r\n\r\npublic trip()  //default constructor\r\n{\r\nname;\r\nplace;\r\n\r\n\r\n}\r\npublic trip (String name,String place) //overloading constructor\r\n{ \r\nthis.name=name;\r\nthis .String =String;\r\n}\r\npublic get_name()\r\n{\r\nthis.name=name;\r\n\r\n\r\n}\r\npublic get_place()\r\n{\r\nthis.place=place;\r\n}\r\npublic \r\npublic class scientific extends trip()\r\n{\r\nprivate int start_date;\r\nprivate int end_date;\r\nprivate string place;\r\n\r\npublic scientific(                                  //default constructor for inheritance\r\n                            \r\nSystem.out.print(\"name=\"+scientific);\r\n\r\n)\r\npublic scientific (int start_date,int end_date,String place)\r\n{\r\nthis.start_date=start_date;\r\nthis .end_date=end_date;\r\nthis.place=place;\r\n\r\n}\r\npublic void get_date()\r\n{\r\nreturn ;\r\n\r\n}\r\npublic int calculate_days(int i)\r\n{\r\nreturn i;\r\n\r\n\r\n}\r\npublic entertainment extends trip()\r\n{\r\nprivate int date;\r\nprivate String name;\r\nprivate string place;\r\n\r\npublic entertainment(int date,String name,String place)\r\n{\r\nthis.date=date;\r\nthis.name=name;\r\nthis .place=place\r\n\r\n}\r\npublic void get_days()\r\n{\r\nreturn;\r\n\r\n}\r\npublic int calculate_days(int z)\r\n{\r\nreturn z;\r\n\r\n}\r\npublic int calculate_total days(int x)\r\n{\r\nint temp;\r\ntemp.x=i+z;\r\nreturn temp;                //return the sum of total days for the two function\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n}      \r\npublic static void main(string[],args)\r\ntrip t=new trip();\r\nSystem.out.print(\"please enter the name of trip\");\r\nSystem.out.print(\"please enter the place of trip\");\r\n\r\nScanner s=new Scanner(System.in)\r\nt.get_name()=s.next String();\r\nt.get_place()=s.next String();\r\nSystem.out.print(\"please enter i and z value\")\r\ni.calculate_days=s.next int ();\r\nz.calculate_days=s.next int();\r\nSystem.out.print(\"the total sum of trip days=\" +temp)', 348, 34, 5, '2018-12-03 13:52:22', '2019-01-22 13:18:53'),
(88793, 86, '220', 348, 34, 2, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88794, 88, '229', 348, 34, 2, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88795, 89, '230', 348, 34, 0, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88797, 90, '234', 348, 34, 2, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88799, 91, '236', 348, 34, 1, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88801, 92, '240', 348, 34, 0, '2018-12-03 13:52:22', '2018-12-03 13:52:22'),
(88854, 85, 'public class Trip {\r\nString name;\r\nString place ;\r\nTrip(){\r\n}\r\nTrip(String name,String place ){\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\n}\r\nclass Scientific Trip extends class Trip{\r\nDate start date=new Date(); \r\nDate end date=new Date();\r\nScientific Trip(){\r\n}\r\nScientific Trip(Date start date,Date end date){\r\nthis.start date=start date;\r\nthis.end date=end date;\r\n}\r\nScientific Trip(String name,String place,Date start date,Date end date){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.start date=start date;\r\nthis.end date=end date;\r\n}\r\nint getPeriod(){\r\nint numofday=(int)(end date - start date);\r\n}\r\n}\r\n\r\nclass Entertainment Trip extends class Trip{\r\nDate one date=new Date(); \r\nEntertainment Trip(){\r\n}\r\nEntertainment Trip(Date one date){\r\nthis.one date=one date;\r\n\r\n}\r\nEntertainment Trip(String name,String place,Date one date){\r\nthis.name=name;\r\nthis.place=place;\r\nthis.one date=one date;\r\n\r\n}\r\nint getPeriod(){\r\nint numofday=(int)(one date);\r\n}\r\npublic static void main (String [] args){\r\nint [][] a=new [2][3];\r\nScientific Trip A=new Scientific Trip();\r\nEntertainment Trip B=new Entertainment Trip();\r\nSystem.out.println(A.getPeriod);\r\nSystem.out.println(B.getPeriod);\r\n\r\n\r\n}\r\n\r\n}', 267, 34, 5, '2018-12-03 13:52:27', '2019-01-22 09:17:47'),
(88855, 86, '220', 267, 34, 2, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88856, 88, '229', 267, 34, 2, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88857, 89, '230', 267, 34, 0, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88858, 90, '234', 267, 34, 2, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88859, 91, '236', 267, 34, 1, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88860, 92, '241', 267, 34, 2, '2018-12-03 13:52:27', '2018-12-03 13:52:27'),
(88954, 85, 'import java.utill.scanner   \r\npublic class trips {\r\nint total=0;\r\npublic class  scientific extends trips {\r\nint S,E;\r\nString name;\r\n String place;\r\nscanner start = new scanner ();\r\ns1.S = start.nextint();\r\ns2.S = start.nextint();\r\nscanner end =new scanner();\r\ns1.E = end.nextint();\r\ns2.E = end.nextint();\r\npublic the scientific () {\r\ns1.name =\" elwady\";\r\ns1.place =\" elwahat\";\r\ns2.name =\" elrayan\";\r\ns2.place= \"elfayoum\";\r\n}\r\npublic class  entertainment extends trips {\r\nint data=1 ;\r\nString Name , PLACE;\r\npublic the entertainment (){\r\nt1.Name=\" the red sea\";\r\nt1.PLACE= \"hurghada\";\r\nt2.Name=\"fhuy\";\r\nt2.PLACE=\"sohag\";\r\nt3.Name=\" kalaa\";\r\nt3.PLACE=\"alex\";\r\n}\r\n\r\npublic static void main (string[ ] args) {\r\nscientific.s1=new scientific trip;\r\nscientific.s2=new scientific trip;\r\nentertainment.t1=new entertainment trip;\r\nentertainment.t2= new entertainment trip;\r\nentertainment.t3=new entertainment trip;\r\ngetperiod (S,E,date)\r\nfor(int i=0 ; i<=2;i++) {\r\nfor(int j =0 ;j<=3; j++){\r\ntotal +=1;\r\n}\r\n}\r\nsystem.out.println(\"the total number of days is\" +total)\r\n}\r\n}', 172, 34, 4, '2018-12-03 13:53:01', '2019-01-22 09:19:41'),
(88955, 86, '220', 172, 34, 2, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88956, 88, '229', 172, 34, 2, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88957, 89, '230', 172, 34, 0, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88958, 90, '234', 172, 34, 2, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88959, 91, '236', 172, 34, 1, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88960, 92, '241', 172, 34, 2, '2018-12-03 13:53:02', '2018-12-03 13:53:04'),
(88974, 85, 'import java.util.scanner;                                                                     \r\n                      public class trip {\r\n               protect string name;\r\nprotect string place;\r\n                             class  scientific trip  extend trip (string name,string place, int[] sdate,int[]Edate    ) {  \r\n                      this.name=name;\r\n                      this.place=place;\r\n\r\n\r\n                          class entertainment trip extend trip(string name,string place,  int[]date    ){\r\n     this.name=name;\r\n                      this.place=place;\r\n}\r\n\r\n                    public int getperiod (){\r\nint z = Edate-sdate*2;\r\nreturn z;\r\n\r\n\r\nSystem.out.println(\"the days of The scientific trip is =\"+z+\"days\");\r\nSystem.out.println(\"the days of The  entertainment trip is = \"+3+\"days\");\r\n\r\n}', 408, 34, 1, '2018-12-03 13:53:09', '2019-01-22 09:20:23'),
(88975, 86, '220', 408, 34, 2, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(88976, 88, '228', 408, 34, 0, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(88977, 89, '233', 408, 34, 0, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(88978, 90, '234', 408, 34, 2, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(88979, 91, '236', 408, 34, 1, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(88980, 92, '241', 408, 34, 2, '2018-12-03 13:53:09', '2018-12-03 13:53:09'),
(89016, 85, 'public class trip\r\n{\r\nString name;\r\nString place;\r\n}\r\npublic class scientific extends trip\r\n{\r\nint start_day;\r\nint end_day;\r\nstatic int j=0;\r\npublic scientific()\r\n{\r\nj++;\r\n}\r\npublic static int periodOf()\r\n{\r\nreturn end_day-start_day;\r\n}\r\n}\r\npublic class entertenment extends trip\r\n{\r\nString date;\r\nstatic int i=0;\r\npublic entertenment()\r\n{\r\ni++;\r\n}\r\npublic static int period()\r\n{\r\nreturn i;\r\n}\r\n}\r\npublic static void main(String []args)\r\n{\r\nscientific s1=new scientific();\r\nscientific s2=new scientific();\r\nentertanment e1=new entertanment();\r\nentertanment e2=new entertanment();\r\nentertanment e3=new entertanment();\r\nSystem.out.println(entertanment.period()+scientific.periodOf());\r\n}', 255, 34, 6, '2018-12-03 13:53:19', '2019-01-22 13:19:16'),
(89017, 86, '220', 255, 34, 2, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89018, 88, '229', 255, 34, 2, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89019, 89, '231', 255, 34, 2, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89020, 90, '234', 255, 34, 2, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89021, 91, '236', 255, 34, 1, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89022, 92, '241', 255, 34, 2, '2018-12-03 13:53:19', '2018-12-03 13:53:19'),
(89037, 85, 'public class Sctrips \r\n{\r\n   private string name;\r\n   private string place;\r\n   private string startdata;                                                                                                   \r\n   private string enddata;\r\nSctrips()\r\n{\r\n   name=\"computer researchs\";\r\n   place=\"germany\";\r\n}\r\npublic string setSdata(string x)\r\n{\r\n      stardata=x;\r\n\r\n} \r\npublic string setEdata(string y)\r\n{\r\n   enddata=y;\r\n}  \r\npublic class Entrtrips extends Sctrips\r\n{\r\n   private string stendata;\r\n}    \r\npublic static class Caldays\r\n{\r\npublic static void main(string [] args)\r\n{\r\n    System.out.println(\"please enter the type of trip \");\r\n   Sctrips t1=new Sctrips();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 384, 34, 2, '2018-12-03 13:53:26', '2019-01-22 09:22:23'),
(89038, 86, '218', 384, 34, 0, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89039, 88, '227', 384, 34, 0, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89040, 89, '232', 384, 34, 0, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89041, 90, '234', 384, 34, 2, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89042, 91, '236', 384, 34, 1, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89043, 92, '240', 384, 34, 0, '2018-12-03 13:53:26', '2018-12-03 13:53:26'),
(89057, 85, 'import java.util.date;\r\npublic class trip{\r\nString name;\r\nString place;\r\npublic trip(){\r\nname=\"ahmed\";\r\nplace=\"hurgada \";\r\n}\r\npublic trip(String n, String p){\r\nname=n;\r\nplace=p;\r\n}\r\npublic static int return_number_of_days(int start_day, int end_day){\r\nstart_day=day.MilleTimeSecond();\r\nend_day=day.MilleTimeSecond()\r\nint T_days=end_day-start_day;\r\nreturn t_days;\r\n}\r\n\r\n}                                                                                                                \r\n  public  scientific extends trip{\r\n\r\nint start_day;\r\nint end_day;\r\n\r\npublic scientific(){\r\nstart_day =2;\r\nend_day  =6;\r\n\r\n}\r\npublic scientific(int sd , int ed){\r\nstart_day=sd;\r\nend_day=ed;\r\n}\r\npublic scientific(String n, String place p, int sd, int ed){\r\nsuper(n,p);\r\nstart_day=sd;\r\nend_day=ed;\r\n\r\n\r\n}\r\npublic entertainment extends trip{\r\n\r\nint date;\r\npublic entertainment (){\r\n\r\ndate=java.util.Date();\r\n\r\n}\r\npublic entertainment (int d){\r\ndate=d;\r\n\r\n}\r\npublic entertainment (String n, String p, int d){\r\nsuper(n,p);\r\ndate=d;\r\n}\r\n}\r\n}', 363, 34, 5, '2018-12-03 13:53:35', '2019-01-22 09:23:33'),
(89058, 86, '220', 363, 34, 2, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89059, 88, '227', 363, 34, 0, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89060, 89, '232', 363, 34, 0, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89061, 90, '234', 363, 34, 2, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89062, 91, '237', 363, 34, 0, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89063, 92, '241', 363, 34, 2, '2018-12-03 13:53:35', '2018-12-03 13:53:36'),
(89078, 85, 'import java.utl;\r\nPublic class exam\r\n{\r\n    Public static void main(String []args)\r\n{\r\n   trip []arr=new trip();\r\n   trip nameoftrip=new trip();\r\n   scientific x=new scientific();\r\n  entertainment y=new  entertainment();\r\n   for(int i=0;i<arr.length;i++)\r\n   {\r\n      System.out.println(\"enter name of trip\")\r\n       arr[i]=nameoftrip.setname();\r\n      \r\n      //if(nameoftrip.setname()==scientific)\r\n      \r\n   }\r\nint total=0;\r\n   for(int i=0;i<arr.length;i++)\r\n   {\r\n    if(nameoftrip.setname()==scientific)\r\n      {\r\n        total+=x.getPeriod();\r\n         \r\n      }\r\n      else\r\n     total+=y.getdata() ;  \r\n      \r\n   }\r\n for(int i=0;i<arr.length;i++)\r\n   {\r\n      System.out.println(\"name of trip  \"+arr[i]+\" \")\r\n      \r\n   }\r\nSystem.out.println(\"total is \"+total);\r\n\r\n}\r\n}\r\nPublic class trip\r\n{\r\nString name ;\r\nString plase;\r\nPublic void setname(String n)\r\n{\r\n  name=n;\r\n}\r\nPublic void setplace(String p)\r\n{\r\n  place=p;\r\n}\r\nclass scientific  extends trip\r\n{\r\nint date_start;\r\nint date_end;\r\nPublic void setdata1(int d1)\r\n{\r\n   date_start=d1;\r\n}\r\nPublic void setdata2(int d2)\r\n{\r\n   date_end=d2;\r\n}\r\nPublic int getPeriod (int date_start,int date_end)\r\n{\r\nreturn date_end-date_start;\r\n}\r\n}\r\nclass entertainment  extends trip\r\n{\r\nint data;\r\n Public int getdata(int data)\r\n{\r\nreturn data;\r\n}\r\n}\r\n}', 271, 34, 5, '2018-12-03 13:53:38', '2019-01-22 13:19:33'),
(89079, 86, '220', 271, 34, 2, '2018-12-03 13:53:38', '2018-12-03 13:53:38'),
(89080, 88, '229', 271, 34, 2, '2018-12-03 13:53:38', '2018-12-03 13:53:38'),
(89081, 89, '230', 271, 34, 0, '2018-12-03 13:53:38', '2018-12-03 13:53:38'),
(89082, 90, '234', 271, 34, 2, '2018-12-03 13:53:38', '2018-12-03 13:53:38'),
(89083, 91, '237', 271, 34, 0, '2018-12-03 13:53:38', '2018-12-03 13:53:38'),
(89084, 92, '241', 271, 34, 2, '2018-12-03 13:53:38', '2018-12-03 13:53:39'),
(89129, 91, '236', 362, 34, 1, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89131, 85, 'class scientific extends Trip{                                                                                                                 \r\nprotected int date1 ;\r\nprotected int date2;\r\npublic scientific(){\r\ndate1=1;\r\ndate2=2;\r\n}\r\npublic scientific(int d1,int d2){\r\ndate1=d1;\r\ndate2=d2;\r\n\r\n}\r\nclass entertainment extends Trip {\r\npublic static int d=1;\r\n\r\npublic entertainment (){\r\n}\r\npublic entertainment(int date){\r\nsuper(\"holiday\",\"luxer\");\r\ndate=1;\r\n}\r\n}\r\nclass Trip{\r\nprotected String name;\r\nprotected String place;\r\npublic Trip(){\r\nname=\"holiday\";\r\nplace=\"aswan\";\r\n}\r\npublic Trip(String n,String p){\r\nname=n;\r\nplace=p;\r\n}\r\npublic int getPeriod(int days){\r\ndays=date2-date1;\r\n\r\n\r\ndays++;\r\nreturn days;\r\n}\r\n}\r\npublic Static void main(String args[0]){\r\nTrip []holidays=new Trip[];\r\nfor(int i=0;i<holidays.length();i++){\r\nTrip[i]=new Trip();\r\n\r\n}\r\nSystem.out.print(holidays.getPeriod());\r\n\r\n}', 362, 34, 4, '2018-12-03 13:53:53', '2019-01-22 13:47:46'),
(89132, 92, '241', 362, 34, 2, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89134, 86, '220', 362, 34, 2, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89135, 88, '227', 362, 34, 0, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89136, 89, '233', 362, 34, 0, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89137, 90, '234', 362, 34, 2, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89138, 91, '236', 362, 34, NULL, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89139, 92, '241', 362, 34, NULL, '2018-12-03 13:53:53', '2018-12-03 13:53:53'),
(89179, 85, 'public class s \r\n{\r\npublic static void main(String [] args){\r\n\r\n\r\n\r\n}\r\n}                                                                                                         \r\npublic class  entertainment trips{\r\n\r\nString name;\r\nString place;\r\nprivate String date;\r\npublic entertainment trips()\r\n{\r\n}\r\n\r\npublic entertainment trips( String n , String p)\r\n{\r\nname=n;\r\nplace=p;\r\n\r\n}\r\n\r\n\r\n}                                                  \r\nclass   scientific trip extends  entertainment trips {\r\nString start_date;\r\nString end_date;\r\npublic  scientific trip ()\r\n{\r\n}\r\n\r\npublic  scientific trip (String s, String m )\r\n{\r\nstart_date =s;\r\n end_date=m;\r\n\r\n}\r\n\r\n\r\npublic int get_Period(String start_date , String end_date)\r\n{\r\nString [] arr= start_date.split(\"/ \");\r\nint year = Integer.parseInt(arr[0].trim());\r\nint month= Integer.parseInt(arr[1].trim());\r\nint day= Integer.parseInt(arr[2].trim());\r\nString [] arry= end_date.split(\"/ \");\r\nint year1 = Integer.parseInt(arry[0].trim());\r\nint month1= Integer.parseInt(arry[1].trim());\r\nint day1= Integer.parseInt(arry[2].trim());\r\nint t=day1 - day ;\r\n\r\nreturn t ;\r\n\r\n}\r\n\r\n}', 368, 34, 2, '2018-12-03 13:54:07', '2019-01-22 13:47:00'),
(89180, 86, '218', 368, 34, 0, '2018-12-03 13:54:07', '2018-12-03 13:54:08'),
(89181, 88, '227', 368, 34, 0, '2018-12-03 13:54:07', '2018-12-03 13:54:08'),
(89182, 89, '231', 368, 34, 2, '2018-12-03 13:54:07', '2018-12-03 13:54:08'),
(89183, 90, '234', 368, 34, 2, '2018-12-03 13:54:07', '2018-12-03 13:54:08'),
(89184, 91, '236', 368, 34, 1, '2018-12-03 13:54:07', '2018-12-03 13:54:08'),
(89185, 92, '240', 368, 34, 0, '2018-12-03 13:54:07', '2018-12-03 13:54:08');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(89193, 85, 'package test;\r\npublic class Test;\r\npublic static void main(String [ ]args){\r\nscientific trip st1=new scientific trip ();\r\nscientific trip st2=new scientific trip ();\r\n entertainment trip et1=new  entertainment trip ();\r\n entertainment trip et2=new  entertainment trip () ;\r\n entertainment trip et3=new  entertainment trip ();\r\n\r\nSystem.out.println(st1.getperiod()+st2.getperiod()+et1.getperiod()+et2.getperiod()+et3.getperiod());\r\n\r\n\r\n}\r\n\r\n\r\n\r\npackage test;\r\n  public class trip{\r\nprotected String name ;\r\nprotected String place ;\r\npublic trip (){\r\nname =\"null\";\r\nplace=\"null\";\r\n}\r\npuplic trip (String n,String p){\r\nname=n;\r\nplace=p;\r\n}\r\n\r\n}\r\n                                                                                                             \r\n\r\npackage test;\r\npublic class scientific trip extends trip {\r\nprivate String startdate;\r\nprivate String enddate; \r\n\r\npublic scientific trip (String n,String p,String sd,String ed ){\r\nsuper(n,p);\r\nstartdate=sd;\r\nenddate=ed;\r\n\r\n}\r\n\r\npublic int getperiod(){\r\nString [ ] arr1=startdate.split(\"/\");\r\nString [ ]arr2=enddate.split(\"/\");\r\nint numdays; \r\n\r\nfor(int i=0 ;i<arr.length;i++)\r\n{\r\nint startday=Integer.parseInt(arr1[0].trim);\r\nint endday=Integer.parseInt(arr2[0].trim);\r\nmonth\r\n}\r\nif ((endday-startday)<0)\r\ndays=(endday-startday)+30;\r\n\r\nelse \r\ndays=(endday-startday)\r\n\r\n}\r\nreturn days;\r\n}                 \r\n  \r\npackage test;\r\npublic class entertainment trip extends trip{\r\nString datee;\r\n\r\npublic entertainment trip (String n,String p,String d){\r\nsuper (n,p);\r\ndatee=d;\r\n\r\n} \r\n\r\npublic int getperiod(){\r\nString [ ] arr=datee.split(\"/\");\r\n\r\nfor(int i=0 ;i<arr.length;i++)\r\n{\r\nint day=Integer.parseInt(arr[0].trim)\r\n}\r\nreturn 1;\r\n}\r\n\r\n}', 392, 34, 8, '2018-12-03 13:54:12', '2019-01-22 13:45:01'),
(89194, 86, '220', 392, 34, 2, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89195, 88, '229', 392, 34, 2, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89196, 89, '231', 392, 34, 2, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89197, 90, '234', 392, 34, 2, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89198, 91, '236', 392, 34, 1, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89199, 92, '241', 392, 34, 2, '2018-12-03 13:54:12', '2018-12-03 13:54:13'),
(89256, 85, 'public class MyDate(){\r\n      int day;\r\n      int month;\r\n      int year;\r\n     public MyDate(String date){\r\n      String []s=date.spilte(\"[/,-,_]\"); \r\n      \r\n          s[0].trim;\r\n          day=integer.parseint(s[0]);\r\n          s[1].trim;\r\n          day=integer.parseint(s[1]);\r\n          s[2].trim;\r\n          day=integer.parseint(s[2]);\r\n   }\r\n    \r\n}\r\n\r\n\r\n       public abstract class trip(){\r\n       protected String name;\r\n       protected String place;\r\n       public Static int TNOD;\r\n       public int getPeriod(){\r\n        \r\n   }    \r\n}                                                                                                         \r\n       public class ScientificTrip extends trip(){\r\n       protected String startDate;\r\n       protected String endDate;\r\n       protected MyDate d1;\r\n       protected MyDate d2;\r\n       protected int period;\r\n       ScientificTrip(){}\r\n       ScientificTrip(String Start,String end){\r\n            d1 =new MyDate(Start);\r\n            d2 =new MyDate(end);\r\n      }\r\n     public int getPeriod(){\r\n        return period;\r\n}\r\n     public void setPeriod(int p){\r\n     TNOD = TNOD+p;\r\n     period =p;\r\n}                                             \r\n      public class EntertanmentTrip extends trip(){\r\n      protected String date;\r\n      protected Mydate dd1;\r\n\r\n      EntertanmentTrip(){\r\n       TNOD++;\r\n    }\r\n      public int getPeriod(){\r\n        return 1;\r\n}\r\n\r\n    public static void main(String[] args)){\r\n    ScientificTrip t1 =new ScientificTrip();\r\n    ScientificTrip t1 =new ScientificTrip();\r\n    EntertanmentTrip tt1=new EntertanmentTrip ():\r\n    EntertanmentTrip tt2=new EntertanmentTrip ():\r\n    EntertanmentTrip tt3=new EntertanmentTrip ():\r\n    tt1.TNOD; \\\\ static integer in \r\n\r\n}', 396, 34, 6, '2018-12-03 13:54:40', '2019-01-22 13:43:46'),
(89257, 86, '220', 396, 34, 2, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89258, 88, '229', 396, 34, 2, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89259, 89, '231', 396, 34, 2, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89260, 90, '234', 396, 34, 2, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89261, 91, '236', 396, 34, 1, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89262, 92, '241', 396, 34, 2, '2018-12-03 13:54:40', '2018-12-03 13:54:40'),
(89286, 85, 'package c ;\r\nimport java.util.Scanner ;\r\npublic class  trip {\r\nprivate String  name ;\r\nprivate String place ;\r\nprivate string date ;\r\npublic trip (String  name,String place,string date ;)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\nthis.date=date;\r\n}\r\npublic String setname ()\r\n{\r\nreturn name ;\r\n}\r\npublic String setplace ()\r\n{\r\nreturn place ;\r\n}\r\npublic String setdate ()\r\n{\r\nreturn date ;\r\n}\r\npublic void getplace (String place)\r\n{\r\nthis.place=palce;\r\n}\r\npublic void getname(String name)\r\n{\r\nthis.name=name;\r\n}\r\npublic void getdate (String date)\r\n{\r\nthis.place=date;\r\n}\r\n}    \r\npublic class scientific extends trip {\r\nprivate String end finishdate;\r\npublic static int calcdays(int [] time) {\r\nfor (int i=0;i<time.length;i++)\r\n{\r\ntime[i]=Integer.parsInt((date.splite (\"/\"));\r\n}\r\n}\r\n}\r\npublic class  entertainment extends trip {\r\nprivate int period =1;\r\nsuper();\r\n}\r\npublic class  test {\r\npublic static void main []args)\r\n{\r\nScanner input =Scanner (System.in);\r\ntrip Trip[]=new trip[5];\r\nfor (int  i=0;i<Trip.length;i++)\r\n{\r\nint x=input.nextInt(); \r\nif (x==0)\r\nTrip[i]=new scientific();\r\nelse if (x==)\r\nTrip[i]=new entertainment ();\r\n}\r\nfor (int  i=0;i<Trip.length;i++)\r\n{\r\nstring r ;\r\nr=input.nextInt(); \r\nsetname(r);\r\nstring v ;\r\nv=input.nextInt(); \r\nsetplace(v);\r\nstring b;\r\nb=input.nextInt(); \r\nsetdate(b);\r\n}\r\nfor (int  i=0;i<Trip.length;i++)\r\n{\r\nSystem.out.println(Trip[i].getname+\"  \"+Trip[i].getplace+\"  \"+Trip[i].getdate+\"  \")\r\n}\r\n}\r\n{', 378, 34, 4, '2018-12-03 13:54:50', '2019-01-22 13:42:45'),
(89287, 86, '218', 378, 34, 0, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89288, 88, '226', 378, 34, 0, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89289, 89, '230', 378, 34, 0, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89290, 90, '234', 378, 34, 2, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89291, 91, '236', 378, 34, 1, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89292, 92, '239', 378, 34, 0, '2018-12-03 13:54:50', '2018-12-03 13:54:50'),
(89293, 85, 'public  class trip{\r\nString name;\r\nString place;\r\n}  \r\n    public class scientific extends trip {\r\nDate start;\r\nDate end;\r\npublic int getperiod(Date s,Date e )\r\n{\r\nreturn (e-d)*2\r\n}\r\n\r\n}     \r\n public class entertainment extends trip {\r\nDate Start;\r\npublic int getperiod()\r\n{\r\nreturn 1*3\r\n}\r\n}        \r\npublic class test{\r\npublic static void main(String [] args){\r\nint sum;\r\nentertainment x=new entertainment ();\r\n scientific y=new  scientific();\r\nsum=x.getperiod+y.getperiod;', 264, 34, 4, '2018-12-03 13:54:53', '2019-01-22 13:40:51'),
(89294, 86, '218', 264, 34, 0, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89295, 88, '229', 264, 34, 2, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89296, 89, '231', 264, 34, 2, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89297, 90, '234', 264, 34, 2, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89298, 91, '236', 264, 34, 1, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89299, 92, '238', 264, 34, 0, '2018-12-03 13:54:53', '2018-12-03 13:54:53'),
(89339, 85, 'class scientifictrip{\r\nString  date;\r\nString  enddate;\r\nString name;\r\nString place;\r\npublic scientifictrip(){\r\ndate=\"12/1/2017\";\r\nenddate=\"15/1/2017\";\r\nname=\"salah\";\r\nplace=\"tanta\";\r\n}  \r\npublic scientifictrip(String  d,String  e,String n,String p)\r\n{\r\ndate=d;\r\nenddate=e;\r\nname=n;\r\nplace=p;\r\n\r\n\r\npublic String getperiod(){\r\nreturn scientifictrip();\r\n}\r\n}\r\n\r\n}\r\nclass entertainmenttrip{\r\nString date;\r\nString name;\r\nString place;\r\npublic entertainmenttrip(){\r\ndate=\"12/1/2003\";\r\nname=\"mezoo\";\r\nplace=\"cairo\";\r\n\r\n}\r\npublic entertainmenttrip(String d,String n,String p)\r\n{\r\ndate=d;\r\nname=n;\r\nplace=p;\r\n}                                                    \r\npublic String Getperiod()\r\n{\r\nreturn entertainmenttrip();\r\n}                                                     \r\n                                                    }\r\n\r\npublic static void main(String[] args)\r\n{\r\nscientifictrip s=new scientifictrip();\r\nentertainmenttrip e=new entertainmenttrip();\r\ns.getperiod;\r\ne.Getperiod; \r\n}', 359, 34, 4, '2018-12-03 13:55:00', '2019-01-22 13:38:04'),
(89340, 86, '220', 359, 34, 2, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89341, 88, '229', 359, 34, 2, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89342, 89, '231', 359, 34, 2, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89343, 90, '234', 359, 34, 2, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89344, 91, '236', 359, 34, 1, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89345, 92, '241', 359, 34, 2, '2018-12-03 13:55:00', '2018-12-03 13:55:01'),
(89346, 85, 'public class trips {\r\n    string name;\r\n    string place; \r\n    int start date;\r\n    int end date;\r\n    int date;\r\n\r\n    \r\n    public trips(int sd , int ed ,string s_name, string s_place)\r\n  {   \r\n         int start date=sd;\r\n         int end date=ed;\r\n         string name=s_name;\r\n         string place= s_place;\r\n}\r\n\r\n     public trips(int d , string e_name, string e_place ) \r\n{\r\n     int date =d;\r\n     string name= e_name;\r\n     string place=e_place;\r\n }\r\npublic static int sumday (int d)\r\n{\r\nfor(int i=1;i<d;i++)\r\nint sum=sum+i;\r\n}\r\n}\r\n\r\n\r\n  public static void main(String[] args)\r\n{\r\n trips 1s=new trips( int sd , int ed ,string s_name, string s_place);\r\n trips 2s=new trips( int sd , int ed ,string s_name, string s_place);\r\n\r\ntrips 1e=new trips(int d , string e_name, string e_place   ) ;\r\ntrips 2e=new trips(int d , string e_name, string e_place   ) ;\r\ntrips 3e=new trips(int d , string e_name, string e_place   ) ;\r\n\r\nSystem.out.println( trips 1s);\r\nSystem.out.println ( trips 2s);\r\nSystem.out.println (trips 1e);\r\nSystem.out.println (trips 2e);\r\nSystem.out.println (trips 3e);\r\n\r\n\r\n}', 283, 34, 2, '2018-12-03 13:55:04', '2019-01-22 13:37:25'),
(89347, 86, '220', 283, 34, 2, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89348, 88, '227', 283, 34, 0, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89349, 89, '233', 283, 34, 0, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89350, 90, '235', 283, 34, 0, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89351, 91, '236', 283, 34, 1, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89352, 92, '241', 283, 34, 2, '2018-12-03 13:55:04', '2018-12-03 13:55:05'),
(89353, 85, 'import java.util.Scanner;\r\npublic class trips\r\n{\r\nprivate int s_start_data;\r\nprivate int s_end_data;\r\nprivate String sname;\r\nprivate String splace;\r\nprivate int N_O_D = 0;\r\nprivate int e_data;\r\nprivate String ename;\r\nprivate String eplace;\r\nprivate int N_O_D2=0;\r\n\r\npublic void setscientific(int ss,int se,String sn,String sp)\r\n{\r\ns_start_data = ss;\r\ns_end_data = se;\r\nsname = sn;\r\nsplace = sp;\r\nN_O_D ++;\r\n}\r\npublic void setentertainment(int ed,String en,String ep)\r\n{\r\ne_data = ed;\r\nename = en;\r\neplace = ep;\r\nN_O_D2 ++;\r\n}\r\npublic int getscientific()\r\n{\r\nreturn N_O_D;\r\n}\r\npublic int getentertainment()\r\n{\r\nreturn N_O_D2;\r\n}\r\npublic static void main(String[] args)\r\n{\r\nScanner input = new Scanner(System.in);\r\nint ss = input.nextInt();\r\nint se = input.nextInt();\r\nString sn =input.next();\r\nString sp = input.next();\r\nint ed =input.nextInt();\r\nString en=input.next();\r\nString ep=input.next();\r\ntrips s1=new trips(ss,se,sn,sp)\r\ns1.setscientific();\r\ntrips s2 = new trips(ed,en,ep)\r\ns2.setentertainment();\r\nSystem.out.println(\"number of days = \");\r\nSystem.out.println(s1.getscientific + s2.getentertainment);\r\n\r\n\r\n\r\n}', 411, 34, 1, '2018-12-03 13:55:06', '2019-01-22 13:34:56'),
(89354, 86, '218', 411, 34, 0, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89355, 88, '227', 411, 34, 0, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89356, 89, '233', 411, 34, 0, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89357, 90, '234', 411, 34, 2, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89358, 91, '236', 411, 34, 1, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89359, 92, '241', 411, 34, 2, '2018-12-03 13:55:06', '2018-12-03 13:55:12'),
(89360, 85, 'public class trip()\r\n{String name ;\r\nString place;\r\npublic scientific trip (){\r\nint start date=0;\r\nint end date=0;\r\nString name;\r\nString place;\r\n}\r\npublic scientific trip (int start date,int end date,string name,string place){\r\nthis.start date=start date;\r\nthis.end date=end date;\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic int get_period (int start date,int end date ){\r\n//there is amiss thing\r\nString [ ]arr=new String(3);\r\n//Scanner x=new Scanner(system.in);\r\nfor (int i=o;i<arr.lenght;i++)\r\n     {arr[i];\r\n}startdate=integar,parseint  charAT(3)arr;\r\nfor (int j=3;j>arr.lenght;i--)\r\n     {arr[j];\r\n}end data=integar,parseint  charAT(3)arr;\r\n\r\nenddate-startdate=integar,parseint  charAT(3)arr;\r\n\r\n\r\nreturn enddate-startdate;\r\n}\r\n/*public scientific trip extends trip(int start date,int end date,string name,string place){\r\nsuper\r\n}*/\r\n}\r\npublic entertainment trip(){\r\nint date;\r\nString name;\r\nstring place;\r\n}\r\npublic entertainment trip(int date,String name,string place){\r\nint date=1;\r\nthis.name=name;\r\nthis.place=place;\r\n}\r\npublic int get period(int date){\r\n\r\nfor (int i=o;i<arr.lenght;i++)\r\n     {arr[i];\r\n}\r\nint x;\r\ndate=integar,parseint  charAT(3)arr;\r\nreturn date;\r\n\r\n}\r\n\r\n\r\npack age()\r\nimport java.utill.scanner;\r\npublic class main()\r\n{\r\nscientific trip.n=new scientific trip();\r\nentertainment.m=new entertainment();\r\n system.out.print(n.x);\r\n}\r\n\r\n }', 274, 34, 2, '2018-12-03 13:55:07', '2019-01-22 13:31:49'),
(89361, 86, '220', 274, 34, 2, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89362, 88, '227', 274, 34, 0, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89363, 89, '233', 274, 34, 0, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89364, 90, '234', 274, 34, 2, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89365, 91, '236', 274, 34, 1, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89366, 92, '241', 274, 34, 2, '2018-12-03 13:55:07', '2018-12-03 13:55:18'),
(89432, 85, 'public class trips()\r\n{\r\nString name;\r\nString place;\r\npublic trpis(){\r\nname;\r\nplace;\r\n}\r\npublic scientific trips extends trips(){\r\n\r\nint start date;\r\n\r\nint end date;\r\n\r\n\r\n\r\n}\r\npublic scientific trips(int startdate,int enddate){\r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\n\r\npublic int getPeriod(int start date,int end date){\r\n\r\nString []arr=new String(3);\r\nScanner a=new Scanner(System.in);\r\nfor(int j=3;i<arr.length;i++){\r\narr[i];\r\n\r\n}\r\n\r\nString date=Integer.parseInt charAT(3)arr;\r\nreturn start date;\r\nreturn end date;\r\n\r\n}\r\n}\r\n\r\npublic scientific trips(int sd;int ed;String n;String p){\r\n\r\nstart date=sd;\r\nend date=ed;\r\nSuper(name;place);\r\n\r\n}\r\n\r\npubnlic scientific trips(int startdate,int enddate){\r\nSuper(name,place);\r\nthis.startname=startname;\r\nthis.endname=endname;\r\n}\r\n\r\n\r\n\r\npublic entertainment trip(){\r\n\r\ndate;\r\n\r\n}\r\nentertainment trip(int d){\r\ndate=d;\r\n\r\n\r\n}\r\nentertainment trip(int d,String n,String p){\r\ndate=d;\r\nSuper(n;p);\r\n\r\n}\r\n\r\nimport java.util.Scanner(System.in);\r\npublic static void main(String[] args){\r\n\r\n\r\n\r\nentertainmenttrip n=new entertainmenttrip;\r\nscientifictrip o=new scientifictrip;\r\n\r\nn.getname\r\n\r\n\r\n}\r\n}', 394, 34, 4, '2018-12-03 13:55:18', '2019-01-22 13:29:15'),
(89434, 86, '220', 394, 34, 2, '2018-12-03 13:55:18', '2018-12-03 13:55:19'),
(89436, 88, '227', 394, 34, 0, '2018-12-03 13:55:18', '2018-12-03 13:55:19'),
(89438, 89, '233', 394, 34, 0, '2018-12-03 13:55:18', '2018-12-03 13:55:19'),
(89440, 90, '234', 394, 34, 2, '2018-12-03 13:55:18', '2018-12-03 13:55:19'),
(89442, 91, '236', 394, 34, 1, '2018-12-03 13:55:18', '2018-12-03 13:55:19'),
(89443, 92, '241', 394, 34, 2, '2018-12-03 13:55:19', '2018-12-03 13:55:19'),
(89458, 85, 'public class test{\r\npublic static void main(String [] args){\r\nscientific s=new scientific(\"11/2/2018\",\"15/2/2018\",\" \",\" \");\r\n entertainment e=new  entertainment (\"1/1/\r\n\r\n\r\n\r\n\r\n}\r\n}\r\npublic class trips{\r\nprotected String name;\r\nprotected String place;\r\n\r\n\r\n}\r\npublic class scientific extends  trips{\r\nprivate String start date;\r\nprivate String end date;\r\nprivate trips trip;\r\npublic scientific(String s,String e,String n,String p){\r\nstart date=s;\r\nend date=e;\r\nsuper(n,p);\r\n}\r\npublic String get start(){\r\nreturn start date;\r\n\r\n}\r\npublic String get end(){\r\nreturn end date;\r\n}\r\n\r\n\r\n}\r\npublic class  entertainment extends trips{\r\nprivate int date;\r\nprivate trips entertainment trips;\r\n\r\npublic entertainment (){\r\ndate=1;\r\n}\r\npublic  entertainment(String n,String p){\r\nday=1;\r\nsuper (n,p);\r\n}\r\npublic int get date(){\r\nreturn date*3;\r\n}\r\n}', 353, 34, 4, '2018-12-03 13:55:20', '2019-01-22 13:33:47'),
(89459, 86, '220', 353, 34, 2, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89460, 88, '227', 353, 34, 0, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89461, 89, '233', 353, 34, 0, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89462, 90, '235', 353, 34, 0, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89463, 91, '236', 353, 34, 1, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89464, 92, '239', 353, 34, 0, '2018-12-03 13:55:20', '2018-12-03 13:55:21'),
(89465, 85, 'public class Trip {\r\n\r\nprotocoled String name ;\r\n\r\nprotocoled String place ;\r\n\r\n\r\npublic Trip()\r\n{\r\n  \r\n}\r\n\r\npublic Trip()\r\n{\r\n  name =\"Null\"; \r\n  place =\"Null\";\r\n  \r\n \r\n\r\n}\r\npublic Trip(String name ,String place)\r\n{\r\n  this.name=name; \r\n  this.place=place; \r\n \r\n}\r\n\r\npublic void setName(String n)\r\n{\r\n  this.name=n;\r\n}\r\n\r\npublic String getname()\r\n{\r\n\r\nreturn name ; \r\n\r\n}\r\npublic void setplace(String p)\r\n{\r\n\r\n this.place= p; \r\n\r\n}\r\npublic String getplace()\r\n{\r\n\r\nreturn palce ;\r\n\r\n} \r\n\r\n public void getperiod()\r\n{\r\n\r\n  System.out.println(\"Name:\"+\" \"+\"place:\");\r\n  \r\n}\r\n\r\n\r\n\r\n}\r\npublic class Scientific extends Trip{\r\n\r\nprivate int startDate ; \r\nprivate int endDate ; \r\n\r\npublic Scientific()\r\n{\r\n\r\n}\r\npublic Scientific()\r\n{\r\n super(\" Trip 1\",\"Aswan\"); \r\n  startDate=5;\r\n  endDate=5; \r\n\r\n}\r\n\r\npublic Scientific(String n,String p,int s,int e)\r\n{\r\n super(n,p); \r\n  this.startDate=s;\r\n  this.endDate=e; \r\n\r\n}\r\n\r\npublic void setStartDate(int s)\r\n{\r\n\r\nthis.startDate= s; \r\n\r\n}\r\n\r\npublic void setEndDate(int e)\r\n{\r\n\r\nthis.endDate=e; \r\n\r\n}\r\n\r\npublic int getstartDate()\r\n{\r\n\r\n return startDate; \r\n\r\n}\r\n\r\npublic int getendtDate()\r\n{\r\n\r\n return endDate; \r\n\r\n}\r\n\r\npublic int calcdays(int s, int e)\r\n{\r\n  int z; \r\n  \r\n z=s+e; \r\n\r\nreturn z; \r\n\r\n }\r\n\r\n  \r\n public void getperiod()\r\n\r\n{\r\n\r\nSystem.out.println(\"name\"+\"  \"+getnmae()+\"  \"+\"Place\"+\"  \"+getplace()+\"  \"+\"Number of days of this trip is :\"+\"  \"calcdays());\r\n\r\n}\r\n \r\n\r\npublic class Entertainment extends Trip{\r\n\r\nint d ; \r\n \r\n\r\npublic Scientific()\r\n{\r\n\r\n}\r\n\r\npublic Scientific()\r\n{\r\n super(\"TRIP2,\"Alex\"); \r\n  d= 1; \r\n \r\n\r\n}\r\npublic Scienti(String n,String p,int s)\r\n{\r\n super(n,p); \r\n  this.d=s;\r\n  \r\n\r\n}\r\n\r\npublic void setDays(int s)\r\n{\r\n\r\nthis.d= s; \r\n\r\n}\r\n\r\npublic int getday()\r\n{\r\n\r\n return d; \r\n\r\n}\r\n\r\npublic int calcday(int s)\r\n{\r\n  int z=0; \r\n  \r\n z=s; \r\n\r\nreturn z; \r\n\r\n }\r\n\r\npublic void getperiod()\r\n\r\n{\r\n\r\nSystem.out.println(\"name\"+\"  \"+getnmae()+\"  \"+\"Place\"+\"  \"+getplace()+\"  \"+\"Number of days of this trip is :\"+\"  \"calcday());\r\n\r\n}\r\n\r\n}\r\n\r\n\r\nimport java.util.* ; \r\npublic class Main{\r\n\r\npublic static void main(String[] args) {\r\n\r\n Scanner input = new Scanner(System.in); \r\n\r\nTrip [ ] t = new Trip[5 ] ;\r\n\r\nint sum1 =0; \r\nint sum2=0; \r\n\r\nfor(int i=0;i<5;i++)\r\n\r\n{\r\n  if(i==1||i==2||)\r\n{\r\n  t[i]=new scientific() ;\r\n  sum1+=calcdays();\r\n}\r\nelse\r\n{\r\nt[i]=new entertainment(); \r\n sum2+=calcday(); \r\n\r\n}\r\n sum1=sum1/24;\r\nSystem.out.println(\"Number of days of all Trips are: \"+\"    \"+(sum2+sum1));\r\n\r\n\r\n\r\n\r\n}\r\n\r\n }', 401, 34, 5, '2018-12-03 13:55:22', '2019-01-22 13:30:35'),
(89466, 86, '220', 401, 34, 2, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89467, 88, '228', 401, 34, 0, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89468, 89, '233', 401, 34, 0, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89469, 90, '234', 401, 34, 2, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89470, 91, '236', 401, 34, 1, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89471, 92, '239', 401, 34, 0, '2018-12-03 13:55:22', '2018-12-03 13:55:23'),
(89495, 85, 'package exam;\r\n  import java.util.*;\r\n\r\n\r\n  public    class trip(){                                        \r\n        private int name ;\r\n         private String place; \r\n\r\npublic trip ( int name,String place)   {       \r\nthis.name=name ;\r\nthis.place=place ;  \r\n  }    \r\npublic int getname(){\r\nreturn name ;\r\n}\r\n         public void setname(){\r\nthis.name= name ;\r\n}\r\npublic String getplace(){\r\nreturn place ;\r\n}\r\n         public void setplace(){\r\nthis.place= place ;\r\n}\r\n}\r\n\r\n\r\n\r\n public    class scientific extends trip(){ \r\nprivate  int startdate ;\r\nprivate  int enddate ;\r\npublic scientific (int name , String place , int Startdate , int enddate){\r\nsuper(name , place) ;\r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\n}\r\npublic int getstardate(){\r\nreturn startdate ;\r\n}\r\n         public void setstartdate(int startdate){\r\nthis.startdate= startdate ;\r\n}\r\npublic int getenddate (){\r\nreturn enddate ;\r\n}\r\n         public void setenddate(int enddate ){\r\nthis.enddate= enddate ;\r\n} \r\npublic int getperiod(int d){\r\n int x=enddate-startdate;\r\nreturn int y= x*d; \r\n}\r\n}\r\n  \r\n\r\n\r\n public    class entertainment extends trip(){ \r\nprivate int date;\r\npublic scientific (int name , String place , int date ){\r\nsuper(name , place) ;\r\nthis.date=date;\r\n}\r\npublic int getdate(){\r\nreturn date;\r\n}\r\n         public void setdate(int date){\r\nthis.date= date ;\r\n}\r\n\r\npublic int getperiod(int d){\r\nreturn  super.setdate(1*d) ; \r\n}\r\n}\r\n\r\n\r\npublic static void main(){\r\nSystem.out.println(\"enter d\");\r\nScanner .s=new Scanner(System.in);\r\nint d=next.Int();\r\ntrip .t1=new trip();\r\nscientific .s1=new scientific();\r\nentertainment . e1 =new entertainment ();\r\ns1.getperiod();\r\ns1.getperiod();\r\nint z=2*s1.getperiod()+3*s1.getperiod();\r\nSystem.out.println(\"total number of days for trips\"+ z);  \r\n}\r\n}', 381, 34, 5, '2018-12-03 13:55:28', '2019-01-22 13:28:24'),
(89496, 86, '218', 381, 34, 0, '2018-12-03 13:55:28', '2018-12-03 13:55:28'),
(89497, 88, '227', 381, 34, 0, '2018-12-03 13:55:28', '2018-12-03 13:55:29'),
(89498, 89, '230', 381, 34, 0, '2018-12-03 13:55:28', '2018-12-03 13:55:29'),
(89499, 90, '234', 381, 34, 2, '2018-12-03 13:55:28', '2018-12-03 13:55:29'),
(89500, 91, '236', 381, 34, 1, '2018-12-03 13:55:28', '2018-12-03 13:55:29'),
(89501, 92, '240', 381, 34, 0, '2018-12-03 13:55:28', '2018-12-03 13:55:29'),
(89509, 85, 'public class   trip ()\r\n        {                                                                                \r\n     public  extends trip()\r\n{\r\nString name;\r\n String place;\r\n}\r\n       public static void  trip(string x,string y );\r\n{\r\nname=x;\r\nplace=y;\r\n}\r\npublic   scientific()\r\n{\r\nint start ;\r\n int end;\r\n}\r\npublic static void scientific (int a,int b,String c,String d)\r\n{\r\nsuper(c,d);\r\nint start=a; \r\nint end=b;  \r\n}\r\npublic entertainment()\r\n{\r\nint date;\r\n}\r\npublic static int getPeriod(){\r\nreturn 3+2*(start. scientific -end. scientific); \r\n}\r\npublic static void entertainment (int a,String c,String d){\r\nsuper(c,d);\r\ndate=a;\r\n}\r\n\r\n\r\n}\r\n\r\n                  public static void main(String[] args) {\r\ntrip x = new trip();\r\n\r\nSystem.out.println (x.getPeriod());\r\n}\r\n\r\n\r\n}}', 393, 34, 2, '2018-12-03 13:55:37', '2019-01-22 13:26:36'),
(89510, 86, '220', 393, 34, 2, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89511, 88, '227', 393, 34, 0, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89512, 89, '233', 393, 34, 0, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89513, 90, '234', 393, 34, 2, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89514, 91, '236', 393, 34, 1, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89515, 92, '241', 393, 34, 2, '2018-12-03 13:55:37', '2018-12-03 13:55:37'),
(89557, 85, 'public class trip\r\n{\r\n Private int name;\r\n Private int place;\r\n   int class trip (int x, int y)\r\n{x=name;\r\ny=place;}\r\n     public get.name()\r\n{return name;\r\n     }public get.place()\r\n{return place;\r\n}\r\n\r\npublic class scientific trip extends trip\r\n{super();\r\nint start name ;\r\nint end name ;}\r\npublic class scientific()\r\n{\r\nk=2;\r\n}\r\n\r\npublic class entertainment trip extends trip\r\n{super();\r\nint date;}\r\npublic class entertainment trip()\r\n{\r\nw=3;\r\n}\r\n\r\n\r\npublic class test trip\r\n{\r\npublic static void main(String args[ ])\r\n{\r\n\r\n\r\n}', 398, 34, 4, '2018-12-03 13:55:43', '2019-01-22 13:25:56'),
(89558, 86, '218', 398, 34, 0, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89559, 88, '226', 398, 34, 0, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89560, 89, '233', 398, 34, 0, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89561, 90, '234', 398, 34, 2, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89562, 91, '236', 398, 34, 1, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89563, 92, '240', 398, 34, 0, '2018-12-03 13:55:43', '2018-12-03 13:55:43'),
(89577, 85, 'class trip{\r\n\r\n    public trip() {\r\n      String name ;\r\n       string place ;\r\n         trip()\r\n         {\r\n          name =\"test\";\r\n           place =\"test\"\r\n         }\r\n        trip(string s , string f)\r\n        {\r\n         name =s;\r\n          place = f\r\n        }\r\n}\r\n}\r\n\r\n\r\nclass sci extends trip { \r\n                        public sci() {\r\n                                        string startdata ;\r\n                                         string enddata;\r\n                                        sci()\r\n                                    {\r\n                                    startdata=\"test\";\r\n                                    enddata=\"teset\";\r\n\r\n                                      }\r\n                                sci( string e ,string r )\r\n                                    {\r\n\r\n                                 startdata=e;\r\n                                    enddata=r;\r\n\r\n                                      }\r\n                                    sci(string q , string w , string e ,string r )\r\n                                    {\r\n                                      name = q;\r\n                                     place =w;\r\n                                    startdata=e;\r\n                                    enddata=r;\r\n\r\n                                      }\r\nstatic int getperiod()\r\n{\r\nstartdata=startdata.tirm();\r\nenddata=enddata.tirm();\r\nstring [] ss= startdata.spilt([\":\\\"]);\r\nstring [] sss= enddata.spilt([\":\\\"]);\r\n\r\nint i1 = Intager.parseInt(ss[0]);\r\nint i2 = Intager.parseInt(ss[1]);\r\nint i3 = Intager.parseInt(ss[2]);\r\nint j1 = Intager.parseInt(sss[0]);\r\nint j2 = Intager.parseInt(sss[1]);\r\nint j3 = Intager.parseInt(sss[2]);\r\nreturn \"it take \"+Math.abs(i1-j1)  + \"day\"+ Math.abs(i2-j2) + \"month\"+Math.abs(i2-j2)+\"years\"  ;\r\n}\r\n\r\n                       }\r\n class ent extends trip { \r\n                        public ent() {\r\n                                        string data ;\r\n                                     \r\n                                        ent()\r\n                                    {\r\n                                    data=\"1\";\r\n\r\n                                      } \r\n                                ent( string e )\r\n                                    {\r\n                       \r\n                                 data=e;\r\n\r\n                                      }\r\n                                    ent(string q , string w , string e )\r\n                                    {\r\n                                      name = q;\r\n                                     place =w;\r\n                                      data=e;\r\n\r\n                                      }\r\nstatic int getperiod()\r\n{\r\n\r\nreturn 1;\r\n}\r\n                        }\r\n\r\n\r\n\r\n\r\n  public class test {\r\n     \r\npublic static void main(String[] args){\r\n\r\n\r\nsci s1 = new sic();\r\nsci s2 = new sic();\r\nent x1 = new ent();\r\nent x2 = new ent();\r\nent x3 = new ent();\r\n/*\r\nSystem.out. println (s1.getperiod());\r\nSystem.out. println (s2.getperiod());\r\nSystem.out. println (x1.getperiod());\r\nSystem.out. println (x2.getperiod());\r\nSystem.out. println (x3.getperiod());\r\n*/\r\n System.out. println (s1.getperiod()+s2.getperiod()+x1.getperiod()+x2.getperiod()+x3.getperiod());\r\n\r\n\r\n}\r\n\r\n}', 323, 34, 8, '2018-12-03 13:55:51', '2019-01-22 13:23:42'),
(89578, 86, '219', 323, 34, 0, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89579, 88, '229', 323, 34, 2, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89580, 89, '231', 323, 34, 2, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89581, 90, '234', 323, 34, 2, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89582, 91, '236', 323, 34, 1, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89583, 92, '241', 323, 34, 2, '2018-12-03 13:55:51', '2018-12-03 13:55:52'),
(89584, 85, 'public class trip {\r\n\r\nString name;   \r\n  String place;\r\n\r\n\r\n\r\n\r\n}\r\npublic class scientific_trip     extends  trip {   \r\n\r\nString start_date;     \r\n\r\n   String end_date;\r\npublic  get_date()\r\n\r\n\r\n }\r\npublic class entertainment_trip  extends trip { \r\n\r\nString date;\r\n\r\n\r\n}\r\n }\r\n                                                                                                                 \r\n public class  the_trips {\r\npublic static void main(String[]  args)\r\n{\r\n            scientific_trip   s1=new   scientific_trip();\r\n\r\n            scientific_trip s2=new  scientific_trip();\r\n            entertainment_trip   e1=new  entertainment_trip();\r\n           entertainment_trip    e2=  new  entertainment_trip();\r\n          entertainment_trip   e3 = new     entertainment_trip();', 405, 34, 4, '2018-12-03 13:55:52', '2019-01-22 13:27:26'),
(89585, 86, '220', 405, 34, 2, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(89586, 88, '226', 405, 34, 0, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(89587, 89, '230', 405, 34, 0, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(89588, 90, '234', 405, 34, 2, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(89589, 91, '236', 405, 34, 1, '2018-12-03 13:55:52', '2018-12-03 13:55:52'),
(89590, 92, '241', 405, 34, 2, '2018-12-03 13:55:52', '2018-12-03 13:55:53'),
(89601, 90, '234', 387, 34, 2, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89602, 85, 'package list ;\r\n                          public class  trip {\r\nprotected String name ;\r\nprotected String place ;\r\npublic trip( String n,String p  )\r\n{\r\nname = n;\r\nplace =p ;                                                                              \r\n                \r\n }                              \r\npublic String to String()\r\n{\r\nreturn \" name of trip :\" +name+\"place of trip  :\"+place ; \r\n}\r\n}\r\n package list ;\r\npublic class scientifictrip  extends  trip\r\n{\r\n private string start ;\r\n private string  end ; \r\npublic  scientifictrip(string s,String e )\r\n {\r\nstart = s;\r\nend =e; \r\n }\r\npublic  scientifictrip(String n,String p,String  s,String e )\r\n{\r\nsuper (n,p);\r\nstar =s; \r\nend=e;\r\n}\r\npublic  int   getPeriod( string star ,string end )\r\n{\r\nreturn ((Integer).parsInt(star)-(Integer).parsInt(end));  \r\n} \r\npublic String to String( )\r\n{\r\nreturn \"star date of trip :\" +star+\"end data  of trip  :\"+end  ; \r\n}\r\n\r\n}\r\n   package list ;\r\n public class  entertainment trip  extend trip {\r\nprivate  String date ; \r\npublic entertainmenttrip ( String  d )\r\n{\r\ndate = d; \r\n}\r\npublic entertainmenttrip ( String n,String p,String  d )\r\n{\r\nsuper (n,p); \r\ndate = d ; \r\n}\r\npublic String to String()\r\n{\r\nreturn \"date :  \"+date    ; \r\n\r\n}\r\n package list ;\r\nimport java.util.Scanner ();\r\npublic class main \r\n{\r\npublic static void main  (String []args )\r\n{\r\nScanner inp = new  Scanner (System.in);\r\nString na =inp.nextLine();\r\nString pl  =  inp.nextLine();\r\ntrip t1=new trip (na,pl );\r\nscientifictrip s1  =new scientifictrip (); \r\nscientifictrip s2 =new scientifictrip ()\r\nentertainmenttrip  e1 =new entertainmenttrip  ();\r\nint  g = getPeriod() ;  \r\nSystem.out.print( \" num  =  \"  +g ) ;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n \r\n\r\n}', 387, 34, 6, '2018-12-03 13:55:53', '2019-01-22 13:22:33'),
(89603, 91, '236', 387, 34, 1, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89604, 86, '220', 387, 34, 2, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89605, 92, '239', 387, 34, 0, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89606, 88, '227', 387, 34, 0, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89607, 89, '233', 387, 34, 0, '2018-12-03 13:55:53', '2018-12-03 13:55:54'),
(89608, 90, '234', 387, 34, NULL, '2018-12-03 13:55:53', '2018-12-03 13:55:53'),
(89609, 91, '236', 387, 34, NULL, '2018-12-03 13:55:53', '2018-12-03 13:55:53'),
(89610, 92, '239', 387, 34, NULL, '2018-12-03 13:55:53', '2018-12-03 13:55:53'),
(89624, 85, 'public  class tripe{\r\nprotected String name;\r\nprotected String place;\r\npublic tripe(String n,String p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic void set_Name(string name)\r\n{\r\nthis.name=name;\r\npublic   String  get_name()\r\n{\r\nreturn name;\r\n}\r\npublic void set_Place(string place)\r\n{\r\nthis.name=name;\r\n}\r\npublic   String  get_Place()\r\n{\r\nreturn place;\r\n}\r\npublic int get_period()\r\n{\r\nreturn \r\n\r\n}\r\n\r\n\r\n\r\n\r\n                                                              \r\n       public class scientific extends tripe{\r\nprivate String start_date;\r\nprivate String end_date;\r\npublic scientific(String n,String p,String s,string e)\r\n{\r\nSuper(n,p);\r\nstart_date=s;\r\nend_date=e;\r\n}\r\npublic void set_date(String date)\r\n{\r\nthis.date=date;\r\n}\r\npublic String get_date()\r\n{\r\nreturn date;\r\n}\r\npublic int get_period()\r\n{\r\nreturn 2;\r\n}\r\n\r\n\r\n \r\n\r\n\r\npublic class entertainment extends tripe{\r\nprivate String date;\r\npublic entertainment(String n,String p,String d)\r\n{\r\nsuper(n,p);\r\ndate=d;\r\n\r\n}\r\npublic void set_date(String date)\r\n{\r\nthis.date=date;\r\n}\r\npublic .String get_date()\r\n{\r\nreturn date;\r\n}\r\npublic int get_period()\r\n{\r\nreturn 3;\r\n}\r\n\r\n}', 388, 34, 5, '2018-12-03 13:56:05', '2019-01-22 11:51:20'),
(89625, 86, '220', 388, 34, 2, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89626, 88, '227', 388, 34, 0, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89627, 89, '233', 388, 34, 0, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89628, 90, '234', 388, 34, 2, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89629, 91, '236', 388, 34, 1, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89630, 92, '239', 388, 34, 0, '2018-12-03 13:56:06', '2018-12-03 13:56:49'),
(89678, 85, 'Package trip;\r\npublic class Trip{\r\nString  name;\r\nString place;\r\nTrip(){\r\n}\r\nTrip(String n,String p){\r\nname=n;\r\nplace=p;\r\n\r\n}\r\nPackage trip;\r\nPublic class Scientific extends trip{\r\nsuper(n,p);\r\nString start data;\r\nString end data;\r\nScientific (){}\r\nScientific (String n,String p,String sd,String ed){\r\nname=n;\r\nplace=p;\r\nstart data=sd;\r\nend data=ed;\r\n\r\n}\r\npublic int getPeriod (String s,String s2){\r\nint x=s.parsInt();\r\nint y=s2.parsInt();\r\n\r\n}\r\nPublic void print (){\r\nSystem.out.println(\"name: \" +name); \r\nSystem.out.println(\"place: \" +place); \r\nSystem.out.println(\"Start data: \" +sd); \r\nSystem.out.println(\"end data: \" +ed); \r\n\r\n\r\n}\r\n\r\n}\r\nPackage trip;\r\npublic class Entertainment extends trip{\r\nsuper(n,p);\r\nString data;\r\n Entertainment (){}\r\n Entertainment (String n,String p,String d){\r\nname=n;\r\nplace=p;\r\n data=d;\r\n}\r\nPublic void print (){\r\nSystem.out.println(\"name: \" +name); \r\nSystem.out.println(\"place: \" +place); \r\nSystem.out.println(\"data: \" +d); \r\n\r\n}\r\n\r\n}\r\nPackage trip;\r\npublic static void main(String[] args){\r\nScientific t1=new Scientific (trip1,paris,1/1/2019,15/1/2019);\r\nScientific t2=new Scientific (trip2,aswan,4/4/2019,10/4/2019);\r\n Entertainment t3=new  Entertainment (trip3,Qina,5/5/2019);\r\n Entertainment t4=new  Entertainment (trip4,loxere ,6/6/2019);\r\n Entertainment t5=new  Entertainment (trip5,sohage,7/7/2019);\r\nt1.print();\r\nt2.print();\r\nt3.print();\r\nt4.print();\r\nt5.print();\r\nSystem.out.println(\r\n}', 355, 34, 6, '2018-12-03 13:56:23', '2019-01-22 11:53:28'),
(89679, 86, '220', 355, 34, 2, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89680, 88, '229', 355, 34, 2, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89681, 89, '232', 355, 34, 0, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89682, 90, '234', 355, 34, 2, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89683, 91, '236', 355, 34, 1, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89684, 92, '239', 355, 34, 0, '2018-12-03 13:56:23', '2018-12-03 13:56:38'),
(89685, 85, 'import java.util.*;\r\n\r\n  public class trip {\r\nprotected static final string scientific trip =2;\r\nprotected static final string entertainment trip =3;\r\n\r\nprotected string name ;\r\nprotected string place ;\r\n\r\n\r\n}\r\npublic trip (string name , string place){\r\nthis.name=name;\r\nthis.name=name;\r\n}\r\n\r\npublic class scientific trip extends trip {\r\n\r\nprotected string start date;\r\nprotected string end date;\r\n\r\n\r\n\r\npublic scientific trip ( string n , string start date,  string end date ){\r\nsuper (n,p);\r\nthis.start date=start date;\r\nthis.end date=end date;\r\n}\r\n\r\n}\r\npublic class entertainment trip extends trip{\r\nprotected string date;\r\n public class entertainment trip extends trip(string n , string p , string date){\r\nthis.date=date;\r\n\r\n}\r\n}\r\npublic void setstart date(string  start date){\r\nthis .start date = start date;\r\n}\r\npublic void setend date(string  end date){\r\nthis .end date = end date;\r\n}\r\npublic int getPeriod();\r\nreturn  num of days ; \r\n}\r\npublic static void main (string [] args){\r\n trip t =new trip ();\r\nscientific trip st = new trip();\r\n\r\nSystem.out.println(st getperiod());\r\nentertainment trip et = new trip();\r\n\r\nSystem.out.println(et getperiod());\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n}\r\n\r\n\r\n}', 395, 34, 5, '2018-12-03 13:56:25', '2019-01-22 11:56:01'),
(89686, 86, '220', 395, 34, 2, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89687, 88, '227', 395, 34, 0, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89688, 89, '233', 395, 34, 0, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89689, 90, '234', 395, 34, 2, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89690, 91, '236', 395, 34, 1, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89691, 92, '239', 395, 34, 0, '2018-12-03 13:56:25', '2018-12-03 13:56:25'),
(89699, 85, 'import java.util.*;\r\npackage mypackage;                                                                              \r\n       public class trip {\r\nprotected static final sting scientific trips=2;\r\nprotected static final sting entertainments trips=3;\r\nprotected string num of days; \r\nprotected string name ;\r\nprotected string place ;\r\n\r\npublic trip(){\r\n}\r\npublic trip(string n,string p){\r\nname=n;\r\nplace=p; \r\n\r\n}\r\n\r\n\r\npublic class scientific trip extends trip{\r\nprotected string start date ;\r\nprotected string end date ;\r\n\r\npublic scientific trip(string n,string p ,string start date,string end date){\r\nsuper(n,p);\r\nthis.start date=start date;\r\nthis.end date=end date;\r\n\r\n}\r\n}\r\npublic class entertainment trip extends trip{\r\nprotected string date;\r\npublic entertainment trip ((string n,string p , string date)\r\n{\r\nsuper(n,p);\r\nthis.date=date;\r\n\r\n}\r\n}\r\npublic void setstart date(string start date){\r\n this.start date=start date;\r\n}\r\npublic void setend date(string end date){\r\n this.end date=end date;\r\n}\r\npublic string getstart date(){\r\nreturn this.start date;\r\n}\r\npublic string getend date(){\r\nreturn this.end date;\r\n}\r\npublic void setdate(string date){\r\nthis.date=date;\r\n}\r\npublic string getdate(){\r\nreturn this.date;\r\n}\r\npublic int getperiod(){\r\n return num of days;\r\n\r\n}\r\npublic static void main(string[] args){\r\nscanner input=new scanner(system .in);\r\nint num of days=input.nextInt();\r\ntrip t=new trip();\r\nscientific trip st=new trip();\r\nsystem.out.println(st.getperiod());\r\nentertainment trip et=new trip();\r\nsystem.out.println(et.getperiod());\r\nsystem.out.println(st.getperiod());\r\nsystem.out.println(st.getstart date());\r\nsystem.out.println(st.getend date());\r\nsystem.out.println(et.getdate());\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 385, 34, 5, '2018-12-03 13:56:35', '2019-01-22 11:54:51'),
(89700, 86, '220', 385, 34, 2, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89701, 88, '227', 385, 34, 0, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89702, 89, '233', 385, 34, 0, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89703, 90, '234', 385, 34, 2, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89704, 91, '236', 385, 34, 1, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89705, 92, '239', 385, 34, 0, '2018-12-03 13:56:35', '2018-12-03 13:56:45'),
(89727, 85, 'package trips;\r\npublic class trips {\r\npublic static void main (String [] args)\r\n{\r\nsctrip sc = new sctrip();\r\nentrip en = new entrip();\r\nSystem.out.println(\"number of day for a Scientific trip is \" + sc.getPeriod());\r\nSystem.out.println(\"number of day for a entertainment trip is \" + en.getPeriod());\r\nint [] nday = new nday[5];\r\nnday[0] =  sc.getPeriod();\r\nnday[1] =  sc.getPeriod();\r\nnday[2] =  en.getPeriod();\r\nnday[3] =  en.getPeriod();\r\nnday[4] =  en.getPeriod();\r\nint total = 0 ;\r\nfor(int i =0 ;i<nday.Length;i++)\r\n     total += nday[i];\r\nSystem.out.println(\"number of days = \" + total);\r\n\r\n}\r\n}\r\n  public class  sctrip { \r\n    Data stdata;\r\n    Data endata; \r\n    String name;\r\n    String place; \r\n    sctrip()\r\n{\r\n   this( 1,10  , \"Mahmoud\" , \"Facebook\");\r\n\r\n}\r\n    sctrip(Data stdata, Data endata, String name, String place )\r\n{\r\n    this.stdata = stdata ;\r\n    this.endata = endata; \r\n    this.name = name;\r\n    this.place = place; \r\n\r\n}\r\n      public int getPeriod()\r\n{\r\n     return (endata - stdata);\r\n}                                                                                                   \r\n}\r\npublic class entrip {\r\n     Data data;\r\n     String name;\r\n     String place; \r\nentrip()\r\n{\r\n this( 1, \"Asad\" , \"Alexandria\");\r\n}  \r\nentrip(Data data, String name , String place)\r\n{\r\nthis.data = data;\r\nthis.name = name;\r\nthis.place = place;\r\n\r\n}\r\npublic getPeriod()\r\n{\r\nreturn 1;\r\n}                                              \r\n}', 402, 34, 4, '2018-12-03 13:56:47', '2019-01-22 11:52:20'),
(89728, 86, '220', 402, 34, 2, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89729, 88, '228', 402, 34, 0, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89730, 89, '233', 402, 34, 0, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89731, 90, '234', 402, 34, 2, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89732, 91, '236', 402, 34, 1, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89733, 92, '241', 402, 34, 2, '2018-12-03 13:56:47', '2018-12-03 13:56:47'),
(89755, 85, 'package Trips;   \r\nimport Java.util.*;                                                             \r\n                                                    public class sciTrip {\r\nprotected int name;\r\nprotected String place;\r\nprotected String startDate;\r\nprotected String endDate;\r\npublic scitrip()\r\n{\r\n}\r\npublic scitrip(int name,String place, String startDate, String endDate)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\nthis.startDate=startDate;\r\nthis.endDate=endDate;\r\n}\r\n public int getPeriod()\r\n{\r\nString []arr1=startDate.split(\"/\");\r\nString []arr2=endDate.split(\"/\");\r\nint a=Integer.parseInt(arr1[0].trim());\r\nint b=Integer.parseInt(arr2[0].trim());\r\nint c = b-a;\r\nreturn c;\r\n}\r\npublic String toString()\r\n{\r\nreturn \"class:sciTrip \" + name + place + startDate + endDate ;\r\n}\r\npublic class eTrip extends sciTrip()\r\n{\r\nprotected  String Date;\r\npublic etrip()\r\n{\r\n}\r\npublic eTrip(int n , String p,String s,String d,String Date)\r\n{\r\nif(startDate==endDate)\r\n{\r\nsuper(n,p,s,d);\r\nthis.Date=Date;\r\n}\r\n}\r\npublic String getMethod()\r\n{\r\nreturn \"one day Trip \" + Date;\r\n}\r\npublic String toString()\r\n{\r\nreturn \"class:eTrip \" + name + place + startDate + endDate ;\r\n}\r\n}\r\npublic static void main(String args[])\r\n{\r\nsciTrip s1=new sciTrip(1,\"alexandria\",\"12/12/2018\",\"16/12/2018\");\r\nsciTrip s2=new sciTrip(2,\"Hurghada\",\"17/12/2018\",\"22/12/2018\");\r\neTrip e1=new sciTrip(3,\"alex\",\"24/12/2018\",\"24/12/2018\");\r\neTrip e2=new sciTrip(4,\"Matrouh\",\"25/12/2018\",\"25/12/2018\");\r\neTrip e3=new sciTrip(5,\"Minya\",\"27/12/2018\",\"27/12/2018\");\r\nSystem.out.print(s1);\r\nSystem.out.print(s2);\r\nSystem.out.print(e1);\r\nSystem.out.print(e2);\r\nSystem.out.print(e3);\r\nSystem.out.print(s1.getMethod()+s2.getMethod()+e1.getMethod()+e2.getMethod()+e3.getMethod);\r\n}', 412, 34, 6, '2018-12-03 13:57:06', '2019-01-22 13:20:43'),
(89756, 86, '220', 412, 34, 2, '2018-12-03 13:57:06', '2018-12-03 13:57:07'),
(89757, 88, '229', 412, 34, 2, '2018-12-03 13:57:06', '2018-12-03 13:57:07'),
(89758, 89, '231', 412, 34, 2, '2018-12-03 13:57:06', '2018-12-03 13:57:07'),
(89759, 90, '234', 412, 34, 2, '2018-12-03 13:57:06', '2018-12-03 13:57:07'),
(89760, 91, '236', 412, 34, 1, '2018-12-03 13:57:06', '2018-12-03 13:57:07'),
(89761, 92, '241', 412, 34, 2, '2018-12-03 13:57:06', '2018-12-03 13:57:07');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(89762, 85, 'public class Date{\r\npublic int day;\r\npublic int month;\r\npublic int year;\r\npublic Date(int day,int month,int year){\r\nthis.day = day;\r\nthis.month= month;\r\nthis.year= year;\r\n}\r\n}\r\npublic class trip{\r\nprotected String name;\r\nprotected String palace;\r\npublic trip(name,palace){\r\nthis.name = name;\r\nthis.palace = palace ;\r\npublic abstract   int getPeriod (){\r\n}\r\npublic String toString(){\r\nreturn \"Name of the trim : \" + name \"\\r\\n\" + \"Palace : \" + palace ;\r\n}\r\n}\r\n}\r\npublic class scientificTrip extends trip{\r\npublic Date startDate;\r\npublic Date endDate;\r\npublic scientificTrip (){\r\n\r\n}\r\npublic scientificTrip (Date startDate,Date  endDate){\r\nthis.startDate = startDate;\r\nthis.endDate= endDate;\r\n}\r\npublic scientificTrip (String name,String palace,Date startDate,Date  endDate){\r\nsuper(name,palace);\r\nthis.startDate = startDate;\r\nthis.endDate= endDate;\r\n}\r\npublic int getPeriod (){\r\nint sum = (startDate.day+startDate.month*30+startDate.year*360)  - (endDate.day+endDate.month*30+endDate.year*360)\r\nreturn sum;\r\n}\r\npublic String toString(){\r\nreturn \"Name of the trim : \" + name \"\\r\\n\" + \"Palace : \" + palace + \"\\r\\n\"     + \"Number of Days : \" + this.getPeriod;\r\n}\r\n}\r\npublic class entertainmentTrip extends trip{\r\npublic entertainmentTrip (){\r\n}\r\npublic entertainmentTrip (String name,String palace){\r\nsuper(name,palace);\r\npublic int getPeriod (){\r\nreturn 1;\r\n}\r\npublic String toString(){\r\nreturn \"Name of the trim : \" + name \"\\r\\n\" + \"Palace : \" + palace + \"\\r\\n\"     + \"Number of Days : \" + 1;\r\n}\r\n}\r\npublic class test{\r\npublic static void main(String args[]){\r\nint  totalNumberOfDays1 = 0;\r\nint  totalNumberOfDays2 = 0;\r\ntrip [] trips = new trip[5];\r\ntrips[0] = new scientificTrip ();\r\ntrips[1] = new scientificTrip ();\r\ntrips[2] = new entertainmentTrip ();\r\ntrips[3] = new entertainmentTrip ();\r\ntrips[4] = new entertainmentTrip ();\r\n}\r\nfor(int i = 0;i<2;i++){\r\n totalNumberOfDays1 += trips[i].getPeriod ();\r\nsystem.out.println((scientificTrip )(trips[i]));\r\n}\r\nfor(int i =2 ;i<5;i++){\r\ntotalNumberOfDays2 += trips[i].getPeriod ();\r\nsystem.out.println((entertainmentTrip )(trips[1]));\r\n}\r\ntotalNumberOfDays =totalNumberOfDays1 + totalNumberOfDays2   ;\r\n}\r\n}', 419, 34, 8, '2018-12-03 13:57:13', '2019-01-22 13:20:22'),
(89763, 86, '220', 419, 34, 2, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89764, 88, '229', 419, 34, 2, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89765, 89, '233', 419, 34, 0, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89766, 90, '234', 419, 34, 2, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89767, 91, '237', 419, 34, 0, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89768, 92, '240', 419, 34, 0, '2018-12-03 13:57:13', '2018-12-03 13:57:13'),
(89776, 85, 'package  ask; \r\nimport java.util.*;\r\npublic class trips\r\n{\r\npublic String name;\r\npublic String place;\r\n\r\npublic trips()\r\n{}\r\npublic trips(String name,String place)\r\n{\r\nthis.name=name;\r\nthis.place=place;\r\n\r\n}\r\npublic int  getperiod()\r\n{ int x=Startdate-enddate;\r\nreturn(( x*3)+2);\r\n}\r\n}\r\n\r\npublic class scientific extends trips\r\n{\r\npublic double startdate;\r\n public double enddate;\r\npublic scientific(){}\r\npublic scientific(String name,String place,double Startdate,double enddate)\r\n{\r\nsuper(name,place);\r\nthis.tStartdate=Startdate;\r\nthis.enddate= enddate;\r\n}\r\npublic int  getperiod()\r\n{\r\nint x=Startdate-enddate;\r\nreturn (x*3)+2;\r\n}\r\n}\r\npublic class enteranimemt extends  trips\r\n{ public int one_day;\r\npublic enteranimemt()\r\n{}\r\npublic nteranimemt(String name,Streing place,int one_day)\r\n{ super(name,place);\r\n   this.one_day=one_day;\r\n}\r\npublic int  getperiod()\r\n{ int x=Startdate-enddate\r\nreturn( x*3)+2;\r\n}\r\n}\r\npublic class tast{\r\n\r\npublic static void main(String [],args)\r\n{ trips u=new trips();\r\nSystem.out.print(u.getperiod());\r\nenteranimemt o=new nteranimemt();\r\nSystem.out.print(o.getperiod());\r\n scientific h=new scientific();\r\nSystem.out.print(h.getperiod());\r\n}\r\n}', 254, 34, 5, '2018-12-03 13:57:17', '2019-01-22 11:44:56'),
(89777, 86, '220', 254, 34, 2, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89778, 88, '227', 254, 34, 0, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89779, 89, '231', 254, 34, 2, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89780, 90, '234', 254, 34, 2, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89781, 91, '236', 254, 34, 1, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89782, 92, '240', 254, 34, 0, '2018-12-03 13:57:17', '2018-12-03 13:57:17'),
(89783, 85, 'public class Trip{\r\nString name;\r\nString place;\r\nTrip(){\r\nname=\"fun\";\r\nplace=\"assuit\";\r\n}\r\nTrip(String n,string p)\r\n{\r\nname=n;\r\nplace=p;\r\n}\r\npublic void setName()\r\n{\r\nthis.name=name;\r\n}\r\npublic String getName(String n)\r\n{return n;\r\n}\r\npublic void setPlace()\r\n{\r\nthis.place=Place;\r\n}\r\npublic String getPlace(String p)\r\n{return p;\r\n}\r\n}\r\npublic class ScientificTrip extends Trip{\r\nString startDate;\r\nString endDate;\r\nScientificTrip()\r\n{\r\nstartDate=\"20/10/2018\";\r\nnedDate=\"30/10/2018\";\r\n}\r\nScientificTrip(String s,string e)\r\n{\r\nstartDate=s;\r\nendDate=e;\r\n}\r\nScientificTrip(String n,String p,String s,String e)\r\n{\r\nsuper(n,p);\r\nstartDate=s;\r\nendDate=e;\r\n}\r\nString []arr1=startDate.split(\'/\');\r\nint x=arr1.parseInt(arr1[0],trim());\r\nString []arr2=startDate.split(\'/\');\r\nint y=arr2.parseInt(arr2[0],trim())\r\nint z=y-x;\r\npublic int getpriod(int f)\r\n{return f*z;\r\n}\r\n\r\n}\r\npublic class enterainmentTrip extends Trip{\r\nfinal int duration =1;\r\nenterainmentTrip(String n,String p)\r\n{\r\nsuper(n,p);\r\n}\r\npubic int getperiod(int x)\r\n{\r\nreturn x;}\r\n}\r\npackage trips{\r\n class  sss{\r\nimport java.util.*;\r\nimport java.String;\r\npublic static void main(String args[]){\r\nscientifcTrip o1=new scientifcTrip();\r\nentertainmenrTrip o2=new entertainmenrTrip();\r\nint numofEnt=o2.getperiod(3);\r\nint numofSci=o1.getperiod(2);\r\nint total=numofSci+numofEnt;\r\nSystem.out.print(\"the totai days of Trip =\"+total);\r\n}', 259, 34, 6, '2018-12-03 13:57:24', '2019-01-22 11:44:03'),
(89784, 86, '220', 259, 34, 2, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89785, 88, '229', 259, 34, 2, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89786, 89, '230', 259, 34, 0, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89787, 90, '234', 259, 34, 2, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89788, 91, '236', 259, 34, 1, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89789, 92, '238', 259, 34, 0, '2018-12-03 13:57:24', '2018-12-03 13:57:24'),
(89790, 85, 'class trip(){\r\npublic trip_inf(){\r\n\r\nString name ;\r\nString place ;\r\nint date ;\r\n}\r\nclass scientific extends trip_inf()\r\n{\r\nint end_date ;\r\n}\r\nclass entertainment extends trip_inf()\r\n{\r\n}\r\n}\r\npublic static void main(String[] args) {\r\n\r\n}', 423, 34, 2, '2018-12-03 13:57:33', '2019-01-22 11:42:51'),
(89791, 86, '220', 423, 34, 2, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89792, 88, '227', 423, 34, 0, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89793, 89, '233', 423, 34, 0, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89794, 90, '235', 423, 34, 0, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89795, 91, '236', 423, 34, 1, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89796, 92, '239', 423, 34, 0, '2018-12-03 13:57:33', '2018-12-03 13:57:34'),
(89825, 85, 'public class tripe{\r\n String name; \r\n String place;\r\npublic tripe( String n, String p){\r\nname =n; \r\nplace =p;    \r\n }\r\n}\r\n public Class scientific_trip extends tripe {\r\nint s_day;\r\nint s_month;\r\nint e_day;\r\nint e_month;\r\npublic scientific_trip ( ) {    }\r\n  public scientific_trip ( String n ,String p,int start_day ,int start_month, int end_day, int end_month)\r\n{      \r\n     super (n,p);\r\n s_day=start_day;\r\n s_month= start_month;\r\n e_day=end_day;\r\n e_month=end_month;\r\n}\r\n public int getPeriod ()\r\n{\r\n   return ( e_day- s_day)+( (e_month-s_month)*30);\r\n}\r\n\r\npublic Class entertainment_trip extends tripe {\r\n int day;\r\nint month;\r\npublic entertainment_trip ( )  {      }\r\npublic entertainment_trip (String n,  String p,int d ,int m)\r\n{\r\nsuper (n,p);\r\nday= d;\r\nmonth= m;\r\n}\r\n public Class Main {\r\n public static void main(String [ ] args)\r\n{\r\n import java.util.*;\r\nscientific_trip st1  =new scientific_trip (trip1,assuit ,23,1,25,1);\r\nscientific_trip st1  =new scientific_trip (trip2,alex, 11,6,15,6);\r\nSystem.Out.println(st1.getPeriod());\r\nSystem.Out.println(st2.getPeriod());\r\nentertainment_trip et1=new entertainment_trip (trip3,aswan,22,4);\r\nentertainment_trip et1=new entertainment_trip (trip3,aswan,4,3);\r\nentertainment_trip et1=new entertainment_trip (trip5,aswan,11,3);\r\n           }\r\n}', 232, 34, 7, '2018-12-03 13:57:48', '2019-01-22 11:42:14'),
(89826, 86, '220', 232, 34, 2, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89827, 88, '227', 232, 34, 0, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89828, 89, '231', 232, 34, 2, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89829, 90, '234', 232, 34, 2, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89830, 91, '236', 232, 34, 1, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89831, 92, '238', 232, 34, 0, '2018-12-03 13:57:48', '2018-12-03 13:57:48'),
(89839, 85, 'public class trip(){\r\nString name;\r\nString place;\r\n\r\n}\r\n\r\npublic class scientifictrip extends trip(){\r\nString startdate;\r\nString enddate;\r\n\r\npublic int getPeriod (){\r\nString [] s=new String [3];\r\nString [] b=new String [3];\r\nfor(int i=0;i<3;i++){\r\ns[i]=Integer.ParseInt(startdate.split(\"/\"));\r\nb[i]=Integer.ParseInt(enddate.split(\"/\"));\r\n}\r\nif(s[1]==b[1]){\r\nmax1=max(s[0],b[0]);\r\nmin1=min(s[0],b[0]);\r\nreturn max-min;}\r\nelse\r\nreturn (30-s[0])+(30-b[0]);\r\n\r\n}\r\n}\r\npublic class entertainmenttrip extends trip(){\r\nDate date=new Date();\r\n}\r\npublic class fci(){\r\npublic fci(){\r\n}\r\npublic static void main(String[],args){\r\nint days=0;\r\nint res1=0;\r\nint res2=0;\r\nscientifictrip trip1=new scientifictrip();\r\nscientifictrip trip2=new scientifictrip();\r\nentertainmenttrip trip3= new entertainmenttrip();\r\nentertainmenttrip trip4= new entertainmenttrip();\r\nentertainmenttrip trip5= new entertainmenttrip();\r\nres1=trip1.getPeriod();\r\nres2=trip2.getPeriod ();\r\ndays=res1+res2;\r\nfor(int i=0;i<3;i++){\r\ndays++;}\r\nSystem.out.println(\"the number of days is\"+days);\r\n}\r\n\r\n}', 270, 34, 5, '2018-12-03 13:58:03', '2019-01-22 13:20:03'),
(89840, 86, '220', 270, 34, 2, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89841, 88, '227', 270, 34, 0, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89842, 89, '230', 270, 34, 0, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89843, 90, '234', 270, 34, 2, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89844, 91, '236', 270, 34, 1, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89845, 92, '241', 270, 34, 2, '2018-12-03 13:58:03', '2018-12-03 13:58:03'),
(89853, 85, 'public class trip\r\n{\r\n  protected String name ;\r\n  protected String place;\r\n  public trip(){}\r\n public trip(String n , String p)\r\n{\r\n  name = n;\r\n  place = p;\r\n}\r\n}\r\npubic class scientified extends trip\r\n{\r\n   String s_date;\r\n   String e_date;\r\n  \r\n    public scientified (){}\r\npublic scientified ( String s , String e)\r\n{\r\n s_date = s;\r\n   e_date = e;\r\n}\r\n   public scientified (String n , String p , String s , String e)\r\n{\r\n  super(n , p);\r\n  s_date = s;\r\n   e_date = e;\r\n}\r\n} \r\npublic class entertainment  extends trip\r\n{\r\n   String date;\r\n   public entertainment  (){}\r\n   public entertainment  (String d)\r\n{\r\n  date = d;\r\n} \r\npublic entertainment  (String n , String p ,String d)\r\n{\r\nsuper(n , p);\r\n date = d;\r\n}\r\n}  \r\n classmain{\r\ntrip []t1 = new trip[5];\r\nfor(int i=0;i<t1.length;i++)\r\n{\r\n  if(i<2)\r\n{\r\n   t1[i] = new scientific();\r\n   \r\n} \r\nelse\r\n{\r\n  t1[i] = new entertainment ();\r\n  \r\n}\r\n} \r\n\r\n}', 400, 34, 6, '2018-12-03 13:58:06', '2019-01-22 11:39:41'),
(89854, 86, '220', 400, 34, 2, '2018-12-03 13:58:06', '2018-12-03 13:58:07'),
(89855, 88, '229', 400, 34, 2, '2018-12-03 13:58:06', '2018-12-03 13:58:07'),
(89856, 89, '230', 400, 34, 0, '2018-12-03 13:58:07', '2018-12-03 13:58:07'),
(89857, 90, '234', 400, 34, 2, '2018-12-03 13:58:07', '2018-12-03 13:58:07'),
(89858, 91, '236', 400, 34, 1, '2018-12-03 13:58:07', '2018-12-03 13:58:07'),
(89859, 92, '239', 400, 34, 0, '2018-12-03 13:58:07', '2018-12-03 13:58:07'),
(89874, 85, 'import java.util.Scanner;\r\n  public class ScientificTrip{                                                                                                             \r\n   type start data; \r\n   type end date;\r\n   String name;  \r\n  String place;\r\npublic int sum(){\r\n(sum = end date - start date )\r\nreturn sum ;\r\n}   \r\n   public ScientificTrip(){\r\nstart date = 1/1/2019;\r\n end date=10/1/2019;\r\n  name=\"strip\"; \r\n place=\"place\"; \r\n} }                                                   \r\n  public class entertrip{ \r\n  String name; \r\n  String place;\r\n  int nday; \r\n    public  entertrip(){\r\n nday =1;\r\n  name=\"strip\";\r\n  place=\"place\";\r\n } }   \r\n\r\n\r\npublic ststic void main {\r\n//calculate the total number of days for all trips in this list.\r\npublic int getPeriod(){\r\nint res;\r\nres=(  nday + sum       );\r\nreturn res;\r\n}', 260, 34, 3, '2018-12-03 13:58:17', '2019-01-22 11:37:54'),
(89875, 86, '219', 260, 34, 0, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89876, 88, '229', 260, 34, 2, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89877, 89, '233', 260, 34, 0, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89878, 90, '234', 260, 34, 2, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89879, 91, '236', 260, 34, 1, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89880, 92, '239', 260, 34, 0, '2018-12-03 13:58:17', '2018-12-03 13:58:17'),
(89888, 85, 'public class trip\r\n{\r\n string name ;\r\nstring place;\r\n\r\npublic trip (string name,string place)\r\n{\r\n  this.name=name;\r\n  this.place=place;\r\n}\r\n}   \r\n\r\npublic class scientific_trip extends trip\r\n{\r\n  int start_date;\r\n  int end_date;\r\n  public scientific-trip (string place,string name, int start_date, int start_date)\r\n{\r\nsuper(place,name)\r\n  this. start_date= start_date;\r\n  this.end_date=end_date;\r\n}\r\n\r\n\r\npublic class entertainment_trip extends trip\r\n{\r\n  String date;  \r\n      \r\n public entertainment_trip(string place,string name, string date)\r\n{\r\n  super(place,name)\r\n  this.date=date;\r\n}                                                                                           \r\n} \r\n\r\npubic class int getPeriod() \r\n{\r\nnumber of day = start_date+end_date+3;\r\nreturn number of day;\r\n} \r\n\r\n\r\npublic static void main(string[] args)\r\n{\r\n  scientific-trip t1=new scientific-trip(\"asd\",\"asd\",\"1/1/2018\",\"\"5/1/2018);\r\n  scientific-trip t2=new scientific-trip(\"asd\",\"asd\",\"1/1/2018\",\"\"5/1/2018);\r\n  Scanner input=new Scanner (System.in);\r\n  System.out.println(\"Enter Start day of scientific trips  \")\r\n \r\n}', 346, 34, 5, '2018-12-03 13:58:20', '2019-01-22 11:38:44'),
(89889, 86, '218', 346, 34, 0, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89890, 88, '227', 346, 34, 0, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89891, 89, '230', 346, 34, 0, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89892, 90, '234', 346, 34, 2, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89893, 91, '237', 346, 34, 0, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89894, 92, '241', 346, 34, 2, '2018-12-03 13:58:20', '2018-12-03 13:58:20'),
(89910, 85, 'package FCI ;\r\n            import java.util.scanner;\r\n           public class trip \r\n          {        protected string name ;\r\n                   protected string place ;                                                                                       \r\n             public trip (){}\r\n            public trip (string name,string place)  \r\n            {      this.name=name;\r\n                   this.place=place;\r\n            }\r\n        }\r\n          public class scientific extends   trip \r\n       {           protected Date startdate ;\r\n                    protected Date enddate ;     \r\n            public scientific (){}       \r\n            public scientific (string name,string place,Date startdate,Date enddate)\r\n          {         super(name,place);\r\n                      this.startdate=startdate;\r\n                      this.enddate=enddate;\r\n           } \r\n            public int getperiod (Date startdate,Date enddate)  \r\n            {      return  (enddate -startdate);\r\n            } \r\n        }\r\n             public class  entertainment   extends   trip \r\n        {        protected date onedate ;\r\n             public   entertainment (){}  \r\n             public   entertainment (string name,string place,Date onedate)\r\n             {      super(name,place);\r\n                    this.onedate=onedate;\r\n             }\r\n            public int getperiod(Date onedate)\r\n            {           int x=1;\r\n                        return x;\r\n             }\r\n         }\r\n     public class FCI\r\n     {     public static void main (String [] args)\r\n            {     Scanner input =new Scanner(System.in);\r\n                    string name =input.next();\r\n                    string place=input.next();\r\n                    Date startdate =input.nextdate();\r\n                     Date enddate =input.nextdate();\r\n                     Date onedate =input.nextdate();\r\n           \r\n         scientific s1=new scientific(string name,string place,Date startdate,Date enddate);\r\n         scientific s2=new scientific(string name,string place,Date startdate,Date enddate);\r\n         entertainment   e1 =new  entertainment  (string name,string place,Date onedate); \r\n         entertainment   e2 =new  entertainment  (string name,string place,Date onedate); \r\n         entertainment   e2  =new  entertainment  (string name,string place,Date onedate); \r\n         System.out.println(s1);\r\n         System.out.println(s2);\r\n         System.out.println(e1);\r\n         System.out.println(e2);\r\n         System.out.println(e3);\r\n         System.out.println(s1.getperiod(startdate ,enddate));\r\n         System.out.println(s2.getperiod(startdate ,enddate));\r\n         System.out.println(e1.getperiod(onedate));\r\n        System.out.println(e2.getperiod(onedate));\r\n        System.out.println(e3.getperiod(onedate));\r\n       System.out.println(\"the total of days  \" +s1.getperiod(startdate ,enddate)+s2.getperiod(startdate ,enddate)+e1.getperiod(onedate)+e2.getperiod(onedate)+e3.getperiod(onedate));\r\n      }\r\n}', 266, 34, 8, '2018-12-03 14:01:58', '2019-01-22 13:19:51'),
(89911, 86, '220', 266, 34, 2, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89912, 88, '227', 266, 34, 0, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89913, 89, '230', 266, 34, 0, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89914, 90, '235', 266, 34, 0, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89915, 91, '236', 266, 34, 1, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89916, 92, '238', 266, 34, 0, '2018-12-03 14:01:58', '2018-12-03 14:01:58'),
(89963, 85, 'public static class Data(){\r\n}\r\nimport java.util.data;\r\n public  class P(){\r\nString place;\r\nString name;\r\ndata data;\r\ndata data_fin;\r\npublic p()\r\n{\r\n}\r\npublic p( String place , String name ,data data;data data_fin)\r\n{\r\nthis. place=place ;\r\nthis.name=name;\r\nthis.data=data;\r\nthis.data_fin=data_fin;\r\n}\r\npublic get_Place( ){\r\nthis.place;\r\n}\r\npublic get_name(){\r\nthis.name;\r\n}\r\npublic set_data(data  data){\r\nthis.data=data;\r\n}\r\npublic void get_data(){\r\n\r\ncounter=data_fin-data\r\n}\r\npublic set_data( data data_fin){\r\nthis.data_fin=data_fin;\r\n}}\r\npublic class scientific extends p(){\r\npublic scientific(){\r\n}\r\npublic class scientific(String a ,String  b ,data c,data d)\r\n{\r\nsuper(a,b,c,d);\r\n}\r\n}\r\npublic class entertainment extends p( ){\r\npublic entertainment ( )\r\n\r\n}\r\n\r\npublic entertainment (String x ,String y ,data z){\r\nsuper(x,y,z);\r\n}\r\n}\r\npublic static int counter =0;\r\npublic static void main (String [] args ){\r\np data =new p():\r\ndata.set_data();\r\n\r\n}', 422, 34, 4, '2018-12-03 14:04:07', '2019-01-22 11:35:46'),
(89964, 86, '220', 422, 34, 2, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89965, 88, '229', 422, 34, 2, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89966, 89, '230', 422, 34, 0, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89967, 90, '234', 422, 34, 2, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89968, 91, '236', 422, 34, 1, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89969, 92, '241', 422, 34, 2, '2018-12-03 14:04:07', '2018-12-03 14:04:07'),
(89997, 85, 'public class Trip{\r\nprivate String name;                                                                                                                \r\n private String place;\r\npublic Trip()\r\n{\r\n}\r\npublic Trip(String name,String place ){\r\nthis.name=name;\r\nthis.place=place; \r\n}\r\npublic void setPeriod( numberofdays){\r\n\r\n}\r\npublic static int getPeriod(int numberofdays){\r\nreturn  numberofdays;\r\n}\r\npublic class Scientific extends Trip{\r\nprivate int startdate;\r\nprivate int enddate;\r\nprivate String name;                                                                                                                \r\n private String place;\r\npublic Scientific()\r\n{\r\n}\r\n public Scientific(String name,String place,int startdate,int enddate)\r\n{\r\nthis.name=name;\r\nthis.place=place; \r\nthis.startdate=startdate;\r\nthis.enddate=enddate;\r\n}\r\npublic class Entertainment extends Trip{\r\nprivate String name;                                                                                                                \r\nprivate String place;\r\npublic Entertainment(){\r\n}\r\npublic Entertainment(String name,String place){\r\nthis.name=name;\r\nthis.place=place; \r\n}}\r\npublic static void main(String[] args){\r\nTrip t1=new Trip();\r\nScientific s1=new Scientific();\r\nEntertainment e1=new Entertainment();\r\nSystem.out,println(t1.getPeriod);\r\n}}', 407, 34, 4, '2018-12-03 14:13:10', '2019-01-22 11:34:31'),
(89998, 86, '218', 407, 34, 0, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(89999, 88, '229', 407, 34, 2, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(90000, 89, '233', 407, 34, 0, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(90001, 90, '234', 407, 34, 2, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(90002, 91, '237', 407, 34, 0, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(90003, 92, '239', 407, 34, 0, '2018-12-03 14:13:10', '2018-12-03 14:13:10'),
(90024, 85, 'public class Trip{\r\nprotected String name,place;\r\npublic Trip(String n,String p)\r\n{\r\nname=n;    place=p;\r\n}\r\npublic int getPeriod(int startDate,int endDate)\r\n{\r\n     if(name==(entertainment)\r\n{\r\n    return    1;\r\n}\r\n   else\r\n   return      (endDate-startDate;\r\n}\r\n\r\npublic class Entertainment extends Trip{\r\nprivate int date=1;\r\npublic int sumOfDate(int num)\r\n{\r\nreturn date*num;\r\n}\r\npublic class Scientific extends Trip{\r\nprivate int startDate;\r\nprivate int endDate;\r\npublic Enetrtainment(int x,int y)\r\n{\r\nstartDate=x;\r\nendDate=y;\r\n}\r\npublic int summ(int numm)\r\n{\r\nint res=getPeriod(startDate,endDate)\r\n return res*  numm;                                                                                                 \r\n  }\r\n}\r\npublic class Main{\r\n        Entertainment entertainment1=new Entertainment(', 361, 34, 3, '2018-12-03 14:16:59', '2019-01-22 11:33:27'),
(90025, 86, '220', 361, 34, 2, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(90026, 88, '227', 361, 34, 0, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(90027, 89, '231', 361, 34, 2, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(90028, 90, '234', 361, 34, 2, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(90029, 91, '236', 361, 34, 1, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(90030, 92, '240', 361, 34, 0, '2018-12-03 14:16:59', '2018-12-03 14:16:59'),
(92650, 114, '310', 488, 38, 2, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92651, 115, '316', 488, 38, 0, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92652, 116, '318', 488, 38, 0, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92653, 117, '323', 488, 38, 2, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92654, 118, '326', 488, 38, 0, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92655, 119, '330', 488, 38, 2, '2018-12-18 08:52:06', '2018-12-18 08:52:07'),
(92656, 120, '335', 488, 38, 2, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92657, 121, '338', 488, 38, 2, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92658, 122, '343', 488, 38, 2, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92659, 123, '348', 488, 38, 2, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92660, 124, '352', 488, 38, 0, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92661, 125, '354', 488, 38, 0, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92662, 126, '360', 488, 38, 0, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92663, 127, '363', 488, 38, 0, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92664, 128, '368', 488, 38, 0, '2018-12-18 08:52:07', '2018-12-18 08:52:07'),
(92845, 114, '310', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92846, 115, '314', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92847, 116, '318', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92848, 117, '324', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92849, 118, '326', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92850, 119, '330', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92851, 120, '335', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92852, 121, '338', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92853, 122, '342', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92854, 123, '349', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92855, 124, '350', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92856, 125, '355', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92857, 126, '358', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92858, 127, '364', 469, 38, 2, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(92859, 128, '366', 469, 38, 0, '2018-12-18 08:52:35', '2018-12-18 08:52:36'),
(94444, 114, '310', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94445, 115, '316', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94446, 116, '319', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94447, 117, '323', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94448, 118, '328', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94449, 119, '330', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94450, 120, '337', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94451, 121, '338', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94452, 122, '345', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94453, 123, '347', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94454, 124, '350', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94455, 125, '354', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94456, 126, '360', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94457, 127, '364', 483, 38, 2, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94458, 128, '368', 483, 38, 0, '2018-12-18 08:56:20', '2018-12-18 08:56:21'),
(94717, 114, '310', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94718, 115, '315', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94719, 116, '320', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94720, 117, '323', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94722, 118, '328', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94724, 119, '331', 478, 38, 0, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94726, 120, '337', 478, 38, 0, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94728, 121, '338', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94730, 123, '348', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94732, 124, '350', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94734, 125, '355', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94736, 126, '360', 478, 38, 0, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94738, 127, '362', 478, 38, 0, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(94740, 128, '367', 478, 38, 2, '2018-12-18 08:57:00', '2018-12-18 08:57:00'),
(95220, 114, '310', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95221, 115, '315', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95222, 116, '319', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95223, 117, '324', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95224, 118, '326', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95225, 119, '330', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95226, 120, '335', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95227, 121, '338', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95228, 122, '343', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95229, 123, '347', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95230, 124, '350', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95231, 125, '354', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95232, 126, '358', 466, 38, 2, '2018-12-18 08:57:53', '2018-12-18 08:57:53'),
(95234, 127, '362', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:54'),
(95236, 128, '368', 466, 38, 0, '2018-12-18 08:57:53', '2018-12-18 08:57:54'),
(95976, 114, '310', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95977, 115, '315', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95978, 116, '320', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95979, 117, '324', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95980, 118, '327', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95981, 119, '331', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95982, 120, '335', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95983, 121, '339', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95984, 122, '343', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95985, 123, '348', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95986, 124, '350', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95987, 125, '355', 438, 38, 2, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95988, 126, '359', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95989, 127, '363', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(95990, 128, '368', 438, 38, 0, '2018-12-18 08:59:55', '2018-12-18 08:59:55'),
(96075, 114, '310', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96076, 115, '316', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96077, 116, '320', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96078, 117, '324', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96079, 118, '327', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96080, 119, '330', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96081, 120, '335', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96082, 121, '338', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96083, 122, '342', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96084, 123, '347', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96085, 124, '352', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96086, 125, '354', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96087, 126, '358', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96088, 127, '364', 481, 38, 2, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(96089, 128, '366', 481, 38, 0, '2018-12-18 09:00:04', '2018-12-18 09:00:05'),
(97105, 114, '310', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97106, 115, '315', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97107, 116, '320', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97108, 117, '323', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97109, 118, '328', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97110, 119, '330', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97111, 120, '335', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97112, 121, '338', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97113, 122, '342', 465, 38, 0, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97114, 123, '348', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97115, 124, '351', 465, 38, 0, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97116, 125, '355', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97117, 126, '360', 465, 38, 0, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97118, 127, '364', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97119, 128, '367', 465, 38, 2, '2018-12-18 09:02:03', '2018-12-18 09:02:04'),
(97518, 114, '310', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97519, 115, '314', 482, 38, 0, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97520, 116, '320', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97521, 117, '323', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97522, 118, '328', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97523, 119, '330', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97524, 120, '335', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97525, 121, '338', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97526, 122, '343', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97527, 123, '348', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97528, 124, '350', 482, 38, 2, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97529, 125, '354', 482, 38, 0, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97530, 126, '359', 482, 38, 0, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97531, 127, '363', 482, 38, 0, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97532, 128, '368', 482, 38, 0, '2018-12-18 09:02:43', '2018-12-18 09:02:43'),
(97570, 114, '310', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97571, 115, '315', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97572, 116, '319', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97573, 117, '323', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97574, 118, '326', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97575, 119, '332', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97576, 120, '335', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97577, 121, '338', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97578, 122, '342', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97579, 123, '347', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97580, 124, '351', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97581, 125, '356', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97582, 126, '358', 464, 38, 2, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97583, 127, '362', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97584, 128, '368', 464, 38, 0, '2018-12-18 09:02:45', '2018-12-18 09:02:46'),
(97586, 114, '310', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97588, 115, '316', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97590, 116, '318', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97592, 117, '324', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97594, 118, '326', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97596, 119, '332', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97598, 120, '336', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:48'),
(97600, 121, '338', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97602, 122, '344', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97606, 123, '348', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97609, 124, '350', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97611, 125, '355', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97613, 126, '358', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97615, 127, '364', 461, 38, 2, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97617, 128, '368', 461, 38, 0, '2018-12-18 09:02:48', '2018-12-18 09:02:49'),
(97655, 114, '310', 487, 38, 2, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97656, 115, '314', 487, 38, 0, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97657, 116, '320', 487, 38, 2, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97658, 117, '324', 487, 38, 0, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97659, 118, '328', 487, 38, 2, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97660, 119, '332', 487, 38, 0, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97661, 120, '335', 487, 38, 2, '2018-12-18 09:02:54', '2018-12-18 09:02:55'),
(97662, 121, '339', 487, 38, 0, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97663, 122, '343', 487, 38, 2, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97664, 123, '348', 487, 38, 2, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97665, 124, '350', 487, 38, 2, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97666, 125, '354', 487, 38, 0, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97667, 126, '359', 487, 38, 0, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97668, 127, '363', 487, 38, 0, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97669, 128, '367', 487, 38, 2, '2018-12-18 09:02:55', '2018-12-18 09:02:55'),
(97725, 114, '310', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97726, 115, '314', 446, 38, 0, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97727, 116, '320', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97728, 117, '323', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97729, 118, '328', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97730, 119, '330', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:01'),
(97731, 120, '335', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97732, 121, '340', 446, 38, 0, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97733, 122, '343', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97734, 123, '348', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97735, 124, '350', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97736, 125, '355', 446, 38, 2, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97737, 126, '360', 446, 38, 0, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97738, 127, '363', 446, 38, 0, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97739, 128, '368', 446, 38, 0, '2018-12-18 09:03:01', '2018-12-18 09:03:02'),
(97854, 114, '310', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97855, 115, '315', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97856, 116, '320', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97857, 117, '324', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97858, 118, '328', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97859, 119, '331', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97860, 120, '337', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97861, 121, '338', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97862, 122, '345', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97863, 123, '348', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97864, 124, '350', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97865, 125, '355', 480, 38, 2, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97866, 126, '360', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97867, 127, '362', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97868, 128, '368', 480, 38, 0, '2018-12-18 09:03:26', '2018-12-18 09:03:26'),
(97931, 114, '312', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97932, 115, '314', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97933, 116, '320', 445, 38, 2, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97934, 117, '324', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97935, 118, '328', 445, 38, 2, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97936, 119, '332', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97937, 120, '335', 445, 38, 2, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97938, 121, '339', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97939, 122, '345', 445, 38, 0, '2018-12-18 09:03:39', '2018-12-18 09:03:40'),
(97940, 123, '348', 445, 38, 2, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(97941, 124, '350', 445, 38, 2, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(97942, 125, '354', 445, 38, 0, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(97943, 126, '361', 445, 38, 0, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(97944, 127, '362', 445, 38, 0, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(97945, 128, '368', 445, 38, 0, '2018-12-18 09:03:40', '2018-12-18 09:03:40'),
(98257, 114, '310', 443, 38, 2, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98259, 115, '316', 443, 38, 0, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98261, 116, '320', 443, 38, 2, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98264, 117, '324', 443, 38, 0, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98267, 118, '326', 443, 38, 0, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98269, 119, '330', 443, 38, 2, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98271, 120, '335', 443, 38, 2, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98273, 121, '339', 443, 38, 0, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98275, 122, '342', 443, 38, 0, '2018-12-18 09:04:49', '2018-12-18 09:04:50'),
(98277, 123, '348', 443, 38, 2, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98279, 124, '351', 443, 38, 0, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98281, 125, '354', 443, 38, 0, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98283, 126, '360', 443, 38, 0, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98285, 127, '364', 443, 38, 2, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98287, 128, '368', 443, 38, 0, '2018-12-18 09:04:50', '2018-12-18 09:04:50'),
(98538, 114, '310', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98539, 115, '315', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98540, 116, '320', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98541, 117, '323', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98542, 118, '326', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98543, 119, '332', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98544, 120, '335', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98545, 121, '339', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98546, 122, '344', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98547, 123, '348', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98548, 124, '351', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98549, 125, '354', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:33'),
(98550, 126, '359', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:34'),
(98551, 127, '363', 457, 38, 0, '2018-12-18 09:05:33', '2018-12-18 09:05:34'),
(98552, 128, '367', 457, 38, 2, '2018-12-18 09:05:33', '2018-12-18 09:05:34'),
(98624, 114, '310', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:46'),
(98625, 115, '315', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:46'),
(98626, 116, '320', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:46'),
(98627, 117, '323', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:46'),
(98628, 118, '328', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98629, 119, '331', 489, 38, 0, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98630, 120, '335', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98631, 121, '338', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98632, 122, '343', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98633, 123, '348', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98634, 124, '351', 489, 38, 0, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98635, 125, '354', 489, 38, 0, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98636, 126, '358', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98637, 127, '364', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98638, 128, '367', 489, 38, 2, '2018-12-18 09:05:46', '2018-12-18 09:05:47'),
(98675, 114, '310', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98676, 115, '315', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98677, 116, '318', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98678, 117, '324', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98679, 118, '328', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98680, 119, '331', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98681, 120, '334', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98682, 121, '339', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98683, 122, '342', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98684, 123, '348', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98685, 124, '351', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98686, 125, '355', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98687, 126, '358', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98688, 127, '364', 430, 38, 2, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98689, 128, '368', 430, 38, 0, '2018-12-18 09:05:57', '2018-12-18 09:05:58'),
(98751, 114, '312', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98752, 115, '316', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98753, 116, '319', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98754, 117, '324', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98755, 118, '326', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98756, 119, '331', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98757, 120, '335', 463, 38, 2, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98758, 121, '338', 463, 38, 2, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98759, 122, '344', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98760, 123, '349', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98761, 124, '352', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98762, 125, '354', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98763, 126, '360', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98764, 127, '363', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98765, 128, '368', 463, 38, 0, '2018-12-18 09:06:13', '2018-12-18 09:06:13'),
(98851, 114, '310', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98852, 115, '315', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98853, 116, '320', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98854, 117, '323', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98855, 118, '326', 500, 38, 0, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98856, 119, '331', 500, 38, 0, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98857, 120, '335', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98858, 121, '338', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98859, 122, '345', 500, 38, 0, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98860, 123, '348', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98861, 124, '350', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98862, 125, '355', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98863, 126, '358', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98864, 127, '364', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(98865, 128, '367', 500, 38, 2, '2018-12-18 09:06:21', '2018-12-18 09:06:21'),
(99310, 114, '310', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99311, 115, '315', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99312, 116, '320', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99313, 117, '323', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99314, 118, '328', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99315, 119, '330', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99316, 120, '335', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99317, 121, '338', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99318, 122, '343', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99319, 123, '348', 459, 38, 2, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99320, 124, '351', 459, 38, 0, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99321, 125, '354', 459, 38, 0, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99322, 126, '359', 459, 38, 0, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99323, 127, '363', 459, 38, 0, '2018-12-18 09:07:18', '2018-12-18 09:07:19'),
(99324, 128, '368', 459, 38, 0, '2018-12-18 09:07:18', '2018-12-18 09:07:19');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(99429, 114, '310', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99430, 115, '315', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99431, 116, '320', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99432, 117, '323', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99433, 118, '326', 491, 38, 0, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99434, 119, '330', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99435, 120, '335', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99436, 121, '339', 491, 38, 0, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99437, 122, '343', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99438, 123, '348', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99439, 124, '350', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99440, 125, '354', 491, 38, 0, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99441, 126, '360', 491, 38, 0, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99442, 127, '364', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99443, 128, '367', 491, 38, 2, '2018-12-18 09:07:27', '2018-12-18 09:07:27'),
(99587, 114, '310', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99588, 115, '315', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99589, 116, '318', 460, 38, 0, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99590, 117, '323', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99591, 118, '328', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99592, 119, '331', 460, 38, 0, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99593, 120, '337', 460, 38, 0, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99594, 121, '338', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99595, 122, '345', 460, 38, 0, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99596, 123, '348', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99597, 124, '350', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99598, 125, '355', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99599, 126, '361', 460, 38, 0, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99600, 127, '364', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99601, 128, '367', 460, 38, 2, '2018-12-18 09:07:56', '2018-12-18 09:07:56'),
(99650, 114, '310', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:08'),
(99651, 115, '315', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:08'),
(99652, 116, '320', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99653, 117, '323', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99654, 118, '328', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99655, 119, '331', 462, 38, 0, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99656, 120, '335', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99657, 121, '338', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99658, 122, '343', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99659, 123, '348', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99660, 124, '351', 462, 38, 0, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99661, 125, '354', 462, 38, 0, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99662, 126, '358', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99663, 127, '364', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99664, 128, '367', 462, 38, 2, '2018-12-18 09:08:08', '2018-12-18 09:08:09'),
(99749, 114, '310', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99750, 115, '315', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99751, 116, '320', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99752, 117, '323', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99753, 118, '326', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99754, 119, '330', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99755, 120, '335', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99756, 121, '338', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99757, 122, '343', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99758, 123, '348', 486, 38, 2, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99759, 124, '351', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99760, 125, '356', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99761, 126, '359', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99762, 127, '363', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99763, 128, '368', 486, 38, 0, '2018-12-18 09:08:28', '2018-12-18 09:08:28'),
(99772, 114, '310', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99773, 115, '315', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99774, 116, '319', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99775, 117, '323', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99776, 118, '326', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99777, 119, '332', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99778, 120, '335', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99779, 121, '338', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99780, 122, '344', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99781, 123, '347', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99782, 124, '350', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99783, 125, '355', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99784, 126, '359', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99785, 127, '364', 447, 38, 2, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99786, 128, '368', 447, 38, 0, '2018-12-18 09:08:31', '2018-12-18 09:08:32'),
(99802, 114, '310', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99803, 115, '315', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99804, 116, '320', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99805, 117, '323', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99806, 118, '328', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99807, 119, '330', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99808, 120, '335', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99809, 121, '338', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99810, 122, '343', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99811, 123, '348', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99812, 124, '350', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99813, 125, '355', 495, 38, 2, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99814, 126, '360', 495, 38, 0, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99815, 127, '363', 495, 38, 0, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99816, 128, '368', 495, 38, 0, '2018-12-18 09:08:36', '2018-12-18 09:08:36'),
(99892, 114, '310', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99893, 115, '315', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99894, 116, '320', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99895, 117, '323', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99896, 118, '328', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99897, 119, '330', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99898, 120, '335', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99899, 121, '338', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99900, 122, '343', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:55'),
(99901, 123, '348', 499, 38, 2, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(99902, 124, '351', 499, 38, 0, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(99903, 125, '354', 499, 38, 0, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(99904, 126, '359', 499, 38, 0, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(99905, 127, '363', 499, 38, 0, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(99906, 128, '368', 499, 38, 0, '2018-12-18 09:08:55', '2018-12-18 09:08:56'),
(100093, 114, '310', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:43'),
(100094, 115, '315', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:43'),
(100095, 116, '320', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:43'),
(100096, 117, '323', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:43'),
(100097, 118, '328', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:43'),
(100098, 119, '331', 437, 38, 0, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100099, 120, '335', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100100, 121, '339', 437, 38, 0, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100101, 122, '343', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100102, 123, '347', 437, 38, 0, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100103, 124, '350', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100104, 125, '354', 437, 38, 0, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100105, 126, '359', 437, 38, 0, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100106, 127, '364', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100107, 128, '367', 437, 38, 2, '2018-12-18 09:09:43', '2018-12-18 09:09:44'),
(100313, 114, '310', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100314, 115, '314', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100315, 116, '318', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100316, 117, '324', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100317, 118, '326', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100318, 119, '330', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100319, 120, '335', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100320, 121, '338', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100321, 122, '343', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100322, 123, '347', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100323, 124, '350', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100324, 125, '354', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100325, 126, '359', 439, 38, 0, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100326, 127, '364', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100327, 128, '367', 439, 38, 2, '2018-12-18 09:10:16', '2018-12-18 09:10:16'),
(100524, 114, '310', 493, 38, 2, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100525, 115, '314', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100526, 116, '319', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100527, 117, '324', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100528, 118, '326', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100529, 119, '330', 493, 38, 2, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100530, 120, '335', 493, 38, 2, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100531, 121, '338', 493, 38, 2, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100532, 122, '342', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100533, 123, '347', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100534, 124, '350', 493, 38, 2, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100535, 125, '354', 493, 38, 0, '2018-12-18 09:10:42', '2018-12-18 09:10:43'),
(100536, 126, '358', 493, 38, 2, '2018-12-18 09:10:43', '2018-12-18 09:10:43'),
(100537, 127, '364', 493, 38, 2, '2018-12-18 09:10:43', '2018-12-18 09:10:43'),
(100538, 128, '367', 493, 38, 2, '2018-12-18 09:10:43', '2018-12-18 09:10:43'),
(100576, 114, '312', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100577, 115, '314', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100578, 116, '318', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100579, 117, '324', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100580, 118, '326', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100581, 119, '330', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100582, 120, '335', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100583, 121, '338', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100584, 122, '344', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100585, 123, '348', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100586, 124, '350', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100587, 125, '355', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100588, 126, '358', 451, 38, 2, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100589, 127, '363', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100590, 128, '366', 451, 38, 0, '2018-12-18 09:10:58', '2018-12-18 09:10:58'),
(100615, 114, '310', 496, 38, 2, '2018-12-18 09:11:00', '2018-12-18 09:11:01'),
(100616, 115, '316', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100617, 116, '320', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100618, 117, '323', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100619, 118, '329', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100620, 119, '330', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100621, 120, '337', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100622, 121, '338', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100623, 122, '345', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100624, 123, '348', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100625, 124, '350', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100626, 125, '354', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100627, 126, '358', 496, 38, 2, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100628, 127, '362', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100629, 128, '368', 496, 38, 0, '2018-12-18 09:11:01', '2018-12-18 09:11:01'),
(100644, 114, '310', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100645, 115, '314', 479, 38, 0, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100646, 116, '318', 479, 38, 0, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100647, 117, '324', 479, 38, 0, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100648, 118, '328', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100649, 119, '330', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100650, 120, '335', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100651, 121, '338', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100652, 122, '343', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100654, 123, '348', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100656, 124, '350', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100658, 125, '356', 479, 38, 0, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100660, 126, '359', 479, 38, 0, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100662, 127, '364', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100664, 128, '367', 479, 38, 2, '2018-12-18 09:11:06', '2018-12-18 09:11:07'),
(100681, 114, '310', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100682, 115, '316', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100683, 116, '320', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100684, 117, '323', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100685, 118, '326', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100686, 119, '332', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100687, 120, '335', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100688, 121, '338', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100689, 122, '345', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100690, 123, '348', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100691, 124, '350', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100692, 125, '355', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100693, 126, '358', 474, 38, 2, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100694, 127, '365', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100695, 128, '366', 474, 38, 0, '2018-12-18 09:11:13', '2018-12-18 09:11:13'),
(100996, 114, '312', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(100997, 115, '315', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(100998, 116, '320', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(100999, 117, '322', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101000, 118, '327', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101001, 119, '331', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101002, 120, '336', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101003, 121, '340', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101004, 122, '343', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101005, 123, '348', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101006, 124, '350', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101007, 125, '355', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101008, 126, '358', 450, 38, 2, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101009, 127, '365', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101010, 128, '368', 450, 38, 0, '2018-12-18 09:12:02', '2018-12-18 09:12:03'),
(101145, 114, '312', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101146, 115, '315', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101147, 116, '318', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101148, 117, '323', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101149, 118, '326', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101150, 119, '331', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101151, 120, '335', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101152, 121, '339', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101153, 122, '344', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101154, 123, '348', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101155, 124, '350', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101156, 125, '355', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101157, 126, '360', 470, 38, 0, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101158, 127, '364', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101159, 128, '367', 470, 38, 2, '2018-12-18 09:12:41', '2018-12-18 09:12:42'),
(101160, 114, '310', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101161, 115, '315', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101162, 116, '318', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101163, 117, '323', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101164, 118, '326', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101165, 119, '332', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101166, 120, '335', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101167, 121, '338', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101168, 122, '344', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101169, 123, '348', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101170, 124, '352', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101171, 125, '354', 442, 38, 0, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101172, 126, '358', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101173, 127, '364', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101174, 128, '367', 442, 38, 2, '2018-12-18 09:12:42', '2018-12-18 09:12:43'),
(101327, 114, '310', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101328, 115, '315', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101329, 116, '320', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101330, 117, '323', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101331, 118, '328', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101332, 119, '331', 490, 38, 0, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101333, 120, '335', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101334, 121, '338', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101335, 122, '342', 490, 38, 0, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101336, 123, '348', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101337, 124, '350', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101338, 125, '355', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101339, 126, '358', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101340, 127, '364', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101341, 128, '367', 490, 38, 2, '2018-12-18 09:13:13', '2018-12-18 09:13:13'),
(101443, 114, '310', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101444, 115, '315', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101445, 116, '319', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101446, 117, '323', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101447, 118, '326', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101448, 119, '332', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101449, 120, '335', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101450, 121, '338', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101451, 122, '344', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101452, 123, '348', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101453, 124, '352', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101454, 125, '355', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101455, 126, '358', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101456, 127, '363', 454, 38, 0, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101457, 128, '367', 454, 38, 2, '2018-12-18 09:13:28', '2018-12-18 09:13:29'),
(101600, 114, '310', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101601, 115, '315', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101602, 116, '320', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101603, 117, '323', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101604, 118, '326', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101605, 119, '332', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101606, 120, '335', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101607, 121, '339', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101608, 122, '343', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101609, 123, '348', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101610, 124, '350', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101611, 125, '354', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101612, 126, '360', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101613, 127, '362', 468, 38, 0, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101614, 128, '367', 468, 38, 2, '2018-12-18 09:13:51', '2018-12-18 09:13:52'),
(101618, 114, '310', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101620, 115, '315', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101622, 116, '320', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101624, 117, '323', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101626, 118, '328', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101628, 119, '331', 497, 38, 0, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101630, 120, '335', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101632, 121, '338', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101634, 122, '343', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101636, 123, '348', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101638, 124, '350', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101639, 125, '354', 497, 38, 0, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101640, 126, '358', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101641, 127, '362', 497, 38, 0, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101642, 128, '367', 497, 38, 2, '2018-12-18 09:13:53', '2018-12-18 09:13:53'),
(101789, 114, '310', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101790, 115, '315', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101791, 116, '318', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101792, 117, '324', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101793, 118, '328', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101794, 119, '330', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101795, 120, '335', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101796, 121, '338', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101797, 122, '343', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101798, 123, '348', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101799, 124, '350', 494, 38, 2, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101800, 125, '354', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101801, 126, '360', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101802, 127, '362', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101803, 128, '368', 494, 38, 0, '2018-12-18 09:14:47', '2018-12-18 09:14:47'),
(101921, 114, '311', 431, 38, 0, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101922, 115, '315', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101923, 116, '320', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101924, 117, '323', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101925, 118, '326', 431, 38, 0, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101926, 119, '331', 431, 38, 0, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101927, 120, '335', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101928, 121, '339', 431, 38, 0, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101929, 122, '343', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101930, 123, '348', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101931, 124, '350', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101932, 125, '355', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101933, 126, '359', 431, 38, 0, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101934, 127, '364', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(101935, 128, '367', 431, 38, 2, '2018-12-18 09:15:21', '2018-12-18 09:15:21'),
(102192, 114, '310', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102194, 115, '315', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102195, 116, '320', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102196, 117, '323', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102197, 118, '326', 433, 38, 0, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102198, 119, '332', 433, 38, 0, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102199, 120, '335', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102200, 121, '338', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102201, 122, '343', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102202, 123, '348', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102203, 124, '350', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102204, 125, '355', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102205, 126, '359', 433, 38, 0, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102206, 127, '364', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102207, 128, '367', 433, 38, 2, '2018-12-18 09:16:52', '2018-12-18 09:16:53'),
(102208, 114, '310', 448, 38, 2, '2018-12-18 09:17:02', '2018-12-18 09:17:03'),
(102209, 115, '315', 448, 38, 2, '2018-12-18 09:17:02', '2018-12-18 09:17:03'),
(102210, 116, '320', 448, 38, 2, '2018-12-18 09:17:02', '2018-12-18 09:17:03'),
(102211, 117, '323', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102212, 118, '328', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102213, 119, '331', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102214, 120, '335', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102215, 121, '339', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102216, 122, '343', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102217, 123, '348', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102218, 124, '350', 448, 38, 2, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102219, 125, '357', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102220, 126, '360', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102221, 127, '363', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102222, 128, '368', 448, 38, 0, '2018-12-18 09:17:03', '2018-12-18 09:17:03'),
(102514, 114, '310', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102515, 115, '315', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102516, 116, '318', 485, 38, 0, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102517, 117, '323', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102518, 118, '326', 485, 38, 0, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102519, 119, '331', 485, 38, 0, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102520, 120, '335', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102521, 121, '338', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102522, 122, '343', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102523, 123, '348', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102524, 124, '350', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102525, 125, '355', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102526, 126, '358', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102527, 127, '364', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102528, 128, '367', 485, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102529, 114, '310', 456, 38, 2, '2018-12-18 09:17:51', '2018-12-18 09:17:52'),
(102530, 115, '315', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102531, 116, '318', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102532, 117, '324', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102533, 118, '328', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102534, 119, '330', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102535, 120, '335', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102536, 121, '338', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102537, 122, '344', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102538, 123, '348', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102539, 124, '351', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102540, 125, '354', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102541, 126, '359', 456, 38, 0, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102542, 127, '364', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102543, 128, '367', 456, 38, 2, '2018-12-18 09:17:52', '2018-12-18 09:17:52'),
(102607, 114, '310', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102608, 115, '315', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102609, 116, '318', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102610, 117, '322', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102611, 118, '326', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102612, 119, '331', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102613, 120, '335', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102614, 121, '339', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102615, 122, '343', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102616, 123, '348', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102617, 124, '350', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102618, 125, '355', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102619, 126, '360', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102620, 127, '364', 452, 38, 2, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102621, 128, '368', 452, 38, 0, '2018-12-18 09:18:08', '2018-12-18 09:18:08'),
(102680, 114, '310', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102681, 115, '315', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102682, 116, '319', 440, 38, 0, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102683, 117, '324', 440, 38, 0, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102684, 118, '328', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102685, 119, '331', 440, 38, 0, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102686, 120, '335', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102687, 121, '338', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102688, 122, '344', 440, 38, 0, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102689, 123, '348', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102690, 124, '350', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102691, 125, '355', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102692, 126, '360', 440, 38, 0, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102693, 127, '364', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102694, 128, '367', 440, 38, 2, '2018-12-18 09:18:42', '2018-12-18 09:18:42'),
(102813, 114, '310', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102814, 115, '315', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102815, 116, '320', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102816, 117, '324', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102817, 118, '328', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102818, 119, '330', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102819, 120, '335', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102820, 121, '338', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102821, 122, '342', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102822, 123, '347', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102823, 124, '350', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102824, 125, '354', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102825, 126, '359', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102826, 127, '362', 498, 38, 0, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102827, 128, '367', 498, 38, 2, '2018-12-18 09:19:34', '2018-12-18 09:19:34'),
(102828, 114, '310', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102829, 115, '315', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102830, 116, '319', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102831, 117, '323', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102832, 118, '326', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102833, 119, '331', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102834, 120, '335', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102835, 121, '339', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102836, 122, '344', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102837, 123, '348', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102838, 124, '350', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102839, 125, '355', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102840, 126, '359', 435, 38, 0, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102841, 127, '364', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102842, 128, '367', 435, 38, 2, '2018-12-18 09:19:40', '2018-12-18 09:19:40'),
(102843, 114, '310', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102844, 115, '314', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102845, 116, '320', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102846, 117, '324', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102847, 118, '327', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102848, 119, '332', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102849, 120, '335', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102850, 121, '338', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102851, 122, '343', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:47'),
(102852, 123, '348', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102853, 124, '351', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102854, 125, '355', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102855, 126, '358', 471, 38, 2, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102856, 127, '363', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102857, 128, '368', 471, 38, 0, '2018-12-18 09:19:47', '2018-12-18 09:19:48'),
(102859, 114, '310', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102860, 115, '314', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102861, 116, '320', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102862, 117, '324', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102863, 118, '327', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102864, 119, '332', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102865, 120, '335', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102866, 121, '338', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102867, 122, '343', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102868, 123, '348', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102869, 124, '351', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:48'),
(102870, 125, '355', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:49'),
(102871, 126, '358', 472, 38, 2, '2018-12-18 09:19:48', '2018-12-18 09:19:49'),
(102872, 127, '363', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:49'),
(102873, 128, '368', 472, 38, 0, '2018-12-18 09:19:48', '2018-12-18 09:19:49'),
(102932, 114, '310', 475, 38, 2, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102933, 115, '315', 475, 38, 2, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102934, 116, '318', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102935, 117, '323', 475, 38, 2, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102936, 118, '327', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102937, 119, '331', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102938, 120, '334', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102939, 121, '338', 475, 38, 2, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102940, 122, '345', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102941, 123, '347', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102942, 124, '350', 475, 38, 2, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102943, 125, '354', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102944, 126, '360', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102945, 127, '362', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(102946, 128, '366', 475, 38, 0, '2018-12-18 09:20:05', '2018-12-18 09:20:05'),
(103005, 114, '310', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103006, 115, '315', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103007, 116, '319', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103008, 117, '323', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103009, 118, '327', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103010, 119, '331', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103011, 120, '335', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103012, 121, '339', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103013, 122, '344', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103014, 123, '348', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103015, 124, '350', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103016, 114, '310', 455, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103017, 125, '355', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103018, 115, '315', 455, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103019, 126, '359', 424, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103020, 116, '318', 455, 38, 0, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103021, 127, '364', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103022, 117, '323', 455, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103023, 128, '367', 424, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103024, 118, '328', 455, 38, 2, '2018-12-18 09:20:35', '2018-12-18 09:20:36'),
(103025, 119, '331', 455, 38, 0, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103026, 120, '335', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103027, 121, '338', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103028, 122, '343', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103029, 123, '348', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103030, 124, '350', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103031, 125, '355', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103032, 126, '358', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103033, 127, '364', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103034, 128, '367', 455, 38, 2, '2018-12-18 09:20:36', '2018-12-18 09:20:36'),
(103113, 114, '310', 467, 38, 2, '2018-12-18 09:21:03', '2018-12-18 09:21:04'),
(103114, 115, '314', 467, 38, 0, '2018-12-18 09:21:03', '2018-12-18 09:21:04'),
(103115, 116, '320', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103116, 117, '324', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103117, 118, '327', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103118, 119, '332', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103119, 120, '335', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103120, 121, '338', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103121, 122, '343', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103122, 123, '348', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103123, 124, '351', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103124, 125, '355', 467, 38, 2, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103125, 126, '360', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103126, 127, '363', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103127, 128, '368', 467, 38, 0, '2018-12-18 09:21:04', '2018-12-18 09:21:04'),
(103159, 114, '310', 426, 38, 2, '2018-12-18 09:21:13', '2018-12-18 09:21:14'),
(103160, 115, '315', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103161, 116, '319', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103162, 117, '324', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103163, 118, '326', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103164, 119, '330', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103165, 120, '335', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103166, 121, '339', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103167, 122, '342', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103168, 123, '347', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103169, 124, '350', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103170, 125, '355', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103171, 126, '360', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103172, 127, '362', 426, 38, 0, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103173, 128, '367', 426, 38, 2, '2018-12-18 09:21:14', '2018-12-18 09:21:14'),
(103186, 114, '310', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103187, 115, '315', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103188, 116, '320', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103189, 117, '322', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103190, 118, '327', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103191, 119, '331', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103192, 120, '335', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103193, 121, '338', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103194, 122, '342', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103195, 123, '347', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103196, 124, '350', 449, 38, 2, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103197, 125, '354', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103198, 126, '360', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103199, 127, '363', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103200, 128, '368', 449, 38, 0, '2018-12-18 09:21:25', '2018-12-18 09:21:25'),
(103201, 114, '310', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103202, 115, '315', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103203, 116, '319', 444, 38, 0, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103204, 117, '323', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103205, 118, '326', 444, 38, 0, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103206, 119, '330', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103207, 120, '335', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103208, 121, '338', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103209, 122, '343', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103210, 123, '348', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103211, 124, '350', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103212, 125, '356', 444, 38, 0, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103213, 126, '360', 444, 38, 0, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103214, 127, '364', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103215, 128, '367', 444, 38, 2, '2018-12-18 09:21:28', '2018-12-18 09:21:29'),
(103249, 114, '310', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103250, 115, '315', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103251, 116, '320', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103252, 117, '323', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103253, 118, '326', 453, 38, 0, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103254, 119, '330', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103255, 120, '335', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103256, 121, '338', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103257, 122, '343', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103258, 123, '349', 453, 38, 0, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103259, 124, '350', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103260, 125, '356', 453, 38, 0, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103261, 126, '358', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103263, 127, '364', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103265, 128, '367', 453, 38, 2, '2018-12-18 09:21:56', '2018-12-18 09:21:56'),
(103341, 114, '310', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103342, 115, '315', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103343, 116, '319', 477, 38, 0, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103344, 117, '323', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103345, 118, '328', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103346, 119, '330', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103347, 120, '335', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103348, 121, '338', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103349, 122, '343', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103350, 123, '348', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103351, 124, '350', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103352, 125, '354', 477, 38, 0, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103353, 126, '358', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103354, 127, '364', 477, 38, 2, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103355, 128, '366', 477, 38, 0, '2018-12-18 09:22:21', '2018-12-18 09:22:21'),
(103467, 114, '310', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103468, 115, '315', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103469, 116, '320', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103470, 117, '324', 434, 38, 0, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103471, 118, '328', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103472, 119, '331', 434, 38, 0, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103473, 120, '335', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:52'),
(103474, 121, '338', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103475, 122, '342', 434, 38, 0, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103476, 123, '348', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(103477, 124, '350', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103478, 125, '355', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103479, 126, '360', 434, 38, 0, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103480, 127, '364', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103481, 128, '367', 434, 38, 2, '2018-12-18 09:22:52', '2018-12-18 09:22:53'),
(103502, 114, '310', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103503, 115, '315', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103504, 116, '320', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103505, 117, '322', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103506, 118, '327', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103507, 119, '331', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103508, 120, '336', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103509, 121, '338', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103510, 122, '344', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103511, 123, '348', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103512, 124, '350', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103513, 125, '355', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103514, 126, '359', 501, 38, 0, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103515, 127, '364', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103516, 128, '367', 501, 38, 2, '2018-12-18 09:23:26', '2018-12-18 09:23:26'),
(103566, 114, '310', 436, 38, 2, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103567, 115, '315', 436, 38, 2, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103568, 116, '318', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103569, 117, '323', 436, 38, 2, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103570, 118, '326', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103571, 119, '331', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103572, 120, '335', 436, 38, 2, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103573, 121, '338', 436, 38, 2, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103574, 122, '342', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103575, 123, '346', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103576, 124, '352', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103577, 125, '354', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103578, 126, '360', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103579, 127, '362', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103580, 128, '368', 436, 38, 0, '2018-12-18 09:23:41', '2018-12-18 09:23:42'),
(103635, 114, '311', 427, 38, 0, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103636, 115, '315', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103637, 116, '320', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103638, 117, '323', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103639, 118, '328', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103640, 119, '331', 427, 38, 0, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103641, 120, '335', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103642, 121, '338', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103643, 122, '344', 427, 38, 0, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103644, 123, '348', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103645, 124, '350', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103646, 125, '355', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103647, 126, '358', 427, 38, 2, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103648, 127, '363', 427, 38, 0, '2018-12-18 09:24:06', '2018-12-18 09:24:07'),
(103649, 128, '367', 427, 38, 2, '2018-12-18 09:24:07', '2018-12-18 09:24:07'),
(103710, 114, '311', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103711, 115, '316', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103712, 116, '319', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103713, 117, '324', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103714, 118, '326', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103715, 119, '331', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103716, 120, '336', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103717, 121, '340', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103718, 122, '343', 484, 38, 2, '2018-12-18 09:24:49', '2018-12-18 09:24:49'),
(103719, 123, '349', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103720, 124, '352', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103721, 125, '355', 484, 38, 2, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103722, 126, '359', 484, 38, 0, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103723, 127, '364', 484, 38, 2, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103724, 128, '367', 484, 38, 2, '2018-12-18 09:24:49', '2018-12-18 09:24:50'),
(103808, 114, '310', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103809, 115, '315', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103810, 116, '320', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103811, 117, '323', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103812, 118, '326', 441, 38, 0, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103813, 119, '331', 441, 38, 0, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103814, 120, '335', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103815, 121, '338', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103816, 122, '343', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103817, 123, '348', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103818, 124, '350', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103819, 125, '356', 441, 38, 0, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103820, 126, '359', 441, 38, 0, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103821, 127, '364', 441, 38, 2, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103822, 128, '368', 441, 38, 0, '2018-12-18 09:26:06', '2018-12-18 09:26:07'),
(103941, 114, '312', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103942, 115, '314', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103943, 116, '319', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103944, 117, '323', 425, 38, 2, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103945, 118, '326', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103946, 119, '331', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103947, 120, '336', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103948, 121, '339', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103949, 122, '343', 425, 38, 2, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103950, 123, '348', 425, 38, 2, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103951, 124, '350', 425, 38, 2, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103952, 125, '354', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103953, 126, '359', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103954, 127, '362', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103955, 128, '366', 425, 38, 0, '2018-12-18 09:29:23', '2018-12-18 09:29:24'),
(103968, 114, '310', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103969, 115, '315', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103970, 116, '320', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103971, 117, '324', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103972, 118, '326', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103973, 119, '331', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103974, 120, '335', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103975, 121, '338', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103976, 122, '343', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103977, 123, '349', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103978, 124, '350', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103979, 125, '355', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103980, 126, '358', 458, 38, 2, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103981, 127, '362', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(103982, 128, '368', 458, 38, 0, '2018-12-18 09:30:10', '2018-12-18 09:30:10'),
(104120, 114, '310', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104121, 115, '314', 432, 38, 0, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104122, 116, '318', 432, 38, 0, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104123, 117, '323', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104124, 118, '328', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104125, 119, '330', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104126, 120, '335', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104127, 121, '338', 432, 38, 2, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104128, 122, '344', 432, 38, 0, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104129, 123, '347', 432, 38, 0, '2018-12-18 09:39:11', '2018-12-18 09:39:12'),
(104130, 124, '350', 432, 38, 2, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(104131, 125, '355', 432, 38, 2, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(104132, 126, '358', 432, 38, 2, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(104133, 127, '362', 432, 38, 0, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(104134, 128, '366', 432, 38, 0, '2018-12-18 09:39:12', '2018-12-18 09:39:12'),
(104135, 114, '312', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104136, 115, '315', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104137, 116, '320', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104138, 117, '323', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104139, 118, '326', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104140, 119, '331', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104141, 120, '335', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104142, 121, '338', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104143, 122, '343', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104144, 123, '347', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104145, 124, '350', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:37'),
(104146, 125, '355', 492, 38, 2, '2018-12-18 09:39:37', '2018-12-18 09:39:38'),
(104147, 126, '360', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:38'),
(104148, 127, '363', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:38'),
(104149, 128, '368', 492, 38, 0, '2018-12-18 09:39:37', '2018-12-18 09:39:38'),
(104200, 139, '397', 511, 41, NULL, '2019-01-21 11:17:59', '2019-01-21 11:17:59'),
(104204, 139, '397', 519, 41, NULL, '2019-01-21 11:18:04', '2019-01-21 11:18:04'),
(104566, 139, '397', 512, 41, NULL, '2019-01-21 11:19:25', '2019-01-21 11:19:25'),
(104567, 140, '455', 512, 41, 1, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104568, 142, '412', 512, 41, 0, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104569, 145, '418', 512, 41, 0, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104570, 146, '420', 512, 41, 1, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104571, 147, '423', 512, 41, 0, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104572, 148, '424', 512, 41, 1, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104573, 149, '426', 512, 41, 0, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104574, 151, '434', 512, 41, 1, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104575, 152, '440', 512, 41, NULL, '2019-01-21 11:19:25', '2019-01-21 11:19:25'),
(104576, 154, '446', 512, 41, 1, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104577, 155, '452', 512, 41, 0, '2019-01-21 11:19:25', '2019-01-21 13:28:10'),
(104578, 156, '463', 512, 41, NULL, '2019-01-21 11:19:25', '2019-01-21 11:19:25'),
(104643, 139, '397', 529, 41, NULL, '2019-01-21 11:19:30', '2019-01-21 11:19:30'),
(104644, 140, '455', 529, 41, 1, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104645, 142, '412', 529, 41, 0, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104646, 145, '418', 529, 41, 0, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104647, 146, '421', 529, 41, 0, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104648, 147, '423', 529, 41, 0, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104649, 148, '424', 529, 41, 1, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104650, 151, '436', 529, 41, 0, '2019-01-21 11:19:30', '2019-01-21 13:28:14'),
(104651, 152, '440', 529, 41, NULL, '2019-01-21 11:19:30', '2019-01-21 11:19:30'),
(104652, 154, '446', 529, 41, 1, '2019-01-21 11:19:30', '2019-01-21 13:28:15'),
(104653, 155, '451', 529, 41, 1, '2019-01-21 11:19:30', '2019-01-21 13:28:15'),
(104654, 156, '463', 529, 41, NULL, '2019-01-21 11:19:30', '2019-01-21 11:19:30'),
(104958, 139, '397', 543, 41, NULL, '2019-01-21 11:20:16', '2019-01-21 11:20:16'),
(104959, 140, '455', 543, 41, NULL, '2019-01-21 11:20:16', '2019-01-21 11:20:16'),
(104960, 151, '434', 543, 41, NULL, '2019-01-21 11:20:16', '2019-01-21 11:20:16'),
(104961, 152, '440', 543, 41, NULL, '2019-01-21 11:20:16', '2019-01-21 11:20:16'),
(105380, 139, '397', 506, 41, NULL, '2019-01-21 11:20:44', '2019-01-21 11:20:44'),
(105381, 140, '455', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105382, 142, '413', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105383, 145, '419', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105384, 146, '420', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105385, 147, '422', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105386, 148, '424', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105387, 149, '427', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105388, 150, '428', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105389, 152, '440', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105390, 154, '446', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105391, 155, '450', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105392, 156, '463', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105393, 158, '471', 506, 41, NULL, '2019-01-21 11:20:45', '2019-01-21 11:20:45'),
(105462, 142, '413', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105464, 145, '419', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105466, 146, '420', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105468, 147, '422', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105469, 148, '424', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105470, 149, '426', 520, 41, NULL, '2019-01-21 11:20:47', '2019-01-21 11:20:47'),
(105526, 139, '397', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105527, 140, '455', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105528, 142, '413', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105529, 145, '419', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105530, 146, '420', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105532, 147, '422', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105534, 148, '424', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105536, 154, '446', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105538, 155, '452', 527, 41, NULL, '2019-01-21 11:20:51', '2019-01-21 11:20:51'),
(105581, 139, '397', 510, 41, NULL, '2019-01-21 11:20:54', '2019-01-21 11:20:54'),
(105582, 140, '455', 510, 41, NULL, '2019-01-21 11:20:54', '2019-01-21 11:20:54'),
(105703, 139, '397', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105704, 140, '455', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105705, 142, '413', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105706, 145, '419', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105707, 146, '420', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105708, 147, '422', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105709, 148, '424', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105710, 149, '427', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105711, 150, '428', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105712, 151, '434', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105713, 152, '440', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105714, 154, '446', 503, 41, NULL, '2019-01-21 11:20:58', '2019-01-21 11:20:58'),
(105715, 156, '463', 503, 41, NULL, '2019-01-21 11:20:59', '2019-01-21 11:20:59'),
(105716, 158, '470', 503, 41, NULL, '2019-01-21 11:20:59', '2019-01-21 11:20:59'),
(105728, 139, '397', 545, 41, NULL, '2019-01-21 11:21:00', '2019-01-21 11:21:00'),
(105729, 140, '455', 545, 41, NULL, '2019-01-21 11:21:00', '2019-01-21 11:21:00'),
(105730, 142, '413', 545, 41, NULL, '2019-01-21 11:21:00', '2019-01-21 11:21:00'),
(105731, 152, '440', 545, 41, NULL, '2019-01-21 11:21:01', '2019-01-21 11:21:01'),
(105898, 139, '397', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105900, 140, '455', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105902, 151, '434', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105903, 152, '440', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105904, 154, '446', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105905, 155, '452', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105906, 156, '463', 505, 41, NULL, '2019-01-21 11:21:09', '2019-01-21 11:21:09'),
(105958, 139, '397', 528, 41, NULL, '2019-01-21 11:21:12', '2019-01-21 11:21:12'),
(105960, 140, '455', 528, 41, NULL, '2019-01-21 11:21:12', '2019-01-21 11:21:12'),
(105962, 151, '434', 528, 41, NULL, '2019-01-21 11:21:12', '2019-01-21 11:21:12'),
(105965, 152, '440', 528, 41, NULL, '2019-01-21 11:21:12', '2019-01-21 11:21:12'),
(105969, 154, '446', 528, 41, NULL, '2019-01-21 11:21:12', '2019-01-21 11:21:12'),
(105998, 139, '397', 513, 41, NULL, '2019-01-21 11:21:14', '2019-01-21 11:21:14'),
(105999, 140, '455', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106000, 142, '413', 513, 41, NULL, '2019-01-21 11:21:14', '2019-01-21 11:21:14'),
(106001, 145, '419', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106002, 146, '420', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106003, 147, '422', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106004, 148, '424', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106005, 151, '434', 513, 41, 1, '2019-01-21 11:21:14', '2019-01-21 13:32:07'),
(106006, 152, '440', 513, 41, NULL, '2019-01-21 11:21:14', '2019-01-21 11:21:14'),
(106007, 156, '463', 513, 41, NULL, '2019-01-21 11:21:14', '2019-01-21 11:21:14'),
(106051, 139, '397', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106053, 140, '455', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106055, 142, '412', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106057, 145, '419', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106059, 146, '420', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106061, 151, '434', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106063, 152, '440', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106065, 154, '446', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106066, 155, '452', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106068, 156, '463', 536, 41, NULL, '2019-01-21 11:21:16', '2019-01-21 11:21:16'),
(106130, 139, '397', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106131, 140, '455', 552, 40, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106132, 140, '455', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106133, 141, '460', 552, 40, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106134, 142, '413', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106135, 144, '417', 552, 40, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106136, 145, '419', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106138, 155, '452', 552, 40, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106139, 146, '420', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106141, 157, '468', 552, 40, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106142, 147, '422', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106144, 148, '424', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106146, 149, '427', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106148, 151, '436', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106150, 152, '441', 534, 41, NULL, '2019-01-21 11:21:18', '2019-01-21 11:21:18'),
(106205, 139, '397', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106207, 142, '413', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106209, 145, '419', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106211, 146, '420', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106213, 147, '422', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106215, 148, '424', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106217, 154, '446', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106219, 155, '450', 517, 41, NULL, '2019-01-21 11:21:22', '2019-01-21 11:21:22'),
(106242, 139, '397', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106243, 140, '455', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106244, 142, '413', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106245, 145, '419', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106246, 146, '420', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106247, 147, '422', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106248, 148, '424', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106249, 149, '426', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106250, 151, '434', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106251, 152, '440', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106252, 154, '446', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106253, 156, '463', 539, 41, NULL, '2019-01-21 11:21:25', '2019-01-21 11:21:25'),
(106269, 139, '397', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106271, 140, '455', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106272, 148, '424', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106274, 151, '434', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106276, 152, '440', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106278, 154, '446', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106280, 155, '452', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106282, 156, '463', 521, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106283, 139, '397', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106285, 140, '455', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106287, 151, '434', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106289, 152, '440', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106290, 154, '446', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106291, 155, '452', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106292, 156, '463', 540, 41, NULL, '2019-01-21 11:21:26', '2019-01-21 11:21:26'),
(106310, 139, '397', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106311, 140, '455', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106312, 151, '435', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106313, 152, '440', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106314, 154, '448', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106315, 155, '452', 549, 41, NULL, '2019-01-21 11:21:27', '2019-01-21 11:21:27'),
(106383, 139, '397', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106384, 140, '455', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106385, 151, '434', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106386, 152, '440', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106387, 154, '446', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106388, 155, '450', 525, 41, NULL, '2019-01-21 11:21:32', '2019-01-21 11:21:32'),
(106451, 139, '397', 541, 41, NULL, '2019-01-21 11:21:35', '2019-01-21 11:21:35'),
(106455, 139, '397', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106456, 140, '455', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106457, 142, '413', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106458, 145, '419', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106459, 146, '420', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106460, 147, '423', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106461, 148, '424', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106462, 149, '426', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106463, 150, '428', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106464, 151, '434', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106465, 152, '440', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106466, 154, '446', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106467, 155, '452', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106468, 156, '463', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106469, 158, '470', 509, 41, NULL, '2019-01-21 11:21:36', '2019-01-21 11:21:36'),
(106512, 139, '397', 523, 41, NULL, '2019-01-21 11:21:40', '2019-01-21 11:21:40'),
(106513, 140, '455', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106514, 142, '413', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106515, 145, '419', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106516, 146, '420', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106517, 147, '422', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106518, 148, '424', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106519, 149, '427', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106520, 150, '428', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106521, 151, '434', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106522, 152, '440', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106523, 154, '446', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106524, 155, '450', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106525, 156, '463', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106526, 158, '470', 523, 41, NULL, '2019-01-21 11:21:41', '2019-01-21 11:21:41'),
(106542, 139, '397', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106543, 140, '455', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106544, 142, '413', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106545, 151, '434', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106546, 152, '440', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106547, 154, '448', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106548, 155, '450', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106549, 156, '463', 542, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106551, 139, '397', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106553, 140, '455', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106555, 142, '413', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106557, 145, '419', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106559, 146, '420', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106561, 147, '422', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106563, 148, '424', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106565, 149, '426', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106567, 150, '428', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106569, 151, '434', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106570, 152, '440', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106571, 154, '446', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106572, 155, '452', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106573, 156, '463', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106574, 158, '471', 524, 41, NULL, '2019-01-21 11:21:42', '2019-01-21 11:21:42'),
(106621, 139, '397', 537, 41, NULL, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106622, 140, '455', 537, 41, 1, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106623, 142, '412', 537, 41, 0, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106624, 151, '434', 537, 41, 1, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106625, 152, '440', 537, 41, NULL, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106626, 156, '463', 537, 41, NULL, '2019-01-21 11:21:44', '2019-01-21 11:21:44'),
(106672, 139, '397', 516, 41, NULL, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106674, 140, '455', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106676, 142, '413', 516, 41, NULL, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106678, 145, '419', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106680, 146, '420', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106682, 147, '422', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106684, 148, '424', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106686, 149, '427', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106688, 150, '428', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106690, 151, '434', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:48'),
(106692, 152, '440', 516, 41, NULL, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106694, 154, '446', 516, 41, 1, '2019-01-21 11:21:47', '2019-01-21 11:21:48'),
(106695, 155, '453', 516, 41, 0, '2019-01-21 11:21:47', '2019-01-21 11:21:48'),
(106696, 156, '463', 516, 41, NULL, '2019-01-21 11:21:47', '2019-01-21 11:21:47'),
(106697, 158, '470', 516, 41, 0, '2019-01-21 11:21:47', '2019-01-21 11:21:48'),
(106758, 139, '397', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106759, 140, '455', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106760, 142, '413', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106761, 145, '419', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106762, 146, '420', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106763, 147, '422', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106764, 148, '424', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106765, 149, '426', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106766, 150, '428', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106767, 151, '434', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106768, 152, '441', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106769, 154, '446', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106770, 155, '453', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106771, 156, '463', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106772, 158, '470', 504, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106773, 139, '397', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106774, 140, '455', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106775, 142, '412', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106776, 145, '418', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106777, 151, '434', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106778, 152, '440', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106779, 154, '446', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106780, 155, '452', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106781, 156, '463', 522, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106782, 139, '397', 550, 41, NULL, '2019-01-21 11:21:54', '2019-01-21 11:21:54'),
(106783, 140, '455', 550, 41, 1, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106784, 142, '412', 550, 41, 0, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106785, 145, '418', 550, 41, 0, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106786, 146, '420', 550, 41, 1, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106787, 147, '422', 550, 41, 1, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106788, 148, '424', 550, 41, 1, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106789, 149, '426', 550, 41, 0, '2019-01-21 11:21:54', '2019-01-21 11:21:55'),
(106790, 150, '429', 550, 41, 0, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106791, 151, '434', 550, 41, 1, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106792, 152, '440', 550, 41, NULL, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106793, 154, '447', 550, 41, 0, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106794, 155, '451', 550, 41, 1, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106795, 156, '463', 550, 41, NULL, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106796, 158, '470', 550, 41, 0, '2019-01-21 11:21:55', '2019-01-21 11:21:55'),
(106885, 139, '397', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106887, 140, '455', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106889, 142, '412', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106891, 145, '419', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106893, 151, '434', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106894, 152, '440', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106895, 154, '448', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106896, 155, '451', 548, 41, NULL, '2019-01-21 11:22:05', '2019-01-21 11:22:05'),
(106897, 156, '463', 548, 41, NULL, '2019-01-21 11:22:06', '2019-01-21 11:22:06'),
(106949, 139, '397', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106950, 140, '455', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106951, 142, '413', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106952, 145, '419', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106953, 146, '420', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106954, 147, '422', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106955, 148, '424', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106956, 149, '427', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106957, 150, '428', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106958, 151, '434', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106959, 152, '440', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106960, 154, '446', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106961, 155, '451', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106962, 156, '463', 531, 41, NULL, '2019-01-21 11:22:11', '2019-01-21 11:22:11'),
(106976, 139, '397', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106977, 140, '455', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106978, 145, '418', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106979, 146, '420', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106980, 147, '422', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106981, 148, '424', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106982, 149, '426', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106983, 150, '428', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106984, 151, '434', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106985, 152, '440', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106986, 154, '446', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106987, 155, '451', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106988, 156, '463', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(106989, 158, '471', 518, 41, NULL, '2019-01-21 11:22:14', '2019-01-21 11:22:14'),
(107070, 139, '399', 532, 41, NULL, '2019-01-21 11:22:21', '2019-01-21 11:22:21'),
(107071, 140, '456', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107072, 142, '412', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107073, 145, '419', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107074, 146, '420', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107075, 147, '422', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107076, 148, '424', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107077, 149, '426', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107078, 150, '428', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107079, 151, '435', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107080, 154, '446', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107081, 155, '452', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107082, 156, '463', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107083, 158, '471', 532, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107084, 139, '397', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107085, 140, '455', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107086, 142, '413', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107087, 145, '419', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107088, 146, '420', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107089, 147, '422', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107090, 148, '424', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107091, 149, '427', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107092, 150, '429', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107093, 151, '434', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107094, 152, '440', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107095, 154, '446', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107096, 155, '452', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107097, 156, '463', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107098, 158, '470', 515, 41, NULL, '2019-01-21 11:22:22', '2019-01-21 11:22:22'),
(107099, 139, '397', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107100, 140, '455', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107101, 142, '413', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107102, 145, '419', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107103, 146, '420', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107104, 147, '422', 535, 41, NULL, '2019-01-21 11:22:26', '2019-01-21 11:22:26'),
(107105, 148, '424', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107106, 149, '426', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107107, 150, '428', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107108, 151, '434', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107109, 152, '440', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107110, 154, '446', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107111, 155, '452', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107112, 156, '463', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107113, 158, '470', 535, 41, NULL, '2019-01-21 11:22:27', '2019-01-21 11:22:27'),
(107114, 139, '397', 530, 41, NULL, '2019-01-21 11:22:35', '2019-01-21 11:22:35'),
(107115, 140, '455', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107116, 142, '413', 530, 41, NULL, '2019-01-21 11:22:35', '2019-01-21 11:22:35'),
(107117, 145, '419', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107118, 146, '420', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107119, 147, '422', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107120, 148, '424', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107121, 149, '427', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107122, 150, '428', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107123, 151, '434', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107124, 152, '440', 530, 41, NULL, '2019-01-21 11:22:35', '2019-01-21 11:22:35'),
(107125, 154, '446', 530, 41, 1, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107126, 155, '452', 530, 41, 0, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107127, 156, '463', 530, 41, NULL, '2019-01-21 11:22:35', '2019-01-21 11:22:35'),
(107128, 158, '470', 530, 41, 0, '2019-01-21 11:22:35', '2019-01-21 11:22:36'),
(107171, 139, '397', 547, 41, NULL, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107172, 140, '455', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107173, 142, '413', 547, 41, NULL, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107174, 145, '418', 547, 41, 0, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107175, 146, '420', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107176, 147, '423', 547, 41, 0, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107177, 148, '424', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107178, 149, '427', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107179, 150, '428', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107180, 151, '434', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107181, 152, '440', 547, 41, NULL, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107182, 154, '446', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107183, 155, '453', 547, 41, 0, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107184, 156, '463', 547, 41, NULL, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107185, 158, '471', 547, 41, 1, '2019-01-21 11:23:34', '2019-01-21 11:23:34'),
(107193, 150, '428', 530, 40, 1, '2019-01-21 11:29:34', '2019-01-21 11:29:34'),
(107194, 158, '471', 530, 40, 1, '2019-01-21 11:29:34', '2019-01-21 11:29:34'),
(107195, 139, '397', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107196, 140, '455', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107197, 142, '413', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107198, 145, '419', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107199, 146, '420', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107200, 147, '422', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107201, 151, '434', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107202, 152, '440', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107203, 154, '446', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107204, 155, '450', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107205, 156, '463', 526, 41, NULL, '2019-01-21 12:37:09', '2019-01-21 12:37:09'),
(107206, 199, '561', 582, 45, NULL, '2019-02-28 09:31:08', '2019-02-28 09:31:08'),
(107207, 250, NULL, 582, 45, NULL, '2019-02-28 09:31:08', '2019-02-28 09:31:08'),
(107208, 250, NULL, 582, 45, NULL, '2019-02-28 09:31:08', '2019-02-28 09:31:08'),
(107668, 199, '560', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107669, 200, '563', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107670, 201, '564', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107671, 202, '566', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107672, 203, '568', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107673, 204, '571', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107674, 205, '572', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:44'),
(107675, 206, '575', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107676, 208, '578', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107677, 209, '581', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107678, 210, '582', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107679, 211, '585', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107680, 221, '604', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107681, 223, '609', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107682, 227, '617', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107683, 229, '620', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107684, 230, '624', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107685, 231, '628', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107686, 232, '633', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107687, 236, '649', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107688, 237, '652', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107689, 238, '657', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107690, 243, '677', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107691, 250, 'dfhsh', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107692, 250, 'rtjhr', 746, 45, 0, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107693, 260, '739', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107694, 268, '771', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(107695, 275, '799', 746, 45, 1, '2019-02-28 09:38:44', '2019-02-28 09:38:45'),
(113166, 303, '911', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113167, 304, '912', 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113168, 305, '914', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113169, 306, '916', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113170, 307, '919', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113171, 308, '920', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113172, 309, '922', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113173, 310, '924', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113174, 311, '927', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113175, 312, '929', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113176, 313, '931', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113177, 314, '933', 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113179, 326, '957', 594, 49, 1, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113181, 364, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113183, 365, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113185, 366, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113187, 367, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113189, 367, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113191, 368, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113193, 369, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113195, 370, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113197, 370, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113199, 371, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113201, 372, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113203, 373, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113205, 374, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113207, 375, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113209, 376, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113211, 376, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113213, 377, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113215, 378, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113217, 378, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113219, 379, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113221, 380, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113223, 380, NULL, 594, 49, 0, '2019-03-06 07:05:56', '2019-03-06 07:05:57'),
(113225, 381, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(113227, 382, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(113229, 382, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(113231, 383, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(113233, 384, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(113235, 385, NULL, 594, 49, 0, '2019-03-06 07:05:57', '2019-03-06 07:05:57'),
(122609, 303, '910', 573, 49, 0, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122611, 304, '913', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(122614, 305, '914', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122617, 306, '916', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122620, 307, '919', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122623, 308, '920', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122626, 309, '922', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122629, 310, '924', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122632, 311, '927', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122635, 312, '929', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122638, 313, '931', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122641, 314, '932', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122644, 315, '935', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122646, 316, '936', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122650, 317, '938', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122652, 318, '941', 573, 49, 0, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122656, 320, '943', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122659, 322, '948', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122661, 323, '950', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122665, 324, '953', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122668, 325, '954', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122670, 326, '957', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122673, 327, '958', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122676, 328, '960', 573, 49, 1, '2019-03-06 07:15:55', '2019-03-11 05:59:15'),
(122679, 329, '962', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122681, 330, '1352', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122683, 331, '967', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122685, 332, '969', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122687, 333, '971', 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122689, 334, '973', 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:15'),
(122691, 335, '974', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122693, 336, '978', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122695, 337, '982', 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122697, 338, '989', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122699, 339, '993', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122701, 340, '994', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122703, 341, '998', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122705, 342, '1005', 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122706, 343, '1006', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122707, 344, '1011', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122708, 345, '1014', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122709, 346, '1018', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122710, 347, '1024', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122711, 348, '1026', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122712, 349, '1033', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122713, 350, '1037', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122714, 351, '1040', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122715, 352, '1044', 573, 49, 1, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122716, 364, 'مفتوح ومغلق', 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122717, 365, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122718, 366, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122719, 367, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122720, 367, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122721, 368, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122722, 369, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122723, 370, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122724, 370, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122725, 371, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122726, 372, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122727, 373, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122728, 374, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122729, 375, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122730, 376, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122731, 376, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122732, 377, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122733, 378, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122734, 378, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122735, 379, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122736, 380, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122737, 380, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122738, 381, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122739, 382, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122740, 382, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122741, 383, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122742, 384, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(122743, 385, NULL, 573, 49, 0, '2019-03-06 07:15:56', '2019-03-11 05:59:16'),
(127096, 303, '911', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127097, 304, '913', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127098, 305, '915', 589, 49, 0, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127099, 306, '916', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127100, 307, '919', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127101, 308, '920', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127102, 309, '922', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127103, 310, '924', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127104, 311, '927', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127105, 312, '929', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127106, 313, '931', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127107, 314, '932', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127108, 315, '935', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127109, 316, '936', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127110, 317, '938', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127111, 318, '940', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127112, 320, '943', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127113, 322, '948', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127114, 323, '950', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127115, 324, '953', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127116, 325, '954', 589, 49, 1, '2019-03-06 07:22:59', '2019-03-06 07:23:01'),
(127117, 326, '957', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127118, 327, '958', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127119, 328, '960', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127120, 329, '962', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127121, 330, '1352', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127122, 331, '967', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127123, 332, '969', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127124, 333, '970', 589, 49, NULL, '2019-03-06 07:23:00', '2019-03-06 07:23:00'),
(127125, 334, '972', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127126, 335, '974', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127127, 336, '978', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127128, 337, '985', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127129, 338, '986', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127130, 339, '993', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127131, 340, '994', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127132, 341, '998', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127133, 342, '1002', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127134, 343, '1006', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127135, 344, '1011', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127136, 345, '1014', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127137, 346, '1018', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127138, 347, '1024', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127139, 348, '1028', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127140, 349, '1033', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127141, 350, '1036', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127142, 351, '1040', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127143, 352, '1044', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127144, 353, '1047', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127145, 354, '1052', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127146, 355, '1054', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127147, 356, '1060', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:01'),
(127148, 357, '1063', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127149, 358, '1066', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127150, 359, '1070', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127151, 360, '1074', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127152, 361, '1080', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127153, 362, '1083', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127154, 364, 'مفتوحة او مغلقه', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127155, 365, '6', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127156, 366, 'الاستقبال', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127157, 367, 'وليم مورجن', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127158, 367, '1895', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127159, 368, 'الضرب', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127160, 369, '8', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127161, 370, 'دفاعى', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127162, 370, 'هجومى', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127163, 371, 'الاعداد', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127164, 372, 'تحمل المسئولية', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127165, 373, 'الامر', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127166, 374, 'مؤدى', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127167, 375, '4', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127168, 376, 'الوقوف', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127169, 376, 'القدمين', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127170, 377, 'w', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127171, 378, '1', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127172, 378, '2', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127173, 379, 'الحوض', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127174, 380, '223', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127175, 380, '243', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127176, 381, 'المعد', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127177, 382, '9ونص', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127178, 382, '1', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127179, 383, 'الارسال', 589, 49, 1, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127180, 384, 'التعاونى', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(127181, 385, 'الارسال', 589, 49, 0, '2019-03-06 07:23:00', '2019-03-06 07:23:02'),
(144958, 303, '910', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:32'),
(144959, 304, '912', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144960, 305, '914', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144961, 306, '916', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144962, 307, '919', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144963, 308, '920', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144964, 309, '922', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144965, 310, '924', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144966, 311, '927', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144967, 312, '929', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144968, 313, '931', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144969, 314, '933', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144970, 315, '935', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144971, 316, '937', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144972, 317, '938', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144973, 318, '940', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144974, 320, '943', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144975, 322, '948', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144976, 323, '950', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144977, 324, '953', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144978, 325, '955', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144979, 326, '957', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144980, 327, '958', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144981, 328, '960', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144982, 329, '962', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144983, 330, '1352', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144984, 331, '967', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144985, 332, '969', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144986, 333, '971', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144987, 334, '972', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144988, 335, '974', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144989, 336, '978', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144990, 337, '985', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144991, 338, '989', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144992, 339, '993', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144993, 340, '997', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144994, 341, '998', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144995, 342, '1002', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144996, 343, '1008', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144997, 344, '1011', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144998, 345, '1014', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(144999, 346, '1018', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145000, 347, '1024', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145001, 348, '1026', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145002, 349, '1033', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145003, 350, '1037', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145004, 351, '1040', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145005, 352, '1044', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145006, 353, '1047', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145007, 354, '1051', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145008, 355, '1057', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145009, 356, '1058', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:33'),
(145010, 357, '1063', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145011, 358, '1069', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145012, 359, '1070', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145013, 360, '1074', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145014, 361, '1081', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145015, 362, '1083', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145016, 364, 'مجوفه', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145017, 365, '6', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145018, 366, 'القدره العضليه', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145019, 367, '1890', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145020, 367, 'ويليم مرجن', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145021, 368, NULL, 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145022, 369, '6', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145023, 370, 'دفاعي', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145024, 370, 'هجومي         ه', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145025, 371, 'الاعداد', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145026, 372, NULL, 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145027, 373, NULL, 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145028, 374, NULL, 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145029, 375, '2', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145030, 376, 'الركبتين', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145031, 376, 'الوقوف', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145032, 377, 'W', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145033, 378, '2', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145034, 378, '1', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145035, 379, 'الحوض', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145036, 380, '243', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145037, 380, '224', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145038, 381, 'المعد', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145039, 382, '1', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145040, 382, '9.5', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145041, 383, 'الارسال', 581, 49, 1, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145042, 384, 'التعاوني', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(145043, 385, 'الارسال', 581, 49, 0, '2019-03-06 07:40:32', '2019-03-06 07:40:34'),
(147957, 347, '1024', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147958, 303, '910', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147959, 348, '1029', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147960, 304, '912', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147961, 349, '1033', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147962, 305, '914', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147963, 350, '1037', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:24'),
(147964, 306, '916', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147965, 351, '1040', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147966, 307, '919', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147967, 352, '1043', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147968, 308, '920', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147969, 353, '1047', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147970, 309, '922', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147971, 354, '1052', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147972, 310, '924', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147973, 355, '1057', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147974, 311, '926', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147975, 356, '1058', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147976, 312, '928', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147977, 357, '1062', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147978, 313, '930', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147979, 358, '1066', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147980, 314, '933', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147981, 359, '1070', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147982, 315, '935', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147983, 360, '1074', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147984, 316, '937', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147985, 361, '1081', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147986, 317, '938', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147987, 362, '1083', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147988, 318, '941', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147989, 364, 'موجفه', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147990, 320, '943', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147991, 365, '3', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147992, 322, '948', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147993, 366, 'البديله', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147994, 323, '951', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147995, 367, 'وليام مرجان', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147996, 324, '952', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147997, 367, '1994', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147998, 325, '955', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(147999, 368, 'الضرب الساحق', 586, 49, 0.5, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148000, 326, '957', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148001, 369, '8', 586, 49, 0.5, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148002, 327, '958', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148003, 370, 'دفاعي', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148005, 328, '960', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148006, 370, 'هجومي', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148008, 329, '962', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148010, 371, 'المهارات الحركية', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148011, 330, '1352', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148013, 372, 'الخبرة', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148014, 331, '967', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148016, 373, 'شرح المهاره', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148018, 332, '969', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148019, 374, 'المستفبل', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148020, 333, '970', 586, 49, NULL, '2019-03-06 07:44:22', '2019-03-06 07:44:22'),
(148022, 375, '8', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148023, 334, '972', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148024, 376, 'الصحيح للمههاره', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148026, 335, '974', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148027, 376, 'الزراعين', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148029, 336, '978', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148030, 377, 'التمرير', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:25'),
(148032, 337, '984', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148034, 378, '1', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148035, 338, '986', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148036, 378, '2', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148038, 339, '990', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148039, 379, 'الكتف', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148041, 340, '994', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148042, 380, '224', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148044, 341, '998', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148045, 380, '243', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148047, 342, '1002', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148048, 381, 'المعد', 586, 49, 0.5, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148050, 343, '1006', 586, 49, 1, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148051, 382, '1', 586, 49, 0, '2019-03-06 07:44:22', '2019-03-06 07:44:26'),
(148053, 344, '1011', 586, 49, 1, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148054, 382, '9.50', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148056, 345, '1014', 586, 49, 1, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148057, 383, 'الارسال', 586, 49, 0.5, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148059, 346, '1018', 586, 49, 1, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148060, 384, 'التعليم المواجه', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148062, 347, '1024', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148063, 385, 'االتمرير', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148065, 348, '1029', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148067, 349, '1033', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148069, 350, '1037', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148071, 351, '1040', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148073, 352, '1043', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148075, 353, '1047', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148077, 354, '1052', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148079, 355, '1057', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148081, 356, '1058', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148083, 357, '1062', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148085, 358, '1066', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148087, 359, '1070', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148089, 360, '1074', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148091, 361, '1081', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148093, 362, '1083', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148095, 364, 'موجفه', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148097, 365, '3', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148099, 366, 'البديله', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148101, 367, 'وليام مرجان', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148103, 367, '1994', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148105, 368, 'الضرب الساحق', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148107, 369, '8', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148109, 370, 'دفاعي', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148111, 370, 'هجومي', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148113, 371, 'المهارات الحركية', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148115, 372, 'الخبرة', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148117, 373, 'شرح المهاره', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148119, 374, 'المستفبل', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148121, 375, '8', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:25'),
(148123, 376, 'الصحيح للمههاره', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148125, 376, 'الزراعين', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148127, 377, 'التمرير', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148129, 378, '1', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148131, 378, '2', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148133, 379, 'الكتف', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148135, 380, '224', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148137, 380, '243', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148139, 381, 'المعد', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148141, 382, '1', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148143, 382, '9.50', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148145, 383, 'الارسال', 586, 49, NULL, '2019-03-06 07:44:23', '2019-03-06 07:44:23'),
(148147, 384, 'التعليم المواجه', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(148149, 385, 'االتمرير', 586, 49, 0, '2019-03-06 07:44:23', '2019-03-06 07:44:26'),
(152974, 303, '911', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152975, 304, '912', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152976, 305, '914', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152977, 306, '916', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152978, 307, '919', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152979, 308, '920', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152980, 309, '923', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152981, 310, '924', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152982, 311, '927', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152983, 312, '929', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152984, 313, '931', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152985, 314, '933', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152986, 315, '934', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152987, 316, '936', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152988, 317, '938', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152989, 318, '940', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152990, 320, '943', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152991, 322, '948', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152992, 323, '950', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152993, 324, '953', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152994, 325, '955', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152995, 326, '957', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152996, 327, '958', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152997, 328, '960', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152998, 329, '962', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(152999, 330, '1352', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153000, 331, '967', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153001, 332, '969', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153002, 333, '971', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153003, 334, '972', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153004, 335, '974', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153005, 336, '978', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153006, 337, '984', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153007, 338, '986', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153008, 339, '993', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153009, 340, '994', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153010, 341, '998', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153011, 342, '1002', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:12'),
(153012, 343, '1006', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153013, 344, '1011', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153014, 345, '1014', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153015, 346, '1018', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153016, 347, '1024', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153017, 348, '1028', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153018, 349, '1033', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153019, 350, '1037', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153020, 351, '1040', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153021, 352, '1044', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153022, 353, '1047', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153023, 354, '1053', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153024, 355, '1055', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153025, 356, '1058', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153026, 357, '1062', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153027, 358, '1066', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153028, 359, '1070', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153029, 360, '1074', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153030, 361, '1080', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153031, 362, '1083', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153032, 364, 'مفتوح ومغلقة', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153033, 365, '6', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153034, 366, 'الاستقبال', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153035, 367, 'وليم مورجان', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153036, 367, '1895', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153037, 368, 'الضرب الساحق', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153038, 369, '8ثوانى', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153039, 370, 'ودفاعى', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153040, 370, 'هجومى', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:13'),
(153041, 371, 'الاستقبال', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153042, 372, NULL, 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153043, 373, 'الامر', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153044, 374, 'المتعلم', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153045, 375, '2', 582, 49, 1, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153046, 376, 'الوقوف', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153047, 376, 'الركبتين', 582, 49, 0, '2019-03-06 07:48:11', '2019-03-06 07:48:14'),
(153048, 377, 'شكلw', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153049, 378, '1', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153050, 378, '2', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153051, 379, 'اسفل مستوى الكتف', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153052, 380, '224', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153053, 380, '243', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153054, 381, 'المعد', 582, 49, 1, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153055, 382, '1', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153056, 382, '9.5', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153057, 383, 'الارسال', 582, 49, 1, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153058, 384, 'التعاونى', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153059, 385, 'تمرير', 582, 49, 0, '2019-03-06 07:48:12', '2019-03-06 07:48:14'),
(153300, 303, '910', 588, 49, 0, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153302, 304, '913', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153304, 307, '919', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153306, 308, '920', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153308, 309, '922', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153310, 310, '924', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153312, 311, '927', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153314, 312, '929', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153316, 313, '930', 588, 49, 0, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153318, 314, '932', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153320, 315, '934', 588, 49, 0, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153322, 316, '937', 588, 49, 0, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153324, 317, '938', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153326, 318, '940', 588, 49, 1, '2019-03-06 07:48:27', '2019-03-06 07:48:29'),
(153328, 320, '945', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153330, 322, '948', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153332, 323, '950', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153334, 324, '953', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153336, 325, '954', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153338, 326, '957', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153340, 327, '958', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153342, 328, '961', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153344, 329, '962', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153346, 330, '1352', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153348, 331, '967', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153350, 332, '968', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153352, 333, '971', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153354, 334, '972', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153356, 335, '974', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153358, 336, '978', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153360, 337, '984', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153362, 338, '986', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153364, 339, '993', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153366, 340, '994', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153368, 341, '998', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153370, 342, '1002', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153372, 343, '1006', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153374, 344, '1011', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153376, 345, '1014', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:29'),
(153378, 346, '1018', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153380, 347, '1024', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153382, 348, '1028', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153384, 349, '1033', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153386, 350, '1036', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153388, 351, '1040', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153390, 352, '1044', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153392, 353, '1047', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153394, 354, '1052', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153396, 355, '1054', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153398, 356, '1058', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153400, 357, '1063', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153402, 358, '1066', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153404, 359, '1070', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153406, 360, '1074', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153408, 361, '1078', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153410, 362, '1083', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153412, 364, 'مفتوحة ومغلقة', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153414, 365, '6', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153416, 366, 'الارسال', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153418, 367, '1995', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153420, 367, 'وليام مورجان', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153422, 368, 'الضرب الساحق', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153424, 369, '8', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153426, 370, 'دفاعى', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153428, 370, 'هجومى', 588, 49, 1, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153430, 371, 'الاعداد', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153432, 372, 'تحمل المسئولية', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153434, 373, 'المهمة', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153436, 374, 'المؤدى', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153438, 375, '6', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153440, 376, 'الوقوف', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153442, 376, 'القدمين', 588, 49, 0, '2019-03-06 07:48:28', '2019-03-06 07:48:30'),
(153444, 377, 'w', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153446, 378, '5', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153447, 378, '2', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153448, 379, 'الحوض', 588, 49, 1, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153449, 380, '223', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153450, 380, '243', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153451, 381, 'المعد', 588, 49, 1, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153452, 382, '9.5', 588, 49, 1, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153453, 382, '1', 588, 49, 1, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153454, 383, 'الارسال', 588, 49, 1, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153455, 384, 'التبادلى', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(153456, 385, 'االارسال', 588, 49, 0, '2019-03-06 07:48:29', '2019-03-06 07:48:30'),
(157664, 303, '910', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157665, 304, '913', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157666, 305, '914', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157667, 306, '916', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157668, 307, '919', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157669, 308, '920', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157670, 309, '923', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157671, 310, '924', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157672, 311, '927', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157673, 312, '928', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157674, 313, '930', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157675, 314, '933', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157676, 315, '934', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157677, 316, '936', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157678, 318, '940', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157679, 322, '948', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157680, 323, '950', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157681, 324, '953', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157682, 325, '955', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157683, 326, '957', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157684, 327, '959', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157685, 328, '960', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157686, 329, '962', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157687, 330, '1352', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157688, 331, '966', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157689, 332, '968', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157690, 333, '971', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157691, 334, '972', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157692, 335, '974', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:09'),
(157693, 336, '978', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157694, 337, '984', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157695, 338, '986', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157696, 339, '990', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157697, 340, '994', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157698, 341, '998', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157699, 342, '1002', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157700, 344, '1012', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157701, 345, '1014', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157702, 346, '1018', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157703, 347, '1024', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157704, 348, '1029', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157705, 349, '1031', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157706, 350, '1037', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157707, 351, '1041', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157708, 352, '1043', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157709, 353, '1047', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157710, 354, '1052', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157711, 355, '1057', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157712, 356, '1058', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157713, 357, '1062', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157714, 358, '1066', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157715, 359, '1070', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157716, 360, '1074', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157717, 361, '1080', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157718, 362, '1083', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157719, 364, '[مفتوح ومغلق', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157720, 365, '6', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157721, 366, 'الاستقبال', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157722, 367, 'وليم مورجان', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157723, 367, '1895', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157724, 368, 'الضرب الساحق', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157725, 369, '8                                                                                                 8', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157726, 370, 'دفاعي', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157727, 370, 'هجومي', 578, 49, 0, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157728, 371, 'التمرير', 578, 49, 1, '2019-03-06 07:55:08', '2019-03-06 07:55:10'),
(157729, 372, NULL, 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157730, 373, 'الامر', 578, 49, 1, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157731, 374, 'التعاونى', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157732, 375, '2', 578, 49, 1, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157733, 376, 'وضع الوقوف', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157734, 376, 'الركبتين', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157735, 377, 'w', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157736, 378, '1', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157737, 378, '2', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157738, 379, 'اسفل مستوى الكتف', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157739, 380, '224', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157740, 380, '243', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157741, 381, 'التمرير', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157742, 382, '1', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157743, 382, '9.5', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157744, 383, 'الارسال', 578, 49, 1, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157745, 384, 'التعاونى', 578, 49, 0, '2019-03-06 07:55:09', '2019-03-06 07:55:10');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(157746, 385, 'التمرير', 578, 49, 1, '2019-03-06 07:55:09', '2019-03-06 07:55:10'),
(157747, 303, '910', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157748, 304, '912', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157749, 305, '914', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157750, 306, '916', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157751, 307, '919', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157752, 308, '920', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157753, 309, '922', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157754, 310, '925', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157755, 311, '926', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157756, 312, '929', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157757, 313, '931', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157758, 314, '932', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157759, 315, '934', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157760, 316, '937', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157761, 317, '938', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157762, 318, '941', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157763, 320, '943', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157764, 322, '949', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157765, 324, '953', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157766, 331, '967', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157767, 332, '968', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157768, 333, '970', 670, 49, NULL, '2019-03-06 08:38:30', '2019-03-06 08:38:30'),
(157769, 334, '973', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157770, 335, '974', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157771, 336, '978', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157772, 337, '982', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157773, 338, '989', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157774, 339, '993', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157775, 340, '997', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157776, 341, '998', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157777, 342, '1002', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157778, 343, '1007', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157779, 344, '1011', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157780, 345, '1014', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157781, 346, '1018', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157782, 347, '1024', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157783, 348, '1027', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157784, 349, '1033', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157785, 350, '1037', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157786, 351, '1038', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157787, 352, '1044', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157788, 353, '1047', 670, 49, 1, '2019-03-06 08:38:30', '2019-03-06 09:09:09'),
(157789, 354, '1051', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:10'),
(157790, 355, '1057', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:10'),
(157791, 356, '1060', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:10'),
(157792, 357, '1062', 670, 49, 0, '2019-03-06 08:38:30', '2019-03-06 09:09:10'),
(157793, 358, '1066', 670, 49, 1, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157794, 359, '1070', 670, 49, 1, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157795, 360, '1074', 670, 49, 1, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157796, 361, '1078', 670, 49, 0, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157797, 362, '1083', 670, 49, 0, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157798, 364, 'مجوفة', 670, 49, 0, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157799, 365, '6', 670, 49, 1, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(157800, 366, NULL, 670, 49, 0, '2019-03-06 08:38:31', '2019-03-06 09:09:10'),
(158627, 303, '911', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158628, 304, '912', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158629, 305, '915', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158630, 306, '917', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158631, 307, '918', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158632, 308, '921', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158633, 309, '923', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158634, 310, '924', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158635, 311, '927', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158636, 312, '929', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158637, 313, '931', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:53'),
(158638, 314, '933', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158639, 315, '934', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158640, 317, '938', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158641, 318, '940', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158642, 320, '943', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158643, 322, '948', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158644, 323, '950', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158645, 324, '952', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158646, 325, '955', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158647, 326, '957', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158648, 327, '958', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158649, 328, '961', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158650, 329, '962', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158651, 330, '1352', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158652, 331, '967', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158653, 332, '969', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158654, 333, '971', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158655, 334, '973', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158656, 335, '974', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158657, 336, '978', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158658, 337, '984', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158659, 338, '988', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158660, 339, '990', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158661, 340, '996', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158662, 341, '998', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158663, 342, '1005', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158664, 343, '1007', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158665, 344, '1011', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158666, 345, '1015', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158667, 346, '1018', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158668, 347, '1022', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158669, 348, '1029', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158670, 349, '1033', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158671, 350, '1037', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158672, 351, '1040', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158673, 352, '1044', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158674, 353, '1046', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158675, 354, '1050', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158676, 355, '1054', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158677, 356, '1059', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158678, 357, '1063', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158679, 358, '1066', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158680, 359, '1073', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158681, 360, '1075', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158682, 361, '1080', 599, 49, 1, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158683, 362, '1083', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158684, 364, 'مجوفه', 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(158685, 365, NULL, 599, 49, 0, '2019-03-06 09:03:29', '2019-03-06 11:04:54'),
(168327, 303, '911', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:29'),
(168328, 304, '913', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:29'),
(168329, 305, '914', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:29'),
(168330, 306, '916', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:29'),
(168331, 307, '918', 740, 49, 0, '2019-03-11 06:17:28', '2019-03-11 06:17:29'),
(168332, 308, '920', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:30'),
(168333, 309, '922', 740, 49, 1, '2019-03-11 06:17:28', '2019-03-11 06:17:30'),
(168334, 310, '924', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168335, 311, '926', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168336, 312, '928', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168337, 313, '930', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168338, 314, '933', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168339, 315, '935', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168340, 316, '936', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168341, 317, '938', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168342, 318, '940', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168343, 320, '943', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168344, 322, '948', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168345, 323, '950', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168346, 324, '952', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168347, 325, '955', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168348, 326, '957', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168349, 327, '958', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168350, 328, '961', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168351, 329, '962', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168352, 330, '1352', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168353, 331, '966', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168354, 332, '968', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168355, 333, '970', 740, 49, NULL, '2019-03-11 06:17:29', '2019-03-11 06:17:29'),
(168356, 334, '972', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168357, 335, '974', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168358, 336, '978', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168359, 337, '985', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168360, 338, '989', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168361, 339, '993', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168362, 340, '994', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168363, 341, '998', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168364, 342, '1002', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168365, 343, '1006', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168366, 344, '1011', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168367, 345, '1014', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168368, 346, '1018', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168369, 347, '1024', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168370, 348, '1026', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168371, 349, '1033', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168372, 350, '1035', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168373, 351, '1040', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168374, 352, '1044', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168375, 353, '1049', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168376, 354, '1051', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168377, 355, '1054', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168378, 356, '1060', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168379, 357, '1062', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168380, 358, '1066', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168381, 359, '1070', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168382, 360, '1074', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168383, 361, '1080', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168384, 362, '1083', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168385, 364, 'lمفتوحة', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168386, 365, '6', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168387, 366, 'القدرة العضلية', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:30'),
(168388, 367, 'وليم مورجان', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168389, 367, '1890', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168390, 368, 'الارسال', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168391, 369, '8', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168392, 370, 'دفاعى', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168393, 370, 'هجومى', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168394, 371, 'التمرير', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168395, 372, NULL, 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168396, 373, 'الامر', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168397, 374, NULL, 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168398, 375, '2', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168399, 376, 'الوقوف', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168400, 376, 'الركبتين', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168401, 377, 'فنجان', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168402, 378, '1', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168403, 378, '2                         2', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168404, 379, 'الحوض', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168405, 380, '224', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168406, 380, '234', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168407, 381, 'المعد', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168408, 382, '1', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168409, 382, '9.5', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168410, 383, 'الارسال', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168411, 384, 'التعاونى', 740, 49, 0, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(168412, 385, 'التمرير', 740, 49, 1, '2019-03-11 06:17:29', '2019-03-11 06:17:31'),
(192977, 303, '910', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192978, 304, '913', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192979, 305, '914', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192980, 306, '916', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192981, 307, '919', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192982, 308, '920', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192983, 309, '922', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192984, 310, '924', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192985, 311, '927', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192986, 312, '929', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192987, 313, '930', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192988, 314, '932', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192989, 315, '934', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192990, 316, '937', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192991, 317, '938', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192992, 318, '940', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192993, 320, '945', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192994, 322, '948', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192995, 323, '950', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192996, 324, '953', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192997, 325, '955', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192998, 326, '957', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(192999, 327, '958', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193000, 328, '960', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193001, 329, '962', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193002, 330, '1352', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193003, 331, '966', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193004, 332, '969', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193005, 333, '970', 576, 49, NULL, '2019-03-11 07:47:50', '2019-03-11 07:47:50'),
(193006, 334, '972', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193007, 335, '974', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193008, 336, '978', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193009, 337, '985', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193010, 338, '986', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193011, 339, '992', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:51'),
(193012, 340, '997', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193013, 341, '998', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193014, 342, '1002', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193015, 343, '1006', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193016, 344, '1010', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193017, 345, '1017', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193018, 346, '1018', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193019, 347, '1024', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193020, 348, '1026', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193021, 349, '1033', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193022, 350, '1035', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193023, 351, '1040', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193024, 352, '1044', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193025, 353, '1047', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193026, 354, '1051', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193027, 355, '1054', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193028, 356, '1058', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193029, 357, '1062', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193030, 358, '1066', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193031, 359, '1070', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193032, 360, '1074', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193033, 361, '1080', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193034, 362, '1085', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193035, 364, 'مفتوحة او مضمومة', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193036, 365, '6', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193037, 366, 'القوة العضلية للذراعين', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193038, 367, 'وليام مورجان', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193039, 367, '1845', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193040, 368, 'الضرب الساحق', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193041, 369, '8', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193042, 370, 'دفاع', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193043, 370, 'هجوم', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193044, 371, 'التمرير', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193045, 372, NULL, 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193046, 373, 'الامر', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193047, 374, 'المتعلم', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193048, 375, '2', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193049, 376, 'الوقوف', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193050, 376, 'الركبتين', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193051, 377, 'فنجان', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193052, 378, '1', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193053, 378, '2', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193054, 379, 'الحوض', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193055, 380, '224', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193056, 380, '243', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193057, 381, 'المعد', 576, 49, 1, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193058, 382, '1', 576, 49, 0, '2019-03-11 07:47:50', '2019-03-11 07:47:52'),
(193059, 382, '9.5', 576, 49, 0, '2019-03-11 07:47:51', '2019-03-11 07:47:52'),
(193060, 383, 'الارسال', 576, 49, 1, '2019-03-11 07:47:51', '2019-03-11 07:47:52'),
(193061, 384, 'تعاونى', 576, 49, 0, '2019-03-11 07:47:51', '2019-03-11 07:47:52'),
(193062, 385, 'التمرير', 576, 49, 1, '2019-03-11 07:47:51', '2019-03-11 07:47:52'),
(198746, 303, '910', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198747, 304, '912', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198748, 305, '915', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198749, 306, '916', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198750, 307, '919', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198751, 308, '920', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198752, 309, '922', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198753, 310, '924', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198754, 311, '927', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198755, 312, '929', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198756, 313, '930', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198757, 314, '932', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198758, 315, '934', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198759, 316, '937', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198760, 317, '938', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198761, 318, '940', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198762, 320, '943', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198763, 322, '948', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198764, 323, '950', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198765, 324, '953', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198766, 325, '954', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198767, 326, '957', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198768, 327, '958', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198769, 328, '960', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:52:59'),
(198770, 329, '962', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198771, 330, '1352', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198772, 331, '967', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198773, 332, '968', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198774, 333, '971', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198775, 334, '973', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198776, 335, '976', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198777, 336, '978', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198778, 337, '984', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198779, 338, '987', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198780, 339, '993', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198781, 340, '997', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198782, 341, '998', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198783, 342, '1005', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198784, 343, '1007', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198785, 344, '1010', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198786, 345, '1017', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198787, 346, '1018', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198788, 347, '1025', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198789, 348, '1026', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198790, 349, '1033', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198791, 350, '1037', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198792, 351, '1040', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198793, 352, '1044', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198794, 353, '1047', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198795, 354, '1052', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198796, 355, '1054', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198797, 356, '1058', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198798, 357, '1062', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198799, 358, '1066', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198800, 359, '1070', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198801, 360, '1074', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198802, 361, '1080', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198803, 362, '1085', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198804, 364, 'مفتوحة', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198805, 365, '6', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198806, 366, 'القوة العضلية', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198807, 367, 'وليام مورجان', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198808, 367, '1935', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198809, 368, 'الضرب الساحق', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198810, 369, '8', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198811, 370, 'دفاعي', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198812, 370, 'هجومى', 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198813, 371, 'التمرير', 580, 49, 1, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198814, 372, NULL, 580, 49, 0, '2019-03-11 07:52:58', '2019-03-11 07:53:00'),
(198815, 373, 'الامر', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198816, 374, 'المتعلم', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198817, 375, '2', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198818, 376, 'الوقوف', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198819, 376, 'الركبتين', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198820, 377, 'فنجان', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198821, 378, '1', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198822, 378, '2', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198823, 379, 'الحوض', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198824, 380, '224', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198825, 380, '243', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198826, 381, 'المعد', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198827, 382, '1', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198828, 382, '9.5', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198829, 383, 'الارسال', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198830, 384, 'التعاونى', 580, 49, 0, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(198831, 385, 'التمرير', 580, 49, 1, '2019-03-11 07:52:59', '2019-03-11 07:53:00'),
(200294, 303, '910', 574, 49, 0, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200295, 304, '913', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200296, 305, '914', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200297, 306, '916', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200298, 307, '919', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200299, 308, '920', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200300, 309, '923', 574, 49, 0, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200301, 310, '924', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200302, 311, '927', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200303, 312, '929', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200304, 313, '931', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200305, 314, '932', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200306, 315, '935', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200307, 316, '937', 574, 49, 0, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200308, 317, '938', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200309, 318, '941', 574, 49, 0, '2019-03-11 07:55:02', '2019-03-11 07:55:03'),
(200310, 320, '943', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200311, 322, '948', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200312, 323, '950', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200313, 324, '953', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200314, 325, '954', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200315, 326, '957', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200316, 327, '958', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200317, 328, '960', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200318, 329, '962', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200319, 330, '1352', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200320, 331, '967', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200321, 332, '969', 574, 49, 1, '2019-03-11 07:55:02', '2019-03-11 07:55:04'),
(200322, 333, '971', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200323, 334, '972', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200324, 335, '974', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200325, 336, '981', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200326, 337, '984', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200327, 338, '986', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200328, 339, '990', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200329, 340, '997', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200330, 341, '1000', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200331, 342, '1002', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200332, 343, '1006', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200333, 344, '1011', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200334, 345, '1014', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200335, 346, '1018', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200336, 347, '1024', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200337, 348, '1027', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200338, 349, '1033', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200339, 350, '1034', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200340, 351, '1040', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200341, 352, '1044', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200342, 353, '1047', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200343, 354, '1053', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200344, 355, '1055', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200345, 356, '1060', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200346, 357, '1062', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200347, 358, '1066', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200348, 359, '1070', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200349, 360, '1075', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200350, 361, '1080', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200351, 362, '1085', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200352, 364, 'مفتوحه او مضمومه', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200353, 365, '6', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200354, 366, 'القدرة العضلية', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200355, 367, 'وليم مورجحان', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200356, 367, '1913', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200357, 368, 'الضرب الساحق', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200358, 369, '8', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200359, 370, 'دفاعى', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200360, 370, 'هجومى', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200361, 371, 'التمرير', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200362, 372, NULL, 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200363, 373, 'الامر', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200364, 374, 'المتعلم', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200365, 375, '2', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200366, 376, 'الوقوف', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200367, 376, 'الركبتين', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200368, 377, 'فنجان', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200369, 378, '1', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200370, 378, '2', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200371, 379, 'الحوض', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:04'),
(200372, 380, '224', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200373, 380, '243', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200374, 381, 'المعد', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200375, 382, '1', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200376, 382, '9.5', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200377, 383, 'الارسال', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200378, 384, 'التعاونى', 574, 49, 0, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(200379, 385, 'التمرير', 574, 49, 1, '2019-03-11 07:55:03', '2019-03-11 07:55:05'),
(212968, 303, '910', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212969, 304, '912', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212970, 305, '915', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212971, 306, '916', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212972, 307, '919', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212973, 308, '920', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212974, 311, '927', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212975, 312, '929', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212976, 313, '931', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212977, 314, '932', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212978, 315, '935', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212979, 316, '936', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212980, 317, '938', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212981, 318, '940', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212982, 320, '943', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212983, 322, '948', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212984, 323, '950', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212985, 324, '953', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212986, 325, '954', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212987, 326, '957', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212988, 327, '958', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212989, 328, '960', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212990, 329, '962', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212991, 330, '1352', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212992, 331, '967', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212993, 332, '969', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212994, 333, '970', 698, 49, NULL, '2019-03-13 09:30:33', '2019-03-13 09:30:33'),
(212995, 334, '972', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212996, 335, '974', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212997, 336, '978', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212998, 337, '985', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(212999, 338, '989', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213000, 339, '993', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213001, 340, '994', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213002, 341, '998', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213003, 342, '1002', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213004, 343, '1006', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213005, 344, '1011', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213006, 345, '1014', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213007, 346, '1018', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213008, 347, '1024', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213009, 348, '1026', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213010, 349, '1033', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213011, 350, '1037', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213012, 351, '1040', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213013, 352, '1044', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213014, 353, '1047', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213015, 354, '1052', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213016, 355, '1054', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213017, 356, '1061', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213018, 357, '1063', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213019, 358, '1066', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213020, 359, '1070', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213021, 360, '1074', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213022, 361, '1080', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213023, 362, '1085', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213024, 364, 'مففتوحة او مضمومة', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213025, 365, '6', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213026, 366, 'القدرة العضلية', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213027, 367, 'وليم مورجان', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213028, 367, '1895', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213029, 368, 'الضرب الساحق', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213030, 369, '10', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213031, 370, 'دفاعى', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:34'),
(213032, 370, 'هجومى', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213033, 371, 'التمرير', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213034, 372, 'الطالب المؤدى', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213035, 373, 'اسلوب الأمر', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213036, 374, 'المرسل', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213037, 375, '2', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213038, 376, 'الوقوفف', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213039, 376, 'الركبتين', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213040, 377, 'فنجان', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213041, 378, '1', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213042, 378, '2                                            2', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213043, 379, 'مستوى الحوض', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213044, 380, '2.42', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213045, 380, '2.43', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213046, 381, 'المعد', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213047, 382, '1', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213048, 382, '9.5', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213049, 383, 'الارسال', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213050, 384, 'اسلوب التعاونى', 698, 49, 0, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(213051, 385, 'التمرير', 698, 49, 1, '2019-03-13 09:30:33', '2019-03-13 09:30:35'),
(218967, 303, '910', 649, 49, 0, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218968, 304, '912', 649, 49, 0, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218969, 305, '915', 649, 49, 0, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218970, 306, '916', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218971, 307, '919', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218972, 308, '920', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218973, 309, '922', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218974, 310, '924', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218975, 311, '927', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218976, 312, '929', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218977, 313, '931', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218978, 314, '932', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218979, 315, '935', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218980, 316, '936', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218981, 317, '938', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218982, 318, '940', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218983, 320, '943', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218984, 322, '948', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218985, 323, '950', 649, 49, 1, '2019-03-13 09:48:28', '2019-03-13 09:48:29'),
(218986, 324, '953', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:29'),
(218987, 325, '954', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218988, 326, '957', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218989, 327, '958', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218990, 328, '960', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218991, 329, '962', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218992, 330, '1352', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218993, 331, '967', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218994, 332, '969', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218995, 333, '970', 649, 49, NULL, '2019-03-13 09:48:29', '2019-03-13 09:48:29'),
(218996, 334, '972', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218997, 335, '974', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218998, 336, '978', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(218999, 337, '985', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219000, 338, '989', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219001, 339, '993', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219002, 340, '994', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219003, 341, '998', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219004, 342, '1002', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219005, 343, '1006', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219006, 344, '1011', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219007, 345, '1014', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219008, 346, '1018', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219009, 347, '1024', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219010, 348, '1026', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219011, 349, '1033', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219012, 350, '1037', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219013, 351, '1040', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219014, 352, '1044', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219015, 353, '1047', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219016, 354, '1052', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219017, 355, '1054', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219018, 356, '1061', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219019, 357, '1063', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219020, 358, '1066', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219021, 359, '1070', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219022, 360, '1074', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219023, 361, '1080', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219024, 362, '1085', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219025, 364, 'مفتوحة', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219026, 365, '6', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219027, 366, 'القدرة العضلية', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219028, 367, 'وليم مورجان', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219029, 367, '1895', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219030, 368, 'الضرب الساحق', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219031, 369, '8', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219032, 370, 'هجومي', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219033, 370, 'دفاعي', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219034, 371, 'التمرير', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219035, 372, NULL, 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219036, 373, 'الامر', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219037, 374, 'المتعلم', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219038, 375, NULL, 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219039, 376, 'الوقوف', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219040, 376, 'الركبتين', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219041, 377, NULL, 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219042, 378, '1', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219043, 378, '2', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219044, 379, 'الحوض', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219045, 380, '224', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219046, 380, '243', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219047, 381, 'المعد', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219048, 382, '1', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219049, 382, '9.5', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219050, 383, 'الارسال', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219051, 384, 'التعاوني', 649, 49, 0, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(219052, 385, 'التمرير', 649, 49, 1, '2019-03-13 09:48:29', '2019-03-13 09:48:30'),
(229236, 303, '911', 704, 49, 1, '2019-03-14 07:20:08', '2019-03-14 07:20:09'),
(229237, 304, '913', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:09');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(229238, 305, '914', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:09'),
(229239, 306, '916', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229240, 307, '918', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229241, 308, '920', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229242, 309, '922', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229243, 310, '924', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229244, 311, '926', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229245, 312, '928', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229246, 313, '931', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229247, 314, '932', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229248, 315, '935', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229249, 316, '937', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229250, 317, '938', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229251, 318, '940', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229252, 320, '943', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229253, 322, '948', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229254, 323, '950', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229255, 324, '952', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229256, 325, '954', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229257, 326, '956', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229258, 327, '958', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229259, 328, '960', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229260, 329, '962', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229261, 330, '1352', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229262, 331, '967', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229263, 332, '969', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229264, 333, '970', 704, 49, NULL, '2019-03-14 07:20:09', '2019-03-14 07:20:09'),
(229265, 334, '972', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229266, 335, '974', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229267, 336, '978', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229268, 337, '985', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229269, 338, '989', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229270, 339, '990', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229271, 340, '995', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229272, 341, '998', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229273, 342, '1002', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229274, 343, '1006', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229275, 344, '1011', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229276, 345, '1014', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229277, 346, '1018', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229278, 347, '1024', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229279, 348, '1026', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229280, 349, '1033', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229281, 351, '1040', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229282, 352, '1044', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229283, 353, '1047', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229284, 354, '1052', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229285, 355, '1054', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229286, 357, '1062', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229287, 358, '1066', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229288, 359, '1070', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229289, 360, '1074', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229290, 361, '1080', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229291, 362, '1083', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229292, 364, 'مفتوحة', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229293, 365, '6', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229294, 366, 'القدرة العضلية', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229295, 367, 'وليم مورجان', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229296, 367, '1895', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229297, 368, 'الضرب الساحق', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229298, 369, '8', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229299, 370, 'جماعى', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229300, 370, 'فردى', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229301, 371, 'التممرير', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229302, 372, 'الطالب', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229303, 373, 'التبادلى', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229304, 374, 'الطالب', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229305, 375, '2', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:10'),
(229306, 376, 'الوقوف', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229307, 376, 'الركبتين', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229308, 377, NULL, 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229309, 378, '1', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229310, 378, '2', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229311, 379, 'الجذع', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229312, 380, '224', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229313, 380, '234', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229314, 381, 'الليبرو', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229315, 382, '1', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229316, 382, '9.5', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229317, 383, 'الارسال', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229318, 384, 'التعاونى', 704, 49, 0, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(229319, 385, 'التمرير', 704, 49, 1, '2019-03-14 07:20:09', '2019-03-14 07:20:11'),
(231615, 303, '911', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231616, 304, '913', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231617, 305, '914', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231618, 306, '916', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231619, 307, '919', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231620, 308, '920', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231621, 309, '922', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231622, 310, '924', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231623, 311, '926', 610, 49, 0, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231624, 312, '929', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231625, 313, '931', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231626, 314, '932', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231627, 315, '935', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:31'),
(231628, 316, '936', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:32'),
(231629, 317, '938', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:32'),
(231630, 318, '940', 610, 49, 1, '2019-03-14 07:24:29', '2019-03-14 07:24:32'),
(231631, 320, '943', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231632, 322, '948', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231633, 323, '950', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231634, 324, '952', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231635, 325, '954', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231636, 326, '957', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231637, 327, '958', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231638, 328, '960', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231639, 329, '962', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231640, 330, '1352', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231641, 331, '967', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231642, 332, '969', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231643, 333, '970', 610, 49, NULL, '2019-03-14 07:24:30', '2019-03-14 07:24:30'),
(231644, 334, '972', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231645, 335, '974', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231646, 336, '978', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231647, 337, '985', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231648, 338, '989', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231649, 339, '993', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231650, 341, '998', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231651, 342, '1002', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231652, 343, '1006', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231653, 344, '1010', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231654, 345, '1014', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231655, 346, '1018', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231656, 347, '1024', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231657, 348, '1026', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231658, 349, '1033', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231659, 350, '1037', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231660, 351, '1040', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231661, 352, '1044', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231662, 353, '1047', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231663, 354, '1052', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231664, 355, '1054', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231665, 356, '1061', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231666, 357, '1063', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231667, 358, '1066', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231668, 359, '1070', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231669, 360, '1074', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231670, 361, '1080', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231671, 362, '1085', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231672, 364, 'مجوفة', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231673, 365, '6', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231674, 366, 'القوة', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:32'),
(231675, 367, 'وليم مورجان', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231676, 367, '1895', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231677, 368, 'الضرب', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231678, 369, '8', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231679, 370, 'دفاعى', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231680, 370, 'هجومى', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231681, 371, 'التمرير', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231682, 372, 'الطالب', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231683, 373, 'الامر', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231684, 374, 'المتعلم', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231685, 375, '2', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231686, 376, 'الوقوف', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231687, 376, 'الركبتين', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231688, 377, 'w', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231689, 378, '5', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231690, 378, '1', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231691, 379, 'الحوض', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231692, 380, '224', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231693, 380, '243', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231694, 381, 'المعد', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231695, 382, '1', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231696, 382, '9.5', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231697, 383, 'الارسال', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231698, 384, 'التعاونى', 610, 49, 0, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(231699, 385, 'التمرير', 610, 49, 1, '2019-03-14 07:24:30', '2019-03-14 07:24:33'),
(241431, 303, '911', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241432, 304, '913', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241433, 305, '914', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241434, 306, '916', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241435, 307, '918', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241436, 308, '920', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241437, 309, '922', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241438, 310, '924', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241439, 311, '927', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241440, 312, '929', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241441, 313, '931', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241442, 314, '932', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241443, 315, '935', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241444, 316, '936', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241445, 317, '938', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241446, 318, '940', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241447, 320, '943', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241448, 322, '948', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241449, 323, '950', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241450, 324, '953', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241451, 325, '954', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241452, 326, '957', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241453, 327, '958', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241454, 328, '960', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241455, 329, '962', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241456, 330, '1352', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241457, 331, '967', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241458, 332, '968', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241459, 333, '970', 707, 49, NULL, '2019-03-14 08:07:00', '2019-03-14 08:07:00'),
(241460, 334, '973', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241461, 335, '974', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241462, 336, '978', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241463, 337, '985', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241464, 338, '989', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241465, 339, '993', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241466, 340, '994', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241467, 341, '998', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241468, 342, '1002', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241469, 343, '1006', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241470, 344, '1011', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241471, 345, '1014', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241472, 346, '1018', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241473, 347, '1023', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241474, 348, '1026', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241475, 349, '1033', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241476, 350, '1037', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241477, 351, '1040', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241478, 352, '1044', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241479, 353, '1047', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241480, 354, '1052', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241481, 355, '1054', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241482, 356, '1061', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241483, 357, '1063', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241484, 358, '1066', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241485, 359, '1070', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241486, 360, '1074', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241487, 361, '1080', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241488, 362, '1084', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241489, 364, 'مجوفة', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241490, 365, '6', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241491, 366, 'القوة', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241492, 367, 'وليم مورجان', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:01'),
(241493, 367, '1859', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241494, 368, 'التمرير', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241495, 369, '8', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241496, 370, 'دفاعى', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241497, 370, 'هجومى', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241498, 371, 'التمرير', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241499, 372, 'الطالب المودى', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241500, 373, 'الامر', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241501, 374, 'المتعلم', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241502, 375, '2', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241503, 376, 'الوقوف', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241504, 376, 'الركبتين', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241505, 377, NULL, 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241506, 378, '5', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241507, 378, '1', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241508, 379, 'الحوض', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241509, 380, '224', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241510, 380, '243', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241511, 381, 'المعد', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241512, 382, '1', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241513, 382, '9.5', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241514, 383, 'الارسال', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241515, 384, 'التعاونى', 707, 49, 0, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(241516, 385, 'التمرير', 707, 49, 1, '2019-03-14 08:07:00', '2019-03-14 08:07:02'),
(250213, 303, '910', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250214, 304, '913', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250215, 305, '914', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250216, 306, '916', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250217, 307, '919', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250218, 308, '920', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250219, 309, '922', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250220, 310, '924', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250221, 311, '927', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250222, 312, '929', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250223, 313, '931', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250224, 314, '932', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250225, 315, '934', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250226, 316, '936', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250227, 317, '938', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250228, 318, '940', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250229, 320, '943', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250230, 322, '948', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250231, 323, '950', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250232, 324, '953', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250233, 325, '954', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:52'),
(250234, 326, '957', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250235, 327, '958', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250236, 328, '960', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250237, 329, '962', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250238, 330, '1352', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250239, 331, '967', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250240, 332, '969', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250241, 333, '970', 708, 49, NULL, '2019-03-14 08:36:51', '2019-03-14 08:36:51'),
(250242, 334, '972', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250243, 335, '974', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250244, 336, '978', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250245, 337, '985', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250246, 338, '989', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250247, 339, '993', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250248, 340, '994', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250249, 341, '998', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250250, 342, '1002', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250251, 343, '1006', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250252, 344, '1011', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250253, 345, '1014', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250254, 346, '1018', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250255, 347, '1024', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250256, 348, '1026', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250257, 349, '1033', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250258, 350, '1037', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250259, 351, '1040', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250260, 352, '1044', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250261, 353, '1048', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250262, 354, '1052', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250263, 355, '1054', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250264, 356, '1061', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250265, 357, '1062', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250266, 358, '1066', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250267, 359, '1070', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250268, 360, '1074', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250269, 361, '1080', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250270, 362, '1085', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250271, 364, 'مجوفة', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250272, 365, '6', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250273, 366, 'القوة العضلية', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250274, 367, 'وليم مورجان', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250275, 367, '1895', 708, 49, 0, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250276, 368, 'الضرب الساحق', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250277, 369, '8', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250278, 370, 'دفاعى', 708, 49, 1, '2019-03-14 08:36:51', '2019-03-14 08:36:53'),
(250279, 370, 'هجومى', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:53'),
(250280, 371, 'التمرير', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:53'),
(250281, 372, 'الطالب', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:53'),
(250282, 373, 'الامر', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250283, 374, 'المتعلم', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250284, 375, '2', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250285, 376, 'الوقوف', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250286, 376, 'الركبتين', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250287, 377, 'w', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250288, 378, '1', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250289, 378, '2', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250290, 379, 'الجذع', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250291, 380, '224', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250292, 380, '234', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250293, 381, 'المعد', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250294, 382, '1', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250295, 382, '10', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250296, 383, 'الارسال', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250297, 384, 'التبادلى', 708, 49, 0, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(250298, 385, 'التمرير', 708, 49, 1, '2019-03-14 08:36:52', '2019-03-14 08:36:54'),
(254833, 303, '911', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254834, 304, '913', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254835, 305, '914', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254836, 306, '916', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254837, 307, '919', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254838, 308, '920', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254839, 309, '922', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254840, 310, '924', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254841, 311, '927', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254842, 312, '929', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254843, 313, '931', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254844, 314, '932', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254845, 315, '935', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254846, 316, '936', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254847, 317, '938', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254848, 318, '940', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254849, 320, '943', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254850, 322, '948', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254851, 323, '950', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254852, 324, '953', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254853, 325, '954', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254854, 326, '957', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254855, 327, '958', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254856, 328, '960', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254857, 329, '962', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254858, 330, '1352', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254859, 331, '967', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254860, 332, '969', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254861, 333, '970', 684, 49, NULL, '2019-03-14 08:50:07', '2019-03-14 08:50:07'),
(254862, 334, '972', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254863, 335, '974', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254864, 336, '978', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254865, 337, '985', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254866, 338, '989', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254867, 339, '993', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254868, 340, '997', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:08'),
(254869, 341, '1001', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254870, 342, '1005', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254871, 343, '1006', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254872, 344, '1013', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254873, 345, '1014', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254874, 346, '1018', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254875, 347, '1024', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254876, 348, '1028', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254877, 349, '1033', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254878, 350, '1034', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254879, 351, '1040', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254880, 352, '1044', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254881, 353, '1047', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254882, 354, '1051', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254883, 355, '1057', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254884, 356, '1061', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254885, 357, '1063', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254886, 358, '1069', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254887, 359, '1070', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254888, 360, '1075', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254889, 361, '1080', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254890, 362, '1085', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254891, 364, 'مفتوحة', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254892, 365, '6', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254893, 366, 'القوة العضلية', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254894, 367, 'وليم مورجان', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254895, 367, '1895', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254896, 368, 'الضرب الساحق', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254897, 369, '8', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254898, 370, 'دفاعي', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254899, 370, 'هجومي', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254900, 371, 'التمرير', 684, 49, 1, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254901, 372, 'ان يترك التلميذ للأداء', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254902, 373, 'أسلوب الأمر', 684, 49, 0, '2019-03-14 08:50:07', '2019-03-14 08:50:09'),
(254903, 374, 'المرسل', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254904, 375, '2', 684, 49, 1, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254905, 376, 'الوقوف', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254906, 376, 'الركبتين', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254907, 377, 'على حرف W', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254908, 378, '1', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254909, 378, '2', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254910, 379, 'الحوض', 684, 49, 1, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254911, 380, '224', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254912, 380, '243', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254913, 381, 'المعد', 684, 49, 1, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254914, 382, '1', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254915, 382, '9.5', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254916, 383, 'الارسال', 684, 49, 1, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254917, 384, 'التعاونى', 684, 49, 0, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(254918, 385, 'التمرير', 684, 49, 1, '2019-03-14 08:50:08', '2019-03-14 08:50:09'),
(261132, 303, '911', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261133, 304, '913', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261134, 305, '914', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261135, 306, '916', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261136, 307, '918', 648, 49, 0, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261137, 308, '920', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261138, 309, '922', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261139, 310, '924', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261140, 311, '927', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261141, 312, '929', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261142, 313, '931', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261143, 314, '932', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261144, 315, '935', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261145, 316, '936', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261146, 317, '938', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261147, 318, '940', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:36'),
(261148, 320, '943', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261149, 322, '948', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261150, 323, '950', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261151, 324, '953', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261152, 325, '954', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261153, 326, '957', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261154, 327, '958', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261155, 328, '960', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261156, 329, '962', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261157, 330, '1352', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261158, 331, '967', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261159, 332, '968', 648, 49, 0, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261160, 333, '970', 648, 49, NULL, '2019-03-14 09:03:35', '2019-03-14 09:03:35'),
(261161, 334, '972', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261162, 335, '974', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261163, 336, '978', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261164, 337, '985', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261165, 338, '989', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261166, 339, '993', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261167, 340, '994', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261168, 341, '998', 648, 49, 1, '2019-03-14 09:03:35', '2019-03-14 09:03:37'),
(261169, 342, '1002', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261170, 343, '1006', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261171, 344, '1011', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261172, 345, '1014', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261173, 346, '1018', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261174, 347, '1024', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261175, 348, '1026', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261176, 349, '1033', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261177, 350, '1035', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261178, 351, '1040', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261179, 352, '1044', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261180, 353, '1048', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261181, 354, '1052', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261182, 355, '1054', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261183, 356, '1061', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261184, 358, '1066', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261185, 359, '1070', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261186, 360, '1074', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261187, 361, '1080', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261188, 362, '1085', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261189, 364, 'محفتوحة', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261190, 365, '6', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261191, 366, 'القدرة العضلية', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261192, 367, 'وليم مورجان', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261193, 367, '1895', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261194, 368, 'الضرب الساحق', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261195, 369, '8', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:37'),
(261196, 370, 'جماعى', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261197, 370, 'فردى', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261198, 371, 'التمرير', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261199, 372, 'المتعلم', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261200, 373, 'الامر', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261201, 374, 'المتعلم', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261202, 375, '2', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261203, 376, 'الوقوف', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261204, 376, 'الركبتين', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261205, 377, 'w', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261206, 378, '1', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261207, 378, '2', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261208, 379, 'الحوض', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261209, 380, '224', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261210, 380, '234', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261211, 381, 'المعد', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261212, 382, '1', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261213, 382, '10', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261214, 383, 'الارسال', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261215, 384, 'التعاونى', 648, 49, 0, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(261216, 385, 'التمرير', 648, 49, 1, '2019-03-14 09:03:36', '2019-03-14 09:03:38'),
(268013, 303, '911', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268014, 304, '913', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268015, 305, '914', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268016, 306, '916', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268017, 307, '919', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268018, 308, '920', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268019, 309, '922', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268020, 310, '924', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268021, 311, '927', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268022, 312, '929', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268023, 313, '931', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268024, 314, '932', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268025, 315, '935', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268026, 316, '936', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268027, 317, '938', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:19'),
(268028, 318, '940', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:20'),
(268029, 320, '943', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:20'),
(268030, 322, '948', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:20'),
(268031, 323, '950', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:20'),
(268032, 324, '953', 741, 49, 1, '2019-03-14 09:19:18', '2019-03-14 09:19:20'),
(268033, 325, '954', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268034, 326, '957', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268035, 327, '958', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268036, 328, '960', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268037, 329, '962', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268038, 330, '1352', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268039, 331, '966', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268040, 332, '969', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268041, 333, '971', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268042, 334, '972', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268043, 335, '974', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268044, 336, '978', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268045, 337, '985', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268046, 338, '989', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268047, 339, '993', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268048, 340, '995', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268049, 341, '998', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268050, 342, '1002', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268051, 343, '1006', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268052, 344, '1011', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268053, 345, '1014', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268054, 346, '1018', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268055, 347, '1024', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268056, 348, '1026', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268057, 349, '1033', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268058, 350, '1034', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268059, 351, '1040', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268060, 352, '1044', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268061, 353, '1047', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268062, 354, '1052', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268063, 355, '1054', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268064, 356, '1061', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268065, 357, '1062', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268066, 358, '1066', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268067, 359, '1070', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268068, 360, '1074', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268069, 361, '1080', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268070, 362, '1083', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268071, 364, 'مجوفة', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268072, 365, '6', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268073, 366, 'القدرة العضلية', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268074, 367, 'وليم مورجان', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268075, 367, '1895', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268076, 368, 'الضرب الساحق', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268077, 369, '8', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268078, 370, 'جماعى', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268079, 370, 'فرى', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268080, 371, 'التمرير', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268081, 372, 'الطالب', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268082, 373, 'الامر', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:20'),
(268083, 374, NULL, 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268084, 375, 'المتعلم', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268085, 376, 'الوقوف', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268086, 376, 'الركبتين', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268087, 377, 'فنجان', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268088, 378, '1', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268089, 378, '2', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268090, 379, 'الحوض', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268091, 380, '224', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268092, 380, '234', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268093, 381, 'المعد', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268094, 382, '1', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268095, 382, '9.5', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268096, 383, 'الارسال', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268097, 384, '3', 741, 49, 0, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(268098, 385, 'التمرير', 741, 49, 1, '2019-03-14 09:19:19', '2019-03-14 09:19:21'),
(273960, 303, '911', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:23'),
(273961, 304, '913', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:23'),
(273962, 305, '914', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:23'),
(273963, 306, '916', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:23'),
(273964, 307, '919', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:23'),
(273965, 308, '920', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273966, 309, '922', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273967, 310, '924', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273968, 311, '927', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273969, 312, '929', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273970, 313, '931', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273971, 314, '932', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273972, 315, '935', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273973, 316, '936', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273974, 317, '938', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273975, 318, '940', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273976, 320, '943', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273977, 322, '948', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273978, 323, '950', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273979, 324, '953', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273980, 325, '954', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273981, 326, '957', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273982, 327, '958', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273983, 328, '960', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273984, 329, '962', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273985, 330, '1352', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273986, 331, '967', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273987, 332, '968', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273988, 333, '971', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273989, 334, '972', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273990, 335, '974', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273991, 336, '978', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273992, 337, '985', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273993, 338, '988', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273994, 339, '992', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(273995, 340, '996', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273996, 341, '998', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273997, 342, '1005', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273998, 343, '1006', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(273999, 344, '1011', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274000, 345, '1014', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274001, 346, '1018', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274002, 347, '1024', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274003, 348, '1026', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274004, 349, '1033', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274005, 350, '1034', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274006, 351, '1040', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274007, 352, '1044', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274008, 353, '1047', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274009, 354, '1051', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274010, 355, '1054', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274011, 356, '1060', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274012, 357, '1062', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274013, 358, '1066', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274014, 359, '1070', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274015, 360, '1074', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274016, 361, '1080', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274017, 362, '1085', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274018, 364, 'مجوفة', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274019, 365, '6', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274020, 366, 'القوة', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274021, 367, 'وليم مورجان', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274022, 367, '1895', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274023, 368, 'الارسال', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274024, 369, '8', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274025, 370, 'دفاع', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274026, 370, 'هجوم', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274027, 371, 'التمرير', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274028, 372, 'المتعلم', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274029, 373, 'الامر', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274030, 374, 'المتعلم', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:24'),
(274031, 375, '2', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274032, 376, 'الوقوف', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274033, 376, 'الركبتين', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274034, 377, NULL, 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274035, 378, '1', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274036, 378, '2', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274037, 379, 'الحوض', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274038, 380, '224', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274039, 380, '243', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274040, 381, 'الليبرو', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274041, 382, '1', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274042, 382, '9.5', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274043, 383, 'الارسال', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274044, 384, 'التعاونى', 738, 49, 0, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274045, 385, 'التمرير', 738, 49, 1, '2019-03-14 09:30:23', '2019-03-14 09:30:25'),
(274059, 467, '1354', 762, 51, 0, '2019-03-14 15:48:29', '2019-03-14 15:48:29'),
(274060, 468, 'int main(){\r\nksdj]\\sa\r\nd\r\nsdaf\r\n}', 762, 51, 3, '2019-03-14 15:48:29', '2019-03-14 15:50:21'),
(274061, 469, '1360', 762, 51, 0, '2019-03-14 15:48:29', '2019-03-14 15:48:29'),
(274062, 470, '1363', 762, 51, 0, '2019-03-14 15:48:29', '2019-03-14 15:48:29'),
(274143, 468, 'cvx', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-26 09:40:27'),
(274144, 469, '1359', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(274145, 470, '1363', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(274146, 475, '1383', 86, 51, 2, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(274147, 476, 'xczv', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-17 09:29:55'),
(274148, 477, 'xczvz cdsa', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-26 09:40:27'),
(274149, 478, '1386', 86, 51, 1, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(274150, 479, 'asv\r\nasdg\r\nsadgf\r\nsagd', 86, 51, 0, '2019-03-15 10:18:04', '2019-03-17 09:29:55'),
(274151, 480, '1393', 86, 51, 1, '2019-03-15 10:18:04', '2019-03-15 10:18:04'),
(282262, 467, '1355', 907, 51, 2, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282263, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n     int x,y,gcd = 1;\r\n     cin >> x >> y;\r\n      if(x>y){ int t = y;y = x;x = t;}\r\n      for(Int i  = x;i>0;i--){  \r\n             if(x%i == 0 && y%i == 0){\r\n                     gcd = i;break;}\r\n       }\r\n      cout << gcd;\r\n}', 907, 51, 4, '2019-03-16 06:38:40', '2019-03-26 09:49:58'),
(282264, 469, '1361', 907, 51, 2, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282265, 470, '1364', 907, 51, 0, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282266, 475, '1383', 907, 51, 2, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282267, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n        int i = 0;\r\n        int count = 0;\r\n        while(count < 10){\r\n               if(i%2 == 1) cout << i << endl;\r\n                count++;i++;\r\n       }                       \r\n}', 907, 51, 1, '2019-03-16 06:38:40', '2019-03-26 09:49:58'),
(282268, 478, '1386', 907, 51, 1, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282269, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\n       int sumOdd = 0,sumEven = 0;\r\n       for(int i = 0;i<100;i++){\r\n              if(i%2 == 0 )   sumEven += i;\r\n               else sumOdd += i;\r\n       }\r\n       cout << \"sum of the odd number less than 100 is = \"  << sumOdd << endl;\r\n       cout <<  \"sum of the Even number less than 100 is = \"    << sumEven << endl;      \r\n}', 907, 51, 2, '2019-03-16 06:38:40', '2019-03-17 09:28:41'),
(282270, 480, '1393', 907, 51, 1, '2019-03-16 06:38:40', '2019-03-16 06:38:41'),
(282271, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n      int n,f = 1;\r\n      cin >> n;\r\n      while(n>0){\r\n            f*= i;n--;\r\n       }\r\n}', 907, 51, 0, '2019-03-16 06:38:40', '2019-03-17 09:28:41'),
(282957, 467, '1355', 924, 51, 2, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282959, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,m;\r\ncin>> n >> m;\r\nint x;\r\nif( n <=m)\r\n{\r\nx=n;\r\n}\r\nelse\r\n{\r\nx=m;\r\n}\r\nint y;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nif( m % i == 0 && n % i == 0)\r\n{\r\ny=i;\r\n}\r\n}\r\ncout<< y;\r\n}', 924, 51, 4, '2019-03-16 06:40:48', '2019-03-26 09:51:25'),
(282960, 469, '1361', 924, 51, 2, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282961, 470, '1362', 924, 51, 2, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282962, 475, '1385', 924, 51, 0, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282963, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 == 1){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 924, 51, 1, '2019-03-16 06:40:48', '2019-03-26 09:51:25'),
(282964, 478, '1386', 924, 51, 1, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282965, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint e=0,o=0;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif( i % 2 == 0)\r\n{\r\ne=e+i;\r\n}\r\nelse\r\n{\r\no=o+i;\r\n}\r\n}\r\ncout<<\"even = \"<< e <<\"/n\"<<\"odd = \" << o<<\"/n\";\r\n}', 924, 51, 2, '2019-03-16 06:40:48', '2019-03-17 09:31:08'),
(282966, 480, '1393', 924, 51, 1, '2019-03-16 06:40:48', '2019-03-16 06:40:48'),
(282967, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>> n;\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<< \" Factorial is\"<< f<<endl;\r\n}', 924, 51, 2, '2019-03-16 06:40:48', '2019-03-17 09:31:08'),
(284040, 467, '1355', 897, 51, 2, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284041, 468, 'int main(){\r\n      int num1, num2, temp , gcd =1;\r\n      cin>>num1>>num2;\r\n     if(num1>num2){\r\n           temp = num1;\r\n           num1 = num2;\r\n          num2 = temp;\r\n   }              \r\n     for(int i = 2 ; i<=num1;i++){\r\n            if(num1%i == 0 && num2%i == 0) gcd = i;\r\n     }\r\n     cout<<\"the gcd = \" <<gcd<<endl;     \r\n}', 897, 51, 4, '2019-03-16 06:43:43', '2019-03-26 09:54:59'),
(284042, 469, '1360', 897, 51, 0, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284043, 470, '1364', 897, 51, 0, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284044, 475, '1385', 897, 51, 0, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284045, 477, 'int main(){\r\nint i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;}\r\ni++;\r\n}\r\n}', 897, 51, 2, '2019-03-16 06:43:43', '2019-03-26 09:54:59'),
(284046, 478, '1386', 897, 51, 1, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284047, 479, 'int main(){\r\n      int o=0, e=0;\r\n      for(int i = 0 ; i<100;i++){\r\n            if(i%2)o+=i;\r\n           else e+=i;\r\n     }\r\n     cout<<\"the odd sum = \" <<o<<endl;\r\n     cout<<\"the even sum = \" <<e<<endl;\r\n}', 897, 51, 1, '2019-03-16 06:43:43', '2019-03-17 09:32:31'),
(284048, 480, '1393', 897, 51, 1, '2019-03-16 06:43:43', '2019-03-16 06:43:43'),
(284049, 481, 'int main(){\r\n      int f=1, n;\r\n     cout<<\"please enter the number to find its factorial \\n\";\r\n     cin>>n;\r\n      for(int i = 1 ; i<=n;i++)f*=i;\r\n     cout<<\"the factorial = \" <<f;\r\n}', 897, 51, 2, '2019-03-16 06:43:43', '2019-03-17 09:32:31'),
(286274, 467, '1355', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286275, 468, '#include <iostream>\r\n#include <algorithm>\r\nusing name space std;\r\nint main() {\r\n        int a,b;\r\n        cin>>a>>b;\r\n        if (a<b){\r\n             swap(a,b);\r\n        }\r\n        int cnt=0;\r\n        for (int i=1;i<=b;i++){\r\n              if (a%i==0 &&b%i==0){\r\n                     cnt=i;\r\n               }\r\n        }\r\n        cout << \"Greatest common divisor is : \"<<cnt <<endl;\r\n        \r\n}', 943, 51, 4, '2019-03-16 06:48:46', '2019-03-26 09:56:20'),
(286276, 469, '1361', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286277, 470, '1362', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286278, 475, '1383', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286279, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<10){\r\n       if(i%2==1){\r\n             cout <<i <<endl;\r\n             count++;\r\n       }\r\n       i++;\r\n}', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-26 09:56:20'),
(286280, 478, '1386', 943, 51, 1, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286281, 479, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n        int sumo=0,sume=0;\r\n        for (int i=1;i<100;i++){\r\n               if (i%2==0){\r\n                   sume+=i;\r\n               }\r\n               else {\r\n                   sumo+=i;\r\n               }\r\n        }\r\n         cout << \"Sum of Odd = \" <<sumo << endl;\r\n         cout << \"Sum of Even = \"<<sume<<endl;\r\n}', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-17 09:33:50'),
(286282, 480, '1393', 943, 51, 1, '2019-03-16 06:48:46', '2019-03-16 06:48:47'),
(286283, 481, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n          int sum=1;\r\n          for (int i=1;i<=N;i++){\r\n                sum*=i;\r\n          }\r\n          cout << \"Factorial = \"<<sum << endl;\r\n}', 943, 51, 2, '2019-03-16 06:48:46', '2019-03-17 09:33:50'),
(286987, 467, '1355', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286988, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main (){\r\nint a,b,c;\r\ncin>>a>>b;\r\nfor(int i=1;i<=a;i++)\r\n{if(a%i==0 && b%i==0)\r\nc=i;}\r\ncout<<c;}', 983, 51, 3, '2019-03-16 06:49:58', '2019-03-28 15:04:38'),
(286989, 469, '1361', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286990, 470, '1362', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286991, 475, '1383', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286992, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2 != 0)\r\ncout<<i<<endl;\r\ncount++;}\r\n}', 983, 51, 1, '2019-03-16 06:49:58', '2019-03-28 15:04:38'),
(286993, 478, '1386', 983, 51, 1, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286994, 479, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumeven=0 ,sumodd=0;\r\nfor(int i=1;i<100;i+=2)\r\n{sumodd=sumodd+i;\r\nsumeven=sumeven+i+1;}\r\ncout<<\"sumodd = \"<<sumodd<<endl;\r\ncout<<\"sumeven= \"<<sumeven<<endl;', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-17 09:34:40'),
(286995, 480, '1393', 983, 51, 1, '2019-03-16 06:49:58', '2019-03-16 06:49:59'),
(286996, 481, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++){\r\nf=f*i;}\r\ncout<<\"factorial of \"<<n<<\"=\"<<f;    \r\n}', 983, 51, 2, '2019-03-16 06:49:58', '2019-03-17 09:34:40'),
(287560, 467, '1355', 976, 51, 2, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287561, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x,y,z=0;\r\ncin >>x>>y;\r\nfor (int i=x;i>0;i--)\r\n{\r\nif (x%i==0&&y%i==0)\r\n{ if (z<i) \r\n{z=i}\r\n}\r\n}\r\ncout <<\"the GCD is \"<<z<<endl;\r\n}', 976, 51, 4, '2019-03-16 06:51:09', '2019-03-28 15:06:12'),
(287562, 469, '1361', 976, 51, 2, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287563, 470, '1364', 976, 51, 0, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287564, 475, '1385', 976, 51, 0, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287565, 477, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nfor (int i=0;i<10;i++)\r\n{\r\nif (i%2!=0){cout <<i<<endl;}\r\n}\r\n}', 976, 51, 1, '2019-03-16 06:51:09', '2019-03-28 15:06:13'),
(287566, 478, '1386', 976, 51, 1, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287567, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x=0,z=0;\r\nfor (i=0;i<=100;i+=2)\r\n{ x=x+i }\r\ncout <<\"the sum of even numbers separately that their values are less than 100\"<<x<<endl;\r\nfor (i=1;i<=100;i+=2)\r\n{ z=z+i }\r\ncout << \"the sum of odd numbers separately that their values are less than 100\"<<z<<endl;\r\n}', 976, 51, 2, '2019-03-16 06:51:09', '2019-03-17 09:35:58'),
(287568, 480, '1393', 976, 51, 1, '2019-03-16 06:51:09', '2019-03-16 06:51:09'),
(287569, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x,z=1;\r\ncin >>x;\r\nfor (int i=x;i>0;i--)\r\n{\r\nz=z*i;\r\n}\r\ncout <<z;\r\n}', 976, 51, 2, '2019-03-16 06:51:09', '2019-03-17 09:35:58'),
(289754, 467, '1355', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289755, 468, '#include <iostream>\r\n#include <cmath>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n    int x,y;\r\n    cin>>x>>y;\r\n    if(x>y)\r\n       swap(x,y);\r\nif(x == 0&&y == 0)\r\n{\r\ncout<<\"the gcd is infinity \"<<endl;\r\nreturn 0;\r\n}\r\nint gcd;\r\nfor(int i = 1;i<=x;i++)\r\n{\r\nif(x%i == 0&&y%i == 0)\r\ngcd = i;\r\n\r\n}\r\ncout<<\"The GCD is \"<<gcd<<endl;\r\nreturn 0;\r\n}', 1024, 51, NULL, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289756, 469, '1361', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289757, 470, '1362', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289758, 475, '1383', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289759, 477, '#include<iostream>\r\n#include<cmath>\r\n#include <algorithm>\r\nusing namespace std;\r\nint main()\r\n{\r\n   int i = 1;\r\n   int cnt = 0;\r\n   while(cnt<10)\r\n{\r\n    if(i&1)\r\n{\r\n      cnt++;\r\n      cout<<i<<endl;\r\n}\r\ni++;\r\n}\r\nreturn 0;\r\n}', 1024, 51, NULL, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289760, 478, '1386', 1024, 51, 1, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289761, 479, '#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\nusing namespace std;\r\nint main()\r\n{\r\n  int sumo = 0,sume = 0;\r\nfor(int i = 1;i<100;i++)\r\n{\r\n  if(i&1)\r\n    sumo+=i;\r\nelse\r\nsume+=i;\r\n}\r\ncout<<\"the sum of the even numbers is \"<<sume<<endl;\r\ncout<<\"the sum of the odd numbers is \"<<sumo<<endl;\r\nreturn 0;\r\n}', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-17 09:48:23'),
(289762, 480, '1393', 1024, 51, 1, '2019-03-16 06:56:08', '2019-03-16 06:56:08'),
(289763, 481, '#include<iostream>\r\n#include<cmath>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main()\r\n{\r\nint fact = 1;\r\nint x;\r\ncin>>x;\r\nfor(int i = 1;i<=x;i++)\r\nfact*=i;\r\ncout<<\"the factorial of \"<<x<<\" is \"<<fact<<endl;\r\nreturn 0;\r\n}', 1024, 51, 2, '2019-03-16 06:56:08', '2019-03-17 09:48:23'),
(290734, 467, '1355', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290735, 468, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\n	int x;\r\n	int y;\r\n	int G;\r\n        cout<<\"enter the numbers \";\r\n	cin >> x;\r\n	cin >> y;\r\n        if(x>=y)\r\n                G=y;\r\n           else \r\n                  G=x;\r\n           while(G>0){\r\n           if((x%G==0)&&(y%G==0))\r\n                    break;\r\n           else \r\n                  G--;\r\n        }\r\n      cout<<\"the GCD = \"<<G<<endl;\r\n}', 910, 51, 4, '2019-03-16 06:58:03', '2019-03-28 15:06:57'),
(290737, 469, '1361', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290739, 470, '1362', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290741, 475, '1383', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290743, 477, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\nint i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\ni++;\r\n}\r\n}', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-28 15:06:57'),
(290745, 478, '1386', 910, 51, 1, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290747, 479, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\nint so=0;\r\nint se=0;\r\nfor(int i=0;i<100;i++){\r\nif(i%2==0)\r\nse+=i;\r\nelse\r\nso+=i;\r\n}\r\ncout<<\"the sum of the odd = \"<<so<<endl;\r\ncout<<\"the sum of the even = \"<<se<<endl;\r\n}', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-17 10:26:48'),
(290749, 480, '1393', 910, 51, 1, '2019-03-16 06:58:03', '2019-03-16 06:58:03'),
(290751, 481, '#include<iostream>\r\nusing namespace std;\r\nint main() {   \r\nint n;\r\ncout<<\"enter the number \";\r\ncin>>n;\r\nint f=1;\r\nwhile(n>0){\r\nf*=n;\r\nn--;\r\n}\r\ncout<<\"the factorial of the number = \"<<f<<endl;\r\n}', 910, 51, 2, '2019-03-16 06:58:03', '2019-03-17 10:26:48'),
(293918, 467, '1354', 898, 51, 0, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293919, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,x;\r\ncout<<\"enter the two numbers\"<<endl;\r\ncin>>n>>endl;\r\ncin>>x>>endl;\r\nfor(int i=1;i<=n&&i<=x;i++){\r\nif(n%i==0&&x%i==0)\r\ngcd=i;\r\n\r\n}\r\ncout<<\"gcd\"<<gcd<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n                          }', 898, 51, 4, '2019-03-16 07:03:20', '2019-03-28 15:08:07'),
(293920, 469, '1361', 898, 51, 2, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293921, 470, '1363', 898, 51, 0, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293922, 475, '1383', 898, 51, 2, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293923, 477, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\nint i=0;\r\ncout<<i<<endl;\r\nint count=0;\r\nwhile(count<20)\r\n{     if(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\nreturn 0;\r\n}', 898, 51, 1, '2019-03-16 07:03:20', '2019-03-28 15:08:08'),
(293924, 478, '1386', 898, 51, 1, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293925, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumeven ,sumodd ,n;\r\nsumeven=0;\r\nsumodd=0;\r\nn=100;\r\nfor(int i=1;i<100;i++){ \r\nif(i%2==0){\r\nsumeven+=i;\r\ncout<<\"sumeven=\"<<sumeven<<endl;\r\n}\r\nelse{\r\nsumodd+=i;\r\ncout<<\"sumodd=\"<<sumodd<<endl;\r\n}\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 898, 51, 1, '2019-03-16 07:03:20', '2019-03-17 10:28:09'),
(293926, 480, '1393', 898, 51, 1, '2019-03-16 07:03:20', '2019-03-16 07:03:20'),
(293927, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n,factorial;\r\ncout<<\" enter the number\"<<endl;\r\ncin>>n>>endl;\r\nfactorial=1;\r\nfor(int i=1;i<=n;i++){\r\nfactorial=factorial*i;\r\n}\r\ncout<<\"the facorial=\"<<factorial<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 898, 51, 2, '2019-03-16 07:03:20', '2019-03-17 10:28:09'),
(293957, 467, '1354', 913, 51, 0, '2019-03-16 07:03:25', '2019-03-16 07:03:26'),
(293958, 468, '#include <iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint n1 , n2 , gcd ;\r\ncin>>n1>>n2;\r\nfor(int i=1; i<=n1&& i<=n2 ; i++){\r\nif(n1%i==0 && n2%i==0)\r\ngcd=i;\r\n}\r\ncout<<\"GCD = \"<<gcd;\r\nreturn 0;\r\n}', 913, 51, 4, '2019-03-16 07:03:25', '2019-03-28 15:09:43'),
(293959, 469, '1361', 913, 51, 2, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(293960, 470, '1363', 913, 51, 0, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(293961, 475, '1383', 913, 51, 2, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(293962, 477, '#include <iostream>\r\nusing namespace std;\r\nint main() {\r\nint i =1;\r\nwhile(i <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ni++;\r\n}\r\n}\r\nreturn 0;\r\n}', 913, 51, 0, '2019-03-16 07:03:26', '2019-03-28 15:09:43'),
(293963, 478, '1386', 913, 51, 1, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(293964, 479, '#include <iostream>\r\nusing namespace std;\r\nint main() {\r\nint even=0 , odd=0 ;\r\nfor(int j=2 ; j<100 ; j=+2){\r\neven=even+j;\r\n}\r\nfor(int i=1 ; i<100 ; i=+2){\r\nodd=odd+i;\r\n}\r\ncout<<\"Sum of Even = \"<<even<<endl;\r\ncout<<\"Sum of Odd = \"<<odd<<endl; \r\nreturn 0;\r\n}', 913, 51, 2, '2019-03-16 07:03:26', '2019-03-17 10:29:57'),
(293965, 480, '1393', 913, 51, 1, '2019-03-16 07:03:26', '2019-03-16 07:03:26'),
(293966, 481, '#include <iostream>\r\nusing namespace std;\r\nint main() {\r\nint n , fact=1 ;\r\ncin>>n;\r\nfor(int i=n ; i>=1 ; i--){\r\nfact=fact*i ; }\r\ncout<<\"Factorial = \"<<fact;\r\nreturn 0;\r\n}', 913, 51, 2, '2019-03-16 07:03:26', '2019-03-17 10:29:57'),
(294397, 467, '1355', 1019, 51, 2, '2019-03-16 07:04:12', '2019-03-16 07:04:13'),
(294399, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int n1,n2,gcd; \r\n cin>>n1>>n2;\r\n if (n1==n2)\r\n  {\r\n  gcd=n1;      //or gcd=n2;   \r\n  }\r\n  else if (n1>n2)\r\n  for (int i=n2;i>=1;i--) \r\n  {\r\n      if (n2%i==0)\r\n      {\r\n           if (n1%i==0)\r\n            {\r\n                  gcd=i;\r\n                  break;\r\n            }\r\n      }\r\n  }\r\n  else \r\n  for (int i=n1;i>=1;i--) \r\n  {\r\n   if (n1%i==0)\r\n      {\r\n           if (n2%i==0)\r\n            {\r\n                  gcd=i;\r\n                  break;\r\n            }\r\n      }\r\n  }\r\ncout<<gcd;\r\nreturn 0;\r\n}', 1019, 51, 4, '2019-03-16 07:04:12', '2019-03-28 15:11:27'),
(294400, 469, '1361', 1019, 51, 2, '2019-03-16 07:04:12', '2019-03-16 07:04:13'),
(294401, 470, '1362', 1019, 51, 2, '2019-03-16 07:04:13', '2019-03-16 07:04:13'),
(294402, 475, '1383', 1019, 51, 2, '2019-03-16 07:04:13', '2019-03-16 07:04:13'),
(294403, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}\r\nreturn 0;\r\n}', 1019, 51, 1, '2019-03-16 07:04:13', '2019-03-28 15:11:27'),
(294404, 478, '1386', 1019, 51, 1, '2019-03-16 07:04:13', '2019-03-16 07:04:13'),
(294405, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum_even=0;\r\nint sum_odd=0;\r\nfor (int i=0;i<100;i++)\r\n{\r\n     if (i%2==0)\r\n       sum_even+=i;\r\n    else\r\n       sum_odd+=i;\r\n}\r\ncout<<sum_odd<<endl<<sum_even;  \r\nreturn 0;  \r\n}', 1019, 51, 2, '2019-03-16 07:04:13', '2019-03-17 10:30:31'),
(294406, 480, '1393', 1019, 51, 1, '2019-03-16 07:04:13', '2019-03-16 07:04:13'),
(294407, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\nlong long factorial=1;\r\ncin>>n;\r\nfor (int i=2;i<=n;i++)\r\n{\r\n    factorial*=i;\r\n}\r\ncout<<factorial;        \r\nreturn 0;\r\n}', 1019, 51, 2, '2019-03-16 07:04:13', '2019-03-17 10:30:31'),
(294490, 467, '1355', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294491, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main() \r\n{\r\nint x,y,z;\r\ncin>>x>>y;\r\nif (x>y)\r\n{swap(x,y);}\r\nfor(int i=1;i<=x;i++)\r\n{\r\nif (x%i==0&&y%i==0)\r\nz=i;\r\n}\r\ncout<<z;\r\nsystem(\"pause\");\r\n}', 1054, 51, 4, '2019-03-16 07:04:26', '2019-03-28 15:11:54'),
(294492, 469, '1361', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294493, 470, '1362', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294494, 475, '1383', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294495, 477, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint i=0;\r\nint count =0;\r\nwhile(count<10){\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\ni++;\r\n\r\nsystem(\"pause\");\r\n}', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-28 15:11:54'),
(294496, 478, '1386', 1054, 51, 1, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294497, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\nint sumodd,sumeven;\r\n{\r\nfor(int i=0  ;i<=100;i++){\r\nif (i%2==0)\r\n{sumeven+=i;}\r\nelse {sumodd+=i;}   \r\n}\r\ncout<<\"sum of even = \"<<sumeven<<endl;\r\ncour<<\"sum of odd = \"<<sumodd<<endl;    \r\nsystem(\"pause\");\r\n}', 1054, 51, 1, '2019-03-16 07:04:26', '2019-03-17 10:31:39'),
(294498, 480, '1393', 1054, 51, 1, '2019-03-16 07:04:26', '2019-03-16 07:04:27'),
(294499, 481, 'int n,fac=1;\r\nfor (int i=1;i<=n;i++)\r\n{\r\nfac*=i;\r\n}\r\ncout<<fac;', 1054, 51, 2, '2019-03-16 07:04:26', '2019-03-17 10:31:39'),
(294510, 467, '1355', 909, 51, 2, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294511, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nsystem (\"pause\")\r\n}', 909, 51, 0, '2019-03-16 07:04:30', '2019-03-28 15:12:53'),
(294512, 469, '1360', 909, 51, 0, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294513, 470, '1362', 909, 51, 2, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294514, 475, '1383', 909, 51, 2, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294515, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n      int i=0;\r\nint count =0;\r\nwhile (count<10)\r\n{\r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}     \r\nsystem(\"pause\");\r\n}', 909, 51, 0, '2019-03-16 07:04:30', '2019-03-28 15:12:53'),
(294516, 478, '1386', 909, 51, 1, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294517, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0,sumodd=0;\r\nfor(int i=0;i<=100;i++)\r\n{\r\nif(i%2==0)\r\nsumeven+=i;\r\nelse \r\nsumodd+=i;\r\n}\r\ncout<<sumeven<<endl<<sumodd<<endl;                                                         \r\nsystem(\"pause\");                                             \r\n}', 909, 51, 1.5, '2019-03-16 07:04:30', '2019-03-17 10:32:36'),
(294518, 480, '1393', 909, 51, 1, '2019-03-16 07:04:30', '2019-03-16 07:04:31'),
(294519, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()        \r\n{\r\nint x;\r\ncin>>x;\r\nfor(int i=1;i<=x;i++)\r\n{\r\ni=i*x\r\n}\r\ncout<<i<<endl; \r\nsystem(\"pause\");\r\n}', 909, 51, 0, '2019-03-16 07:04:30', '2019-03-17 10:32:36'),
(294821, 467, '1354', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294822, 468, 'hhihi', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-28 15:13:19'),
(294823, 469, '1360', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294824, 470, '1363', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294825, 475, '1383', 1018, 51, 2, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294826, 477, 'int i=1;\r\nint count =1  ;\r\nwhile(count<10)\r\n{\r\n {if(i%3==0)\r\ncout<<i<<endle;\r\ncount++\r\n}', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-28 15:13:19'),
(294827, 478, '1386', 1018, 51, 1, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294828, 479, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{  int number;\r\ncin>>number;\r\nint sum even=0;\r\nint sum odd;\r\nfor(int i=1;i<100;i++)\r\n{\r\nsum odd=sum odd *i;\r\nsum even=sum even *i \r\nif(i%2==0)\r\ncout<<\"sum\"<<sum even<<\"\\n\"; \r\nelse if(i%3==0) \r\n   \r\ncout<<\"sum odd\"<<sum odd<<\"\\n>;\r\n}\r\nreturn o ;\r\n}', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-17 10:33:52'),
(294829, 480, '1390', 1018, 51, 0, '2019-03-16 07:05:21', '2019-03-16 07:05:22'),
(294830, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint number;\r\nint factorial=1;\r\ncin >> number r;\r\nfor(int i=1; i<=number;i++) \r\n \r\n{factorial=factorial*i;\r\ncout <<\"factorial\"<<factorial<<\"\\n\";\r\n\r\n        }\r\nreturn 0;\r\n}', 1018, 51, 1.5, '2019-03-16 07:05:21', '2019-03-17 10:33:53'),
(295933, 467, '1355', 922, 51, 2, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295934, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main\r\n{ int x.y;\r\ncin >>x>>y;\r\n\r\n\r\n\r\n}', 922, 51, 0, '2019-03-16 07:07:50', '2019-03-28 15:13:39'),
(295935, 469, '1361', 922, 51, 2, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295936, 470, '1362', 922, 51, 2, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295937, 475, '1384', 922, 51, 0, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295938, 477, 'int i=0;\r\n  \r\n   int count=0;\r\n  while( count <10)\r\n    {\r\n       if(i%2!=0)\r\n         cout <<i<<endl;\r\n         count++;\r\n     }', 922, 51, 0, '2019-03-16 07:07:50', '2019-03-28 15:13:39'),
(295939, 478, '1387', 922, 51, 0, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295940, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main\r\n{\r\n  int sum1=0;\r\n   int sum2=0;\r\n   for(int i=1; i<=100 ; i++)\r\n    {\r\n       if (i%2==0)\r\n         {\r\n           sum1=sum1+i;\r\n          }\r\n        else if \r\n         {\r\n           sum2=sum2+i;\r\n         }\r\n       }cout <<sum1<<endl;\r\n        cout <<sum2<<endl;\r\n }', 922, 51, 2, '2019-03-16 07:07:50', '2019-03-17 10:35:13'),
(295941, 480, '1393', 922, 51, 1, '2019-03-16 07:07:50', '2019-03-16 07:07:50'),
(295942, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main\r\n{\r\n  int n;\r\n  cin <<n;\r\n   int f=1;\r\n  for (int i=1; i <=n; i++)\r\n    {\r\n       f=f*i;\r\n       f=f+1; \r\n     }\r\n     cout <<f;\r\n }', 922, 51, 0, '2019-03-16 07:07:50', '2019-03-17 10:35:13'),
(296069, 467, '1354', 967, 51, 0, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296070, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncout<<\"Enter two number \";\r\ncin>>x>>y;\r\n\r\n\r\nsystem (\"pause\");\r\n}', 967, 51, 0, '2019-03-16 07:08:02', '2019-03-28 15:14:02'),
(296071, 469, '1360', 967, 51, 0, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296072, 470, '1362', 967, 51, 2, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296073, 475, '1383', 967, 51, 2, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296074, 477, 'int i==0;\r\nint count==0\r\nwhile(count<20){\r\nif(i%2==1)                                                                                                            \r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 967, 51, 0, '2019-03-16 07:08:02', '2019-03-28 15:14:02'),
(296075, 478, '1386', 967, 51, 1, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296076, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint s_odd=0,s_even=0;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(i%2==0)\r\n{\r\ns_even+=i;\r\n}\r\nelse\r\n{\r\ns_odd+=i;\r\n}\r\n}\r\ncout<<\"the sum of even=\"<<s_even<<\"\\n\"<<\"the sum of odd=\"<<s_odd<<\"\\n\";\r\n\r\nsystem(\"pause\");\r\n}', 967, 51, 2, '2019-03-16 07:08:02', '2019-03-17 10:35:52'),
(296077, 480, '1393', 967, 51, 1, '2019-03-16 07:08:02', '2019-03-16 07:08:02'),
(296078, 481, 'for(int i=2;i<=n;i++;)\r\n{\r\nf*=i;\r\n}\r\ncout<<\"the factorial of\"<<n<<\"=\"<<f<<\"n\";', 967, 51, 2, '2019-03-16 07:08:02', '2019-03-17 10:35:52'),
(296668, 467, '1355', 1048, 51, 2, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296669, 468, '#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\nint main( ){\r\nint x,y;\r\ncin>>x>>y;\r\nif(x<=y){\r\nfor(int i=x ; i>0 ; i--){\r\nif( (x%i==0) && (y%i==0) ){\r\ncout<<i<<endl;\r\nreturn 0;}      \r\n}     \r\n} \r\nelse{\r\n         \r\nfor(int i=y ; i>0 ; i--){\r\nif( (x%i==0) && (y%i==0) ){\r\ncout<<i<<endl;\r\nreturn 0;}    \r\n}\r\n}\r\n}', 1048, 51, 4, '2019-03-16 07:09:19', '2019-03-28 15:14:36'),
(296670, 469, '1361', 1048, 51, 2, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296671, 470, '1363', 1048, 51, 0, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296672, 475, '1385', 1048, 51, 0, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296673, 477, '#include<iostream>\r\nusing namespace std;\r\nint main( ){\r\nint i=1;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2 != 0){\r\ncout<<i<<endl;}\r\ni++;\r\ncount++;\r\n}\r\n}', 1048, 51, 1, '2019-03-16 07:09:19', '2019-03-28 15:14:36'),
(296674, 478, '1386', 1048, 51, 1, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296675, 479, '#include<iostream>\r\nusing namespace std;\r\nint main( ){\r\nint odd=0;\r\nint even=0;\r\nfor(int i=1 ; i<100 ; i++){\r\nif(i%2 ==0){\r\neven+=i ;}\r\nelse{\r\nodd+=i ; }\r\n}\r\ncout<<\"the sum of odd number = \"<<odd<<endl;\r\ncout<<\"the sum of even number = \"<<even<<endl;\r\nreturn 0; \r\n}', 1048, 51, 2, '2019-03-16 07:09:19', '2019-03-17 11:40:31'),
(296676, 480, '1393', 1048, 51, 1, '2019-03-16 07:09:19', '2019-03-16 07:09:19'),
(296677, 481, '#include<iostream>\r\nusing namespace std;\r\nint main( ){\r\nint n;\r\nint fact =1;\r\ncin>>n;\r\nfor(int i=1 ; i<=n ; i++){\r\nfact *=i;\r\n}\r\ncout<<fact<<endl;\r\nreturn 0 ;\r\n}', 1048, 51, 2, '2019-03-16 07:09:19', '2019-03-17 11:40:31'),
(297344, 467, '1355', 1000, 51, 2, '2019-03-16 07:10:28', '2019-03-16 07:10:28'),
(297345, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,z;\r\ncin >>x>>y;\r\nif(x>=y){\r\nz=y;\r\nfor (int i=z;z>1;i--){\r\nif(x%z==0&&y%z==0){\r\ncout <<z;\r\nbreak;}\r\n}}\r\nelse if(x<y){\r\nz=x;\r\nfor (int i=z;z>1;i--){\r\nif(x%z==0&&y%z==0){\r\ncout <<z;\r\nbreak;}\r\n}}\r\n\r\n}', 1000, 51, 4, '2019-03-16 07:10:28', '2019-03-28 15:15:03'),
(297346, 469, '1361', 1000, 51, 2, '2019-03-16 07:10:28', '2019-03-16 07:10:28'),
(297347, 470, '1364', 1000, 51, 0, '2019-03-16 07:10:28', '2019-03-16 07:10:28'),
(297348, 475, '1385', 1000, 51, 0, '2019-03-16 07:10:28', '2019-03-16 07:10:28'),
(297349, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{ int count=1;\r\nwhile(count<10){\r\nif(count%2!=0)\r\ncout <<count<<endl;\r\ncount++;}\r\n}', 1000, 51, 0, '2019-03-16 07:10:28', '2019-03-28 15:15:03'),
(297350, 478, '1386', 1000, 51, 1, '2019-03-16 07:10:28', '2019-03-16 07:10:28'),
(297351, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y=0,z=0;\r\nfor(int i=1;i<=100;i++){\r\nif(i%2==0)\r\nz=z+i;\r\nelse \r\ny=y+i;\r\n}\r\ncout << \"even = \"<<z<<endl;\r\ncout << \" odd = \"<<y<<endl;\r\n}', 1000, 51, 1.5, '2019-03-16 07:10:28', '2019-03-17 11:38:55'),
(297352, 480, '1393', 1000, 51, 1, '2019-03-16 07:10:28', '2019-03-16 07:10:29'),
(297353, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){int x,z=1;\r\ncin>>x;\r\nfor(int i=2;i<=x;i++){\r\nf=f*i;\r\n}\r\ncout <<f;\r\n\r\n}', 1000, 51, 1, '2019-03-16 07:10:28', '2019-03-17 11:38:55'),
(297524, 467, '1354', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297525, 468, '#include<iostream>\r\nusing namespace std;\r\nintmain()\r\n{\r\nint n1,n2;\r\ncin>>n1>>n2;\r\nfor(inti=1 ;i<=n1 ;i++){\r\nfor(intk=1 ;k<=n2 ;k++){\r\nn1=n1/i;\r\nn2=n2/k;\r\n}}\r\nif(i<k)\r\ncout<<i;\r\nelse\r\ncout<<k;\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-28 15:19:09'),
(297526, 469, '1360', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297527, 470, '1364', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297528, 475, '1385', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297529, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n                                                                    inti=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2!=0){ \r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}                    \r\nsestem(\"pause\";)\r\nreturn 0;\r\n\r\n\r\n}', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-28 15:19:09'),
(297530, 478, '1386', 1059, 51, 1, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297531, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,sum=0;\r\ncin>>n;\r\nfor(inti=0;i<100 ;i++)\r\n{ \r\nif(n%i!=0)\r\n{\r\nsum=sum+n;\r\n}\r\ncout<<\"sum=\"<<sum;\r\n}\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n}', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-17 11:39:54'),
(297532, 480, '1392', 1059, 51, 0, '2019-03-16 07:10:55', '2019-03-16 07:10:55'),
(297533, 481, 'intf;\r\ncin>>f;\r\nfor(inti=1;i<=n;i++)\r\n{\r\nf=f*i\r\n\r\n}\r\ncout<<\"f=\"<<f*i ;', 1059, 51, 1, '2019-03-16 07:10:55', '2019-03-17 11:39:54'),
(297582, 467, '1356', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297583, 468, '#include<iostram>\r\nusing namespace std;\r\nint main()\r\n{\r\nint a,b\r\ncin>>a>>b;\r\ncout<<\"entre two number\"endl;\r\n\r\n\r\n\r\n\r\n\r\n}', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-28 15:19:52'),
(297584, 469, '1360', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297585, 470, '1364', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297586, 475, '1383', 1055, 51, 2, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297587, 477, 'int i=0\r\nint count=0\r\nwhile(count<20) \r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\ncount++    \r\n}', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-28 15:19:53'),
(297588, 478, '1386', 1055, 51, 1, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297589, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfor(int n=0; n<100; n+2)\r\n{\r\nn+=n+2;\r\ncout<<n;\r\n}\r\nfor(int n=1; n<100; n+2;)\r\nn+=n+2;\r\ncout<< n\r\n}\r\n\r\n\r\n\r\n\r\n}', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-17 11:41:09'),
(297590, 480, '1390', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-16 07:11:04'),
(297591, 481, 'for(int n=   ; n<=1   ; n--    ;)\r\nint d;\r\nd=n;\r\ncout<<n;', 1055, 51, 0, '2019-03-16 07:11:04', '2019-03-17 11:41:09'),
(297678, 467, '1355', 1064, 51, 2, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297679, 468, '#include <iostream>\r\nusing namespace std;\r\nint gcd(int a, int b) { \r\n   if (b == 0) \r\n      return a; \r\n   return gcd(b, a % b);  \r\n} \r\nint main() { \r\n   int a , b ; \r\n   cout<<\"GCD of \"<< a <<\" and \"<< b <<\" is \"<< gcd(a, b); \r\n   return 0; \r\n}', 1064, 51, 4, '2019-03-16 07:11:15', '2019-03-28 15:21:00'),
(297680, 469, '1358', 1064, 51, 0, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297681, 470, '1362', 1064, 51, 2, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297682, 475, '1382', 1064, 51, 0, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297683, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0||i%2>0){\r\ncount+=i;\r\n}\r\ncout << count << endl;\r\n}', 1064, 51, 0, '2019-03-16 07:11:15', '2019-03-28 15:21:00'),
(297684, 478, '1386', 1064, 51, 1, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297685, 479, '#include <iostream> \r\nusing namespace std;\r\nint main(){\r\nint n=100;\r\nint sum_even=0;\r\nint sum_odd=0;\r\nwhile (n<=100){\r\nif(n%2==0)\r\nsum_even+=n;\r\nif (n%2!=0)\r\nsum_odd+=n;\r\n}\r\ncout <<\"sum of even numbers = \"<<sum_even<<endl;\r\ncout <<\"sum of odd numbers =\"<<sum_odd<<endl;\r\nreturn 0;\r\n}', 1064, 51, 1, '2019-03-16 07:11:15', '2019-03-17 11:44:44'),
(297686, 480, '1393', 1064, 51, 1, '2019-03-16 07:11:15', '2019-03-16 07:11:15'),
(297687, 481, '#include <iostream>\r\nusing namespace std;\r\nint main (){\r\nint n ;\r\nint fact=0;\r\ncin >> n ;\r\nfor (int i =0 ; i<n ; i++){\r\nfact*=i;\r\n}\r\ncout <<\"factorial of number\"<< n <<\"=\"<<fact<<endl;\r\nreturn 0;\r\n}', 1064, 51, 1, '2019-03-16 07:11:15', '2019-03-17 11:44:44'),
(297727, 467, '1355', 1047, 51, 2, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297728, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){', 1047, 51, 0, '2019-03-16 07:11:21', '2019-03-28 15:21:54'),
(297729, 469, '1360', 1047, 51, 0, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297730, 470, '1362', 1047, 51, 2, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297731, 475, '1385', 1047, 51, 0, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297732, 477, 'int i =1;\r\nint count=1;\r\nwhile(count<20){\r\nif(i%2==0){\r\ncount<<i<<endl;\r\ncount+2;\r\n}\r\n}', 1047, 51, 0, '2019-03-16 07:11:21', '2019-03-28 15:21:54'),
(297733, 478, '1386', 1047, 51, 1, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297734, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumodd=1;\r\nint sumeven=0;\r\nfor(i=0;i<100;i++)\r\n{\r\nif(i%2==0)\r\nsumeven=sumeven+i\r\nelse \r\nsumodd=sumodd+i\r\n}\r\ncout<<sumeven<<endl;\r\ncout<<sumodd<<endl;    \r\n}', 1047, 51, 2, '2019-03-16 07:11:21', '2019-03-17 11:44:13'),
(297735, 480, '1393', 1047, 51, 1, '2019-03-16 07:11:21', '2019-03-16 07:11:21'),
(297736, 481, 'int f=1;\r\nint n;\r\nfor(i=1;i<=n;i--)\r\n{\r\nf=f*i\r\n}   \r\n cout<<f<<endl;', 1047, 51, 1.5, '2019-03-16 07:11:21', '2019-03-17 11:44:13'),
(297954, 467, '1354', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297955, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ncout<<\"Enter first number\";\r\n{\r\ncin>> a;\r\n{\r\ncout<<\"Enter second number\";\r\n{\r\ncin>>b;\r\n{\r\nint a,b;\r\nfor (i=1;i<=100;i++)\r\n{\r\nif (a//i==b//i)\r\ncout<< a/b;\r\n}', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-28 15:22:37'),
(297956, 469, '1358', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297957, 470, '1363', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297958, 475, '1383', 1053, 51, 2, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297959, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ncout<<\"Enter number\";\r\n{\r\ncin>> i;\r\n{\r\nint i=1;\r\nint count=1;\r\nwhile (count <=10)\r\n{\r\nif (i%2 !=0)\r\n} \r\ncout<<i<<endl;\r\ncount+=2\r\n}', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-28 15:22:37'),
(297960, 478, '1386', 1053, 51, 1, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297961, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint a;\r\nwhile (a<=100)\r\n{\r\nif (a%2==0)\r\ncout<< \"sum of even\";\r\n{\r\nelse \r\ncout<<\"sum of odd\";\r\n{ \r\na++;\r\n}', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-17 11:45:27'),
(297962, 480, '1393', 1053, 51, 1, '2019-03-16 07:11:51', '2019-03-16 07:11:51'),
(297963, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ncout<<\"Enter number\";\r\n{\r\ncin>> a; \r\n{', 1053, 51, 0, '2019-03-16 07:11:51', '2019-03-17 11:45:27'),
(298405, 467, '1355', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298406, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,gcd=0;\r\ncin>>x>>y;\r\nif(x<y)\r\n{\r\nfor(int i=1;i<=x;i++)\r\n{\r\n	if(x%i==0&&y%i==0)\r\n	{\r\n		if(i>gcd)\r\n		{\r\n			gcd=i;\r\n		}\r\n	}\r\n\r\n}\r\n\r\n}\r\n\r\nelse\r\n{\r\nfor(int i=1;i<=y;i++)\r\n{\r\n	if(x%i==0&&y%i==0)\r\n	{\r\n		if(i>gcd)\r\n		{\r\n			gcd=i;\r\n		}\r\n	}\r\n\r\n}\r\n}\r\n\r\ncout<<gcd;\r\n}', 950, 51, 4, '2019-03-16 07:12:50', '2019-03-28 15:23:31'),
(298407, 469, '1361', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298408, 470, '1362', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298409, 475, '1383', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298410, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 == 1){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 950, 51, 0, '2019-03-16 07:12:50', '2019-03-28 15:23:31'),
(298411, 478, '1386', 950, 51, 1, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298412, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n	int sumodd=0,sumeven=0;\r\n	\r\n	for(int i=0;i<100;i++)\r\n	{\r\n		if(i%2==0)\r\n		{\r\n			sumeven+=i;\r\n		}\r\n		else\r\n		{	\r\n			sumodd+=i;\r\n		}\r\n	}	\r\n\r\ncout<<\"sumeven :\"<<sumeven<<endl;\r\ncout<<\"sumodd :\"<<sumodd<<endl;\r\n\r\n}', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-17 11:47:11'),
(298413, 480, '1393', 950, 51, 1, '2019-03-16 07:12:50', '2019-03-16 07:12:50'),
(298414, 481, 'int f=1;\r\nfor(int i=num;i>=1;i--)\r\n{\r\n	f*=num;\r\n	num--;\r\n}', 950, 51, 2, '2019-03-16 07:12:50', '2019-03-17 11:47:11'),
(298549, 467, '1355', 1044, 51, 2, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298550, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,c,great;\r\ncin>>x>>c;\r\n//the greatest number is =the subtract of 2 number //great=the large number -the small number\r\ngreat=x-c;\r\ncout<<\"the greatest number is :  \"<<great<<endl;\r\nsystem(\"pause\");\r\n}', 1044, 51, 0, '2019-03-16 07:13:02', '2019-03-28 15:24:11'),
(298551, 469, '1361', 1044, 51, 2, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298552, 470, '1363', 1044, 51, 0, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298553, 475, '1385', 1044, 51, 0, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298554, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int i=0,count=0;\r\nwhile(count<=20)\r\n{\r\nif(i%2!=0)\r\n{ \r\ncout<<i<<endl;\r\ncount ++;\r\n}\r\nsystem(\"pause\");\r\n}', 1044, 51, 0, '2019-03-16 07:13:02', '2019-03-28 15:24:11'),
(298555, 478, '1386', 1044, 51, 1, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298556, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0,sumodd=0;\r\nfor(int x=1;x<=100;x++)\r\n{\r\nif(x%2==0)\r\nsumeven  +=x;\r\nelse \r\nsumodd +=x;\r\n}\r\ncout<<sumeven<<endl;\r\ncout<<sumodd<<endl; \r\nsystem(\"pause\");\r\n}', 1044, 51, 1.5, '2019-03-16 07:13:02', '2019-03-18 09:41:56'),
(298557, 480, '1393', 1044, 51, 1, '2019-03-16 07:13:02', '2019-03-16 07:13:02'),
(298558, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,fact=1;\r\ncin>>x;\r\nfor(int c=1;c<=x;c++)\r\n{\r\nfact =fact*c\r\n {\r\ncout<<fact<<endl;\r\nsystem(\"pause\");\r\n}', 1044, 51, 2, '2019-03-16 07:13:02', '2019-03-18 09:41:56'),
(298657, 467, '1355', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-16 07:13:14'),
(298658, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n    int n,m,x;\r\n   cout<<\"enter n1 :\"<<endl;\r\n   cin>>n;\r\n   cout<<\"enter n2 :\"<<endl;\r\n   cin>>m;\r\n   if(n>m){\r\n      x=n;\r\n      n=m;\r\n      m=x;\r\n    }\r\n   if(n<=0||m<=0){\r\n      cout<<\"erorr\"<<endl;\r\n    }\r\n   else if(m%n==0){\r\n         cout<<\"the GCD = \"<<n<<endl; \r\n   }\r\n   else {\r\n       for(int i = (n-1); i>0;i--){ \r\n             if(((n%i)==0)&&((m%i)==0)){ \r\n                  cout<<\"the GCD = \"<<i<<endl;\r\n                  break;\r\n              }\r\n        }\r\n    }\r\n   return 0;\r\n}', 1051, 51, 4, '2019-03-16 07:13:14', '2019-03-28 15:24:48'),
(298659, 469, '1361', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-16 07:13:14'),
(298660, 470, '1362', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-16 07:13:15'),
(298661, 475, '1385', 1051, 51, 0, '2019-03-16 07:13:14', '2019-03-16 07:13:15'),
(298662, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n   int i =0;\r\n  int count =0;\r\n  while(count <10){\r\n      if(i%2 != 0){\r\n         cout<<i<<endl;\r\n         count++;\r\n      }\r\n       i++;\r\n  }\r\n   return 0;\r\n}', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-28 15:24:48'),
(298663, 478, '1386', 1051, 51, 1, '2019-03-16 07:13:14', '2019-03-16 07:13:15'),
(298664, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n   int sumo=0,sime=0;\r\n   for(int i=0;i<100;i++){\r\n         if((i%2)==0){ \r\n             sume+=i;\r\n          }\r\n         else{ \r\n           sumo+=i;\r\n         }\r\n   }\r\n   cout<<\" the sum of even num. less than 100 = \"<<sume<<endl;\r\n   cout<<\" the sum of odd num. less than 100 = \"<<sumo<<endl;\r\n   return 0;\r\n}', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-18 09:43:17'),
(298665, 480, '1393', 1051, 51, 1, '2019-03-16 07:13:14', '2019-03-16 07:13:15'),
(298666, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n  int n;\r\n  long long fact=1;\r\n   cout<<\"enter n\"<<endl;\r\n   cin>>n;\r\n   for(int i=n;i>=1;i--){\r\n        fact*=i;\r\n     }\r\n   cout<<\"the factorial =  \"<<fact;\r\n    return 0;\r\n}', 1051, 51, 2, '2019-03-16 07:13:14', '2019-03-18 09:43:18'),
(298745, 467, '1355', 920, 51, 2, '2019-03-16 07:13:23', '2019-03-16 07:13:23'),
(298746, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{int x,y;\r\ncin>>x>>y;\r\n\r\nfor(int i=1;i<x&&i<y;i++)\r\n{if(x%i==0&&y%i==0)\r\n{cout<<\"GCD=\"<<i;\r\n}cout<<endl;\r\nsystem(\"pause\");\r\n}', 920, 51, 4, '2019-03-16 07:13:23', '2019-03-28 15:25:52');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(298747, 469, '1360', 920, 51, 0, '2019-03-16 07:13:23', '2019-03-16 07:13:23'),
(298748, 470, '1364', 920, 51, 0, '2019-03-16 07:13:23', '2019-03-16 07:13:24'),
(298749, 475, '1383', 920, 51, 2, '2019-03-16 07:13:23', '2019-03-16 07:13:24'),
(298750, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}\r\n}', 920, 51, 1, '2019-03-16 07:13:23', '2019-03-28 15:25:52'),
(298751, 478, '1386', 920, 51, 1, '2019-03-16 07:13:23', '2019-03-16 07:13:24'),
(298752, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{int x,sum odd=o,sum even=0;\r\ncin>>x;\r\nwhile(x <100)\r\n{\r\nfor(int i=1;i<x;i++)\r\n{\r\nif(x%2==0)\r\n{sum even +=i;\r\n       }\r\nelse{\r\nsum odd+=i;\r\n}\r\ncout<<\"sum even =\"<<sum even<<endl;  \r\ncout<<\" sum odd=\"<<sum odd<<endl;\r\n}\r\n}\r\nsystem(\"pause\");\r\n}', 920, 51, 0, '2019-03-16 07:13:23', '2019-03-18 09:47:22'),
(298753, 480, '1393', 920, 51, 1, '2019-03-16 07:13:23', '2019-03-16 07:13:24'),
(298754, 481, 'int n;\r\nint f=1 ;\r\nfor(int i=1;i<x;i++)\r\nf=f*i;', 920, 51, 1.5, '2019-03-16 07:13:23', '2019-03-18 09:47:22'),
(298909, 467, '1355', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298910, 468, '#include<iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x , y ,z  ;\r\ncin>> x>>y ;\r\nfor (int i=2 ; i<20 ; i++)\r\n{\r\nif (x%i ==0  && y%i==0)\r\nz=i;\r\n}\r\ncout<< z;\r\n}', 1030, 51, 3, '2019-03-16 07:13:37', '2019-03-28 15:26:47'),
(298911, 469, '1360', 1030, 51, 0, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298912, 470, '1362', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298913, 475, '1383', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298914, 477, 'int i=0\r\nwhile (i<20){\r\n if (i%2 !=0)\r\ncout<<i<<endl;\r\ni++;\r\n}', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-28 15:26:47'),
(298915, 478, '1386', 1030, 51, 1, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298916, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint so , se;\r\nfor(int i=0 ; i<100 ;i++)\r\n{\r\nif (i%2==0)\r\nse=se+i ;\r\nelse if (i%2 !=0)\r\nso=so+i ;\r\n}\r\ncout<<\" The sum of even numbers = \"<<se<<endl ;\r\ncout<<\" The sum of odd numbers = \" <<so<<endl;\r\n}', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-18 09:52:22'),
(298917, 480, '1393', 1030, 51, 1, '2019-03-16 07:13:37', '2019-03-16 07:13:37'),
(298918, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n ,f=1 ;\r\ncin>>n ;\r\nfor(int i=n ; i>0 ;i-- )\r\n{\r\nf=f*i ;\r\n}\r\ncout<< f ;\r\n}', 1030, 51, 2, '2019-03-16 07:13:37', '2019-03-18 09:52:22'),
(298981, 467, '1357', 984, 51, 0, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298982, 468, '#include<iostream>\r\nusing namespace std ;\r\nint main ( )\r\n{\r\nint n , c ;\r\ncin >> n , c;\r\nfor (int i = 0 ; i<=10 ; i++)\r\n{\r\nif(n%i==0)\r\n{\r\ncout <<n<<endl;\r\n}\r\nif (c%i==0)\r\ncout <<c<<endl ;\r\n}\r\nif (n/c=1)\r\ncout <<n/c<<endl;\r\n}\r\nsystem(\'\'pause\'\');\r\n}', 984, 51, 0, '2019-03-16 07:13:49', '2019-03-28 15:27:20'),
(298983, 469, '1361', 984, 51, 2, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298984, 470, '1365', 984, 51, 0, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298985, 475, '1383', 984, 51, 2, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298986, 477, 'int i = 0 ;\r\nint count = 0;\r\nwhile (count<10)\r\n{\r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 984, 51, 0, '2019-03-16 07:13:49', '2019-03-28 15:27:20'),
(298987, 478, '1386', 984, 51, 1, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298988, 479, '#include<iostream>\r\nusing namespace std;\r\nint main( )\r\n{\r\nint i , sum1 , sum2 ;\r\ncin>>i ;\r\nfor(   i=0 ; i<=100 ; i++)            \r\n{\r\nif(i%2==0)\r\n{\r\nsum1+=i;\r\nelse                                                 \r\nsum2+=i;\r\n}\r\ncout<<\"the sum of the even number =\"<<sum1<<endl;\r\ncout<<\"the sum of the odd number=\"<<sum2<<endl;\r\n}\r\nsystem(\"pause\");\r\n}', 984, 51, 0.5, '2019-03-16 07:13:49', '2019-03-18 09:59:52'),
(298989, 480, '1393', 984, 51, 1, '2019-03-16 07:13:49', '2019-03-16 07:13:50'),
(298990, 481, '#include < iostream>\r\nusing namespace std ;\r\nint main ( )\r\n{\r\nint n,x ;\r\nfor ( int i = 1 ; i>=n ; i++)\r\n{\r\nx=n*n-i;\r\n}\r\ncout << i<<endl;\r\nsystem(\'\'pause\'\');\r\n}', 984, 51, 0, '2019-03-16 07:13:49', '2019-03-18 09:59:52'),
(299393, 467, '1355', 1046, 51, 2, '2019-03-16 07:14:20', '2019-03-16 07:14:20'),
(299394, 468, '#include <iostream>\r\nusing namespace std;\r\n\r\nvoid main(){\r\nint x,y;\r\ncout << \"enter 2 numbers : \" << endl;\r\ncin >> x;\r\ncin >> y;\r\nfor ( int i = 1 ; i < x; i++){\r\nif (x % i == 0 && y % i == 0){\r\ncout << \"the answer is : \" << i;\r\nbreak;\r\n}\r\n}\r\n\r\nsystem(\"pause\");\r\n}', 1046, 51, 2, '2019-03-16 07:14:20', '2019-03-28 15:28:28'),
(299395, 469, '1361', 1046, 51, 2, '2019-03-16 07:14:20', '2019-03-16 07:14:21'),
(299396, 470, '1364', 1046, 51, 0, '2019-03-16 07:14:20', '2019-03-16 07:14:21'),
(299397, 475, '1384', 1046, 51, 0, '2019-03-16 07:14:20', '2019-03-16 07:14:21'),
(299398, 477, '#include <iostream>\r\nusing namespace std;\r\nvoid main (){\r\n\r\nint i =1;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}                                                                                                       \r\n\r\nsystem (\"pause\");\r\n}', 1046, 51, 0, '2019-03-16 07:14:20', '2019-03-28 15:28:28'),
(299399, 478, '1386', 1046, 51, 1, '2019-03-16 07:14:20', '2019-03-16 07:14:21'),
(299400, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main (){\r\nint odd = 0;\r\nint even = 0;\r\nfor (int i = 1; i < 100 ; i++){\r\n\r\nif ( i % 2 == 0){\r\neven = even + i;\r\n} else {\r\nodd = odd + i;\r\n}\r\n\r\n}  \r\ncout << \"the sum of the even numbers is : \" << even << endl;\r\ncout <<\"the sum of the odd numbers is : \" << odd << endl;     \r\n\r\nsystem(\"pause\");                                                                                                   \r\n}', 1046, 51, 2, '2019-03-16 07:14:20', '2019-03-18 10:00:33'),
(299401, 480, '1393', 1046, 51, 1, '2019-03-16 07:14:20', '2019-03-16 07:14:21'),
(299402, 481, 'void main(){\r\nint n;\r\nint f = 1;\r\ncout << \"enter a positive number : \";\r\ncin >> n;\r\nfor (int i = n ; i >= 1 ; i --){\r\nf = f*i;\r\n}\r\n\r\ncout << \"the factorial of this number is : \" << f << endl;\r\n\r\nsystem (\"pause\");\r\n}', 1046, 51, 2, '2019-03-16 07:14:20', '2019-03-18 10:00:33'),
(299473, 467, '1354', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299474, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main (){', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-28 15:29:10'),
(299475, 469, '1360', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299476, 470, '1363', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299477, 475, '1382', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299478, 477, '#include <iostream>\r\nusing namespace std ;\r\nint main (){\r\n\r\n int i=0 ;\r\nint count =o ;\r\nwhile (count<=10){\r\nif{i%2!=0){\r\ncout <<i<<endl;\r\ncount ++; \r\n}\r\n}                                                                                      \r\nsystem(\"pause\")\r\n}', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-28 15:29:10'),
(299479, 478, '1387', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299480, 479, '#include  <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint sum,x,y ;\r\nif (sum<100)                                                                                                           \r\n{ if (x%2==0)\r\n{x+=2;\r\nelse \r\ny+=2;\r\n}\r\nsum=x+y;\r\ncout <<\"the sum = \"<<sum <<endl;\r\n}system(\"pause\");\r\n}', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-18 10:01:30'),
(299481, 480, '1393', 1045, 51, 1, '2019-03-16 07:14:26', '2019-03-16 07:14:26'),
(299482, 481, '#include  <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint num ;\r\ncout <<\"enter your num \"<<endl;\r\nfor (i =0;i<num;i++)\r\n{num*=i;\r\ncout <<the factorial = \"<<num<<endl;\r\n}system (\"pause\");\r\n}', 1045, 51, 0, '2019-03-16 07:14:26', '2019-03-18 10:01:30'),
(299788, 467, '1355', 952, 51, 2, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299789, 468, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y,c;\r\ncin>>x>>y;\r\nif(x>y){\r\nfor(int i=1;i<x;i++){\r\nif(x%i==0 && y%i==0){\r\nc=i;\r\n}\r\n}\r\nelse\r\nfor(int i=1;i<y;i++){\r\nif(x%i==0 && y%i==0){\r\nc=i;\r\n}\r\n}\r\n}\r\ncout<<c<<endl;\r\n\r\nsystem(\"pause\");\r\n}', 952, 51, 4, '2019-03-16 07:15:01', '2019-03-28 15:29:40'),
(299790, 469, '1359', 952, 51, 0, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299791, 470, '1362', 952, 51, 2, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299792, 475, '1383', 952, 51, 2, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299793, 477, 'int i =0;\r\nint count =1;\r\nwhile(count <10){\r\nif(count%2 !=0){\r\n\r\ncout<<count<<endl;\r\n}\r\ncount++;\r\n\r\n}', 952, 51, 0, '2019-03-16 07:15:01', '2019-03-28 15:29:40'),
(299794, 478, '1386', 952, 51, 1, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299795, 479, '#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\nint x,odd=0,even=0;\r\n\r\nfor(x=1;x<100;x++){\r\nif (x%2==0){\r\neven+=x\r\nelse\r\nodd+=x\r\n}\r\n\r\n}\r\ncout<<odd<<endl<<even<<endl;\r\n\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 952, 51, 2, '2019-03-16 07:15:01', '2019-03-18 10:02:30'),
(299796, 480, '1393', 952, 51, 1, '2019-03-16 07:15:01', '2019-03-16 07:15:02'),
(299797, 481, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n,fac=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++){\r\nfac=fac*i;\r\n}\r\ncout<<fac<<endl;\r\n\r\nsystem(\"pause\");\r\n}', 952, 51, 2, '2019-03-16 07:15:01', '2019-03-18 10:02:30'),
(299798, 467, '1355', 1035, 51, 2, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299799, 468, '#incloud <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y,c=0;\r\nfor(int i=1;i<=x;i++){\r\nif(x/i==0&&y/i==0){\r\nc=i;\r\n}\r\n}\r\ncout<<c;\r\nreturn 0;\r\n}', 1035, 51, 2, '2019-03-16 07:15:04', '2019-03-28 15:30:09'),
(299800, 469, '1360', 1035, 51, 0, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299801, 470, '1362', 1035, 51, 2, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299802, 475, '1385', 1035, 51, 0, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299803, 477, 'int i=0;\r\nint count=0;\r\nwhile (count <20){\r\nif(i%2!=0){\r\ncount<<i<<endl;\r\ncount++;\r\n}\r\n}', 1035, 51, 0, '2019-03-16 07:15:04', '2019-03-28 15:30:09'),
(299804, 478, '1386', 1035, 51, 1, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299805, 479, '#incloud  <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint even=0,odd=0;\r\nfor (int=0;i<100;i++){\r\nif (i%2==0)\r\n{\r\neven=even+i;\r\n}\r\nelse\r\n{\r\nodd=odd+i;\r\n}\r\n}\r\ncout<<\" sum of even number =\"<<even<<endl<<\"sum of odd numbers=\"<<odd;\r\n\r\nreturn 0;\r\n}', 1035, 51, 2, '2019-03-16 07:15:04', '2019-03-18 10:03:07'),
(299807, 480, '1392', 1035, 51, 0, '2019-03-16 07:15:04', '2019-03-16 07:15:05'),
(299809, 481, '#incloud <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,f;\r\nf=1;\r\ncin>>x;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f;\r\nreturn 0;\r\n}', 1035, 51, 2, '2019-03-16 07:15:04', '2019-03-18 10:03:07'),
(299854, 467, '1354', 987, 51, 0, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299855, 468, '#include < iostream >\r\nusing namespace std;\r\nint main ()                 \r\n{\r\nint x,c,z;\r\ncin>>x>>c;\r\nfor(int i=2;i<=x/2&&i<=c/2;i++)\r\n{\r\nif(x%i=0&&c%i=0)\r\n{z=i;}\r\n}\r\ncout<<z;\r\n\r\n}', 987, 51, 2, '2019-03-16 07:15:11', '2019-03-28 15:30:41'),
(299856, 469, '1361', 987, 51, 2, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299857, 470, '1363', 987, 51, 0, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299858, 475, '1383', 987, 51, 2, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299859, 477, '#include < iostream >\r\nusing namespace std;\r\nint main ()                 \r\n{ int i =0;\r\nint count =0;\r\nwhile(count <10)\r\n{\r\nif(i%2 != 0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 987, 51, 0, '2019-03-16 07:15:11', '2019-03-28 15:30:41'),
(299860, 478, '1386', 987, 51, 1, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299861, 479, '#include < iostream >\r\nusing namespace std;\r\nint main ()\r\n{\r\nint odd=1,even=2,oddsum=0,evensum=0;\r\nwhile (odd<100)\r\n{\r\noddsum=oddsum+odd;\r\nodd=odd+2;\r\n}\r\nwhile (even<100)\r\n{\r\nevensum=evensum+odd;\r\neven=even+2;}\r\ncout<<oddsum<<evensum;\r\n}\r\n}', 987, 51, 2, '2019-03-16 07:15:11', '2019-03-18 10:03:52'),
(299862, 480, '1393', 987, 51, 1, '2019-03-16 07:15:11', '2019-03-16 07:15:11'),
(299863, 481, '#include < iostream >\r\nusing namespace std;\r\nint main ()                 \r\n{\r\nint n ,q=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nq=q*i;\r\n}\r\ncout<<q;\r\n}', 987, 51, 2, '2019-03-16 07:15:11', '2019-03-18 10:03:52'),
(299893, 467, '1355', 1036, 51, 2, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299894, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint  n1,n2,GSD=1;\r\ncin>>n1,n2;', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-28 15:31:08'),
(299895, 469, '1360', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299896, 470, '1363', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299897, 475, '1383', 1036, 51, 2, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299898, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0,count=0;\r\ncin >>i;\r\nwhile(i<10)\r\n{\r\nif(i%2==0)\r\n{\r\ncout<<i;\r\ncount++\r\n} \r\n}', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-28 15:31:08'),
(299899, 478, '1386', 1036, 51, 1, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299900, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,sum=1;\r\ncin>>n;\r\nfor(i=0;i<n;i++)\r\n{\r\nif( n<100)\r\nif(n%2==0)\r\nsum+=n;\r\n}\r\ncout<<sum;\r\nelse\r\n}\r\nif(n%2!=0)\r\nsum+=n;\r\n}\r\ncout<<sum;\r\n}', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-18 10:04:45'),
(299901, 480, '1390', 1036, 51, 0, '2019-03-16 07:15:15', '2019-03-16 07:15:15'),
(299902, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,f=1;\r\ncin>>n;\r\nfor(i=1;i<=n;i++)\r\n{\r\nf=f*n;\r\n}\r\ncout<<f<<\" \\n\";\r\n}', 1036, 51, 2, '2019-03-16 07:15:15', '2019-03-18 10:04:45'),
(300019, 467, '1354', 1022, 51, 0, '2019-03-16 07:15:26', '2019-03-16 07:15:26'),
(300020, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{ \r\nint n1,n2;\r\ncin>>n1>>n2;\r\nfor(int i=1;i<=n1;i++)\r\n{\r\nif((n1%i==0)&&(n2%i==0))\r\ncout<<i;\r\n\r\n} \r\n\r\n\r\n\r\n}', 1022, 51, 2, '2019-03-16 07:15:26', '2019-03-28 15:31:57'),
(300021, 469, '1360', 1022, 51, 0, '2019-03-16 07:15:26', '2019-03-16 07:15:27'),
(300022, 470, '1362', 1022, 51, 2, '2019-03-16 07:15:26', '2019-03-16 07:15:27'),
(300023, 475, '1385', 1022, 51, 0, '2019-03-16 07:15:26', '2019-03-16 07:15:27'),
(300024, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{  \r\n\r\nint i=0;\r\nint c=0;\r\ni=c;\r\nwhile(c<10)\r\n{\r\nif(i%2!=0)\r\ncout<<i;\r\nc++;\r\n}\r\n}', 1022, 51, 0, '2019-03-16 07:15:26', '2019-03-28 15:31:57'),
(300025, 478, '1386', 1022, 51, 1, '2019-03-16 07:15:26', '2019-03-16 07:15:27'),
(300026, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint evne_number=0,odd_number=0;\r\nfor(int i=1;i<=100;i++)\r\n{\r\nif(i%2==0)\r\neven_number+=i;\r\nelse\r\nodd_number+=i\r\n\r\n\r\n}\r\ncout <<even_number;\r\ncout <<odd_number;\r\n}', 1022, 51, 1.5, '2019-03-16 07:15:26', '2019-03-18 10:05:17'),
(300027, 480, '1393', 1022, 51, 1, '2019-03-16 07:15:26', '2019-03-16 07:15:27'),
(300028, 481, '#include <iostream>\r\nusing namespace srd;\r\nint main()\r\n{\r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf*=i;\r\n}\r\ncout<<f;\r\n}', 1022, 51, 2, '2019-03-16 07:15:26', '2019-03-18 10:05:17'),
(300090, 467, '1356', 1068, 51, 0, '2019-03-16 07:15:35', '2019-03-16 07:15:35'),
(300091, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nint gcd = y-x;\r\ncout<<gcd;', 1068, 51, 0, '2019-03-16 07:15:35', '2019-03-28 15:33:11'),
(300092, 477, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint i=0 ;\r\nint count 1 =0 ;\r\nint count 2=0;\r\nwhile ( i < 20)\r\n{\r\nif (i%2==0)\r\n{\r\ncout << \"even number \"<<i<<endl;\r\ncount 1 ++ ;\r\n}\r\nelse \r\n{\r\ncout <<\"odd number \"\"<<i <<endl;\r\ncount 2 ++ ;\r\n}\r\n}', 1068, 51, 0, '2019-03-16 07:15:35', '2019-03-28 15:33:11'),
(300093, 478, '1386', 1068, 51, 1, '2019-03-16 07:15:35', '2019-03-16 07:15:35'),
(300094, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x , sum of odd =0 , sum of even=0 ;\r\ncin>>x;\r\nfor (int i =0 ; i<100 ; i++ )\r\n{\r\nif (i%2==0)\r\n{\r\ncout <<\"even number \" << i << endl ;\r\nsum of even ++ ;\r\n}\r\nelse \r\n{\r\ncout <<\"odd number \"<<i<<endl ;\r\nsum of odd ++ ;\r\n} \r\n\r\n}\r\n}', 1068, 51, 1, '2019-03-16 07:15:35', '2019-04-24 09:26:32'),
(300095, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{', 1068, 51, 0, '2019-03-16 07:15:35', '2019-03-18 10:05:52'),
(300096, 467, '1356', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300097, 468, 'int x,y,z;\r\ncout<<\"enter num1 \"endl;\r\ncin>>x;\r\ncout<<\"enter num2\"endl;\r\ncin>>y;\r\nz=x-y;\r\ncout<<\"the Greatest common Divisor is \"<<z<<endl;', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-28 15:33:28'),
(300098, 469, '1358', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300099, 470, '1362', 1049, 51, 2, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300100, 475, '1383', 1049, 51, 2, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300101, 477, 'int i=0;\r\nint count =0;\r\nwhile(count<=20){\r\nif(i%2==0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-28 15:33:28'),
(300102, 478, '1388', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300103, 479, 'int x,y,sum;\r\ncout <<\"enter odd number\"endl;\r\ncin>>x;\r\ncout<<\"enter even number\"endl;\r\ncin>>y;\r\nsum=x+y;\r\nwhile(sum>100)\r\ncout<<\"the sum = \"<<sum<<endl;', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-18 10:06:33'),
(300104, 480, '1393', 1049, 51, 1, '2019-03-16 07:15:35', '2019-03-16 07:15:36'),
(300105, 481, 'int f=1 ,n,factorial,\r\ncin>>n\r\nfor (i=1,i<=n,i--)\r\nfactorial=f*n  \r\ncout<<factorial<<endl;', 1049, 51, 0, '2019-03-16 07:15:35', '2019-03-18 10:06:33'),
(300284, 467, '1354', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300285, 468, '#include <iostream>\r\nusing namespace std;\r\nint  main ()\r\n{\r\nint a , b , gcd ;\r\ncin >> a >> b ;\r\ngcd=a/b\r\n{\r\nif(a>b)\r\ncout<<\"GCD=\"<<gcd;\r\nelse \r\ncout<<\"error\";\r\n}\r\nreturn 0;\r\n\r\n\r\n}', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-28 15:34:22'),
(300286, 469, '1358', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300287, 470, '1362', 903, 51, 2, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300288, 475, '1383', 903, 51, 2, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300289, 477, '#include <iostream>\r\nusing namespace std;\r\nint main ()   \r\n{\r\nint I=0,count=0;\r\ncin <<I;\r\nwhile (count<10)\r\n{\r\nif (I%2==0)\r\ncout<<\"error\";\r\nelse\r\ncout<<I<<endl;\r\n}\r\ncount++;\r\nreturn 0 ;\r\n\r\n\r\n}', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-28 15:34:22'),
(300290, 478, '1386', 903, 51, 1, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300291, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint a , sum=0 ;\r\ncin >> a ;\r\nfor (a=0 ;a<100 ;a++)\r\nsum+=a\r\nif (a%2==0)\r\ncout <<\"the sum of even number is\"<<sum;\r\nelse\r\ncout <<\"the sum of odd number is\"<<sum;\r\nreturn 0;\r\n\r\n}', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-18 10:34:53'),
(300292, 480, '1392', 903, 51, 0, '2019-03-16 07:16:07', '2019-03-16 07:16:07'),
(300293, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint I ,fact=1, n;\r\ncin >> I;\r\nfor (I=1; I <=n ; I ++)\r\nfact+=I\r\ncout << fact;\r\nreturn 0;\r\n}', 903, 51, 1, '2019-03-16 07:16:07', '2019-03-18 10:34:53'),
(300352, 467, '1354', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300353, 468, '#include <iostram>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint x=12 , y=15 , gcd  ;\r\ncin>>x>>y;\r\ngcd=15-12;\r\ncout<<gcd;\r\nreturn0;\r\n}', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-28 15:34:45'),
(300354, 469, '1358', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300355, 470, '1364', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300356, 475, '1382', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300357, 477, 'int i=10\r\nint count=0 \r\nwhile (count<10)\r\n}\r\nif(i%2 !=0)\r\ncout<<i<<endl:\r\ncount++;\r\n}\r\n}', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-28 15:34:45'),
(300358, 478, '1386', 904, 51, 1, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300359, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ( ) \r\n}\r\nint sumodd , sumeven , n;\r\nfor (int i=1 ; i<100 ; i++)\r\ncin>> >n ;\r\nif (n%2==0)\r\nsumeven+=n;\r\ncout<<\"sumeven\";\r\nelse \r\nsumodd+=n;\r\ncout<<\"sumodd\";\r\nreturn 0;\r\n}', 904, 51, 0, '2019-03-16 07:16:20', '2019-03-18 10:35:48'),
(300360, 480, '1393', 904, 51, 1, '2019-03-16 07:16:20', '2019-03-16 07:16:20'),
(300361, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ( ) \r\n}\r\nint n , fact ;       \r\ncin>>n;\r\n  for (int i=1 ; i<=n ; i++)      \r\nfact=fact*i ;      \r\ncout<<fact ;                                                                               \r\nreturn 0;\r\n}', 904, 51, 1.5, '2019-03-16 07:16:20', '2019-03-18 10:35:48'),
(300455, 467, '1355', 901, 51, 2, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300456, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\nint x,y,gcd=1;\r\n    cin>>x>>y;\r\nif(x<y)\r\nif(x%i==0&&(y%i==0){\r\n(gcd=i,break;)  \r\ncout<<gcd;\r\n\r\n}\r\n\r\n\r\n\r\nreturn 0;\r\n\r\n\r\n}', 901, 51, 1, '2019-03-16 07:16:34', '2019-03-28 15:35:40'),
(300457, 469, '1361', 901, 51, 2, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300458, 470, '1364', 901, 51, 0, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300459, 475, '1383', 901, 51, 2, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300460, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\nint i=0;\r\nint count=1;\r\nwhile(count<10){\r\nif (i%2==1)\r\ncout<<i<<endl;\r\ncount++,i++;\r\n}\r\n\r\n\r\nreturn 0;\r\n}', 901, 51, 1, '2019-03-16 07:16:34', '2019-03-28 15:35:40'),
(300461, 478, '1386', 901, 51, 1, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300462, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\nint sumodd=0,sumeven=0;\r\nfor(int i=0;i<=100;i++)\r\n  if(i%2==0)  { \r\nsumeven+=i;\r\nelse\r\nsumodd+=i\r\n}\r\ncout<<\"sumeven of the number less than 100=\"<<sumeven<<endl;\r\ncout<<\"sumodd of the number less than 100=\"<<sumodd<<endl;\r\n\r\n\r\n}\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n}', 901, 51, 1.5, '2019-03-16 07:16:34', '2019-03-18 10:36:51'),
(300463, 480, '1393', 901, 51, 1, '2019-03-16 07:16:34', '2019-03-16 07:16:34'),
(300464, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\n\r\n\r\n    int n.f=1;\r\n     cin>>i>>n;\r\nwhile(n>0){\r\nf+=1,n--;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nreturn 0;\r\n}', 901, 51, 0, '2019-03-16 07:16:34', '2019-03-18 10:36:51'),
(300552, 467, '1355', 902, 51, 2, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300553, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{     int x,y;\r\ncin>>x>>y;\r\nif(x>y){\r\nfor(int i=y;i>=1;i--)\r\n{if(y%i==0&&x%i==0)\r\n{\r\ncout<<i<<endl;\r\nbreak;\r\n}\r\n}\r\n\r\n}\r\n\r\nelse if(y>x)\r\n{\r\nfor(int j=x;j>=1;j--)\r\n{if(y%j==0&&x%j==0)\r\n{\r\ncout<<j<<endl;\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\nreturn 0;\r\n}', 902, 51, 4, '2019-03-16 07:16:46', '2019-03-28 15:36:30'),
(300554, 469, '1361', 902, 51, 2, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300555, 470, '1363', 902, 51, 0, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300556, 475, '1383', 902, 51, 2, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300557, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(i<20)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ni++;\r\n}\r\n\r\nreturn 0;\r\n}', 902, 51, 2, '2019-03-16 07:16:46', '2019-03-28 15:36:30'),
(300558, 478, '1386', 902, 51, 1, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300559, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum2,sum1; \r\nfor(int i=1;i<=100;i++)\r\n{if(i%2==0)\r\nsum2+=i;\r\nelse if(i%2!=0)\r\nsum1+=i;\r\n}\r\ncout<<sum2<<\"   \"<<sum1<<endl;\r\n\r\n\r\nreturn 0;\r\n}', 902, 51, 1, '2019-03-16 07:16:46', '2019-03-18 10:37:45'),
(300560, 480, '1393', 902, 51, 1, '2019-03-16 07:16:46', '2019-03-16 07:16:46'),
(300561, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,fact=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfact*=i;\r\n}\r\ncout<<fact<<endl;\r\n\r\n\r\nreturn 0;\r\n}', 902, 51, 2, '2019-03-16 07:16:46', '2019-03-18 10:37:45'),
(300760, 467, '1354', 981, 51, 0, '2019-03-16 07:17:25', '2019-03-16 07:17:26'),
(300761, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,z;\r\ncin>>x>>y;\r\nif(x%z==0&&y%z==0)\r\n{cout<<z<<endl;}\r\n\r\n}                            return 0;', 981, 51, 0, '2019-03-16 07:17:25', '2019-03-28 15:37:40'),
(300762, 469, '1361', 981, 51, 2, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(300763, 470, '1364', 981, 51, 0, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(300764, 475, '1384', 981, 51, 0, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(300765, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\nint i=1;\r\nint count=0;\r\nwhile(count<10)\r\n{cout<<i<<endl;\r\ni=+2\r\n        count++}                                                                                                   \r\nreturn 0;', 981, 51, 2, '2019-03-16 07:17:26', '2019-03-28 15:37:40'),
(300766, 478, '1386', 981, 51, 1, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(300767, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum odd=0;\r\nint sum even=0;\r\nfor(int i=0;i<100;i++)\r\n{if(i%2==0)\r\n{sum even+=i}\r\nelse\r\n{sum odd+=i}\r\n}\r\ncout<<sum odd<<endl<<sum even<<endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 981, 51, 1.5, '2019-03-16 07:17:26', '2019-03-18 10:38:55'),
(300768, 480, '1393', 981, 51, 1, '2019-03-16 07:17:26', '2019-03-16 07:17:26'),
(300769, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{f=n*i\r\n}\r\ncout<<f<<endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 981, 51, 0, '2019-03-16 07:17:26', '2019-03-18 10:38:55'),
(300943, 467, '1356', 990, 51, 0, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300944, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\nint n,c;\r\ncin n,c;\r\n}\r\n(for int i=0\r\n}\r\nif (n%c=1)\r\ncout<<n%c==0<<end>>;\r\nreturn 0\r\n}', 990, 51, 0, '2019-03-16 07:17:49', '2019-03-28 15:37:57'),
(300945, 469, '1361', 990, 51, 2, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300946, 470, '1365', 990, 51, 0, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300947, 475, '1383', 990, 51, 2, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300948, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n  int i=0;\r\n  int count =0;\r\nwhile count \r\nreturn 0;\r\n}', 990, 51, 0, '2019-03-16 07:17:49', '2019-03-28 15:37:57'),
(300949, 478, '1386', 990, 51, 1, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300950, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x=0,z=0;\r\nfor(i=0,i<=100+=2)\r\n{x=x=i}\r\ncout <<\"the sum of even numbers separately that their values are less than 100 \"<<z<<end;\r\nreturn 0;\r\n\r\n}', 990, 51, 0.5, '2019-03-16 07:17:49', '2019-03-18 10:39:53'),
(300951, 480, '1393', 990, 51, 1, '2019-03-16 07:17:49', '2019-03-16 07:17:49'),
(300952, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,z;\r\ncin >>x;\r\nfor(int i=x,i>0,i) \r\n\r\n\r\nreturn 0;\r\n}', 990, 51, 0, '2019-03-16 07:17:49', '2019-03-18 10:39:53'),
(301252, 467, '1356', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301253, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\nint i , x , y;\r\n{      while(i>0) \r\n{if(x%i==0 &&y%i==0)\r\ni++;}\r\nelse                                                                                                     \r\n        cout<<i<<endl;  }\r\n}', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-28 15:38:32'),
(301254, 469, '1360', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301255, 470, '1365', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301256, 475, '1382', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301257, 477, 'int i=0;\r\nint count=0;                                                                                                              \r\nwhile(count<10)   \r\n{\r\nif(i%2 != 0){\r\ncout<<i<< endl;   \r\ncount++;}   \r\n}', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-28 15:38:32'),
(301258, 478, '1386', 936, 51, 1, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301259, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int n , sumeven=0 , sumodd=0;\r\nfor(int i=0; i<100; i++)  \r\n{if(n%2==0){\r\nsumeven+=n;\r\ncout<<\"sum of even is\"<<sumeven;}\r\n else\r\ncout<<\"sum of odd is\" <<sumodd;}\r\n}#', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-18 10:40:38'),
(301260, 480, '1393', 936, 51, 1, '2019-03-16 07:18:33', '2019-03-16 07:18:33'),
(301261, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{int n, factorial;                                                                                                               \r\n          for(i=1; i<=n; i++)\r\n{for(n=1 ; n>=i; n++)\r\nfactoria *=n*i}\r\n}', 936, 51, 0, '2019-03-16 07:18:33', '2019-03-18 10:40:38'),
(301308, 467, '1355', 928, 51, 2, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301309, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nfor(int i=x, i<=x; i--)\r\n{\r\nfor(int j=y; j<=y ;j--)\r\n{\r\nif(x%i==0 &&i<x)\r\n{\r\nif(y%j==0 &&j<y)\r\n{\r\nif(i==j)\r\ncout<<i<<endl;\r\n}\r\n}\r\n}\r\n}', 928, 51, 0, '2019-03-16 07:18:42', '2019-03-28 15:39:51'),
(301310, 469, '1360', 928, 51, 0, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301311, 470, '1363', 928, 51, 0, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301312, 475, '1383', 928, 51, 2, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301313, 477, 'if(i%2!=0)', 928, 51, 0, '2019-03-16 07:18:42', '2019-03-28 15:39:51'),
(301314, 478, '1386', 928, 51, 1, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301315, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint esum ,osum;\r\nfor(int i=0, i<100 ,i++ )\r\nif(i%2==0)\r\nesum+=i;\r\ncout<<\"esum=\"<<esum<<endl;\r\nelse\r\nosum+=i;\r\ncout<<\"osum=\"<<osum<<endl;', 928, 51, 0.5, '2019-03-16 07:18:42', '2019-03-18 10:42:02'),
(301316, 480, '1392', 928, 51, 0, '2019-03-16 07:18:42', '2019-03-16 07:18:42'),
(301317, 481, 'int f=1; \r\nfor(int i=1; i<=n ;i++)\r\nf=f*i', 928, 51, 1.5, '2019-03-16 07:18:42', '2019-03-18 10:42:02'),
(301348, 467, '1355', 982, 51, 2, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301349, 468, '#include<iostream>\r\nusing namespace std;\r\n int main()\r\n{\r\nint x,y,gcd;\r\ncout<<\"enter two numbers\"<<endl;\r\ncin>>x>>y;\r\nfor(int i=1;((i<=x)||(i<=y));i++){\r\nif((x%i==0)&&(y%i==0))\r\ngcd=i;\r\n}\r\ncout<<\"the GCD of this numbers is\"<<gcd<<endl;\r\nsystem(\"pause\");\r\n}', 982, 51, 4, '2019-03-16 07:18:45', '2019-04-09 05:41:52'),
(301350, 469, '1361', 982, 51, 2, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301351, 470, '1364', 982, 51, 0, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301352, 475, '1383', 982, 51, 2, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301353, 477, '#include<iostream>\r\n using namespace std;\r\nintmain()\r\n{\r\nint count =1;\r\nwhile(count <=21){\r\nif(count%2 != 0){\r\ncout<<count<<endl;\r\ncount++;\r\n}\r\n}\r\n}', 982, 51, 1, '2019-03-16 07:18:45', '2019-04-09 05:41:52'),
(301354, 478, '1386', 982, 51, 1, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301355, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumofodd=0,sumofeven=0;\r\nfor(int i=1;i<100;i+=2){\r\nsumofodd+=i;\r\n}\r\ncout<<\"sum of odd numbers=\"<<sumofodd<<endl;\r\nfor(int i=2;i<100;i+=2){\r\nsumofeven+=i;\r\n}\r\ncout<<\"sum of even numbers=\"<<sumofeven<<endl;\r\nsystem(\"pause\");\r\n}', 982, 51, 2, '2019-03-16 07:18:45', '2019-03-18 10:42:49'),
(301356, 480, '1393', 982, 51, 1, '2019-03-16 07:18:45', '2019-03-16 07:18:46'),
(301357, 481, '#include <iostream>\r\nusing namespace std;\r\nintmain()\r\n{\r\nint x,factorial=1;\r\ncout<<\"enter a posetive number\";\r\ncin>>x;\r\nfor(int i=2;i<=x;i++){\r\nfactorial*=i;}\r\ncout<<\"the factorial of your number is\"<<factorial<<endl;\r\nsystem (\"pause\");\r\n}', 982, 51, 2, '2019-03-16 07:18:45', '2019-03-18 10:42:49'),
(301377, 467, '1355', 931, 51, 2, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301378, 468, '#include<iostream>\r\nusing namespace std;\r\nint main( )\r\n{\r\nint num1 =18 , num2 =24;\r\nGCD = num2/6; \r\ncout<<\" The GCD of the 2 numbers\"<<GCD<<endl;\r\n\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 931, 51, 0, '2019-03-16 07:18:47', '2019-04-09 05:42:53'),
(301379, 469, '1361', 931, 51, 2, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301380, 470, '1365', 931, 51, 0, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301381, 475, '1382', 931, 51, 0, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301382, 477, 'int i = 1, count = 0;\r\nif(i%2==1 ,count <10, i++  )\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n }', 931, 51, 0, '2019-03-16 07:18:47', '2019-04-09 05:42:53'),
(301383, 478, '1387', 931, 51, 0, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301384, 479, '#include<iostream>\r\nusing namespace std;\r\nint main( )\r\n{\r\nint sumeven =0 , sumodd = 0 ;\r\nfor( int i=0 ; i<100 ; i++  )\r\n{\r\n{\r\n      if ( i%2==0 )\r\n sumeven +=i;\r\n}\r\n{\r\nelse if ( i%2==1 )\r\nsumodd +=i;\r\n} \r\n}\r\ncout<<\" sum of the even\"<<sumeven<<endl;\r\ncout<<\" sum of the odd\"<<sumeodd<<endl;\r\n\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n}', 931, 51, 1.5, '2019-03-16 07:18:47', '2019-03-18 10:44:13'),
(301385, 480, '1392', 931, 51, 0, '2019-03-16 07:18:47', '2019-03-16 07:18:47'),
(301386, 481, '#include<iostream>\r\nusing namespace std ;\r\nint main( )\r\n{\r\nfor(int n=1; n<=1;n-- )\r\ncout<< n<<endl;\r\n\r\nsystem(\"pause\");\r\nreturn 0 ;\r\n}', 931, 51, 0, '2019-03-16 07:18:47', '2019-03-18 10:44:13'),
(301417, 467, '1355', 988, 51, 2, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301418, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,n;\r\ncin>>x>>y>>n;\r\nif(x/n==y/n)\r\n{\r\ncout<<\"greatest common Divisor\"<<(char)\"=\"<<n;\r\n}\r\nelse \r\ncout<<error;\r\n}', 988, 51, 0, '2019-03-16 07:18:55', '2019-04-09 05:43:42'),
(301419, 469, '1361', 988, 51, 2, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301420, 470, '1362', 988, 51, 2, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301421, 475, '1384', 988, 51, 0, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301422, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ninti=0;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}  \r\n}', 988, 51, 0, '2019-03-16 07:18:55', '2019-04-09 05:43:42'),
(301423, 478, '1386', 988, 51, 1, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301424, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,s=0,r=0;\r\ncin>>n;\r\nint en;\r\nif(n%2==0)\r\n{\r\nen=n;\r\n}\r\nelse\r\nen=n-1;\r\nint num=en/2;\r\nint ev=(num/2)*(2+en);\r\nint sum =((n+1)*n)/2;\r\nint od=sum-ev;\r\ncout<<ev<<\" \"<<od<<endl;\r\n}', 988, 51, 0, '2019-03-16 07:18:55', '2019-03-18 10:45:13'),
(301425, 480, '1390', 988, 51, 0, '2019-03-16 07:18:55', '2019-03-16 07:18:55'),
(301426, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint f=1,x;\r\ncin>>x\r\nfor(int i=x; i<=x; i--)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f;\r\n}', 988, 51, 1, '2019-03-16 07:18:55', '2019-03-18 10:45:13'),
(301486, 467, '1355', 978, 51, 2, '2019-03-16 07:19:02', '2019-03-16 07:19:02'),
(301487, 468, '#include <iostream>\r\n                   using namespace std;\r\n                  void main()\r\n                 {\r\n               int x,y,z=0;\r\n               cin>>x>>y;\r\n             for(i=0;i<x/2;i++){\r\n            if(x%i==0)\r\n             {\r\n            if(y%i==0)\r\n            z<i\r\n           z=i}\r\n}\r\n }           \r\ncout<<z;\r\n\r\n\r\n}', 978, 51, 3, '2019-03-16 07:19:02', '2019-04-09 05:48:38'),
(301488, 469, '1361', 978, 51, 2, '2019-03-16 07:19:02', '2019-03-16 07:19:02'),
(301489, 470, '1362', 978, 51, 2, '2019-03-16 07:19:02', '2019-03-16 07:19:02'),
(301490, 475, '1383', 978, 51, 2, '2019-03-16 07:19:02', '2019-03-16 07:19:03'),
(301491, 477, '#include <iostream>\r\n                       using namespace std;\r\n                       void main()\r\n                         {\r\n                        while (count<10){\r\n                       if(i%2==0){\r\n                      {\r\n                      }\r\n                   else                       \r\n                          cout<<i<<endl;\r\n                        count++;\r\n              }             \r\n\r\n\r\n\r\n\r\n}', 978, 51, 0, '2019-03-16 07:19:02', '2019-04-09 05:48:39'),
(301492, 478, '1386', 978, 51, 1, '2019-03-16 07:19:02', '2019-03-16 07:19:03'),
(301493, 479, '#include <iostream>\r\n               using namespace std;\r\n               void main()\r\n              {\r\n             int sumodd=0,sumeven=0;\r\n             for(i=1;i<100;i++){\r\n             sumodd=sumodd+i;\r\n             sumeven =sumeven=i-1;\r\n          cout<<sumodd<<endl<<sumeven<<endl;\r\n\r\n\r\n\r\n\r\n}', 978, 51, 1.5, '2019-03-16 07:19:02', '2019-03-18 10:46:20'),
(301494, 480, '1393', 978, 51, 1, '2019-03-16 07:19:02', '2019-03-16 07:19:03'),
(301495, 481, '#include <iostram> \r\n                  using namespace std;\r\n                 int x,f=1;\r\n                cin>>x;\r\n                 for(i=1;i<=x;i++){\r\n                   f=f*i; \r\n                  }                                                              \r\n            cout<<f<<endl;', 978, 51, 2, '2019-03-16 07:19:02', '2019-03-18 10:46:20'),
(301496, 467, '1357', 925, 51, 0, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301497, 468, '#include<iostream>                                                                                                   \r\nusing namespace std;\r\nint main(){\r\nint x,y;\r\ncin>>x>>y;\r\nfor(int i=1;i<=x;i++)\r\n{\r\ncout<<x/i;\r\n}\r\n{\r\nfor(int j=1;j<=y;j++)\r\n{\r\ncout<<y/j;\r\n}\r\n}\r\nreturn 0;\r\n}', 925, 51, 0, '2019-03-16 07:19:03', '2019-04-09 05:52:49'),
(301498, 469, '1360', 925, 51, 0, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301499, 470, '1364', 925, 51, 0, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301500, 475, '1385', 925, 51, 0, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301501, 477, 'int i=1;                                                                                                                \r\nwhile(i<10)  \r\n{\r\nif(i%2!==0)\r\n{\r\ncout<<i<<endl;\r\n}\r\ni+=2;\r\n}', 925, 51, 2, '2019-03-16 07:19:03', '2019-04-09 05:52:49'),
(301502, 478, '1386', 925, 51, 1, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301503, 479, '#include<iostream>                                                                                                            \r\nusing namespace std;\r\nint main(){\r\nint i;j;sum=0;\r\nfor(int i=0;i<=100;i+=2)\r\n{\r\nsum=sum+i;\r\ncout<<\"sum=\"<<sum<<endl;\r\n}\r\n{\r\nfor(int j=1;j<100;i+=2)\r\n{\r\nsum=sum+j;\r\ncout<<\"sum=\"<<sum<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 925, 51, 1.5, '2019-03-16 07:19:03', '2019-03-18 10:54:57'),
(301504, 480, '1393', 925, 51, 1, '2019-03-16 07:19:03', '2019-03-16 07:19:19'),
(301505, 481, '#include<iostream>                                                                                                              \r\nusing namespace std;\r\nint main()\r\n{\r\nint n,f;\r\nf=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\n     f=f*i;\r\n}\r\ncout<<f<<endl;\r\nreturn 0;\r\n}', 925, 51, 2, '2019-03-16 07:19:03', '2019-03-18 10:54:57'),
(301516, 467, '1354', 930, 51, 0, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301517, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x, y;\r\ncin>>x>>y;\r\nfor(int i=x-1; i>x && i>y ;i--)\r\n{\r\nif(x%i==0 && y%i==0)\r\nGCD=I;\r\nbreak;\r\n}\r\ncout<<\"GCD is\"<<i<<\"/n\";\r\n\r\n\r\nreturn 0;\r\n}', 930, 51, 2, '2019-03-16 07:19:05', '2019-04-09 05:49:29'),
(301518, 469, '1360', 930, 51, 0, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301519, 470, '1364', 930, 51, 0, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301520, 475, '1383', 930, 51, 2, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301521, 477, 'int i=1;\r\nint count =0;\r\nwhile(count <20)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n\r\n}', 930, 51, 0, '2019-03-16 07:19:05', '2019-04-09 05:49:29'),
(301522, 478, '1386', 930, 51, 1, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301523, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint even=0;\r\nint odd=0;\r\nfor(int i=0; i<100;i=i+2)\r\n{\r\neven=even+i;\r\n}\r\ncout<<\"the sum of even number is\"<<even<<\"/n\";\r\nfor(int x=1;x<100;x=x+2)\r\n{\r\nodd=odd+x;\r\n}\r\ncout<<\"the sum of odd number is\"<<odd<<\"/n\";\r\n\r\nreturn 0;\r\n}', 930, 51, 2, '2019-03-16 07:19:05', '2019-03-18 10:47:48'),
(301524, 480, '1393', 930, 51, 1, '2019-03-16 07:19:05', '2019-03-16 07:19:05'),
(301525, 481, 'int n; \r\nint sum=1;\r\ncin>>n;\r\nfor(int i=1; i<=n;i++)\r\n{\r\nsum=sum*i;\r\n\r\n}                 \r\ncout<<\"the factorial is\"<<sum<<\"/n\";', 930, 51, 2, '2019-03-16 07:19:05', '2019-03-18 10:47:48'),
(301554, 467, '1355', 977, 51, 2, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301555, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\nint x,y,z;\r\ncin>>x,y;\r\nz=', 977, 51, 0, '2019-03-16 07:19:09', '2019-04-09 05:50:27'),
(301556, 469, '1361', 977, 51, 2, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301557, 470, '1364', 977, 51, 0, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301558, 475, '1382', 977, 51, 0, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301559, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){  \r\nint i=1,count=0;\r\nwhile(count<10) \r\n{\r\ncout<<i<<endl;\r\ni=i+2;\r\n}\r\n}', 977, 51, 1, '2019-03-16 07:19:09', '2019-04-09 05:50:27'),
(301560, 478, '1386', 977, 51, 1, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301561, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint,x sumodd=0,sumeven=0;\r\n cin>>x;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(x%2==0)\r\n{\r\nsumeven=  sumeven+x\r\n}\r\nelse\r\n{\r\nsumodd=sumodd+x\r\n  }\r\n }\r\ncout<<sumeven<< sumodd ;', 977, 51, 0.5, '2019-03-16 07:19:09', '2019-03-18 10:48:52'),
(301562, 480, '1393', 977, 51, 1, '2019-03-16 07:19:09', '2019-03-16 07:19:10'),
(301563, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,p=1;\r\ncin>>x;\r\nfor(int i=1;i<=x;i++)\r\n{\r\np=p*i\r\n}\r\ncout<<p;\r\n}', 977, 51, 2, '2019-03-16 07:19:09', '2019-03-18 10:48:52'),
(301584, 467, '1354', 917, 51, 0, '2019-03-16 07:19:11', '2019-03-16 07:19:12'),
(301585, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y.d;\r\ncin>>x>>y;\r\nd=x/y;\r\nif(x/y%2!=0)\r\ncout<<x%y<<endl;\r\n\r\n\r\n\r\n\r\n}', 917, 51, 0, '2019-03-16 07:19:11', '2019-04-09 05:51:21'),
(301586, 469, '1360', 917, 51, 0, '2019-03-16 07:19:11', '2019-03-16 07:19:12'),
(301587, 470, '1364', 917, 51, 0, '2019-03-16 07:19:11', '2019-03-16 07:19:12'),
(301588, 475, '1383', 917, 51, 2, '2019-03-16 07:19:11', '2019-03-16 07:19:12'),
(301589, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n\r\n}', 917, 51, 0, '2019-03-16 07:19:11', '2019-04-09 05:51:21'),
(301590, 478, '1386', 917, 51, 1, '2019-03-16 07:19:12', '2019-03-16 07:19:12'),
(301591, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0,sumoddd=0;\r\nfor(int i=0;i<=100;i++){\r\nif(i%2==0)\r\nsumeven+=i;\r\n\r\nelse\r\nsumodd+=i;\r\n}\r\ncout<<\"sumeven of num=\"<<sumeven<<endl;\r\ncout<<\"sumodd of num=\"<<sumodd<<endl;\r\n\r\n}', 917, 51, 1.5, '2019-03-16 07:19:12', '2019-03-18 10:49:25'),
(301592, 480, '1393', 917, 51, 1, '2019-03-16 07:19:12', '2019-03-16 07:19:12'),
(301593, 481, 'int n,fact=1;\r\ncin>>n;\r\nfor(int i=1;i<=n ;i++)\r\n{\r\nfact*=i;\r\n}      \r\ncout<<\"the fact =\"<<fact<<endl;', 917, 51, 2, '2019-03-16 07:19:12', '2019-03-18 10:49:25'),
(301643, 467, '1354', 957, 51, 0, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301644, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y\r\ncin>>x>>y;\r\nfor(int i=y;i>0;i--)\r\n{\r\nif(y%i==0)\r\n {\r\n  if(x%i==0)\r\n    break;\r\n }    \r\ncout<<i<<endl;\r\n}\r\n system(\"pause\");\r\n}', 957, 51, 2, '2019-03-16 07:19:18', '2019-04-09 05:52:08'),
(301645, 469, '1360', 957, 51, 0, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301646, 470, '1364', 957, 51, 0, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301647, 475, '1384', 957, 51, 0, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301648, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count =0;\r\nwhile (count<10){\r\nif(i%2 !=2)\r\ncout<<i<<endl;\r\ncount++\r\n}\r\nststem(\"pause\");\r\n }', 957, 51, 0, '2019-03-16 07:19:18', '2019-04-09 05:52:08'),
(301649, 478, '1386', 957, 51, 1, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301650, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0;\r\n int sumodd=0;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(i%2==0)\r\nsumeven+=i\r\nelse\r\nsumodd+=i\r\n}\r\ncout<<sumeven<<endl;\r\ncout<<sumodd<<endl;\r\nsystem(\"pause\");\r\n}', 957, 51, 2, '2019-03-16 07:19:18', '2019-03-18 10:51:39'),
(301651, 480, '1393', 957, 51, 1, '2019-03-16 07:19:18', '2019-03-16 07:19:18'),
(301652, 481, '#include <iostream>\r\nusing namspace std;\r\nint main()\r\n{\r\nint n;\r\nfact=1\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfact=fact*i;\r\n}\r\ncout<<fact<<endl;\r\nststem(\"pause\")', 957, 51, 2, '2019-03-16 07:19:18', '2019-03-18 10:51:39'),
(301904, 467, '1355', 989, 51, 2, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301905, 468, '#include<iostream >\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y ,i=1,g=0;\r\ncin>>x>>y;\r\nwhile(x>i && y>i)\r\n{\r\nif(x/i==0 && y/i==0)\r\n\r\n\r\n\r\n}\r\ncout<<i<<endl;\r\n}', 989, 51, 1, '2019-03-16 07:19:46', '2019-04-09 05:54:11'),
(301906, 469, '1361', 989, 51, 2, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301907, 470, '1362', 989, 51, 2, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301908, 475, '1384', 989, 51, 0, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301909, 477, '#include<iostream >\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0,count=0;\r\nwhile(count<0)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 989, 51, 0, '2019-03-16 07:19:46', '2019-04-09 05:54:11'),
(301910, 478, '1386', 989, 51, 1, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301911, 479, '#include<iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint odd=0,even=0;\r\nfor(int i=1;i<100;i++)\r\n{\r\nif(i%2==0)\r\neven+=i;\r\nelse\r\nodd+=i;\r\n}\r\ncout<<even<<\"      \"<<odd<<endl;\r\nsystem(\"pause\");\r\n\r\n}', 989, 51, 2, '2019-03-16 07:19:46', '2019-03-18 10:56:02'),
(301912, 480, '1390', 989, 51, 0, '2019-03-16 07:19:46', '2019-03-16 07:19:46'),
(301913, 481, '#include<iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint x,f=1;\r\ncin>>x;\r\nfor(int i=x;i<=x;i--)\r\n{\r\nf*=i;\r\n}\r\ncout<<f<<endl;\r\nsystem(\"pause\");\r\n\r\n\r\n}', 989, 51, 1, '2019-03-16 07:19:46', '2019-03-18 10:56:02'),
(301926, 467, '1355', 985, 51, 2, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301928, 468, '#include<iostream>\r\nusing namespace std;\r\nvoid main ()\r\n{\r\nint x,y ;\r\ncin>>x>>y;\r\nfor(int i=1; i<= x ;i++)\r\nif (x%i==0)', 985, 51, 0, '2019-03-16 07:19:51', '2019-04-09 05:54:55'),
(301930, 469, '1361', 985, 51, 2, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301932, 470, '1365', 985, 51, 0, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301934, 475, '1383', 985, 51, 2, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301936, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;{\r\n{count++;}\r\n{i++;}\r\n}\r\n}', 985, 51, 0, '2019-03-16 07:19:51', '2019-04-09 05:54:55'),
(301938, 478, '1386', 985, 51, 1, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301940, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main ()\r\n{\r\nint odd=0,even=0, sum=0\r\nfor(int i=1;i<=100;i++)\r\n{\r\nif(i%2==0)\r\n{\r\neven=even+i;\r\n{\r\ncout<< even;\r\n{\r\nelse {\r\nodd=odd+i;\r\n}\r\n{\r\ncout<<odd ;\r\n}  \r\nsum =odd+even;\r\n}', 985, 51, 0.5, '2019-03-16 07:19:51', '2019-03-18 10:56:57'),
(301942, 480, '1393', 985, 51, 1, '2019-03-16 07:19:51', '2019-03-16 07:19:51'),
(301943, 481, '#include <iostream>\r\nusing namespace std ;\r\nvoid main ()\r\n{\r\nint n,f;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n}\r\n{\r\ncout<<f;\r\n}\r\n}', 985, 51, 1.5, '2019-03-16 07:19:51', '2019-03-18 10:56:57'),
(301944, 467, '1355', 1050, 51, 2, '2019-03-16 07:19:53', '2019-03-16 07:19:54');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(301945, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x , y , divide ;\r\ncout <<\"Enter two number\"<<endl;\r\ncin>>x>>y , divide ;\r\ndivide = x / y ;\r\nif (divide>0)\r\n{ \r\n  cout << \"GCD =\" << divide<<endl;\r\n}\r\nelse \r\n{ \r\n  cout<<\"this is not equal GCU\"<<endl;\r\n}\r\nsystem (\"peuse\"); \r\n\r\n}', 1050, 51, 0, '2019-03-16 07:19:53', '2019-04-09 05:55:35'),
(301946, 469, '1360', 1050, 51, 0, '2019-03-16 07:19:53', '2019-03-16 07:19:54'),
(301947, 470, '1362', 1050, 51, 2, '2019-03-16 07:19:53', '2019-03-16 07:19:54'),
(301948, 475, '1382', 1050, 51, 0, '2019-03-16 07:19:54', '2019-03-16 07:19:54'),
(301949, 477, '#include < iostream >\r\nusing namespace std;\r\nint main()\r\n{\r\n int i =1;\r\n int count =0;\r\n while(count <10)\r\n {\r\n   if(i%2 == 0)\r\n   {\r\n     cout<<i<<endl;\r\n     count++:\r\n   }\r\n }\r\nsystem (\"peuse\");\r\n}', 1050, 51, 1, '2019-03-16 07:19:54', '2019-04-09 05:55:35'),
(301950, 478, '1387', 1050, 51, 0, '2019-03-16 07:19:54', '2019-03-16 07:19:54'),
(301951, 479, '#include < iostream >\r\nusing namespace std;\r\nint main()\r\n{\r\nint x , y , sum =0 ;\r\nif ( sum <100)\r\n{ \r\nfor ( X = 0 ; x < 100 ; x +=2 )\r\nsum = sum + x ;\r\ncout << \"the sum of even n\" <<endl;\r\n} \r\nelse \r\n{ \r\nfor ( y =1 ; y < 100 ; y += 2)\r\nsum = sum + y;\r\ncout <<\"the sum of odd n\"<<endl;\r\n}  \r\nsystem ( \" peuse\")\r\n}', 1050, 51, 0, '2019-03-16 07:19:54', '2019-03-18 10:58:37'),
(301952, 480, '1393', 1050, 51, 1, '2019-03-16 07:19:54', '2019-03-16 07:19:54'),
(301953, 481, '#include < iostream >\r\nusing namespace std;\r\nint main()   \r\n{\r\nint x , i , fac t = 1;\r\nfor ( i=1 ; i <=x ; i++)\r\n {\r\nfact = fact * i ;\r\ncout << \" the fact of x =\" << x <<endl;\r\n }\r\nsystem(\"peuse\");\r\n}', 1050, 51, 1.5, '2019-03-16 07:19:54', '2019-03-18 10:58:37'),
(302086, 467, '1357', 947, 51, 0, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302087, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n , s ;\r\nint GCD=0;\r\ncout<<\"ENTER THE TWO NUMBERS\"<<endl;\r\ncin>> n >> s;\r\nfor(int i=0;i<+GCD;i++){\r\nGCD++;\r\nif(n%GCD==0&&s%GCD==0){\r\ncout<<GCD<<endl;\r\n}\r\n}\r\nreturn 0;\r\n}', 947, 51, 0, '2019-03-16 07:20:10', '2019-04-09 05:56:01'),
(302088, 469, '1360', 947, 51, 0, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302089, 470, '1364', 947, 51, 0, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302090, 475, '1383', 947, 51, 2, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302091, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}\r\n\r\n}\r\nreturn 0;\r\n}', 947, 51, NULL, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302092, 478, '1386', 947, 51, 1, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302093, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0 , sumodd=0;\r\nint n;\r\ncin>>n;\r\nif(n<100){\r\nfor(int i=1;i<=n;i++){\r\nif(i%2==0){\r\nsumeven+=i;\r\ncout<<sumeven<<endl;\r\n}\r\nelse\r\nsumodd+=i;\r\ncout<<sumodd<<endl;\r\n}\r\n} \r\nreturn 0;\r\n}', 947, 51, 0, '2019-03-16 07:20:10', '2019-03-18 11:00:36'),
(302094, 480, '1393', 947, 51, 1, '2019-03-16 07:20:10', '2019-03-16 07:20:10'),
(302095, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()      {\r\nint factorial=0;\r\nint n;\r\ncin>>n;\r\nfor(int i=0;i<n;i++){\r\nn=n-i;\r\nfactorial=n*i;\r\ncout<<factorial<<endl;\r\n}\r\nreturn 0;\r\n}', 947, 51, 0, '2019-03-16 07:20:10', '2019-03-18 11:00:36'),
(302096, 467, '1356', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302097, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>> x>>y;\r\n                 if (x>y)\r\ncout<<\"gcd\" =x-y;\r\nelse \r\ncout <<\"gcd \" =y-x;\r\n\r\nsystem (\"pause\")      \r\n}', 1067, 51, 0, '2019-03-16 07:20:11', '2019-04-09 05:56:34'),
(302098, 469, '1360', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302099, 470, '1364', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302100, 475, '1385', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302101, 477, 'int i=0\r\nint count =0\r\nwhile (count <10){\r\nif (i%2 !=0)\r\ncout <<i<<endl;\r\ncount ++;    \r\n}\r\n}', 1067, 51, 0, '2019-03-16 07:20:11', '2019-04-09 05:56:34'),
(302102, 478, '1386', 1067, 51, 1, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302103, 479, '#include <iostream>\r\nusing namespace  std;\r\nint main()\r\n{\r\n\r\nint i,n ;\r\ncin>>  n;      \r\nfor (i=0;i<=n;i++)\r\n{\r\nif (n%2==0)\r\ncout <<\"sum of odd =\"<<endl;\r\nelse \r\ncout <<\"sum of even =\"<<endl;\r\n}\r\nsystem (\"pause\")\r\n}', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-18 11:01:18'),
(302104, 480, '1392', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-16 07:20:11'),
(302105, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n ,i;\r\ncin>>n;\r\nfor (i=0;i=>n;__i){\r\ncout<<n<<endl;\r\n}\r\nsystem(\"pause\")\r\n}', 1067, 51, 0, '2019-03-16 07:20:11', '2019-03-18 11:01:18'),
(302130, 467, '1355', 1052, 51, 2, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302132, 468, '#include<iostream>\r\nusing namespace std;\r\nvoid main(){\r\nint  n1,n2;\r\ncin>> n1>>n2;\r\nint g;\r\n //g is GCD of these numbers;\r\nif(n1/g;&& n2/g){\r\ncout<<g<<endl;\r\ng!=0;\r\n}\r\nsystem(\"pause\");\r\n}', 1052, 51, 0, '2019-03-16 07:20:13', '2019-04-09 08:29:27'),
(302134, 469, '1360', 1052, 51, 0, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302136, 470, '1362', 1052, 51, 2, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302138, 475, '1383', 1052, 51, 2, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302140, 477, 'int i =1;\r\nint count=0;\r\nwhile(i<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\nc++\r\n}\r\n}', 1052, 51, 0, '2019-03-16 07:20:13', '2019-04-09 08:29:27'),
(302142, 478, '1386', 1052, 51, 1, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302143, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main(){\r\nint n;\r\ncin>>n;\r\nint c=0;\r\nwhile(n<100)\r\nif(n%2==0){\r\ncout<<\"even\";\r\nsum+=n;\r\nn++\r\nelse\r\ncout<<\"odd\";\r\nsystem(\"pause\");\r\n}', 1052, 51, 0, '2019-03-16 07:20:13', '2019-03-18 11:02:13'),
(302144, 480, '1393', 1052, 51, 1, '2019-03-16 07:20:13', '2019-03-16 07:20:13'),
(302145, 481, '#include<iostream>\r\nusing namespace std;\r\nvoid main(){\r\nint n;\r\nint fact=1;\r\ncin>>n;\r\nfor(i=1; i<n; i++){\r\nf =f*i ;\r\ncout<<f<<endl;\r\n}\r\nsystem(\"pause\");\r\n}', 1052, 51, 1, '2019-03-16 07:20:13', '2019-03-18 11:02:13'),
(302146, 467, '1354', 926, 51, 0, '2019-03-16 07:20:13', '2019-03-16 07:20:14'),
(302147, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n1,n2;\r\ncin>>n1>>n2;\r\nfor(int i=0;i<c/2;i++)\r\nif(n1%i==0&&n2%i==0)', 926, 51, 0, '2019-03-16 07:20:13', '2019-04-09 08:30:17'),
(302148, 469, '1360', 926, 51, 0, '2019-03-16 07:20:13', '2019-03-16 07:20:14'),
(302149, 470, '1362', 926, 51, 2, '2019-03-16 07:20:13', '2019-03-16 07:20:14'),
(302150, 475, '1385', 926, 51, 0, '2019-03-16 07:20:13', '2019-03-16 07:20:14'),
(302151, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ni++;\r\n} \r\n}', 926, 51, 1, '2019-03-16 07:20:13', '2019-04-09 08:30:17'),
(302152, 478, '1386', 926, 51, 1, '2019-03-16 07:20:13', '2019-03-16 07:20:14'),
(302153, 479, '#include<iostream>\r\n using namespace std;\r\nint main()\r\n{\r\nint n,sum_even=0,sum_odd=0;\r\nfor(int i=0;i<=100;i++)\r\n{\r\nif( n%2==0){\r\nsum_even=sum_even+n;\r\n}\r\nelse (n%2!=0){\r\nsum_odd=sum_odd+n;\r\n}\r\n}\r\ncout<<\"sum_even  \"<<sum_even<<endl;\r\ncout<<\"sum_odd  \"<<sum_odd<<endl;\r\nsystem (\"pause\");\r\nreturn 0;\r\n}', 926, 51, 0.5, '2019-03-16 07:20:14', '2019-03-18 11:03:29'),
(302154, 480, '1390', 926, 51, 0, '2019-03-16 07:20:14', '2019-03-16 07:20:14'),
(302155, 481, 'for(i=1;i<=n;i++){\r\nf=f*i;\r\n}', 926, 51, 1.5, '2019-03-16 07:20:14', '2019-03-18 11:03:29'),
(302198, 467, '1355', 1027, 51, 2, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302199, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,div,z;\r\ncin>>x>>y>>div;\r\nif(x/div>0&&y/div>0&&x/div==y/div)\r\n{\r\nz=x/div;\r\n}\r\n\r\nreturn 0\r\n}', 1027, 51, 0, '2019-03-16 07:20:26', '2019-04-09 08:32:11'),
(302201, 469, '1360', 1027, 51, 0, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302203, 470, '1364', 1027, 51, 0, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302205, 475, '1383', 1027, 51, 2, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302207, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count<10)\r\n{if(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n\r\n}\r\nreturn 0;\r\n}', 1027, 51, 0, '2019-03-16 07:20:26', '2019-04-09 08:32:12'),
(302209, 478, '1386', 1027, 51, 1, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302211, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint  n,sum=0;\r\ncin>>n;\r\nfor(int i=n;i<100;i++)\r\n{\r\nif(i%2==0)\r\n{sum+=i;\r\ncout<<\"sum of even =\"<<sum<<endl;\r\n}\r\nelse\r\n{sum+=i;\r\ncout<<\"sum of odd =\"<<sum<<endl;\r\n}\r\nreturn 0;\r\n}', 1027, 51, 0, '2019-03-16 07:20:26', '2019-03-18 11:04:18'),
(302213, 480, '1393', 1027, 51, 1, '2019-03-16 07:20:26', '2019-03-16 07:20:27'),
(302215, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf*=i:\r\n}cout<<f<<endl;\r\n\r\nreturn 0;\r\n}', 1027, 51, 2, '2019-03-16 07:20:26', '2019-03-18 11:04:18'),
(302367, 467, '1355', 927, 51, 2, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302368, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,n1,n2,i,max=0;\r\ncout<<\"enter number :\";\r\nfor(i=0;i<n;i++){\r\ncin>>n;\r\nif(i%n1==0 && i%n2==0){\r\nif(i>max)\r\nmax=i;\r\n}\r\n}\r\ncout<<\"max=\"<<max;\r\nsystem(\"pause\");\r\n}', 927, 51, 0, '2019-03-16 07:20:45', '2019-04-09 08:32:54'),
(302369, 469, '1359', 927, 51, 0, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302370, 470, '1365', 927, 51, 0, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302371, 475, '1385', 927, 51, 0, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302372, 477, 'int i=20;\r\nint count =0;\r\nwhile(count<10){\r\n\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\n\r\ncount++\r\n}\r\n}\r\n\r\n\r\nwhile(i%2!=0){', 927, 51, 0, '2019-03-16 07:20:45', '2019-04-09 08:32:54'),
(302373, 478, '1386', 927, 51, 1, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302374, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i ,  n,  sumodd=0,sumeven=0;\r\ncout<<\"enter number :\";\r\ncin>>n;\r\nfor(i=0;i<n;i++){\r\nif(n%2==0){\r\nsumeven=sumeven+i;\r\nelse\r\nsumodd=sumodd+i;\r\n}\r\ncout<<\"sumeven=\"<<sumeven<<endl<<\"sumodd=\"<<sumodd;\r\n\r\nsystem(\"pause\");\r\n}', 927, 51, 1.5, '2019-03-16 07:20:45', '2019-03-18 11:05:26'),
(302375, 480, '1393', 927, 51, 1, '2019-03-16 07:20:45', '2019-03-16 07:20:46'),
(302376, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,i,f=1;\r\ncout<<\"enter number :\";\r\ncin>>n;\r\nfor(i=1;i<=n;i++){\r\nf=f*i;\r\n}\r\ncout<<\"factorial =\"<<f;\r\n\r\nsystem(\"pause\");\r\n}', 927, 51, 2, '2019-03-16 07:20:45', '2019-03-18 11:05:26'),
(302426, 467, '1355', 948, 51, 2, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302427, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y,s,r;\r\ncin>>x>>y;\r\nfor(int i=(x/2),int w==(y/2);(i>0)&&(w>0);i--,w--)\r\n{\r\ns=x%i;\r\nr=(y%w);\r\nif((s==0)&&(r==0)){\r\ns=i;\r\nr=w;\r\nif(s==r){\r\ncout<<s<<endl;\r\nbreak;\r\n}\r\n}\r\n}\r\n}', 948, 51, 1, '2019-03-16 07:20:51', '2019-04-09 08:36:00'),
(302428, 469, '1360', 948, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302429, 470, '1365', 948, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302430, 475, '1382', 948, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302431, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif((i%2)!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n\r\n}\r\n\r\n}', 948, 51, 1, '2019-03-16 07:20:51', '2019-04-09 08:36:00'),
(302432, 478, '1386', 948, 51, 1, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302433, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumv=0,sumo=0;\r\nfor(int i=0;i<100;i++){\r\nif(i%2==0)\r\n{\r\nsumv+=i;\r\n}\r\nelse\r\n{sumo+=i;}\r\n\r\n}\r\ncout<<sumo<<endl;\r\ncout<<sumv<<endl;\r\n\r\n}', 948, 51, 2, '2019-03-16 07:20:51', '2019-03-18 11:07:21'),
(302434, 480, '1393', 948, 51, 1, '2019-03-16 07:20:51', '2019-03-16 07:20:51'),
(302435, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){  \r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf*=i;\r\n}\r\ncout<<f<<endl;\r\n\r\n}', 948, 51, 2, '2019-03-16 07:20:51', '2019-03-18 11:07:21'),
(302436, 467, '1354', 951, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:52'),
(302437, 468, '#incloud<iostrem>\r\nusing namespase std;\r\nint main() {\r\nint x,y,GCD;\r\ncin>>x>>y;\r\nGCD=x-y;\r\ncout<<GCD<<endl;\r\n\r\n\r\n\r\n\r\n}', 951, 51, 0, '2019-03-16 07:20:51', '2019-04-09 08:36:19'),
(302438, 469, '1360', 951, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:52'),
(302439, 470, '1365', 951, 51, 0, '2019-03-16 07:20:51', '2019-03-16 07:20:52'),
(302440, 475, '1383', 951, 51, 2, '2019-03-16 07:20:52', '2019-03-16 07:20:52'),
(302441, 477, '#incloud<iostrem>\r\nusing namespase std;\r\nint main(){\r\nint i=0;\r\nint count =2;\r\nwhile (count <=10){\r\nif(i%2==0){\r\ncout <<i <<endl;\r\ncount++;\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', 951, 51, 1, '2019-03-16 07:20:52', '2019-04-09 08:36:19'),
(302442, 478, '1386', 951, 51, 1, '2019-03-16 07:20:52', '2019-03-16 07:20:52'),
(302443, 479, '#incloud<iostreme>\r\nusing namespase std;\r\nint main(){\r\nint x=100,sum=0;\r\n\r\nif(i=0;i>=100;i++){\r\ni%2==0;\r\nsum+=i;\r\ncout<<\"the sum of even\"<<sum<<endl;\r\n}\r\nelse\r\nsum+=i;\r\ncout<<\"the sum of odd\"<<sum<<endl;\r\n\r\n\r\n}', 951, 51, 0, '2019-03-16 07:20:52', '2019-03-18 11:08:00'),
(302444, 480, '1392', 951, 51, 0, '2019-03-16 07:20:52', '2019-03-16 07:20:52'),
(302445, 481, 'int n,fact;\r\ncin>>n;\r\nfof (i=0;i>=n;i++)                               \r\nfact*=i;', 951, 51, 0.5, '2019-03-16 07:20:52', '2019-03-18 11:07:43'),
(302560, 467, '1355', 1026, 51, 2, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302561, 468, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y;\r\n\r\ncin>>x>>y;\r\n\r\n\r\n\r\n}', 1026, 51, 0, '2019-03-16 07:21:04', '2019-04-09 08:36:57'),
(302562, 469, '1360', 1026, 51, 0, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302563, 470, '1365', 1026, 51, 0, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302564, 475, '1383', 1026, 51, 2, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302565, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint count=0;\r\nwhile(count<20)\r\n{\r\nif(count%2!=0)\r\ncout<<count<<endl;\r\ncount++;\r\n}\r\n\r\n}', 1026, 51, 1, '2019-03-16 07:21:04', '2019-04-09 08:36:57'),
(302566, 478, '1386', 1026, 51, 1, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302567, 479, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumodd=0,sumeven=0;\r\n\r\nfor(int i=0; i<100; i++)\r\n{\r\nif(i%2==0)\r\n{\r\nsumeven+=i;\r\n}\r\nif else(i%2!=0)\r\n{\r\nsumodd+=i;\r\n}\r\n}\r\ncout<<sumeven<<endl;\r\ncout<<sumodd<<endl;\r\n}', 1026, 51, 2, '2019-03-16 07:21:04', '2019-03-18 11:08:39'),
(302568, 480, '1393', 1026, 51, 1, '2019-03-16 07:21:04', '2019-03-16 07:21:04'),
(302569, 481, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint x;\r\n\r\ncin>>x;\r\n\r\nfor(int i=1; i<x; i++)\r\n{\r\nx=x*i;\r\n}\r\ncout<<x<<endl;\r\n}', 1026, 51, 0, '2019-03-16 07:21:04', '2019-03-18 11:08:39'),
(302646, 467, '1354', 1014, 51, 0, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302647, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main(){\r\nint x ,y ,z=0;\r\ncin>>x>>y ;\r\nfor(int i=1 ;i<=n ;i++){\r\nif(x%i==0 && y%i==0 )\r\nz=i ;\r\n}\r\ncout<<z;\r\nreturn 0;\r\n}', 1014, 51, 3, '2019-03-16 07:21:16', '2019-04-09 08:37:47'),
(302648, 469, '1361', 1014, 51, 2, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302649, 470, '1364', 1014, 51, 0, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302650, 475, '1383', 1014, 51, 2, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302651, 477, '#include <iostream>\r\nusing namespace std ;\r\nint main(){\r\nint i=1 ;\r\nwhile(i<=10){\r\nif(i%2!=0)\r\ncout<<i<<endl ;\r\ni++ ;\r\n}\r\n\r\nreturn 0;\r\n}', 1014, 51, 1, '2019-03-16 07:21:16', '2019-04-09 08:37:47'),
(302652, 478, '1386', 1014, 51, 1, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302653, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main(){\r\nint sumodd=0,sumeven=0 ;\r\n\r\nfor(int i=1 ;i<100 ;i+=2){\r\nsumodd+=i ;\r\n\r\n}\r\ncout<<\"sum of the odd \" <<sumodd <<endl;\r\n\r\nfor(int i=2 ;i<100 ;i+=2){\r\nsumeven+=i ;\r\n\r\n}\r\ncout<<\"sum of the odd \"<<sumeven<<endl ;\r\nreturn 0;\r\n}', 1014, 51, 2, '2019-03-16 07:21:16', '2019-03-18 11:09:17'),
(302654, 480, '1393', 1014, 51, 1, '2019-03-16 07:21:16', '2019-03-16 07:21:16'),
(302655, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main(){\r\nint n ,f=1 ;\r\ncin>>n ;\r\nfor(int i=1 ;i<=n ;i++){\r\n\r\nf=f*i;\r\n}\r\ncout<<f ;\r\nreturn 0;\r\n}', 1014, 51, 2, '2019-03-16 07:21:16', '2019-03-18 11:09:17'),
(302684, 467, '1355', 961, 51, 2, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302685, 468, '#include <iostream>\r\n   using namespace std;\r\n  int main()\r\n  {\r\n   int X,Y,GCD;\r\n   cin>>X>>Y;\r\nif(Y>X){\r\nfor(int k=X;k>0;k--)\r\n{\r\n if(Y%k==0)\r\ncout<<GCD=k<<endl;\r\nbreak;\r\n}\r\n}\r\nelse if(X>Y)\r\n{\r\nfor(int k=Y;k>0;k--)\r\n{\r\n if(X%k==0)\r\ncout<<GCD=k<<endl;\r\nbreak;\r\n}\r\n}  \r\nelse\r\ncout<<GCD=X;    \r\nsystem(\"pause\");\r\n }', 961, 51, 1, '2019-03-16 07:21:22', '2019-04-09 08:40:09'),
(302686, 469, '1361', 961, 51, 2, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302687, 470, '1364', 961, 51, 0, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302688, 475, '1383', 961, 51, 2, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302689, 477, 'int i=0,count=0;\r\n while(count<10)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}\r\nsystem(\"pause\");\r\n }', 961, 51, 1.5, '2019-03-16 07:21:22', '2019-04-09 08:40:10'),
(302690, 478, '1386', 961, 51, 1, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302691, 479, '#include <iostream>\r\n   using namespace std;\r\n   int main()\r\n  {\r\n   int sumeven,sumodd;\r\nfor(int k=0;k<100;k++;)\r\n{\r\nif(k%2==0)\r\n{\r\nsumeven+=k;\r\n}\r\nelse\r\n{\r\nsumodd+=k\r\n}\r\n}\r\ncout<<\"sumeven=\"<<sumeven<<endl\r\ncout<<\"sumodd=\"<<sumodd<<endl;\r\nsystem(\"pause\");\r\n }', 961, 51, 1.5, '2019-03-16 07:21:22', '2019-03-18 11:13:12'),
(302692, 480, '1393', 961, 51, 1, '2019-03-16 07:21:22', '2019-03-16 07:21:22'),
(302693, 481, 'int N,factorial ;\r\nfor(int k=1;k<=N;k++;)\r\n{\r\nfactorial+=k;\r\n}    \r\ncout<<factorial<<endl;', 961, 51, 1, '2019-03-16 07:21:22', '2019-03-18 11:13:12'),
(302873, 467, '1355', 1058, 51, 2, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302874, 468, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x,y,n;\r\ncin>>x>>y;\r\nif(n==(x/2)&&n==(y/2))\r\n{\r\ncout<<n;\r\nbreak;\r\n}\r\nsystem(\"pause\");\r\n}', 1058, 51, 0, '2019-03-16 07:21:50', '2019-04-09 08:40:35'),
(302875, 469, '1359', 1058, 51, 0, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302876, 470, '1363', 1058, 51, 0, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302877, 475, '1385', 1058, 51, 0, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302878, 477, 'int i=o;\r\nint count=1\r\nwhile(count<10)\r\nif(i%2!=0)\r\ncout<<i;\r\ncount+2;', 1058, 51, 0, '2019-03-16 07:21:50', '2019-04-09 08:40:35'),
(302879, 478, '1386', 1058, 51, 1, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302880, 479, 'include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x,sum;\r\ncin>>x;\r\nfor(int i=0;i<10;i++)\r\n{\r\nif(x%i==o)\r\n}\r\nsum=sum+i;\r\n}\r\nelse\r\n{\r\nsum=sum+i;\r\n}\r\n}\r\ncout<<sum;\r\nsystem(\"pause\");\r\n}', 1058, 51, 0, '2019-03-16 07:21:50', '2019-03-18 11:14:45'),
(302881, 480, '1393', 1058, 51, 1, '2019-03-16 07:21:50', '2019-03-16 07:21:50'),
(302882, 481, 'int x;\r\ncin x;\r\nfor(int i=1;i<x;i++) \r\n{\r\nx=x*i;\r\n}\r\ncout<<x;', 1058, 51, 0, '2019-03-16 07:21:50', '2019-03-18 11:14:45'),
(303037, 467, '1355', 1062, 51, 2, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303038, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{int x,y;\r\ncin>>x>>y;\r\nfor(int i=x;i>0;i--)\r\n{if(x%i==0)\r\nif(y%i==0)\r\n{cout<<i;\r\ni=-1;\r\n}\r\n\r\n\r\n\r\n}\r\n\r\nsystem(\"pause\");\r\n\r\n}', 1062, 51, 3, '2019-03-16 07:22:14', '2019-04-09 08:41:36'),
(303039, 469, '1361', 1062, 51, 2, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303040, 470, '1363', 1062, 51, 0, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303041, 475, '1384', 1062, 51, 0, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303042, 477, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{int i =1;\r\nint count =0;\r\nwhile(count <20){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n++i;\r\nsystem(\"pause\");\r\n}', 1062, 51, 1.5, '2019-03-16 07:22:14', '2019-04-09 08:41:36'),
(303043, 478, '1386', 1062, 51, 1, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303044, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{int xodd=1,xeven=0,n=0;\r\nwhile(n<100)\r\n{if(n%2!=0)\r\nxodd+=n;\r\nelse\r\nxeven+=n;\r\n++n;\r\n}\r\ncout<<\"the sum of  odd numbers = \"<<xodd<<\"\\n\"; \r\ncout<<\"the sum of even numbers = \"<<xeven<<\"\\n\";\r\nsystem (\"pause\");\r\n\r\n}', 1062, 51, 2, '2019-03-16 07:22:14', '2019-03-18 11:17:19'),
(303045, 480, '1393', 1062, 51, 1, '2019-03-16 07:22:14', '2019-03-16 07:22:14'),
(303046, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{int f=1,n;\r\ncin>>n;\r\nfor(int i=1;i<=n,i++)\r\n{f*=i;\r\n}\r\ncout<<f;\r\nsystem(\"pause\");\r\n}', 1062, 51, 2, '2019-03-16 07:22:14', '2019-03-18 11:17:19'),
(303087, 467, '1356', 1003, 51, 0, '2019-03-16 07:22:20', '2019-03-16 07:22:20'),
(303088, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint z , x ,y;\r\ncin>> x ;\r\ncin>> y ;\r\n\r\nif(x%z ==0 && y%z==0)\r\ncout<< z ;\r\nelse\r\ncout<<\" there arenot  GCD\" ;\r\nreturn 0 ;\r\n}', 1003, 51, 0, '2019-03-16 07:22:20', '2019-04-09 08:42:36'),
(303089, 469, '1360', 1003, 51, 0, '2019-03-16 07:22:20', '2019-03-16 07:22:20'),
(303090, 470, '1365', 1003, 51, 0, '2019-03-16 07:22:20', '2019-03-16 07:22:20'),
(303091, 475, '1383', 1003, 51, 2, '2019-03-16 07:22:20', '2019-03-16 07:22:20'),
(303092, 477, 'int i =0;\r\n\r\nfor(int count =0; count<20; count++)\r\n{\r\ncin>> i;\r\nif (i%2==0)\r\n{\r\n cout <<\"the even number=\"<<i;\r\n   else\r\ncout <<\"the odd number =\"<<i;\r\n}\r\n}         \r\nreturn 0 ;\r\n}', 1003, 51, 0, '2019-03-16 07:22:20', '2019-04-09 08:42:36'),
(303093, 478, '1386', 1003, 51, 1, '2019-03-16 07:22:20', '2019-03-16 07:22:21'),
(303094, 479, 'Int main()\r\n{ int x= 0 , sum =0 ;\r\nfor(int i = 1 ; i< 100 ; i++)\r\n{ cin>>x;   \r\nsum+= x;     \r\n     cout<< \" the even number =\"<<sum+=x;\r\ncout<< \" the odd number =\"<<    sum+=x;\r\n\r\n}', 1003, 51, 0, '2019-03-16 07:22:20', '2019-03-18 11:18:29'),
(303095, 480, '1393', 1003, 51, 1, '2019-03-16 07:22:20', '2019-03-16 07:22:21'),
(303096, 481, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nfor(int n=1 ; n>0 ; n--)\r\ncin>> n ;\r\nn*=n ;\r\ncout << n ;\r\nreturn 0 ;\r\n}', 1003, 51, 0, '2019-03-16 07:22:20', '2019-03-18 11:18:29'),
(303171, 467, '1355', 944, 51, 2, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303172, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nif(x>y){\r\nfor(int i=1;i<=y;i++){\r\nif(x%(y/i)==o)\r\n {  \r\ncout<<i;\r\nbreak;\r\n}\r\n}\r\n}\r\nelse\r\n{\r\nfor(int i=1;i<=x;i++){\r\nif(y%(x/i)==o)\r\n{  cout<<i;\r\nbreak ;\r\n}\r\n}\r\n}\r\n system(\"pause\");\r\nreturn 0;\r\n}', 944, 51, 2, '2019-03-16 07:22:33', '2019-04-09 08:45:13'),
(303173, 469, '1360', 944, 51, 0, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303174, 470, '1365', 944, 51, 0, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303175, 475, '1383', 944, 51, 2, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303176, 477, 'int i=1;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\ncout<<i;\r\ni=i+2;\r\ncount ++;\r\n}', 944, 51, 2, '2019-03-16 07:22:33', '2019-04-09 08:45:13'),
(303177, 478, '1387', 944, 51, 0, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303178, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint e=0,o=0;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(i%2==0)  e=e+i;\r\nelse  o=o+i;\r\n}\r\ncout<<\"sum of even numbers = \"<<e<<endl<<\"sum of odd numpers = \"<<o;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 944, 51, 2, '2019-03-16 07:22:33', '2019-03-18 11:19:24'),
(303179, 480, '1393', 944, 51, 1, '2019-03-16 07:22:33', '2019-03-16 07:22:33'),
(303180, 481, 'for(int i=n-1;i>0;i--)     \r\n{\r\nn=n*i;\r\n}      \r\ncout<<n;', 944, 51, 2, '2019-03-16 07:22:33', '2019-03-18 11:19:24'),
(303418, 467, '1354', 1057, 51, 0, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303419, 468, 'int x,y;\r\ncin <<x;\r\ncin<<y;\r\ni=x-y\r\ncout <<i;', 1057, 51, 0, '2019-03-16 07:22:56', '2019-04-09 08:45:34'),
(303420, 469, '1360', 1057, 51, 0, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303421, 470, '1365', 1057, 51, 0, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303422, 475, '1383', 1057, 51, 2, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303423, 477, 'if (i%2==0){\r\nfor (int i=o; i<10; i++)\r\n                    }\r\ncout <<i ;', 1057, 51, 0, '2019-03-16 07:22:56', '2019-04-09 08:45:34'),
(303424, 478, '1386', 1057, 51, 1, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303425, 479, 'for (int i=0; i<100 ; i++)\r\ncout<<i;', 1057, 51, 0, '2019-03-16 07:22:56', '2019-03-18 11:20:13'),
(303426, 480, '1393', 1057, 51, 1, '2019-03-16 07:22:56', '2019-03-16 07:22:56'),
(303427, 481, 'int n,f\r\nfor (int i=0; i<n ; i++)\r\nf=1\r\nf=f*i\r\ncout<<f;', 1057, 51, 0.5, '2019-03-16 07:22:56', '2019-03-18 11:20:13'),
(303643, 467, '1354', 1065, 51, 0, '2019-03-16 07:23:15', '2019-03-16 07:23:16'),
(303644, 468, 'int x,y,z;\r\n      cout <<\"enter your tow number\"\r\n   cin>>x>>y;\r\nz=x/y;\r\ncout <<z;\r\ncout <<endl;', 1065, 51, 0, '2019-03-16 07:23:16', '2019-04-09 08:45:49'),
(303645, 469, '1358', 1065, 51, 0, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(303646, 470, '1362', 1065, 51, 2, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(303647, 475, '1383', 1065, 51, 2, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(303648, 477, 'if(', 1065, 51, 0, '2019-03-16 07:23:16', '2019-04-09 08:45:49'),
(303649, 478, '1388', 1065, 51, 0, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(303650, 479, 'int x,y,odd,even;\r\n                         cout <<\"enter your tow number \"<<endl;\r\n                         cin>>x;\r\nif (x%2 ==0)\r\n{\r\ncout <<even ;\r\nelse\r\n cout <<odd;\r\n}', 1065, 51, 0, '2019-03-16 07:23:16', '2019-03-18 11:20:39'),
(303651, 480, '1390', 1065, 51, 0, '2019-03-16 07:23:16', '2019-03-16 07:23:16'),
(303652, 481, 'int n;\r\ncout <<\"enter your number \";\r\ncin>>n;\r\nfor(int i=0;i>=1;i++)\r\n{\r\nfor (int j=1;j<=n-1;j++)\r\ncout    <<i;                                              \r\n}', 1065, 51, 0, '2019-03-16 07:23:16', '2019-03-18 11:20:39'),
(303712, 467, '1355', 937, 51, 2, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303714, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x,y,m=0;\r\ncin>>x>>y;\r\nif(x<=y){\r\nfor(int i=2;i<=y;i++){\r\nif(x%i==0&& y%i==0){\r\n        if(i>m){\r\nm=i;\r\n}\r\n}\r\ncout<<m;\r\n }\r\n}\r\nelse {\r\nfor(int i=2;i<=y;i++){\r\nif(x%i==0&& y%i==0){\r\n   if(i>m){\r\nm=i;\r\n}\r\n}\r\n}\r\n}\r\ncout<<GCD = \"<<m;\r\n }', 937, 51, 4, '2019-03-16 07:23:24', '2019-04-09 08:47:23'),
(303716, 469, '1359', 937, 51, 0, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303718, 470, '1365', 937, 51, 0, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303720, 475, '1383', 937, 51, 2, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303722, 477, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{    \r\nint i=0;\r\nwhile(i<20){\r\n if(i%2!=0){\r\ncout<<i<<endl;\r\n}\r\ni++;\r\n}  \r\n}', 937, 51, 2, '2019-03-16 07:23:24', '2019-04-09 08:47:23'),
(303724, 478, '1386', 937, 51, 1, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303726, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{       \r\nint o=0,e=0;\r\nfor(int i=0;i<100;i++){\r\nif(i%2==0){\r\ne+=i;\r\n}\r\nelse {\r\no+=i;\r\n}\r\n}  \r\ncout<<\"sum of even = \"<<e<< \"sum of even = \"<<o<<endl;   \r\n}', 937, 51, 2, '2019-03-16 07:23:24', '2019-03-18 11:22:20'),
(303728, 480, '1393', 937, 51, 1, '2019-03-16 07:23:24', '2019-03-16 07:23:25'),
(303730, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{  \r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++){\r\nf*=i;\r\n}\r\ncout<<f<<endl;\r\n}', 937, 51, 2, '2019-03-16 07:23:24', '2019-03-18 11:22:20'),
(303769, 467, '1355', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303770, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n          int x,y;\r\ncin>>x>>y;   \r\nif(x>y)\r\n{\r\n                 for(int i = 0;i < y; i++)\r\n        {\r\n           if(x%i==0)   \r\n                  {\r\n                        if(y%i==0)\r\n                          {\r\n                              cout<<i<<endl;\r\n                              }\r\n                }\r\n }\r\nif(y>x)\r\n{\r\n     for(int i = 0;i<x;i++)\r\n        {\r\n             if(x%i==0)\r\n             {\r\n                 if(y%i==0)\r\n              {\r\n                    cout<<i<<endl;\r\n                  }\r\n           }\r\n}', 958, 51, 3, '2019-03-16 07:23:28', '2019-04-09 08:48:00'),
(303771, 469, '1361', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303772, 470, '1362', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303773, 475, '1383', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303774, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint count =0;\r\nwhile(count<10)\r\n       {\r\n                    if(count%2!=0)\r\n                          {\r\n                                   cout<<count<<endl;\r\n                          }\r\n                            count++ \r\n        }   \r\nsystem(\"pause\");\r\n}', 958, 51, 1, '2019-03-16 07:23:28', '2019-04-09 08:48:49'),
(303775, 478, '1386', 958, 51, 1, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303776, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0,sumodd=0;\r\n     for(int i = 0;i<100;i++)\r\n       {\r\n                     if(i%2==0)\r\n                        {\r\n                                         sumeven=sumeven+i;\r\n                        }\r\n                       else\r\n                       {\r\n                              sumodd=sumodd+i\r\n                       } \r\n       }   \r\ncout<<\"the sum of the evwn numbers =     \"<<sumeven<<endl;\r\ncout<<\"the sum of the odd numbers =        \"<<sumodd<<endl; \r\nsystem(\"pause\");\r\n}', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-18 11:22:57'),
(303777, 480, '1393', 958, 51, 1, '2019-03-16 07:23:28', '2019-03-16 07:23:29'),
(303778, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint number,factorial=1;\r\ncin>>number;\r\n      for(int i=1;i<=number;i++)\r\n         {\r\n              factorial=factorial*i;    \r\n         }\r\ncout<<factorial<<endl;\r\nsystem(\"pause\");\r\n}', 958, 51, 2, '2019-03-16 07:23:28', '2019-03-18 11:22:57'),
(303931, 467, '1355', 1009, 51, 2, '2019-03-16 07:23:49', '2019-03-16 07:23:50'),
(303933, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x,y;\r\nif(x<y)\r\n{\r\nfor(int i=x;i<=0;i--)\r\nif(x/i==y/i)\r\ncout<<i<<endl\r\n\r\n}\r\nelse\r\n{\r\nfor(int i=y;i<=0;i--)\r\nif(x/i==y/i)\r\ncout<<i<<endl\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}', 1009, 51, 0.5, '2019-03-16 07:23:50', '2019-04-09 08:50:27'),
(303935, 469, '1361', 1009, 51, 2, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(303937, 470, '1364', 1009, 51, 0, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(303939, 475, '1385', 1009, 51, 0, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(303941, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n int i =0;\r\nint count =0;\r\nwhile(count <10)\r\n{\r\nif(i%2 == 0)\r\n{\r\ncout<<++i<<endl;\r\ncount++;\r\n}\r\n}                                           \r\n\r\n\r\n}', 1009, 51, 1, '2019-03-16 07:23:50', '2019-04-09 08:50:27'),
(303943, 478, '1387', 1009, 51, 0, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(303945, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint even,odd;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(i%2==0)\r\n{\r\n    even=even+i;\r\n            cout<<even<<endl;\r\n}\r\nelse\r\n{\r\n     odd=odd+i;\r\n             cout<<odd<<endl;\r\n\r\n}\r\n}              \r\n\r\n\r\n\r\n}', 1009, 51, 1, '2019-03-16 07:23:50', '2019-03-18 11:23:55'),
(303947, 480, '1393', 1009, 51, 1, '2019-03-16 07:23:50', '2019-03-16 07:23:50'),
(303948, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint x,mul=1;\r\ncin>>x;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nmul=mul*i;\r\n  cout<< mul<<endl;    \r\n\r\n} \r\n\r\n\r\n\r\n\r\n{', 1009, 51, 1.5, '2019-03-16 07:23:50', '2019-03-18 11:23:55'),
(303968, 467, '1355', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-16 07:23:51'),
(303969, 468, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint x=0,y=0,z=0;\r\ncout <<\"enter a two numbers \\n\";\r\ncin>>x>>y;\r\nif (x>y){\r\nif(x%y==0){\r\ncout<<\"GCD is\"<<y\"\\n\";}\r\nelse{\r\ndo{\r\ny--}\r\nwhile(x%y!=0);\r\nz=x/y;\r\ncout<<\"GCD is\"<< z \"\\n\";\r\n}\r\nelse{\r\nif(y%x==0){cout<<\"GCD is\"<< x \"\\n\";}\r\nelse{do{x-- ; }while(y%x!=0); z=y/x; cout<<\"GCD is\"<< z \"\\n\";}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 899, 51, 1, '2019-03-16 07:23:51', '2019-04-09 09:31:21'),
(303970, 469, '1361', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-16 07:23:52'),
(303971, 470, '1362', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-16 07:23:52'),
(303972, 475, '1383', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-16 07:23:52'),
(303973, 477, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint i=1;\r\nint count =0;\r\nwhile (count>=20){\r\nif(i%2!0=){\r\ncout<<i<<endl;\r\ncount ++;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 899, 51, 1, '2019-03-16 07:23:51', '2019-04-09 09:31:21'),
(303974, 478, '1386', 899, 51, 1, '2019-03-16 07:23:51', '2019-03-16 07:23:52'),
(303975, 479, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint sumeven=-0,sumodd=0;\r\nfor(int i=1;i<=100;i++){\r\nif(i%2==0){sumeven +=i;}\r\nelse{sumodd +=i;}\r\n}\r\ncout<<sumeven<<endl<<sumodd<<endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-18 11:24:43'),
(303976, 480, '1393', 899, 51, 1, '2019-03-16 07:23:51', '2019-03-16 07:23:52'),
(303977, 481, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n=0;\r\ncout <<\"enter a number \\n\";\r\ncin>>n;\r\nfor(int i=1;i<n;i++){\r\nn*=i;\r\n}\r\ncout <<\"the  factorial  is\"<<n; \r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;      \r\n}', 899, 51, 2, '2019-03-16 07:23:51', '2019-03-18 11:24:43'),
(304035, 467, '1357', 1029, 51, 0, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304036, 468, 'wsw', 1029, 51, 0, '2019-03-16 07:23:59', '2019-04-09 09:38:52'),
(304037, 469, '1360', 1029, 51, 0, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304038, 470, '1363', 1029, 51, 0, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304039, 475, '1383', 1029, 51, 2, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304040, 477, 'int i=0;\r\nint count =0;\r\nwhile(count<=18)\r\n{\r\nif(i%2==0)\r\n{\r\ncout<<i<<endl;\r\n}\r\nelse\r\n{\r\ncout<<\" \";\r\n}\r\ncount++\r\n}', 1029, 51, 1, '2019-03-16 07:23:59', '2019-04-09 09:38:52'),
(304041, 478, '1386', 1029, 51, 1, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304042, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main()                                      \r\n{\r\nfo', 1029, 51, 0, '2019-03-16 07:23:59', '2019-03-18 11:25:10'),
(304043, 480, '1393', 1029, 51, 1, '2019-03-16 07:23:59', '2019-03-16 07:23:59'),
(304044, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint n ;\r\nfor (int i =1;i<=n;i++)\r\n{\r\ncin>>n;\r\nint x=1 ;\r\nx=x*n;\r\nn=n--;\r\n\r\n}\r\ncout<<x;\r\n}', 1029, 51, 0, '2019-03-16 07:23:59', '2019-03-18 11:25:10'),
(304055, 467, '1355', 906, 51, 2, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304056, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,GCD=0;\r\ncin>>x>>y;\r\nif(x>=y)\r\nfor(int i=1;i<=y;i++)\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 906, 51, 0, '2019-03-16 07:24:00', '2019-04-09 09:40:09'),
(304057, 469, '1361', 906, 51, 2, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304058, 470, '1362', 906, 51, 2, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304059, 475, '1385', 906, 51, 0, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304060, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i =0;\r\nint count =0;\r\nwhile(count <20){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}', 906, 51, 2, '2019-03-16 07:24:00', '2019-04-09 09:40:09'),
(304061, 478, '1386', 906, 51, 1, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304062, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0,sumodd=0;\r\n{\r\nfor(int i=0;i<100,I++)\r\n{\r\nif(i%2=0)\r\nsumeven+=i\r\nelse\r\nsumodd+=i\r\n}                                                                                                                                                      \r\ncout<<sumeven<<endl<<somodd;\r\n}', 906, 51, 1.5, '2019-03-16 07:24:00', '2019-03-18 11:25:47'),
(304063, 480, '1393', 906, 51, 1, '2019-03-16 07:24:00', '2019-03-16 07:24:00'),
(304064, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,fact=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\nfact*=i;\r\ncout<<fact;\r\n}\r\nreturn 0;', 906, 51, 2, '2019-03-16 07:24:00', '2019-03-18 11:25:47'),
(304115, 467, '1355', 945, 51, 2, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304117, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{ \r\nint x,y;\r\ncin>>x >>y;\r\nsum=y-x;\r\ncout<<sum;', 945, 51, 0, '2019-03-16 07:24:04', '2019-04-09 09:40:26'),
(304119, 469, '1361', 945, 51, 2, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304121, 470, '1364', 945, 51, 0, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304123, 475, '1385', 945, 51, 0, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304125, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2!=0)\r\n{cout<<i <<endl;\r\ncount++;\r\n}}', 945, 51, 1, '2019-03-16 07:24:04', '2019-04-09 09:40:26'),
(304127, 478, '1386', 945, 51, 1, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304129, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{ \r\n int odd=0,even=0;\r\nfor(int i=1; i<100;  i++)\r\n{\r\nif( i%2==0)\r\neven=even+i;\r\nelse\r\nodd=odd+i;\r\n}\r\ncout<<\"even = \" <<even;\r\ncout<<\"odd =  \" <<odd; \r\n}', 945, 51, 2, '2019-03-16 07:24:04', '2019-03-18 11:26:36'),
(304131, 480, '1393', 945, 51, 1, '2019-03-16 07:24:04', '2019-03-16 07:24:04'),
(304133, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{ \r\n int x,f=1;\r\ncin>>x;\r\nfor(int i=1; i<=x; i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f;\r\n}', 945, 51, 2, '2019-03-16 07:24:04', '2019-03-18 11:26:36'),
(304155, 467, '1355', 1039, 51, 2, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304156, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x , y,c ;\r\ncin>>x>>y;\r\nif (x>y){\r\nfor (int i = 1 ; i< y ;i++){\r\nif (x/i==0 && y/i==0)\r\n{\r\nc=i;\r\n}\r\n}\r\ncout<<c<<\"\\n\";\r\n}\r\nelse {\r\nfor(int i =1 ;i<=x;i++)\r\n{\r\nif (x / i==0 &&  y / i ==0)\r\n{\r\nc=i;\r\n}\r\n}\r\ncout<<c<<\"\\n\";\r\n}\r\nsystem(\"pause\");\r\n}', 1039, 51, 4, '2019-03-16 07:24:05', '2019-04-09 09:41:09'),
(304157, 469, '1359', 1039, 51, 0, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304159, 470, '1362', 1039, 51, 2, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304161, 475, '1383', 1039, 51, 2, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304163, 477, 'int i=1;\r\nint count = 0;\r\nwhile (count <10){\r\nif (i%2 != 0){\r\ncout<<i<<endl;\r\n}\r\ncount ++;\r\ni++;\r\n}', 1039, 51, 1, '2019-03-16 07:24:05', '2019-04-09 09:41:09'),
(304165, 478, '1386', 1039, 51, 1, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304167, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint odd = 0 , even = 0 , sum ;\r\nfor (int i = 1 ; i<100 ; i++)\r\n{\r\nif (i %2 == 0)\r\n    even = even + i ;\r\nif ( i % 2 != 0)\r\n   odd = odd + i;\r\n} \r\nsum = even + odd;\r\ncout<<sum <<\"\\n\";\r\nsystem (\"pause \");\r\n}', 1039, 51, 1.5, '2019-03-16 07:24:05', '2019-03-18 11:27:52'),
(304169, 480, '1393', 1039, 51, 1, '2019-03-16 07:24:05', '2019-03-16 07:24:06'),
(304171, 481, '#include <iostream>\r\nusing namespace std ;\r\nvoid main()\r\n{\r\nlong long  n , fact = 1;\r\ncin >>n;\r\nfor (int i=1;i<=n;i++ )\r\n{\r\nfact = fact * i ;\r\n\r\n\r\n}\r\ncout << fact <<\"\\n\";\r\nsystem(\"pause\");\r\n}', 1039, 51, 1.5, '2019-03-16 07:24:06', '2019-03-18 11:27:52'),
(304237, 467, '1354', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304238, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y;\r\ncout<<\"enter two number\";\r\ncin>>x>>y;\r\nif (x==18 && y==24);\r\ncout<<\"the GCD is\";\r\nststeam(\"pause\")\r\nreturn 0;\r\n}', 968, 51, 0, '2019-03-16 07:24:13', '2019-04-09 09:41:44'),
(304239, 469, '1361', 968, 51, 2, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304240, 470, '1363', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304241, 475, '1385', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304242, 477, 'int i=0;\r\nint (count < 10) \r\nwhile ( count < 10)\r\n{ \r\nif( i%2 ==1) {\r\ncout<<endl;\r\ncount++;\r\n}\r\n}', 968, 51, 0, '2019-03-16 07:24:13', '2019-04-09 09:41:44'),
(304243, 478, '1388', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304244, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y,z;\r\ncin>>x>>y>>z;\r\nif(x < 100)\r\ncout<<\"x+y\";\r\nelse(x < 100)\r\ncout<<\"x-y\";\r\nststeam(\"pause\")\r\nreturn 0;\r\n}', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-19 07:40:29'),
(304245, 480, '1393', 968, 51, 1, '2019-03-16 07:24:13', '2019-03-16 07:24:14'),
(304246, 481, '#include<iostream>\r\nusing namespace std;\r\nint main () {\r\nint fac;\r\ncout<<\"enter thr fac\";\r\ncin>>fac;{\r\nfor( i=0; n=n-1 )\r\ncout<<\"the fac\";\r\nsystram(\"pause\");\r\nreturn 0;\r\n}\r\n\r\n\r\n\r\n}', 968, 51, 0, '2019-03-16 07:24:13', '2019-03-19 07:40:29'),
(304305, 467, '1354', 956, 51, 0, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304307, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint a ,b , c ; \r\ncin >> a >> b ;\r\n\r\n      for(i=1 ; i<=a&&i<=b ; i++ ) {\r\nif(a%i==0 && b%i == 0 ){\r\nc=i;\r\n}\r\ncout<< c ;\r\nreturn 0;\r\n}', 956, 51, 4, '2019-03-16 07:24:23', '2019-04-09 09:42:22'),
(304309, 469, '1361', 956, 51, 2, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304311, 470, '1362', 956, 51, 2, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304313, 475, '1383', 956, 51, 2, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304315, 477, 'int counter =0 ;\r\nwhile(count <10 ){\r\nif(count%2==0 )\r\ncout<< count << endl ;\r\ncoun++ ; \r\n}\r\n}', 956, 51, 0, '2019-03-16 07:24:23', '2019-04-09 09:42:22'),
(304317, 478, '1386', 956, 51, 1, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304319, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumodd =0 , sumeven =0;\r\nfor(int i =0 ; i<100 ; i++ )\r\n{\r\nif(i%2==0){\r\nsumeven +=i ;\r\n}\r\nelse\r\n{\r\nsumodd+=i ;\r\n}\r\n }\r\ncout << \"sum of odd = \" << sumodd << endl ; \r\ncout << \" sum of even = \" <<  sumeven ;   \r\nreturn 0 ;\r\n}', 956, 51, 2, '2019-03-16 07:24:23', '2019-03-19 07:41:12'),
(304321, 480, '1393', 956, 51, 1, '2019-03-16 07:24:23', '2019-03-16 07:24:23'),
(304323, 481, 'int n  ; \r\ncin>>n , b=1  ;                                          \r\n  for(int a=n ; a>=1; a--)  {\r\nb*=a ;\r\n}\r\ncout<< b;', 956, 51, 2, '2019-03-16 07:24:23', '2019-03-19 07:41:12'),
(304366, 467, '1355', 1028, 51, 2, '2019-03-16 07:24:28', '2019-03-16 07:24:30'),
(304367, 468, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x, y ;\r\ncout << \"please enter any two numbers \"<<endl;\r\ncin>>x;\r\ncin>>y;\r\nif (x>y)\r\ncout << x - y;\r\nelse\r\ncout<< y - x;\r\nreturn0;\r\n}', 1028, 51, 0, '2019-03-16 07:24:28', '2019-04-09 09:43:18'),
(304368, 469, '1361', 1028, 51, 2, '2019-03-16 07:24:28', '2019-03-16 07:24:30'),
(304369, 470, '1365', 1028, 51, 0, '2019-03-16 07:24:28', '2019-03-16 07:24:30'),
(304370, 475, '1383', 1028, 51, 2, '2019-03-16 07:24:28', '2019-03-16 07:24:30'),
(304371, 477, 'int i = 1;\r\nint count = 0;\r\nwhile (count < 20){\r\nif (i%2 == 1)\r\ncout << i <<endl;\r\ncount++;\r\ni = i + 2 ;\r\n}', 1028, 51, 1.5, '2019-03-16 07:24:28', '2019-04-09 09:43:18'),
(304372, 478, '1386', 1028, 51, 1, '2019-03-16 07:24:28', '2019-03-16 07:24:31'),
(304373, 479, '#include <iostream>\r\nusing    namespace std;\r\nint main ()\r\n{\r\nint x =0;\r\nint y = 0;\r\nfor (int i=0 ;i<100;i = i+2)\r\nx = x + i ;\r\ncout << x<<endl;\r\nfor ( int j=1;j<100;j = j+2)\r\ny = y + j;\r\ncout << y <<endl;\r\nreturn0;\r\n}', 1028, 51, 2, '2019-03-16 07:24:28', '2019-03-19 07:42:21'),
(304374, 480, '1393', 1028, 51, 1, '2019-03-16 07:24:28', '2019-03-16 07:24:31'),
(304375, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin >>n;\r\nfor (int i=1; i<n;i++)\r\nn =  n *  i    ;\r\ncout << n <<endl;                  \r\nreturn0;\r\n}', 1028, 51, 0, '2019-03-16 07:24:28', '2019-03-19 07:42:21'),
(304386, 467, '1355', 1041, 51, 2, '2019-03-16 07:24:30', '2019-03-16 07:24:31'),
(304387, 468, 'int x , y;\r\n\r\nif ()\r\ncout<<z<<endl;', 1041, 51, 0, '2019-03-16 07:24:31', '2019-04-09 09:43:41'),
(304388, 469, '1358', 1041, 51, 0, '2019-03-16 07:24:31', '2019-03-16 07:24:31'),
(304389, 477, 'int i=0;\r\nint counter =0;\r\nwhile (counter<10)\r\n{\r\nif(i/2 !== 0) \r\ncout <<i<<endl;\r\n}\r\ncounter++', 1041, 51, 0, '2019-03-16 07:24:31', '2019-04-09 09:43:41'),
(304390, 479, 'int x, y, counter=0, sum=0;\r\nwhile (counter <=100)\r\n{cin>>x\r\nsum+=counter\r\n}\r\ncounter+\r\n{\r\ncin<<y;\r\nsum +=counter\r\n}\r\ncounter++', 1041, 51, 0, '2019-03-16 07:24:31', '2019-03-19 07:42:54'),
(304391, 481, NULL, 1041, 51, 0, '2019-03-16 07:24:31', '2019-03-19 07:42:54'),
(304408, 467, '1355', 1038, 51, 2, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304409, 468, NULL, 1038, 51, 0, '2019-03-16 07:24:33', '2019-04-09 09:45:54'),
(304410, 469, '1360', 1038, 51, 0, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304411, 470, '1362', 1038, 51, 2, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304412, 475, '1383', 1038, 51, 2, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304413, 477, 'int i= 1;\r\nint count=0;\r\nwhile (count <20)\r\n{\r\nif(i%2==0)\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}', 1038, 51, 1, '2019-03-16 07:24:33', '2019-04-09 09:45:54'),
(304414, 478, '1386', 1038, 51, 1, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304415, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n\r\n\r\nint sumofeven = 0;\r\nint sumofodd = 0;\r\nfor (int i = 1;i<100;i++)\r\n{\r\n   if(i%2==0) \r\n     sumofeven = sumofeven+i;\r\n   else\r\n     sumofodd = sumofodd+i;\r\n}\r\nsystem(\"pause\");\r\n\r\n}', 1038, 51, 2, '2019-03-16 07:24:33', '2019-03-19 07:44:24'),
(304416, 480, '1393', 1038, 51, 1, '2019-03-16 07:24:33', '2019-03-16 07:24:40'),
(304417, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x;\r\nint f=1;\r\ncin>>x;\r\nfor (int i=1;i<=x;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout <<f<<endl;\r\nsystem(\"pause\");\r\n}', 1038, 51, 2, '2019-03-16 07:24:33', '2019-03-19 07:44:24'),
(304487, 467, '1354', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304488, 468, '#include <iostream> \r\n         using namespace std;\r\nint main(){\r\nint x,y,c=0,w=0,count=0;\r\ncin>>x,y;\r\nfor(int i=1;i<=conut;i++)\r\n\r\nc=x/i;\r\nw=y/i;\r\nif(c>w)\r\ncout<<c;\r\nelse\r\ncout<<w;\r\n\r\n\r\n\r\n}', 919, 51, 0, '2019-03-16 07:24:40', '2019-04-09 09:46:32'),
(304489, 469, '1360', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304490, 470, '1364', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304491, 475, '1385', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304492, 477, 'int i=1;\r\nint count=0;\r\nwhile(count<10) \r\n{     if(i%2==0){\r\ncout<<i<<endl;\r\n}\r\ncount++;  \r\n}', 919, 51, 0, '2019-03-16 07:24:40', '2019-04-09 09:46:32'),
(304493, 478, '1386', 919, 51, 1, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304494, 479, '#include  <iostream>\r\n            using namespace   std;\r\nint main(){\r\nint n;\r\nCin>>n;\r\nwhile(n<100)\r\n{\r\nif(n%2==o)\r\ncout<<\"even\";\r\nelse\r\ncout<<\"odd\";  \r\n}\r\nreturn 0;\r\n}', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-19 07:45:14'),
(304495, 480, '1390', 919, 51, 0, '2019-03-16 07:24:40', '2019-03-16 07:24:40'),
(304496, 481, 'int n,f=1;\r\nsum=0;\r\n      for(int i=1;i<=n;i++)   \r\n                f=f*i;  \r\nsum+=f', 919, 51, 1, '2019-03-16 07:24:40', '2019-03-19 07:45:14'),
(304527, 467, '1354', 1021, 51, 0, '2019-03-16 07:24:41', '2019-03-16 07:24:42');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(304528, 468, '#include<iostream>\r\nusing namespace std;\r\nint main( )\r\n{\r\n  int x,y;\r\n  cout<<\"Please Enter The Number\";\r\n  cin>>x>>y;\r\n   \r\n  \r\n\r\n return 0;\r\n}', 1021, 51, 0, '2019-03-16 07:24:41', '2019-04-09 09:46:47'),
(304529, 469, '1360', 1021, 51, 0, '2019-03-16 07:24:41', '2019-03-16 07:24:42'),
(304531, 470, '1363', 1021, 51, 0, '2019-03-16 07:24:41', '2019-03-16 07:24:42'),
(304533, 475, '1383', 1021, 51, 2, '2019-03-16 07:24:41', '2019-03-16 07:24:42'),
(304535, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;    \r\n}\r\n}', 1021, 51, 1, '2019-03-16 07:24:42', '2019-04-09 09:46:47'),
(304537, 478, '1386', 1021, 51, 1, '2019-03-16 07:24:42', '2019-03-16 07:24:42'),
(304539, 479, '#include<iostream>\r\n using namespace std;\r\n int main( )\r\n {  \r\n   int odd_sum=0,even_sum=0,num;i;\r\n   cout<<\"Enter The Number \\n\";\r\n   for(i=1;i<=num:i++)\r\n   {\r\n      if (i % 2 == 0)\r\n            even_sum = even_sum + i;\r\n        else\r\n            odd_sum = odd_sum + i;\r\n    }\r\ncout<<\"sum of all odd number\"<<odd_sum<<endl;\r\ncout<<\"sum of all even numbers\"<<even-sum<<endl;\r\nreturn 0;\r\n}', 1021, 51, 1.5, '2019-03-16 07:24:42', '2019-03-19 07:45:49'),
(304541, 480, '1390', 1021, 51, 0, '2019-03-16 07:24:42', '2019-03-16 07:24:42'),
(304543, 481, '#include<iostream>\r\n using namespace std;\r\n int main( )\r\n {\r\n  int n;\r\n  for(i=1;i<=n;--n)\r\n  \r\n }', 1021, 51, 0, '2019-03-16 07:24:42', '2019-03-19 07:45:49'),
(304616, 467, '1355', 969, 51, 2, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304617, 468, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x;\r\nint y;\r\nc in>>x>>y;\r\nfor(int i=1;', 969, 51, 0, '2019-03-16 07:24:47', '2019-04-09 09:47:44'),
(304618, 469, '1361', 969, 51, 2, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304619, 470, '1363', 969, 51, 0, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304620, 475, '1385', 969, 51, 0, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304621, 477, 'int count=1;\r\nwhile(count<20)\r\n{\r\nif(count%2==0)\r\n{\r\ncout<<count<<endl;\r\ncount++;\r\n}\r\n}', 969, 51, 0, '2019-03-16 07:24:47', '2019-04-09 09:47:45'),
(304622, 478, '1386', 969, 51, 1, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304623, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint sum=0;\r\nfor(int i=1;i<100;i+2)\r\n{\r\nsum=sum+i;\r\n}\r\ncout<<sum<<endl;\r\nsystem(\"pause\");\r\n}', 969, 51, 1, '2019-03-16 07:24:47', '2019-03-19 08:02:54'),
(304624, 480, '1393', 969, 51, 1, '2019-03-16 07:24:47', '2019-03-16 07:24:47'),
(304625, 481, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n;\r\n cin>>n;\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f<<endl;\r\nsystem(\"pause\")\r\n}', 969, 51, 2, '2019-03-16 07:24:47', '2019-03-19 08:02:54'),
(304633, 467, '1355', 939, 51, 2, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304634, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y,z;\r\ncin>>x>>y>>z;\r\nfor(int i=1;i<=z;i++)\r\n{\r\nif(x%i==0&&y%i==0)\r\n}\r\ncout<<i;', 939, 51, 2, '2019-03-16 07:24:50', '2019-04-09 10:01:21'),
(304635, 469, '1360', 939, 51, 0, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304636, 470, '1364', 939, 51, 0, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304637, 475, '1384', 939, 51, 0, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304638, 477, 'int i=1;\r\nint count=1;\r\nwhile(count<10){\r\nif(i%2==0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 939, 51, 0, '2019-03-16 07:24:50', '2019-04-09 10:01:21'),
(304639, 478, '1386', 939, 51, 1, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304640, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sum1=0,sum2=0;\r\ncin>>x;\r\nfor(int i=1,i<=100,i++)\r\n{\r\nif(i%2==0)\r\nsum1+=i;\r\nelse if(i%2!=0)\r\nsum2+=i\r\n\r\n}\r\ncout<<sum1;\r\ncout<<sum2;\r\n}', 939, 51, 2, '2019-03-16 07:24:50', '2019-03-19 08:04:26'),
(304641, 480, '1393', 939, 51, 1, '2019-03-16 07:24:50', '2019-03-16 07:24:50'),
(304642, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,f=1;\r\ncin>>x;         \r\nfor(int i=1,i<=x;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f;\r\n}', 939, 51, 2, '2019-03-16 07:24:50', '2019-03-19 08:04:26'),
(304663, 467, '1355', 973, 51, 2, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304664, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main ()\r\n{\r\nint x,y,a,b;\r\ncin>>x>>y;\r\ndo\r\n{\r\n for (int i=1;i<=x;i++)a=x/i;\r\nif (a==b)break;\r\nfor (int j=1;j<=y;j++)b=y/i;\r\n}\r\nwhile (a!=b)\r\ncout<<a<<endl;\r\n}', 973, 51, 0, '2019-03-16 07:24:52', '2019-04-09 10:02:11'),
(304665, 469, '1360', 973, 51, 0, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304666, 470, '1364', 973, 51, 0, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304667, 475, '1385', 973, 51, 0, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304668, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\n}\r\ncount++;\r\n\r\n}', 973, 51, 1, '2019-03-16 07:24:52', '2019-04-09 10:02:11'),
(304669, 478, '1386', 973, 51, 1, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304670, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main ()\r\n{\r\nint sum1=0,sum2=0;\r\nfor (int i=0;i<100;i++)\r\n{\r\nif (i%2==0){sum1=sum1+i}\r\nelse {sum2=sum2+i}\r\n\r\n}\r\ncout<<sum1<<sum2;\r\n}', 973, 51, 2, '2019-03-16 07:24:52', '2019-03-19 08:05:03'),
(304671, 480, '1393', 973, 51, 1, '2019-03-16 07:24:52', '2019-03-16 07:24:53'),
(304672, 481, '#include <iostream>\r\nusing namespace std;\r\nvoid main ()\r\n{\r\nint n,f=1;\r\ncin>>n;\r\nfor (int i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f<<endl;\r\n}', 973, 51, 2, '2019-03-16 07:24:52', '2019-03-19 08:05:03'),
(304703, 467, '1354', 954, 51, 0, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304704, 468, '#include<iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint n , x ;\r\ncout<<\"Enter numbers\"\r\ncin >>n ;\r\ncin >> x ;\r\nint i =1 ;\r\nwhile (i<x && i <n )\r\n{\r\nif ( x% i ==0){\r\ncout <<i<<endl ; \r\n}\r\nsystem (\"pause\" );\r\n}', 954, 51, 2, '2019-03-16 07:24:55', '2019-04-09 10:07:41'),
(304706, 469, '1360', 954, 51, 0, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304708, 470, '1363', 954, 51, 0, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304710, 475, '1383', 954, 51, 2, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304713, 477, 'int i =1;\r\nint count =1;\r\nwhile(count <10){\r\ncout<<i<<endl;\r\ncount+= 2;\r\n}', 954, 51, 1, '2019-03-16 07:24:55', '2019-04-09 10:07:41'),
(304716, 478, '1386', 954, 51, 1, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304719, 479, '#include<iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint sum of the even = 0; \r\nint sum of the odd =0;\r\nfor ( int i =1 ; i<100 ;i++){\r\nif( i%2==0) {\r\nsum of even = sum of even + i ;\r\n}\r\nelse {\r\nsum of odd  = sum of odd + i ;\r\n}\r\n}\r\ncout<< \"sum of the odd = \" << sum of the odd <<endl ;\r\ncout << \"sum of the even = \" << sum of the even <<endl ; \r\n\r\n}', 954, 51, 1.5, '2019-03-16 07:24:55', '2019-03-19 08:05:47'),
(304722, 480, '1393', 954, 51, 1, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304725, 481, '#include<iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint n ;\r\nint fact=1;\r\ncin >>n;\r\nfor (int i = 1 ; i<= n;i++){\r\nfact= fact * i ;\r\n}\r\ncout << \" Fact = \" << fact << endl ;\r\n}', 954, 51, 2, '2019-03-16 07:24:55', '2019-03-19 08:05:47'),
(304730, 467, '1355', 1031, 51, 2, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304732, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{ double  numb1,numb2, divis=0;\r\ncout<<\"enter two number\";\r\ncin>>x>>y;\r\nif(numb2!=0)\r\n{\r\ndivis=numb1%numb2;\r\n}\r\ncout<<divis; \r\nreturn 0;\r\n}', 1031, 51, 0, '2019-03-16 07:24:55', '2019-04-09 10:08:54'),
(304734, 469, '1358', 1031, 51, 0, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304736, 470, '1363', 1031, 51, 0, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304738, 475, '1383', 1031, 51, 2, '2019-03-16 07:24:55', '2019-03-16 07:24:56'),
(304740, 477, 'errors\r\nint i=0,count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2==0)\r\ncout<<i<<\"\\n\";\r\ni=i+2;\r\ncount++;\r\nodd\r\nint i=1,count=0;\r\nwhile(count<10)\r\n{\r\ncout<<i<<\"\\n\";\r\ni=i+2;\r\ncount +=1;\r\n}', 1031, 51, 2, '2019-03-16 07:24:56', '2019-04-09 10:08:54'),
(304742, 478, '1387', 1031, 51, 0, '2019-03-16 07:24:56', '2019-03-16 07:24:56'),
(304744, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int sumodd=0,sumeven=0;\r\nfor(int n=0;n<100;n++)\r\n{\r\n   if(n%==o)\r\n{\r\nsumeven +=n;\r\n}\r\nelse\r\n     sumodd +=n;\r\n} \r\ncout<<\"sumodd =\"<<sumodd<<\"\\n\";\r\ncout<<\"sumeven =\"<<sumeven<<\"\\n\";   \r\nreturn 0;\r\n}', 1031, 51, 1.5, '2019-03-16 07:24:56', '2019-03-19 08:06:46'),
(304746, 480, '1393', 1031, 51, 1, '2019-03-16 07:24:56', '2019-03-16 07:24:56'),
(304748, 481, '#include<iostream>\r\nusing namespace std\r\nint main()\r\n{\r\nint number,factorial=1;\r\nfor(int x=1;x<<number;x++)\r\n{\r\nfactorial=factorial*x;\r\n}\r\ncout<<factorial;\r\n}', 1031, 51, 2, '2019-03-16 07:24:56', '2019-03-19 08:06:46'),
(304763, 467, '1355', 900, 51, 2, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304764, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint n1,n2 ,sum=0;\r\ncout <<\"enter the two number \";\r\ncin >>n1>>n2 ;\r\nfor (int i=0 ; i <n1&&i<n2; i++)\r\nsum =(n1+n2)/i;\r\ncout <<sum ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 900, 51, 0, '2019-03-16 07:24:56', '2019-04-09 10:10:09'),
(304765, 469, '1358', 900, 51, 0, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304766, 470, '1365', 900, 51, 0, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304767, 475, '1385', 900, 51, 0, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304768, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 900, 51, 0, '2019-03-16 07:24:56', '2019-04-09 10:10:09'),
(304769, 478, '1386', 900, 51, 1, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304770, 479, '#include <iostream>\r\nusing namespace std;        \r\nint main ()\r\n{\r\nint sumeven,sumodd;\r\nfor (int i=0 ;i<=100;i++)\r\n{\r\nif (i%2==0)\r\nsumeven +=i;\r\nelse\r\nsumodd+=i;\r\n}\r\ncout <<\"sum even =\"<<sumeven<<endl;\r\ncout <<\"sum odd =\"<<sumodd<<endl;\r\nsystem (\"pause\");\r\nreturn 0;\r\n}', 900, 51, 1, '2019-03-16 07:24:56', '2019-03-19 08:07:44'),
(304771, 480, '1393', 900, 51, 1, '2019-03-16 07:24:56', '2019-03-16 07:24:57'),
(304772, 481, '#include <iostream>\r\nusing namespace std;        \r\nint main ()\r\n{\r\nint f=1, n;\r\ncout <<\"enter the number \";\r\ncin >>n ;\r\nfor (int i=n;i>=1;i--)\r\nn=n*(n-1)\r\nf*=n\r\ncout <<f;\r\n}', 900, 51, 0, '2019-03-16 07:24:56', '2019-03-19 08:07:44'),
(304813, 467, '1355', 1061, 51, 2, '2019-03-16 07:25:04', '2019-03-16 07:25:05'),
(304814, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,z;\r\ncout<<\"please Enter x and y\" <<endl;\r\ncin>>x,y;\r\nz=y-x;\r\ncout<<z<<endl;\r\nsystem (\"pause\")', 1061, 51, 0, '2019-03-16 07:25:04', '2019-04-09 10:11:10'),
(304815, 469, '1360', 1061, 51, 0, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304816, 470, '1363', 1061, 51, 0, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304817, 475, '1383', 1061, 51, 2, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304818, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i =1;\r\nint count =0;\r\nwhile(count <20){\r\nif(i%2 != 0){\r\n cout<<<<i<<endl;\r\ncount++;\r\n}\r\n}', 1061, 51, 1, '2019-03-16 07:25:05', '2019-04-09 10:11:10'),
(304819, 478, '1386', 1061, 51, 1, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304820, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x=0\r\nint y=0\r\nfor( int i=1; i<100;i+=2 )\r\n{ x+=i;}\r\ncout<<\" sum of odd =\"<<x<<endl;\r\nfor( int a=0; a<100 ;a+=2 )\r\n{y+=a}\r\ncout<<\" sum of even =\"<<y<<endl;\r\n}', 1061, 51, 2, '2019-03-16 07:25:05', '2019-03-19 08:09:21'),
(304821, 480, '1393', 1061, 51, 1, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304822, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,f=1;\r\ncin>>x;\r\nfor( int i=1; i<=x;i++){\r\nf=f*i\r\n}\r\ncout<<f<<endl;\r\n}', 1061, 51, 2, '2019-03-16 07:25:05', '2019-03-19 08:09:21'),
(304823, 467, '1355', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304824, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nwhile((x%x!=0)&&(y%x!=0))\r\n{\r\nx--;\r\n}\r\ncout<<\"GCD = \"<<x<<endl;\r\nsystem(\"pause\");\r\n}', 960, 51, 3, '2019-03-16 07:25:05', '2019-04-09 10:12:02'),
(304825, 469, '1361', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304826, 470, '1362', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304827, 475, '1383', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304828, 477, 'int i=0;\r\nint count =0;\r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 960, 51, 0, '2019-03-16 07:25:05', '2019-04-09 10:12:02'),
(304829, 478, '1386', 960, 51, 1, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304830, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n=100, se=0,so=0;\r\ndo\r\n{\r\nn--;\r\nif (n%2==0)\r\nse+=n;\r\nelse\r\nso+=n;\r\n}\r\nwhile(n!=0);\r\ncout<<\"sum even = \"<<se<<endl;\r\ncout<<\"sum odd = \"<<so<<endl;\r\nsystem(\"pause\");\r\n}', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-19 12:21:13'),
(304831, 480, '1393', 960, 51, 1, '2019-03-16 07:25:05', '2019-03-16 07:25:05'),
(304832, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\nfor(int i=n-1;i>0;i--)\r\n{\r\nn*=i;\r\n}\r\ncout<<\"factorial = \"<<n<<endl;\r\nsystem(\"pause\");\r\n}', 960, 51, 2, '2019-03-16 07:25:05', '2019-03-19 12:21:13'),
(304843, 467, '1356', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304844, 468, '#include<iostream>\r\nusing namespace std;\r\nmain()\r\n{int n=0,m=0,k=0\r\ncout<<\"enter two num\";\r\ncin>>k;\r\nif(n>m)\r\ncout<<n/m;\r\nelse \r\ncout<<m/n;\r\n}', 915, 51, 0, '2019-03-16 07:25:11', '2019-04-09 10:12:23'),
(304845, 469, '1360', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304846, 470, '1364', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304847, 475, '1382', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304848, 477, 'int i=1\r\nint count=0\r\nwhile(count<10){\r\nif(i%2 !=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 915, 51, 0, '2019-03-16 07:25:11', '2019-04-09 10:12:24'),
(304849, 478, '1386', 915, 51, 1, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304850, 479, '#include <iostream>\r\nusing namespace std;\r\nmain()\r\nint i=0,co=0,cu=0;\r\nif (i%2==0)\r\nco++\r\nelse\r\ncu++', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-19 12:22:06'),
(304851, 480, '1392', 915, 51, 0, '2019-03-16 07:25:11', '2019-03-16 07:25:11'),
(304852, 481, '#include <iosteram>\r\nusing namespace std;\r\nmain()\r\nint fact=1\r\n{ for (i=1;i<=n;i++)\r\n}                        fact=fact*i                                                                          \r\ncout<<\"the factorial<<\"=\"<<fact<<endl;', 915, 51, 1, '2019-03-16 07:25:11', '2019-03-19 12:22:06'),
(304885, 467, '1355', 914, 51, 2, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304887, 468, '#include<iostream>\r\nusing  namespace  std;\r\nint main()\r\n{\r\nint x;\r\nint y;\r\ncout<<\"enter the two numbers\\n\";\r\ncin>>x>>y;\r\n\r\n}', 914, 51, 0, '2019-03-16 07:25:29', '2019-04-09 10:12:48'),
(304889, 469, '1361', 914, 51, 2, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304891, 470, '1365', 914, 51, 0, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304893, 475, '1385', 914, 51, 0, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304895, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2!=0)\r\n}\r\ncout<<i<<\"\\n\";\r\ncount++;\r\n}', 914, 51, 0, '2019-03-16 07:25:29', '2019-04-09 10:12:48'),
(304897, 478, '1389', 914, 51, 0, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304900, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x;\r\nint y;\r\ncout<<\"please enter the two numbers\\n\";\r\ncin>>x>>y;\r\n\r\n}', 914, 51, 0, '2019-03-16 07:25:29', '2019-03-19 12:22:51'),
(304903, 480, '1392', 914, 51, 0, '2019-03-16 07:25:29', '2019-03-16 07:25:30'),
(304905, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\nf=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{cout<<f;\r\nf=f*i}\r\n}', 914, 51, 1.5, '2019-03-16 07:25:29', '2019-03-19 12:22:51'),
(305020, 467, '1354', 923, 51, 0, '2019-03-16 07:25:49', '2019-03-16 07:25:50'),
(305021, 468, '#include<iosream>\r\nusing namespace std;\r\nint main()\r\n{int x,y,gcd;\r\ncin>>x>>y;\r\nif(x&&y%gcd==0)\r\n{cout<<gcd<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 923, 51, 0, '2019-03-16 07:25:49', '2019-04-09 10:13:10'),
(305022, 469, '1359', 923, 51, 0, '2019-03-16 07:25:49', '2019-03-16 07:25:50'),
(305023, 470, '1363', 923, 51, 0, '2019-03-16 07:25:50', '2019-03-16 07:25:50'),
(305024, 475, '1382', 923, 51, 0, '2019-03-16 07:25:50', '2019-03-16 07:25:50'),
(305025, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int x;\r\ncin>>x;\r\nfor(int x=1;x<10;x+=2)\r\n{cout<<x<<endl;\r\n}system(\"pause\");\r\nreturn 0;\r\n}', 923, 51, 1, '2019-03-16 07:25:50', '2019-04-09 10:13:10'),
(305026, 478, '1386', 923, 51, 1, '2019-03-16 07:25:50', '2019-03-16 07:25:50'),
(305027, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int x,y;\r\ncin>>x>>y;\r\nfor(int x=1;x<100;x+=2)\r\nfor(int y=0;y<100;y+=2)\r\nsum=x+y;\r\n{cout<<sum<<endl<<;\r\n}', 923, 51, 0, '2019-03-16 07:25:50', '2019-03-19 12:23:45'),
(305028, 480, '1393', 923, 51, 1, '2019-03-16 07:25:50', '2019-03-16 07:25:50'),
(305029, 481, '{int n,f;\r\ncin>>n;\r\nf=1;\r\nfor(int i=1;i<n;i++)\r\nf=f*i;\r\n{cout<<f<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 923, 51, 1.5, '2019-03-16 07:25:50', '2019-03-19 12:23:46'),
(305080, 467, '1357', 1032, 51, 0, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305081, 468, '#includ<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y,z;\r\ncin>>x>>y;\r\nz=x-y;\r\ncout<<z;\r\nsystem (\"pause\")', 1032, 51, 0, '2019-03-16 07:25:56', '2019-04-09 10:13:42'),
(305082, 469, '1360', 1032, 51, 0, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305083, 470, '1364', 1032, 51, 0, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305084, 475, '1383', 1032, 51, 2, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305085, 477, 'int i=1;\r\nint count=0;\r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i;\r\ncoun++;  \r\n}\r\n}', 1032, 51, 0, '2019-03-16 07:25:56', '2019-04-09 10:13:42'),
(305086, 478, '1386', 1032, 51, 1, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305087, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint x,y;\r\nfor(int i=0;i<=100;i++)\r\n{\r\nif(x/2){\r\ncout<<even;  even++;\r\nelse                                                                             if(x%2!0)                     cout<<odd;\r\nodd++\r\ncout<<even<<odd;', 1032, 51, 0, '2019-03-16 07:25:56', '2019-03-19 12:24:29'),
(305088, 480, '1393', 1032, 51, 1, '2019-03-16 07:25:56', '2019-03-16 07:25:57'),
(305089, 481, '#include<iostream>\r\nusing namespsce std;\r\nint main(){\r\ncin>>n;\r\nint n,f=1;\r\nfor(int i=1;i<n;i++){\r\nf=f*i;\r\ncout<<f;\r\nsystem(\"pause\")', 1032, 51, 1, '2019-03-16 07:25:56', '2019-03-19 12:24:29'),
(305110, 467, '1357', 974, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:05'),
(305111, 468, '#include  <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint  num1,num2,gcd;\r\ncout <<\"enter 2 number\\n\";\r\ncin >>num1>>num2;\r\ngcd=num1-num2;\r\ncout <<\"the GCD is\"<<gcd<<\"\\n\";\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 974, 51, 0, '2019-03-16 07:26:05', '2019-04-09 10:14:21'),
(305112, 469, '1360', 974, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:05'),
(305113, 470, '1363', 974, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:05'),
(305114, 475, '1384', 974, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:05'),
(305115, 477, 'int i=0;\r\ncin >>i;\r\nint count =0;\r\nwhile(count <10)\r\nif (if i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 974, 51, 0, '2019-03-16 07:26:05', '2019-04-09 10:14:21'),
(305116, 478, '1386', 974, 51, 1, '2019-03-16 07:26:05', '2019-03-16 07:26:06'),
(305117, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nsumodd=0,sumeven=0;\r\nfor (int i=1 ; i<100;i++)\r\n{\r\nif (i%2==0)\r\nsumeven +=i;\r\nelse\r\nsumodd +=i;\r\ncout <<sumeven<<\"\\n\";\r\ncout <<sumodd<<\"\\n\";\r\n}\r\n\r\n\r\nreturm 0;\r\n\r\n\r\n\r\n\r\n\r\n}', 974, 51, 1.5, '2019-03-16 07:26:05', '2019-03-19 12:25:17'),
(305118, 480, '1393', 974, 51, 1, '2019-03-16 07:26:05', '2019-03-16 07:26:06'),
(305119, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint fact=1,n;\r\ncin>>n;\r\nfor (int i=1;i<=n;i++ )\r\n{\r\nfact *=i;\r\n}\r\ncout <<fact <<\"\\n\";\r\nreturn 0;\r\n}', 974, 51, 2, '2019-03-16 07:26:05', '2019-03-19 12:25:17'),
(305120, 467, '1354', 896, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:06'),
(305121, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{    \r\nint x,y s;\r\ncout<<\"enter the numbers x ,y\"<<endl;\r\ncin>>x>>y;\r\nif(x%s==0 && y%s==0)\r\n \r\n\r\nreturn 0;\r\n}', 896, 51, 0, '2019-03-16 07:26:05', '2019-04-09 10:14:52'),
(305122, 469, '1360', 896, 51, 0, '2019-03-16 07:26:05', '2019-03-16 07:26:06'),
(305123, 470, '1365', 896, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305124, 475, '1385', 896, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305125, 477, 'int i=0; int count =0; \r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\n}\r\ncount++;\r\n}\r\nreturn 0;\r\n}', 896, 51, 1, '2019-03-16 07:26:06', '2019-04-09 10:14:52'),
(305126, 478, '1386', 896, 51, 1, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305127, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n ,sumeven=0 ,sumodd=0;\r\nif(n<100){\r\n   if(n%2==0){\r\n    sumeven+=n;\r\ncout<<sumeven<<endl;}\r\nelse\r\n      sumodd+=n;\r\ncout<<sumodd<<endl;\r\n}\r\nreturn 0;\r\n}', 896, 51, 0, '2019-03-16 07:26:06', '2019-03-19 12:25:58'),
(305128, 480, '1392', 896, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305129, 481, '#include <iosteeam>\r\n       using namespace std;\r\n         int main()\r\n{\r\nint n;\r\nfact=1;\r\nfor(int i=1; i<=n; i++)\r\nfact=fact*i;\r\ncout<<\"factorial is\"<<fact<<endl;\r\nreturn 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{', 896, 51, 2, '2019-03-16 07:26:06', '2019-03-19 12:25:58'),
(305150, 467, '1354', 233, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305151, 468, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,n;\r\ncin>>x>>y;\r\nif(x>y)\r\nn=x;\r\ncout<<\"the GCD of these numbers is\"<<endl;\r\n\r\nelse\r\n(y>x)\r\nn=y;\r\ncout<<\"the GCD of these numbers is\"<<endl;\r\nsysteam(\"pause\");\r\nreturn  0;\r\n}', 233, 51, 0, '2019-03-16 07:26:06', '2019-04-09 10:15:35'),
(305152, 469, '1360', 233, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305153, 470, '1362', 233, 51, 2, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305154, 475, '1385', 233, 51, 0, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305155, 477, 'int i=20;\r\nint count=1;\r\nwhile (count<20)\r\nif(i%2!==0)\r\ncout<<i<<endl;\r\ncount++;\r\n}}', 233, 51, 0.5, '2019-03-16 07:26:06', '2019-04-09 10:15:35'),
(305156, 478, '1386', 233, 51, 1, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305157, 479, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>en;\r\nif(n%2==0)\r\n{\r\nen=n;\r\n\r\nelse\r\nen=n-1;\r\nint ev=(en/2.0)\r\n\r\n}\r\nsysteam(\"pause\");\r\nreturn  0;\r\n\r\n}', 233, 51, 0, '2019-03-16 07:26:06', '2019-03-19 12:27:15'),
(305158, 480, '1393', 233, 51, 1, '2019-03-16 07:26:06', '2019-03-16 07:26:06'),
(305159, 481, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\nint n, fact=1;\r\ncin>>n;\r\ncout<<\"factorial of a number is\"<<endl;\r\nfor(int i=n;i<=n-1;i++)\r\nfact*=i;\r\ncout<<fact;\r\n\r\n\r\nsysteam(\"pause\");\r\nreturn  0;\r\n\r\n}', 233, 51, 0, '2019-03-16 07:26:06', '2019-03-19 12:27:15'),
(305170, 467, '1355', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305171, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nlong long x,y,r;\r\ncin>>x>>y;\r\nr=x%y;\r\nwhile(r)\r\n{\r\nx=y;\r\ny=r;\r\nr=x%y;\r\n}\r\ncout<<y;\r\n\r\n}', 975, 51, 4, '2019-03-16 07:26:09', '2019-04-09 10:18:59'),
(305172, 469, '1361', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305174, 470, '1362', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305176, 475, '1383', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305178, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i =0;\r\nint count =0;\r\nwhile(count <10)\r\n{\r\nif(i%2 != 0){cout<<i<<endl;}\r\ncount++;\r\ni++;\r\n}\r\n}', 975, 51, 1, '2019-03-16 07:26:09', '2019-04-09 10:18:59'),
(305180, 478, '1386', 975, 51, 1, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305182, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0,s1=0,s2=0;\r\nwhile(i<100)\r\n{\r\nif(i%2 == 0){s1+=i;}\r\nelse {s2+=i;}\r\ni++;\r\n}\r\ncout<<\"The Sum Of The Even Numbers Are Less Than 100 Is : \"<<s1<<endl;\r\ncout<<\"The Sum Of The Odd Numbers Are Less Than 100 Is : \"<<s2<<endl;\r\n}', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-19 12:28:24'),
(305184, 480, '1393', 975, 51, 1, '2019-03-16 07:26:09', '2019-03-16 07:26:09'),
(305186, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nlong long n,i,f=1;\r\ncin>>n;\r\nfor(i=n;i>0;i--)\r\n{\r\nf*=i;\r\n}  \r\ncout<<f;', 975, 51, 2, '2019-03-16 07:26:09', '2019-03-19 12:28:24'),
(305210, 467, '1355', 934, 51, 2, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305211, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){ int x,y;\r\ncin>>x>>y;\r\nint i=0,u,o;\r\nwhile (i<x||i<y)   {\r\nif(x%i==0)\r\no=i\r\nif (y%i==0)\r\nu=i\r\n\r\n\r\n\r\n\r\ni++;\r\n}    \r\n     if(o>u)\r\ncout<<o;\r\nelse\r\ncout<<u;                                                                                      \r\n}', 934, 51, 4, '2019-03-16 07:26:12', '2019-04-10 07:45:48'),
(305212, 469, '1359', 934, 51, 0, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305213, 470, '1365', 934, 51, 0, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305214, 475, '1385', 934, 51, 0, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305215, 477, 'int i=1;\r\nint count=1;\r\nwhile(count<10){\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ni++;\r\ncount++;\r\n}', 934, 51, 1, '2019-03-16 07:26:12', '2019-04-10 07:45:49'),
(305216, 478, '1386', 934, 51, 1, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305217, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint se=0 ,so=0;\r\nfor(int i=1;i<100; i+=2)\r\nso+=i;\r\nfor(int j=0;j<=100;j+2)\r\nse+=j;\r\n\r\ncout<<\" sum odd\"<<so<<\"  sum ev \"<<se;\r\n}', 934, 51, 2, '2019-03-16 07:26:12', '2019-03-19 12:35:19'),
(305218, 480, '1393', 934, 51, 1, '2019-03-16 07:26:12', '2019-03-16 07:26:12'),
(305219, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint f=1, n;\r\ncin>>n;\r\nwhile(n>0){\r\nf=f*n;\r\nn--;\r\n\r\n}\r\ncout<<f<<endl;\r\n\r\n}', 934, 51, 1, '2019-03-16 07:26:12', '2019-03-19 12:35:19'),
(305240, 467, '1354', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305241, 468, '#include<iostream>\r\nusing namespace std;\r\nint main () \r\n{int x,y;\r\n\r\n\r\n}', 1037, 51, 0, '2019-03-16 07:26:15', '2019-04-09 10:19:17'),
(305242, 469, '1361', 1037, 51, 2, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305244, 470, '1364', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305246, 475, '1383', 1037, 51, 2, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305248, 477, 'while(i<10)', 1037, 51, 0, '2019-03-16 07:26:15', '2019-04-09 10:19:17'),
(305250, 478, '1388', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305252, 479, 'int x,y,a)    \r\nfor (x%2==0, y%2!=0, a<100)\r\n  cout<<a=x+y<<endl;', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-19 12:33:53'),
(305254, 480, '1390', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-16 07:26:15'),
(305256, 481, 'int x,\r\nfor (x=0, x=x*--x)\r\ncout<<x;', 1037, 51, 0, '2019-03-16 07:26:15', '2019-03-19 12:33:53'),
(305375, 467, '1355', 971, 51, 2, '2019-03-16 07:26:52', '2019-03-16 07:26:53'),
(305376, 468, 'int x,y;\r\ncin>>x>>y;', 971, 51, 0, '2019-03-16 07:26:53', '2019-04-10 07:47:22'),
(305377, 469, '1359', 971, 51, 0, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(305378, 470, '1362', 971, 51, 2, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(305379, 475, '1382', 971, 51, 0, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(305380, 477, 'int i=0;\r\nint count=0;\r\nwhile (count <10)\r\n{if (i%2 != 0)\r\n{\r\ncout<<i<<endl;\r\n}\r\ncount++;\r\ni++;\r\n}', 971, 51, 1, '2019-03-16 07:26:53', '2019-04-10 07:47:22'),
(305381, 478, '1386', 971, 51, 1, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(305382, 479, 'int x=0;\r\nint y=1;\r\nfor (int i=0; i<100; i+=2)\r\n{\r\nx=x+i;\r\n}\r\ncout<<x<<endl;\r\nfor (int j=0; j<100; j+=2)\r\n{\r\ny=y+j;\r\n}\r\ncout<<y<<endl;', 971, 51, 2, '2019-03-16 07:26:53', '2019-03-19 12:35:53'),
(305383, 480, '1393', 971, 51, 1, '2019-03-16 07:26:53', '2019-03-16 07:26:53'),
(305384, 481, 'int n;\r\nint sum=1;\r\ncin>>n;\r\nfor (int i=1; i<n; i++)\r\n{\r\nsum=sum*i;\r\n}            \r\ncout<<sum<<endl;', 971, 51, 1.5, '2019-03-16 07:26:53', '2019-03-19 12:35:53'),
(305488, 467, '1354', 1040, 51, 0, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305489, 468, 'int a,b,n;\r\ncin>>a>>b;\r\n\r\nif(a>0&&b>0)\r\n{\r\nn=a%b\r\n\r\n\r\n\r\n}\r\ncout<<\"GCD=\"<<n<<endl;\r\n      return 0;', 1040, 51, 0, '2019-03-16 07:27:11', '2019-04-09 09:45:31'),
(305490, 469, '1360', 1040, 51, 0, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305491, 470, '1365', 1040, 51, 0, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305492, 475, '1384', 1040, 51, 0, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305493, 477, 'int i=1;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n\r\n}     \r\nreturn 0;', 1040, 51, 0, '2019-03-16 07:27:11', '2019-04-09 09:45:31'),
(305494, 478, '1387', 1040, 51, 0, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305495, 479, 'int n,sumeven=0,sumodd=0;\r\ncout<<\"enter number\\n\";\r\n if(n<100)\r\n{\r\n for(int i=1,i<=n, i++)\r\n{\r\nif(n%2==0)\r\nsumeven+=n;\r\nelse\r\nsumodd+=n;\r\n\r\n\r\n\r\n}\r\n cout<<\"the sum of even number is\"<<sumeven<<endl;   \r\n\r\n cout<<\"the sum of odd number is\"<<sumodd<<endl;         \r\n}\r\n   return 0;', 1040, 51, 0.5, '2019-03-16 07:27:11', '2019-03-19 07:43:49'),
(305496, 480, '1393', 1040, 51, 1, '2019-03-16 07:27:11', '2019-03-16 07:27:11'),
(305497, 481, 'int f=1,n;\r\ncout<<\"please enter number\\n\";\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n\r\n}   \r\ncout<<\'\"the factorial of a number \"<<n<<\"is\"<<f<<endl;  \r\nreturn 0;', 1040, 51, 2, '2019-03-16 07:27:11', '2019-03-19 07:43:49'),
(305520, 478, '1386', 1023, 51, 1, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305522, 467, '1354', 1023, 51, 0, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305523, 479, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint  sum_even=0 , sum_odd=0;\r\n   for(int i=1;i<100;i++)\r\n   {\r\n    if(i%2==0)\r\n    {\r\n         sum_even += i ;\r\n    }\r\n   else\r\n    {\r\n      sum_odd += i ;\r\n     }\r\n }\r\ncout<<\" The Sum Of Odd Number Is = \"<<sum_odd<<\"\\n\";\r\ncout<<\" The Sum Of Even Number Is = \"<<sum_even<<\"\\n\";\r\nreturn 0;\r\n}', 1023, 51, 2, '2019-03-16 07:27:12', '2019-04-22 11:39:42'),
(305525, 468, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{    \r\nint num1, num2 , x =0;\r\ncout<<\"Enter Two Number \\n\"; \r\ncin>>num1>>num2;\r\nif(num1>=num2)\r\nx=num1;\r\nelse\r\nx=num2;\r\nfor(int i=(x/2) ; i>=1; i--)\r\n{\r\nif( num1 % i==0 && num2 % i==0 )\r\ncout<<\"the Greatest Common Divisor (GCD) is = \"<<i<<\"\\n\";\r\nbreak;\r\n\r\n}\r\n\r\nreturn 0;\r\n}', 1023, 51, 2, '2019-03-16 07:27:12', '2019-04-10 07:49:41'),
(305526, 480, '1393', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305528, 469, '1360', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305529, 481, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint number , factorial = 1 ;\r\ncout<<\"Enter The Number  \\n \" ;\r\ncin>>number ;\r\nfor(int i=1 ; i<=number ; i++)\r\n{\r\nfactorial =factorial * i ;\r\n\r\n}\r\ncout<<\"The Factorial Of  \"<<number <<\"  Is = \"<<factorial <<\"\\n\";\r\n\r\nreturn 0;\r\n}', 1023, 51, 2, '2019-03-16 07:27:12', '2019-04-22 11:39:42'),
(305530, 470, '1365', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305531, 475, '1384', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305532, 477, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint  i=1;\r\nint count=1;\r\nwhile(count <10)\r\n{\r\nif( i % 2 != 0)\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n} \r\nreturn 0;\r\n}', 1023, 51, 1, '2019-03-16 07:27:12', '2019-04-10 07:49:41'),
(305533, 478, '1386', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305534, 479, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint  sum_even=0 , sum_odd=0;\r\n   for(int i=1;i<100;i++)\r\n   {\r\n    if(i%2==0)\r\n    {\r\n         sum_even += i ;\r\n    }\r\n   else\r\n    {\r\n      sum_odd += i ;\r\n     }\r\n }\r\ncout<<\" The Sum Of Odd Number Is = \"<<sum_odd<<\"\\n\";\r\ncout<<\" The Sum Of Even Number Is = \"<<sum_even<<\"\\n\";\r\nreturn 0;\r\n}', 1023, 51, 2, '2019-03-16 07:27:12', '2019-03-19 12:37:22'),
(305535, 480, '1393', 1023, 51, NULL, '2019-03-16 07:27:12', '2019-03-16 07:27:12'),
(305536, 481, '#included <iostream>\r\nusing namespace std;\r\nint main ( )\r\n{\r\nint number , factorial = 1 ;\r\ncout<<\"Enter The Number  \\n \" ;\r\ncin>>number ;\r\nfor(int i=1 ; i<=number ; i++)\r\n{\r\nfactorial =factorial * i ;\r\n\r\n}\r\ncout<<\"The Factorial Of  \"<<number <<\"  Is = \"<<factorial <<\"\\n\";\r\n\r\nreturn 0;\r\n}', 1023, 51, 2, '2019-03-16 07:27:12', '2019-03-19 12:37:22'),
(305596, 467, '1354', 921, 51, 0, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305597, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\n\r\n}', 921, 51, 0, '2019-03-16 07:27:20', '2019-04-10 07:50:16'),
(305598, 469, '1361', 921, 51, 2, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305599, 470, '1364', 921, 51, 0, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305600, 475, '1383', 921, 51, 2, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305601, 477, 'int i=0;\r\nwhile(i<20){\r\nif(i%2!=0) \r\n  {\r\ncout<<i<<endl;\r\ni++;\r\n   }\r\n}', 921, 51, 1.5, '2019-03-16 07:27:20', '2019-04-10 07:50:16'),
(305602, 478, '1386', 921, 51, 1, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305603, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum=0;\r\nint t=0;\r\n\r\nfor(int i=0;i<100;i+=2)\r\n  {\r\nint sum+=i;\r\n   }\r\ncout<<\"sum of even= \"<<sum<<endl;\r\n\r\nfor(int i=1;i<100;i+=2)\r\n    {\r\nint t+=i;\r\n     }\r\n cout<<\"sum of odd= \"<<t<<endl; \r\n\r\nreturn 0; \r\n}', 921, 51, 1.5, '2019-03-16 07:27:20', '2019-03-19 12:38:01'),
(305604, 480, '1393', 921, 51, 1, '2019-03-16 07:27:20', '2019-03-16 07:27:20'),
(305605, 481, 'int n;\r\ncin>>n;                                                                                                             \r\n int f=1;\r\n  for(int i=1;i<=n;i++)\r\n{\r\n  f=f*i;\r\n}                                                                                                 \r\ncout<<\"!n= \"   <<f;', 921, 51, 2, '2019-03-16 07:27:20', '2019-03-19 12:38:01'),
(305626, 467, '1354', 964, 51, 0, '2019-03-16 07:27:25', '2019-03-16 07:27:25'),
(305627, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n,x;\r\nif(n/y\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 964, 51, 0, '2019-03-16 07:27:25', '2019-04-10 07:52:12'),
(305628, 469, '1360', 964, 51, 0, '2019-03-16 07:27:25', '2019-03-16 07:27:25'),
(305629, 470, '1363', 964, 51, 0, '2019-03-16 07:27:25', '2019-03-16 07:27:26'),
(305630, 475, '1384', 964, 51, 0, '2019-03-16 07:27:25', '2019-03-16 07:27:26'),
(305631, 477, '#include<iostream>\r\nusing namespace std;\r\nint main(){   \r\nint i=0;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n\r\n\r\n}\r\n\r\n}\r\n}', 964, 51, 1, '2019-03-16 07:27:25', '2019-04-10 07:52:12'),
(305632, 478, '1386', 964, 51, 1, '2019-03-16 07:27:25', '2019-03-16 07:27:26'),
(305633, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint number ,sumeven=0,sumodd=0;\r\nfor(int i=1;i<100;i++){\r\nif(number%2==0)\r\nsumeven+=number;\r\n\r\nelse\r\nsumodd+=number;\r\n}\r\ncout<<\"the sum of even number=\"<<sumeven<<endl;\r\ncout<<\"the sum of odd number=\"<<sumodd<<endl;\r\n\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n}', 964, 51, 0.5, '2019-03-16 07:27:25', '2019-03-19 12:38:48'),
(305634, 480, '1393', 964, 51, 1, '2019-03-16 07:27:25', '2019-03-16 07:27:26'),
(305635, 481, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint number,fact=1;\r\ncout<<\"please enter your number\\n\";\r\ncin>>number;\r\nfor(int i=n;i>=1;i--){\r\nfact=fact*i;\r\n}\r\ncout<<fact<<endl;\r\nsystem(\"pause\");\r\nreturn0;\r\n}', 964, 51, 2, '2019-03-16 07:27:25', '2019-03-19 12:38:48'),
(305666, 467, '1355', 965, 51, 2, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305667, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,z;\r\ncin>>x>>y;\r\nz=x-y;\r\ncout<<z;\r\nsystem(\"pause\") ;\r\n}', 965, 51, 0, '2019-03-16 07:27:44', '2019-04-10 08:41:12'),
(305668, 469, '1361', 965, 51, 2, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305669, 470, '1362', 965, 51, 2, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305670, 475, '1385', 965, 51, 0, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305671, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count <10){\r\nif(i%2==1){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\nsystem(\"pause\");\r\n}', 965, 51, 1, '2019-03-16 07:27:44', '2019-04-10 08:41:12'),
(305672, 478, '1386', 965, 51, 1, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305673, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,evennumbers=0, oddnumbers=0;\r\ncin>>x;\r\nif(x%2==0)\r\nelse(x%2==1)\r\nsumeven+=++x\r\nsumodd+=++x\r\n     cout<<\"sum of even numbers\"evennumbers<<endl;\r\n     cout<<\"sum of odd numbers\"oddnumbers<<endl;\r\nsystem(\"pause\");\r\n}', 965, 51, 0, '2019-03-16 07:27:44', '2019-03-19 12:50:15'),
(305674, 480, '1393', 965, 51, 1, '2019-03-16 07:27:44', '2019-03-16 07:27:45'),
(305675, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,i;\r\np=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\nint j;\r\ncin>>j;\r\nfor(int j;j<=i;j++)\r\np=p*i\r\ncout<<p<<endl;\r\nsystem(\"pause\");\r\n}', 965, 51, 0, '2019-03-16 07:27:44', '2019-03-19 12:50:15'),
(305686, 467, '1355', 918, 51, 2, '2019-03-16 07:27:45', '2019-03-16 07:27:46'),
(305687, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{  \r\n  int x,y;\r\n  cin >> x >> y;\r\n  int g;\r\n  for(int i=1;i<=x;i++) {\r\n    if(x%i==0&&y%i==0) {\r\n	g=i;\r\n    }\r\n  }\r\n  cout << g;\r\n}', 918, 51, 3, '2019-03-16 07:27:45', '2019-04-10 08:41:36'),
(305688, 469, '1360', 918, 51, 0, '2019-03-16 07:27:45', '2019-03-16 07:27:46'),
(305689, 470, '1362', 918, 51, 2, '2019-03-16 07:27:45', '2019-03-16 07:27:46'),
(305690, 475, '1384', 918, 51, 0, '2019-03-16 07:27:45', '2019-03-16 07:27:46'),
(305691, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\n  if(i%2 != 0){\r\n    cout<<i<<endl;\r\n    count++;\r\n  }\r\n  i++;\r\n}', 918, 51, 2, '2019-03-16 07:27:45', '2019-04-10 08:41:36'),
(305692, 478, '1386', 918, 51, 1, '2019-03-16 07:27:45', '2019-03-16 07:27:46'),
(305693, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{  \r\n  int even=0,odd=0;\r\n  for(int i=0;i<=100;i++) {\r\n    if(i%2==0) {\r\n      even+=i;\r\n    }else {\r\n      odd+=i;\r\n    }\r\n  }\r\n  cout << even << \" \" << odd;\r\n}', 918, 51, 2, '2019-03-16 07:27:45', '2019-03-19 12:50:58'),
(305694, 480, '1390', 918, 51, 0, '2019-03-16 07:27:46', '2019-03-16 07:27:46'),
(305695, 481, 'int x,fac = 1;\r\ncin >> x;\r\nfor(int i=1;i<=x;i++) {\r\n  fac*=i;\r\n}\r\ncout << fac;', 918, 51, 2, '2019-03-16 07:27:46', '2019-03-19 12:50:58'),
(305723, 467, '1355', 959, 51, 2, '2019-03-16 07:27:51', '2019-03-16 07:27:52'),
(305724, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n1,n2;\r\ncin>>n1>>n2;\r\nwhile(n1!=n2)\r\n{\r\nif(n1>n2)\r\n{\r\nn1-=n2;\r\n}\r\nelse\r\n{\r\nn2-=n1;\r\n}\r\n}\r\ncout<<\"GCD = \"<<n1;\r\n}', 959, 51, 4, '2019-03-16 07:27:51', '2019-04-10 08:49:17'),
(305725, 469, '1361', 959, 51, 2, '2019-03-16 07:27:51', '2019-03-16 07:27:52'),
(305726, 470, '1362', 959, 51, 2, '2019-03-16 07:27:51', '2019-03-16 07:27:52'),
(305727, 475, '1383', 959, 51, 2, '2019-03-16 07:27:51', '2019-03-16 07:27:52'),
(305728, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count<10)\r\n{\r\nif(i%2!=0)\r\n{\r\ncout<<i<<endl;\r\n}\r\ncount++;\r\ni++;\r\n\r\n}', 959, 51, 1.5, '2019-03-16 07:27:52', '2019-04-10 08:49:17'),
(305729, 478, '1386', 959, 51, 1, '2019-03-16 07:27:52', '2019-03-16 07:27:52'),
(305730, 479, '#include <iostream>                                                                          \r\nusing namespace std;\r\nint main()\r\n{\r\nint sum_odd=0,sum_even=0;\r\nfor(int i=0;i<100;i++)\r\n{\r\nif(i%2==0)\r\n{\r\nsum_even+=i;\r\n}\r\nelse\r\n{\r\nsum_odd+=i;\r\n}\r\n\r\n\r\n}\r\ncout<<\"the sum of even numbers = \"<<sum_even<<endl;\r\ncout<<\"the sum of odd numbers = \"<<sum_odd<<endl;\r\n\r\n}', 959, 51, 2, '2019-03-16 07:27:52', '2019-04-22 11:41:03'),
(305731, 480, '1393', 959, 51, 1, '2019-03-16 07:27:52', '2019-03-16 07:27:52'),
(305732, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,factorial=1;\r\ncin>>n;\r\nfor(int i=1;i<=factorial;i++)\r\n{\r\nfactorial=factorial*i;\r\n\r\n}\r\ncout<<\"factorial of \" <<n<<\"=\"<<factorial<<endl;\r\n\r\n}', 959, 51, 1, '2019-03-16 07:27:52', '2019-03-19 12:51:34'),
(305808, 467, '1355', 935, 51, 2, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305809, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x , y , gcd ;\r\nif ( x>y)\r\n{ \r\ngcd = x % y;\r\ncout <<gcd<<endl;\r\n}\r\nelse \r\n{\r\ngcd = y%x;\r\ncout <<gcd<<endl;\r\n}\r\n}', 935, 51, 0, '2019-03-16 07:28:33', '2019-04-10 08:49:48'),
(305810, 469, '1360', 935, 51, 0, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305811, 470, '1364', 935, 51, 0, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305812, 475, '1382', 935, 51, 0, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305813, 477, 'int i=1;\r\nint count =1;\r\nwhile (count <20)\r\n{\r\ncout<<i<<endl;\r\ni+=2;\r\ncount++;\r\n}', 935, 51, 1.5, '2019-03-16 07:28:33', '2019-04-10 08:49:48'),
(305814, 478, '1386', 935, 51, 1, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305815, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x, sum of odd =0 , sum of even =0;\r\ncin>>x;\r\nfor (int i=0; i<100; i++)\r\n{\r\nif ( x%2 ==0)\r\nsum of even += x ;\r\nelse \r\nsum of odd +=x;                                                                                                             \r\n}\r\ncout << \"sum of enven = \"<<sum of even << \" sum of odd = \"<<sum of odd<<endl;\r\n}', 935, 51, 0, '2019-03-16 07:28:33', '2019-03-19 12:52:15'),
(305816, 480, '1393', 935, 51, 1, '2019-03-16 07:28:33', '2019-03-16 07:28:34'),
(305817, 481, '#include <iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint n ;\r\nint f=1;\r\nfor(int i=1 ; i<=n; i++)\r\n{\r\nf = f * i;\r\n}\r\ncout<<f<<endl;\r\n}', 935, 51, 2, '2019-03-16 07:28:33', '2019-03-19 12:52:15'),
(306090, 467, '1355', 929, 51, 2, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306091, 468, '#include<iostream>   \r\nusing namespace std;\r\nint main()\r\n{\r\nint n, x, z;\r\nif(x>z)\r\n{\r\nn=x/z\r\n}\r\nelse\r\n{\r\nn=z/x;\r\n}\r\n\r\nreturn 0;\r\n}', 929, 51, 0, '2019-03-16 07:29:39', '2019-04-10 08:50:21'),
(306092, 469, '1360', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306093, 470, '1365', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306094, 475, '1382', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306095, 477, '#include<iostream>   \r\nusing namespace std;\r\nint main()\r\n{\r\nint i =0;\r\nfor(int i =1; i<10; i++;)\r\n{\r\ncout<<i<<endl;\r\ni++\r\n}\r\n\r\nreturn 0;\r\n}', 929, 51, 1, '2019-03-16 07:29:39', '2019-04-10 08:50:21'),
(306096, 478, '1387', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306097, 479, '#include<iostream>   \r\nusing namespace std;\r\nint main() \r\n{\r\nint x, sumodd=0, sumeven=0;\r\nfor(int i=0; i<100; i++)\r\n{\r\nif(i%2==1)\r\n{\r\nsumeven+=1\r\n}\r\nelse\r\n{\r\nsumodd+=1\r\n}\r\n}\r\ncout<<\"sum of even number\"<<endl;\r\ncout<<\"sum of odd number\"<<endl;\r\n\r\nreturn 0;\r\n}', 929, 51, 1.5, '2019-03-16 07:29:39', '2019-03-19 12:52:54'),
(306098, 480, '1392', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-16 07:29:40'),
(306099, 481, '#include<iostream>   \r\nusing namespace std;\r\nint main() \r\n{\r\nint n, m,f:\r\nfor(int m=1; m<=n;m++;)\r\n{\r\nf=m*n;\r\n}\r\nm=m+1;\r\ncout<<n<<endl;\r\n\r\nreturn 0;\r\n}', 929, 51, 0, '2019-03-16 07:29:39', '2019-03-19 12:52:54'),
(306165, 467, '1354', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306166, 468, '#include <iostream>               \r\nusing namespace std; \r\nint main()', 1066, 51, 0, '2019-03-16 07:30:18', '2019-04-10 08:50:38'),
(306167, 469, '1358', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306168, 470, '1364', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306169, 475, '1384', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306170, 477, '#include <iostream>               \r\nusing namespace std; \r\nint main()', 1066, 51, 0, '2019-03-16 07:30:18', '2019-04-10 08:50:38'),
(306171, 478, '1389', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306172, 479, '#include <iostream>               \r\nusing namespace std; \r\nint main()\r\n{\r\nint odd,even,sum;\r\ncount <<\"enter your number\">>;\r\ncin>>odd,even,sum;\r\nfor(odd=0; even==2 && odd=!2; even=+2)\r\ncount<<print even<<sum<<\"\\n\";\r\nsum<100\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-19 12:53:15'),
(306173, 480, '1391', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-16 07:30:18'),
(306174, 481, '#include <iostream>               \r\nusing namespace std; \r\nint main()   \r\n{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 1066, 51, 0, '2019-03-16 07:30:18', '2019-03-19 12:53:15'),
(306214, 467, '1355', 953, 51, 2, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306215, 468, '#include<iostream>\r\nusing namespace std ;\r\nint main(){\r\nint n1 ,n2 ,gcd;\r\ncin>>n1>>n2;\r\nif(n1<=n2){\r\nfor(int i=1;i<=n1;i++){\r\nif(n1%i==0 && n2%i==0)\r\ngcd=i ;\r\n}\r\n}\r\nelse{\r\nfor(int i=1;i<=n2;i++){\r\nif(n1%i==0 && n2%i==0)\r\ngcd=i ;\r\n}\r\n}\r\ncout<<gcd <<\"\\n\";\r\n\r\n\r\n}', 953, 51, 4, '2019-03-16 07:30:33', '2019-04-10 08:51:06'),
(306216, 469, '1361', 953, 51, 2, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306217, 470, '1362', 953, 51, 2, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306218, 475, '1384', 953, 51, 0, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306219, 477, 'int count =1;\r\nwhile(count <20) {\r\nif(count%2!=0 )\r\ncout<<count<<endl ;\r\n\r\ncount++;\r\n}', 953, 51, 2, '2019-03-16 07:30:33', '2019-04-10 08:51:06'),
(306220, 478, '1386', 953, 51, 1, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306221, 479, '# include<iostream>  \r\nusing namespace std ;\r\nint main(){\r\nint sum1=0,sum2=0;\r\nfor(int i =2 ;i<100 ;i+=2){\r\nsum2+=i ;\r\n}\r\n\r\nfor(int i =1 ;i<100 ;i+=2){\r\nsum1+=i ;\r\n}\r\ncout<<\"the sum of event is:\"<<sum2 <<\"\\n\";\r\ncout<<\"the sum of odd is:\"<<sum1 <<\"\\n\";\r\n }', 953, 51, 2, '2019-03-16 07:30:33', '2019-03-19 12:54:07'),
(306222, 480, '1393', 953, 51, 1, '2019-03-16 07:30:33', '2019-03-16 07:30:33'),
(306223, 481, 'int n,f=1;\r\ncin>>n ;                                                      \r\n       for(int i  =n;i>0;i--){\r\nf=f*i ;\r\n                   \r\n}      \r\n  cout<<f ;', 953, 51, 2, '2019-03-16 07:30:33', '2019-03-19 12:54:07'),
(306333, 467, '1356', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-16 07:31:10');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(306335, 468, '#indude <iostream>\r\nusing namespacestrd;\r\nint main()\r\nint xyz', 1074, 51, 0, '2019-03-16 07:31:10', '2019-04-10 08:55:10'),
(306337, 469, '1358', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(306339, 470, '1362', 1074, 51, 2, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(306341, 475, '1385', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(306343, 477, 'for linti=3;i<13;i+=3)\r\nswitch (i-3){\r\ncase0:cout<<i*1;break;\r\ncase2:cout<<i*1;break;\r\ncase5:cout<<i*3;break;\r\ncase9:cout<<i*10;break;\r\ncase13:cout<<i*14;break;\r\n}', 1074, 51, 0, '2019-03-16 07:31:10', '2019-04-10 08:55:10'),
(306345, 478, '1389', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(306347, 479, '#indude <iostream>\r\nusimg namespace strd;\r\nint main()', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-19 12:54:32'),
(306349, 480, '1390', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-16 07:31:10'),
(306350, 481, 'for linti=1;i<=4;i++){\r\nfor linbk=1;k<=i;k++){\r\ncout<<i;\r\n}\r\n}', 1074, 51, 0, '2019-03-16 07:31:10', '2019-03-19 12:54:32'),
(306351, 467, '1355', 908, 51, 2, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306352, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n}\r\nint x , y , z;\r\ncin >>   x; \r\nfor( int i= x ; i>=0 ; i--)\r\n{ \r\nif ( x% i ==0 && y% i ==0){\r\ncout << x<< endl;}\r\nelse \r\nif ( y> z){\r\nfor(int k =y; k> 0;k--)\r\n{if (  y % k==0 && z%k==0)\r\ncout << z<< endl;}\r\n}\r\n}\r\n}', 908, 51, 1.5, '2019-03-16 07:31:12', '2019-04-10 09:00:01'),
(306353, 469, '1360', 908, 51, 0, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306354, 470, '1365', 908, 51, 0, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306355, 475, '1382', 908, 51, 0, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306356, 477, 'int i = 0 , count = 0 ;\r\nwhile ( count < 10)\r\nif ( i%2 !=0)\r\n{\r\n   cout << i<< endl;\r\ncount ++ ;\r\n}\r\n}', 908, 51, 0, '2019-03-16 07:31:12', '2019-04-10 09:00:01'),
(306357, 478, '1386', 908, 51, 1, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306358, 479, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\nint x ,sum=0;\r\nfor (int i =1 ; i<=100 ; i++)\r\n{\r\nif (x%2==0)\r\n{\r\nsum+=i;\r\ncout << sum << endl;\r\n}\r\nelse if ( x%2!=0)\r\n{\r\nsum +=i; \r\ncout << sum << endl;\r\n}\r\nelse \r\ncout << \"exit from the programing\"<< endl;', 908, 51, 0, '2019-03-16 07:31:12', '2019-03-19 12:56:04'),
(306359, 480, '1393', 908, 51, 1, '2019-03-16 07:31:12', '2019-03-16 07:31:12'),
(306360, 481, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint x ,sum =0 ,fact=0 ;\r\nfor (int i=x; i>0; i++)\r\n{  \r\nsum +=i;\r\nfact ++;\r\n}\r\ncout <<\" the fact is \" << endl;\r\n}', 908, 51, 0, '2019-03-16 07:31:12', '2019-03-19 12:56:05'),
(306431, 467, '1355', 905, 51, 2, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306432, 468, '# include <iostream>\r\nusing namespace std;\r\nint main (){\r\nint x,y;\r\nif(x>y&&x%y==0){\r\nfor(y=1;=y;x--)\r\ncout <<\"GCD = \"<<y;\r\nelse if(y>x&&y%x==0)\r\ncout <<\"GCD = \"<<y;\r\nelse \r\ncout<<\"GCD=1\"\r\ncout <<\"enter two numbers pleas \" ;\r\ncin>>x>>y;\r\nif\r\n\r\nsyste(\"pause\");\r\n}', 905, 51, 0, '2019-03-16 07:31:27', '2019-04-10 09:04:43'),
(306433, 469, '1360', 905, 51, 0, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306434, 470, '1363', 905, 51, 0, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306435, 475, '1385', 905, 51, 0, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306436, 477, '# include <iostream>\r\nusing namespace std;\r\nint main(){\r\ncount=0;\r\nwhile(count <10){\r\nif(count%2!=0)\r\ncout<<count<<endl;\r\ncount ++;}\r\nsystem (\"pause\");\r\n}', 905, 51, 1, '2019-03-16 07:31:27', '2019-04-10 09:04:43'),
(306437, 478, '1386', 905, 51, 1, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306438, 479, '#include <iostream>\r\nusing namespace std;\r\nint main (){\r\nint x, sumeven=0,sumodd=0;\r\nfor (x=1;x<100;x++)\r\n{\r\nif(x%2==0)\r\nsumeven+=x;\r\nelse\r\nsumodd+=x;\r\n}\r\ncout <<\"sumeven = \"<<sum even<<endl;\r\ncout <<\"sumodd = \"<<sum odd<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 905, 51, 2, '2019-03-16 07:31:27', '2019-03-19 13:01:15'),
(306439, 480, '1393', 905, 51, 1, '2019-03-16 07:31:27', '2019-03-16 07:31:28'),
(306440, 481, '#include <iostream>\r\nusing namespace std;\r\nint main (){\r\nint n, factorial = 1;\r\ncout<<\"enter number please : \";\r\ncin >>n;\r\nfor(int x=;x<n;x++)\r\n{\r\nf*=x;\r\ncout <<\"the factorial of \"<<x<<\"=\"<<f;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 905, 51, 1, '2019-03-16 07:31:27', '2019-03-19 13:01:15'),
(306451, 467, '1355', 916, 51, 2, '2019-03-16 07:31:32', '2019-03-16 07:31:32'),
(306452, 468, '#include<iostream>\r\nusing namespace std;\r\nint main (){\r\nint x, y, z;\r\ncin>>x>>y;\r\nif(x>y){\r\n\r\nfor( int i = y ; i>=1;i-- ){\r\n\r\nif(y%i==0 && x%i == 0){\r\ncout<<i<<endl;\r\nreturn 0;\r\n}\r\n}\r\n}else if(y>x){\r\n\r\nfor( int i = x ; i>=1;i-- ){\r\n\r\nif(y%i==0 && x%i == 0){\r\ncout<<i<<endl;\r\nreturn 0;\r\n}\r\n}\r\n}\r\n}', 916, 51, 4, '2019-03-16 07:31:32', '2019-04-10 09:07:30'),
(306453, 469, '1360', 916, 51, 0, '2019-03-16 07:31:32', '2019-03-16 07:31:32'),
(306454, 470, '1365', 916, 51, 0, '2019-03-16 07:31:32', '2019-03-16 07:31:33'),
(306455, 475, '1383', 916, 51, 2, '2019-03-16 07:31:32', '2019-03-16 07:31:33'),
(306456, 477, 'int i = 0;\r\nint count =0;\r\nwhile(count<10){\r\nif(i%2==1){\r\ncout<<i<<endl;\r\ncount++;\r\n}                        \r\ni++;\r\nreturn 0;\r\n}', 916, 51, 2, '2019-03-16 07:31:32', '2019-04-10 09:07:30'),
(306457, 478, '1386', 916, 51, 1, '2019-03-16 07:31:32', '2019-03-16 07:31:33'),
(306458, 479, '#include<iostream>\r\nusing namespace std;\r\nint main (){\r\nint odd=0,even=0;\r\nfor(int i = 1 ; i<=100 ; i++){\r\nif(i%2==0){\r\neven = even + i;\r\n}else if(i%2==1){\r\nodd = odd +i;}\r\n}\r\ncout<<\"sum of even numbers = \"<<even;\r\ncout<<\"sum of odd numbers = \"<<odd;\r\nreturn 0;\r\n}', 916, 51, 1.5, '2019-03-16 07:31:32', '2019-03-19 13:03:05'),
(306459, 480, '1393', 916, 51, 1, '2019-03-16 07:31:32', '2019-03-16 07:31:33'),
(306460, 481, '#include<iostream>\r\nusing namespace std;\r\nint main (){\r\nint n ,t=1;\r\ncin>>n;\r\nfor(int i = 1 ; i<=n ; i++){\r\n t = t * i;\r\n}\r\ncout<<t<<endl; \r\nreturn 0;\r\n}', 916, 51, 2, '2019-03-16 07:31:32', '2019-03-19 13:03:05'),
(306471, 467, '1355', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-16 07:31:34'),
(306472, 468, '#include<iostream>\r\nusing namespace std;\r\nvoid main( )\r\n{\r\nint n1 ,n2,max=INT_MIN,max2=INT_MIN;\r\ncout<<\" enter two numbers\";\r\ncin>>n1>>n2;\r\nfor(int i=1; i<=n1;i++)\r\n{\r\nint d=n1/ i;\r\nif(d %i ==0)\r\n{\r\n  if(d>max)\r\n{\r\n   max=d;\r\n}\r\n}\r\nfor(int i=1; i<=n2;i++)\r\n{\r\nint d2=n2/ j;\r\nif(d2 %j ==0)\r\n{\r\n  if(d2>max2)\r\n{\r\n   max2=d2;\r\n} \r\n}\r\n}\r\nIf(max ==max2)\r\ncout<<max+max2<<endl;\r\n}', 949, 51, 1, '2019-03-16 07:31:34', '2019-04-10 09:09:23'),
(306473, 469, '1361', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-16 07:31:34'),
(306474, 470, '1362', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-16 07:31:34'),
(306475, 475, '1383', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-16 07:31:35'),
(306476, 477, 'int count =0;\r\nwhile(count <20)\r\n{\r\nif(count %2 == 0)\r\n{\r\ncout<<count<<endl;\r\ncount++;\r\n}\r\n}', 949, 51, 0, '2019-03-16 07:31:34', '2019-04-10 09:09:23'),
(306477, 478, '1386', 949, 51, 1, '2019-03-16 07:31:34', '2019-03-16 07:31:35'),
(306478, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main( )\r\n{\r\nint o=0 , e =0;\r\nfor(int i =1;i<100;i++)\r\n{\r\n    if(i%2 == 0)\r\n{\r\ne=e+i;\r\n}\r\nelse\r\n{\r\no=o+i;\r\n}\r\n}\r\ncout<<\"sum of even numbers =\"  << e<<endl;\r\ncout<<\" sum of odd numbers = \"<< o<<endl;\r\n}', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-19 13:03:32'),
(306479, 480, '1393', 949, 51, 1, '2019-03-16 07:31:34', '2019-03-16 07:31:35'),
(306480, 481, 'int n , f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\n f=f *i;\r\n}\r\ncout<<f;', 949, 51, 2, '2019-03-16 07:31:34', '2019-03-19 13:03:32'),
(306510, 467, '1354', 941, 51, 0, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306511, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,z;\r\ncin<<x<<z;\r\n\r\n\r\n\r\n}', 941, 51, 0, '2019-03-16 07:31:51', '2019-04-10 09:09:40'),
(306512, 469, '1360', 941, 51, 0, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306513, 470, '1364', 941, 51, 0, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306514, 475, '1385', 941, 51, 0, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306515, 477, '#include < iostream >\r\nusing namespace std; \r\nint main()\r\n{\r\nint count=0; \r\nwhile(count<10)\r\n{\r\nif(count %2!=0){\r\ncout<< count<<endl;\r\ncount++\r\n}\r\n}', 941, 51, 0, '2019-03-16 07:31:51', '2019-04-10 09:09:40'),
(306516, 478, '1386', 941, 51, 1, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306517, 479, '#include < iostream >\r\nusing namespace std;\r\nint main()\r\n{\r\nint odd sum=0,even sum=0;\r\nfor(int i=1;i<=100;i++)\r\nif(i%2==0)  \r\n{ even sum += i ;}\r\nelse {odd sum += i ;}\r\n}\r\ncout<<even sum <<endl<<odd sum;', 941, 51, 1, '2019-03-16 07:31:51', '2019-03-19 13:04:36'),
(306518, 480, '1393', 941, 51, 1, '2019-03-16 07:31:51', '2019-03-16 07:31:51'),
(306519, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n ,fact=0;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfact*=i;\r\n}\r\ncout<<fact;\r\n}', 941, 51, 1.5, '2019-03-16 07:31:51', '2019-03-19 13:04:36'),
(306550, 467, '1355', 938, 51, 2, '2019-03-16 07:31:57', '2019-03-16 07:31:57'),
(306551, 468, '#iclude <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y,g;\r\ncin >>x>>y;\r\nif(x>y){\r\ncout<<g=x%y;\r\nelse\r\ncout<<g=y%x;\r\n\r\n}\r\n}', 938, 51, 0, '2019-03-16 07:31:57', '2019-04-10 09:09:58'),
(306552, 469, '1360', 938, 51, 0, '2019-03-16 07:31:57', '2019-03-16 07:31:57'),
(306553, 470, '1365', 938, 51, 0, '2019-03-16 07:31:57', '2019-03-16 07:31:57'),
(306554, 475, '1385', 938, 51, 0, '2019-03-16 07:31:57', '2019-03-16 07:31:58'),
(306555, 477, 'int i=0\r\nint count=o\r\nwhile (count<20){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\ni++;\r\n}\r\n}', 938, 51, 1, '2019-03-16 07:31:57', '2019-04-10 09:09:58'),
(306556, 478, '1386', 938, 51, 1, '2019-03-16 07:31:57', '2019-03-16 07:31:58'),
(306557, 479, '#iclude <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum1=0,sum2=0;\r\n{for(int i=0;i<=100;i++){\r\nif(i%2==0)\r\nsum1+=i;\r\n}\r\nif(i%2!=0){\r\nsum2+=i;\r\n}\r\n}\r\ncout<<\"sum1=\"<<sum1<<\"sum2=\"<<sum2<<endl;\r\n\r\n\r\n}', 938, 51, 1.5, '2019-03-16 07:31:57', '2019-03-19 13:05:36'),
(306558, 480, '1391', 938, 51, 0, '2019-03-16 07:31:57', '2019-03-16 07:31:58'),
(306559, 481, '#iclude <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,f=1;\r\ncin>>n\r\nfor(int i=n;i>=1;i--){\r\nf =f*i;\r\n}\r\ncout<<\"f=\"<<f<<endl;\r\n}', 938, 51, 2, '2019-03-16 07:31:57', '2019-03-19 13:05:36'),
(306590, 467, '1355', 912, 51, 2, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306591, 468, '#include <iostream >\r\nusing namespace std ;\r\nint main (){\r\nint n , m , z,j;\r\ncin >> n >> m ;\r\nif (n<m)\r\nz=n;\r\nj=m;\r\nelse  \r\nz=m ;\r\nj=n;\r\nfor (int i =z ;i>0;i--){\r\ni%z ==0;\r\ni%j==0;\r\ncout << i ;\r\n}', 912, 51, 3.5, '2019-03-16 07:32:06', '2019-04-10 09:05:59'),
(306592, 469, '1360', 912, 51, 0, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306593, 470, '1365', 912, 51, 0, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306594, 475, '1383', 912, 51, 2, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306595, 477, '#include <iostream >\r\nusing namespace std ;\r\nint main (){\r\nint i ,count=0  ;\r\ncin>>i;\r\nwhile ( count <10){\r\nif (i%2 ==0){\r\ncout << i +1<< endl;\r\ncount ++;\r\n}\r\n}', 912, 51, 0, '2019-03-16 07:32:06', '2019-04-10 09:05:59'),
(306596, 478, '1386', 912, 51, 1, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306597, 479, '#include <iostream >\r\nusing namespace std ;\r\nint main (){\r\nint sumeven =0 , sumodd=0 ;\r\nfor (int i=0 ;i<=100;i++){\r\nif (i%2==0)\r\nsumeven +=i;\r\nelse \r\nsumodd +=i ;\r\n}\r\ncout << sumeven << \"\\n\"<< sumodd;\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 912, 51, 2, '2019-03-16 07:32:06', '2019-03-19 13:02:30'),
(306598, 480, '1393', 912, 51, 1, '2019-03-16 07:32:06', '2019-03-16 07:32:06'),
(306599, 481, '#include <iostream>\r\nusing name space std ;\r\nint main (){\r\nint n, sum = 0 ;\r\nfor (int i = 1 ;i<=n ;i++){\r\nsum +=i ;\r\ncout <<sum ;\r\n}\r\n\r\nreturn 0 ;\r\n}', 912, 51, 0, '2019-03-16 07:32:06', '2019-03-19 13:02:30'),
(306757, 467, '1354', 933, 51, 0, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306758, 468, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x,c,v=0;\r\ncin>>x>>c;\r\nif(x<c)\r\n{\r\nfor(int i=1;i<=x;i++)\r\n{\r\nif(x%i==0&&c%i==0)\r\n{\r\nv=i;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n}\r\nelse if(c<x)\r\n{\r\nfor(int i=1;i<=c;i++)\r\n{\r\nif(x%i==0&&c%i==0)\r\n{\r\nv=i;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n}\r\ncout<<v;\r\n}', 933, 51, 4, '2019-03-16 07:32:58', '2019-04-10 09:11:03'),
(306759, 469, '1358', 933, 51, 0, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306760, 470, '1364', 933, 51, 0, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306761, 475, '1383', 933, 51, 2, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306762, 477, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint i=1;\r\nwhile(i<10)\r\n{\r\nif(i%2!=0)\r\n{cout <<i;\r\n}\r\ni=i+2;\r\n\r\n\r\n}\r\n}', 933, 51, 2, '2019-03-16 07:32:58', '2019-04-10 09:11:03'),
(306763, 478, '1386', 933, 51, 1, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306764, 479, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint even =0,odd =0;\r\nfor (int i=1;i<100;i++)\r\n{\r\nif(i%2==0)\r\n{ even= even+i;}\r\nelse\r\n{odd =odd +i;}\r\n\r\n\r\n\r\n}\r\ncout<<odd<<\" \"<<even;\r\n}', 933, 51, 2, '2019-03-16 07:32:58', '2019-03-24 10:53:25'),
(306765, 480, '1393', 933, 51, 1, '2019-03-16 07:32:58', '2019-03-16 07:32:58'),
(306766, 481, '#include<iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x=1,n;\r\ncin>>n;\r\nfor (int i=1;i<=n;i++)\r\n{\r\nx=x*i;\r\n}\r\ncout<<x;\r\n}', 933, 51, 2, '2019-03-16 07:32:58', '2019-03-24 10:53:25'),
(306914, 467, '1355', 942, 51, 2, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306915, 468, '#include <iostream>\r\nusing namespasce std:\r\nvoid main({\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<x/y<<endl;\r\n\r\n }', 942, 51, 0, '2019-03-16 07:34:06', '2019-04-10 09:11:48'),
(306916, 469, '1360', 942, 51, 0, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306917, 470, '1363', 942, 51, 0, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306918, 475, '1385', 942, 51, 0, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306919, 477, '#include <iostream>\r\nusing namespace std:\r\nvoid main(){\r\nfor(int i=0; i<10; i++)\r\n{  if(i%2!=0)}\r\ncout<<i<<endl;  \r\n(other solution)\r\n#include <iostream>\r\nusing namespace std;\r\nvoid main(){ \r\nint i=0;\r\nwhile(x<10)\r\nif(i%2!=0)\r\ni++;\r\ncout<<i<<endl;', 942, 51, 1, '2019-03-16 07:34:06', '2019-04-10 09:11:48'),
(306920, 478, '1386', 942, 51, 1, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306921, 479, '#include <iostream> \r\nusing namespace std;\r\nvoid main(){\r\nint x ,sum even,sum odd;\r\nfor(i=0 ;  i<=100;   ;i++)\r\nif(x%i ==0)\r\nsum even=sum even+i\r\nelse \r\nsum odd=sum odd+i\r\ncout <<sum even <<endl;\r\ncout<<sum odd<<endl;\r\n}\r\n{', 942, 51, 0, '2019-03-16 07:34:06', '2019-03-24 10:52:28'),
(306922, 480, '1393', 942, 51, 1, '2019-03-16 07:34:06', '2019-03-16 07:34:06'),
(306923, 481, '#include <iostream>\r\nusing name space std:\r\nvoid main(){\r\nint  n,f=1;\r\nf0r(i=1; i<n; i++) \r\nf=f*i\r\ncout<<f<<endl;\r\n}', 942, 51, 1.5, '2019-03-16 07:34:06', '2019-03-24 10:52:28'),
(306961, 467, '1355', 963, 51, 2, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306962, 468, '#include<iostream>\r\nusing name space std;\r\nint main()\r\n{\r\nint x,y,z;\r\n\r\ncout<<enter two number \\n\";\r\ncin>>x>>y;\r\nif(x%z==0 &&x%z', 963, 51, 0, '2019-03-16 07:34:25', '2019-04-10 09:16:44'),
(306963, 469, '1361', 963, 51, 2, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306964, 470, '1362', 963, 51, 2, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306965, 475, '1383', 963, 51, 2, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306966, 477, '#Include<iostream>\r\nusing namespace std;\r\nint main()\r\n{    \r\nint i=1;\r\nint cout=1;\r\nwhile(cout<=10)\r\n{\r\nif(i%2==1)\r\n{\r\ncout<<i<<\"\\n\";\r\ncount ++;\r\n}\r\n}', 963, 51, 0, '2019-03-16 07:34:25', '2019-04-10 09:16:44'),
(306967, 478, '1387', 963, 51, 0, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306968, 479, '#Include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum even=0; \r\nint sum odd=o;\r\nfor(int i=0;i<=100 ;i++)\r\n{\r\nif(i%2==0)\r\n{\r\nsum even+=i;\r\n}\r\nelse\r\n{\r\nsum odd +=i;\r\n}\r\n}\r\ncout<<\"sum of even is\"<<sum even<<\"\\n\";\r\ncout<<\"sum of odd\"<<sum odd<<\"\\n\";\r\n}', 963, 51, 1, '2019-03-16 07:34:25', '2019-03-24 10:51:54'),
(306969, 480, '1393', 963, 51, 1, '2019-03-16 07:34:25', '2019-03-16 07:34:25'),
(306970, 481, '#include<iostream>\r\nusing name space std;\r\nint main()\r\n{\r\nint n, f =1;\r\n          cout<<\"enter any number \\n\";\r\ncin>>n;\r\nfor(int i=1; i<=n; i++)\r\n{\r\nf*=i;\r\n }\r\ncout<<f<<\"\\n\";\r\nsystem(\"pause\");\r\n}', 963, 51, 2, '2019-03-16 07:34:25', '2019-03-24 10:51:54'),
(307010, 467, '1355', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307011, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x,y,z;\r\ncin>>x>>y;\r\nfor(int i=1;i<=9;i++)\r\n{z=x/i\r\n\r\nsystem (\"pause\")\r\n}', 940, 51, 0, '2019-03-16 07:34:38', '2019-04-10 09:17:06'),
(307012, 469, '1361', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307013, 470, '1362', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307014, 475, '1383', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307015, 477, 'int i,count=0;\r\nwhile(count<10)\r\n{if(i%2==1)\r\n{\r\ncout<<i<<endl\r\n;count+=2\r\n}\r\n}', 940, 51, 1, '2019-03-16 07:34:38', '2019-04-10 09:17:06'),
(307016, 478, '1386', 940, 51, 1, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307017, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint sum1=0,sum2=0;\r\nfor(int i=1;i<=100;i+=2)\r\n{sum1=sum1+i;}\r\ncout<<\"the sum of odd=\"<<sum1;         \r\nfor (int c=2;c<=100;c+=2)\r\n{sum2=sum2+c;}\r\ncout<<\"the sum of even=\"<<sum2;     \r\nsystem(\"pause\");\r\n}', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-24 10:51:12'),
(307018, 480, '1393', 940, 51, 1, '2019-03-16 07:34:38', '2019-03-16 07:34:38'),
(307019, 481, 'int n,f;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{f=f*i;}\r\ncout<<\"factorial of\"<<n<<\"=\"<<f<<endl;', 940, 51, 2, '2019-03-16 07:34:38', '2019-03-24 10:51:12'),
(307071, 467, '1355', 955, 51, 2, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307072, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint n1,n2;\r\ncout <<\"Enter your numbers ,please\";\r\ncin >>n1>>n2;\r\nn1=max(n1,n2);\r\nn2=min(n1,n2);\r\nfor (int i=n2  ;   i>0   ;  )\r\n{\r\n  if (n1%i ==0&&n2%i==0)\r\n{\r\ncout <<i<<\"is the Greatest common divisor \";\r\nbreak;\r\n}\r\nelse i--;\r\n}\r\nreturn 0;\r\n}', 955, 51, 4, '2019-03-16 07:35:07', '2019-04-10 09:18:28'),
(307073, 469, '1360', 955, 51, 0, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307074, 470, '1363', 955, 51, 0, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307075, 475, '1383', 955, 51, 2, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307076, 477, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{  int i =1;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}      \r\nreturn 0;\r\n}', 955, 51, 0, '2019-03-16 07:35:07', '2019-04-10 09:18:28'),
(307077, 478, '1386', 955, 51, 1, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307078, 479, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{int sum1=0;sum2=0;\r\nfor(int i=0;i<100;i++)     {\r\n                    if (i%2==0) sum1+=i;\r\n                     else sum2+=i;\r\n                                             }\r\ncout <<\"the sum of even numbers than 100  =  \"<<sum1<<endl;\r\ncout <<\"the sum of odd numbers less than 100  =  \"<<sum2<<endl;\r\n\r\n return 0;\r\n}', 955, 51, 2, '2019-03-16 07:35:07', '2019-03-24 10:50:38'),
(307079, 480, '1393', 955, 51, 1, '2019-03-16 07:35:07', '2019-03-16 07:35:07'),
(307080, 481, '#include <iostream>\r\nusing namespace std ;\r\nint main ()\r\n{\r\nint n,f =1;\r\ncin >>n;\r\nfor (int i=n;i>=1;i--)\r\n{f=f*i;}\r\ncout<<\"the factorial of your number =  \"<<f<<endl;\r\n\r\n\r\nreturn 0;\r\n}', 955, 51, 2, '2019-03-16 07:35:07', '2019-03-24 10:50:38'),
(307099, 467, '1357', 1006, 51, 0, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307100, 468, 'int x,y;\r\ncin>>x>>y;\r\nx>y;\r\nfor(i=0;i<=y; i++)\r\ncout<<i++ ;', 1006, 51, 0, '2019-03-16 07:35:12', '2019-04-16 05:29:58'),
(307101, 469, '1360', 1006, 51, 0, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307102, 470, '1365', 1006, 51, 0, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307103, 475, '1383', 1006, 51, 2, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307104, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 == 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 1006, 51, 0, '2019-03-16 07:35:12', '2019-04-16 05:29:58'),
(307105, 478, '1386', 1006, 51, 1, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307106, 479, '#include <iostream>\r\nnamespace std;\r\nint main(){\r\nint x,y;\r\ncin>> x;\r\ncin>>y;\r\nsum=x+y;\r\nif(sum<100){\r\ncout <<\'sum\';\r\n [\r\nelse\r\ncout<<\"Error\"  }}', 1006, 51, 0, '2019-03-16 07:35:12', '2019-03-24 10:48:31'),
(307107, 480, '1393', 1006, 51, 1, '2019-03-16 07:35:12', '2019-03-16 07:35:12'),
(307108, 481, '#include <iostream>\r\nnamespace std;\r\nint main(){\r\nint n;\r\ncin>>n;\r\nfor(int i=0; i<=n:i++)\r\nn=n*(n-1);                                                                                                            \r\ncout<<n;\r\n}', 1006, 51, 0, '2019-03-16 07:35:12', '2019-03-24 10:48:31'),
(307185, 467, '1354', 979, 51, 0, '2019-03-16 07:35:36', '2019-03-16 07:35:37'),
(307186, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint a,b,gcd;\r\ncin>>a;\r\ncin>>b;\r\ngcd=a-b;\r\ncout<<gcd;\r\n\r\nsystem(\"pause\");\r\n}', 979, 51, 0, '2019-03-16 07:35:37', '2019-04-16 05:30:26'),
(307187, 469, '1358', 979, 51, 0, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(307188, 470, '1364', 979, 51, 0, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(307189, 475, '1382', 979, 51, 0, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(307190, 477, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint=0;\r\nint count=0;\r\n   while(i<10)\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n system(\"pause\");                                                                                                       \r\n\r\n}', 979, 51, 0, '2019-03-16 07:35:37', '2019-04-16 05:30:26'),
(307191, 478, '1388', 979, 51, 0, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(307192, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint evensum,even odd;\r\nfor(int i=1;i<100;i++)\r\nif(i%2==0)\r\n{\r\nevensum+=i;\r\ncout<<evensum<<endl;\r\n}\r\nelse\r\n{\r\noddsum+=i;\r\ncout<<oddsum<<endl;\r\n}\r\n\r\nsystem(\"pause\");\r\n}', 979, 51, 1, '2019-03-16 07:35:37', '2019-03-24 10:46:17'),
(307193, 480, '1393', 979, 51, 1, '2019-03-16 07:35:37', '2019-03-16 07:35:37'),
(307194, 481, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint i;\r\nfor(int fact=1;fact<=i;fact++)\r\n{\r\ncin>>i;\r\nfact*=i;\r\ncout<<fact<<endl;\r\n}\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 979, 51, 0, '2019-03-16 07:35:37', '2019-03-24 10:46:17'),
(307242, 467, '1355', 1002, 51, 2, '2019-03-16 07:36:03', '2019-03-16 07:36:04'),
(307243, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint num1,num2;\r\ncout<<\"Enter The Two Numbers \\n\";\r\ncin>>num1>>num2;\r\nfor(int i=1;(i<=num1/2&&i<=num2/2;i++)\r\n{\r\nif(num1%i==0&&num2%i==0)\r\ncout<<\"the GCD is \"<<i<<\\n\";\r\n}\r\n}', 1002, 51, 2, '2019-03-16 07:36:04', '2019-04-16 05:31:11'),
(307244, 469, '1360', 1002, 51, 0, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(307245, 470, '1365', 1002, 51, 0, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(307246, 475, '1384', 1002, 51, 0, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(307247, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n  int i=1;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2 !=0)\r\n\r\ncout<<i<<endl;\r\n\r\ncount++;\r\ni++;\r\n       }\r\n}                                                                 i', 1002, 51, 1, '2019-03-16 07:36:04', '2019-04-16 05:31:11'),
(307248, 478, '1386', 1002, 51, 1, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(307249, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n                 int sumeven=0,sumodd=0;\r\nfor (int i=1;i<100<i++)\r\n{\r\nif(i%2==0)\r\nsumeven+=i;\r\nelse\r\nsumodd+=i;\r\n}\r\ncout<<\"the sum of the even numbers is<<sumeven<<\"\\n\";\r\ncout<<\"the sum of odd numbers is<<sumodd<<\"\\n\";\r\n}', 1002, 51, 2, '2019-03-16 07:36:04', '2019-03-24 10:45:14'),
(307250, 480, '1393', 1002, 51, 1, '2019-03-16 07:36:04', '2019-03-16 07:36:04'),
(307251, 481, '#include <iostream>                \r\nusing namespace std;\r\nint main()\r\n{\r\nint fact=1,number;\r\ncout<<\"Enter the number \\n\";\r\ncin>>number;\r\nfor(int i=1;i<=number;i++)\r\n{\r\nfact=fact*i;\r\n}\r\ncout<<\"the factorial of\"<<number<<\"is\"<<fact<<\\n\";\r\n\r\n}', 1002, 51, 2, '2019-03-16 07:36:04', '2019-03-24 10:45:14'),
(307332, 467, '1354', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307333, 468, '#includ <iostream>\r\nusing name space std;\r\nint main ()\r\n{\r\nint x , y , T ;\r\nx=0\r\nT=6 ,\r\n for(int x=0; x<T; x++)\r\ncout<< \'x\'  ;\r\nretern0;', 242, 51, 0, '2019-03-16 07:36:39', '2019-04-16 05:31:34'),
(307334, 469, '1358', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307335, 470, '1363', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307336, 475, '1383', 242, 51, 2, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307337, 477, 'if (i%2==0)', 242, 51, 0, '2019-03-16 07:36:39', '2019-04-16 05:31:34'),
(307338, 478, '1386', 242, 51, 1, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307339, 479, '#includ <iostream>\r\nusing namespase std;\r\nint main() \r\n{\r\nint   a , b ;\r\ncin>> c ;\r\ncout<< 1 ...100 ;\r\nif(a%40 ==20)', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-24 10:44:26'),
(307340, 480, '1391', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-16 07:36:39'),
(307341, 481, '#includ <iostream>\r\nusing name space std;\r\nint main ()\r\n{\r\nint n ;\r\ncin>> i;\r\nfor(int n=0; n<i; n++)\r\n!n = n * n-1*...*1\r\ncout << \'n\'  ;\r\nretearn 0;', 242, 51, 0, '2019-03-16 07:36:39', '2019-03-24 10:44:26'),
(307342, 467, '1354', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307343, 468, 'int a,b;\r\ncin>>a>>b;', 997, 51, 0, '2019-03-16 07:36:42', '2019-04-16 05:32:05'),
(307344, 469, '1360', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307345, 470, '1364', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307346, 475, '1382', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307347, 477, 'int i=1;\r\nint count=1;\r\nwhile(count<=10){\r\nif(count%2==1){\r\ncout<<i<<endl;\r\ncount+=2\r\n}\r\n}', 997, 51, 0, '2019-03-16 07:36:42', '2019-04-16 05:32:05'),
(307348, 478, '1386', 997, 51, 1, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307349, 479, 'for(i=1;i<100;i++)\r\n{\r\nif(i%2==0);\r\ncout<<\"even\";\r\nelse\r\ncout<<\"odd\";\r\n\r\n}', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-24 09:14:10'),
(307350, 480, '1391', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-16 07:36:42'),
(307351, 481, 'int n,fact\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfor(fact=1;fact<=i;fact++)\r\nfact=fact*i;\r\n}\r\ncout<<fact;', 997, 51, 0, '2019-03-16 07:36:42', '2019-03-24 09:14:10'),
(307372, 467, '1355', 966, 51, 2, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307373, 468, NULL, 966, 51, 0, '2019-03-16 07:37:05', '2019-04-16 05:32:54'),
(307374, 469, '1361', 966, 51, 2, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307375, 470, '1365', 966, 51, 0, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307376, 475, '1382', 966, 51, 0, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307377, 477, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint i=0;\r\nint counter=0;\r\nwhile(c<20){\r\nif(counter%2!=0)\r\ncout<<counter<<endl;\r\ncounter++;\r\n}                  \r\nreturn 0;\r\nsystem(\"pause\");\r\n}', 966, 51, 2, '2019-03-16 07:37:05', '2019-04-16 05:32:54'),
(307378, 478, '1386', 966, 51, 1, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307379, 479, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint even=0,odd=0;\r\nfor(int i=0;i++){\r\n    if(i%2==0){\r\n       even+=i\r\n}       if(even>=100){\r\n         break;\r\n        cout<<even<<endl;\r\n}\r\n}\r\nelse\r\nodd+=i;\r\n        if(odd>=100){\r\n        break;\r\ncout<<odd<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 966, 51, 0, '2019-03-16 07:37:05', '2019-03-24 09:13:46'),
(307380, 480, '1393', 966, 51, 1, '2019-03-16 07:37:05', '2019-03-16 07:37:08'),
(307381, 481, '#include <iostream>\r\nusing namespce std;\r\nint main{\r\nint n,f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++){\r\n    f=f*i;\r\n}\r\ncout<<f<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 966, 51, 2, '2019-03-16 07:37:05', '2019-03-24 09:13:46'),
(307382, 467, '1355', 994, 51, 2, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307383, 468, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x ,y;\r\ncout<<\"please enter two number \\n\";\r\ncin>>x,y;\r\nfor(int i =1 ; i<=(0.5*x);i++)\r\n{\r\nif(x%i==0)\r\nif(y%i==0)\r\np=i;\r\n}\r\ncout <<\"the GCD is\"<<p<<\"\\n\";\r\n}', 994, 51, 3, '2019-03-16 07:37:12', '2019-04-16 05:34:41'),
(307384, 469, '1360', 994, 51, 0, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307385, 470, '1362', 994, 51, 2, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307386, 475, '1384', 994, 51, 0, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307387, 477, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint i=0;\r\nint count = 0;\r\nwhile (count<10)\r\n{\r\nif(i%2!=0)\r\ncout<<i<<endl; \r\ncount++;\r\n}\r\n}\r\nsystem(\"pause\");                                                                                          \r\n}', 994, 51, 0, '2019-03-16 07:37:12', '2019-04-16 05:34:41'),
(307388, 478, '1386', 994, 51, 1, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307389, 479, '#include <iostream>\r\nusing namespace std ;   \r\nint main()\r\n{\r\nint p=0 ,c=0\r\nfor (int i=0;i<100;i++)\r\n{\r\nif (i%2==0)\r\np=p+i;\r\nelse\r\nc=c+i;\r\n}\r\ncout <<\"the even number is\"<<p<<\"\\n\";\r\ncout <<\"the odd number is\"<<c<<\"\\n\";\r\nsystem(\"pause\");\r\n}', 994, 51, 2, '2019-03-16 07:37:12', '2019-03-24 09:12:48'),
(307390, 480, '1393', 994, 51, 1, '2019-03-16 07:37:12', '2019-03-16 07:37:13'),
(307391, 481, '#include <iostream>\r\nusing namespace std ;   \r\nint main()\r\n{\r\nint x ,sum=1;\r\ncout <<\"please enter the number\";\r\ncin>> x;\r\nfor(int i =1;i<=x;i++)\r\nsum=sum*i;\r\ncout <<\"the factorial is \" << sum<<\"\\n\";\r\nsystem (\"pause\");\r\n}', 994, 51, 2, '2019-03-16 07:37:12', '2019-03-24 09:12:48'),
(307410, 467, '1354', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307411, 468, '#include <iostream>\r\nusing namespace;\r\nint main ()\r\n{\r\n}', 993, 51, 0, '2019-03-16 07:37:25', '2019-04-16 05:34:55'),
(307412, 469, '1360', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307413, 470, '1365', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307414, 475, '1385', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307415, 477, 'int i=0;\r\nint count=o;\r\nwhile(count<10){\r\nif(i%2!=!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 993, 51, 0, '2019-03-16 07:37:25', '2019-04-16 05:34:55'),
(307416, 478, '1386', 993, 51, 1, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307417, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x=0 i=0\r\nwhile (x<100)\r\ni+=x\r\nx++\r\nif(x%2!=!=0)\r\ncout<<i<<endl;\r\nreturn 0;\r\n          }', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-24 09:11:48'),
(307418, 480, '1393', 993, 51, 1, '2019-03-16 07:37:25', '2019-03-16 07:37:25'),
(307419, 481, '#include <iostream>\r\n       using namespace std;\r\nint main()\r\n{\r\nint n ;\r\ncout<<\"enter the number\";\r\ncin>>n;\r\nfor(int i =1,i>0)\r\n{\r\nn--\r\ni*=n\r\n}\r\n   cout <<i<<endl;\r\nreturn 0;\r\n}', 993, 51, 0, '2019-03-16 07:37:25', '2019-03-24 09:11:48'),
(307440, 467, '1355', 1016, 51, 2, '2019-03-16 07:37:30', '2019-03-16 07:37:30'),
(307441, 468, '#include <iostream>\r\nusing namespace std;\r\nint (main)\r\n{\r\nint m,n;\r\ncin >>m>>n;\r\nfor (int i =1 ; i <n && i< m; i++)\r\n {\r\n        if (m % i == 0)\r\n             {\r\n                 if (n%i == 0)\r\n                     {\r\n                            return o;\r\n                      }\r\n                   else \r\n                           {\r\n                            cout << i;\r\n                            }\r\n               }\r\n                else\r\n                        cout <<i;\r\n }\r\nreturn 0;\r\n}', 1016, 51, 2, '2019-03-16 07:37:30', '2019-04-16 05:37:40'),
(307442, 469, '1360', 1016, 51, 0, '2019-03-16 07:37:30', '2019-03-16 07:37:30'),
(307443, 470, '1362', 1016, 51, 2, '2019-03-16 07:37:30', '2019-03-16 07:37:30'),
(307444, 475, '1385', 1016, 51, 0, '2019-03-16 07:37:30', '2019-03-16 07:37:30'),
(307445, 477, 'int i =1;\r\nwhile(i<10){\r\nif(i%2 == 1){\r\ncout<<i<<endl;\r\n}\r\ni+=2;\r\n\r\n}', 1016, 51, 1, '2019-03-16 07:37:30', '2019-04-16 05:37:40'),
(307446, 478, '1386', 1016, 51, 1, '2019-03-16 07:37:30', '2019-03-16 07:37:30'),
(307447, 479, '#include <iostream>\r\nusing namespace std;\r\nint (main)\r\n{   \r\n  int sum=0;\r\n  for (int i=0 ; i< 100 ; i++)\r\n  {\r\n           sum +=1    \r\n   }\r\n        cout <<sum<<\"\\n\";\r\n\r\nreturn 0;\r\n}', 1016, 51, 0, '2019-03-16 07:37:30', '2019-03-24 09:11:13'),
(307448, 480, '1393', 1016, 51, 1, '2019-03-16 07:37:30', '2019-03-16 07:37:31'),
(307449, 481, '#include <iostream>\r\nusing namespace std;\r\nint (main)\r\n{\r\n  int n , f;\r\n   cin >>n;\r\n for (int i = n ; i>=1 ;i--)\r\n  {\r\n     f= n* i;\r\n  }\r\n\r\n\r\nreturn 0;\r\n}', 1016, 51, 0, '2019-03-16 07:37:30', '2019-03-24 09:11:13'),
(308006, 467, '1356', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308007, 468, '#Include<iostream>\r\nusing name space std;\r\nint main()\r\n{ int n,m,X;\r\ncout<<\" enter tow numper\"<<endl;\r\ncin>>n>>m; \r\nX=n/m;\r\ncout <<X<<endl;\r\nreturn 0;\r\n}', 1072, 51, 0, '2019-03-16 07:39:16', '2019-04-16 06:12:00'),
(308008, 469, '1358', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308009, 470, '1362', 1072, 51, 2, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308010, 475, '1383', 1072, 51, 2, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308011, 477, '{               int i=0;\r\nint count =0;\r\nwhile (count <10)\r\n{ if (i%2==1)\r\ncout <<\"the numper is odd\"<<i<<endl;\r\n}                                   count++;\r\nreturn 0;}', 1072, 51, 0, '2019-03-16 07:39:16', '2019-04-16 06:12:00'),
(308012, 478, '1388', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308013, 479, '#include<iostream> \r\nusing namespace std  ;\r\nInt main ()\r\n{\r\nint n;\r\n\r\ncout<<\"plasse enter the numper \"<<endl;\r\ncin>>n ;\r\nIF(n%2==0)\r\ncout <<\"The numper is even\"<<endl;\r\nelse\r\ncout <<\"the nomper is odd\"<<endl;\r\n\r\nreturn 0;\r\n}', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-24 09:09:07'),
(308014, 480, '1390', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-16 07:39:17'),
(308015, 481, 'int n;\r\ncout<<\" enter the nomper\"<<endl;\r\ncin<<n; \r\nfor(int i=1;i>=1;i++)\r\n{for(int j=1;j<=n-i,j++)\r\ncout <<n<<endl;\r\n\r\n}', 1072, 51, 0, '2019-03-16 07:39:16', '2019-03-24 09:09:07'),
(308076, 467, '1355', 980, 51, 2, '2019-03-16 07:39:51', '2019-03-16 07:39:52'),
(308077, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n,x,gcd;\r\ncin>>n;\r\ncin>>x;\r\nfor (int y=1;y++)\r\n   if(n%y==0 && x%y==0)\r\n      {\r\n       gcd=y;\r\n     cout<<\"gcd =\"<<gcd;\r\n    break;\r\n     }\r\n\r\n\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 980, 51, 2, '2019-03-16 07:39:51', '2019-04-16 06:13:22'),
(308078, 469, '1360', 980, 51, 0, '2019-03-16 07:39:51', '2019-03-16 07:39:52'),
(308079, 470, '1365', 980, 51, 0, '2019-03-16 07:39:51', '2019-03-16 07:39:52'),
(308080, 475, '1385', 980, 51, 0, '2019-03-16 07:39:51', '2019-03-16 07:39:52'),
(308081, 477, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint i=0;\r\nint count=0;\r\nwhile(count <10)\r\n{\r\nif (i%2=!0 && i=!0)\r\n{\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}\r\nsystem(\"pause\");\r\n}', 980, 51, 0, '2019-03-16 07:39:51', '2019-04-16 06:13:22'),
(308082, 478, '1386', 980, 51, 1, '2019-03-16 07:39:51', '2019-03-16 07:39:52'),
(308083, 479, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint sum1;\r\nint sum2;\r\nfor (int n=0;n<100;n++)\r\n  if(n%2==0)\r\n{\r\n   sum1 +=n;\r\n    cout<<\"sum1 =\"<<sum1:\r\n}\r\nelse\r\n{\r\nsum2 +=n;\r\ncout<<\"sum2 =\"<<sum2:\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 980, 51, 1, '2019-03-16 07:39:51', '2019-03-24 10:57:50'),
(308084, 480, '1393', 980, 51, 1, '2019-03-16 07:39:52', '2019-03-16 07:39:52'),
(308085, 481, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n;\r\nint fac; \r\ncin>>n;\r\nwhile(n>0)\r\nfac=n*(n-1);\r\ncout<<fac:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 980, 51, 0, '2019-03-16 07:39:52', '2019-03-24 10:57:50'),
(308155, 467, '1355', 1013, 51, 2, '2019-03-16 07:40:08', '2019-03-16 07:40:08'),
(308156, 468, '#include<iostream>\r\nusing namespace std;\r\nint main ()', 1013, 51, 0, '2019-03-16 07:40:08', '2019-04-16 06:13:41'),
(308157, 469, '1361', 1013, 51, 2, '2019-03-16 07:40:08', '2019-03-16 07:40:08'),
(308158, 470, '1363', 1013, 51, 0, '2019-03-16 07:40:08', '2019-03-16 07:40:08'),
(308159, 475, '1382', 1013, 51, 0, '2019-03-16 07:40:08', '2019-03-16 07:40:09'),
(308160, 477, 'if(i%2!==0)\r\n{\r\ncout<<i<<endl;\r\ncount+=2;\r\n}', 1013, 51, 0, '2019-03-16 07:40:08', '2019-04-16 06:13:41'),
(308161, 478, '1387', 1013, 51, 0, '2019-03-16 07:40:08', '2019-03-16 07:40:09'),
(308162, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\nintnum,sumev,sumodd;\r\ncin>>num;\r\nf0r(int i=0;i<=100;i++)\r\nif(num%2==o)\r\n{cin>>sumev;\r\nsumev+=num;\r\n}\r\nelse{cin>>sumodd;\r\nsumodd+=num;\r\n}\r\nreturn0;\r\n}', 1013, 51, 0, '2019-03-16 07:40:08', '2019-03-24 10:58:34'),
(308163, 480, '1393', 1013, 51, 1, '2019-03-16 07:40:08', '2019-03-16 07:40:09'),
(308164, 481, '#include<iosteam>\r\nusing namespace std;\r\n\r\nmain() \r\n{int n=1; f=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n\r\n{cin>>f;\r\nf=f*i;\r\n}\r\ncout<<f;\r\nreturn0;\r\n}', 1013, 51, 0, '2019-03-16 07:40:08', '2019-03-24 10:58:34'),
(308205, 467, '1355', 972, 51, 2, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308206, 468, '#include <iostream>\r\n       using namespace std;\r\n       int main(){\r\n           int x,y,div;\r\n           cin>>x>>y;\r\n           div=x%y;\r\n           cout<<\"gcd=\"<<div;\r\n      system(\"pause\");\r\n    return 0;', 972, 51, 0, '2019-03-16 07:40:40', '2019-04-16 05:29:34'),
(308207, 469, '1359', 972, 51, 0, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308208, 470, '1362', 972, 51, 2, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308209, 475, '1383', 972, 51, 2, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308210, 477, 'int i=0;\r\n    int count =0;\r\n     while(count<20){\r\n       if(i%2!=0){\r\n         cout<<i<<endl;\r\n       }\r\n     count++;\r\n     i++;\r\n}\r\n}', 972, 51, 1, '2019-03-16 07:40:40', '2019-04-16 05:29:34'),
(308211, 478, '1386', 972, 51, 1, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308212, 479, '#include <iostream>\r\n   using namespace std;\r\n   int main()\r\n\r\n{  int sumeven=0,sumodd=0;\r\n  for(int i=0;i<100;i++)\r\n  {\r\n       if(i%2==0)\r\n          sumeven+=i;\r\n      else\r\n           sumodd+=i;\r\n   }\r\ncout<<\"sumeven=\"<<sumeven<<endl;\r\ncout<<\"sumodd=\"<<sumodd<<endl;\r\nsystem(\"pause\")\r\nreturn 0;\r\n}', 972, 51, 2, '2019-03-16 07:40:40', '2019-03-24 09:10:38'),
(308213, 480, '1393', 972, 51, 1, '2019-03-16 07:40:40', '2019-03-16 07:40:40'),
(308214, 481, '#include <iostream>\r\n          using namespace std;\r\n          int main()\r\n{   \r\n        int x;f=1;\r\n       cin>>x;\r\n       for(int i=1;i<=x   ;i++)\r\n        {\r\n           f=f*i;\r\n         }\r\ncout<<p<<endl;\r\nsystem(\"pause\");\r\nreturn 0;', 972, 51, 2, '2019-03-16 07:40:40', '2019-03-24 09:10:38'),
(308233, 467, '1355', 1077, 51, 2, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308234, 468, '#include<iostream>\r\n                                   using namespace std;\r\n                       int main()              \r\n{\r\nint n1, n2;\r\ncout<<\"enter 2 numbers\\n\";\r\ncin>>n1>>n2;\r\nwhile(n1!=n2)\r\n{ if(n1>=n2)\r\nn1-=n2;\r\n else\r\nn2-=n1;\r\n}\r\n}\r\nreturn0;', 1077, 51, 2, '2019-03-16 07:40:53', '2019-04-16 06:35:22'),
(308235, 469, '1361', 1077, 51, 2, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308236, 470, '1365', 1077, 51, 0, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308237, 475, '1382', 1077, 51, 0, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308238, 477, 'int i=1;\r\nint count=0;\r\nwhile(count<20){\r\nif(i%2==1){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 1077, 51, 0, '2019-03-16 07:40:53', '2019-04-16 06:35:22'),
(308239, 478, '1386', 1077, 51, 1, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308240, 479, 'int even num;odd num; sum;\r\n for(i=0;i<100;i++;)\r\nif(i%==0){\r\ncout<<\"sum of even numbers\"<<sum+=even num<<\"\\n\";\r\nelse\r\ncout<<\"sum of odd numbers\"<<sum+=odd num\"<<\"\\n\";\r\n} \r\n}\r\nreturn 0;', 1077, 51, 0, '2019-03-16 07:40:53', '2019-03-24 10:59:10'),
(308241, 480, '1393', 1077, 51, 1, '2019-03-16 07:40:53', '2019-03-16 07:40:54'),
(308242, 481, 'int a,factorial =1;\r\ncin>>a;\r\nfor(int i=0;i<=a;i++)\r\nfact=factorial*=i\r\n                        cout<<\"fact of num\"<<a<<\"=\"<<fact<<\"\\n\";', 1077, 51, 0, '2019-03-16 07:40:53', '2019-03-24 10:59:10'),
(308253, 467, '1355', 1008, 51, 2, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308254, 468, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{ \r\nint a,b;\r\ncin>>a>>b;', 1008, 51, 0, '2019-03-16 07:40:56', '2019-04-16 06:35:43'),
(308255, 469, '1360', 1008, 51, 0, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308256, 470, '1364', 1008, 51, 0, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308257, 475, '1384', 1008, 51, 0, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308258, 477, 'int main(){\r\nint i=1;\r\nwhile (i<10){\r\nif(i%2==0){\r\ncout<<i><end1;\r\ni++;\r\n}\r\n}', 1008, 51, 0, '2019-03-16 07:40:56', '2019-04-16 06:35:43'),
(308259, 478, '1386', 1008, 51, 1, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308260, 479, 'using namespace std;\r\nint main ()\r\n{\r\nint a=0,b=0;\r\nfor(i=0;i<=100;i++)\r\n{if(i%2==0){a+=i;}\r\nelse{b+=i;}\r\n} \r\ncout<<a<<b;\r\nreturn 0;\r\n}', 1008, 51, 1.5, '2019-03-16 07:40:56', '2019-03-24 10:59:34'),
(308261, 480, '1392', 1008, 51, 0, '2019-03-16 07:40:56', '2019-03-16 07:40:56'),
(308262, 481, 'using namespace std;   \r\nint main(){\r\nusing name space std;\r\nint  n;\r\n\r\ncin>>n;  \r\n\r\nwhile(n> 0){\r\n cout<<n=n*n-1* ;\r\n}', 1008, 51, 0, '2019-03-16 07:40:56', '2019-03-24 10:59:34'),
(308272, 467, '1355', 1070, 51, 2, '2019-03-16 07:41:18', '2019-03-16 07:41:19'),
(308273, 468, '#include <iostream>   \r\nusing namespace std;\r\nint main(){\r\nint gcd;\r\nint num1,num2;\r\ncin>>num1>>num2;\r\nfor(int i=1;i<=num1&&i<=num2;i++){\r\nif(num1%i==0&&num2%i==o)\r\n{gcd=i;\r\n}\r\n}\r\ncout<<gcd;\r\n\r\n\r\n\r\n\r\n}', 1070, 51, 4, '2019-03-16 07:41:19', '2019-04-16 06:38:33'),
(308274, 469, '1360', 1070, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308275, 470, '1365', 1070, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308276, 475, '1384', 1070, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308277, 477, 'int i=1;\r\nint  count =1; \r\nwhile (count<20) {\r\nif(i%2!=0)\r\ncout<<i;\r\n}', 1070, 51, 1, '2019-03-16 07:41:19', '2019-04-16 06:38:33'),
(308278, 478, '1386', 1070, 51, 1, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308279, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sum;\r\nint sumodd;\r\nint sumeven;\r\nfor(int i=0;i<100;i++){\r\nfor(int)\r\n}\r\n\r\n\r\n}', 1070, 51, 0, '2019-03-16 07:41:19', '2019-03-24 11:00:49'),
(308280, 480, '1393', 1070, 51, 1, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308282, 481, '#include <iostream>  \r\nusing namespace std;\r\nint main(){\r\nint factorial=1;\r\nint num ;\r\ncin >> num;\r\nfor (int i=num; i>0;i--)\r\nfactorial*=i;\r\ncout<<factorial;\r\n\r\n\r\n\r\n\r\n\r\n}', 1070, 51, 2, '2019-03-16 07:41:19', '2019-03-24 11:00:49'),
(308296, 467, '1354', 1005, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308298, 468, '#include <iostream>      \r\nusing namespace std;\r\nint main()\r\n{\r\nint x,y;\r\ncout<<\"the smaller number \";\r\ncin>>x;\r\ncout<<\"the larger number \";\r\ncin>>y;\r\nfor(int i=x;i>=0;i--)\r\n{\r\nif (x%i=0 && y%x=0)\r\ncout<<i;\r\nbreak;\r\n}\r\nsystem (\"pause\");\r\n}', 1005, 51, 4, '2019-03-16 07:41:19', '2019-04-16 06:48:45'),
(308300, 469, '1360', 1005, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308302, 470, '1362', 1005, 51, 2, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308304, 475, '1385', 1005, 51, 0, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308306, 477, 'int i =0;\r\nint count =0;\r\nwhile(count <10){\r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 1005, 51, 0, '2019-03-16 07:41:19', '2019-04-16 06:48:45'),
(308307, 478, '1386', 1005, 51, 1, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308308, 479, '#include <iostream>      \r\nusing namespace std;\r\nint main()\r\n{\r\nint sum=0,a=0,b=0;\r\nfor(int x=0;x<100;x++){\r\nif (x%2=0){\r\nsum=x+sum;\r\na++;\r\n\r\ncout <<\"the sum of even number is \"<<sum<<\"\\n\";\r\nelse \r\nb++;\r\ncout<<\"the sum of even number is \"<<sum<<\"\\n\";\r\n}\r\n}\r\nsystem(\" pause\");\r\n}', 1005, 51, 0, '2019-03-16 07:41:19', '2019-03-24 11:03:38'),
(308309, 480, '1393', 1005, 51, 1, '2019-03-16 07:41:19', '2019-03-16 07:41:19'),
(308310, 481, '#include <iostream>      \r\nusing namespace std;\r\nint main()\r\n{\r\nint n ;\r\ncin>>n;\r\nfor(int x=1;x<=n;x++){\r\nx=x*n;\r\n}\r\ncout<<\"the factorial of a number is \"<<n<<\"\\n\";\r\n\r\n\r\n\r\nsystem(\" pause\");\r\n}', 1005, 51, 0, '2019-03-16 07:41:19', '2019-03-24 11:03:38'),
(308331, 467, '1354', 1079, 51, 0, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308332, 468, '#include<iostream>\r\nusing namespace std;\r\nint main (){\r\nint x,y;\r\ncout<<\"enter your number\\n\";\r\ncin>>x>>y;\r\nfor(int i=1;i<=(x=y);i++){\r\nif(x%i==0&&y%i==0)}\r\ncout<<i;      \r\nreturn 0;', 1079, 51, 2, '2019-03-16 07:41:38', '2019-04-16 06:49:47'),
(308333, 469, '1360', 1079, 51, 0, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308334, 470, '1362', 1079, 51, 2, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308335, 475, '1384', 1079, 51, 0, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308336, 477, '#include<iostream>\r\nusing namespace  std;\r\nint main(){\r\nint i=0,count=0;\r\nwhile(count<10){\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\nreturn 0;}', 1079, 51, 0, '2019-03-16 07:41:38', '2019-04-16 06:49:47'),
(308337, 478, '1387', 1079, 51, 0, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308338, 479, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint sum1,sum2;\r\nfor(int x=0;x<100;x++){\r\nif(x%2!=0)\r\nsum1+=x;}\r\ncout<<sum1<<endl;\r\nfor(int i=0;i<100;i++){\r\nif(i%2==0){\r\nsum2+=i;}\r\n                  cout<<sum2;\r\n}\r\n}', 1079, 51, 1.5, '2019-03-16 07:41:38', '2019-03-24 11:04:21'),
(308339, 480, '1393', 1079, 51, 1, '2019-03-16 07:41:38', '2019-03-16 07:41:39'),
(308340, 481, '#include<iostream>\r\nusing namespace std ;\r\nint main(){\r\nint n,factorial=1;\r\ncout<<\"enter your number\\n\"; \r\ncin>>n;\r\nfor(int x=1;x<=n;x++){\r\nfactorial *=x;}\r\ncout<<factorial ; \r\nreturn 0;', 1079, 51, 2, '2019-03-16 07:41:38', '2019-03-24 11:04:21'),
(308351, 467, '1354', 1069, 51, 0, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(308352, 468, '#include <iostream>\r\nusing namespace std;\r\nint main( ){\r\nint n1,n2;\r\ncout<<\"Enter The Two Number \\n\";\r\ncin>>n1>>n2;\r\nwhile ( n1 !=n2 )\r\nif (n1>n2)\r\nn1 -=n2;\r\nelse\r\nn2 -=n1;\r\ncout<<\" GCD = \" <<n1 ;     \r\n}', 1069, 51, 4, '2019-03-16 07:42:05', '2019-04-16 06:50:23'),
(308353, 469, '1359', 1069, 51, 0, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(308354, 470, '1362', 1069, 51, 2, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(308355, 475, '1385', 1069, 51, 0, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(308356, 477, 'int i =0 , count =0 ;\r\nwhile ( count <10){\r\nif (i % 2 != 0){\r\ncout<<i<<endl;\r\ncout ++;\r\n}\r\n}', 1069, 51, 0, '2019-03-16 07:42:05', '2019-04-16 06:50:23'),
(308357, 478, '1386', 1069, 51, 1, '2019-03-16 07:42:05', '2019-03-16 07:42:05'),
(308358, 479, '#include <iostream>\r\nusing namespace std;\r\nint main( ){\r\nint num , sumEven =0, sumOdd =0;\r\nfor( int i=1; i<100;i++){\r\ncout<<\"enter the number \\n \";\r\ncin>>num;\r\nif (num %2 ==0){\r\n sumEven +=i;\r\n } else \r\n    sumOdd +=i;\r\n }\r\ncout<<\"the sum of Even Numbers =  \"<<sumEven<<endl;\r\ncout<<\"the sum of Odd Numbers =  \"<<sumOdd<<endl;', 1069, 51, 0, '2019-03-16 07:42:05', '2019-03-24 11:04:55'),
(308359, 480, '1393', 1069, 51, 1, '2019-03-16 07:42:05', '2019-03-16 07:42:05');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(308360, 481, '#include <iostream>\r\nusing namespace std;\r\nint main( ){\r\nint num ,factorial = 1;\r\ncout<<\"enter the number \\n\";\r\ncin>>num;\r\nfor(int i =1;i <=num; i++){\r\nfactorial *= i;\r\n}\r\ncout<<\"The Factorial Of Number \"<<num<<\" = \"<<factorial;', 1069, 51, 2, '2019-03-16 07:42:05', '2019-03-24 11:04:55'),
(308379, 467, '1355', 970, 51, 2, '2019-03-16 07:43:38', '2019-03-16 07:43:38'),
(308380, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int x,y,z,a;\r\ncin>>x;\r\ncin>>y;\r\ncin>>a;\r\nz=x/a;\r\nz=y/(a+1);\r\ncout<<z<<endl;\r\n\r\n return 0;\r\n}', 970, 51, 0, '2019-03-16 07:43:38', '2019-04-16 06:50:42'),
(308381, 469, '1360', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-16 07:43:38'),
(308382, 470, '1365', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-16 07:43:39'),
(308383, 475, '1385', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-16 07:43:39'),
(308384, 477, 'int i=1;\r\nint count =0;\r\nwhile(count<10)\r\n{\r\nif(i%2 != 0)\r\ncout <<i<<endl;\r\ncount++\r\n}', 970, 51, 0, '2019-03-16 07:43:38', '2019-04-16 06:50:42'),
(308385, 478, '1386', 970, 51, 1, '2019-03-16 07:43:38', '2019-03-16 07:43:39'),
(308386, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint x,sum odd,sum even;\r\ncin>>x;\r\nif(x%2==0)\r\n{\r\nsum even +=x;\r\nif(sum even<100)\r\n{\r\nx++\r\n}\r\nelse\r\ncout<<sum even<<endl;\r\n}\r\nint y;\r\ncin >>y;\r\nif(y%2!=0)\r\n{\r\nsum odd +=x;\r\nif(sum odd<100)\r\n{\r\nx++\r\n}\r\nelse\r\ncout<<sum odd<<endl;\r\n}\r\nreturn 0;\r\n}', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-24 11:05:27'),
(308387, 480, '1390', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-16 07:43:39'),
(308388, 481, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int x;\r\nint f=1;\r\ncin>>x;\r\nfor(int i=1;i<x;i++)\r\n{\r\nf=f*1;\r\n}\r\ncout <<f<<endl;\r\nreturn 0;\r\n}', 970, 51, 0, '2019-03-16 07:43:38', '2019-03-24 11:05:27'),
(308409, 467, '1355', 1001, 51, 2, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308410, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n1 ,n2;\r\ncin>>n1>>n2\r\n\r\n\r\n\r\n\r\n}', 1001, 51, 0, '2019-03-16 07:44:16', '2019-04-16 06:50:56'),
(308411, 469, '1360', 1001, 51, 0, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308412, 470, '1364', 1001, 51, 0, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308413, 475, '1382', 1001, 51, 0, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308414, 477, 'int i=1;\r\nint count=1;\r\nwhile(count<10>\r\n{\r\nif(i%2 !=0)\r\ncout<<i<<endl;\r\ncount ++;\r\n}', 1001, 51, 0, '2019-03-16 07:44:16', '2019-04-16 06:50:56'),
(308415, 478, '1386', 1001, 51, 1, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308416, 479, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sum even;\r\nint sum odd;\r\nfor(int i=0; i<100; i++)\r\n{\r\nsum even+=i;\r\nsum odd +=i\r\n}\r\n   cout<<sum even<<sum odd<<endl;', 1001, 51, 0, '2019-03-16 07:44:16', '2019-03-24 11:06:01'),
(308417, 480, '1393', 1001, 51, 1, '2019-03-16 07:44:16', '2019-03-16 07:44:16'),
(308418, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint number;\r\nint fact=1\r\nfor(int i=1; i<number; i++)\r\n{\r\ncout<<enter the number<<endl;\r\nfact=fact*number\r\n}\r\ncout<<\"the fact is=<<fact  \\n\";\r\nreturn 0;\r\n}', 1001, 51, 0, '2019-03-16 07:44:16', '2019-03-24 11:06:01'),
(308468, 467, '1356', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308469, 468, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n1,n2;\r\nint a,x;\r\ncout<<\"enter two numbers\\n\";\r\ncin>>n1>>n2;\r\ncin>>a;\r\nif((n1\\a&&n2\\a)==x)\r\ncout<<\"gcd of number\"<<a<<\"=\"<<\"greatest common divisor\\n\";\r\nelse\r\ncou<<\"not gcd\\n\";\r\nsystem (\"pause\");\r\n}', 1073, 51, 0, '2019-03-16 07:46:37', '2019-04-16 06:51:52'),
(308470, 469, '1358', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308471, 470, '1362', 1073, 51, 2, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308472, 475, '1385', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308473, 477, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{int i=1;\r\nint count=1;\r\nwhile(count>10)\r\n{\r\nif(i%2!=0){\r\ncout<<i<<endl;\r\n}\r\ncount++;\r\n}\r\nsystem(\"pause\");\r\n}', 1073, 51, 1, '2019-03-16 07:46:37', '2019-04-16 06:51:52'),
(308474, 478, '1389', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308475, 479, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\nint n,sum1,sum2;\r\ncout<<\"enter number\\n\";\r\ncin>>n;\r\nif((n<100&&n%2==0))\r\n{sum1+=sum;\r\ncout<<sum1;\r\n}\r\nelse\r\n{\r\nsum2+=sum;\r\ncout<<sum2;\r\n}\r\nsystem(\"pause\")\r\n}', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-24 11:14:18'),
(308476, 480, '1390', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-16 07:46:38'),
(308477, 481, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfor(int m=1;m<=n;i++;){\r\nfor(int i=1;i<=m;i++){\r\nfactorial*=i;\r\n}\r\ncout<<\"factorialof\"<<number<<\"=\"<<factorial<<endl;\r\n}\r\nsystem(\"pause\")\r\n}', 1073, 51, 0, '2019-03-16 07:46:37', '2019-03-24 11:14:18'),
(308488, 467, '1355', 1071, 51, 2, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308489, 468, '#include <iostream>\r\n using namespace std;\r\nint main()\r\n{\r\nint x , y;\r\ncout <<\"enter two numbers\";\r\ncin>>x>>y;\r\nif(x>y)\r\ncout<<\"gcd =\"<<x-y<<\"\\n\";\r\nelse\r\ncout<<\"gcd=\"<<y-x<<\"\\n\";\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 1071, 51, 0, '2019-03-16 07:47:29', '2019-04-16 06:52:43'),
(308490, 469, '1361', 1071, 51, 2, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308491, 470, '1365', 1071, 51, 0, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308492, 475, '1384', 1071, 51, 0, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308493, 477, 'int i=0;\r\nint count=0;\r\nwhile(count<10){\r\nif(count %2==0){\r\ncout<<count<<endl;\r\nelse\r\ncout<<count<<endl;\r\n}\r\n}', 1071, 51, 0, '2019-03-16 07:47:29', '2019-04-16 06:52:43'),
(308494, 478, '1386', 1071, 51, 1, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308495, 479, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint sumeven=0 , sumodd=0;\r\nfor(int i=1 ; i<100 ; i++)\r\n{\r\nif(i%2==0)\r\nsumeven=sumeven + i;\r\nelse\r\nsumodd = sumodd +i;\r\n}\r\ncout<<\"sumeven =\" <<sumeven;\r\ncout<<\"sumodd =\"<<sumodd; \r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 1071, 51, 2, '2019-03-16 07:47:29', '2019-03-24 11:15:05'),
(308496, 480, '1392', 1071, 51, 0, '2019-03-16 07:47:29', '2019-03-16 07:47:30'),
(308497, 481, 'int n;\r\nint fact=1;\r\ncout<<\"enter the number\";\r\ncin>>n;\r\nfor(int i=1 ; i<=n ; i++)\r\nfact = fact * i;\r\ncout<<\"factorial\"<<fact;', 1071, 51, 2, '2019-03-16 07:47:29', '2019-03-24 11:15:05'),
(308718, 467, '1354', 1075, 51, 0, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308719, 468, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\ncout<<\"enter two integer\";\r\ncin>>i>>j ;', 1075, 51, 0, '2019-03-16 08:05:46', '2019-04-16 06:53:14'),
(308720, 469, '1360', 1075, 51, 0, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308721, 470, '1364', 1075, 51, 0, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308722, 475, '1383', 1075, 51, 2, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308723, 477, '#include<iostream>\r\nusing namespace std;{\r\nint i =0;\r\nint count =1;\r\nwhile(count =<20){\r\nif(i%2 == 0){\r\ncout<<i<<endl;\r\ncount++;\r\n}}', 1075, 51, 0, '2019-03-16 08:05:46', '2019-04-16 06:53:14'),
(308724, 478, '1386', 1075, 51, 1, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308725, 479, '#include<iostream> \r\nusing namespace std;\r\nint main(){\r\nint sum1 , sum2 ;\r\n\r\nfor (int i=0 ; i<100 ;i++)\r\n{\r\nif (i%2==0)\r\nsum1+=i\r\ncout<<\"sum of even number=\"<<sum1;\r\nelse\r\nsum2+=i ;\r\ncout<<\"sum of odd number =\"<<sum2;\r\n}\r\nreturn0;\r\n}', 1075, 51, 0.5, '2019-03-16 08:05:46', '2019-03-24 11:15:59'),
(308726, 480, '1392', 1075, 51, 0, '2019-03-16 08:05:46', '2019-03-16 08:05:47'),
(308727, 481, '#inclode <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n , fact = 1;\r\ncout << \"enter integer number\'\' ;    cin>> n;\r\nfor(int i=1 ; i<=n ; i++)\r\n{fact*=i\r\ncout<<fact;\r\n}\r\nreturn0;\r\n}', 1075, 51, 1, '2019-03-16 08:05:46', '2019-03-24 11:15:32'),
(308778, 467, '1355', 1078, 51, 2, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308779, 468, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\n\r\n\r\n\r\n}', 1078, 51, 0, '2019-03-16 08:10:29', '2019-04-16 06:54:33'),
(308780, 469, '1360', 1078, 51, 0, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308781, 470, '1364', 1078, 51, 0, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308782, 475, '1383', 1078, 51, 2, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308783, 477, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint i=0;\r\nint count =0;\r\nwhile(count<=10){\r\nif(i%2!=0)\r\ncout<<i<<endl;\r\ncount++;\r\n}\r\n}', 1078, 51, 0, '2019-03-16 08:10:29', '2019-04-16 06:54:33'),
(308784, 478, '1386', 1078, 51, 1, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308785, 479, '#include <iostream>\r\nusing namespace std;\r\nvoid main(){\r\n int sum=0;\r\nfor(int i=0;i<100;i++)\r\nif(i%2==0)\r\nsum+=i;\r\ncout<<\"even numbers\"<<sum<<endl;\r\nelse\r\ncout<<\"odd numbers\"<<sum<<endl;\r\n}', 1078, 51, 0, '2019-03-16 08:10:29', '2019-03-24 11:16:25'),
(308786, 480, '1393', 1078, 51, 1, '2019-03-16 08:10:29', '2019-03-16 08:10:29'),
(308787, 481, '#include <iostream>\r\nusing namespace std;\r\nvoid main(){\r\nint p=1;int f=i;\r\nfor(int i=1;i<=n;i++)\r\nf=i*p;\r\ncout<<f;\r\n}', 1078, 51, 0, '2019-03-16 08:10:29', '2019-03-24 11:16:25'),
(308818, 467, '1354', 1076, 51, 0, '2019-03-16 08:10:52', '2019-03-16 08:10:53'),
(308819, 468, '#include <iostream> ;  \r\nusing namespace std ;\r\nint main(){\r\nfor(x)\r\ndouble x , y , z ;\r\ncout<<\"enter x\" ;\r\ncin>>x ;\r\ncout<<\"enter y\" ;\r\ncin>>y ;\r\nif (x > y ){\r\n\r\nz=(x%y);\r\n cout<<z;\r\nretuen(0)\r\n} \r\nelse\r\nz=y%z\r\ncout<<z ;\r\nreturn(0);\r\n}', 1076, 51, 0, '2019-03-16 08:10:52', '2019-04-16 06:54:56'),
(308820, 469, '1360', 1076, 51, 0, '2019-03-16 08:10:52', '2019-03-16 08:10:53'),
(308821, 470, '1363', 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-16 08:10:53'),
(308822, 475, '1385', 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-16 08:10:53'),
(308823, 477, 'int i=0 ;\r\nint count=0 ;\r\nwhile(count < 10){                                                                                                            \r\nif(i%2 != 0){\r\ncout<<i<<endl;\r\ncout++\r\n}\r\n}', 1076, 51, 0, '2019-03-16 08:10:53', '2019-04-16 06:54:56'),
(308824, 478, '1389', 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-16 08:10:53'),
(308825, 479, '#include <iostream> ;  \r\nusing namespace std ;\r\nint main(){\r\nint x , y ;\r\nint i =0;\r\nint count =0;\r\nwhile(count <100){\r\nif(i%2 == 0){\r\nx=i;\r\n}\r\nelse{\r\ny=i\r\n}\r\n}\r\ncount++;\r\n}\r\ncout<<x+y ;\r\nreturn(0);\r\n}', 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-24 11:17:07'),
(308826, 480, '1391', 1076, 51, 0, '2019-03-16 08:10:53', '2019-03-16 08:10:53'),
(308827, 481, 'for(x=1 , x<=n , x++ ) ;                                                                                                         \r\ncout<< f = f*x ;', 1076, 51, 1, '2019-03-16 08:10:53', '2019-03-24 11:17:07'),
(315649, 386, '1133', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315650, 387, '1135', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315651, 388, '1136', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315652, 389, '1138', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315653, 390, '1141', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315654, 391, '1142', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315655, 392, '1144', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315656, 393, '1146', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315657, 394, '1149', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315658, 395, '1151', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315659, 396, '1153', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315660, 397, '1154', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315661, 398, '1157', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315662, 399, '1158', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315663, 400, '1160', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315664, 401, '1162', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315665, 402, '1164', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315666, 403, '1166', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315667, 404, '1168', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315668, 405, '1171', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315669, 406, '1172', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315670, 407, '1175', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315671, 408, '1176', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315672, 409, '1178', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315673, 410, '1180', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315674, 411, '1182', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315675, 412, '1185', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315676, 413, '1187', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315677, 414, '1188', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315678, 415, '1190', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315679, 416, '1192', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315680, 417, '1196', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315681, 418, '1203', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315682, 419, '1207', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315683, 420, '1211', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315684, 421, '1212', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315685, 422, '1216', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315686, 423, '1220', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:36'),
(315687, 424, '1224', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315688, 425, '1229', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315689, 426, '1232', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315690, 427, '1236', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315691, 428, '1242', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315692, 429, '1244', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315693, 430, '1251', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315694, 431, '1255', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315695, 432, '1258', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315696, 433, '1262', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315697, 434, '1265', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315698, 435, '1270', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315699, 436, '1272', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315700, 437, '1279', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315701, 438, '1281', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315702, 439, '1284', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315703, 440, '1288', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315704, 441, '1292', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315705, 442, '1298', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315706, 443, '1303', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315707, 444, 'مفتوحة', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315708, 445, '6', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315709, 446, 'القدرة العضلية', 610, 50, 1, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315710, 447, 'وليم مورجان', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315711, 447, '1895', 610, 50, 0, '2019-03-20 07:52:35', '2019-03-20 07:52:37'),
(315712, 448, 'الضرب الساحق', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315713, 449, '8', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315714, 450, 'هجومى', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315715, 450, 'دفاعى', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315716, 451, 'التمرير', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315717, 452, NULL, 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315718, 453, 'الامر', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315719, 455, NULL, 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315720, 456, '2', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315721, 457, 'الوقوف', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315722, 457, 'الركبتين', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315723, 458, NULL, 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315724, 459, '1', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315725, 459, '2', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315726, 460, 'الحوض', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315727, 461, '224', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315728, 461, '243', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315729, 462, 'الليبرو', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315730, 463, '1', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315731, 463, '9.5', 610, 50, 0, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315732, 464, 'الارسال', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315733, 465, 'التعلم التعاونى', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(315734, 466, 'التمرير', 610, 50, 1, '2019-03-20 07:52:36', '2019-03-20 07:52:37'),
(322387, 386, '1133', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322388, 387, '1135', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322389, 388, '1136', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322390, 389, '1138', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322391, 390, '1140', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322392, 391, '1142', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322393, 392, '1145', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322394, 393, '1146', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322395, 394, '1148', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322396, 395, '1150', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322397, 396, '1153', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322398, 397, '1154', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:31'),
(322399, 398, '1157', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322400, 399, '1158', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322401, 400, '1160', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322402, 401, '1162', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322403, 402, '1164', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322404, 403, '1166', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322405, 404, '1168', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322406, 405, '1170', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322407, 406, '1172', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322408, 407, '1175', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322409, 408, '1177', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322410, 409, '1178', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322411, 410, '1180', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322412, 411, '1182', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322413, 412, '1184', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322414, 413, '1187', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322415, 414, '1189', 670, 50, 0, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322416, 415, '1190', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322417, 416, '1192', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322418, 417, '1196', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322419, 418, '1203', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322420, 419, '1207', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322421, 420, '1211', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322422, 421, '1212', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322423, 422, '1216', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322424, 423, '1220', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322425, 424, '1224', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322426, 425, '1229', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322427, 426, '1232', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322428, 427, '1236', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322429, 428, '1242', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322430, 429, '1244', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322431, 430, '1251', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322432, 431, '1255', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322433, 432, '1258', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322434, 433, '1262', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322435, 434, '1265', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322436, 435, '1270', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322437, 436, '1272', 670, 50, 1, '2019-03-20 08:10:30', '2019-03-20 08:10:32'),
(322438, 437, '1277', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322439, 438, '1281', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322440, 439, '1284', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322441, 440, '1288', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322442, 441, '1294', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322443, 442, '1299', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:32'),
(322444, 443, '1300', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322445, 444, 'مفتوحة', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322446, 445, '6', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322447, 446, 'القوة', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322448, 447, 'وليم مورجان', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322449, 447, '1895', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322450, 448, 'الارسال', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322451, 449, '8', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322452, 450, 'جماعى', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322453, 450, 'فردى', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322454, 451, 'التمرير', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322455, 452, 'الطالب', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322456, 453, 'الامر', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322457, 455, NULL, 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322458, 456, '2', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322459, 457, 'الوقوف', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322460, 457, 'الركبتين', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322461, 458, NULL, 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322462, 459, '1', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322463, 459, '2', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322464, 460, 'الحوض', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322465, 461, '224', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322466, 461, '234', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322467, 462, 'اللاعب', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322468, 463, '1', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322469, 463, '10', 670, 50, 0, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322470, 464, 'الارسال', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322471, 465, 'التعلم التعاونى', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(322472, 466, 'التمرير', 670, 50, 1, '2019-03-20 08:10:31', '2019-03-20 08:10:33'),
(328545, 386, '1133', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328546, 387, '1135', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328547, 388, '1136', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328548, 389, '1138', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328549, 390, '1140', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328550, 391, '1142', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328551, 392, '1144', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328552, 393, '1146', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328553, 394, '1148', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328554, 395, '1151', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328555, 396, '1153', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328556, 397, '1154', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328557, 398, '1157', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328558, 399, '1158', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328559, 400, '1160', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328560, 401, '1162', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:23'),
(328561, 402, '1164', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328562, 403, '1166', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328563, 404, '1168', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328564, 405, '1170', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328565, 406, '1172', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328566, 407, '1174', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328567, 409, '1179', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328568, 410, '1180', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328569, 411, '1182', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328570, 412, '1185', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328571, 413, '1187', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328572, 414, '1188', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328573, 415, '1190', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328574, 416, '1192', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328575, 417, '1196', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328576, 418, '1203', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328577, 419, '1207', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328578, 420, '1208', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328579, 421, '1212', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328580, 422, '1216', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328581, 423, '1220', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328582, 424, '1224', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328583, 425, '1229', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328584, 426, '1232', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328585, 427, '1236', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328586, 428, '1242', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328587, 429, '1244', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328588, 430, '1251', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328589, 431, '1255', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328590, 432, '1258', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328591, 433, '1262', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328592, 434, '1265', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328593, 435, '1270', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328594, 436, '1272', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328595, 437, '1278', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328596, 438, '1282', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328597, 439, '1284', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328598, 440, '1288', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328599, 441, '1294', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328600, 442, '1298', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328601, 443, '1300', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328602, 444, 'مفتوحة', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328603, 445, '6', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328604, 446, 'القوة', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328605, 447, 'وليم مورجان', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328606, 447, '1895', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328607, 448, 'الضرب الساحق', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328608, 449, '8', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328609, 450, 'هجومى', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:24'),
(328610, 450, 'دفاعى', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328611, 451, 'التمرير', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328612, 452, 'الطالب', 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328613, 453, 'الامر', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328614, 455, NULL, 738, 50, 0, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328615, 456, '2', 738, 50, 1, '2019-03-20 08:20:22', '2019-03-20 08:20:25'),
(328616, 457, 'الوقوف', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328617, 457, 'الركبتين', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328618, 458, NULL, 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328619, 459, '1', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328620, 459, '2', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328621, 460, 'الجذع', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328622, 461, '224', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328623, 461, '234', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328624, 462, 'الطلب', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328625, 463, '1                1', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328626, 463, '9.5', 738, 50, 0, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328627, 464, 'الارسال', 738, 50, 1, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328628, 465, 'التعلم التعاونى', 738, 50, 1, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(328629, 466, 'التمرير', 738, 50, 1, '2019-03-20 08:20:23', '2019-03-20 08:20:25'),
(339345, 386, '1132', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:00'),
(339346, 387, '1134', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:00'),
(339347, 388, '1137', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:00'),
(339348, 389, '1138', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:00'),
(339349, 390, '1140', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:00'),
(339350, 391, '1142', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339351, 392, '1144', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339352, 393, '1146', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339353, 394, '1148', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339354, 395, '1151', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339355, 396, '1152', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339356, 397, '1154', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339357, 398, '1156', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339358, 399, '1159', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339359, 400, '1160', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339360, 401, '1162', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339361, 402, '1164', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339362, 403, '1166', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339363, 404, '1168', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339364, 405, '1170', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339365, 406, '1173', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339366, 407, '1175', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339367, 408, '1176', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339368, 409, '1178', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339369, 410, '1180', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339370, 411, '1182', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339371, 412, '1185', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339372, 413, '1187', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339373, 414, '1188', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339374, 415, '1190', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339375, 416, '1192', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339376, 417, '1196', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339377, 418, '1203', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339378, 419, '1204', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339379, 420, '1211', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339380, 421, '1212', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339381, 422, '1216', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339382, 423, '1220', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339383, 424, '1224', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339384, 425, '1229', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339385, 426, '1232', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339386, 427, '1236', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339387, 428, '1242', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339388, 429, '1244', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339389, 430, '1251', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339390, 431, '1255', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339391, 432, '1258', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339392, 433, '1262', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339393, 434, '1265', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339394, 435, '1270', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339395, 436, '1273', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339396, 437, '1278', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339397, 438, '1281', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339398, 439, '1284', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339399, 440, '1289', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339400, 441, '1295', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339401, 442, '1298', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339402, 443, '1301', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339403, 444, 'مفتوحة أو مجوفة', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339404, 445, '6', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339405, 446, 'القدرة العضلية', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339406, 447, 'وليم مرجان', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339407, 447, '1895', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339408, 448, 'الضرب الساحق', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339409, 449, '2', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:01'),
(339410, 450, 'هجومى', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339411, 450, 'دفاعى', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339412, 451, 'التمرير', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339413, 452, 'الطالب المؤدى', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339414, 453, 'الامر', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339415, 455, 'المرسل', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339416, 456, '2', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339417, 457, 'الوقوف', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339418, 457, 'الركبتين', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339419, 458, 'فنجان', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339420, 459, '1', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339421, 459, '2', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339422, 460, 'الحوض', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339423, 461, '2.24', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339424, 461, '2.43', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339425, 462, 'المعد', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339426, 463, '1', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339427, 463, '9.5', 698, 50, 0, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339428, 464, 'الارسال', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339429, 465, 'التعلم التعاونى', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(339430, 466, 'التمرير', 698, 50, 1, '2019-03-20 09:32:00', '2019-03-20 09:32:02'),
(342871, 386, '1133', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:44'),
(342872, 387, '1135', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:44'),
(342873, 388, '1136', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:44'),
(342874, 389, '1138', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342875, 390, '1140', 649, 50, 0, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342876, 391, '1142', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342877, 392, '1144', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342878, 393, '1146', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342879, 394, '1149', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342880, 395, '1151', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342881, 396, '1153', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342882, 397, '1154', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342883, 398, '1157', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342884, 399, '1158', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342885, 400, '1160', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342886, 401, '1162', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342887, 402, '1164', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342888, 403, '1166', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342889, 404, '1168', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342890, 405, '1171', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342891, 406, '1172', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342892, 407, '1175', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342893, 408, '1176', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342894, 409, '1178', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342895, 410, '1180', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342896, 411, '1182', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342897, 412, '1185', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342898, 413, '1187', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342899, 414, '1188', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342900, 415, '1190', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342901, 416, '1192', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342902, 417, '1196', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342903, 418, '1203', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342904, 419, '1207', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342905, 420, '1211', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342906, 421, '1212', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342907, 422, '1216', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342908, 423, '1220', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342909, 424, '1224', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342910, 425, '1229', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342911, 426, '1232', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342912, 427, '1236', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342913, 428, '1242', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342914, 429, '1244', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342915, 430, '1251', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342916, 431, '1255', 649, 50, 1, '2019-03-20 09:44:43', '2019-03-20 09:44:45'),
(342917, 432, '1258', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:45'),
(342918, 433, '1262', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:45'),
(342919, 434, '1265', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:45'),
(342920, 435, '1270', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:45'),
(342921, 436, '1272', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:45'),
(342922, 437, '1279', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342923, 438, '1282', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342924, 439, '1284', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342925, 440, '1288', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342926, 441, '1294', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342927, 442, '1299', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342928, 443, '1303', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342929, 444, 'مفتوحة او مجوفة', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342930, 445, '6', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342931, 446, 'القدرة العضلية', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342932, 447, 'وليم مورجان', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342933, 447, '1895', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342934, 448, 'الاعداد', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342935, 449, '8', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342936, 450, 'هجومي', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342937, 450, 'دفاعي', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342938, 451, 'الاعداد', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342939, 452, 'الطالب المودي', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342940, 453, 'الامر', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342941, 455, 'الارسال', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342942, 456, '2', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342943, 457, 'الاستعداد', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342944, 457, 'الذرعين', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342945, 458, 'فنجال', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342946, 459, '1', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342947, 459, '2', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342948, 460, 'الحوض', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342949, 461, '2.24', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342950, 461, '2.43', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342951, 462, 'المعد', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342952, 463, '1', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342953, 463, '9', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342954, 464, 'الارسال', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342955, 465, 'التعاوني', 649, 50, 0, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(342956, 466, 'التمرير', 649, 50, 1, '2019-03-20 09:44:44', '2019-03-20 09:44:46'),
(349529, 386, '1133', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349530, 387, '1135', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349531, 388, '1136', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349532, 389, '1138', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349533, 390, '1141', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349534, 391, '1142', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349535, 392, '1144', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:00'),
(349536, 393, '1146', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349537, 394, '1149', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349538, 395, '1151', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349539, 396, '1153', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349540, 397, '1154', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349541, 398, '1157', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349542, 399, '1158', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349543, 400, '1160', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349544, 401, '1162', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349545, 402, '1164', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349546, 403, '1166', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349547, 404, '1168', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349548, 405, '1171', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349549, 406, '1172', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349550, 407, '1175', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349551, 408, '1176', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349552, 409, '1178', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349553, 410, '1180', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349554, 411, '1182', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349555, 412, '1185', 704, 50, 1, '2019-03-20 10:04:59', '2019-03-20 10:05:01'),
(349556, 413, '1187', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349557, 414, '1188', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349558, 415, '1190', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349559, 416, '1192', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349560, 417, '1196', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349561, 418, '1203', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349562, 419, '1207', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349563, 420, '1211', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349564, 421, '1212', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349565, 422, '1216', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349566, 423, '1220', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349567, 424, '1224', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349568, 425, '1229', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349569, 426, '1232', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349570, 427, '1236', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349571, 428, '1242', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349572, 429, '1244', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349573, 430, '1251', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349574, 431, '1255', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349575, 432, '1258', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349576, 433, '1262', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349577, 434, '1265', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349578, 435, '1270', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349579, 436, '1272', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349580, 437, '1279', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349581, 438, '1281', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349582, 439, '1284', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349583, 440, '1288', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349584, 441, '1292', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(349585, 442, '1298', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349586, 443, '1303', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349587, 444, 'مفتوحه او مجوفه', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349588, 445, '6', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349589, 446, 'القدرة العضليه', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349590, 447, 'وليم مورجان', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349591, 447, '1895', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349592, 448, 'الضرب الساحق', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349593, 449, '8', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349594, 450, 'هجومي', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349595, 450, 'دفاعي', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349596, 451, 'التمرير', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349597, 452, 'الطالب المودي', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349598, 453, 'الامر', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349599, 455, 'المتعلم', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349600, 456, '2', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349601, 457, 'الاستعداد', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349602, 457, 'الذرعين', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349603, 458, 'فنجان', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349604, 459, '1', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:01'),
(349605, 459, '2', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349606, 460, 'الحوض', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349607, 461, '224', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349608, 461, '2.43', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349609, 462, 'المعد', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349610, 463, '1', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349611, 463, '9.5', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349612, 464, 'الارسال', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349613, 465, 'التعلم التعاوني', 704, 50, 0, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(349614, 466, 'التمرير', 704, 50, 1, '2019-03-20 10:05:00', '2019-03-20 10:05:02'),
(355444, 386, '1133', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355445, 387, '1134', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355446, 388, '1136', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355447, 389, '1138', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355448, 390, '1140', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355449, 391, '1142', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355450, 392, '1144', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:09'),
(355451, 393, '1147', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355452, 394, '1148', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355453, 395, '1151', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355454, 396, '1153', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355455, 397, '1154', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355456, 398, '1156', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355457, 399, '1158', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355458, 400, '1160', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355459, 401, '1162', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355460, 402, '1164', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355461, 403, '1166', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355462, 404, '1168', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355463, 405, '1171', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355464, 406, '1172', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355465, 407, '1175', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355466, 408, '1176', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355467, 409, '1178', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355468, 410, '1180', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355469, 411, '1182', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355470, 412, '1184', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355471, 413, '1186', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355472, 414, '1188', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355473, 415, '1190', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355474, 416, '1192', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355475, 417, '1196', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355476, 418, '1203', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355477, 419, '1207', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355478, 420, '1211', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355479, 421, '1212', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355480, 422, '1216', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355481, 423, '1220', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355482, 424, '1224', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355483, 425, '1229', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355484, 426, '1232', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355485, 427, '1236', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355486, 428, '1242', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355487, 429, '1244', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355488, 430, '1251', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355489, 431, '1253', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355490, 432, '1257', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355491, 433, '1261', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355492, 434, '1266', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355493, 435, '1269', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355494, 436, '1272', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355495, 437, '1276', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355496, 438, '1280', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355497, 439, '1284', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355498, 440, '1288', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355499, 441, '1294', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355500, 442, '1299', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355501, 443, '1300', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355502, 444, 'مفتوحة', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355503, 445, '6', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355504, 446, 'القوة العضلية', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355505, 447, 'وليم مورجان', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355506, 447, '1895', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355507, 448, 'الارسال', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355508, 449, '8', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355509, 450, 'هجومى', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355510, 450, 'دفاعى', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:10'),
(355511, 451, 'التمرير', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355512, 452, 'الطالب', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355513, 453, 'الامر', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355514, 455, 'المتعلم', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355515, 456, '2', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355516, 457, 'الوقوف', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355517, 457, 'الركبتين', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355518, 458, 'w', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355519, 459, '1', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355520, 459, '2', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355521, 460, 'الحوض', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355522, 461, '224', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355523, 461, '243', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355524, 462, 'المعد', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355525, 463, '1', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355526, 463, '9.5', 648, 50, 0, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355527, 464, 'الارسال', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355528, 465, 'التعلم التعاونى', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(355529, 466, 'التمرير', 648, 50, 1, '2019-03-21 08:51:09', '2019-03-21 08:51:11'),
(361467, 386, '1133', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361468, 387, '1134', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361469, 388, '1136', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361470, 389, '1138', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361471, 390, '1141', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361472, 391, '1142', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361473, 392, '1144', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361474, 393, '1146', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361475, 394, '1149', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361476, 395, '1151', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361477, 396, '1153', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361478, 397, '1154', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361479, 398, '1156', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361480, 399, '1158', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361481, 400, '1160', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361482, 401, '1162', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361483, 402, '1164', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361484, 403, '1166', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361485, 404, '1168', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361486, 405, '1170', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361487, 406, '1172', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361488, 407, '1174', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361489, 408, '1176', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361490, 409, '1178', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361491, 410, '1180', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361492, 411, '1182', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361493, 412, '1185', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361494, 413, '1186', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361495, 414, '1188', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361496, 415, '1190', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361497, 416, '1192', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361498, 417, '1196', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361499, 418, '1203', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361500, 419, '1207', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361501, 420, '1211', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361502, 421, '1212', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361503, 422, '1216', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361504, 423, '1220', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361505, 424, '1224', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361506, 425, '1231', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361507, 426, '1232', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361508, 427, '1236', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361509, 428, '1240', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361510, 429, '1244', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361511, 430, '1251', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361512, 431, '1255', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361513, 432, '1259', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361514, 433, '1262', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361515, 434, '1265', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361516, 435, '1269', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361517, 436, '1272', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361518, 437, '1279', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361519, 438, '1281', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361520, 439, '1284', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361521, 440, '1288', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361522, 441, '1294', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361523, 442, '1298', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361524, 443, '1300', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361525, 444, 'مجوفة', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:39'),
(361526, 445, '6', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361527, 446, 'القدرة العضلية', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361528, 447, 'وليم مورجان', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361529, 447, '1895', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361530, 448, 'الضرب الساحق', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361531, 449, '8', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361532, 450, 'جماعى', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361533, 450, 'فردى', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361534, 451, 'التمرير', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361535, 452, 'الطالب', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361536, 453, 'الامر', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361537, 455, 'المتعلم', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361538, 456, '2', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361539, 457, 'الوقوف', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361540, 457, 'الركبتين', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361541, 458, 'w', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361542, 459, '1', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361543, 459, '2', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361544, 460, 'الحوض', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361545, 461, '224', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361546, 461, '234', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361547, 462, 'الليبرو', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361548, 463, '1', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361549, 463, '9.5', 741, 50, 0, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361550, 464, 'الارسال', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361551, 465, 'التعلم التعاونى', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(361552, 466, 'التمرير', 741, 50, 1, '2019-03-21 09:17:38', '2019-03-21 09:17:40'),
(376925, 386, '1132', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376926, 387, '1135', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376927, 388, '1136', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376928, 389, '1138', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376929, 390, '1141', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376930, 391, '1142', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376931, 392, '1144', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376932, 393, '1147', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376933, 394, '1149', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376934, 395, '1151', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376935, 396, '1152', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376936, 397, '1154', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376937, 398, '1156', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376938, 399, '1158', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376939, 400, '1160', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376940, 401, '1162', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376941, 402, '1164', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376942, 403, '1166', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376943, 404, '1168', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376944, 405, '1171', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376945, 406, '1173', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376946, 407, '1175', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376947, 408, '1176', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376948, 409, '1178', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376949, 410, '1180', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376950, 411, '1182', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376951, 412, '1184', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376952, 413, '1186', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376953, 414, '1188', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376954, 415, '1190', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:21'),
(376955, 416, '1192', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376956, 417, '1196', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376957, 418, '1202', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376958, 419, '1204', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376959, 420, '1211', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376960, 421, '1212', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376961, 422, '1216', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376962, 423, '1220', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376963, 424, '1226', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376964, 425, '1229', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376965, 426, '1232', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376966, 427, '1236', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376967, 428, '1242', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376968, 429, '1246', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376969, 430, '1251', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376970, 431, '1254', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376971, 432, '1258', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376972, 433, '1262', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376973, 434, '1265', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376974, 435, '1269', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376975, 436, '1272', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376976, 437, '1276', 588, 50, 0, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376977, 438, '1280', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376978, 439, '1284', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376979, 440, '1288', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376980, 441, '1294', 588, 50, 1, '2019-03-21 09:49:20', '2019-03-21 09:49:22'),
(376981, 442, '1297', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376982, 443, '1300', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376983, 444, 'مفتوحة ومضمومة', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376984, 445, '6', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376985, 446, 'القدرة العضلية', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376986, 447, 'وليام مورجان', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376987, 447, '1895', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376988, 448, 'الضرب الساحق', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376989, 449, '8', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376990, 450, 'دفاعى', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376991, 450, 'هجومى', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376992, 451, 'الاعداد', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376993, 452, 'الطالب المؤدى', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376994, 453, 'الامر', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376995, 455, 'المتعلم', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376996, 456, '2', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376997, 457, 'الوقوف', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376998, 457, 'الركبتين', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(376999, 458, 'فنجان', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377000, 459, '1', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377001, 459, '2', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377002, 460, 'الحوض', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377003, 461, '224', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377004, 461, '243', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377005, 462, 'المعد', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377006, 463, '1', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377007, 463, '9ونص', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377008, 464, 'الارسال', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377009, 465, '2', 588, 50, 0, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377010, 466, 'التمرير', 588, 50, 1, '2019-03-21 09:49:21', '2019-03-21 09:49:22'),
(377011, 386, '1132', 582, 50, 0, '2019-03-21 09:49:52', '2019-03-21 09:49:54'),
(377012, 387, '1134', 582, 50, 0, '2019-03-21 09:49:52', '2019-03-21 09:49:54'),
(377013, 388, '1137', 582, 50, 0, '2019-03-21 09:49:52', '2019-03-21 09:49:54'),
(377014, 389, '1139', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377015, 390, '1141', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377016, 391, '1142', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377017, 392, '1144', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377018, 393, '1146', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377019, 394, '1149', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377020, 395, '1151', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377021, 396, '1152', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377022, 397, '1155', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377023, 398, '1156', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377024, 399, '1158', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377025, 400, '1160', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377026, 401, '1162', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377027, 402, '1164', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377028, 403, '1166', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377029, 404, '1168', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377030, 405, '1171', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377031, 406, '1172', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377032, 407, '1175', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377033, 408, '1176', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:54'),
(377034, 409, '1179', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377035, 410, '1180', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377036, 411, '1182', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377037, 412, '1184', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377038, 413, '1186', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377039, 414, '1189', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377040, 415, '1190', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377041, 416, '1192', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377042, 417, '1196', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377043, 418, '1203', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377044, 419, '1204', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377045, 420, '1211', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377046, 421, '1212', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377047, 422, '1216', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377048, 423, '1220', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377049, 424, '1224', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377050, 425, '1229', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377051, 426, '1232', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377052, 427, '1236', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377053, 428, '1243', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377054, 429, '1244', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377055, 430, '1251', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377056, 431, '1255', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377057, 432, '1258', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377058, 433, '1262', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377059, 434, '1265', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377060, 435, '1271', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377061, 436, '1272', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377062, 437, '1279', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377063, 438, '1280', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377064, 439, '1284', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377065, 440, '1288', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377066, 441, '1294', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377067, 442, '1297', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377068, 443, '1300', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377069, 444, 'او مجوفة                          مفتوحة', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377070, 445, '6', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377071, 446, 'القدرة العضلية', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377072, 447, 'وليم مورجان', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377073, 447, '1895', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377074, 448, 'الضرب الساحق                       الضرب الساحق', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377075, 449, '8', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377076, 450, 'هجومى', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377077, 450, 'دفاعى', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377078, 451, 'التمرير', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377079, 452, 'الطالب المودى', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377080, 453, 'الامر', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377081, 455, 'المتعلم', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377082, 456, '2', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377083, 457, 'الوقوف', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377084, 457, 'الركبتين', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377085, 458, 'فنجان', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377086, 459, '1', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377087, 459, '2', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377088, 460, 'الحوض', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377089, 461, '224', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377090, 461, '243', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377091, 462, 'المعد', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377092, 463, '1', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:55'),
(377093, 463, '9.5', 582, 50, 0, '2019-03-21 09:49:53', '2019-03-21 09:49:56'),
(377094, 464, 'الارسال', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:56'),
(377095, 465, 'التعلم التعاونى', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:56'),
(377096, 466, 'التمرير', 582, 50, 1, '2019-03-21 09:49:53', '2019-03-21 09:49:56'),
(388664, 386, '1133', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388665, 387, '1135', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388666, 388, '1136', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388667, 389, '1138', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388668, 390, '1140', 574, 50, 0, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388669, 391, '1142', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388670, 392, '1144', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388671, 393, '1146', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388672, 394, '1148', 574, 50, 0, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388673, 395, '1151', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388674, 396, '1153', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388675, 397, '1154', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388676, 398, '1157', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388677, 399, '1158', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388678, 400, '1160', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388679, 401, '1162', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:19'),
(388680, 402, '1164', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388681, 403, '1167', 574, 50, 0, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388682, 404, '1168', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388683, 405, '1171', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388684, 406, '1172', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388685, 407, '1175', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388686, 408, '1176', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388687, 409, '1178', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388688, 410, '1180', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388689, 411, '1183', 574, 50, 0, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388690, 412, '1185', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388691, 413, '1186', 574, 50, 0, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388692, 414, '1188', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388693, 415, '1190', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388694, 416, '1192', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388695, 417, '1196', 574, 50, 1, '2019-03-24 09:00:18', '2019-03-24 09:00:20'),
(388696, 418, '1203', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388697, 419, '1207', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388698, 420, '1211', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388699, 421, '1212', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388700, 422, '1216', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388701, 423, '1220', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388702, 424, '1224', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388703, 425, '1229', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388704, 426, '1232', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388705, 427, '1236', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388706, 428, '1242', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388707, 429, '1245', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388708, 430, '1251', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388709, 431, '1255', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388710, 432, '1258', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388711, 433, '1262', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388712, 436, '1272', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388713, 437, '1279', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388714, 438, '1281', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388715, 439, '1284', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388716, 440, '1288', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388717, 441, '1294', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388718, 442, '1298', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388719, 443, '1300', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388720, 444, 'مفتوحةأو مجوفة', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388721, 445, '6', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388722, 446, 'القدرة العضلية', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388723, 447, 'وليم مورجان', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388724, 447, '1895', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388725, 448, 'الضرب الساحق', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388726, 449, '8', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388727, 450, 'جماعى', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388728, 450, 'فردو', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388729, 451, 'التمرير', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388730, 452, 'الطالب', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:20'),
(388731, 453, 'الامر', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388732, 455, 'المتعلم', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388733, 456, '4', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388734, 457, 'الوقوف', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388735, 457, 'الركبتين', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388736, 458, 'w', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388737, 459, '1', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388738, 459, '2', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388739, 460, 'الحوض', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388740, 461, '224', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388741, 461, '234', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388742, 462, 'الليبرو', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388743, 463, '1', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388744, 463, '9.5', 574, 50, 0, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388745, 464, 'الارسال', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388746, 465, 'التعلم التعاونى', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(388747, 466, 'التمرير', 574, 50, 1, '2019-03-24 09:00:19', '2019-03-24 09:00:21'),
(389350, 386, '1133', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389351, 387, '1135', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389352, 388, '1136', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389353, 389, '1138', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389354, 390, '1141', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389355, 391, '1142', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389356, 392, '1144', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389357, 393, '1146', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389358, 394, '1149', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389359, 395, '1151', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389360, 396, '1153', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389361, 397, '1155', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389362, 398, '1157', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389363, 399, '1158', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389364, 400, '1160', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389365, 401, '1162', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389366, 402, '1164', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389367, 403, '1166', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389368, 404, '1168', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389369, 405, '1170', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389370, 406, '1172', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389371, 407, '1175', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389372, 408, '1176', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389373, 409, '1178', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389374, 410, '1180', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389375, 411, '1182', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389376, 412, '1185', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389377, 413, '1187', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389378, 414, '1188', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389379, 415, '1190', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389380, 416, '1192', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389381, 417, '1196', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389382, 418, '1203', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389383, 419, '1207', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389384, 420, '1211', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389385, 421, '1212', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389386, 422, '1216', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389387, 423, '1220', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389388, 424, '1224', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389389, 425, '1229', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389390, 426, '1232', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389391, 427, '1236', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389392, 428, '1242', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389393, 429, '1244', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389394, 430, '1251', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389395, 431, '1255', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389396, 432, '1258', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389397, 433, '1262', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389398, 434, '1265', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:40'),
(389399, 435, '1270', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389400, 436, '1272', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389401, 437, '1279', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389402, 438, '1281', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389403, 439, '1284', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389404, 440, '1288', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389405, 441, '1292', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389406, 442, '1297', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389407, 443, '1303', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389408, 444, 'مفتوحة أو مجوفة', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389409, 445, '6', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389410, 446, 'القدرة العضلية', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389411, 447, 'وليم مورجان', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389412, 447, '1895', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389413, 448, 'الضرب الساحق', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389414, 449, '8', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389415, 450, 'هجومي', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389416, 450, 'دفاعي', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389417, 451, 'التمرير', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389418, 452, 'الطالب المودي', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389419, 453, 'الامر', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389420, 455, 'المتعلم', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389421, 456, '2', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389422, 457, 'الوقوف', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389423, 457, 'الركبة', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389424, 458, 'فنجان', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389425, 459, '1', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389426, 459, '2', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389427, 460, 'الحوض', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389428, 461, '224', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389429, 461, '243', 573, 50, 0, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389430, 462, 'المعد', 573, 50, 1, '2019-03-24 09:02:39', '2019-03-24 09:02:41'),
(389431, 463, '1', 573, 50, 0, '2019-03-24 09:02:40', '2019-03-24 09:02:41'),
(389432, 463, '9.5', 573, 50, 0, '2019-03-24 09:02:40', '2019-03-24 09:02:41'),
(389433, 464, 'الأرسال', 573, 50, 0, '2019-03-24 09:02:40', '2019-03-24 09:02:41'),
(389434, 465, 'التعلم التعاوني', 573, 50, 0, '2019-03-24 09:02:40', '2019-03-24 09:02:41'),
(389435, 466, 'التمرير', 573, 50, 1, '2019-03-24 09:02:40', '2019-03-24 09:02:41'),
(398935, 386, '1133', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398936, 387, '1135', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398937, 388, '1136', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398938, 389, '1138', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398939, 390, '1140', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398940, 391, '1142', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398941, 392, '1144', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398942, 393, '1147', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398943, 394, '1149', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398944, 395, '1151', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398945, 396, '1153', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398946, 397, '1154', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398947, 398, '1157', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398948, 399, '1158', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398949, 400, '1160', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398950, 401, '1163', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:27'),
(398951, 402, '1164', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398952, 403, '1166', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398953, 404, '1168', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398954, 405, '1171', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398955, 406, '1173', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398956, 407, '1175', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398957, 408, '1176', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398958, 409, '1179', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398959, 410, '1180', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398960, 411, '1182', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398961, 412, '1185', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398962, 413, '1186', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398963, 414, '1188', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398964, 415, '1190', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398965, 416, '1195', 581, 50, 0, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398966, 417, '1196', 581, 50, 1, '2019-03-24 09:11:26', '2019-03-24 09:11:28'),
(398967, 418, '1203', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398968, 419, '1207', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398969, 420, '1211', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398970, 421, '1212', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398971, 422, '1216', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398972, 423, '1220', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398973, 424, '1224', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398974, 425, '1229', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398975, 426, '1232', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398976, 427, '1236', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398977, 428, '1242', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398978, 429, '1244', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398979, 430, '1251', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398980, 431, '1255', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398981, 432, '1259', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398982, 433, '1262', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398983, 434, '1266', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398984, 435, '1270', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398985, 436, '1272', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398986, 437, '1279', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398987, 438, '1281', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398988, 439, '1284', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398989, 440, '1288', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398990, 441, '1294', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398991, 442, '1298', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398992, 443, '1300', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398993, 444, 'مفتوحةأو مجوفة', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398994, 445, '6', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398995, 446, 'القوة', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398996, 447, 'وليم مورجان', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398997, 447, '1985', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398998, 448, 'الارسال', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(398999, 449, '8', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:28'),
(399000, 450, 'هجومى', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399001, 450, 'دفاعى', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399002, 451, 'التمرير', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399003, 452, 'الطالب', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399004, 453, 'الامر', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399005, 455, 'المتعلم', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399006, 456, '2', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399007, 457, 'الوقوف', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399008, 457, 'الذراعين', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399009, 458, 'w', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399010, 459, '1', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399011, 459, '2', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399012, 460, 'الحوض', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399013, 461, '224', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399014, 461, '234', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399015, 462, 'المعد', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(399016, 463, '1', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399017, 463, '10', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399018, 464, 'الارسال', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399019, 465, 'التعاونى', 581, 50, 0, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(399020, 466, 'التمرير', 581, 50, 1, '2019-03-24 09:11:27', '2019-03-24 09:11:29'),
(401945, 386, '1133', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401947, 387, '1135', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401949, 388, '1136', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401951, 389, '1138', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401953, 390, '1141', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401955, 391, '1142', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401957, 392, '1144', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401959, 393, '1146', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401961, 394, '1149', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401963, 395, '1151', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401965, 396, '1153', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401967, 397, '1154', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401969, 398, '1157', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401971, 399, '1158', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401973, 400, '1160', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401975, 401, '1162', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401977, 402, '1164', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401978, 403, '1166', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401979, 404, '1168', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401980, 405, '1171', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401981, 406, '1172', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:06'),
(401982, 407, '1174', 580, 50, 0, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401983, 408, '1176', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401984, 409, '1178', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401985, 410, '1180', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401986, 411, '1182', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401987, 412, '1185', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401988, 413, '1187', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401989, 414, '1188', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401990, 415, '1190', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401991, 416, '1192', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401992, 417, '1196', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401993, 418, '1203', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401994, 419, '1207', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401995, 420, '1211', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401996, 421, '1212', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401997, 422, '1216', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401998, 423, '1220', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(401999, 424, '1224', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402000, 425, '1229', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402001, 426, '1232', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402002, 427, '1236', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402003, 428, '1242', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402004, 429, '1244', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402005, 430, '1251', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402006, 431, '1255', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402007, 432, '1258', 580, 50, 1, '2019-03-24 09:16:05', '2019-03-24 09:16:07'),
(402008, 433, '1262', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402009, 434, '1265', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402010, 435, '1270', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402011, 436, '1272', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402012, 437, '1279', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402013, 438, '1281', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402014, 439, '1284', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402015, 440, '1288', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402016, 441, '1292', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402017, 442, '1298', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402018, 443, '1303', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402019, 444, 'مفتوحة او مجوفة', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402020, 445, '6', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402021, 446, 'القدرة العضلية', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402022, 447, 'وليم مورجان', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402023, 447, '1895', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402024, 448, 'الضرب الساحق', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402025, 449, '8', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402026, 450, 'هجومي', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402027, 450, 'دفاعي', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402028, 451, 'التمرير', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402029, 452, 'الطالب المودي', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402030, 453, 'الامر', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402031, 455, 'المتعلم', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402032, 456, '2', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402033, 457, 'الوقوف', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402034, 457, 'الركبة', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402035, 458, 'فنجان', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402036, 459, '1', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:07'),
(402037, 459, '2', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402038, 460, 'الحوض', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402039, 461, '224', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402040, 461, '243', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402041, 462, 'المعد', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402042, 463, '1', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402043, 463, '9.5', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402044, 464, 'الارسال', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402045, 465, 'التعلم التعاوني', 580, 50, 0, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(402046, 466, 'التمرير', 580, 50, 1, '2019-03-24 09:16:06', '2019-03-24 09:16:08'),
(412656, 386, '1132', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412657, 387, '1134', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412658, 388, '1136', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412659, 389, '1138', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412660, 390, '1141', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412661, 391, '1142', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412662, 392, '1144', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412663, 393, '1146', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412664, 394, '1149', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412665, 395, '1151', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412666, 396, '1152', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412667, 397, '1154', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412668, 398, '1157', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412669, 399, '1158', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412670, 400, '1160', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:43'),
(412671, 401, '1162', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412672, 402, '1164', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412673, 403, '1167', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412674, 404, '1168', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412675, 405, '1171', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412676, 406, '1172', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412677, 407, '1175', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412678, 408, '1176', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412679, 409, '1178', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412680, 410, '1181', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412681, 411, '1182', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412682, 412, '1184', 707, 50, 0, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412683, 413, '1187', 707, 50, 1, '2019-03-25 09:10:42', '2019-03-25 09:10:44'),
(412684, 414, '1188', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412685, 415, '1190', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412686, 416, '1192', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412687, 417, '1196', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412688, 418, '1203', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412689, 419, '1207', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412690, 420, '1208', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412691, 421, '1212', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412692, 422, '1216', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412693, 423, '1220', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412694, 424, '1225', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412695, 425, '1231', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412696, 426, '1232', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412697, 427, '1236', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412698, 428, '1242', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412699, 429, '1244', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412700, 430, '1251', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412701, 431, '1253', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412702, 432, '1259', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412703, 433, '1261', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412704, 434, '1265', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412705, 437, '1279', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412706, 438, '1282', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412707, 439, '1284', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412708, 440, '1288', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412709, 441, '1295', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412710, 442, '1297', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412711, 443, '1300', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412712, 444, 'مفتوحة', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412713, 445, '6', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412714, 446, 'الرشاقة', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412715, 447, 'وليم مورجان', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412716, 447, '1895', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412717, 448, 'الضرب الساحق', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412718, 449, '8', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412719, 450, 'هجومى', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412720, 450, 'دفاعى', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412721, 451, 'التمرير', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412722, 452, 'الطالب', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412723, 453, 'الامر', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412724, 455, 'المتعلم', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412725, 456, '2', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412726, 457, 'الوقوف', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412727, 457, 'الركبتين', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412728, 458, 'w', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412729, 459, '1', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412730, 459, '2', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412731, 460, 'الحوض', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412732, 461, '224', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412733, 461, '234', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412734, 462, NULL, 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412735, 463, '9.5', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412736, 463, '1', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412737, 464, 'الارسال', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412738, 465, 'االتعلم التعاونى', 707, 50, 0, '2019-03-25 09:10:43', '2019-03-25 09:10:44'),
(412739, 466, 'التمرير', 707, 50, 1, '2019-03-25 09:10:43', '2019-03-25 09:10:45'),
(415205, 386, '1133', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415206, 387, '1135', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415207, 388, '1136', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415208, 389, '1138', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415209, 390, '1141', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415210, 391, '1142', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415211, 392, '1144', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415212, 393, '1146', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415213, 394, '1149', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:38'),
(415214, 395, '1151', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415215, 396, '1153', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415216, 397, '1154', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415217, 398, '1157', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415218, 399, '1158', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415219, 400, '1160', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415220, 401, '1162', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415221, 402, '1164', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415222, 403, '1166', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415223, 404, '1168', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415224, 405, '1171', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415225, 406, '1172', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415226, 407, '1175', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415227, 408, '1176', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415228, 409, '1178', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415229, 410, '1180', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415230, 411, '1182', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415231, 412, '1185', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415232, 413, '1187', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415233, 414, '1188', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415234, 415, '1190', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415235, 416, '1192', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415236, 417, '1196', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415237, 418, '1203', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415238, 419, '1207', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415239, 420, '1211', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415240, 421, '1212', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415241, 422, '1216', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415242, 423, '1220', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415243, 424, '1224', 708, 50, 1, '2019-03-25 09:15:37', '2019-03-25 09:15:39'),
(415244, 425, '1229', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415245, 426, '1232', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415246, 427, '1236', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415247, 428, '1242', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415248, 429, '1244', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415249, 430, '1251', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415250, 431, '1255', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415251, 432, '1258', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415252, 433, '1262', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415253, 434, '1265', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415254, 435, '1270', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415255, 436, '1272', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:39'),
(415256, 437, '1279', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415257, 438, '1281', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415258, 439, '1284', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415259, 440, '1288', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415260, 441, '1292', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415261, 442, '1298', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415262, 444, 'مفتوحة', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415263, 445, '6', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415264, 446, 'القدرة العضلية', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415265, 447, '1895', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415266, 447, 'وليم مورجان', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415267, 448, 'الضرب الساحق', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415268, 449, '8', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415269, 450, 'دفاعى', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415270, 450, 'هجومى', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415271, 451, 'التمرير', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415272, 452, 'الطالب', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415273, 453, 'الامر', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415274, 455, 'المتعلم', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415275, 456, '2', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415276, 457, 'الذراعين', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415277, 457, 'الوقوف', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415278, 458, 'w', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415279, 459, '2', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415280, 459, '1', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415281, 460, 'الحوض', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415282, 461, '234', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415283, 461, '224', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415284, 462, 'الليبرو', 708, 50, 0, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415285, 463, '9.5', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415286, 463, '1', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415287, 464, 'الارسال', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415288, 465, 'التعلم التعاونى', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(415289, 466, 'التمرير', 708, 50, 1, '2019-03-25 09:15:38', '2019-03-25 09:15:40'),
(421415, 386, '1133', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421416, 387, '1135', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421417, 388, '1136', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421418, 389, '1139', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421419, 390, '1141', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421420, 391, '1142', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421421, 392, '1144', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421422, 393, '1146', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421423, 394, '1149', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421424, 395, '1151', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421425, 396, '1153', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421426, 397, '1154', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421427, 398, '1157', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421428, 399, '1158', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421429, 400, '1160', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421430, 401, '1163', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421431, 402, '1164', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421432, 403, '1166', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421433, 404, '1168', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421434, 405, '1171', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421435, 406, '1172', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421436, 407, '1174', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421437, 408, '1176', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421438, 409, '1178', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:28'),
(421439, 410, '1180', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421440, 411, '1182', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421441, 412, '1185', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421442, 413, '1186', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421443, 414, '1188', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421444, 415, '1190', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421445, 416, '1192', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421446, 417, '1196', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421447, 418, '1203', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421448, 419, '1207', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421449, 420, '1208', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421450, 421, '1212', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421451, 422, '1216', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421452, 423, '1220', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421453, 424, '1224', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421454, 425, '1230', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421455, 426, '1232', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421456, 427, '1236', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421457, 428, '1242', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421458, 429, '1244', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421459, 430, '1251', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421460, 431, '1255', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421461, 432, '1257', 740, 50, 0, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421462, 433, '1262', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421463, 434, '1265', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421464, 435, '1270', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421465, 436, '1272', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421466, 437, '1279', 740, 50, 1, '2019-03-25 09:25:27', '2019-03-25 09:25:29'),
(421467, 438, '1280', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421468, 439, '1284', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421469, 440, '1288', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421470, 441, '1294', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421471, 442, '1298', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421472, 443, '1303', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421473, 444, 'مجوفة', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421474, 445, '6', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421475, 446, 'القوة', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421476, 447, '1895', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421477, 447, 'وليم مورجان', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421478, 448, 'الضرب الساحق', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421479, 449, '8', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421480, 450, 'فردى', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421481, 450, 'جماعى', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421482, 451, 'التمرير', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421483, 452, 'الطالب', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421484, 453, 'الامر', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421485, 455, NULL, 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421486, 456, '2', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:29'),
(421487, 457, 'الركبتين', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421488, 457, 'الوقوف', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421489, 458, 'w', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421490, 459, '2                 2', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421491, 459, '1', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421492, 460, 'الحوض', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421493, 461, '234', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421494, 461, '224', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421495, 462, 'المعد', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421496, 463, '10', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421497, 463, '1', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421498, 464, 'الارسال', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421499, 465, 'التعاونى', 740, 50, 0, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(421500, 466, 'التمرير', 740, 50, 1, '2019-03-25 09:25:28', '2019-03-25 09:25:30'),
(428023, 386, '1133', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428024, 387, '1135', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428025, 388, '1136', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428026, 389, '1138', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428027, 390, '1141', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428028, 391, '1142', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428029, 392, '1144', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428030, 393, '1146', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428031, 394, '1148', 576, 50, 0, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428032, 395, '1151', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428033, 396, '1153', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428034, 397, '1154', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428035, 398, '1157', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428036, 399, '1158', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428037, 400, '1160', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428038, 401, '1162', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428039, 402, '1164', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428040, 403, '1166', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428041, 404, '1168', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428042, 405, '1171', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428043, 406, '1172', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428044, 407, '1175', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428045, 408, '1176', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428046, 409, '1178', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428047, 410, '1180', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428048, 411, '1182', 576, 50, 1, '2019-03-27 07:58:13', '2019-03-27 07:58:15'),
(428049, 412, '1184', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428050, 413, '1187', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428051, 414, '1188', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428052, 415, '1190', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428053, 416, '1192', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428054, 417, '1196', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428055, 418, '1203', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428056, 419, '1207', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428057, 420, '1211', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428058, 421, '1212', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428059, 422, '1216', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428060, 423, '1220', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428061, 424, '1224', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428062, 425, '1229', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428063, 426, '1232', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428064, 427, '1236', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:15'),
(428065, 428, '1242', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428066, 429, '1244', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428067, 430, '1251', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428068, 431, '1255', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428069, 432, '1258', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428070, 433, '1262', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428071, 434, '1265', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428072, 435, '1270', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428073, 436, '1272', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428074, 437, '1279', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428075, 438, '1281', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428076, 439, '1284', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428077, 440, '1288', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428078, 441, '1294', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428079, 442, '1298', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428080, 443, '1303', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428081, 444, 'مجوفة', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428082, 445, '6', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428083, 446, 'القدرة العضلية', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428084, 447, 'وليم مرجان', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428085, 447, '1895', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428086, 448, 'الضرب الساحق', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428087, 449, '8', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428088, 450, 'هجومى', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428089, 450, 'دفاعى', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428090, 451, 'التمرير', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428091, 452, 'الطالب المودى', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428092, 453, 'الامر', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428093, 455, 'المتعلم', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428094, 456, '2', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428095, 457, 'الوقوف', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428096, 457, 'الركبتين', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428097, 458, 'w', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428098, 459, '1', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428099, 459, '2', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428100, 460, 'الحوض', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428101, 461, '224', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428102, 461, '243', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428103, 462, 'المعد', 576, 50, 1, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428104, 463, '1', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428105, 463, '9.5', 576, 50, 0, '2019-03-27 07:58:14', '2019-03-27 07:58:16'),
(428106, 464, 'الارسال', 576, 50, 1, '2019-03-27 07:58:15', '2019-03-27 07:58:16'),
(428107, 465, 'التعلم التعاونى', 576, 50, 1, '2019-03-27 07:58:15', '2019-03-27 07:58:16'),
(428108, 466, 'التمرير', 576, 50, 1, '2019-03-27 07:58:15', '2019-03-27 07:58:16'),
(434238, 386, '1133', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:27'),
(434239, 387, '1135', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:27'),
(434240, 388, '1136', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434241, 389, '1138', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434242, 390, '1141', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434243, 391, '1142', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434244, 392, '1144', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434245, 393, '1146', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434246, 394, '1149', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434247, 395, '1151', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434248, 396, '1153', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434249, 397, '1154', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434250, 398, '1157', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434251, 399, '1158', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434252, 400, '1160', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434253, 401, '1162', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434254, 402, '1164', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434255, 403, '1166', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434256, 404, '1168', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434257, 405, '1170', 589, 50, 0, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434258, 406, '1172', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434259, 407, '1174', 589, 50, 0, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434260, 408, '1176', 589, 50, 1, '2019-03-27 08:06:26', '2019-03-27 08:06:28'),
(434261, 409, '1178', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434262, 410, '1180', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434263, 411, '1182', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434264, 412, '1185', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434265, 413, '1187', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434266, 414, '1188', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434267, 415, '1190', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434268, 416, '1192', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434269, 417, '1196', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434270, 418, '1203', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434271, 419, '1207', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434272, 420, '1211', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434273, 421, '1212', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434274, 422, '1216', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434275, 423, '1221', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434276, 424, '1224', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434277, 425, '1229', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434278, 426, '1232', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434279, 427, '1236', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434280, 428, '1242', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434281, 429, '1244', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434282, 430, '1251', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434283, 431, '1255', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434284, 432, '1258', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434285, 433, '1262', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434286, 434, '1265', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434287, 435, '1270', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434288, 436, '1272', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434289, 437, '1279', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434290, 438, '1281', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434291, 439, '1284', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434292, 440, '1288', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434293, 441, '1294', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434294, 442, '1298', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434295, 443, '1303', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434296, 444, 'مجوفة', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434297, 445, '6', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434298, 446, 'القدرة العضلية', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434299, 447, 'وليم مرجان', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434300, 447, '1895', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434301, 448, 'الضرب الساحق', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:28'),
(434302, 449, '8', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434303, 450, 'هجومى', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434304, 450, 'دفاعى', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434305, 451, 'التمرير', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434306, 452, 'الطالب المودى', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434307, 453, 'الامر', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434308, 455, 'المتعلم', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434309, 456, '2', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434310, 457, 'الوقوف', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434311, 457, 'الركبتين', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434312, 458, 'w', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434313, 459, '1', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434314, 459, '2', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434315, 460, 'الحوض', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434316, 461, '224', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434317, 461, '243', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434318, 462, 'المعد', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434319, 463, '1', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434320, 463, '9.5', 589, 50, 0, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434321, 464, 'الارسال', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434322, 465, 'التعلم التعاونى', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(434323, 466, 'التمرير', 589, 50, 1, '2019-03-27 08:06:27', '2019-03-27 08:06:29'),
(441069, 386, '1133', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441070, 387, '1135', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441071, 388, '1136', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441072, 389, '1138', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441073, 390, '1141', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441074, 391, '1142', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441075, 392, '1144', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441076, 393, '1146', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441077, 394, '1149', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441078, 395, '1151', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:07'),
(441079, 396, '1153', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441080, 397, '1154', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441081, 398, '1157', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441082, 399, '1158', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441083, 400, '1160', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441084, 401, '1162', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441085, 402, '1164', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441086, 403, '1166', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441087, 404, '1168', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441088, 405, '1171', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441089, 406, '1173', 684, 50, 0, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441090, 407, '1175', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441091, 408, '1176', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441092, 409, '1178', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441093, 410, '1180', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441094, 411, '1182', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441095, 412, '1185', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441096, 413, '1187', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441097, 414, '1188', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441098, 415, '1190', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441099, 416, '1192', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441100, 417, '1196', 684, 50, 1, '2019-03-27 08:15:06', '2019-03-27 08:15:08'),
(441101, 418, '1203', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441102, 419, '1207', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441103, 420, '1211', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441104, 421, '1212', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441105, 422, '1216', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441106, 423, '1221', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441107, 424, '1224', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441108, 425, '1229', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441109, 426, '1232', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441110, 427, '1236', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441111, 428, '1242', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441112, 429, '1244', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441113, 430, '1251', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441114, 431, '1255', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441115, 432, '1258', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441116, 433, '1262', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441117, 434, '1265', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441118, 435, '1270', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441119, 436, '1272', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441120, 437, '1279', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441121, 438, '1281', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441122, 439, '1284', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441123, 440, '1288', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441124, 441, '1294', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441125, 442, '1298', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441126, 443, '1300', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441127, 444, 'مجوفة', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441128, 445, '6', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441129, 446, 'القدرة العضلية', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441130, 447, 'ولين مرجان', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441131, 447, '1895', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441132, 448, 'الضربالساحق', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441133, 449, '8', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441134, 450, 'هجومى', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441135, 450, 'دفاعى', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441136, 451, 'التمرير', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441137, 452, 'الطالب المودى', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441138, 453, 'الامر', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441139, 455, 'المتعلم', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441140, 456, '2', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441141, 457, 'الوقوف', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441142, 457, 'الركبتين', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441143, 458, 'w', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:08'),
(441144, 459, '1', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441145, 459, '2', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441146, 460, 'الحوض', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441147, 461, '224', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441148, 461, '243', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441149, 462, 'المعد', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441150, 463, '1', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441151, 463, '9.5', 684, 50, 0, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441152, 464, 'الارسال', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441153, 465, 'التعلم التعاونى', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441154, 466, 'التمرير', 684, 50, 1, '2019-03-27 08:15:07', '2019-03-27 08:15:09'),
(441167, 494, '11', 834, 55, 1, '2019-04-03 08:33:20', '2019-04-03 08:33:20'),
(441168, 496, 'gf', 834, 55, NULL, '2019-04-03 08:33:20', '2019-04-03 08:33:20'),
(441169, 499, 'g', 834, 55, NULL, '2019-04-03 08:33:20', '2019-04-03 08:33:20'),
(441194, 492, '1519', 924, 55, 1, '2019-04-03 08:47:41', '2019-04-03 08:47:41'),
(441195, 494, '11', 924, 55, 1, '2019-04-03 08:47:41', '2019-04-03 08:47:41'),
(441196, 495, '1447', 924, 55, 0, '2019-04-03 08:47:41', '2019-04-03 08:47:41'),
(441197, 496, 'tytyi', 924, 55, NULL, '2019-04-03 08:47:41', '2019-04-03 08:47:41'),
(441198, 499, 'kig', 924, 55, NULL, '2019-04-03 08:47:41', '2019-04-03 08:47:41'),
(443529, 524, '1552', 1081, 58, 0, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443530, 525, '1557', 1081, 58, 2, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443531, 526, '1558', 1081, 58, 2, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443532, 527, '1563', 1081, 58, 0, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443533, 528, '1594', 1081, 58, 3, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443534, 528, '1594', 1081, 58, NULL, '2019-04-09 04:41:07', '2019-04-09 04:41:07'),
(443535, 529, '1586', 1081, 58, 4, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443536, 530, '1570', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443537, 531, '1572', 1081, 58, 0, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443538, 532, '1574', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443539, 533, '1576', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443540, 534, '1578', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443541, 535, '1581', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443542, 536, '1582', 1081, 58, 1, '2019-04-09 04:41:07', '2019-04-09 04:41:08'),
(443597, 524, '1552', 1099, 58, 0, '2019-04-09 04:41:39', '2019-04-09 04:41:39');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(443598, 525, '1557', 1099, 58, 2, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443599, 526, '1558', 1099, 58, 2, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443600, 527, '1563', 1099, 58, 0, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443601, 528, '1593', 1099, 58, 0, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443602, 528, '1593', 1099, 58, NULL, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443603, 529, '1586', 1099, 58, 4, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443604, 530, '1570', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443605, 531, '1573', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443606, 532, '1574', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443607, 533, '1576', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443608, 534, '1578', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443609, 535, '1581', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(443610, 536, '1582', 1099, 58, 1, '2019-04-09 04:41:39', '2019-04-09 04:41:39'),
(444032, 524, '1551', 1096, 58, 2, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444033, 525, '1557', 1096, 58, 2, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444034, 526, '1558', 1096, 58, 2, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444035, 527, '1563', 1096, 58, 0, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444036, 528, '1594', 1096, 58, 3, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444037, 528, '1594', 1096, 58, NULL, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444038, 529, '1586', 1096, 58, 4, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444039, 530, '1570', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444040, 531, '1573', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444041, 532, '1574', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444042, 533, '1576', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444043, 534, '1579', 1096, 58, 0, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444044, 535, '1581', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444045, 536, '1582', 1096, 58, 1, '2019-04-09 04:44:17', '2019-04-09 04:44:17'),
(444321, 524, '1551', 1087, 58, 2, '2019-04-09 04:48:00', '2019-04-09 04:48:00'),
(444322, 525, '1557', 1087, 58, 2, '2019-04-09 04:48:00', '2019-04-09 04:48:00'),
(444323, 526, '1558', 1087, 58, 2, '2019-04-09 04:48:00', '2019-04-09 04:48:00'),
(444324, 527, '1565', 1087, 58, 2, '2019-04-09 04:48:00', '2019-04-09 04:48:00'),
(444325, 528, '1594', 1087, 58, 3, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444326, 528, '1594', 1087, 58, NULL, '2019-04-09 04:48:00', '2019-04-09 04:48:00'),
(444327, 529, '1586', 1087, 58, 4, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444328, 530, '1570', 1087, 58, 1, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444329, 531, '1573', 1087, 58, 1, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444330, 532, '1574', 1087, 58, 1, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444331, 533, '1576', 1087, 58, 1, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444332, 534, '1578', 1087, 58, 1, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444333, 535, '1580', 1087, 58, 0, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444334, 536, '1583', 1087, 58, 0, '2019-04-09 04:48:00', '2019-04-09 04:48:01'),
(444501, 524, '1551', 1094, 58, 2, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444502, 525, '1554', 1094, 58, 0, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444503, 526, '1558', 1094, 58, 2, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444504, 527, '1565', 1094, 58, 2, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444505, 528, '1595', 1094, 58, 0, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444506, 528, '1595', 1094, 58, NULL, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444507, 529, '1586', 1094, 58, 4, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444508, 530, '1571', 1094, 58, 0, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444509, 531, '1573', 1094, 58, 1, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444510, 532, '1574', 1094, 58, 1, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444511, 533, '1576', 1094, 58, 1, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444512, 534, '1579', 1094, 58, 0, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444513, 535, '1581', 1094, 58, 1, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444514, 536, '1582', 1094, 58, 1, '2019-04-09 04:49:57', '2019-04-09 04:49:57'),
(444567, 524, '1551', 1086, 58, 2, '2019-04-09 04:50:47', '2019-04-09 04:50:48'),
(444568, 525, '1557', 1086, 58, 2, '2019-04-09 04:50:47', '2019-04-09 04:50:48'),
(444569, 526, '1558', 1086, 58, 2, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444570, 527, '1563', 1086, 58, 0, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444571, 528, '1594', 1086, 58, 3, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444572, 528, '1594', 1086, 58, NULL, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444573, 529, '1586', 1086, 58, 4, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444574, 530, '1570', 1086, 58, 1, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444575, 531, '1572', 1086, 58, 0, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444576, 532, '1574', 1086, 58, 1, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444577, 533, '1577', 1086, 58, 0, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444578, 534, '1578', 1086, 58, 1, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444579, 535, '1581', 1086, 58, 1, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444580, 536, '1583', 1086, 58, 0, '2019-04-09 04:50:48', '2019-04-09 04:50:48'),
(444637, 524, '1551', 1083, 58, 2, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444638, 525, '1557', 1083, 58, 2, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444639, 526, '1558', 1083, 58, 2, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444640, 527, '1565', 1083, 58, 2, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444641, 528, '1594', 1083, 58, 3, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444642, 528, '1594', 1083, 58, NULL, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444643, 529, '1586', 1083, 58, 4, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444644, 530, '1570', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444645, 531, '1573', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444646, 532, '1574', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444647, 533, '1576', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444648, 534, '1578', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444649, 535, '1581', 1083, 58, 1, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444650, 536, '1583', 1083, 58, 0, '2019-04-09 04:51:02', '2019-04-09 04:51:02'),
(444827, 524, '1551', 1090, 58, 2, '2019-04-09 04:54:07', '2019-04-09 04:54:07'),
(444828, 525, '1555', 1090, 58, 0, '2019-04-09 04:54:07', '2019-04-09 04:54:07'),
(444829, 526, '1558', 1090, 58, 2, '2019-04-09 04:54:07', '2019-04-09 04:54:07'),
(444830, 527, '1565', 1090, 58, 2, '2019-04-09 04:54:07', '2019-04-09 04:54:07'),
(444831, 528, '1594', 1090, 58, 3, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444832, 528, '1594', 1090, 58, NULL, '2019-04-09 04:54:07', '2019-04-09 04:54:07'),
(444833, 529, '1586', 1090, 58, 4, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444834, 530, '1571', 1090, 58, 0, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444835, 531, '1572', 1090, 58, 0, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444836, 532, '1574', 1090, 58, 1, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444837, 533, '1576', 1090, 58, 1, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444838, 534, '1579', 1090, 58, 0, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444839, 535, '1581', 1090, 58, 1, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444840, 536, '1583', 1090, 58, 0, '2019-04-09 04:54:07', '2019-04-09 04:54:08'),
(444911, 524, '1551', 1088, 58, 2, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444912, 525, '1554', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444913, 526, '1560', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444914, 527, '1565', 1088, 58, 2, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444915, 528, '1594', 1088, 58, 3, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444916, 528, '1594', 1088, 58, NULL, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444917, 529, '1587', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444918, 530, '1571', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444919, 531, '1573', 1088, 58, 1, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444920, 532, '1574', 1088, 58, 1, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444921, 533, '1576', 1088, 58, 1, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444922, 534, '1578', 1088, 58, 1, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444923, 535, '1580', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444924, 536, '1583', 1088, 58, 0, '2019-04-09 04:54:38', '2019-04-09 04:54:38'),
(444950, 524, '1551', 1091, 58, 2, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444951, 525, '1556', 1091, 58, 0, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444952, 526, '1560', 1091, 58, 0, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444953, 527, '1565', 1091, 58, 2, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444954, 528, '1594', 1091, 58, 3, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444955, 528, '1594', 1091, 58, NULL, '2019-04-09 04:55:13', '2019-04-09 04:55:13'),
(444956, 529, '1586', 1091, 58, 4, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444957, 530, '1570', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444958, 531, '1573', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444959, 532, '1574', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444960, 533, '1576', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444961, 534, '1578', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444962, 535, '1581', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444963, 536, '1582', 1091, 58, 1, '2019-04-09 04:55:13', '2019-04-09 04:55:14'),
(444992, 524, '1551', 1098, 58, 2, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444993, 525, '1557', 1098, 58, 2, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444994, 526, '1559', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444995, 527, '1563', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444996, 528, '1594', 1098, 58, 3, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444997, 528, '1594', 1098, 58, NULL, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444998, 529, '1586', 1098, 58, 4, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(444999, 530, '1571', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(445000, 531, '1572', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(445001, 532, '1574', 1098, 58, 1, '2019-04-09 04:56:15', '2019-04-09 04:56:15'),
(445002, 533, '1577', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:16'),
(445003, 534, '1579', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:16'),
(445004, 535, '1580', 1098, 58, 0, '2019-04-09 04:56:15', '2019-04-09 04:56:16'),
(445005, 536, '1582', 1098, 58, 1, '2019-04-09 04:56:15', '2019-04-09 04:56:16'),
(445062, 524, '1551', 1089, 58, 2, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445063, 525, '1557', 1089, 58, 2, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445064, 526, '1558', 1089, 58, 2, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445065, 527, '1563', 1089, 58, 0, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445066, 528, '1594', 1089, 58, 3, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445067, 528, '1594', 1089, 58, NULL, '2019-04-09 04:57:22', '2019-04-09 04:57:22'),
(445068, 529, '1586', 1089, 58, 4, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445069, 530, '1570', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445070, 531, '1573', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445071, 532, '1574', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445072, 533, '1576', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445073, 534, '1579', 1089, 58, 0, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445074, 535, '1581', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445075, 536, '1582', 1089, 58, 1, '2019-04-09 04:57:22', '2019-04-09 04:57:23'),
(445146, 524, '1550', 1093, 58, 0, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445147, 525, '1555', 1093, 58, 0, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445148, 526, '1558', 1093, 58, 2, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445149, 527, '1563', 1093, 58, 0, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445150, 528, '1594', 1093, 58, 3, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445151, 528, '1594', 1093, 58, NULL, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445152, 529, '1586', 1093, 58, 4, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445153, 530, '1570', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445154, 531, '1573', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445155, 532, '1574', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445156, 533, '1576', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445157, 534, '1578', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445158, 535, '1581', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445159, 536, '1582', 1093, 58, 1, '2019-04-09 04:58:07', '2019-04-09 04:58:07'),
(445160, 524, '1551', 1095, 58, 2, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445161, 525, '1557', 1095, 58, 2, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445162, 526, '1558', 1095, 58, 2, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445163, 527, '1565', 1095, 58, 2, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445164, 529, '1586', 1095, 58, 4, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445165, 530, '1570', 1095, 58, 1, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445166, 531, '1572', 1095, 58, 0, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445167, 532, '1574', 1095, 58, 1, '2019-04-09 04:58:09', '2019-04-09 04:58:09'),
(445168, 533, '1576', 1095, 58, 1, '2019-04-09 04:58:09', '2019-04-09 04:58:10'),
(445169, 534, '1578', 1095, 58, 1, '2019-04-09 04:58:09', '2019-04-09 04:58:10'),
(445170, 535, '1581', 1095, 58, 1, '2019-04-09 04:58:09', '2019-04-09 04:58:10'),
(445171, 536, '1583', 1095, 58, 0, '2019-04-09 04:58:09', '2019-04-09 04:58:10'),
(445256, 524, '1552', 1084, 58, 0, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445257, 525, '1557', 1084, 58, 2, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445258, 526, '1558', 1084, 58, 2, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445259, 527, '1563', 1084, 58, 0, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445260, 528, '1594', 1084, 58, 3, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445261, 528, '1594', 1084, 58, NULL, '2019-04-09 04:59:52', '2019-04-09 04:59:52'),
(445262, 529, '1584', 1084, 58, 0, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445263, 530, '1570', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445264, 531, '1573', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445265, 532, '1574', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445266, 533, '1576', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445267, 534, '1578', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445268, 535, '1581', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445269, 536, '1582', 1084, 58, 1, '2019-04-09 04:59:52', '2019-04-09 04:59:53'),
(445310, 524, '1551', 1085, 58, 2, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445311, 525, '1557', 1085, 58, 2, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445312, 526, '1558', 1085, 58, 2, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445313, 527, '1563', 1085, 58, 0, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445314, 528, '1594', 1085, 58, 3, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445315, 528, '1594', 1085, 58, NULL, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445316, 529, '1586', 1085, 58, 4, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445317, 530, '1570', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445318, 531, '1573', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445319, 532, '1574', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445320, 533, '1576', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445321, 534, '1578', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445322, 535, '1581', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445323, 536, '1582', 1085, 58, 1, '2019-04-09 05:02:05', '2019-04-09 05:02:05'),
(445461, 524, '1551', 1082, 58, 2, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445462, 525, '1554', 1082, 58, 0, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445463, 526, '1558', 1082, 58, 2, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445464, 527, '1565', 1082, 58, 2, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445465, 528, '1594', 1082, 58, 3, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445466, 528, '1594', 1082, 58, NULL, '2019-04-09 05:07:22', '2019-04-09 05:07:22'),
(445467, 529, '1586', 1082, 58, 4, '2019-04-09 05:07:22', '2019-04-09 05:07:23'),
(445468, 530, '1570', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445469, 531, '1573', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445470, 532, '1574', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445471, 533, '1576', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445472, 534, '1579', 1082, 58, 0, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445473, 535, '1581', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445474, 536, '1582', 1082, 58, 1, '2019-04-09 05:07:23', '2019-04-09 05:07:23'),
(445517, 524, '1551', 1100, 58, 2, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445518, 525, '1554', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445519, 526, '1560', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445520, 527, '1563', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445521, 528, '1593', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445522, 528, '1593', 1100, 58, NULL, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445523, 529, '1587', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445524, 530, '1570', 1100, 58, 1, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445525, 531, '1572', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445526, 532, '1575', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445527, 533, '1577', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445528, 534, '1579', 1100, 58, 0, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445529, 535, '1581', 1100, 58, 1, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445530, 536, '1582', 1100, 58, 1, '2019-04-09 05:08:11', '2019-04-09 05:08:11'),
(445541, 541, '1640', 1204, 65, 0, '2019-04-22 12:20:31', '2019-04-22 16:55:30'),
(445542, 542, '1644', 1204, 65, 0, '2019-04-22 12:20:31', '2019-04-22 16:55:30'),
(446422, 541, '1641', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446423, 542, '1646', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446424, 543, '1650', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446425, 544, '1652', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446426, 545, '1656', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446427, 547, '1660', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446428, 548, '1663', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446429, 549, '1665', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446430, 550, '1666', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(446431, 551, '1668', 1189, 65, 2, '2019-04-22 14:58:30', '2019-04-22 14:58:30'),
(447063, 541, '1641', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447064, 542, '1644', 1198, 65, 0, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447065, 543, '1650', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447066, 544, '1652', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447067, 545, '1656', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447068, 547, '1660', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447069, 548, '1663', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447070, 549, '1664', 1198, 65, 0, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447071, 550, '1666', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447072, 551, '1668', 1198, 65, 2, '2019-04-22 15:00:15', '2019-04-22 15:00:15'),
(447191, 541, '1641', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447192, 542, '1644', 1194, 65, 0, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447193, 543, '1650', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447194, 544, '1653', 1194, 65, 0, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447195, 545, '1656', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447196, 547, '1660', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447197, 548, '1662', 1194, 65, 0, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447198, 549, '1665', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447199, 550, '1667', 1194, 65, 0, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447200, 551, '1668', 1194, 65, 2, '2019-04-22 15:00:38', '2019-04-22 15:00:38'),
(447349, 541, '1641', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447350, 542, '1646', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447351, 543, '1650', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447352, 544, '1652', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447353, 545, '1656', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447354, 547, '1660', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447355, 548, '1663', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447356, 549, '1665', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447357, 550, '1666', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447358, 551, '1668', 1191, 65, 2, '2019-04-22 15:00:51', '2019-04-22 15:00:51'),
(447554, 541, '1641', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447555, 542, '1646', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447556, 543, '1650', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447557, 544, '1653', 1219, 65, 0, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447558, 545, '1656', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447559, 547, '1660', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447560, 548, '1663', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447561, 549, '1665', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447562, 550, '1666', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447563, 551, '1668', 1219, 65, 2, '2019-04-22 15:01:12', '2019-04-22 15:01:12'),
(447749, 541, '1641', 1195, 65, 2, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447751, 542, '1646', 1195, 65, 2, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447753, 543, '1650', 1195, 65, 2, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447755, 544, '1653', 1195, 65, 0, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447757, 545, '1656', 1195, 65, 2, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447759, 547, '1661', 1195, 65, 0, '2019-04-22 15:02:21', '2019-04-22 15:02:22'),
(447761, 548, '1663', 1195, 65, 2, '2019-04-22 15:02:22', '2019-04-22 15:02:22'),
(447763, 549, '1664', 1195, 65, 0, '2019-04-22 15:02:22', '2019-04-22 15:02:22'),
(447764, 550, '1666', 1195, 65, 2, '2019-04-22 15:02:22', '2019-04-22 15:02:22'),
(447765, 551, '1668', 1195, 65, 2, '2019-04-22 15:02:22', '2019-04-22 15:02:22'),
(447858, 541, '1641', 1224, 65, 2, '2019-04-22 15:02:57', '2019-04-22 15:02:58'),
(447859, 542, '1644', 1224, 65, 0, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447860, 543, '1650', 1224, 65, 2, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447861, 544, '1653', 1224, 65, 0, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447862, 545, '1656', 1224, 65, 2, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447863, 547, '1660', 1224, 65, 2, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447864, 548, '1663', 1224, 65, 2, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447865, 549, '1664', 1224, 65, 0, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447866, 550, '1666', 1224, 65, 2, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447867, 551, '1669', 1224, 65, 0, '2019-04-22 15:02:58', '2019-04-22 15:02:58'),
(447939, 541, '1641', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447940, 542, '1646', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447941, 543, '1650', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447942, 544, '1652', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447943, 545, '1656', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447944, 547, '1660', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447945, 548, '1663', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447946, 549, '1664', 1193, 65, 0, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447947, 550, '1666', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(447948, 551, '1668', 1193, 65, 2, '2019-04-22 15:03:14', '2019-04-22 15:03:14'),
(448021, 541, '1641', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:33'),
(448022, 542, '1646', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:33'),
(448023, 543, '1650', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448024, 544, '1652', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448025, 545, '1656', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448026, 547, '1660', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448027, 548, '1663', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448028, 549, '1664', 1220, 65, 0, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448029, 550, '1667', 1220, 65, 0, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448030, 551, '1668', 1220, 65, 2, '2019-04-22 15:03:33', '2019-04-22 15:03:34'),
(448124, 541, '1641', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448125, 542, '1644', 1217, 65, 0, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448126, 543, '1650', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448127, 544, '1652', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448128, 545, '1656', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448129, 547, '1660', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448130, 548, '1663', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448131, 549, '1664', 1217, 65, 0, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448132, 550, '1667', 1217, 65, 0, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448133, 551, '1668', 1217, 65, 2, '2019-04-22 15:04:14', '2019-04-22 15:04:14'),
(448164, 541, '1641', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448165, 542, '1646', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448166, 543, '1650', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448167, 544, '1652', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448168, 545, '1656', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448169, 547, '1660', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448170, 548, '1663', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448171, 549, '1664', 1221, 65, 0, '2019-04-22 15:04:23', '2019-04-22 15:04:23'),
(448172, 550, '1666', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:24'),
(448173, 551, '1668', 1221, 65, 2, '2019-04-22 15:04:23', '2019-04-22 15:04:24'),
(448174, 541, '1641', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448175, 542, '1646', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448176, 543, '1650', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448177, 544, '1652', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448178, 545, '1656', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448179, 547, '1660', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448180, 548, '1663', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448181, 549, '1664', 1223, 65, 0, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448182, 550, '1666', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448183, 551, '1668', 1223, 65, 2, '2019-04-22 15:04:34', '2019-04-22 15:04:34'),
(448231, 541, '1641', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448232, 542, '1646', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448233, 543, '1650', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448234, 544, '1652', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448235, 545, '1656', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448236, 547, '1660', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448237, 548, '1663', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448238, 549, '1665', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448239, 550, '1667', 1201, 65, 0, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448240, 551, '1668', 1201, 65, 2, '2019-04-22 15:04:49', '2019-04-22 15:04:49'),
(448309, 541, '1641', 1216, 65, 2, '2019-04-22 15:05:11', '2019-04-22 15:05:12'),
(448310, 542, '1644', 1216, 65, 0, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448311, 543, '1650', 1216, 65, 2, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448312, 544, '1652', 1216, 65, 2, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448313, 545, '1657', 1216, 65, 0, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448314, 547, '1660', 1216, 65, 2, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448315, 548, '1662', 1216, 65, 0, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448316, 549, '1664', 1216, 65, 0, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448317, 550, '1667', 1216, 65, 0, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448318, 551, '1668', 1216, 65, 2, '2019-04-22 15:05:12', '2019-04-22 15:05:12'),
(448329, 541, '1641', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448330, 542, '1644', 1196, 65, 0, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448331, 543, '1650', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448332, 544, '1652', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448333, 545, '1656', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448334, 547, '1660', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448335, 548, '1663', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448336, 549, '1664', 1196, 65, 0, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448337, 550, '1666', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448338, 551, '1668', 1196, 65, 2, '2019-04-22 15:05:25', '2019-04-22 15:05:25'),
(448367, 541, '1641', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448368, 542, '1644', 1206, 65, 0, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448369, 543, '1650', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448370, 544, '1652', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448371, 545, '1656', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448372, 547, '1660', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448373, 548, '1663', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448374, 549, '1664', 1206, 65, 0, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448375, 550, '1666', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448376, 551, '1668', 1206, 65, 2, '2019-04-22 15:06:00', '2019-04-22 15:06:01'),
(448377, 541, '1641', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448378, 542, '1644', 1222, 65, 0, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448379, 543, '1648', 1222, 65, 0, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448380, 544, '1652', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448381, 545, '1656', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448382, 547, '1660', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448383, 548, '1663', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448384, 549, '1664', 1222, 65, 0, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448385, 550, '1666', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448386, 551, '1668', 1222, 65, 2, '2019-04-22 15:06:09', '2019-04-22 15:06:09'),
(448407, 541, '1641', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448408, 542, '1646', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448409, 543, '1650', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448410, 544, '1652', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448411, 545, '1656', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448412, 547, '1660', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448413, 548, '1663', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448414, 549, '1665', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448415, 550, '1667', 1188, 65, 0, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448416, 551, '1668', 1188, 65, 2, '2019-04-22 15:06:19', '2019-04-22 15:06:19'),
(448427, 541, '1641', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448428, 542, '1646', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448429, 543, '1649', 1202, 65, 0, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448430, 544, '1652', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448431, 545, '1656', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448432, 547, '1660', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448433, 548, '1663', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448434, 549, '1664', 1202, 65, 0, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448435, 550, '1667', 1202, 65, 0, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448436, 551, '1668', 1202, 65, 2, '2019-04-22 15:06:31', '2019-04-22 15:06:31'),
(448437, 541, '1641', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448438, 542, '1644', 1212, 65, 0, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448439, 543, '1650', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448440, 544, '1652', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448441, 545, '1656', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448442, 547, '1660', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448443, 548, '1663', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448444, 549, '1665', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:33'),
(448445, 550, '1666', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:34'),
(448446, 551, '1668', 1212, 65, 2, '2019-04-22 15:06:33', '2019-04-22 15:06:34'),
(448506, 541, '1641', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448507, 542, '1646', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448508, 543, '1650', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448509, 544, '1652', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448510, 545, '1656', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448511, 547, '1660', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448512, 548, '1663', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448513, 549, '1664', 1190, 65, 0, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448514, 550, '1666', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448515, 551, '1668', 1190, 65, 2, '2019-04-22 15:07:00', '2019-04-22 15:07:00'),
(448516, 541, '1641', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448517, 542, '1646', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448518, 543, '1650', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448519, 544, '1653', 1218, 65, 0, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448520, 545, '1656', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448521, 547, '1660', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448522, 548, '1663', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448523, 549, '1665', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448524, 550, '1666', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448525, 551, '1668', 1218, 65, 2, '2019-04-22 15:07:03', '2019-04-22 15:07:03'),
(448657, 541, '1641', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448658, 542, '1646', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448659, 543, '1650', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448660, 544, '1652', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448661, 545, '1656', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448662, 547, '1660', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448663, 548, '1663', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448664, 549, '1664', 1208, 65, 0, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448665, 550, '1666', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448666, 551, '1668', 1208, 65, 2, '2019-04-22 15:07:41', '2019-04-22 15:07:42'),
(448677, 541, '1641', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448678, 542, '1646', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448679, 543, '1650', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448680, 544, '1652', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448681, 545, '1656', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448682, 547, '1660', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448683, 548, '1663', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448684, 549, '1664', 1203, 65, 0, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448685, 550, '1666', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448686, 551, '1668', 1203, 65, 2, '2019-04-22 15:08:00', '2019-04-22 15:08:00'),
(448687, 541, '1641', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448688, 542, '1646', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448689, 543, '1650', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448690, 544, '1652', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448691, 547, '1660', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448692, 548, '1663', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448693, 549, '1665', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448694, 550, '1666', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448695, 551, '1668', 1209, 65, 2, '2019-04-22 15:08:03', '2019-04-22 15:08:03'),
(448696, 541, '1641', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448697, 542, '1644', 1200, 65, 0, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448698, 543, '1650', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448699, 544, '1652', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448700, 545, '1656', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448701, 547, '1660', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448702, 548, '1663', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448703, 549, '1664', 1200, 65, 0, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448704, 550, '1666', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448705, 551, '1668', 1200, 65, 2, '2019-04-22 15:08:32', '2019-04-22 15:08:32'),
(448727, 541, '1641', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448728, 542, '1646', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448729, 543, '1650', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448730, 544, '1652', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448731, 545, '1656', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448732, 547, '1660', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448733, 548, '1663', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448734, 549, '1664', 1214, 65, 0, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448735, 550, '1666', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448736, 551, '1668', 1214, 65, 2, '2019-04-22 15:08:42', '2019-04-22 15:08:42'),
(448739, 541, '1641', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:48'),
(448740, 542, '1646', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448741, 543, '1650', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448742, 544, '1652', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448743, 545, '1656', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448744, 547, '1660', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448745, 548, '1663', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448746, 549, '1664', 1197, 65, 0, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448747, 550, '1667', 1197, 65, 0, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448748, 551, '1668', 1197, 65, 2, '2019-04-22 15:08:48', '2019-04-22 15:08:49'),
(448749, 541, '1641', 1210, 65, 2, '2019-04-22 15:08:49', '2019-04-22 15:08:50'),
(448750, 542, '1646', 1210, 65, 2, '2019-04-22 15:08:49', '2019-04-22 15:08:50'),
(448751, 543, '1650', 1210, 65, 2, '2019-04-22 15:08:49', '2019-04-22 15:08:50'),
(448752, 544, '1653', 1210, 65, 0, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448753, 545, '1656', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448754, 547, '1660', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448755, 548, '1663', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448756, 549, '1665', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448757, 550, '1666', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448758, 551, '1668', 1210, 65, 2, '2019-04-22 15:08:50', '2019-04-22 15:08:50'),
(448766, 541, '1641', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:03'),
(448767, 542, '1646', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:03'),
(448768, 543, '1650', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:03'),
(448769, 544, '1653', 1211, 65, 0, '2019-04-22 15:09:03', '2019-04-22 15:09:03'),
(448770, 545, '1656', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:03'),
(448771, 547, '1660', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:04'),
(448772, 548, '1663', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:04'),
(448773, 549, '1665', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:04'),
(448774, 550, '1667', 1211, 65, 0, '2019-04-22 15:09:03', '2019-04-22 15:09:04'),
(448775, 551, '1668', 1211, 65, 2, '2019-04-22 15:09:03', '2019-04-22 15:09:04'),
(448791, 541, '1641', 1185, 65, 2, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448792, 542, '1646', 1185, 65, 2, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448793, 543, '1650', 1185, 65, 2, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448794, 544, '1653', 1185, 65, 0, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448795, 545, '1656', 1185, 65, 2, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448796, 547, '1660', 1185, 65, 2, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448797, 548, '1662', 1185, 65, 0, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448798, 549, '1664', 1185, 65, 0, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448799, 550, '1667', 1185, 65, 0, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448800, 551, '1669', 1185, 65, 0, '2019-04-22 15:09:18', '2019-04-22 15:09:18'),
(448814, 541, '1641', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448815, 542, '1644', 1215, 65, 0, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448816, 543, '1650', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448817, 544, '1652', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448818, 545, '1656', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448819, 547, '1660', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448820, 548, '1663', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448821, 549, '1664', 1215, 65, 0, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448822, 550, '1666', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448823, 551, '1668', 1215, 65, 2, '2019-04-22 15:09:39', '2019-04-22 15:09:39'),
(448861, 541, '1641', 1199, 65, 2, '2019-04-22 15:10:05', '2019-04-22 15:10:06'),
(448862, 542, '1646', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448863, 543, '1650', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448864, 544, '1652', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448865, 545, '1656', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448866, 547, '1660', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448867, 548, '1663', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448868, 549, '1664', 1199, 65, 0, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448869, 550, '1666', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448870, 551, '1668', 1199, 65, 2, '2019-04-22 15:10:06', '2019-04-22 15:10:06'),
(448911, 541, '1641', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448912, 542, '1646', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448913, 543, '1650', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448914, 544, '1653', 1225, 65, 0, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448915, 545, '1657', 1225, 65, 0, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448916, 547, '1660', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448917, 548, '1662', 1225, 65, 0, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448918, 549, '1664', 1225, 65, 0, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448919, 550, '1666', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448920, 551, '1668', 1225, 65, 2, '2019-04-22 15:11:02', '2019-04-22 15:11:02'),
(448931, 541, '1641', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448932, 542, '1646', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448933, 543, '1650', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448934, 544, '1652', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448935, 545, '1656', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448936, 547, '1660', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448937, 548, '1663', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448938, 549, '1664', 1187, 65, 0, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448939, 550, '1666', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448940, 551, '1668', 1187, 65, 2, '2019-04-22 15:11:27', '2019-04-22 15:11:28'),
(448951, 541, '1641', 1205, 65, 2, '2019-04-22 15:11:48', '2019-04-22 15:11:48'),
(448952, 542, '1644', 1205, 65, 0, '2019-04-22 15:11:48', '2019-04-22 15:11:48'),
(448953, 543, '1650', 1205, 65, 2, '2019-04-22 15:11:48', '2019-04-22 15:11:48'),
(448954, 544, '1653', 1205, 65, 0, '2019-04-22 15:11:48', '2019-04-22 15:11:48'),
(448955, 545, '1657', 1205, 65, 0, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448956, 547, '1660', 1205, 65, 2, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448957, 548, '1663', 1205, 65, 2, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448958, 549, '1664', 1205, 65, 0, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448959, 550, '1667', 1205, 65, 0, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448960, 551, '1668', 1205, 65, 2, '2019-04-22 15:11:48', '2019-04-22 15:11:49'),
(448961, 541, '1641', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448962, 542, '1646', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448963, 543, '1650', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448964, 544, '1653', 1213, 65, 0, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448965, 545, '1656', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448966, 547, '1660', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448967, 548, '1663', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448968, 549, '1664', 1213, 65, 0, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448969, 550, '1666', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448970, 551, '1668', 1213, 65, 2, '2019-04-22 15:14:08', '2019-04-22 15:14:08'),
(448971, 541, '1641', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:47'),
(448972, 542, '1646', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:47'),
(448973, 543, '1650', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448974, 544, '1653', 1192, 65, 0, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448975, 545, '1656', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448976, 547, '1660', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448977, 548, '1663', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448978, 549, '1665', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448979, 550, '1666', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(448980, 551, '1668', 1192, 65, 2, '2019-04-22 15:14:47', '2019-04-22 15:14:48'),
(450428, 552, '1672', 214, 67, 2, '2019-04-24 12:50:49', '2019-04-24 12:50:49'),
(450429, 554, '1681', 214, 67, 2, '2019-04-24 12:50:49', '2019-04-24 12:50:49'),
(450430, 555, '1684', 214, 67, 2, '2019-04-24 12:50:49', '2019-04-24 12:50:50'),
(450431, 556, '1689', 214, 67, 0, '2019-04-24 12:50:49', '2019-04-24 12:50:50'),
(450432, 557, '1694', 214, 67, 2, '2019-04-24 12:50:49', '2019-04-24 12:50:50');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(450433, 559, 'Puplic class customer(){\r\nString name;\r\nint regester;\r\nset name();\r\nset regster();\r\n}\r\nPublic class register exstends customer(){\r\nget regster();\r\n}\r\nPublic class golden Customer extends customer(){\r\ndouble bouns;\r\nset bouns();\r\n\r\n}\r\nPublic class  priumem Customer extends customer(){\r\ndouble bouns;\r\nset bouns();\r\n\r\n}\r\nimport java .util.*;\r\n public static void main(String[] args){         \r\nScanner sc = new Scanner(System.in);\r\nint x;\r\nString s;\r\n            s =sc.nextline();\r\nx=sc.nextInt();                                                     \r\n                         get regester();\r\nif(regester>30000)\r\nbouns=get bouns()*.04;\r\n\r\nif(regester>100000)\r\nbouns= get bouns()*.07;\r\nSystem.out.println(regster);}', 214, 67, 4, '2019-04-24 12:50:49', '2019-05-07 13:24:54'),
(450434, 558, '1699', 214, 67, 0, '2019-04-24 12:50:49', '2019-04-24 12:50:50'),
(450512, 552, '1675', 408, 67, 0, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450513, 554, '1682', 408, 67, 0, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450514, 555, '1684', 408, 67, 2, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450515, 556, '1688', 408, 67, 2, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450516, 557, '1694', 408, 67, 2, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450517, 559, 'public classe  registered customer{ }\r\n                                                public classe  golden customer{}\r\n                                             public classe  premiumAn \r\nonline trading company gives discount to its customer. It classifies the customer to three categories. The first is registered customer who make a registration on its website. The second category is golden customer who is a registered customer with total purchase amount last year is above 30000. The last category is premium customer who is a registered customer with purchased amount last year is above 100000. The company usually offers discounts to the customer in some occasions. Currently, the company offer 7% discount for registered customer. For golden customer it offers more 4% discount after registered customer discount. For premium users, the company offers 10% after registered customer discount.\r\nHelp the company to calculate the total amount of purchasing. Assume that there are 4 customers buying with these amounts 2000, 1000, 2500, 5600. Assume that the categories of customers are premium, registered, golden, and premium respectively. customer {}\r\n                                       \r\n                                                                          thanks  & I\'m sorry', 408, 67, 1, '2019-04-24 12:54:34', '2019-05-07 13:26:13'),
(450518, 558, '1696', 408, 67, 2, '2019-04-24 12:54:34', '2019-04-24 12:54:34'),
(450568, 554, '1681', 386, 67, 2, '2019-04-24 12:56:22', '2019-04-24 12:56:22'),
(450569, 555, '1684', 386, 67, 2, '2019-04-24 12:56:22', '2019-04-24 12:56:22'),
(450570, 556, '1691', 386, 67, 0, '2019-04-24 12:56:22', '2019-04-24 12:56:23'),
(450571, 557, '1694', 386, 67, 2, '2019-04-24 12:56:22', '2019-04-24 12:56:23'),
(450572, 559, 'public class costumer;{\r\ndouble price;\r\npublic (){\r\nprice = 1000\r\n}\r\n}\r\npublic class premium extends Costumer ; {\r\nvoid setCostumer(double p){\r\n price = p-(p*17\\100);\r\n \r\n}\r\npublic class Golden extends Costumer ; {\r\nvoid setCostumer(double p){\r\n price = p-(p*11\\100);\r\n \r\n}\r\npublic class Registered extends Costumer ; {\r\nvoid setCostumer(double p){\r\n price = p-(p*7\\100);\r\n \r\n}\r\npublic static void main(String[] args){\r\n Premium o1 = new Premium ();\r\no1.setPrice(2000);\r\n Registered o2 = new B();\r\n o2.setRange(1000);\r\n Golden o3 = new B();\r\no3.setPrice(2500);\r\n Premium o4 = new Premium ();\r\no4.setPrice(5600);\r\n System.out.println(o1.price);\r\n System.out.println(o2.price);\r\n System.out.println(o3.price);\r\nSystem.out.println(o4.price);\r\n } }', 386, 67, 7, '2019-04-24 12:56:22', '2019-05-07 13:29:41'),
(450573, 558, '1697', 386, 67, 0, '2019-04-24 12:56:22', '2019-04-24 12:56:23'),
(450624, 552, '1674', 321, 67, 0, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450625, 554, '1682', 321, 67, 0, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450626, 555, '1684', 321, 67, 2, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450627, 556, '1688', 321, 67, 2, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450628, 557, '1694', 321, 67, 2, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450629, 559, 'public class company(){}', 321, 67, 1, '2019-04-24 12:59:19', '2019-05-07 13:42:28'),
(450630, 558, '1698', 321, 67, 0, '2019-04-24 12:59:19', '2019-04-24 12:59:19'),
(450637, 554, '1681', 309, 67, 2, '2019-04-24 12:59:56', '2019-04-24 12:59:57'),
(450638, 555, '1684', 309, 67, 2, '2019-04-24 12:59:56', '2019-04-24 12:59:57'),
(450639, 556, '1688', 309, 67, 2, '2019-04-24 12:59:56', '2019-04-24 12:59:57'),
(450640, 557, '1694', 309, 67, 2, '2019-04-24 12:59:56', '2019-04-24 12:59:57'),
(450641, 559, 'important java until.scanner;\r\n   class company\r\n   {\r\n       int total  purchase amount ;\r\n    string customername ;\r\n  }\r\n    class websitecustomer extend company \r\n  }\r\n  {      \r\n    class goldencustomer extend company \r\n  }\r\n {\r\n   class premiumcustomer extend company\r\n }    \r\n public double disc \r\n {\r\n   public class Main\r\n}   \r\npuplic static void main', 309, 67, 2, '2019-04-24 12:59:56', '2019-05-07 13:44:05'),
(450642, 558, '1698', 309, 67, 0, '2019-04-24 12:59:56', '2019-04-24 12:59:57'),
(450688, 552, '1674', 340, 67, 0, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450689, 554, '1680', 340, 67, 0, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450690, 555, '1684', 340, 67, 2, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450691, 556, '1691', 340, 67, 0, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450692, 557, '1694', 340, 67, 2, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450693, 559, 'public Class registered_customer{\r\njOptionpane.ShowInputdialog()\r\n}\r\n\r\nclass golden_customer extends registered_customer{\r\n\r\n\r\n}', 340, 67, 2, '2019-04-24 13:02:14', '2019-05-07 13:44:53'),
(450694, 558, '1697', 340, 67, 0, '2019-04-24 13:02:14', '2019-04-24 13:02:14'),
(450743, 554, '1681', 194, 67, 2, '2019-04-24 13:06:05', '2019-04-24 13:06:06'),
(450744, 555, '1684', 194, 67, 2, '2019-04-24 13:06:05', '2019-04-24 13:06:06'),
(450745, 556, '1688', 194, 67, 2, '2019-04-24 13:06:05', '2019-04-24 13:06:06'),
(450746, 557, '1694', 194, 67, 2, '2019-04-24 13:06:05', '2019-04-24 13:06:06'),
(450747, 559, 'import java.util.Scanner;\r\npublic class company{\r\nint total_purchase;\r\nString customer;\r\npublic double discount;\r\npublic company(){\r\n}\r\n}\r\npublic class regisered_customer extends company\r\n{\r\n\r\n}\r\npublic class golden_customer extends company\r\n{\r\n\r\n}\r\npublic class premium_customer extends company\r\n{\r\n\r\n}\r\n\r\npublic static void main(String[] args){\r\n\r\n}\r\n}', 194, 67, 4, '2019-04-24 13:06:05', '2019-05-07 13:46:06'),
(450748, 558, '1698', 194, 67, 0, '2019-04-24 13:06:05', '2019-04-24 13:06:06'),
(450922, 554, '1681', 286, 67, 2, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(450923, 555, '1684', 286, 67, 2, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(450924, 556, '1688', 286, 67, 2, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(450925, 557, '1694', 286, 67, 2, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(450926, 559, 'public class company(){\r\nstring premium , registered , golden , premium respectively;\r\ndouble amount;\r\ndouble total amount;\r\nfor(int i=0 ; i<4 ; i++ ){\r\nSystem.out.print(\"\'enter the amount\");\r\nScanner a = new Scanner(System.in);\r\ndouble amount= a.next();\r\nif(amount>30000){\r\nSystem.out.print(\"golden customer\");\r\ntotal amount+ = amount *0.11;\r\nelse\r\nif(amount >100000)\r\nSystem.out.print(\"premium customer\");\r\ntotal amount+= amount*0.17;\r\nelse \r\nSystem.out.print(\"registered customer\");\r\ntotal amount +=amount*0.07;\r\n\r\n}\r\nSystem.out.print(total amount);\r\n}\r\n\r\n}', 286, 67, 4, '2019-04-24 13:09:29', '2019-05-07 13:47:55'),
(450927, 558, '1696', 286, 67, 2, '2019-04-24 13:09:29', '2019-04-24 13:09:29'),
(451167, 552, '1673', 318, 67, 0, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451168, 554, '1680', 318, 67, 0, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451169, 555, '1684', 318, 67, 2, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451170, 556, '1691', 318, 67, 0, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451171, 557, '1694', 318, 67, 2, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451172, 559, 'public class customer{\r\ndouble discount;\r\nint amount;\r\nint id;\r\n\r\n\r\n}\r\npublic customer(){\r\n\r\n\r\n}\r\npublic void setamount(int a){\r\namount=a;\r\n}\r\npublic void setid(int b){\r\nid=b;\r\n}\r\n   public void setdiscount(double d)\r\n{\r\ndiscount=d;\r\n} \r\n public int getamount(int a)\r\n{\r\nretarn a;\r\n}\r\npublic double getid(double b)\r\n{\r\nretarn b;\r\n}\r\npublic int getdiscount(int d)\r\n{\r\nretarn d;\r\n}\r\npublic class register extend coustomer(){\r\npublic register(){\r\n\r\n\r\n}\r\nif(amount >3000)\r\namount=a;\r\n\r\n}\r\npublic int getid(){\r\nreturn 1000;\r\n}\r\npublic double getdiscount(){\r\nreturn 3000;\r\n}', 318, 67, 3, '2019-04-24 13:24:41', '2019-05-07 13:49:18'),
(451173, 558, '1697', 318, 67, 0, '2019-04-24 13:24:41', '2019-04-24 13:24:42'),
(451218, 554, '1680', 320, 67, 0, '2019-04-24 13:26:56', '2019-04-24 13:26:57'),
(451219, 555, '1684', 320, 67, 2, '2019-04-24 13:26:56', '2019-04-24 13:26:57'),
(451220, 556, '1691', 320, 67, 0, '2019-04-24 13:26:56', '2019-04-24 13:26:57'),
(451221, 557, '1694', 320, 67, 2, '2019-04-24 13:26:56', '2019-04-24 13:26:57'),
(451222, 559, 'public class classifies ()\r\n{\r\n      double discount ;\r\n                  public  classifies (double d)        \r\n\r\n{\r\nd=discount;\r\n}      \r\npublic class first_catoriges extends classifies ()\r\n{\r\nstring reigstered ;\r\n\r\n}\r\n   \r\n    \r\npublic  first_catoriges     (string r)\r\n{\r\nr = registered;          \r\n}      \r\npublic  first_catoriges     (string r; double d)       \r\n{\r\nsuper(d);\r\nr=registered;\r\n}   \r\npublic class seconed_catorigers extends classifies()\r\n{\r\ndouble total;\r\npublic seconed_catorigers (double t)\r\n{\r\nt=total\r\n\r\n}\r\npublic seconed_catorigers ()\r\n{\r\ndouble t=3000;\r\n}\r\npublic seconed_catorigers (doble d;double t)\r\n{\r\nsupere(d)\r\nt = total;\r\n}\r\npublic class thired_catoiges extends classifies ()\r\n{\r\ndouble amount;\r\npublic  thired_catoiges ()\r\n{\r\ndouble amount =a;\r\n}\r\npublic  thired_catoiges ()\r\n{\r\ndouble a=10000;\r\n}\r\npublic  thired_catoiges (double a; double d)\r\n{\r\nsuper (d)\r\na=amount\r\n}\r\npublic void getRecustomer()\r\n{\r\nreturn 7%;\r\n}\r\npublic void getGocustomer()\r\n{\r\n\r\nreturn 10%\r\n}', 320, 67, 3, '2019-04-24 13:26:57', '2019-05-07 13:51:45'),
(451223, 558, '1697', 320, 67, 0, '2019-04-24 13:26:57', '2019-04-24 13:26:57'),
(451309, 554, '1681', 205, 67, 2, '2019-04-24 13:30:51', '2019-04-24 13:30:51'),
(451310, 555, '1684', 205, 67, 2, '2019-04-24 13:30:51', '2019-04-24 13:30:51'),
(451311, 556, '1688', 205, 67, 2, '2019-04-24 13:30:51', '2019-04-24 13:30:51'),
(451312, 557, '1694', 205, 67, 2, '2019-04-24 13:30:51', '2019-04-24 13:30:51'),
(451313, 559, 'public class  premium \r\n{          \r\ndouble x ;              \r\ndouble  offerX(double x)\r\n{\r\noffer=x *(4/100);\r\n \r\n}\r\npublic class register {\r\ndouble y;\r\n\r\ndouble offerY(double y){\r\noffer=y*(7/100);\r\n\r\n}\r\npublic class goldencustomer{\r\ndouble z;\r\n\r\ndouble offerZ(double z){\r\noffer=z*(10/100);\r\n}\r\npublic class premiumrigest {\r\ndouble  d;\r\noffer=d*(5/100);\r\n}\r\n}\r\n   public class main ()\r\n{\r\n  Scanner input =new Scanner (System.in);\r\ndouble  x=input.next int()            \r\n  if (x<=2000){\r\ndouble offerx(){\r\nsum 1+=offerx;\r\n}\r\ndouble y=input.next int;\r\nif (y<=1000){\r\ndouble offery()\r\n}\r\nsum2+=offer;\r\n}\r\ndouble z=input.nextdouble;\r\nif(z<=2500){\r\ndouble offerz()\r\nsum3+=offerz;\r\n}\r\ndouble d= input.next double;\r\nif(d<=5600)\r\n{double offerz()\r\nsum4+=offerz;\r\n}\r\nSystem.out .print (\"amount =\"+sum1+sum2+sum3+sum4);\r\n}', 205, 67, 3, '2019-04-24 13:30:51', '2019-05-07 14:19:37'),
(451314, 558, '1698', 205, 67, 0, '2019-04-24 13:30:51', '2019-04-24 13:30:52'),
(451327, 554, '1680', 240, 67, 0, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(451328, 555, '1684', 240, 67, 2, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(451329, 556, '1688', 240, 67, 2, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(451330, 557, '1694', 240, 67, 2, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(451331, 559, 'import java.util.Scanner;                                                                                                               \r\nclass company\r\n{\r\nstatic int totalpurchaseamount;\r\nString cusomername;\r\npublic double discount(int amount)\r\n{\r\nreturn amount;\r\n}\r\n}\r\nclass registeredcustomer extends company\r\n{\r\npublic double discount(int amount)\r\n{\r\ntotalpurchaseamount +=amount*7/100.0;\r\nreturn amount*7/100.0;\r\n}\r\n}\r\nclass goldedcustomer extends company\r\n{\r\npublic double discount(int amount)\r\n{\r\ntotalpurchaseamount +=amount*11/100.0;\r\nreturn amount*11/100.0;\r\n}\r\n}\r\nclass premiumcustomer extends company\r\n{\r\npublic double discount(int amount)\r\n{\r\ntotalpurchaseamount +=amount*17/100.0;\r\nreturn amount*17/100.0;\r\n}\r\n}\r\npublic class Main\r\n{\r\npublic static void main(String[] args)\r\n{\r\nregisteredcustomer a=new registeredcustomer();\r\ngoldedcustomer b=new goldedcustomer(); \r\npremiumcustomer  c=new premiumcustomer();\r\npremiumcustomer  d=new premiumcustomer();\r\nSystem.out.println(\"the total purchase for the customer number one is :\"+c.discount(2000));\r\nSystem.out.println(\"the total purchase for the customer number two is :\"+a.discount(1000));\r\nSystem.out.println(\"the total purchase for the customer number three is :\"+b.discount(2500));\r\nSystem.out.println(\"the total purchase for the customer number four is :\"+d.discount(5600));\r\nSystem.out.println(\"the total purchase for the all customers is :\"+d.totalpurchaseamount));\r\n}\r\n}', 240, 67, 5, '2019-04-24 13:31:14', '2019-05-07 14:23:19'),
(451332, 558, '1698', 240, 67, 0, '2019-04-24 13:31:14', '2019-04-24 13:31:14'),
(451353, 552, '1675', 338, 67, 0, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451354, 554, '1682', 338, 67, 0, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451355, 555, '1684', 338, 67, 2, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451356, 556, '1688', 338, 67, 2, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451357, 557, '1694', 338, 67, 2, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451358, 559, 'class company{\r\n     private int customerpremium;\r\n    private int customergolden;\r\n   private int customerregistered;\r\n  private int amount;\r\npublic double getcustomerpremium(double x){\r\nreturn customerpremium=x*7/100;\r\n}\r\npublic double getcustomergolden(double y){\r\nreturn cutomergolden=y*11/100;\r\n}\r\npublic double getcustomerregistered(double e){\r\nreturn customerregistered=e*10/100;\r\n}\r\npublic double getamount(){\r\nreturn amount =customerregistered+cutomergolden+customerpremium;\r\n}\r\npublic static void main(String[] args){\r\nscanner s=new scanner(system.in);\r\ndouble x=s.nextdouble();\r\ncompany a=new company();\r\nfor(int i=0;i<3;i++)\r\n{ if(x<=1000)\r\n{  system.out.println(a. getcustomerpremium(x);\r\n}elseif(x>=2000 || x<=2500 )\r\n{ system.out.println(a.getcustomerregistered(x);\r\n}elseif(x<=5600 || x>2500)\r\n{ system.out.println(a.getcustomergolden(x);\r\n}\r\n}\r\na.getamount();\r\n}', 338, 67, 4, '2019-04-24 13:31:34', '2019-05-07 14:25:56'),
(451359, 558, '1697', 338, 67, 0, '2019-04-24 13:31:34', '2019-04-24 13:31:34'),
(451372, 554, '1681', 238, 67, 2, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(451373, 555, '1684', 238, 67, 2, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(451374, 556, '1688', 238, 67, 2, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(451375, 557, '1694', 238, 67, 2, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(451376, 559, 'import java util.Scanner;\r\n public class company()\r\n{\r\nint total_purchase_amount;\r\n\r\npublic double getdis()\r\n{\r\n\r\n}\r\n{\r\n\r\nclass website_customer extends company()\r\n{\r\npublic double getdis()\r\n{\r\nreturn 1000*.07;\r\n}\r\n}\r\nclass golden_customer extends company()\r\n{\r\npublic double getdis()\r\n{\r\nreturn 2500*.11;\r\n}\r\n\r\n\r\n}\r\nclass premium_customer extends company()\r\n{\r\npublic double getdis()\r\n{\r\nreturn 7600*.17;\r\n}\r\n\r\n}\r\npublic class main\r\npublic static void main(String args){\r\n\r\nint result;\r\nwebsite_customer wc=new website_customer();\r\nwc.getdis();\r\n\r\ngolden_customer gc=new golden_customer();\r\ngc.getdis();\r\n premium_customer pc=new  premium_customer();\r\n\r\npc.getdis();\r\nresult=wc.getdis()+gc.getarea()+pc.getarea();\r\nSystem.out.println(result);', 238, 67, 4, '2019-04-24 13:32:16', '2019-05-07 14:27:59'),
(451377, 558, '1698', 238, 67, 0, '2019-04-24 13:32:16', '2019-04-24 13:32:16'),
(451442, 554, '1681', 134, 67, 2, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(451443, 555, '1684', 134, 67, 2, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(451444, 556, '1691', 134, 67, 0, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(451445, 557, '1694', 134, 67, 2, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(451446, 559, 'public class calculate{\r\nint x;\r\nstring name;\r\npublic calculate (int x , string name)\r\nthis . x =x;\r\nthis.name = name;\r\nif (name == \"premium\")\r\nsystem . out .print( x * 0.17 )\r\nelse if (name ==\"registered\")\r\nsystem . out . print ( x  * 0.07 )\r\nelse if (name ==\'\'golden\")\r\nsystem . out . print ( x * 0.11 )\r\nelse \r\nsystem .out .print (\"sorry , there is no discount\")\r\n}\r\n\r\n public static void main (string()args){\r\ncalculate c1 = new calculate(  ...........) ;', 134, 67, 4, '2019-04-24 13:34:16', '2019-05-07 14:29:48'),
(451447, 558, '1696', 134, 67, 2, '2019-04-24 13:34:16', '2019-04-24 13:34:16'),
(451448, 552, '1673', 100, 67, 0, '2019-04-24 13:34:24', '2019-04-24 13:34:24'),
(451449, 554, '1680', 100, 67, 0, '2019-04-24 13:34:24', '2019-04-24 13:34:25'),
(451450, 555, '1684', 100, 67, 2, '2019-04-24 13:34:24', '2019-04-24 13:34:25'),
(451451, 556, '1691', 100, 67, 0, '2019-04-24 13:34:24', '2019-04-24 13:34:25'),
(451452, 557, '1694', 100, 67, 2, '2019-04-24 13:34:24', '2019-04-24 13:34:25'),
(451453, 559, 'public class customer ()\r\n{\r\nint customer_id;\r\nstring customer_name;\r\ndouble customer_sails ;\r\ndouble customer_amount;\r\ndouble customer_discound; \r\npublic customer ()\r\n{\r\n\r\n}\r\n\r\npublic void setamount (double  a)\r\n{\r\ncustomer_amount=a;\r\n}\r\npublic void setdiscound (double d)\r\n{\r\ncustomer_discound=d;\r\n}\r\npublic void setid (int id)\r\n{\r\ncustomer_id=id;\r\n}\r\npublic void setname (string  n)\r\n{\r\ncustomer_name=n;\r\n}\r\npublic void setsails  (double s)\r\n{\r\ncustomer_sails =s;\r\n}\r\npublic string getname ()\r\n{\r\nreturn n  ;\r\n}\r\npublic int getid ()\r\n{\r\nreturn id ;\r\n\r\n}\r\npublic int getsails ()\r\n{\r\nreturn s;\r\n}\r\npublic int getamount ()\r\n{\r\nreturn s;\r\n}\r\npublic int getdiscound ()\r\n{\r\nreturn ;\r\n}\r\n\r\n}    \r\npublic class registerd extends customer {\r\npublic registerd  (double amount = 1000 ,double sails )\r\n{\r\ncustomer_sails=sails;\r\ncustomer_amount =amount;\r\n}\r\nif (amount <30000)\r\ncustomer_disbound=customer_sails %4 ;\r\n\r\n}                                                                                                         \r\npublic class golden extends customer { \r\n\r\npublic golden(double amount = 2500 ,double sails ;\r\n)\r\n{\r\ncustomer_sails=sails;\r\n\r\ncustomer_amount =amount;\r\n}\r\nif (amount >30000)\r\ncustomer_disbound=customer_sails %(4+7) ;\r\n\r\n}\r\npublic class premium extends customer {\r\npublic registerd  (double amount = 2000 , double amount 5600 ,double sails)\r\n{\r\ncustomer_sails=sails;\r\n\r\ncustomer_amount =amount;\r\n}\r\nif (amount >100000)\r\ncustomer_disbound=customer_sails %(4+10) ;\r\n\r\n}                        \r\npublic static void main(String[] args){\r\nregisterd r1=new registerd ();\r\nsystem.out .println(r1.getsails())\r\nsystem.out .println(r1.getdiscound())\r\ngolden r2=new golden ();\r\nsystem.out .println(rs.getsails())\r\nsystem.out .println(r2.getdiscound())\r\npermium r3=new permium();\r\nsystem.out .println(r3.getsails())\r\nsystem.out .println(r3.getdiscound())', 100, 67, 5, '2019-04-24 13:34:24', '2019-05-07 15:12:41'),
(451454, 558, '1699', 100, 67, 0, '2019-04-24 13:34:24', '2019-04-24 13:34:25'),
(451527, 554, '1681', 109, 67, 2, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(451528, 555, '1684', 109, 67, 2, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(451529, 556, '1691', 109, 67, 0, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(451530, 557, '1694', 109, 67, 2, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(451531, 559, 'public class   company();      \r\nimport java.util.Scanner ;                                                                  \r\n                                            {        public static void main (String [ ]args );\r\n                                                              discount();\r\n\r\n\r\n}\r\npublic class discount();\r\nstring  registered=\"registered\" ,gold =\"gold\",premium=\"premium\" ;\r\nstring x;\r\ndouble res =0,total purchase ,buys=0;\r\nSystem .out.prentln( \"enter what u are registered or\r\ngold or premium \");\r\nScanner s=new Scanner(System .in );\r\nx=s.next();\r\nSystem .out.prentln( \"enter your amountts of buys \");\r\nScanner w=new Scanner(System .in );\r\nbuys=w.nextDouble();\r\nif (x==\"registered\")\r\n{\r\nres =buys*0.07;\r\nSystem.out.prentln (\"the total u buy is \"+res);\r\n}\r\nelse if (x==\"gold\"&&total purchase==30000)\r\n{\r\nres =buys*0.04;\r\nSystem.out.prentln (\"the total u buy is \"+res);\r\n}\r\nelse if (x==\"premium\"&&total purchase==100000)\r\n{\r\nres =buys*0.1;\r\nSystem.out.prentln (\"the total u buy is \"+res)\"\r\n}\r\nelse {System.out.prentln (\"sorry\");}\r\n\r\n}', 109, 67, 4, '2019-04-24 13:37:51', '2019-05-07 15:15:10'),
(451532, 558, '1697', 109, 67, 0, '2019-04-24 13:37:51', '2019-04-24 13:37:51'),
(451578, 552, '1673', 95, 67, 0, '2019-04-24 13:41:18', '2019-04-24 13:41:19'),
(451579, 554, '1681', 95, 67, 2, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(451580, 555, '1684', 95, 67, 2, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(451581, 556, '1690', 95, 67, 0, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(451582, 557, '1694', 95, 67, 2, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(451583, 559, 'public class customer()\r\n{\r\nprivate int Id;\r\nprivate int amount;\r\nprivate double discount;\r\npublic customer()\r\n{\r\n}\r\npublic void setid(int id)\r\n{\r\nId =id;\r\n}\r\npublic void setamount(int a)\r\n{\r\namount =a;\r\n}\r\npublic void setdiscount(double d)\r\n{\r\ndiscount =d;\r\n}\r\npublic int getid()\r\n{\r\nreturn id;\r\n}\r\npublic int getamount()\r\n{\r\nreturn amount;\r\n}\r\npublic double getdiscount()\r\n{\r\nreturn discount;\r\n}\r\n\r\n\r\n\r\n}                                                                                                               \r\n=================================================================================================================    \r\npublic calss registered() extends customer()\r\n{\r\n\r\npublic registered()\r\n{\r\n}\r\n\r\npublic void setamount(int a)\r\n{\r\nif(amount <30000)\r\namount =a;\r\n}\r\npublic int getid()\r\n{\r\nreturn 1000;\r\n}\r\npublic double getdiscount()\r\n{\r\nreturn discount +(discount* .7);\r\n}\r\n\r\n\r\n\r\n\r\n} \r\n================================================================================================================\r\npublic class golden() extends customer()\r\n{\r\npublic golden()\r\n{\r\n}\r\npublic void setamount(int a)\r\n{\r\nif (a>30000)\r\namount =a ;\r\n}\r\npublic int getid()\r\n{\r\nreturn 2500;\r\n}\r\npublic int getdiscount()\r\n{\r\nreturn discount + ( dicount *.11)\r\n}\r\n\r\n}     \r\n================================================================================================================\r\npublic class premium() extends customer()\r\n{\r\npublic premium()\r\n{\r\n}\r\npublic void setamount(int a)\r\n{\r\nif (a>100000)\r\namount =a ;\r\n}\r\npublic int getid()\r\n{\r\nreturn 1000;\r\n}\r\npublic int getdiscount()\r\n{\r\nreturn discount + ( dicount *.17)\r\n}\r\n\r\n} \r\n=================================================================================================================\r\npublic static void main(String[] args){\r\ncustomer c1= new customer();\r\nregistered r1= new registered();\r\n golden g1 = new golden();  \r\n premium p1 = new premium();', 95, 67, 5, '2019-04-24 13:41:19', '2019-05-07 15:19:07'),
(451584, 558, '1697', 95, 67, 0, '2019-04-24 13:41:19', '2019-04-24 13:41:19'),
(451609, 554, '1682', 104, 67, 0, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(451610, 555, '1684', 104, 67, 2, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(451611, 556, '1691', 104, 67, 0, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(451612, 557, '1694', 104, 67, 2, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(451613, 559, 'pubic class registered{\r\nint num;\r\npublic registered (){\r\n}\r\npublic registered(int n){  \r\nnum=n;\r\n}\r\nsysterm.out.println(\"please enter the total amount purchese\");\r\nif(n<=30000){\r\n\r\nsystem.out.println(\"this is registered \");\r\nreturn(a*7%)\r\n}\r\npublic class golden{\r\nint num1;int discount;\r\n(public golden){}\r\npublic golden(int a){\r\nnum1=a,discount=b}\r\nsystem.out.println(\"enter he total amount purches\");\r\nscanner input= new scanner (system.in);\r\ninput a=next.int();\r\nif(a>30000){\r\nsystem.out.println(\"this is agolden\");\r\nreturn(30000*4%||5%||6%);\r\n}\r\npublic class premium{\r\nint num2, discount;.\r\npublic premium (){}\r\npublic premium (int c,int d){\r\nnum2=c;\r\ndiscount =d;\r\n}\r\nif(c>10000)\r\nsystem.out.println(\"this is premium\");\r\nreturn(1oooo*10%);\r\n}\r\n\r\n}\r\npubic static void main (string[]args){\r\nregistered r1=new registered();\r\ngolden g1=new golden ();\r\npremium p1=new premium();\r\n}\r\n}', 104, 67, 4, '2019-04-24 13:43:55', '2019-05-07 15:20:44'),
(451614, 558, '1696', 104, 67, 2, '2019-04-24 13:43:55', '2019-04-24 13:43:55'),
(451637, 552, '1674', 135, 67, 0, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451638, 554, '1680', 135, 67, 0, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451639, 555, '1684', 135, 67, 2, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451640, 556, '1691', 135, 67, 0, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451641, 557, '1694', 135, 67, 2, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451642, 559, 'import java .util .scanner ;     \r\nimport java .util .ArrayList ;     \r\nPuplic class customer  {\r\npublic string name ;\r\npuplic double price  ;      \r\n Puplic customer \r\n {\r\n  Puplic customer (string n ,double s ) {\r\nthis. name =n;\r\nthis.price = s ;\r\nreturns dis = price *(7/100);\r\n}\r\n}\r\n\r\n\r\nPuplic class golden  customer  {\r\npublic string name ;\r\npuplic double price  ;                                                                                  \r\n Puplic golden customer {\r\n  Puplic golden customer  (string n ,double s ) {\r\nthis. name =n;\r\nthis.price = s ;\r\nreturn dis gc =price  *(11/100);\r\n}\r\n}\r\nPuplic class premium customer  {\r\npublic string name ;\r\npuplic double price  ;                                                                        \r\n Puplic premium customer {\r\n  Puplic premium customer  (string n ,double s ) {\r\nthis. name =n;\r\nthis.price  = s ;\r\nreturn dis pc =price  *(17/100);\r\n}\r\n}\r\npublic static void main (string []args )\r\n{\r\nsystem .out.print( enter your price \");\r\nscanner inp =new scanner (system.in )\r\nstring n =inp.next();\r\ndouble s =inp.nextDouble();\r\ndouble d=inp.nextDouble();\r\n if (d <=3000)\r\nsystem .out.println(\" discunt of golden customer= \" dis gc    ); \r\n\r\nelse if (d <=10000)\r\nsystem .out.println(\" discount of premium =\" dis pc   ); \r\nelse\r\nsystem .out.println(\" discount of customer  =\" dis \"   ); \r\n\r\nArrayList <float > price =new ArrayList <float>(  ) ; \r\nadd.price =2000;\r\nadd.price =1000;\r\nadd.price =2500;\r\nadd.price =5600;\r\n\r\nsystem .out.println(\" total discount =\" =(0,price _dis pc ) + (1,price _dis  gc   )  +     (2,price _ dis)  +  (3 ,price _dis pc )    ;   \r\n}\r\n}\r\n}', 135, 67, 4, '2019-04-24 13:45:26', '2019-05-07 15:23:20'),
(451643, 558, '1697', 135, 67, 0, '2019-04-24 13:45:26', '2019-04-24 13:45:26'),
(451746, 554, '1680', 190, 67, 0, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(451747, 555, '1684', 190, 67, 2, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(451748, 556, '1689', 190, 67, 0, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(451749, 557, '1694', 190, 67, 2, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(451750, 559, 'package company;\r\nimport java .util . scanner ();\r\npublic class category (){\r\nprivate int idcustomer ;\r\nprivate string Ncustomer ;\r\nprivate int numcategory;\r\n\r\npublic int getIDcustomer (){\r\nreturn idcustomer ;\r\n}\r\npublic void setIDcustomer (int id){\r\nthis . idcustomer =idcustomer;\r\n}\r\npublic string  getNcustomer (){\r\nreturn Ncustomer ;\r\n}\r\npublic void setNcustomer ( string Ncustomer){\r\nthis . Ncustomer =Ncustomer;\r\n}\r\npublic int getNumcategory (){\r\nreturn numcategory; \r\n}\r\npublic void setNumcategory (int numcategory){\r\nthis . numcategory =numcategory;\r\n}\r\npublic customer (){\r\n}\r\npublic customer (int id ,string n , int numc ){\r\nid=id;\r\nn= name;\r\nnumc=numcategory;\r\n}\r\n}\r\n\r\npublic class category1 extends category (){\r\n\r\nint purchase=0;\r\ndouble discound =( purchase *7)/100 ;\r\nsystem.out,println(\"discount for this customer is :\"discount);\r\nsystem.out .println (\"who make a registration on its website\");\r\n\r\n}\r\npublic class category2 extends category (){\r\ndouble discount =(purchase * 4)/100;\r\nsystem.out.println (\"discount for this customer is :\" discount);\r\nsystem.out.println (\"is colden customer who is a registered customer with total purchase amount last year is above 30000\");\r\n}\r\npublic class category3 extends category (){\r\ndouble discount =(purchase *10)\\100;\r\nsystem.out.println (\"', 190, 67, 4, '2019-04-24 14:01:46', '2019-05-07 15:28:10'),
(451751, 558, '1697', 190, 67, 0, '2019-04-24 14:01:46', '2019-04-24 14:01:46'),
(451764, 554, '1680', 159, 67, 0, '2019-04-24 14:02:52', '2019-04-24 14:02:53'),
(451765, 555, '1684', 159, 67, 2, '2019-04-24 14:02:52', '2019-04-24 14:02:53'),
(451766, 556, '1689', 159, 67, 0, '2019-04-24 14:02:52', '2019-04-24 14:02:53'),
(451767, 557, '1694', 159, 67, 2, '2019-04-24 14:02:52', '2019-04-24 14:02:53'),
(451768, 559, 'import java .util.Scanner;\r\npublic static void main( String{} args){\r\nScanner input= new Scanner(system.in);\r\nint n= print.next();\r\nfor( i=0;i<=amount;i++)\r\n{\r\nif(i%10==0)\r\n total amount+=amount ;\r\n}\r\nSystem.out.print (\"  total amount of purchasing \");                                                                                                               \r\n }                                                   \r\n}\r\npublic class customer(){\r\n public int premium;\r\npublic int  registered;\r\n private int golden\r\n \r\n}\r\nclass customer(){\r\nint premium;\r\nint registered;\r\nint golden;\r\n}\r\npublic void setpremium()\r\nn.this();\r\nSystem.out.print(\" total amount\")\r\n}\r\n}', 159, 67, 3, '2019-04-24 14:02:52', '2019-05-07 15:30:05'),
(451769, 558, '1697', 159, 67, 0, '2019-04-24 14:02:52', '2019-04-24 14:02:53'),
(451860, 554, '1680', 406, 67, 0, '2019-04-24 14:04:01', '2019-04-24 14:04:01'),
(451861, 555, '1684', 406, 67, 2, '2019-04-24 14:04:01', '2019-04-24 14:04:01'),
(451862, 556, '1688', 406, 67, 2, '2019-04-24 14:04:01', '2019-04-24 14:04:01'),
(451863, 557, '1694', 406, 67, 2, '2019-04-24 14:04:01', '2019-04-24 14:04:01'),
(451864, 559, 'import java.util.scanner;\r\n\r\npublic class customer \r\n{\r\n   int total purchase;\r\n   double offer;\r\n   int shoppingCurt; \r\n    customer (int TP,double NewOffer,int NewShoppingCurt ) \r\n      {\r\n             TP=total purchase;\r\n             NewOffer=offer\r\n             shoppingCurt=NewShoppingCurt;\r\n      }\r\n}\r\npublic class RegistteredCustomer extends customer \r\n{\r\n   countamount(int amount)\r\n  {\r\n   int purchasing = amount*0.07\r\n   return  purchasing;   \r\n   }  \r\n}\r\npublic class GoldenCustomer extends customer \r\n{\r\ncountamount(int amount)\r\n{\r\n   int purchasing = amount*0.11\r\n   return  purchasing;                                                                                        \r\n}\r\npublic class PremiumCustomer extends Customer \r\n{\r\ncountamount(int amount)\r\n{\r\n   int purchasing = amount*0.17\r\n  return  purchasing;\r\n}\r\npublic static void main(String[] args) {', 406, 67, 5, '2019-04-24 14:04:01', '2019-05-07 15:31:37'),
(451865, 558, '1696', 406, 67, 2, '2019-04-24 14:04:01', '2019-04-24 14:04:01'),
(451878, 554, '1680', 415, 67, 0, '2019-04-24 14:04:43', '2019-04-24 14:04:44'),
(451879, 555, '1684', 415, 67, 2, '2019-04-24 14:04:43', '2019-04-24 14:04:44'),
(451880, 556, '1689', 415, 67, 0, '2019-04-24 14:04:43', '2019-04-24 14:04:44'),
(451881, 557, '1694', 415, 67, 2, '2019-04-24 14:04:43', '2019-04-24 14:04:44'),
(451882, 559, 'public calss Customer()\r\n {\r\nprotected double descoun;\r\nprotected double amount;\r\nprotected double total;           //total prurchased\r\n}\r\npublic calss Registered extends Customer()\r\n{\r\npublic void setamount(int c )\r\n{\r\namount=c;\r\n}\r\npublic double gettotal()\r\n{\r\nreturn(c-c*7/100);\r\n}\r\n}\r\npublic class Golden extendes Customer ()\r\n{\r\npublic void setamount(int p)\r\n{\r\namount=p;\r\n}\r\npublic double gettotal()\r\n{\r\nreturn(p-p*4/100);\r\n} \r\n}                                                                    \r\n  public Class premium extends Customer()\r\n{\r\npublic void setamount(double f)\r\n{\r\namount=f;\r\n}\r\npublic double gettotal()\r\n{\r\nreturn(f-f*7/100);\r\n}\r\n}                                                   \r\n************************************************************\r\nmain class\r\nRegistered o1=new Registered();\r\npremium o2=new premium ();\r\ngolden o3=new golend();\r\no2.setamount(2000);\r\nSystem.out.println(\"total purchasing to premium cutomer is\"+o2.gettotal)\r\no1.setamount(1000);\r\nSystem.out.println(\"total purchasing to registered cutomer is\"+o1.gettotal)\r\no3.setamount(2500);\r\nSystem.out.println(\"total purchasing to golden cutomer is\"+o3.gettotal)\r\no2.setamount(5600);\r\nSystem.out.println(\"total purchasing to premium cutomer is\"+o3.gettotal)', 415, 67, 4, '2019-04-24 14:04:43', '2019-05-07 15:33:24'),
(451883, 558, '1697', 415, 67, 0, '2019-04-24 14:04:44', '2019-04-24 14:04:44'),
(451884, 554, '1680', 343, 67, 0, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(451885, 555, '1684', 343, 67, 2, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(451886, 556, '1688', 343, 67, 2, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(451887, 557, '1694', 343, 67, 2, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(451888, 559, 'public class customer {\r\n static double AmountOfPurchasing;\r\n \r\n public static double Assume (int amount , int pres)\r\n{ \r\n   double xamount ;\r\n   xamount = (amount * prea) / 100.00 ;\r\n   return xamount ;\r\n}\r\n}\r\n\r\n\r\npublic class Registered extends customer {\r\n\r\n static final int r = 7 ; \r\n}\r\n\r\npublic class Golden extends customer {\r\n static final int g = 4 ; \r\n}\r\n\r\npublic class premium extends customer {\r\n\r\nstatic final int p = 10 ;\r\n}\r\npublic class Test { \r\npublic static void main(String[] args) {\r\n\r\n static double AmountOfPurchasing=0.0;\r\n\r\n premium p1 = new premium ();\r\n Registered r = new Registered();\r\n Golden g = new Golden() ;\r\n premium p2 = new premium ();\r\n\r\nAmountOfPurchasing = p1.Assume(2000, p1.p) ;\r\nAmountOfPurchasing += r.Assume (1000 , r.r) ;\r\n AmountOfPurchasing += g.Assume (2500 , g.g) ;\r\n AmountOfPurchasing += p2.Assume (5600 , p2.p) ;\r\n\r\nSystem.out.println (\" the total amount of purchasing for company : \" +  AmountOfPurchasing ) ;\r\n\r\n}\r\n}', 343, 67, 6, '2019-04-24 14:05:28', '2019-05-07 15:36:44'),
(451889, 558, '1696', 343, 67, 2, '2019-04-24 14:05:28', '2019-04-24 14:05:28'),
(451962, 554, '1681', 93, 67, 2, '2019-04-24 14:06:44', '2019-04-24 14:06:44'),
(451963, 555, '1684', 93, 67, 2, '2019-04-24 14:06:44', '2019-04-24 14:06:44'),
(451964, 556, '1689', 93, 67, 0, '2019-04-24 14:06:44', '2019-04-24 14:06:44'),
(451965, 557, '1694', 93, 67, 2, '2019-04-24 14:06:44', '2019-04-24 14:06:44'),
(451966, 559, 'public class customer{\r\n  String name;\r\n   int ID;\r\n    double purchasingAmount;\r\npublic customer(){\r\n}\r\npublic customer(String n,int i,double p){\r\nname=n;\r\nID=i;\r\npurchasingAmount=p;\r\n\r\n}\r\npublic double discount(int dis,double p,double dism){\r\nint discpercent =dis;\r\ndouble disamount=dism;\r\ndicm=(p*dis)\\100;\r\n\r\n}\r\n\r\n}                                                                                                                \r\n     public class Regcostomer extends customer{\r\nsuper(n,i,p);\r\n@overrid\r\nsuper. discount(dis, p, dism);\r\npublic void setdiscpercent (int dis){\r\ndiscprecent=dis;\r\n}\r\npublic Regcustomer(){}\r\npublic Regcustomer(String n,int i,double p,double dis,double dism){\r\nsuper(n,i,p);\r\ndisprecent=dis;\r\ndisamount=dism;\r\ndism=(p*dis)\\100;\r\np=p-dim;\r\n}\r\n}\r\npublic class golen extends customer{\r\nsuper(n,i,p);\r\ndism=(p2*dis)\\100;\r\np2=p2-dim;\r\n}\r\npublic class premuim extends customer{\r\n\r\ndism=(p*dis)\\100;\r\np=p-dim;}', 93, 67, 4, '2019-04-24 14:06:44', '2019-05-07 15:39:07'),
(451967, 558, '1699', 93, 67, 0, '2019-04-24 14:06:44', '2019-04-24 14:06:44'),
(451992, 554, '1680', 118, 67, 0, '2019-04-24 14:07:46', '2019-04-24 14:07:47'),
(451993, 555, '1684', 118, 67, 2, '2019-04-24 14:07:46', '2019-04-24 14:07:47'),
(451994, 556, '1689', 118, 67, 0, '2019-04-24 14:07:46', '2019-04-24 14:07:47'),
(451995, 557, '1694', 118, 67, 2, '2019-04-24 14:07:46', '2019-04-24 14:07:47'),
(451996, 559, 'IMPORT java.util.*\r\nscanner s= new scanner(system.in);\r\npublic static  void main (string arr []args){\r\npublic class customer{\r\ndouble calc (double pursh) {}\r\n}\r\npublic class reg extends customer{\r\ndouble calc (double pursh)\r\nreturn pursh_(pursh*7 /100);}\r\npublic class golden extends customer\r\n}\r\n\r\n\r\n}', 118, 67, 3, '2019-04-24 14:07:46', '2019-05-07 15:40:04'),
(451997, 558, '1697', 118, 67, 0, '2019-04-24 14:07:46', '2019-04-24 14:07:47'),
(452010, 554, '1681', 1226, 67, 2, '2019-04-24 14:16:59', '2019-04-24 14:17:00'),
(452011, 555, '1684', 1226, 67, 2, '2019-04-24 14:16:59', '2019-04-24 14:17:00'),
(452012, 556, '1691', 1226, 67, 0, '2019-04-24 14:16:59', '2019-04-24 14:17:00'),
(452013, 557, '1694', 1226, 67, 2, '2019-04-24 14:16:59', '2019-04-24 14:17:00'),
(452014, 559, 'public class customer {\r\ndouble amount ;\r\n\r\npublic double discount (double ){\r\n discount = amount * m \r\n}\r\n\\\\ public void set ( double d ) {\r\ndiscount = d ;\r\n}\r\npublic registered customer extends customer {\r\n@override \r\npublic double discount (double) {\r\ndiscount = amount * 0.07;\r\n}\r\n\r\npublic golden customer extends customer {\r\n@override \r\npublic double discount (double) {\r\ndiscount = amount * 0.04;\r\n}\r\n\r\npublic premium customer extends customer {\r\n@override \r\npublic double discount (double) {\r\ndiscount = amount * 0.01;\r\n}\r\npublic premium respectively customer extends customer {\r\n\r\n}\r\npublic static void main ( string [] args ) {  \r\ndouble total ;\r\na1. registerd customer  =new registerd customer;\r\na2.golden customer= new golden customer;\r\na3.premium customer = new premium customer;\r\na4. premium respectively customer = new premium respectively customer;\r\n\r\n system.out . print ln ( total amount =  a1.discount (1000) + a3.discount (2000) +  a2.discount (2500) + 5600 );\r\n\\\\system.out . print ln (  a2.discount (2500));\r\n\\\\system.out . print ln (  a3.discount (2000));', 1226, 67, 5, '2019-04-24 14:16:59', '2019-05-07 15:42:58'),
(452015, 558, '1696', 1226, 67, 2, '2019-04-24 14:16:59', '2019-04-24 14:17:00'),
(452095, 561, '1700', 1081, 70, 2, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452096, 562, '1704', 1081, 70, 0, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452097, 563, '1708', 1081, 70, 0, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452098, 564, '1712', 1081, 70, 0, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452099, 565, '1716', 1081, 70, 2, '2019-05-13 04:32:29', '2019-05-13 04:32:30'),
(452100, 566, '1720', 1081, 70, 0, '2019-05-13 04:32:29', '2019-05-13 04:32:30'),
(452101, 567, '1724', 1081, 70, 2, '2019-05-13 04:32:29', '2019-05-13 04:32:30'),
(452102, 568, '6', 1081, 70, NULL, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452103, 569, '6', 1081, 70, NULL, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452104, 570, '6', 1081, 70, NULL, '2019-05-13 04:32:29', '2019-05-13 04:32:29'),
(452171, 570, '4', 1021, 71, NULL, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452172, 569, '5', 1021, 71, NULL, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452173, 568, '5', 1021, 71, NULL, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452174, 566, '1721', 1021, 71, 0, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452175, 565, '1716', 1021, 71, 2, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452176, 564, '1715', 1021, 71, 0, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452177, 563, '1709', 1021, 71, 0, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452178, 562, '1704', 1021, 71, 0, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452179, 561, '1700', 1021, 71, 2, '2019-05-13 06:02:50', '2019-05-13 06:02:50'),
(452218, 561, '1700', 897, 70, 2, '2019-05-13 06:08:03', '2019-05-13 06:08:31'),
(452219, 568, NULL, 897, 70, 0, '2019-05-13 06:08:03', '2019-06-23 06:26:25'),
(452220, 569, NULL, 897, 70, 0, '2019-05-13 06:08:03', '2019-06-23 06:26:25'),
(452221, 570, NULL, 897, 70, 0, '2019-05-13 06:08:03', '2019-06-23 06:26:25'),
(452310, 568, NULL, 912, 70, 0, '2019-05-13 06:14:08', '2019-06-23 06:19:59'),
(452311, 569, NULL, 912, 70, 0, '2019-05-13 06:14:08', '2019-06-23 06:19:59'),
(452312, 570, NULL, 912, 70, 0, '2019-05-13 06:14:08', '2019-06-23 06:19:59'),
(455525, 561, '1701', 987, 70, 0, '2019-05-13 06:44:08', '2019-05-13 06:44:09'),
(455526, 562, '1705', 987, 70, 2, '2019-05-13 06:44:08', '2019-05-13 06:44:09'),
(455527, 563, '1709', 987, 70, 0, '2019-05-13 06:44:08', '2019-05-13 06:44:09'),
(455528, 564, '1713', 987, 70, 2, '2019-05-13 06:44:08', '2019-05-13 06:44:09'),
(455529, 565, '1717', 987, 70, 0, '2019-05-13 06:44:08', '2019-05-13 06:44:09'),
(455530, 566, '1722', 987, 70, 2, '2019-05-13 06:44:09', '2019-05-13 06:44:09'),
(455531, 567, '1724', 987, 70, 2, '2019-05-13 06:44:09', '2019-05-13 06:44:09'),
(455532, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 987, 70, 1, '2019-05-13 06:44:09', '2019-06-23 06:03:58'),
(455533, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative .\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 987, 70, 0, '2019-05-13 06:44:09', '2019-06-23 06:03:58'),
(455534, 570, 'int f (int n)\r\n{\r\nif(n == 1)\r\nreturn 1;\r\nelse\r\nreturn n * f (n -1)\r\n}', 987, 70, 2, '2019-05-13 06:44:09', '2019-06-23 06:03:58'),
(455702, 561, '1703', 903, 70, 0, '2019-05-13 06:45:06', '2019-05-13 06:45:06'),
(455703, 562, '1704', 903, 70, 0, '2019-05-13 06:45:06', '2019-05-13 06:45:06'),
(455704, 563, '1708', 903, 70, 0, '2019-05-13 06:45:06', '2019-05-13 06:45:06'),
(455705, 564, '1713', 903, 70, 2, '2019-05-13 06:45:06', '2019-05-13 06:45:06'),
(455706, 565, '1717', 903, 70, 0, '2019-05-13 06:45:06', '2019-05-13 06:45:06'),
(455707, 566, '1723', 903, 70, 0, '2019-05-13 06:45:06', '2019-05-13 06:45:07'),
(455708, 567, '1724', 903, 70, 2, '2019-05-13 06:45:06', '2019-05-13 06:45:07'),
(455709, 568, 'cin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 903, 70, 0, '2019-05-13 06:45:06', '2019-06-23 06:00:21'),
(455710, 569, 'int n;                               \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;', 903, 70, 0, '2019-05-13 06:45:06', '2019-06-23 06:00:21'),
(455711, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact (int fact=1)\r\nint main ()\r\n{\r\nint n ;\r\ncin>> n;\r\n\r\nint i;\r\ncout<<\"the fact of the numper is\"<<fact;\r\n\r\n}\r\n\r\n\r\n{\r\nint fact (int fact=1)\r\nint n ;\r\nint i;\r\ncin>> n;\r\nfor(i=1;i<=n; i++)\r\nfact=fact*n\r\nreturn fact;\r\n                         \r\n}', 903, 70, 0, '2019-05-13 06:45:06', '2019-06-23 06:00:21'),
(456385, 561, '1700', 983, 70, 2, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456386, 562, '1705', 983, 70, 2, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456387, 563, '1711', 983, 70, 2, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456388, 564, '1712', 983, 70, 0, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456389, 565, '1717', 983, 70, 0, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456390, 566, '1722', 983, 70, 2, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456391, 567, '1724', 983, 70, 2, '2019-05-13 06:48:09', '2019-05-13 06:48:10'),
(456392, 568, 'float income ;\r\ncout<<\"Enter your monthly  income  \";\r\ncin>>income;\r\nf (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 983, 70, 2, '2019-05-13 06:48:09', '2019-06-23 06:01:42'),
(456393, 569, 'int n;\r\ncout<<\"Enter a non-negative integer : \";\r\ncin>>n;\r\nif(n<0);\r\ndo {\r\ncout<<\"The integer you entered is negative \" <<endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}           while (n<0);', 983, 70, 1, '2019-05-13 06:48:09', '2019-06-23 06:01:42'),
(456394, 570, 'int fact (int n)\r\n{\r\nif(n==1||n==0)\r\nreturn 1;\r\nelse\r\nreturn n*fact(n-1);\r\n}', 983, 70, 2, '2019-05-13 06:48:09', '2019-06-23 06:01:42'),
(456462, 561, '1700', 910, 70, 2, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456463, 562, '1704', 910, 70, 0, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456464, 563, '1711', 910, 70, 2, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456465, 564, '1712', 910, 70, 0, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456466, 565, '1716', 910, 70, 2, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456467, 566, '1722', 910, 70, 2, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456468, 567, '1724', 910, 70, 2, '2019-05-13 06:48:29', '2019-05-13 06:48:30'),
(456469, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if(income<1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if(income<2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 910, 70, 2, '2019-05-13 06:48:29', '2019-06-23 06:14:13'),
(456470, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \"<<endl;\r\ncin >> n;\r\n}\r\n}\r\nwhile(n<0);', 910, 70, 2, '2019-05-13 06:48:29', '2019-06-23 06:14:13'),
(456471, 570, 'int Factorial(int n)\r\n{\r\nif(n==1||n==0)return 1;\r\nreturn n*Factorial(n-1);\r\n}', 910, 70, 2, '2019-05-13 06:48:29', '2019-06-23 06:14:13'),
(456997, 561, '1700', 976, 70, 2, '2019-05-13 06:50:38', '2019-05-13 09:14:34'),
(456998, 568, NULL, 976, 70, NULL, '2019-05-13 06:50:38', '2019-05-13 06:50:38'),
(456999, 569, NULL, 976, 70, NULL, '2019-05-13 06:50:38', '2019-05-13 06:50:38'),
(457000, 570, NULL, 976, 70, NULL, '2019-05-13 06:50:38', '2019-05-13 06:50:38'),
(457216, 561, '1700', 904, 70, 2, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457217, 562, '1705', 904, 70, 2, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457218, 563, '1711', 904, 70, 2, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457219, 564, '1713', 904, 70, 2, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457220, 565, '1719', 904, 70, 0, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457221, 566, '1720', 904, 70, 0, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457222, 567, '1725', 904, 70, 0, '2019-05-13 06:51:09', '2019-05-13 09:28:16'),
(457223, 568, 'cout<<\"you are going farther into debt every month.\"<<endl;\r\n               elseif(income>=0.0&&income<1200.00)', 904, 70, NULL, '2019-05-13 06:51:09', '2019-05-13 06:51:09');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(457224, 569, 'int n;\r\ncout <<\"enter a negative integer:\";\r\ncin>>n;\r\nwhile(n<0)\r\n{\r\ncout<<the integer you entered is negative.\"<<endl;\r\n}', 904, 70, NULL, '2019-05-13 06:51:09', '2019-05-13 06:51:09'),
(457225, 570, '#include <iostream>\r\nusing namespace std;\r\nlong long get factorial \r\nint(n)\r\nif(x==0)\r\nreturn1;\r\nelse\r\nget factorial(n-l)\r\nint main ()\r\nint x;\r\ncin>>x;\r\nlong long factorial=get fact ;\r\ncout<<fact :\r\nsystem (\"pause\")', 904, 70, NULL, '2019-05-13 06:51:09', '2019-05-13 06:51:09'),
(460418, 561, '1700', 984, 70, 2, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460419, 562, '1707', 984, 70, 0, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460420, 563, '1711', 984, 70, 2, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460421, 564, '1713', 984, 70, 2, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460422, 565, '1717', 984, 70, 0, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460423, 566, '1720', 984, 70, 0, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460424, 567, '1724', 984, 70, 2, '2019-05-13 07:01:10', '2019-05-13 07:01:10'),
(460425, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 984, 70, 1, '2019-05-13 07:01:10', '2019-06-23 06:29:09'),
(460426, 569, 'int n ;\r\n cout << \"Enter a non-negative integer: \";\r\ncin >> n;   \r\ndo \r\n{\r\n cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;       \r\n}\r\nwhile(n < 0) ;', 984, 70, 1.5, '2019-05-13 07:01:10', '2019-06-23 06:29:09'),
(460427, 570, '#include<iostream>\r\nusing namespace std ;\r\nint fac(int n)\r\nint main ()\r\n{\r\n    if(n==0 || n==1)\r\nreturn 1 ;\r\nelse \r\nreturn n * fac(n-1) ;\r\n}\r\nint fac(int n)\r\n{\r\ncin >> n ;\r\ncout << fac(n) ;\r\n}', 984, 70, 2, '2019-05-13 07:01:10', '2019-06-23 06:29:09'),
(461028, 561, '1700', 1018, 70, 2, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461029, 561, '1700', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461030, 562, '1705', 1018, 70, 2, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461031, 562, '1705', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461032, 563, '1710', 1018, 70, 0, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461033, 563, '1710', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461034, 564, '1712', 1018, 70, 0, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461035, 564, '1712', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461036, 565, '1718', 1018, 70, 0, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461037, 565, '1718', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461038, 566, '1721', 1018, 70, 0, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461039, 566, '1721', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461040, 567, '1725', 1018, 70, 0, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461041, 567, '1725', 1018, 70, NULL, '2019-05-13 07:03:13', '2019-05-13 07:03:13'),
(461042, 568, 'float income;\r\ncin>>income  ;\r\nif(income  <0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\n           else if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1018, 70, 0, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461043, 568, 'float income;\r\ncin>>income  ;\r\nif(income  <0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\n           else if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1018, 70, 0, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461044, 569, 'jji', 1018, 70, 0, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461045, 569, 'jji', 1018, 70, 0, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461046, 570, '# include<iostream>\r\n\r\nusing namespace  std;\r\n\r\nint fact(int n)\r\n{if(n<=1)\r\nreturn 1;\r\nelse\r\nreturn n*fact(n--1))\r\n}\r\n\r\nint  main()\r\n\r\n{int n;\r\ncin>>n;\r\n\r\ncout<<fact(n);\r\nreturn 0;\r\n        }', 1018, 70, 2, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461047, 570, '# include<iostream>\r\n\r\nusing namespace  std;\r\n\r\nint fact(int n)\r\n{if(n<=1)\r\nreturn 1;\r\nelse\r\nreturn n*fact(n--1))\r\n}\r\n\r\nint  main()\r\n\r\n{int n;\r\ncin>>n;\r\n\r\ncout<<fact(n);\r\nreturn 0;\r\n        }', 1018, 70, 2, '2019-05-13 07:03:13', '2019-06-23 06:30:43'),
(461175, 561, '1700', 913, 70, 2, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461176, 562, '1704', 913, 70, 0, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461177, 563, '1711', 913, 70, 2, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461178, 564, '1712', 913, 70, 0, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461179, 565, '1716', 913, 70, 2, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461180, 566, '1722', 913, 70, 2, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461181, 567, '1727', 913, 70, 0, '2019-05-13 07:03:46', '2019-05-13 07:03:46'),
(461182, 568, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income > 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income > 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl; \r\nreturn 0; }', 913, 70, 0, '2019-05-13 07:03:46', '2019-06-23 06:32:55'),
(461183, 569, '#include<iostream>\r\nusing namespace std;\r\nint main() {\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;}\r\n}  while (n < 0);         \r\nreturn 0; }', 913, 70, 2, '2019-05-13 07:03:46', '2019-06-23 06:32:55'),
(461184, 570, '#include<iostream>\r\nusing namespace std;\r\n\r\nint fact(int num){\r\nif(num<=1)\r\n   return (1);\r\nreturn num*fact(num-1);} \r\nint main() {\r\nint n;\r\ncin>>n;\r\nint f;\r\nf=fact(n);\r\ncout<<f;\r\nreturn 0; }', 913, 70, 2, '2019-05-13 07:03:46', '2019-06-23 06:32:55'),
(461330, 561, '1700', 981, 70, 2, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461331, 562, '1705', 981, 70, 2, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461332, 563, '1709', 981, 70, 0, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461333, 564, '1713', 981, 70, 2, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461334, 565, '1716', 981, 70, 2, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461335, 566, '1722', 981, 70, 2, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461336, 567, '1727', 981, 70, 0, '2019-05-13 07:04:16', '2019-05-13 07:04:17'),
(461337, 568, '#include<iostream>\r\nusing namespace std;\r\nint mian()\r\n{\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;\r\n\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;\r\n\r\n\r\n}', 981, 70, 1, '2019-05-13 07:04:16', '2019-06-23 06:33:49'),
(461338, 569, '#include<iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint n;\r\ncout<<\"\"Enter a non-negative integer: \"<<endl;\r\ncin>>n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0);\r\n\r\n}', 981, 70, 1.5, '2019-05-13 07:04:16', '2019-06-23 06:33:49'),
(461339, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int d)\r\n{\r\nif(d==1&&d==0)\r\n{\r\nreturn 1; \r\n}\r\nelse\r\n{\r\nreturn d*fact(d-1);\r\nint main()\r\n{\r\nint n;\r\ncin >>n;\r\nint x=fact(n);\r\ncout<<x<<endl;', 981, 70, 2, '2019-05-13 07:04:16', '2019-06-23 06:33:50'),
(461390, 561, '1700', 898, 70, 2, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461391, 562, '1704', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461392, 563, '1709', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461393, 564, '1712', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461394, 565, '1719', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461395, 566, '1720', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461396, 567, '1727', 898, 70, 0, '2019-05-13 07:04:26', '2019-05-13 07:04:26'),
(461397, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){                             \r\n      float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (ncome >= 0.0 && income < 1200.00 )\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;        \r\nreturn 0;\r\n}', 898, 70, 1, '2019-05-13 07:04:26', '2019-06-23 06:36:47'),
(461398, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;            \r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}                 \r\nwhile(n<0);      \r\n\r\nreturn 0;\r\n}', 898, 70, 1.5, '2019-05-13 07:04:26', '2019-06-23 06:36:47'),
(461399, 570, 'int factorial(int n){\r\nif(n==0)\r\nreturn 1;\r\nelse{\r\nreturn n*f(n-1);\r\n}\r\n}', 898, 70, 2, '2019-05-13 07:04:26', '2019-06-23 06:36:47'),
(461457, 561, '1700', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461458, 562, '1705', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461459, 563, '1711', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461460, 564, '1713', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461461, 565, '1716', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461462, 566, '1722', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461463, 567, '1724', 1024, 70, 2, '2019-05-13 07:04:36', '2019-05-13 07:04:36'),
(461464, 568, 'float income;\r\ncout << \"Enter your monthly income:\";\r\ncin >> income;\r\nif (income <0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1024, 70, 2, '2019-05-13 07:04:36', '2019-06-23 06:50:30'),
(461465, 569, 'int n;\r\ncout << \"Enter a non-negative integer:\";\r\ndo{\r\ncin >> n;\r\nif (n<0) {\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer:\";\r\n}\r\n}while(n<0);', 1024, 70, 2, '2019-05-13 07:04:36', '2019-06-23 06:50:30'),
(461466, 570, 'int fact (int x){\r\n if(x <= 1)\r\n  return 1;\r\nreturn x*fact(x-1);\r\n}', 1024, 70, 2, '2019-05-13 07:04:36', '2019-06-23 06:50:30'),
(461467, 561, '1700', 943, 70, 2, '2019-05-13 07:04:39', '2019-05-13 07:04:40'),
(461468, 562, '1705', 943, 70, 2, '2019-05-13 07:04:39', '2019-05-13 07:04:40'),
(461469, 563, '1711', 943, 70, 2, '2019-05-13 07:04:39', '2019-05-13 07:04:40'),
(461470, 564, '1713', 943, 70, 2, '2019-05-13 07:04:39', '2019-05-13 07:04:40'),
(461471, 565, '1717', 943, 70, 0, '2019-05-13 07:04:39', '2019-05-13 07:04:40'),
(461472, 566, '1722', 943, 70, 2, '2019-05-13 07:04:40', '2019-05-13 07:04:40'),
(461473, 567, '1724', 943, 70, 2, '2019-05-13 07:04:40', '2019-05-13 07:04:40'),
(461474, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 943, 70, 2, '2019-05-13 07:04:40', '2019-06-23 06:50:48'),
(461475, 569, 'int n;\r\ndo {\r\n     cout << \"Enter a non-negative integer: \";\r\n     cin >> n;\r\n     if (n<0){\r\n           cout << \"The integer you entered is negative.\" << endl;\r\n     }\r\n}  \r\nwhile (n<0);', 943, 70, 2, '2019-05-13 07:04:40', '2019-06-23 06:50:48'),
(461476, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\n       if (n==0){\r\n           return 1;\r\n       }\r\n       else {\r\n            return (n*(fact(n-1)));\r\n        }\r\n}\r\nint main (){\r\n       int n;\r\n       cin >>n;\r\n       cout << fact (n);\r\n}', 943, 70, 2, '2019-05-13 07:04:40', '2019-06-23 06:50:48'),
(461591, 561, '1700', 1030, 70, 2, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461592, 562, '1705', 1030, 70, 2, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461593, 563, '1708', 1030, 70, 0, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461594, 564, '1712', 1030, 70, 0, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461595, 565, '1717', 1030, 70, 0, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461596, 566, '1720', 1030, 70, 0, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461597, 567, '1725', 1030, 70, 0, '2019-05-13 07:04:58', '2019-05-13 07:04:58'),
(461598, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;     \r\nelse if(income<1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if(income <2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1030, 70, 2, '2019-05-13 07:04:58', '2019-06-23 06:18:45'),
(461599, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}      \r\nwhile(n<0); \r\n}', 1030, 70, 2, '2019-05-13 07:04:58', '2019-06-23 06:18:45'),
(461600, 570, 'int factorial(int x)\r\n{\r\n     if(x==0)\r\nreturn 1;\r\nelse\r\nreturn    x*factorial(x-1);\r\n}', 1030, 70, 2, '2019-05-13 07:04:58', '2019-06-23 06:18:45'),
(461642, 561, '1700', 914, 70, 2, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461643, 562, '1704', 914, 70, 0, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461644, 563, '1711', 914, 70, 2, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461645, 564, '1712', 914, 70, 0, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461646, 565, '1717', 914, 70, 0, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461647, 566, '1722', 914, 70, 2, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461648, 567, '1727', 914, 70, 0, '2019-05-13 07:05:08', '2019-05-13 07:05:09'),
(461649, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 914, 70, 0, '2019-05-13 07:05:08', '2019-06-23 06:10:21'),
(461650, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\ndo{cout<< \"The integer you entered is negative.\" << endl;}\r\nwhile(n<0)\r\n\r\n}', 914, 70, 1, '2019-05-13 07:05:09', '2019-06-23 06:10:21'),
(461651, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)   \r\n{\r\nif(n==0||n==1)\r\nreturn 1;\r\nelse return n*fact(n-1);\r\n\r\n\r\n}int main()\r\n{\r\ncout<<fact(n)<<endl;\r\nreturn 0;\r\n}', 914, 70, 2, '2019-05-13 07:05:09', '2019-06-23 06:10:21'),
(461898, 561, '1700', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461899, 562, '1705', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461900, 563, '1711', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461901, 564, '1713', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461902, 565, '1716', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461903, 566, '1722', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461904, 567, '1724', 1019, 70, 2, '2019-05-13 07:05:42', '2019-05-13 07:05:42'),
(461905, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1019, 70, 2, '2019-05-13 07:05:42', '2019-06-23 06:11:13'),
(461906, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ndo{\r\ncin >> n;\r\nif (n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";}\r\n\r\n}while (n < 0)', 1019, 70, 2, '2019-05-13 07:05:42', '2019-06-23 06:11:13'),
(461907, 570, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(n)\r\n{\r\nif (n==0||n==1)\r\nreturn 1;\r\nreturn n*fact(n-1);\r\n}\r\nint main(){\r\nint num;\r\ncin>>num;\r\ncout<<fact(num);\r\nreturn 0;\r\n}', 1019, 70, 2, '2019-05-13 07:05:42', '2019-06-23 06:11:13'),
(462048, 561, '1700', 944, 70, 2, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462049, 562, '1707', 944, 70, 0, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462050, 563, '1711', 944, 70, 2, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462051, 564, '1712', 944, 70, 0, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462052, 565, '1716', 944, 70, 2, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462053, 566, '1722', 944, 70, 2, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462054, 567, '1724', 944, 70, 2, '2019-05-13 07:06:07', '2019-05-13 07:06:08'),
(462055, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;                     \r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (  income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 944, 70, 1.5, '2019-05-13 07:06:07', '2019-06-23 06:10:48'),
(462056, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}           \r\nwhile(n<0)  \r\n}', 944, 70, 2, '2019-05-13 07:06:07', '2019-06-23 06:10:48'),
(462057, 570, 'long long fact(long long x)\r\n{\r\nif(x<=1)  return 1;\r\nreturn x * fact(x-1);\r\n}\r\n}', 944, 70, 2, '2019-05-13 07:06:07', '2019-06-23 06:10:48'),
(462744, 561, '1700', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462745, 562, '1705', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462746, 563, '1711', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462747, 564, '1713', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462748, 565, '1716', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462749, 566, '1722', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462750, 567, '1724', 975, 70, 2, '2019-05-13 07:08:21', '2019-05-13 07:08:22'),
(462751, 568, 'float income;\r\n\r\ncout << \"Enter your monthly income: \";\r\n\r\ncin >> income;\r\n\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\n\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\n\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\n\r\nelse\r\ncout << \"You are well off.\" << endl;', 975, 70, 1, '2019-05-13 07:08:21', '2019-06-23 06:13:44'),
(462752, 569, 'int n;\r\n\r\ncout << \"Enter a non-negative integer: \";\r\n\r\ncin >> n;\r\n\r\n\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}\r\nwhile (n < 0);\r\n}', 975, 70, 1.5, '2019-05-13 07:08:21', '2019-06-23 06:13:44'),
(462753, 570, '#include <iostream>\r\nusing namespace std;\r\nint Factorial(int x)\r\n{\r\nif(x==0)\r\n	return 1;\r\n    return(x*Factorial(x-1));\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<Factorial(x);\r\n}', 975, 70, 2, '2019-05-13 07:08:21', '2019-06-23 06:13:44'),
(463085, 561, '1702', 1036, 70, 0, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463086, 562, '1705', 1036, 70, 2, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463087, 563, '1710', 1036, 70, 0, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463088, 564, '1713', 1036, 70, 2, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463089, 565, '1717', 1036, 70, 0, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463090, 566, '1721', 1036, 70, 0, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463091, 567, '1724', 1036, 70, 2, '2019-05-13 07:09:13', '2019-05-13 07:09:14'),
(463092, 568, 'if (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;', 1036, 70, NULL, '2019-05-13 07:09:14', '2019-05-13 07:09:14'),
(463093, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\nif(n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}  \r\nwhile(n>0)\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 1036, 70, NULL, '2019-05-13 07:09:14', '2019-05-13 07:09:14'),
(463094, 570, '#include<iostream>\r\nusing namespac std;\r\nint fact(int n) \r\n{\r\nif (n>0)\r\nreturn n*fact(n-1);\r\nelse\r\nreturn -1;\r\n}', 1036, 70, NULL, '2019-05-13 07:09:14', '2019-05-13 07:09:14'),
(463318, 561, '1700', 990, 70, 2, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463319, 562, '1707', 990, 70, 0, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463320, 563, '1711', 990, 70, 2, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463321, 564, '1713', 990, 70, 2, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463322, 565, '1717', 990, 70, 0, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463323, 566, '1720', 990, 70, 0, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463324, 567, '1724', 990, 70, 2, '2019-05-13 07:10:00', '2019-05-13 07:10:01'),
(463325, 568, '#include<iostream>\r\nusing namespace std;\r\nint thre\r\nint main()\r\n{\r\n	double x , y ,sum =0;\r\n	cin >> x , y ;\r\n	for (int i=0 ; i <= y ; i++ )\r\n	{\r\n		sum = sum +(x,i) ;\r\n	\r\n	}\r\n		cout  << sum  <<  endl ;\r\n		system (\"pause \");\r\n		\r\n}', 990, 70, NULL, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463326, 569, 'int n;\r\ncout <<\"enter anon-negative integer:\";\r\ncin>>n;\r\nwhile(n <0)\r\n{\r\ncout<<\"the integer you entered is negative\"<<end;\r\nelse\r\ncout <<\"enter anon-negative integar\";\r\ncin >>n;\r\n}', 990, 70, NULL, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463327, 570, '#include<iostream>\r\nusing namespace std;\r\n{\r\nint fac(int n)\r\nint main()\r\nif(n==0)(n==1);\r\nreturn0; \r\n}', 990, 70, NULL, '2019-05-13 07:10:00', '2019-05-13 07:10:00'),
(463336, 561, '1702', 1035, 70, 0, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463337, 562, '1705', 1035, 70, 2, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463338, 563, '1708', 1035, 70, 0, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463339, 564, '1715', 1035, 70, 0, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463340, 565, '1716', 1035, 70, 2, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463341, 566, '1720', 1035, 70, 0, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463342, 567, '1725', 1035, 70, 0, '2019-05-13 07:10:07', '2019-05-13 07:10:07'),
(463343, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1035, 70, 2, '2019-05-13 07:10:07', '2019-06-23 06:13:06'),
(463344, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif (n<0)\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}\r\nwhile (n < 0);\r\n\r\n}', 1035, 70, 2, '2019-05-13 07:10:07', '2019-06-23 06:13:06'),
(463345, 570, '#include <iostream>\r\nusing namespace std;\r\nint fac (int x)\r\n{\r\nif (x==1)\r\nreturn 1;\r\nelse \r\nreturn x*fac(x-1);\r\n}   \r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fac(n);\r\n}', 1035, 70, 2, '2019-05-13 07:10:07', '2019-06-23 06:13:06'),
(463356, 564, '1712', 1072, 70, 0, '2019-05-13 07:10:13', '2019-05-13 07:10:26'),
(463357, 566, '1720', 1072, 70, 0, '2019-05-13 07:10:13', '2019-05-13 07:10:26'),
(463358, 567, '1727', 1072, 70, 0, '2019-05-13 07:10:13', '2019-05-13 07:10:26'),
(463359, 568, NULL, 1072, 70, NULL, '2019-05-13 07:10:13', '2019-05-13 07:10:13'),
(463360, 569, NULL, 1072, 70, NULL, '2019-05-13 07:10:13', '2019-05-13 07:10:13'),
(463361, 570, NULL, 1072, 70, NULL, '2019-05-13 07:10:13', '2019-05-13 07:10:13'),
(463584, 561, '1700', 902, 70, 2, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463585, 562, '1707', 902, 70, 0, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463586, 563, '1711', 902, 70, 2, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463587, 564, '1715', 902, 70, 0, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463588, 565, '1716', 902, 70, 2, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463589, 566, '1720', 902, 70, 0, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463590, 567, '1725', 902, 70, 0, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463591, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;\r\n}', 902, 70, NULL, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463592, 569, '#include<iosream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n<0)\r\n\r\n\r\n}', 902, 70, NULL, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(463593, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{if(n==0 | | n==1)\r\nreturn 1;\r\nelse\r\nreturn n*fact(n-1);\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\nreturn 0;\r\n}', 902, 70, NULL, '2019-05-13 07:10:59', '2019-05-13 07:10:59'),
(464242, 561, '1701', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464243, 562, '1705', 1041, 70, 2, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464244, 563, '1710', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464245, 564, '1712', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464246, 565, '1717', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464247, 566, '1720', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464248, 567, '1726', 1041, 70, 0, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464249, 568, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{    \r\n          float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 1200.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1041, 70, NULL, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464250, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ndo (\r\ncin >> n;\r\nif (n<0)\r\n{\r\n        cout << \"The integer you entered is negative.\" << endl;\r\n        cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n   }\r\nreturn 0;\r\n}', 1041, 70, NULL, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464251, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact (int number)\r\n{\r\n\r\nint main()\r\n{\r\nint n;\r\ncin >> n;\r\ncout << fact (n) << endl ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}', 1041, 70, NULL, '2019-05-13 07:12:36', '2019-05-13 07:12:36'),
(464331, 561, '1702', 954, 70, 0, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464332, 562, '1705', 954, 70, 2, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464333, 563, '1711', 954, 70, 2, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464334, 564, '1714', 954, 70, 0, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464335, 565, '1718', 954, 70, 0, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464336, 566, '1720', 954, 70, 0, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464337, 567, '1726', 954, 70, 0, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464338, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 954, 70, NULL, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464339, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}    while (n < 0);', 954, 70, NULL, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464340, 570, 'int fact(int n){\r\nif(n<0){\r\nreturn-1;\r\n}\r\nif(n==0){\r\nreturn1;\r\n}\r\nelseif(n==1){\r\nreturn1;\r\n}\r\nelse{\r\nreturn n*fact(n-1);\r\n}\r\n}', 954, 70, NULL, '2019-05-13 07:12:54', '2019-05-13 07:12:54'),
(464561, 561, '1702', 1038, 70, 0, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464562, 562, '1705', 1038, 70, 2, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464563, 563, '1708', 1038, 70, 0, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464564, 564, '1712', 1038, 70, 0, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464565, 565, '1716', 1038, 70, 2, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464566, 566, '1720', 1038, 70, 0, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464567, 567, '1725', 1038, 70, 0, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464568, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n{\r\ncout << \"You are going farther into debt every month.\" << endl;\r\n}\r\nif (income < 1200.00)\r\n{\r\ncout << \"You are living below the poverty line.\" << endl;\r\n}\r\nelse if ( income < 2500.00)\r\n{\r\ncout << \"You are living in moderate comfort.\" << endl;\r\n}\r\nelse if (income >= 2500.00)\r\n{\r\ncout << \"You are well off.\" << endl;\r\n}', 1038, 70, NULL, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464569, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif (n<0)\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile (n < 0) ;\r\n}', 1038, 70, NULL, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464570, 570, 'int fact (int x)\r\n{\r\nif (x==1)\r\nretutn 1;\r\nelse\r\nreturn x*fact(x-1)\r\n}', 1038, 70, NULL, '2019-05-13 07:13:34', '2019-05-13 07:13:34'),
(464598, 561, '1702', 1026, 70, 0, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464599, 562, '1705', 1026, 70, 2, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464600, 563, '1708', 1026, 70, 0, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464601, 564, '1715', 1026, 70, 0, '2019-05-13 07:13:41', '2019-05-13 07:13:42'),
(464602, 565, '1717', 1026, 70, 0, '2019-05-13 07:13:41', '2019-05-13 07:13:42'),
(464603, 566, '1720', 1026, 70, 0, '2019-05-13 07:13:41', '2019-05-13 07:13:42'),
(464604, 567, '1724', 1026, 70, 2, '2019-05-13 07:13:41', '2019-05-13 07:13:42'),
(464605, 568, 'cout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif(income<0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\n if else  (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1026, 70, NULL, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464606, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}                                                                 \r\nwhile(n<0);\r\n}', 1026, 70, NULL, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464607, 570, '#include <iostream>\r\nusing namespace std;\r\nint fac(int n)\r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse \r\nreturn n*fac(n-1);\r\n}   \r\nint main ()\r\n{\r\nint x,y;\r\n\r\ny=fac(x);\r\n\r\ncout<<y<<endl;\r\n\r\nreturn 0;\r\n\r\n\r\n}', 1026, 70, NULL, '2019-05-13 07:13:41', '2019-05-13 07:13:41'),
(464895, 561, '1700', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464896, 562, '1704', 955, 70, 0, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464897, 563, '1711', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464898, 564, '1713', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464899, 565, '1716', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464900, 566, '1722', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:38'),
(464901, 567, '1724', 955, 70, 2, '2019-05-13 07:14:38', '2019-05-13 07:14:39'),
(464902, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 955, 70, 1, '2019-05-13 07:14:38', '2019-06-23 06:06:05'),
(464903, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\n \r\ndo\r\n{\r\ncin >> n;\r\nif (n>=0)break;\r\nelse{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}\r\n \r\n}while (n < 0);', 955, 70, 2, '2019-05-13 07:14:38', '2019-06-23 06:06:05'),
(464904, 570, '#include <iostream>\r\nusing namespace std;\r\n\r\nint factorial (int number,int fact=1 )           //the function that find the factorial .\r\n{\r\nif (number==0)\r\nreturn fact;\r\nfact*=factorial(number-1);\r\n\r\n\r\n\r\n\r\n} \r\nint main ()\r\n{\r\nint num ;\r\ncout <<\"enter the number that you want to find its factorial \\n\";\r\ncin >>num ;                                			     //Input .\r\ncout <<factorial(num)<<endl;    	     //find the factorial of num .\r\nsystem (\"pause\");                  		 //to stop the program in visual.\r\nreturn 0;\r\n\r\n}', 955, 70, 1.5, '2019-05-13 07:14:38', '2019-06-23 06:06:05'),
(465157, 561, '1700', 1039, 70, 2, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465159, 562, '1705', 1039, 70, 2, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465160, 563, '1710', 1039, 70, 0, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465161, 564, '1712', 1039, 70, 0, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465163, 565, '1717', 1039, 70, 0, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465165, 566, '1720', 1039, 70, 0, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465167, 567, '1725', 1039, 70, 0, '2019-05-13 07:15:28', '2019-05-13 07:16:00'),
(465169, 568, 'float income ;\r\ncin>>income;\r\n\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1039, 70, NULL, '2019-05-13 07:15:28', '2019-05-13 07:15:28'),
(465171, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif (n>=0)\r\nbreak;\r\nelse\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}   \r\nwhile(n<0);\r\n}', 1039, 70, NULL, '2019-05-13 07:15:28', '2019-05-13 07:15:28'),
(465173, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\n    if (n==0|| n==1)\r\n      return 1;\r\n    return n*fact(n-1);\r\n}\r\n\r\nint main()\r\n{\r\n   int n;\r\n   cin>>n;\r\n   cout<<fact(n)<<\"\\n\";\r\n  system(\"pause\");\r\n}', 1039, 70, NULL, '2019-05-13 07:15:28', '2019-05-13 07:15:28'),
(465331, 561, '1700', 950, 70, 2, '2019-05-13 07:15:58', '2019-05-13 07:15:59'),
(465332, 562, '1705', 950, 70, 2, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465333, 563, '1711', 950, 70, 2, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465334, 564, '1713', 950, 70, 2, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465335, 565, '1717', 950, 70, 0, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465336, 566, '1722', 950, 70, 2, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465337, 567, '1725', 950, 70, 0, '2019-05-13 07:15:59', '2019-05-13 07:15:59'),
(465338, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 950, 70, 0, '2019-05-13 07:15:59', '2019-06-23 06:03:26'),
(465339, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)', 950, 70, 1, '2019-05-13 07:15:59', '2019-06-23 06:03:26'),
(465340, 570, 'int factorial(int number,int f=1)\r\n{\r\n    if(number==1){return f;}\r\n    f *=number;\r\n    number--;\r\n    factorial(number,f);\r\n}', 950, 70, 2, '2019-05-13 07:15:59', '2019-06-23 06:03:26'),
(465352, 561, '1700', 908, 70, 2, '2019-05-13 07:16:00', '2019-05-13 07:16:00'),
(465355, 562, '1707', 908, 70, 0, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465357, 563, '1711', 908, 70, 2, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465359, 564, '1713', 908, 70, 2, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465361, 565, '1716', 908, 70, 2, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465363, 566, '1720', 908, 70, 0, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465365, 567, '1725', 908, 70, 0, '2019-05-13 07:16:00', '2019-05-13 07:16:01'),
(465367, 568, '#include <iostream>\r\nusing namespace std;\r\nint main ()   \r\n{          \r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;                               \r\n return 0;\r\n}', 908, 70, NULL, '2019-05-13 07:16:00', '2019-05-13 07:16:00'),
(465368, 569, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo {\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n<0);\r\nreturn 0;\r\n}', 908, 70, NULL, '2019-05-13 07:16:00', '2019-05-13 07:16:00'),
(465369, 570, '#include <iostream>\r\nusing namespace std;\r\nlong long fact(int x)\r\n{\r\n   if (x==0)\r\nreturn 1;\r\nelse \r\nreturn x*fact(x-1);\r\n}\r\nint main ()\r\n{\r\nint x;\r\ncin >>x;\r\n  cout << fact (x);\r\ncout << endl;\r\n}', 908, 70, NULL, '2019-05-13 07:16:00', '2019-05-13 07:16:00'),
(465422, 561, '1702', 952, 70, 0, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465423, 562, '1705', 952, 70, 2, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465424, 563, '1710', 952, 70, 0, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465425, 564, '1713', 952, 70, 2, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465426, 565, '1716', 952, 70, 2, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465427, 566, '1722', 952, 70, 2, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465428, 567, '1724', 952, 70, 2, '2019-05-13 07:16:07', '2019-05-13 07:16:08'),
(465429, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 952, 70, NULL, '2019-05-13 07:16:07', '2019-05-13 07:16:07'),
(465430, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\nwhile(n<0)\r\n}', 952, 70, NULL, '2019-05-13 07:16:07', '2019-05-13 07:16:07'),
(465431, 570, '#include <iostream>\r\nusing namespace std;\r\n\r\ndouble fac(x){\r\nif(x==0)\r\nreturn 1;\r\n\r\nreturn x*fac(x-1);\r\n                                                   }', 952, 70, NULL, '2019-05-13 07:16:07', '2019-05-13 07:16:07'),
(465520, 561, '1700', 1031, 70, 2, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465521, 562, '1706', 1031, 70, 0, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465522, 563, '1709', 1031, 70, 0, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465523, 564, '1712', 1031, 70, 0, '2019-05-13 07:16:23', '2019-05-13 07:16:24'),
(465524, 565, '1716', 1031, 70, 2, '2019-05-13 07:16:23', '2019-05-13 07:16:24'),
(465525, 566, '1720', 1031, 70, 0, '2019-05-13 07:16:23', '2019-05-13 07:16:24'),
(465526, 567, '1726', 1031, 70, 0, '2019-05-13 07:16:23', '2019-05-13 07:16:24'),
(465527, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1031, 70, NULL, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465528, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n      int n;\r\n      do\r\n         { \r\n               cout << \"Enter a non-negative integer: \";\r\n              cin>>n; \r\n               cout << \"The integer you entered is negative.\" << endl;\r\n           }while(n<0);\r\n      return 0;\r\n   }', 1031, 70, NULL, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465529, 570, '#include<ioistream>\r\nusing namespace std;\r\nlong long fac(int n)\r\n{ if(n==1)\r\n        return 1;\r\n else\r\n     return n*fact(n-1);\r\n\r\n\r\n}\r\nint main   \r\n{\r\n     int n;\r\n     cin>>n;\r\n    cout<<\"factorial  \"<<n<<\" = <<fact(n)<<\"\\n\";\r\n\r\n\r\n\r\nreturn 0;\r\n}', 1031, 70, NULL, '2019-05-13 07:16:23', '2019-05-13 07:16:23'),
(465637, 561, '1700', 1029, 70, 2, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465638, 562, '1705', 1029, 70, 2, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465639, 563, '1708', 1029, 70, 0, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465640, 564, '1712', 1029, 70, 0, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465641, 565, '1717', 1029, 70, 0, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465642, 566, '1722', 1029, 70, 2, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465643, 567, '1726', 1029, 70, 0, '2019-05-13 07:16:41', '2019-05-13 07:16:42'),
(465644, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1029, 70, NULL, '2019-05-13 07:16:41', '2019-05-13 07:16:41'),
(465645, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;        \r\ndo{\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n cout << \"Enter a non-negative integer: \";\r\ncin >> n ;              \r\n}\r\n}while(n<0);', 1029, 70, NULL, '2019-05-13 07:16:41', '2019-05-13 07:16:41'),
(465646, 570, '#include<iostream>\r\nusing namespace std;\r\nint fac(int x)\r\n{\r\nif(x==1)\r\nreturn 1;\r\nelse\r\nreturn x*fac(x-1);\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fac(x);\r\n}', 1029, 70, NULL, '2019-05-13 07:16:41', '2019-05-13 07:16:41'),
(465875, 561, '1702', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465876, 562, '1706', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465877, 563, '1710', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465878, 564, '1712', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:10'),
(465879, 565, '1716', 967, 70, 2, '2019-05-13 07:17:09', '2019-05-13 07:17:10'),
(465880, 566, '1720', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:10'),
(465881, 567, '1727', 967, 70, 0, '2019-05-13 07:17:09', '2019-05-13 07:17:10'),
(465882, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 967, 70, NULL, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465883, 569, 'cout << \"Enter a non-negative integer: \";\r\n        cin >> n;    \r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\n while(n-1<0)', 967, 70, NULL, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465884, 570, 'int fact(int n)\r\n{if (n==0||n==1)\r\nreturn 1;\r\nelse \r\nreturn n*fact(n-1);\r\n}', 967, 70, NULL, '2019-05-13 07:17:09', '2019-05-13 07:17:09'),
(465950, 561, '1702', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465951, 562, '1705', 1028, 70, 2, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465952, 563, '1708', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465953, 564, '1714', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465954, 565, '1717', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465955, 566, '1723', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465956, 567, '1726', 1028, 70, 0, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465957, 568, 'if (income >= 2500.00)', 1028, 70, NULL, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465958, 569, 'int n;\r\ndo\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}', 1028, 70, NULL, '2019-05-13 07:17:19', '2019-05-13 07:17:19');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(465959, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact (int n)\r\n{\r\nif (n==1 )\r\nreturn ;\r\n else \r\nreturn n*fact(n-1); \r\n}', 1028, 70, NULL, '2019-05-13 07:17:19', '2019-05-13 07:17:19'),
(465991, 561, '1701', 900, 70, 0, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465992, 562, '1705', 900, 70, 2, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465993, 563, '1708', 900, 70, 0, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465994, 564, '1714', 900, 70, 0, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465995, 565, '1717', 900, 70, 0, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465996, 566, '1722', 900, 70, 2, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465997, 567, '1726', 900, 70, 0, '2019-05-13 07:17:24', '2019-05-13 07:17:25'),
(465998, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 900, 70, NULL, '2019-05-13 07:17:24', '2019-05-13 07:17:24'),
(465999, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n<0)', 900, 70, NULL, '2019-05-13 07:17:24', '2019-05-13 07:17:24'),
(466000, 570, '#include <iostream >                                                                                                       \r\nusing namespace std;\r\nint main ()\r\n{      \r\n     int n, fac=1 ; \r\ncin >> n ; \r\nfor (int i=1 ; i<=n ; i--)\r\nfac=i*i; \r\n\r\ncout <<fac ; \r\nsystem (\"pause\");\r\nreturn 0;\r\n}', 900, 70, NULL, '2019-05-13 07:17:24', '2019-05-13 07:17:24'),
(466011, 561, '1702', 1037, 70, 0, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466012, 562, '1705', 1037, 70, 2, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466013, 563, '1711', 1037, 70, 2, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466014, 564, '1713', 1037, 70, 2, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466015, 565, '1717', 1037, 70, 0, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466016, 566, '1722', 1037, 70, 2, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466017, 567, '1724', 1037, 70, 2, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466018, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n        cout <<\"You are living below the poverty line.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\n         cout << \"You are well off << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\n         cout << \"You are living in moderate comfort.\" << endl;\r\nelse  (income >= 2500.00)\r\n         cout << \"You are well off.\" << endl;', 1037, 70, NULL, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466019, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n            int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo \r\n{\r\n\r\n\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}      while (n < 0);\r\nsystem(\"pause\");', 1037, 70, NULL, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466020, 570, '#include<iostream>\r\n#include<cmath>\r\nusing name space std;\r\nint(int x)\r\nin main()\r\n{int n;\r\ncin>>n;\r\ncout<<\"the  factorial =\"<<   ( );\r\n\r\nreturn 0;\r\n}             \r\n      int (int x)\r\n{\r\nfor(int i=0;i<=n;i++)\r\nn*=(n-1);\r\nreturn n;\r\n}', 1037, 70, NULL, '2019-05-13 07:17:27', '2019-05-13 07:17:27'),
(466388, 561, '1700', 916, 70, 2, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466389, 562, '1704', 916, 70, 0, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466390, 563, '1710', 916, 70, 0, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466391, 564, '1714', 916, 70, 0, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466392, 565, '1717', 916, 70, 0, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466393, 566, '1720', 916, 70, 0, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466394, 567, '1724', 916, 70, 2, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466395, 568, 'cout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse  \r\n    cout << \"You are well off.\" << endl;', 916, 70, NULL, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466396, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\nif( n<0 ){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\n} while (n < 0);', 916, 70, NULL, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466397, 570, '#include<iostream>\r\nusing namespace std;\r\nint factorial(int n ,c, f){\r\n\r\nif(c == n+1){\r\nreturn f;\r\n\r\n}else{\r\nf*=c;\r\nc++;\r\n   }\r\n}\r\n\r\nint main(){\r\nint num,count = 1,fact = 1;\r\ncin>>num;\r\ncout<<factorial(num,count,fact);\r\nreturn 0 ;\r\n\r\n}', 916, 70, NULL, '2019-05-13 07:18:20', '2019-05-13 07:18:20'),
(466456, 561, '1700', 948, 70, 2, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466457, 562, '1705', 948, 70, 2, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466458, 563, '1711', 948, 70, 2, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466459, 564, '1712', 948, 70, 0, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466460, 565, '1717', 948, 70, 0, '2019-05-13 07:18:39', '2019-05-13 07:18:40'),
(466461, 566, '1722', 948, 70, 2, '2019-05-13 07:18:39', '2019-05-13 07:18:40'),
(466462, 567, '1725', 948, 70, 0, '2019-05-13 07:18:39', '2019-05-13 07:18:40'),
(466463, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;    \r\n}', 948, 70, NULL, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466464, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}   while(n<0);      \r\n}', 948, 70, NULL, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(466465, 570, '#include<iostream>\r\nusing namespace std;\r\n    int fac(int n)\r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse\r\n{\r\nreturn n*fac(n-1);\r\n}\r\n}                                                                                                     \r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout<<fac(n);\r\n\r\n}', 948, 70, NULL, '2019-05-13 07:18:39', '2019-05-13 07:18:39'),
(467017, 561, '1700', 937, 70, 2, '2019-05-13 07:19:36', '2019-05-13 07:19:37'),
(467018, 562, '1705', 937, 70, 2, '2019-05-13 07:19:36', '2019-05-13 07:19:37'),
(467019, 563, '1711', 937, 70, 2, '2019-05-13 07:19:36', '2019-05-13 07:19:37'),
(467020, 564, '1712', 937, 70, 0, '2019-05-13 07:19:36', '2019-05-13 07:19:37'),
(467021, 565, '1717', 937, 70, 0, '2019-05-13 07:19:36', '2019-05-13 07:19:37'),
(467022, 566, '1722', 937, 70, 2, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(467023, 567, '1724', 937, 70, 2, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(467024, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 937, 70, NULL, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(467025, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0){\r\ndo {\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0);\r\n}', 937, 70, NULL, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(467026, 570, 'int factorial (int n)\r\n{\r\nif(n==0||n==1)\r\n{\r\nreturn 1;\r\n}\r\nreturn n*factorial(n-1);\r\n\r\n}', 937, 70, NULL, '2019-05-13 07:19:37', '2019-05-13 07:19:37'),
(467045, 561, '1702', 1021, 70, 0, '2019-05-13 07:19:39', '2019-05-13 07:19:42'),
(467046, 563, '1708', 1021, 70, 0, '2019-05-13 07:19:39', '2019-05-13 07:19:42'),
(467047, 564, '1712', 1021, 70, 0, '2019-05-13 07:19:39', '2019-05-13 07:19:42'),
(467048, 565, '1716', 1021, 70, 2, '2019-05-13 07:19:39', '2019-05-13 07:19:42'),
(467049, 566, '1723', 1021, 70, 0, '2019-05-13 07:19:39', '2019-05-13 07:19:42'),
(467050, 568, NULL, 1021, 70, NULL, '2019-05-13 07:19:39', '2019-05-13 07:19:39'),
(467051, 569, 'int n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"The integer you entered is negative.\'\"<<endl;\r\ncout<<\"Enter a  non-negative integer:\";\r\n}', 1021, 70, NULL, '2019-05-13 07:19:39', '2019-05-13 07:19:39'),
(467052, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n\r\nint n,f=1;\r\nfor (i=1;i<=n;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<f<<endl;;\r\nreturn 0;\r\n}', 1021, 70, NULL, '2019-05-13 07:19:39', '2019-05-13 07:19:39'),
(467240, 561, '1700', 935, 70, 2, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467241, 562, '1707', 935, 70, 0, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467242, 563, '1711', 935, 70, 2, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467243, 564, '1712', 935, 70, 0, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467244, 565, '1717', 935, 70, 0, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467246, 566, '1721', 935, 70, 0, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467248, 567, '1724', 935, 70, 2, '2019-05-13 07:19:57', '2019-05-13 07:19:58'),
(467250, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 935, 70, NULL, '2019-05-13 07:19:57', '2019-05-13 07:19:57'),
(467252, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\ndo{\r\nif (n<0)\r\nbreak;\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n} while (n < 0);', 935, 70, NULL, '2019-05-13 07:19:57', '2019-05-13 07:19:57'),
(467254, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact (int n)\r\n{\r\nif (n==1||n==0)\r\nreturn 1;\r\nelse \r\nreturn n* fact(n-1);\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"factorial of  \"<< n<<\"   is  \"<<fact(n)<<endl;\r\n}', 935, 70, NULL, '2019-05-13 07:19:57', '2019-05-13 07:19:57'),
(467566, 561, '1700', 1009, 70, 2, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467567, 562, '1706', 1009, 70, 0, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467568, 563, '1711', 1009, 70, 2, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467569, 564, '1713', 1009, 70, 2, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467570, 565, '1717', 1009, 70, 0, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467571, 566, '1722', 1009, 70, 2, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467572, 567, '1725', 1009, 70, 0, '2019-05-13 07:20:21', '2019-05-13 09:28:17'),
(467573, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;\r\n                                                  }', 1009, 70, NULL, '2019-05-13 07:20:21', '2019-05-13 07:20:21'),
(467574, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ndo{\r\ncin >> n;\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n\r\n}\r\n                  while (n < 0);\r\n}                                        \r\n\r\n\r\n                                                                            Another       solution     \r\n                                    int n;\r\ncout << \"Enter a non-negative integer: \";\r\ndo{\r\ncin >> n;\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n\r\n}\r\n                  while (n < 0);\r\n}', 1009, 70, NULL, '2019-05-13 07:20:21', '2019-05-13 07:20:21'),
(467575, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\n	if(x==0 ||x==1)\r\n	return 1;\r\n\r\nelse\r\n	return x*fact(x-1);\r\n}\r\nint main(){\r\nint x;\r\ncin>>x;\r\ncout<<fact(x);\r\ncout<<endl;\r\n\r\n\r\n\r\n}', 1009, 70, NULL, '2019-05-13 07:20:21', '2019-05-13 07:20:21'),
(467871, 561, '1700', 1000, 70, 2, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467872, 562, '1704', 1000, 70, 0, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467873, 563, '1710', 1000, 70, 0, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467874, 564, '1712', 1000, 70, 0, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467875, 565, '1717', 1000, 70, 0, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467876, 566, '1722', 1000, 70, 2, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467877, 567, '1725', 1000, 70, 0, '2019-05-13 07:20:43', '2019-05-13 07:20:43'),
(467878, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1000, 70, 2, '2019-05-13 07:20:43', '2019-06-23 06:18:30'),
(467879, 569, 'int n;\r\n	cout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\n\r\nif(n>0)cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n < 0);\r\n\r\n	\r\n}', 1000, 70, 2, '2019-05-13 07:20:43', '2019-06-23 06:18:30'),
(467880, 570, '#include<iostream>\r\n#include<iomanip>\r\nusing namespace std ;\r\nlong long fa=1;\r\nlong long fact(int x)\r\n{\r\n	if(x==0||x==1)\r\n		return 1;\r\n	 \r\n		else return x*fact(x-1) ;\r\n}\r\nint main()\r\n{\r\n	int x;\r\n	cin>>x;\r\n	cout<<fact(x);\r\n\r\n}', 1000, 70, 2, '2019-05-13 07:20:43', '2019-06-23 06:18:30'),
(467915, 561, '1702', 1075, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467916, 562, '1705', 1075, 70, 2, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467917, 563, '1708', 1075, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467918, 561, '1701', 1023, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467919, 564, '1714', 1075, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467920, 562, '1705', 1023, 70, 2, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467921, 565, '1717', 1075, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467922, 563, '1711', 1023, 70, 2, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467923, 566, '1723', 1075, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467924, 564, '1712', 1023, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467925, 567, '1724', 1075, 70, 2, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467926, 565, '1717', 1023, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467927, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse  (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;', 1075, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467928, 566, '1720', 1023, 70, 0, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467929, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;', 1075, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467930, 567, '1724', 1023, 70, 2, '2019-05-13 07:20:46', '2019-05-13 07:20:47'),
(467931, 570, '#include <iostream>\r\nusing namespace std;\r\n\r\nint fact(int a ,int n) ;\r\n\r\nint main()\r\n{\r\ncin>> n;\r\nfact( a ,n )\r\n\r\n\r\n\r\n}\r\nint f=1;\r\nint fact(int a ,int n)\r\nfor(int i=1 ; i<=n ; i++)\r\nf=f*i; \r\n\r\nreturn f;', 1075, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467932, 568, '#include<iostream>\r\nusing namespace std;\r\nint main (){  \r\n\r\n    float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl; \r\nelse\r\ncout << \"You are going farther into debt every month.\" << endl;\r\n  \r\nreturn 0\r\n}', 1023, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467933, 569, '#include<iostream>\r\nusing namespace std;\r\nint main( )\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\nif(n<0){\r\n        cout << \"The integer you entered is negative.\" << endl;\r\n        cout << \"Enter a non-negative integer: \";\r\n        cin>>n;\r\n}\r\n}while(n<0);\r\n\r\n  return 0;\r\n}', 1023, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467934, 570, '#include<iostream>\r\nusing namespace std;\r\n\r\nint fact(int number){\r\n\r\nif(number==1){\r\n          return 1;\r\n   }\r\nelse {\r\n           return  number * fact(n-1);\r\n         }\r\n}\r\n\r\nint main ( )\r\n{\r\nint num;\r\n\r\ncout<<\"enter a number.\\n\";\r\n\r\ncin>>num;\r\n\r\ncout<<\"the factorial for this number is = \"<<fact(n)<<endl;\r\n\r\n  return 0;\r\n}', 1023, 70, NULL, '2019-05-13 07:20:46', '2019-05-13 07:20:46'),
(467995, 561, '1703', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(467996, 562, '1707', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(467997, 563, '1709', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(467998, 564, '1714', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(467999, 565, '1718', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468000, 566, '1722', 968, 70, 2, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468001, 567, '1725', 968, 70, 0, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468002, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()    {\r\n\r\n\r\n\r\n\r\n}', 968, 70, NULL, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468003, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo \r\n{\r\n(n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\nwhile \r\ncout << \"Enter a non-negative integer: \";\r\nsystem(\"pause\");\r\nreturn 0;\r\n\r\n}', 968, 70, NULL, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468004, 570, '#include<iostream>\r\nusing namespace std;\r\nint main()    {\r\n\r\n\r\n\r\n\r\n\r\n}', 968, 70, NULL, '2019-05-13 07:20:54', '2019-05-13 07:20:54'),
(468833, 561, '1700', 953, 70, 2, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468834, 562, '1705', 953, 70, 2, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468835, 563, '1711', 953, 70, 2, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468836, 564, '1712', 953, 70, 0, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468837, 565, '1717', 953, 70, 0, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468838, 566, '1720', 953, 70, 0, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468839, 567, '1725', 953, 70, 0, '2019-05-13 07:22:24', '2019-05-13 07:22:25'),
(468840, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 953, 70, NULL, '2019-05-13 07:22:24', '2019-05-13 07:22:24'),
(468841, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}  while(n<0);', 953, 70, NULL, '2019-05-13 07:22:24', '2019-05-13 07:22:24'),
(468842, 570, 'int fun(int n)\r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse{\r\nreturn n*fun(n-1);\r\n\r\n}\r\n\r\n}', 953, 70, NULL, '2019-05-13 07:22:25', '2019-05-13 07:22:25'),
(469484, 561, '1700', 936, 70, 2, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469485, 562, '1705', 936, 70, 2, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469486, 563, '1708', 936, 70, 0, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469487, 564, '1713', 936, 70, 2, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469488, 565, '1716', 936, 70, 2, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469489, 566, '1720', 936, 70, 0, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469490, 567, '1726', 936, 70, 0, '2019-05-13 07:23:26', '2019-05-13 07:23:27'),
(469492, 568, 'float income;\r\ncout<<\"enter your monthly income:\";\r\ncin>>income;     \r\nif(income>=0&&income<1200.00)  \r\ncout << \"You are living below the poverty line.\" << endl;  \r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;   \r\nelse  (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 936, 70, NULL, '2019-05-13 07:23:26', '2019-05-13 07:23:26'),
(469494, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int n;\r\ncout<<\"enter a non -negative integer:\";\r\ncin>>n;  \r\ndo\r\n{cout<<\"the integer you entered is negative.\"<<endl;\r\n}\r\nwhile(n<0){\r\ncout<<\"enter a non -negative integer:\";\r\ncin>>n;}', 936, 70, NULL, '2019-05-13 07:23:26', '2019-05-13 07:23:26'),
(469496, 570, '#include<iostream>\r\nusing namespace std;\r\nint fac(int n){\r\nif(n==0||n==1)\r\nreturn 1;\r\nreturn n*fac(n-1);\r\nint main()\r\n{int n;\r\ncin>>n;\r\ncout<<fac(n)<<endl;\r\n}', 936, 70, NULL, '2019-05-13 07:23:26', '2019-05-13 07:23:26'),
(469538, 561, '1701', 940, 70, 0, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469539, 562, '1707', 940, 70, 0, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469540, 563, '1708', 940, 70, 0, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469541, 564, '1713', 940, 70, 2, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469542, 565, '1717', 940, 70, 0, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469543, 566, '1722', 940, 70, 2, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469544, 567, '1727', 940, 70, 0, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469545, 568, 'float income;\r\ncout<<\"Enter your monthly income :\";\r\ncin>>income;\r\nif (income <0.0)\r\ncout<<\"You are goning farther into debt every month. \"<<endl;        \r\nelse if (income>=0.0)\r\ncout<<\"you are living below the poverty line .\"<<endl;\r\nelse if (income>=1200.00)\r\ncout<< \"You are living in moderate comfort.\"<<endl;\r\nelse if (income >=2500.00)\r\ncout<<\"you are well off\"<<endl;', 940, 70, NULL, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469546, 569, 'int n;\r\n cout<< \"Enter a non-negative integer: \";  \r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n<0);', 940, 70, NULL, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469547, 570, 'int fact (in int)\r\n{if (n==0)\r\nreturn 1;\r\nelse \r\nreturn n*fact(n-1);\r\n}', 940, 70, NULL, '2019-05-13 07:23:31', '2019-05-13 07:23:31'),
(469693, 561, '1700', 1074, 70, 2, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469694, 562, '1706', 1074, 70, 0, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469695, 563, '1708', 1074, 70, 0, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469696, 564, '1712', 1074, 70, 0, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469697, 565, '1716', 1074, 70, 2, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469698, 566, '1720', 1074, 70, 0, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469699, 567, '1726', 1074, 70, 0, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469700, 568, 'from the nested\r\n(income>=0.0 income', 1074, 70, NULL, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469701, 569, 'cout<<\"the integer you \r\ncout<<\"Enter a non_negative', 1074, 70, NULL, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469702, 570, 'jdhuygsyhgdygt', 1074, 70, NULL, '2019-05-13 07:23:45', '2019-05-13 07:23:45'),
(469858, 561, '1700', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469859, 562, '1705', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469860, 563, '1711', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469861, 564, '1713', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469862, 565, '1716', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469863, 566, '1722', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469864, 567, '1724', 1012, 70, 2, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469865, 568, 'float income;\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1012, 70, NULL, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469866, 569, 'cin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)', 1012, 70, NULL, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469867, 570, 'int fun(int m, int n)\r\n\r\n{\r\n\r\nif (m==1)\r\nreturn 1;\r\nelse\r\nreturn x*(x,y-1)\r\n}\r\nint main()\r\n{\r\nint m,n;\r\ncin >>x>>y;\r\ncout<<fum(m,n)<<endl;\r\n\r\n}', 1012, 70, NULL, '2019-05-13 07:24:02', '2019-05-13 07:24:02'),
(469932, 561, '1700', 945, 70, 2, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469934, 562, '1707', 945, 70, 0, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469936, 563, '1711', 945, 70, 2, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469938, 564, '1712', 945, 70, 0, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469940, 565, '1716', 945, 70, 2, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469942, 566, '1722', 945, 70, 2, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469944, 567, '1725', 945, 70, 0, '2019-05-13 07:24:10', '2019-05-13 07:24:11'),
(469946, 568, 'float income ;\r\n  cin >> income;\r\n   if (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 945, 70, NULL, '2019-05-13 07:24:10', '2019-05-13 07:24:10'),
(469948, 569, 'int n; \r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";}\r\nwhile(n<0)\r\ncin>>n;\r\n}', 945, 70, NULL, '2019-05-13 07:24:10', '2019-05-13 07:24:10'),
(469950, 570, 'int fac(int x)\r\n{\r\nif(x==0 || x==1)\r\nreturn 1;\r\nreturn  x*fac(x-1);\r\n}\r\nint main()\r\n{\r\nint a; \r\ncin>>a;\r\ncout<<fac(a);\r\n \r\n}', 945, 70, NULL, '2019-05-13 07:24:10', '2019-05-13 07:24:10'),
(470188, 561, '1700', 1068, 70, 2, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470189, 562, '1706', 1068, 70, 0, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470190, 563, '1711', 1068, 70, 2, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470191, 564, '1712', 1068, 70, 0, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470192, 565, '1716', 1068, 70, 2, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470193, 566, '1720', 1068, 70, 0, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470194, 567, '1724', 1068, 70, 2, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470195, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1068, 70, NULL, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470196, 569, 'int main()\r\n{\r\nint n ;\r\ndo \r\n{\r\ncout << \"Enter a non-negative integer: \" ;\r\ncin>>n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\nwhile (n<0) ;\r\nreturn 0 ;\r\n}', 1068, 70, NULL, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470197, 570, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int x)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nelse \r\nreturn x*fact(x-1) ;\r\n}           \r\nint main ()\r\n{ \r\nint x ;\r\ncin >> x;\r\ncout <<fact( x )\r\ncout  <<endl ;\r\nsystem (\"pause\")\r\n}', 1068, 70, NULL, '2019-05-13 07:24:59', '2019-05-13 07:24:59'),
(470208, 561, '1700', 1054, 70, 2, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470209, 562, '1705', 1054, 70, 2, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470210, 563, '1709', 1054, 70, 0, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470211, 564, '1713', 1054, 70, 2, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470212, 565, '1717', 1054, 70, 0, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470213, 566, '1722', 1054, 70, 2, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470214, 567, '1725', 1054, 70, 0, '2019-05-13 07:25:00', '2019-05-13 07:25:01'),
(470215, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n\r\n if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1054, 70, NULL, '2019-05-13 07:25:00', '2019-05-13 07:25:00'),
(470216, 569, 'cout << \"Enter a non-negative integer: \"; \r\n     \r\ndo{\r\n    int n;\r\n                                                                            \r\n        \r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n cin>>n;\r\n}\r\nwhile(n<0);', 1054, 70, NULL, '2019-05-13 07:25:00', '2019-05-13 07:25:00'),
(470217, 570, 'int fact(int x){\r\n   return x*fact(x-1);\r\n}', 1054, 70, NULL, '2019-05-13 07:25:00', '2019-05-13 07:25:00'),
(470339, 561, '1702', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470340, 562, '1705', 951, 70, 2, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470342, 563, '1708', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470344, 564, '1715', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470346, 565, '1717', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470348, 566, '1720', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470350, 567, '1726', 951, 70, 0, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470352, 568, 'float income;\r\ncout <<\"Enter your monthly income:\";\r\ncin>>income;\r\nif (income<0.0)                                                                                                           \r\ncout<<\"you are going farther into debt every month.\"<<endl;\r\nelse if (income>=0.0&&income<1200.00) \r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse  \r\ncout << \"You are well off.\" << endl;', 951, 70, NULL, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470354, 569, 'b', 951, 70, NULL, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470356, 570, 'b', 951, 70, NULL, '2019-05-13 07:25:26', '2019-05-13 07:25:26'),
(470581, 561, '1702', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470582, 562, '1706', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470583, 563, '1710', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470584, 564, '1714', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470585, 565, '1717', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470586, 566, '1722', 939, 70, 2, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470587, 567, '1725', 939, 70, 0, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470588, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;\r\n}', 939, 70, NULL, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470589, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ndo{\r\n\r\nif(n==0)\r\n{\r\nreturn 0;\r\nbreak;\r\n}\r\nelse\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n}\r\nwhile(n<0)\r\n{\r\ncin>>n;\r\n}', 939, 70, NULL, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470590, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nif(n<0)\r\nreturn 0 ;\r\nelse;\r\nreturn n*fact(n-1)  ;\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n);', 939, 70, NULL, '2019-05-13 07:26:06', '2019-05-13 07:26:06'),
(470891, 561, '1702', 1057, 70, 0, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470892, 562, '1707', 1057, 70, 0, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470893, 563, '1709', 1057, 70, 0, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470894, 564, '1713', 1057, 70, 2, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470895, 565, '1717', 1057, 70, 0, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470896, 566, '1722', 1057, 70, 2, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470897, 567, '1724', 1057, 70, 2, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470898, 568, 'cout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\n\r\ncout << \"You are well off.\" << endl;', 1057, 70, NULL, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470899, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\nfor (int i=0 ; i<n ; i++\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 1057, 70, NULL, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470900, 570, 'Best Wishes', 1057, 70, NULL, '2019-05-13 07:27:08', '2019-05-13 07:27:08'),
(470926, 561, '1700', 949, 70, 2, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470927, 562, '1705', 949, 70, 2, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470928, 563, '1711', 949, 70, 2, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470929, 564, '1712', 949, 70, 0, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470930, 565, '1717', 949, 70, 0, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470931, 566, '1722', 949, 70, 2, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470932, 567, '1724', 949, 70, 2, '2019-05-13 07:27:10', '2019-05-13 09:28:17'),
(470933, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)  \r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl; \r\nelse\r\ncout << \"You are well off.\" << endl;', 949, 70, NULL, '2019-05-13 07:27:10', '2019-05-13 07:27:10'),
(470934, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\nwhile(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\n}  \r\nwhile(n<o);', 949, 70, NULL, '2019-05-13 07:27:10', '2019-05-13 07:27:10'),
(470935, 570, 'int factorial (int n,int i=1,int z=1)\r\n{\r\nif(i>n)\r\n{\r\n     return z;\r\n}\r\nelse\r\n    {\r\n     z=z*i;\r\n     return factorial(n,i++,z);\r\n     }\r\n}', 949, 70, NULL, '2019-05-13 07:27:10', '2019-05-13 07:27:10'),
(471108, 561, '1700', 1049, 70, 2, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471109, 562, '1705', 1049, 70, 2, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471110, 563, '1708', 1049, 70, 0, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471111, 564, '1713', 1049, 70, 2, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471112, 565, '1717', 1049, 70, 0, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471113, 566, '1723', 1049, 70, 0, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471114, 567, '1725', 1049, 70, 0, '2019-05-13 07:27:40', '2019-05-13 07:27:41'),
(471115, 568, 'float income;\r\ncout<<\"enter your monthly income:\";\r\ncin >>incom ;\r\nif (income <0.0)\r\ncout<<\"you are going farther into   debt every month \"<< endl;\r\nelse if(income >=0.0&& income <1200.00)\r\ncout<<\"you are living below the poverty line \"<<endl;\r\nelse if(income >=1200.00 && incom <2500.00)\r\ncout<<\"you are living in moderate comfort\"<<endl;\r\nelse \r\ncout<<\"you are well off\"<<endl;', 1049, 70, NULL, '2019-05-13 07:27:40', '2019-05-13 07:27:40'),
(471116, 569, 'do\r\n    int n;\r\ncout<<\" enter a non-negative integer:\";\r\ncin>>n;\r\nwhile(n<0)\r\n{\r\n\r\n\r\n\r\n}', 1049, 70, NULL, '2019-05-13 07:27:40', '2019-05-13 07:27:40'),
(471117, 570, 'lll', 1049, 70, NULL, '2019-05-13 07:27:40', '2019-05-13 07:27:40'),
(471179, 561, '1700', 242, 70, 2, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471180, 562, '1705', 242, 70, 2, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471181, 563, '1708', 242, 70, 0, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471182, 564, '1713', 242, 70, 2, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471183, 565, '1718', 242, 70, 0, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471184, 566, '1723', 242, 70, 0, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471185, 567, '1727', 242, 70, 0, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471186, 568, '#include <iostream> \r\nusing namespace std;\r\nint main ( ) \r\n{\r\nint x ;\r\nfloat income;\r\ncin >> income;\r\ncout (\" you are living below the poverty line.\" <<endl;\r\nelse if ( income >= 2500.00)\r\ncout<< \" you are well off .\" <<endl;', 242, 70, NULL, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471187, 569, 'int n;\r\ncout << \" Enter a non - negative integer: \";\r\ncin>> n;\r\nwhile (n<0)', 242, 70, NULL, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471188, 570, '!n=n x n -1\r\n(n < 0)', 242, 70, NULL, '2019-05-13 07:27:52', '2019-05-13 07:27:52'),
(471318, 561, '1700', 1027, 70, 2, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471319, 562, '1705', 1027, 70, 2, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471320, 563, '1710', 1027, 70, 0, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471321, 564, '1712', 1027, 70, 0, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471322, 565, '1717', 1027, 70, 0, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471323, 566, '1720', 1027, 70, 0, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471324, 567, '1727', 1027, 70, 0, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471325, 568, 'float income; \r\ncout << \"Enter your monthly income: \";\r\ncin >> income; \r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if(income>0.0&&income<1200.00)   \r\n cout << \"You are living below the poverty line.\" << endl;    \r\nelse if (income >1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;      \r\nelse \r\ncout << \"You are well off.\" << endl;', 1027, 70, NULL, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471326, 569, 'int n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\nif(n>0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\nelse\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}while(n<0);', 1027, 70, NULL, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471327, 570, '#include<iostream>\r\nusing  namespace  std;\r\nint fact(int n)\r\n{\r\nif(n>1)\r\nreturn  n*fact(n-1);\r\nreturn  1;\r\n}    \r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n);\r\nsystem(\"pause\");\r\n}', 1027, 70, NULL, '2019-05-13 07:28:19', '2019-05-13 07:28:19'),
(471831, 561, '1700', 1048, 70, 2, '2019-05-13 07:30:28', '2019-05-13 07:30:28'),
(471832, 562, '1705', 1048, 70, 2, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471833, 563, '1710', 1048, 70, 0, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471834, 564, '1713', 1048, 70, 2, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471835, 565, '1717', 1048, 70, 0, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471836, 566, '1722', 1048, 70, 2, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471837, 567, '1725', 1048, 70, 0, '2019-05-13 07:30:28', '2019-05-13 07:30:29'),
(471838, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1048, 70, NULL, '2019-05-13 07:30:28', '2019-05-13 07:30:28'),
(471839, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;}\r\nwhile (n < 0)', 1048, 70, NULL, '2019-05-13 07:30:28', '2019-05-13 07:30:28'),
(471840, 570, 'int  fact(int n){\r\nif(n<=0)\r\nreturn 1;\r\nint y=n*fact(n-1);\r\nreturn y;\r\n}', 1048, 70, NULL, '2019-05-13 07:30:28', '2019-05-13 07:30:28'),
(472030, 561, '1700', 1070, 70, 2, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472032, 562, '1707', 1070, 70, 0, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472034, 563, '1711', 1070, 70, 2, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472036, 564, '1712', 1070, 70, 0, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472038, 565, '1716', 1070, 70, 2, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472040, 566, '1722', 1070, 70, 2, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472042, 567, '1724', 1070, 70, 2, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472043, 568, 'float income;                 \r\n    cout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1070, 70, NULL, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472044, 569, 'int n;\r\ncout<<\"enter a non-negative intger\";\r\ncin>>n;\r\ndo{\r\ncout<<\"enter a non-negative intger \";\r\ncin>>n;\r\n}\r\nwhile(n<0);\r\n{\r\ncout<<\"the intger you enterd is negative\"<<endl;\r\n}', 1070, 70, NULL, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472045, 570, 'int fun(int n)  ;\r\n{  if(n==0)\r\nreturn 1;\r\nelse\r\nreturn (n*fun(n-1));\r\n}', 1070, 70, NULL, '2019-05-13 07:30:48', '2019-05-13 07:30:48'),
(472092, 561, '1702', 1040, 70, 0, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472093, 562, '1705', 1040, 70, 2, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472094, 563, '1711', 1040, 70, 2, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472095, 564, '1713', 1040, 70, 2, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472096, 565, '1716', 1040, 70, 2, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472097, 566, '1720', 1040, 70, 0, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472098, 567, '1724', 1040, 70, 2, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472099, 568, 'float income;\r\ncout<<\"enter your monthly income :\";\r\ncin>>income;\r\nif(income >=0.0&&income<1200.00)\r\ncout<<\"You are living below the poverty line.\"<<endl;\r\nelse if(income>=1200.0&&income<2500.00) \r\ncout<<\"You are living in modertate comfort.\"<<endl;\r\nelse\r\ncout<<\"You are well off\"<<endl;', 1040, 70, NULL, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472100, 569, 'int n;\r\n cout<<\"Enter a non -negative integer \";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"The integer you entered is negtive.\"<<endl;\r\ncout<<\"Enter a non negtaive integer:\";\r\ncin>>n\r\n}while(n<0);', 1040, 70, NULL, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472101, 570, 'int fact(int n) \r\n{\r\nif(n==0)\r\nreturn n;\r\nelse\r\nreturn n*fact(n-1);\r\n}                                            \r\nint main()\r\n{\r\nint a;\r\ncin>>a;\r\ncout<<fact(a);\r\n}', 1040, 70, NULL, '2019-05-13 07:30:50', '2019-05-13 07:30:50'),
(472463, 561, '1700', 941, 70, 2, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472464, 563, '1708', 941, 70, 0, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472465, 564, '1713', 941, 70, 2, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472466, 565, '1716', 941, 70, 2, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472467, 566, '1722', 941, 70, 2, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472468, 567, '1724', 941, 70, 2, '2019-05-13 07:31:35', '2019-05-13 07:31:35'),
(472469, 568, 'float income;\r\n      cout<<\"Enter your monthly income\";\r\n        cin>>income ;\r\nif(income<0.0)\r\ncout<<\"you are going farther into debt every month.\"<<endl;\r\nelse if (income<1200.00)\r\ncout<<\"you are living below the poverty line.\"<< endl;\r\nelse if(income <2500.00)\r\ncout<<\"you are living in moderate comfort.\"<<endl;\r\nelse\r\ncout<<\"you are well of.\"<<endl;', 941, 70, 2, '2019-05-13 07:31:35', '2019-06-23 06:06:38'),
(472470, 569, 'int n;\r\ndo{\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\nwhile(n<0)\r\n{\r\ncout<<\"The integer you entered is negative\"<<endl;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\n}while(n>0', 941, 70, 0, '2019-05-13 07:31:35', '2019-06-23 06:06:38'),
(472471, 570, 'int fact(int n){\r\nif (n==1 || n==0)\r\nreturn 1;\r\nreturn n*fact(n-1);\r\n}                                                            \r\nint main()\r\n{\r\nint n;\r\ncin >>n;\r\ncout<<fact(n);\r\n}', 941, 70, 2, '2019-05-13 07:31:35', '2019-06-23 06:06:38'),
(472609, 561, '1700', 1002, 70, 2, '2019-05-13 07:31:55', '2019-05-13 09:28:17'),
(472610, 566, '1720', 1002, 70, 0, '2019-05-13 07:31:55', '2019-05-13 09:28:17'),
(472611, 568, NULL, 1002, 70, NULL, '2019-05-13 07:31:55', '2019-05-13 07:31:55'),
(472612, 569, NULL, 1002, 70, NULL, '2019-05-13 07:31:55', '2019-05-13 07:31:55'),
(472613, 570, NULL, 1002, 70, NULL, '2019-05-13 07:31:55', '2019-05-13 07:31:55'),
(472758, 561, '1701', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472759, 562, '1706', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472760, 563, '1708', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472761, 564, '1713', 1059, 70, 2, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472762, 565, '1717', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:55'),
(472763, 566, '1720', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:55'),
(472764, 567, '1726', 1059, 70, 0, '2019-05-13 07:32:54', '2019-05-13 07:32:55'),
(472765, 568, 'float income;\r\ncin>>income ;\r\nif(income<0.0)\r\ncout<<\"You are going farther into debet every month.\"<<endl;\r\nelse if (income<1200.00)\r\ncout<<\"You are living below the poverty line .\"<<endl;\r\nelse if (income <2500.00)\r\ncout<<\"You are living in moderate comfort.\"<<endl;\r\nelse if (income >=2500.00)\r\ncout<<\"You are well off.\"  <<endl;', 1059, 70, NULL, '2019-05-13 07:32:54', '2019-05-13 07:32:54');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(472766, 569, 'do\r\n{\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\ncout<<\"Enter anon _negative integer\";\r\ncin>>n;\r\n}  \r\nwhile(n<0)\r\n{\r\nint n;\r\ncout<<\"Enter a non _negative:\";\r\ncin>>n;\r\n\r\n}', 1059, 70, NULL, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472767, 570, '#include<iostream>\r\nusing namespace std;\r\nint  fact(int n);\r\nint main()  \r\n{\r\nint a;\r\nint f;\r\ncout<<\"  Enterr n\"<<endl;\r\ncin>>a;\r\nfor(int i=0 ; i<=a ;  i++)\r\n{\r\nf=f+i;\r\n}\r\ncout<<\"fact =\"<<f;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}\r\nint fact (int n);', 1059, 70, NULL, '2019-05-13 07:32:54', '2019-05-13 07:32:54'),
(472905, 561, '1702', 956, 70, 0, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472906, 562, '1707', 956, 70, 0, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472907, 563, '1711', 956, 70, 2, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472908, 564, '1713', 956, 70, 2, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472909, 565, '1717', 956, 70, 0, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472910, 566, '1720', 956, 70, 0, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472911, 567, '1725', 956, 70, 0, '2019-05-13 07:33:24', '2019-05-13 07:33:25'),
(472912, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 956, 70, NULL, '2019-05-13 07:33:24', '2019-05-13 07:33:24'),
(472913, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n do{\r\n       if(n>0){\r\n       break;\r\n         }\r\n        cout << \"The integer you entered is negative.\" << endl;\r\n        cout << \"Enter a non-negative integer: \"; \r\n         cin>> n ;\r\n        }while(n<0)', 956, 70, NULL, '2019-05-13 07:33:24', '2019-05-13 07:33:24'),
(472914, 570, 'int factorial(int n){\r\n            int c=1 ;    \r\n            for(int i=1;i<=n; i++ ){\r\n              c*=i;\r\n              }\r\n               return c;\r\n               }', 956, 70, NULL, '2019-05-13 07:33:24', '2019-05-13 07:33:24'),
(472961, 561, '1702', 1065, 70, 0, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472962, 562, '1705', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472963, 563, '1711', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472964, 564, '1713', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472965, 565, '1716', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472966, 566, '1722', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472967, 567, '1724', 1065, 70, 2, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472968, 568, '.', 1065, 70, NULL, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472969, 569, '.', 1065, 70, NULL, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(472970, 570, 'int fact(n)\r\n{\r\nif (n==0)\r\nreturn n;\r\nelse\r\nreturn  fact(n);\r\n}\r\nint main()\r\n{\r\ncout <<fact(n);\r\nsystem (\"pause\");\r\n}', 1065, 70, NULL, '2019-05-13 07:33:39', '2019-05-13 07:33:39'),
(473211, 561, '1700', 989, 70, 2, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473212, 562, '1706', 989, 70, 0, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473213, 563, '1711', 989, 70, 2, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473214, 564, '1715', 989, 70, 0, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473215, 565, '1717', 989, 70, 0, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473216, 566, '1720', 989, 70, 0, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473217, 567, '1726', 989, 70, 0, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473218, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 989, 70, NULL, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473219, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo\r\n{\r\n   cout << \"The integer you entered is negative.\" << endl;\r\n   cout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}     \r\nwhile(n<0);', 989, 70, NULL, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473220, 570, '#include<iostream>\r\nusing namespace std;\r\ndouble f=0;\r\ndouble fact(double x)\r\n{\r\n    if(x>0)\r\n        f= x*f(x-1);\r\nreturn f;\r\n} \r\nint main()\r\n{\r\ndouble x;\r\ncin>>x;\r\ncout<<f(x)<<endl;\r\n}', 989, 70, NULL, '2019-05-13 07:34:31', '2019-05-13 07:34:31'),
(473373, 561, '1702', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473374, 562, '1706', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473375, 563, '1710', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473376, 564, '1714', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473377, 565, '1717', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473378, 566, '1720', 957, 70, 0, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473379, 567, '1724', 957, 70, 2, '2019-05-13 07:35:07', '2019-05-13 07:35:08'),
(473380, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 957, 70, NULL, '2019-05-13 07:35:07', '2019-05-13 07:35:07'),
(473381, 569, 'do\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}while(n<0)', 957, 70, NULL, '2019-05-13 07:35:07', '2019-05-13 07:35:07'),
(473382, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nif(x<=1)\r\nraturn 1;\r\nelse\r\nreturn x*fact(x-1);', 957, 70, NULL, '2019-05-13 07:35:07', '2019-05-13 07:35:07'),
(473466, 561, '1700', 1047, 70, 2, '2019-05-13 07:35:19', '2019-05-13 07:35:19'),
(473468, 562, '1705', 1047, 70, 2, '2019-05-13 07:35:19', '2019-05-13 07:35:19'),
(473469, 563, '1708', 1047, 70, 0, '2019-05-13 07:35:19', '2019-05-13 07:35:20'),
(473471, 564, '1715', 1047, 70, 0, '2019-05-13 07:35:19', '2019-05-13 07:35:20'),
(473473, 565, '1716', 1047, 70, 2, '2019-05-13 07:35:19', '2019-05-13 07:35:20'),
(473475, 566, '1720', 1047, 70, 0, '2019-05-13 07:35:19', '2019-05-13 07:35:20'),
(473477, 567, '1727', 1047, 70, 0, '2019-05-13 07:35:19', '2019-05-13 07:35:20'),
(473479, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\n     cin >> income; \r\n if (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\n{\r\ncout << \"You are well off.\" << endl;\r\n}', 1047, 70, NULL, '2019-05-13 07:35:19', '2019-05-13 07:35:19'),
(473481, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n>0)', 1047, 70, NULL, '2019-05-13 07:35:19', '2019-05-13 07:35:19'),
(473483, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact (int x)\r\n{\r\nif(x==0||x==1)\r\nreturn1;\r\nelse \r\nreturn fact *fact (x-1); \r\nint main()\r\n{\r\nint a;\r\ncin>>a;\r\ncout<<fact (X);', 1047, 70, NULL, '2019-05-13 07:35:19', '2019-05-13 07:35:19'),
(473543, 561, '1700', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473545, 562, '1705', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473546, 563, '1711', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473547, 564, '1713', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473548, 565, '1716', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473549, 566, '1722', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473550, 567, '1724', 918, 70, 2, '2019-05-13 07:35:28', '2019-05-13 07:35:29'),
(473551, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 918, 70, NULL, '2019-05-13 07:35:28', '2019-05-13 07:35:28'),
(473552, 569, 'do {\r\n cout << \"The integer you entered is negative.\" << endl;\r\n cout << \"Enter a non-negative integer: \";\r\n cin >> n;\r\n}while(n<0)', 918, 70, NULL, '2019-05-13 07:35:28', '2019-05-13 07:35:28'),
(473553, 570, 'int fact(int x) {\r\n    if(x==1)\r\n        return 1;\r\n    return x*fact(x-1);\r\n}', 918, 70, NULL, '2019-05-13 07:35:28', '2019-05-13 07:35:28'),
(473900, 561, '1700', 977, 70, 2, '2019-05-13 07:36:04', '2019-05-13 07:36:05'),
(473901, 562, '1705', 977, 70, 2, '2019-05-13 07:36:04', '2019-05-13 07:36:05'),
(473902, 563, '1710', 977, 70, 0, '2019-05-13 07:36:04', '2019-05-13 07:36:05'),
(473903, 564, '1713', 977, 70, 2, '2019-05-13 07:36:04', '2019-05-13 07:36:05'),
(473904, 565, '1717', 977, 70, 0, '2019-05-13 07:36:04', '2019-05-13 07:36:05'),
(473905, 566, '1722', 977, 70, 2, '2019-05-13 07:36:05', '2019-05-13 07:36:05'),
(473906, 567, '1725', 977, 70, 0, '2019-05-13 07:36:05', '2019-05-13 07:36:05'),
(473907, 568, 'float income;\r\n  cout << \"Enter your monthly income: \";  \r\ncin >> income;\r\n      if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\n         else if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\n                       cout << \"You are well off.\" << endl;', 977, 70, NULL, '2019-05-13 07:36:05', '2019-05-13 07:36:05'),
(473908, 569, 'do\r\n{  \r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n; \r\n}\r\nwhile\r\n(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 977, 70, NULL, '2019-05-13 07:36:05', '2019-05-13 07:36:05'),
(473909, 570, '#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\nintfactorial(int n)\r\nif(n==0||n==1)\r\nreturn 1;\r\nelse\r\nreturn  n factorial(n-1);\r\nint main(){\r\nint x,z;\r\ncin>>x;\r\nz=factorial(x);\r\ncout <<z;\r\n}', 977, 70, NULL, '2019-05-13 07:36:05', '2019-05-13 07:36:05'),
(474055, 561, '1700', 979, 70, 2, '2019-05-13 07:36:27', '2019-05-13 07:36:28'),
(474056, 562, '1704', 979, 70, 0, '2019-05-13 07:36:27', '2019-05-13 07:36:28'),
(474057, 563, '1711', 979, 70, 2, '2019-05-13 07:36:27', '2019-05-13 07:36:28'),
(474058, 564, '1713', 979, 70, 2, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474059, 565, '1716', 979, 70, 2, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474061, 566, '1723', 979, 70, 0, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474063, 567, '1726', 979, 70, 0, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474065, 568, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\n\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0){\r\ncout << \"You are going farther into debt every month.\" << endl;\r\n\r\ncout << \"You are living below the poverty line.\" << endl;\r\n}\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;\r\n\r\n\r\n\r\n}', 979, 70, NULL, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474067, 569, '#include <iostream> \r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\ndo\r\nwhile(n<0);\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}\r\nreturn 0;\r\n}', 979, 70, NULL, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474069, 570, '#include <iostream>\r\nusing namespace std ;\r\nint fac(int x);\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout <<\"the fac is\"<<x<<\"\\n\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n}   \r\nint fac(int x)\r\n{\r\nfor(i=1;i<=x;i++)\r\nx*=i;\r\nreturn x;\r\n}', 979, 70, NULL, '2019-05-13 07:36:28', '2019-05-13 07:36:28'),
(474105, 561, '1700', 1022, 70, 2, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474106, 562, '1705', 1022, 70, 2, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474107, 563, '1710', 1022, 70, 0, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474108, 564, '1713', 1022, 70, 2, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474109, 565, '1717', 1022, 70, 0, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474110, 566, '1720', 1022, 70, 0, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474111, 567, '1727', 1022, 70, 0, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474112, 568, 'anser\r\nelse if (income > 0.0 && income < 1200.00)                                                              // else if (income >= 0.0 && income < 1200.00)    =\r\n         \r\nelse (income > 1200.00 && income < 2500.00)   \r\n                                                                                                                                                     //=\r\n else                                                                                                                                                    //if else (income >= 2500.00);', 1022, 70, NULL, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474113, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n<0);\r\n\r\nreturn 0;\r\n}', 1022, 70, NULL, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474114, 570, '#include<iostream>\r\nusing namespace std;\r\nint f(int n)\r\n{\r\nif(n==0||n==1)\r\nreturn n;\r\nelse\r\nreturn f(n-1)+f(n-2);\r\n\r\n}\r\nint main()\r\n{\r\nint number;\r\ncin>>number;\r\ncout<<f(number)<<endl;\r\n}', 1022, 70, NULL, '2019-05-13 07:36:36', '2019-05-13 07:36:36'),
(474194, 561, '1700', 938, 70, 2, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474195, 562, '1706', 938, 70, 0, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474196, 563, '1708', 938, 70, 0, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474197, 564, '1715', 938, 70, 0, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474198, 565, '1717', 938, 70, 0, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474199, 566, '1722', 938, 70, 2, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474200, 567, '1727', 938, 70, 0, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474201, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 938, 70, NULL, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474202, 569, 'int n=1;\r\n\r\ndo{cout<< \"Enter a non-negative integer: \";\r\ncin>>n;\r\nwhile(n>0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 938, 70, NULL, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474203, 570, 'int fact(int n){\r\nif(n==0){\r\nreturn 1;\r\n}\r\nelse{\r\nreturn n*fact(n-1)\r\n}\r\n}', 938, 70, NULL, '2019-05-13 07:37:00', '2019-05-13 07:37:00'),
(474287, 561, '1702', 974, 70, 0, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474288, 562, '1705', 974, 70, 2, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474289, 563, '1709', 974, 70, 0, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474290, 564, '1713', 974, 70, 2, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474291, 565, '1717', 974, 70, 0, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474292, 566, '1722', 974, 70, 2, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474293, 567, '1727', 974, 70, 0, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474294, 568, 'else if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl; \r\n\r\n\r\nelse    \r\ncout << \"You are well off.\" << endl;', 974, 70, NULL, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474295, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n<0);', 974, 70, NULL, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474296, 570, '#include <iostream>\r\nusing name space std;\r\nint  factorial(int n)\r\nif (n==0&&n==1)\r\nreturn 1;\r\nelse \r\nreturn n*factorial(n-1);\r\nint main ()\r\n{\r\nint n;\r\ncin>>n;\r\ncout <<factorial;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 974, 70, NULL, '2019-05-13 07:37:22', '2019-05-13 07:37:22'),
(474481, 561, '1702', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474482, 562, '1704', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474483, 563, '1710', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474484, 564, '1713', 942, 70, 2, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474485, 565, '1717', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474486, 566, '1720', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474487, 567, '1726', 942, 70, 0, '2019-05-13 07:38:18', '2019-05-13 07:38:19'),
(474488, 568, 'float income;\r\ncin>>income;\r\nif(income <0.0)\r\ncout<<\"you are going father into debt every month\";\r\n  else if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\";\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" ;\r\nelse if (income >= 2500.00)\r\ncout << \"You a re well off;', 942, 70, NULL, '2019-05-13 07:38:18', '2019-05-13 07:38:18'),
(474489, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo {\r\nn--;\r\n\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 942, 70, NULL, '2019-05-13 07:38:18', '2019-05-13 07:38:18'),
(474490, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\n\r\nif(n=-=1)\r\nreturn 1;\r\nelse \r\nreturn n*fact(n-1);\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\nint d=fact(x);\r\ncout<<d<<endl;\r\nsysytem(\"pause);\r\n\r\n}', 942, 70, NULL, '2019-05-13 07:38:18', '2019-05-13 07:38:18'),
(474544, 561, '1700', 973, 70, 2, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474545, 562, '1707', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474546, 563, '1710', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474547, 564, '1714', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474548, 565, '1717', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474549, 566, '1720', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474550, 567, '1725', 973, 70, 0, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474551, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse cout << \"You are well off.\" << endl;', 973, 70, NULL, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474552, 569, 'cout << \"Enter a non-negative integer: \";\r\nint n;\r\ndo\r\n{\r\ncin>>n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}while ( n<0)   ;', 973, 70, NULL, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474553, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact (int n)\r\n{\r\nif (n==1)\r\n{\r\nreturn 1;\r\n}\r\nelse \r\n{\r\nreturn n*fact(n-1)\r\n}\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin >>n;\r\ncout <<fact(n)<<endl;\r\nreurn 0;\r\n}', 973, 70, NULL, '2019-05-13 07:38:42', '2019-05-13 07:38:42'),
(474763, 561, '1700', 978, 70, 2, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474764, 562, '1705', 978, 70, 2, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474765, 563, '1708', 978, 70, 0, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474766, 564, '1713', 978, 70, 2, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474767, 565, '1717', 978, 70, 0, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474768, 566, '1722', 978, 70, 2, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474769, 567, '1725', 978, 70, 0, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474770, 568, 'float income\r\ncout<<\"enter your monthly income\"\r\ncin>> income;\r\nif(income<1200.00)\r\ncout<<\"you are living below the poverty line\"<<endl;\r\nelse if(income>=1200.00&&income <2500.00)\r\ncout<<\"you are limoderate comfort \"<<endl;\r\nelse if(income >=2500.00)\r\ncout<<\"you are well off \"<<endl', 978, 70, NULL, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474771, 569, 'int n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\nif(n<0) {\r\ndo{\r\ncout<<\"the integer you enter is negative \"<<endl;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n)\r\n\r\n}', 978, 70, NULL, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474772, 570, 'int fac(int x){\r\nif(x==1)\r\nreturn1;\r\nreturn x* fac(x-1)\r\n}                                                                                        \r\nint main (){\r\nint a,z;\r\ncin>>a;\r\nz=fac(a);\r\ncout<<z<<endl;\r\n\r\n}', 978, 70, NULL, '2019-05-13 07:39:22', '2019-05-13 07:39:22'),
(474783, 561, '1700', 906, 70, 2, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474784, 562, '1705', 906, 70, 2, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474785, 563, '1711', 906, 70, 2, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474786, 564, '1713', 906, 70, 2, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474787, 565, '1717', 906, 70, 0, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474788, 566, '1721', 906, 70, 0, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474789, 567, '1724', 906, 70, 2, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474790, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 906, 70, NULL, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474791, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}            \r\nwhile (n < 0)', 906, 70, NULL, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(474792, 570, 'int fact(n)\r\n{\r\nif(n==0&&n==1)\r\nreturn 1;\r\nelse\r\n{\r\nreturn  n*fact(n-1);\r\n}\r\n}\r\nint main ()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact(x);\r\n}', 906, 70, NULL, '2019-05-13 07:39:23', '2019-05-13 07:39:23'),
(475282, 561, '1700', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475283, 562, '1707', 1066, 70, 0, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475284, 563, '1711', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475285, 564, '1713', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475286, 565, '1716', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475287, 566, '1722', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475288, 567, '1724', 1066, 70, 2, '2019-05-13 07:40:18', '2019-05-13 07:40:19'),
(475289, 568, '#include <iostream>\r\nusing namespace std;\r\nint main()', 1066, 70, NULL, '2019-05-13 07:40:18', '2019-05-13 07:40:18'),
(475290, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()', 1066, 70, NULL, '2019-05-13 07:40:18', '2019-05-13 07:40:18'),
(475291, 570, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\r\n\r\n\r\n}', 1066, 70, NULL, '2019-05-13 07:40:18', '2019-05-13 07:40:18'),
(475292, 561, '1700', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475293, 562, '1705', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475294, 563, '1711', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475295, 564, '1713', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475296, 565, '1717', 982, 70, 0, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475297, 566, '1722', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475298, 567, '1724', 982, 70, 2, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475299, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl', 982, 70, NULL, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475300, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)\r\n}', 982, 70, NULL, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475301, 570, '#include<iostream>\r\nusing namespace std;\r\nint Fact(int x){\r\nif(x==0||x==1)\r\nreturn 1;\r\nelse{\r\nreturn x*Fact(x-1);\r\n}\r\n}\r\nint main(){\r\nint x;\r\ncin>>x;\r\nif(x<0){\r\nx*=-1;\r\ncout<<Fact(x)*-1<<endl;\r\n}\r\nelse\r\ncout<<Fact(x)<<endl;\r\nreturn 0;\r\n}', 982, 70, NULL, '2019-05-13 07:40:19', '2019-05-13 07:40:19'),
(475390, 561, '1702', 1067, 70, 0, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475391, 562, '1705', 1067, 70, 2, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475392, 563, '1708', 1067, 70, 0, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475393, 564, '1713', 1067, 70, 2, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475394, 565, '1718', 1067, 70, 0, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475395, 566, '1723', 1067, 70, 0, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475396, 567, '1725', 1067, 70, 0, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475397, 568, 'float income;\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1067, 70, NULL, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475398, 569, 'while(n>0) \r\n                       {                                                                         \r\n int n;\r\ncout<<\"enter a non-nagative intege \";\r\n\r\ncout<<\"the integer you entered is nagative \"<<endl;\r\ndo\r\ncout<<\"enter a non-nagative intege \";\r\ncin.>>n;\r\n}', 1067, 70, NULL, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475399, 570, '#include <iostream>\r\nusing namespace std;\r\n                      long long fact (intx)\r\nif(x==0)\r\nretern 1;\r\nretern x*fact(x-1)\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact x;\r\ncout<<endl;\r\nsystem (\"pause\");\r\n}', 1067, 70, NULL, '2019-05-13 07:40:34', '2019-05-13 07:40:34'),
(475440, 561, '1700', 896, 70, 2, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475441, 562, '1706', 896, 70, 0, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475442, 563, '1710', 896, 70, 0, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475443, 564, '1713', 896, 70, 2, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475444, 565, '1719', 896, 70, 0, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475445, 566, '1722', 896, 70, 2, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475446, 567, '1725', 896, 70, 0, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475447, 568, 'f loat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income > 0.0 && income <= 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income > 1200.00 && income <= 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income > 2500.00)\r\ncout << \"You are well off.\" << endl;', 896, 70, NULL, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475448, 569, 'int n;\r\ncin>>n;       \r\n do{cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n\r\n}while(n<0);     \r\n            cout << \"Enter a non-negative integer: \";', 896, 70, NULL, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475449, 570, '#include<iostream>\r\nusing namespace std;\r\nint factorial(int n);\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<factorial(n);\r\n\r\n\r\n\r\n}\r\nint factorial(int n)\r\n{\r\nint n;\r\nif(n==0)\r\nreturn 1;\r\nelse\r\nreturn n*factorial(n-1);\r\n\r\n\r\n}', 896, 70, NULL, '2019-05-13 07:40:55', '2019-05-13 07:40:55'),
(475562, 561, '1700', 1062, 70, 2, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475563, 562, '1705', 1062, 70, 2, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475564, 563, '1710', 1062, 70, 0, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475565, 564, '1712', 1062, 70, 0, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475566, 565, '1717', 1062, 70, 0, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475567, 566, '1720', 1062, 70, 0, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475568, 567, '1726', 1062, 70, 0, '2019-05-13 07:41:40', '2019-05-13 07:41:41'),
(475569, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n{\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nbreak;\r\n}\r\nelse if ( income < 1200.00)\r\n{\r\ncout << \"You are living below the poverty line.\" << endl;\r\nbreak;\r\n}\r\nelse if ( income < 2500.00)\r\n{\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nbreak;\r\n}\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1062, 70, NULL, '2019-05-13 07:41:40', '2019-05-13 07:41:40'),
(475570, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n};\r\nwhile(n-1<0)', 1062, 70, NULL, '2019-05-13 07:41:40', '2019-05-13 07:41:40'),
(475571, 570, 'int fact (int n)\r\n{\r\n  if(n=0)\r\nreturn 1;\r\nif(n=1)\r\nreturn 1;\r\nreturn n*fact(n-1);\r\n\r\n}', 1062, 70, NULL, '2019-05-13 07:41:40', '2019-05-13 07:41:40'),
(475686, 561, '1700', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475687, 562, '1705', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475688, 563, '1711', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475690, 564, '1712', 1051, 70, 0, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475691, 561, '1700', 988, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475693, 565, '1716', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475694, 562, '1706', 988, 70, 0, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475696, 566, '1722', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475697, 563, '1711', 988, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475699, 567, '1724', 1051, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475700, 564, '1715', 988, 70, 0, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475702, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income; \r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n        cout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\n        cout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\n        cout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\n        cout << \"You are well off.\" << endl;                                                                              \r\n}', 1051, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475703, 565, '1717', 988, 70, 0, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475704, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n      int n;\r\n     cout << \"Enter a non-negative integer: \";\r\n     cin >> n;\r\n     if(n<0){\r\n             do {\r\n                     cout << \"The integer you entered is negative.\" << endl;\r\n                     cout << \"Enter a non-negative integer: \";\r\n                     cin >> n;\r\n             }while(n<0); \r\n       }                                                                                                          \r\n}', 1051, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475706, 566, '1723', 988, 70, 0, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475707, 570, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int x){\r\n        if(x<=1){\r\n              return 1; \r\n         }\r\n        else{\r\n        return (x*fact(x-1));\r\n         }\r\n}    \r\nint main(){\r\n     int x;\r\n     cin>>x;\r\n     cout<<fact(x);\r\n}', 1051, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475709, 567, '1724', 988, 70, 2, '2019-05-13 07:42:20', '2019-05-13 07:42:21'),
(475710, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;        \r\nif (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 988, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475711, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\n    cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)', 988, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475712, 570, '#include<iostream>\r\nusing namespace std;\r\nint f(int x,int v=1)\r\n{\r\n     if(x==1)\r\nreturn x;\r\nelse   if(x>0)\r\nv=x*f(x-1);\r\nreturn v;\r\n} \r\nint main()\r\n{\r\n     int x;\r\ncin>>x;\r\ncout<<f(x)<<endl;\r\n}', 988, 70, NULL, '2019-05-13 07:42:20', '2019-05-13 07:42:20'),
(475919, 561, '1702', 901, 70, 0, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475920, 562, '1705', 901, 70, 2, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475921, 563, '1711', 901, 70, 2, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475922, 564, '1713', 901, 70, 2, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475923, 565, '1717', 901, 70, 0, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475924, 566, '1720', 901, 70, 0, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475925, 567, '1724', 901, 70, 2, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475926, 568, 'float income;\r\ncout<<\"Enter your monthly income: \"    ;\r\ncin>>income;\r\nif(income<1200.00)\r\ncout<<\"You are living below the poverty line.\" << endl;               \r\n        else if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 901, 70, NULL, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475927, 569, 'int n;\r\ncin>>n;       \r\n        do{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";     \r\n}while(n<0)', 901, 70, NULL, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475928, 570, '#include<iostream>\r\nusing namespace std;\r\nfac(int x)\r\nint main{\r\nint x;\r\ncin>>x;\r\nfor(int i=0;i<x;i--)\r\ncout<<\"the factorial of number\"<<i<<\"=\"<<fac(i);\r\n\r\n}\r\n\r\nfac(int x)\r\nif(x==0)\r\nreturn 1;\r\nelse\r\nreturn f=x*fac(x-1);', 901, 70, NULL, '2019-05-13 07:43:13', '2019-05-13 07:43:13'),
(475939, 561, '1701', 1055, 70, 0, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475940, 562, '1705', 1055, 70, 2, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475941, 563, '1710', 1055, 70, 0, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475942, 564, '1715', 1055, 70, 0, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475943, 565, '1717', 1055, 70, 0, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475944, 566, '1723', 1055, 70, 0, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475945, 567, '1724', 1055, 70, 2, '2019-05-13 07:43:16', '2019-05-13 07:43:17'),
(475946, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ncout<<\"Enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"you are going farther into debt every month.\";\r\nelse if(incom<1200.00)\r\ncout <<\"you are living below the poverty line.\"<<endl;\r\nelse if(income<2500.00)\r\ncout<<\"you are living in moderate comfort.\"<<endl;\r\nelse\r\ncout<<\"you are well off.\"<<endl;\r\nreturn 0;\r\nsystem(\"pause\");\r\n}', 1055, 70, NULL, '2019-05-13 07:43:16', '2019-05-13 07:43:16'),
(475947, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"Enter anon_negative integer:\";\r\ndo\r\n{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter anon_negative integer:\";\r\n}\r\nwhile(n<0)\r\n\r\n\r\n}', 1055, 70, NULL, '2019-05-13 07:43:16', '2019-05-13 07:43:16'),
(475948, 570, '#include<iostream>\r\nusing namespace std;\r\n int main()\r\n{\r\n\r\n}', 1055, 70, NULL, '2019-05-13 07:43:16', '2019-05-13 07:43:16'),
(475979, 561, '1700', 966, 70, 2, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475980, 562, '1704', 966, 70, 0, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475981, 563, '1711', 966, 70, 2, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475982, 564, '1713', 966, 70, 2, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475983, 565, '1716', 966, 70, 2, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475984, 566, '1721', 966, 70, 0, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475985, 567, '1724', 966, 70, 2, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475986, 568, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 966, 70, NULL, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475987, 569, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0){\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n<0);\r\n}\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 966, 70, NULL, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(475988, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int x,int f=1){\r\nif(x==0||x==1)\r\nreturn f;\r\nelse{\r\nf*=x;\r\nfact(x-1,f);\r\n}\r\n}\r\nint main(){\r\nint x;\r\ncin>>x;\r\ncout<<fact(x)<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 966, 70, NULL, '2019-05-13 07:43:33', '2019-05-13 07:43:33'),
(476007, 561, '1700', 1045, 70, 2, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476008, 562, '1706', 1045, 70, 0, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476009, 563, '1710', 1045, 70, 0, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476010, 564, '1712', 1045, 70, 0, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476011, 565, '1716', 1045, 70, 2, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476012, 566, '1722', 1045, 70, 2, '2019-05-13 07:43:36', '2019-05-13 07:43:37'),
(476013, 567, '1724', 1045, 70, 2, '2019-05-13 07:43:37', '2019-05-13 07:43:37'),
(476014, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1045, 70, NULL, '2019-05-13 07:43:37', '2019-05-13 07:43:37'),
(476015, 569, 'int n;\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n  }     \r\n    }\r\nwhile (n > 0)', 1045, 70, NULL, '2019-05-13 07:43:37', '2019-05-13 07:43:37'),
(476016, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{if (n==1||n==0)\r\nreturn 1;\r\nelse \r\nreturn n*fact(n-1);\r\n}        \r\nint main(){\r\n\r\nint n;\r\ncin>>n;\r\ncout<<fact(n);\r\n}', 1045, 70, NULL, '2019-05-13 07:43:37', '2019-05-13 07:43:37'),
(476084, 561, '1700', 1071, 70, 2, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476085, 562, '1705', 1071, 70, 2, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476086, 563, '1711', 1071, 70, 2, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476087, 564, '1714', 1071, 70, 0, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476088, 565, '1716', 1071, 70, 2, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476089, 566, '1721', 1071, 70, 0, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476090, 567, '1726', 1071, 70, 0, '2019-05-13 07:43:55', '2019-05-13 07:43:56'),
(476091, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1071, 70, NULL, '2019-05-13 07:43:55', '2019-05-13 07:43:55'),
(476092, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}while (n < 0)', 1071, 70, NULL, '2019-05-13 07:43:55', '2019-05-13 07:43:55'),
(476093, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n);\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\n\r\n}\r\nint fact(int n)\r\n{\r\nfor(int i=1 ; i<=n ; i++)\r\nreturn fact*=i;\r\n}', 1071, 70, NULL, '2019-05-13 07:43:55', '2019-05-13 07:43:55'),
(476123, 561, '1700', 1044, 70, 2, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476124, 562, '1705', 1044, 70, 2, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476125, 563, '1708', 1044, 70, 0, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476126, 564, '1713', 1044, 70, 2, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476127, 565, '1716', 1044, 70, 2, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476128, 566, '1720', 1044, 70, 0, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476129, 567, '1724', 1044, 70, 2, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476130, 568, 'float income;\r\ncout<<\"Enter your monthly income :\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"you are going farther into debt every month \"<<endl;\r\nelse if(income>=0.0 && income<1200.00)\r\ncout<<\"you are living bleow the poverty line .\"<<endl;\r\nelse if(income >=1200.00 && income <2500.00)\r\n        cout << \"You are living in moderate comfort.\" << endl;   \r\nelse \r\n         cout << \"You are well off.\" << endl;', 1044, 70, NULL, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476131, 569, 'int n;\r\n  cout<<\"Enter anon-negative integer:\";\r\ncin>>n; \r\n{\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer :\";\r\ncin>>n;\r\n}\r\ndo while (n<o)   {}', 1044, 70, NULL, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476132, 570, '# include <iostream>\r\nusing namespace std;\r\nint  fact (int x)\r\n{\r\nif(x==1)\r\nreturn  1;\r\nelse\r\nreturn \r\nx*fact(x-1);\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact(x)<<endl;l', 1044, 70, NULL, '2019-05-13 07:43:59', '2019-05-13 07:43:59'),
(476143, 561, '1700', 1052, 70, 2, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476144, 562, '1705', 1052, 70, 2, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476145, 563, '1708', 1052, 70, 0, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476146, 564, '1712', 1052, 70, 0, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476147, 565, '1717', 1052, 70, 0, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476148, 566, '1722', 1052, 70, 2, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476149, 567, '1726', 1052, 70, 0, '2019-05-13 07:44:16', '2019-05-13 07:44:17'),
(476150, 568, 'float income;   \r\n                cout << \"Enter your monthly income: \";\r\ncin >> income;       \r\n                  if (income < 0)\r\n                                     cout << \"You are going farther into debt every month.\" << endl;    \r\n         else if (income >= 0 && income < 1200)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200 && income < 2500)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500)\r\ncout << \"You are well off.\" << endl;', 1052, 70, NULL, '2019-05-13 07:44:16', '2019-05-13 07:44:16'),
(476151, 569, 'do{\r\nint n;\r\ncout<<\"Enter a non -negative integer:\";\r\n}while(n<0)\r\ncout << \"The integer you entered is negative.\" << endl;', 1052, 70, NULL, '2019-05-13 07:44:16', '2019-05-13 07:44:16'),
(476152, 570, 'int  get factorial (int n){\r\nfor(int i=1;i<n; i++)\r\nif(n==o|| n==1)\r\nreturn 0;\r\nelse \r\nreturn get factorial(n)*(n-1)\r\n\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\nget factorial(n);\r\nsystem(\"pause\");                 \r\n}', 1052, 70, NULL, '2019-05-13 07:44:16', '2019-05-13 07:44:16'),
(476285, 561, '1700', 969, 70, 2, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476286, 562, '1705', 969, 70, 2, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476287, 563, '1708', 969, 70, 0, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476288, 564, '1713', 969, 70, 2, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476289, 565, '1718', 969, 70, 0, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476290, 566, '1722', 969, 70, 2, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476291, 567, '1727', 969, 70, 0, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476292, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse {\r\ncout << \"You are well off.\" << endl;\r\n}\r\n}', 969, 70, NULL, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476293, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ndo{\r\n          cout << \"Enter a non-negative integer: \";\r\n          cin>>n;\r\n           cout << \"The integer you entered is negative.\" << endl;  \r\n }\r\nwhile(n<0);    \r\nif(n=0)\r\nbreak;\r\n}', 969, 70, NULL, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476294, 570, '#include<iostream>\r\nusing namespace std;\r\nint f(int x)\r\n{\r\nif(x==0)\r\nreturn 1;\r\nelse\r\n{\r\nif(x==1)\r\nreturn 1;\r\nreturn x* f(x-1);\r\n}\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<f(x)<<endl;\r\n}', 969, 70, NULL, '2019-05-13 07:45:09', '2019-05-13 07:45:09'),
(476314, 561, '1700', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476315, 562, '1705', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476316, 563, '1711', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476317, 564, '1712', 233, 70, 0, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476318, 565, '1716', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476319, 566, '1722', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476320, 567, '1724', 233, 70, 2, '2019-05-13 07:45:17', '2019-05-13 07:45:17');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(476321, 568, 'if (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 233, 70, NULL, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476322, 569, 'do\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n} \r\nwhile(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}', 233, 70, NULL, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476323, 570, 'int fact(n)\r\n{\r\nif (n==0)\r\nreturn 1;\r\nreturn (n*fact(n-1));\r\n}', 233, 70, NULL, '2019-05-13 07:45:17', '2019-05-13 07:45:17'),
(476333, 561, '1700', 972, 70, 2, '2019-05-13 07:45:23', '2019-05-13 07:45:23'),
(476334, 562, '1705', 972, 70, 2, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476335, 563, '1708', 972, 70, 0, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476336, 564, '1713', 972, 70, 2, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476337, 565, '1717', 972, 70, 0, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476338, 566, '1720', 972, 70, 0, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476339, 567, '1726', 972, 70, 0, '2019-05-13 07:45:23', '2019-05-13 07:45:24'),
(476340, 568, 'int income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0 && income < 1200)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200 && income < 2500)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500)\r\ncout << \"You are well off.\" << endl;', 972, 70, NULL, '2019-05-13 07:45:23', '2019-05-13 07:45:23'),
(476341, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\nif(n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\nwhile (n > 0)\r\n{\r\n\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 972, 70, NULL, '2019-05-13 07:45:23', '2019-05-13 07:45:23'),
(476342, 570, '#include <iostream>\r\n using namespace std;\r\nint fact (int n){\r\nif (n==0 II n==1)\r\nreturn 1;\r\nelse\r\n   return n*fact(n-1);\r\n}\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 972, 70, NULL, '2019-05-13 07:45:23', '2019-05-13 07:45:23'),
(476343, 561, '1700', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476344, 562, '1705', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476345, 563, '1711', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476346, 564, '1712', 1064, 70, 0, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476347, 565, '1716', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476348, 566, '1722', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476349, 567, '1724', 1064, 70, 2, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476350, 568, 'float income;                \r\n cout << \"Enter your monthly income: \";\r\ncin >> income;     \r\n   if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\n             else if (income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1064, 70, NULL, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476351, 569, 'int n; \r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\n} \r\nwhile(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\n}', 1064, 70, NULL, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476352, 570, 'int  fact(int a){\r\nif (a==0)\r\nreturn a;\r\nelse \r\nreturn fact(a)*(fact(a)-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}', 1064, 70, NULL, '2019-05-13 07:45:27', '2019-05-13 07:45:27'),
(476373, 561, '1700', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476374, 562, '1705', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476375, 563, '1711', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476376, 564, '1713', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476377, 565, '1716', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476378, 566, '1722', 1046, 70, 2, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476379, 567, '1727', 1046, 70, 0, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476380, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\n    cout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income < 1200.00)\r\n    cout << \"You are living below the poverty line.\" << endl;\r\nelse if (income < 2500.00)\r\n    cout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\n    cout << \"You are well off.\" << endl;', 1046, 70, NULL, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476381, 569, 'int n;\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif (n < 0){\r\n    cout << \"The integer you entered is negative.\";\r\n}\r\n}while (n < 0);', 1046, 70, NULL, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476382, 570, 'int fact(int x){\r\nif (x == 0){\r\n      return 1;\r\n     }else {\r\n      return x * fact(x -1);\r\n     }\r\n}', 1046, 70, NULL, '2019-05-13 07:45:33', '2019-05-13 07:45:33'),
(476460, 561, '1700', 1058, 70, 2, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476461, 562, '1704', 1058, 70, 0, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476462, 563, '1708', 1058, 70, 0, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476463, 564, '1715', 1058, 70, 0, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476464, 565, '1716', 1058, 70, 2, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476465, 566, '1723', 1058, 70, 0, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476466, 567, '1726', 1058, 70, 0, '2019-05-13 07:46:07', '2019-05-13 07:46:08'),
(476467, 568, 'if(income>=2500.0)   \r\n         cout << \"Enter your monthly income: \";', 1058, 70, NULL, '2019-05-13 07:46:07', '2019-05-13 07:46:07'),
(476468, 569, 'do\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}   (while (n < 0);', 1058, 70, NULL, '2019-05-13 07:46:07', '2019-05-13 07:46:07'),
(476469, 570, '#include<iostream>\r\nusing namespace std;\r\nint main{\r\nint a;\r\ncin a;\r\nfor(int i=0 i<a;i++)\r\n{\r\na=a*i;\r\n}cout<<a;\r\n}', 1058, 70, NULL, '2019-05-13 07:46:07', '2019-05-13 07:46:07'),
(476514, 561, '1702', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476515, 562, '1707', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476516, 563, '1711', 1050, 70, 2, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476517, 564, '1714', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476518, 565, '1719', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476519, 566, '1720', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476520, 567, '1725', 1050, 70, 0, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476521, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1050, 70, NULL, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476522, 569, '#include<iostream>\r\nusing namespace std;\r\nint mian()\r\n{\r\nint n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}  \r\nwhile(n<0)\r\nreturn 0;\r\n}', 1050, 70, NULL, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476523, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact (int a)\r\n{\r\nif(a==0)\r\n     return 1;\r\nreturn a* fact (a-1);\r\n}\r\nint main()\r\n{ \r\nint x;\r\ncin>>x;\r\ncout<<fact(x)<<endl;\r\nreturn 0;\r\n}', 1050, 70, NULL, '2019-05-13 07:46:29', '2019-05-13 07:46:29'),
(476587, 561, '1700', 1014, 70, 2, '2019-05-13 07:47:08', '2019-05-13 07:47:08'),
(476588, 562, '1706', 1014, 70, 0, '2019-05-13 07:47:08', '2019-05-13 07:47:08'),
(476589, 563, '1709', 1014, 70, 0, '2019-05-13 07:47:08', '2019-05-13 07:47:09'),
(476590, 564, '1712', 1014, 70, 0, '2019-05-13 07:47:08', '2019-05-13 07:47:09'),
(476591, 565, '1716', 1014, 70, 2, '2019-05-13 07:47:08', '2019-05-13 07:47:09'),
(476592, 566, '1722', 1014, 70, 2, '2019-05-13 07:47:08', '2019-05-13 07:47:09'),
(476593, 567, '1725', 1014, 70, 0, '2019-05-13 07:47:08', '2019-05-13 07:47:09'),
(476594, 568, 'cout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1014, 70, NULL, '2019-05-13 07:47:08', '2019-05-13 07:47:08'),
(476595, 569, 'do {\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n} while (n>0 ) ;', 1014, 70, NULL, '2019-05-13 07:47:08', '2019-05-13 07:47:08'),
(476596, 570, '#include <iostream>\r\nusing namespace std  \r\nint fact (int n )   {\r\nif(n==0 ){\r\nreturn 1  ;\r\n}\r\nelse{\r\nreturn n * fact(n -1) ;\r\n}\r\n}      \r\nint main(){\r\nint n ; \r\ncin>>n; \r\ncout<<fact (n ) ;\r\n}', 1014, 70, NULL, '2019-05-13 07:47:08', '2019-05-13 07:47:08'),
(476873, 561, '1702', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476875, 562, '1707', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476876, 563, '1708', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476877, 564, '1715', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476878, 565, '1717', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476879, 566, '1722', 920, 70, 2, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476880, 567, '1725', 920, 70, 0, '2019-05-13 07:48:43', '2019-05-13 07:48:44'),
(476881, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\n else\r\ncout << \"You are well off.\" << endl;', 920, 70, NULL, '2019-05-13 07:48:43', '2019-05-13 07:48:43'),
(476882, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}   \r\n  while(n<0)', 920, 70, NULL, '2019-05-13 07:48:43', '2019-05-13 07:48:43'),
(476883, 570, 'int fact (int x)\r\n{ \r\nif(x==1)\r\n{\r\nreturn 1;\r\n}\r\nreturn x*fact(x-1);\r\n}', 920, 70, NULL, '2019-05-13 07:48:44', '2019-05-13 07:48:44'),
(477002, 561, '1702', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477003, 562, '1704', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477004, 563, '1708', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477005, 564, '1715', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477006, 565, '1717', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477007, 566, '1720', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477008, 567, '1727', 930, 70, 0, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477009, 568, '1:\r\n\r\nfloat income;\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 930, 70, NULL, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477010, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\nwhile(n<0);\r\n}', 930, 70, NULL, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477011, 570, 'int fact(int n)\r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse\r\nreturn n*fact(n-1);\r\n\r\n\r\n}', 930, 70, NULL, '2019-05-13 07:49:53', '2019-05-13 07:49:53'),
(477079, 561, '1701', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477080, 562, '1707', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477081, 563, '1708', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477082, 564, '1714', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477083, 565, '1717', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477084, 566, '1722', 971, 70, 2, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477085, 567, '1727', 971, 70, 0, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477086, 568, 'else if (income >= 2500.00)\r\ncout <<\"You are well off.\"<<endl;', 971, 70, NULL, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477087, 569, 'int n;\r\ncin >> n;\r\nif (n<0)\r\n{\r\ndo {\r\n          cout << \"The integer you entered is negative.\" << endl;\r\n          cout << \"Enter a non-negative integer: \";\r\n          cin >> n;\r\nwhile (n<0)\r\n}      \r\n}', 971, 70, NULL, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477088, 570, 'int fac(n)\r\n{\r\n    if (n == 0 )\r\n   return 1;\r\n   else\r\n   return   n * fac(n-1);\r\n}', 971, 70, NULL, '2019-05-13 07:50:08', '2019-05-13 07:50:08'),
(477215, 561, '1701', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477216, 562, '1704', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477217, 563, '1708', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477218, 564, '1713', 1077, 70, 2, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477219, 565, '1717', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477220, 566, '1720', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477221, 567, '1726', 1077, 70, 0, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477222, 568, 'float income;\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1077, 70, NULL, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477223, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\ncout << \"Enter a non-negative integer: \";\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 1077, 70, NULL, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477224, 570, '#include<iostream>\r\nusing namespace std;              \r\nint f(n);\r\nif(n>1)\r\nreturn n*f(n-1);\r\nelse\r\nreturn 1;', 1077, 70, NULL, '2019-05-13 07:51:19', '2019-05-13 07:51:19'),
(477313, 561, '1702', 980, 70, 0, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477314, 562, '1705', 980, 70, 2, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477315, 563, '1709', 980, 70, 0, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477316, 564, '1713', 980, 70, 2, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477317, 565, '1717', 980, 70, 0, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477318, 566, '1720', 980, 70, 0, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477319, 567, '1725', 980, 70, 0, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477320, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;   \r\nif (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;', 980, 70, NULL, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477321, 569, 'int n;\r\ncout<<\"enter anon-negative integer:\";\r\ncin >>n;\r\n{\r\ncin >>n\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\nwhile(n>0)', 980, 70, NULL, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477322, 570, 'int ()', 980, 70, NULL, '2019-05-13 07:52:08', '2019-05-13 07:52:08'),
(477405, 561, '1702', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477406, 562, '1706', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477407, 563, '1708', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477408, 564, '1712', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477409, 565, '1717', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477410, 566, '1722', 1061, 70, 2, '2019-05-13 07:52:56', '2019-05-13 07:52:57'),
(477411, 567, '1725', 1061, 70, 0, '2019-05-13 07:52:56', '2019-05-13 07:52:57'),
(477412, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfloat income;\r\ncout<<\"Enter your monthly income: \";\r\ncin >> income;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;\r\n}', 1061, 70, NULL, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477413, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\nif(x<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nelse{\r\nbreak;\r\n}\r\n}\r\nwhile(n<0);\r\n}', 1061, 70, NULL, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477414, 570, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int n){\r\nint f=1;\r\nif(n<1){\r\nreturn 1;\r\n}\r\nelse{\r\nf*=n;\r\nreturn f*fact(n-1);\r\n}\r\n}\r\nint main(){\r\nint n;\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\nreturn 0;\r\n}', 1061, 70, NULL, '2019-05-13 07:52:56', '2019-05-13 07:52:56'),
(477601, 561, '1700', 1016, 70, 2, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477602, 562, '1704', 1016, 70, 0, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477603, 563, '1708', 1016, 70, 0, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477604, 564, '1715', 1016, 70, 0, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477605, 565, '1716', 1016, 70, 2, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477606, 566, '1720', 1016, 70, 0, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477607, 567, '1726', 1016, 70, 0, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477608, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;', 1016, 70, NULL, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477609, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n{\r\n\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\nwhile (n < 0)\r\n}', 1016, 70, NULL, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477610, 570, '#include <iostream>\r\nusing namespace std ;\r\nint fac (int n);\r\nint main()\r\n{\r\nint n;\r\ncin >>n;\r\ncout << fac (n)\r\n\r\n}                      \r\nint fac(int n)\r\n{\r\nint factorial =0;\r\nfor (int i=n ;i>=1;i--)\r\n      {\r\n          factorial +=(n-1)*i;\r\n      }\r\nreturn factorial;\r\n}', 1016, 70, NULL, '2019-05-13 07:54:20', '2019-05-13 07:54:20'),
(477611, 561, '1701', 970, 70, 0, '2019-05-13 07:54:25', '2019-05-13 07:54:25'),
(477612, 562, '1705', 970, 70, 2, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477613, 563, '1711', 970, 70, 2, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477614, 564, '1712', 970, 70, 0, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477615, 565, '1717', 970, 70, 0, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477616, 566, '1722', 970, 70, 2, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477617, 567, '1727', 970, 70, 0, '2019-05-13 07:54:25', '2019-05-13 07:54:26'),
(477618, 568, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n                float income;\r\ncout<<\" enter your monthly income :\";\r\ncin>>income;\r\nif(income<0.0)\r\n          cout<<\"you are going farther into debt every month\"<<endl;         \r\nif(income>=0.0&&income<1200.00)\r\n          cout<<\"you are living below the poverty line\"<<endl;                  \r\nif(income>=1200.00&&income<2500.00)\r\n          cout<<\"you are living in moderate comfort\"<<endl;\r\nelse\r\ncout<<\" you are well off \"<<endl; \r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 970, 70, NULL, '2019-05-13 07:54:25', '2019-05-13 07:54:25'),
(477619, 569, 'int n;\r\ncout<<\"enter A non-negative integer\"\r\ndo\r\n{\r\ncin>>n;\r\n}     \r\nwhile (n<0)\r\n{\r\ncout<<\"the  integer you entered is negative.\"<<endl;\r\ncout<<\"enter A non-negative integer:\";\r\ncin>>n;\r\n}', 970, 70, NULL, '2019-05-13 07:54:25', '2019-05-13 07:54:25'),
(477620, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nif(x==0)\r\nreturn 1;\r\nreturn x * fact(x-1);\r\n}\r\nint main()\r\n{\r\nint A, Z;\r\ncin >> A ;\r\nZ = fact( A );\r\ncout<<\" the factorial of \"<<A<<\" equal \"<<Z<<endl;\r\nsystem(\" pause\");\r\nreturn 0;\r\n}', 970, 70, NULL, '2019-05-13 07:54:25', '2019-05-13 07:54:25'),
(477781, 561, '1700', 993, 70, 2, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477782, 562, '1705', 993, 70, 2, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477783, 563, '1709', 993, 70, 0, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477784, 564, '1714', 993, 70, 0, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477785, 565, '1716', 993, 70, 2, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477786, 566, '1722', 993, 70, 2, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477787, 567, '1725', 993, 70, 0, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477788, 568, 'cout << \"Enter your monthly income: \";\r\n\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 993, 70, NULL, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477789, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;', 993, 70, NULL, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(477790, 570, 'Write a recursive function that calculates factorial of a number n. Factorial is calculates as follow: !n = n × n-1 × … × 1', 993, 70, NULL, '2019-05-13 07:55:35', '2019-05-13 07:55:35'),
(478095, 565, '1717', 959, 70, 0, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478096, 561, '1700', 959, 70, 2, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478097, 566, '1722', 959, 70, 2, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478098, 562, '1705', 959, 70, 2, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478099, 567, '1727', 959, 70, 0, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478100, 563, '1711', 959, 70, 2, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478101, 568, 'cout<<\"Enter the monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\n      cout<<\"You are going father into the debt every month\";\r\nelse if(income>=0.0 && income <1200.00)\r\n      cout<<\"You are living below the poverity line.\"<<endl;\r\nelse if(income>=1200.00 && income<2500.00)\r\n      cout<<\"You are living in moderate comfort.\"endl;\r\nelse\r\n        cout<<\"You are well off\".<<endl;', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478102, 564, '1713', 959, 70, 2, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478103, 569, 'int n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\n   if(n<0)\r\n{\r\n              cout<<\"The integer you entered is negative.\"<<endl;\r\n              cout<<\"Enter a non-negative integer:\";\r\n              cin>>n;\r\n}\r\n}while(n<0);', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478104, 565, '1717', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478105, 570, 'int factorial(int n)\r\n{\r\nif(n==0)\r\n    return 1;\r\nreturn n*factorial(n-1); \r\n}', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478106, 566, '1722', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478107, 567, '1727', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478108, 568, 'cout<<\"Enter the monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\n      cout<<\"You are going father into the debt every month\";\r\nelse if(income>=0.0 && income <1200.00)\r\n      cout<<\"You are living below the poverity line.\"<<endl;\r\nelse if(income>=1200.00 && income<2500.00)\r\n      cout<<\"You are living in moderate comfort.\"endl;\r\nelse\r\n        cout<<\"You are well off\".<<endl;', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478109, 569, 'int n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\n   if(n<0)\r\n{\r\n              cout<<\"The integer you entered is negative.\"<<endl;\r\n              cout<<\"Enter a non-negative integer:\";\r\n              cin>>n;\r\n}\r\n}while(n<0);', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478110, 570, 'int factorial(int n)\r\n{\r\nif(n==0)\r\n    return 1;\r\nreturn n*factorial(n-1); \r\n}', 959, 70, NULL, '2019-05-13 07:56:00', '2019-05-13 07:56:00'),
(478151, 561, '1701', 917, 70, 0, '2019-05-13 07:56:22', '2019-05-13 07:56:23'),
(478152, 562, '1705', 917, 70, 2, '2019-05-13 07:56:22', '2019-05-13 07:56:23'),
(478153, 563, '1709', 917, 70, 0, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478154, 564, '1712', 917, 70, 0, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478155, 565, '1717', 917, 70, 0, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478156, 566, '1720', 917, 70, 0, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478157, 567, '1727', 917, 70, 0, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478158, 568, 'else\r\ncout<<\"you are well off\";', 917, 70, NULL, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478159, 569, 'int n;\r\ncout<<\"enter a non-negative integar\";\r\ncin>>n;   \r\ndo{\r\nif(n<0)\r\nbreak;\r\nelse\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}  while(n<0)', 917, 70, NULL, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478160, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nif(n<=0)\r\n  return 1;\r\nelse \r\n return n*fact(n-1)\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact(x);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 917, 70, NULL, '2019-05-13 07:56:23', '2019-05-13 07:56:23'),
(478252, 561, '1700', 1005, 70, 2, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478253, 562, '1705', 1005, 70, 2, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478254, 563, '1711', 1005, 70, 2, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478255, 564, '1712', 1005, 70, 0, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478256, 565, '1716', 1005, 70, 2, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478257, 566, '1722', 1005, 70, 2, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478258, 567, '1725', 1005, 70, 0, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478259, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1005, 70, NULL, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478260, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;        \r\n          cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile( n<0 )', 1005, 70, NULL, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478261, 570, '# include <iostream>\r\nusing namespace std:\r\nint fact(int x)\r\nif(x==1)\r\nreturn 1:\r\nelse\r\nreturn x*(fact x-1)\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\n\r\n\r\n\r\n\r\n\r\n}', 1005, 70, NULL, '2019-05-13 07:57:01', '2019-05-13 07:57:01'),
(478272, 561, '1702', 985, 70, 0, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478273, 562, '1705', 985, 70, 2, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478274, 563, '1708', 985, 70, 0, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478275, 564, '1715', 985, 70, 0, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478276, 565, '1716', 985, 70, 2, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478277, 566, '1722', 985, 70, 2, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478278, 567, '1726', 985, 70, 0, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478279, 568, '1:\r\n\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 985, 70, NULL, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478280, 569, 'int n;\r\n                          cout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\nif (n<o)\r\ndo\r\n{\r\n                    cout << \"The integer you entered is negative.\" << endl;      \r\n                     cout << \"Enter a non-negative integer: \"; \r\n                                                cin >> n;\r\n}\r\nwhile(n<0);', 985, 70, NULL, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478281, 570, 'fact(n)=fact(n)*fact(n-1)', 985, 70, NULL, '2019-05-13 07:57:04', '2019-05-13 07:57:04'),
(478322, 561, '1700', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478323, 562, '1705', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478324, 563, '1708', 1073, 70, 0, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478325, 564, '1713', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478326, 565, '1716', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478327, 566, '1722', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478328, 567, '1724', 1073, 70, 2, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478329, 568, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint income;\r\ncout<<\"Enter your monthly income:\";\r\ncin>>income;\r\nswitch(income)\r\n{\r\ncase 1 : cout<<\"you are going farther into debt every month\"<<endl;\r\nbreak;\r\ncase 2: cout<<\"you are living below the poverty line\"<<endl; \r\nbreak;\r\ncase 3: cout<<\"you are living in moderate comfort\"<<endl;\r\nbreak;\r\ncase 4: cout<<\"you are well off\"<<endl;\r\nbreak;\r\ndefault : cout<<\"wrong statue\"<<endl;\r\n}\r\nreturn 0;\r\n}', 1073, 70, NULL, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478330, 569, '#include <iostream>\r\n#include <process.h>\r\nusing namespace std;\r\nint main()\r\n{\r\ndo{\r\nint n;\r\ncout,<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ncout<<\"The integer you entered is negative\"<<endl;\r\n} while(n>0);\r\nexit(0);\r\nreturn 0;\r\n}', 1073, 70, NULL, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478331, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int c);\r\n{\r\nif(c>1)\r\nreturn fact(c-1);\r\nelse\r\nreturn 1;\r\n}      \r\n               int main()\r\n{\r\nfact(5);\r\ncout<<fact(5)<<endl;\r\nreturn 0;\r\n}', 1073, 70, NULL, '2019-05-13 07:57:33', '2019-05-13 07:57:33'),
(478381, 561, '1702', 997, 70, 0, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478382, 562, '1705', 997, 70, 2, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478383, 563, '1708', 997, 70, 0, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478384, 564, '1713', 997, 70, 2, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478385, 565, '1717', 997, 70, 0, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478386, 566, '1720', 997, 70, 0, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478387, 567, '1725', 997, 70, 0, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478388, 568, 'float income;\r\ncout<<\"enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"you are going farther into debt every month.\"<<endl;\r\nelse if(income>=0.0 && income<1200.00)\r\ncout<<\"you are living below the poverty line.\"<<endl;\r\nelse if (income >=1200.00 &&income <2500.00)\r\ncout<<\"you are living in moderate comfort.\"<<endl;\r\nelse\r\ncout<<\"you are well off\";', 997, 70, NULL, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478389, 569, 'int n;\r\ncout <<\"enter a non -negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"the integer you entered is negative .\"<<endl;\r\ncout<<\"enter anon- nagative integrer:\";\r\ncin>>n;\r\n} \r\nwhile(n<0)', 997, 70, NULL, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478390, 570, 'int fact(int x,int y)\r\n{\r\n  if (y==0)\r\n        return 1;\r\nreturn x*fact(x,y-1);\r\n}', 997, 70, NULL, '2019-05-13 07:58:03', '2019-05-13 07:58:03'),
(478430, 561, '1701', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478431, 562, '1704', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478432, 563, '1709', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478433, 564, '1712', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478434, 565, '1716', 1078, 70, 2, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478435, 566, '1720', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478436, 567, '1727', 1078, 70, 0, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478437, 568, '#include<iostream>\r\nusing namespace std;\r\nvoid main(){ \r\ncout<<\"enter your monthly income\";     \r\ncin>>income;\r\nif(income<0.0)\r\ncout<< \"farther into debt every month\"<<endl;\r\nelse if (income<=1200.00)\r\ncout<<\"below the poverty line\"<<endl;\r\nelse if(income<=2500.00) \r\ncout<<\"moderate comfort\"<<endl;\r\nelse if(income>2500.00)\r\ncout<<\"you are well of .\"<<endl;\r\n}', 1078, 70, NULL, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478438, 569, '#include<iostream>\r\nusing namespace std;\r\nvoid main (){\r\nint n;\r\ncout<<\"enter a non _negative integer:\";\r\ncin>>n;\r\ndo(n<0){\r\ncout<<\"negative\"<<endl\r\nwhile\r\n};\r\n\r\ncout<<\"non -negative\"<<endl;\r\n}', 1078, 70, NULL, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478439, 570, '#include<iostream>\r\nusing namespace std;\r\n\r\nint factorial (int n){\r\nint f=1;int n;\r\ncin>>n;\r\nfor (int i=1;i<=n;i++)\r\nf=f*i;\r\nreturn f;\r\n}\r\nvoid main(){\r\nfactorial (5);\r\n\r\n}', 1078, 70, NULL, '2019-05-13 07:59:38', '2019-05-13 07:59:38'),
(478526, 561, '1700', 994, 70, 2, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478527, 562, '1705', 994, 70, 2, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478528, 563, '1710', 994, 70, 0, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478529, 564, '1712', 994, 70, 0, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478530, 565, '1717', 994, 70, 0, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478531, 566, '1720', 994, 70, 0, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478532, 567, '1725', 994, 70, 0, '2019-05-13 08:00:08', '2019-05-13 08:00:09'),
(478533, 568, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse\r\ncout << \"You are well off.\" << endl;\r\n}', 994, 70, NULL, '2019-05-13 08:00:08', '2019-05-13 08:00:08'),
(478534, 569, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif (n<0)\r\n{\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}\r\nwhile(n<0)\r\n}                                                                                                                                     \r\n}', 994, 70, NULL, '2019-05-13 08:00:08', '2019-05-13 08:00:08'),
(478535, 570, '#include<iostream>\r\nint fact (int n)\r\n{\r\nif (n==0||n==1)\r\nreturn 1;\r\nelse\r\nlong long s= n*fact(n-1);\r\nreturn s;\r\n}\r\nusing namespace std;\r\nint main()\r\n{\r\nint n,v;\r\ncin>>n;\r\nv=fact(n);\r\ncout<<v;\r\n}', 994, 70, NULL, '2019-05-13 08:00:08', '2019-05-13 08:00:08'),
(478536, 561, '1702', 925, 70, 0, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478537, 563, '1709', 925, 70, 0, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478538, 564, '1713', 925, 70, 2, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478539, 565, '1716', 925, 70, 2, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478540, 566, '1720', 925, 70, 0, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478541, 567, '1726', 925, 70, 0, '2019-05-13 08:00:29', '2019-05-13 09:28:18'),
(478542, 568, NULL, 925, 70, NULL, '2019-05-13 08:00:29', '2019-05-13 08:00:29'),
(478543, 569, 'do {\r\n	int n;\r\n	cout << \"Enter a non-negative integer: \";\r\n	cin >> n;\r\n	cout << \"The integer you entered is negative.\" << endl;\r\n	while (n<0);\r\n}', 925, 70, NULL, '2019-05-13 08:00:29', '2019-05-13 08:00:29'),
(478544, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n) {\r\n	if (n == 0)\r\n		return 1;\r\n	return n*fact(n - 1);\r\n}\r\nint main() {\r\n	int x;\r\n	cin >> x;\r\n	fact(x);\r\n	cout<< x*fact(x - 1);\r\n	system(\"pause\");\r\n}', 925, 70, NULL, '2019-05-13 08:00:29', '2019-05-13 08:00:29'),
(478555, 561, '1702', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478556, 562, '1705', 929, 70, 2, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478557, 563, '1708', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478558, 564, '1715', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478559, 565, '1717', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478560, 566, '1721', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478561, 567, '1725', 929, 70, 0, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478562, 568, '#include<iostream>   \r\nusing namespace std;\r\nint main()\r\n{\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncut << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (  income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;\r\nreturn 0;\r\n}', 929, 70, NULL, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478563, 569, '#include<iostream>   \r\nusing namespace std;\r\nint main()\r\n{  \r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n}\r\nwhile (n < 0)\r\ncout<<n<<endl;\r\nreturn 0;', 929, 70, NULL, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478564, 570, '#include<iostream>   \r\nusing namespace std;\r\nint fact(int n, in numberi);\r\nint main()\r\n\r\n{\r\nint n, number;\r\ncin>>n>>numbe;\r\ncout<<\"fact of number\\n\";\r\n\r\n\r\n\r\n}\r\nint fact(int n, int number)\r\n{\r\nint n;\r\nfor(int i=1;i<n;i++)\r\n{\r\nfor(int number=1; number<i; number++)\r\nfact=fact*i;\r\ncput<<fact<<endl;\r\n}\r\n\r\n\r\n}', 929, 70, NULL, '2019-05-13 08:00:52', '2019-05-13 08:00:52'),
(478624, 561, '1700', 905, 70, 2, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478625, 562, '1705', 905, 70, 2, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478626, 563, '1711', 905, 70, 2, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478627, 564, '1713', 905, 70, 2, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478628, 565, '1719', 905, 70, 0, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478629, 566, '1722', 905, 70, 2, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478630, 567, '1727', 905, 70, 0, '2019-05-13 08:02:38', '2019-05-13 08:02:39'),
(478631, 568, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;\r\nsystem(\"pause\");\r\n}', 905, 70, NULL, '2019-05-13 08:02:38', '2019-05-13 08:02:38'),
(478632, 569, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0)\r\nsystem(\"pause\");\r\n}', 905, 70, NULL, '2019-05-13 08:02:38', '2019-05-13 08:02:38'),
(478633, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\nif(n==0||n==1)\r\nreturn n;\r\nelse\r\nreturn n*fact(n-1);\r\n}\r\nint main(){\r\nint n;\r\ncout<<\"Enter number to find factorial = \";\r\ncin>>n;\r\ncout<<\"the factorial for number \"<<n<<\" = \"<<fact(n)<<endl;\r\nsystem(\"pause\");\r\n}', 905, 70, NULL, '2019-05-13 08:02:38', '2019-05-13 08:02:38'),
(478760, 561, '1702', 919, 70, 0, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478761, 562, '1705', 919, 70, 2, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478762, 563, '1710', 919, 70, 0, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478763, 564, '1715', 919, 70, 0, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478764, 565, '1717', 919, 70, 0, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478765, 566, '1722', 919, 70, 2, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478766, 567, '1725', 919, 70, 0, '2019-05-13 08:04:46', '2019-05-13 08:04:47'),
(478767, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 919, 70, NULL, '2019-05-13 08:04:46', '2019-05-13 08:04:46'),
(478768, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n < 0)', 919, 70, NULL, '2019-05-13 08:04:47', '2019-05-13 08:04:47'),
(478769, 570, 'int fact(int x){\r\n                                  if(x==0)\r\n                                return 1;\r\n                                return x*fact(x-1)\r\n                             }', 919, 70, NULL, '2019-05-13 08:04:47', '2019-05-13 08:04:47'),
(478927, 561, '1702', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478928, 562, '1704', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478929, 563, '1708', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478930, 564, '1712', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478931, 565, '1717', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478932, 566, '1720', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478933, 567, '1726', 964, 70, 0, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478934, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout<<\"Enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"You are going farther into debt every monthe.\"<<endl;\r\nelse if(income<1200.00)\r\ncout<<\"You are living below the porerty line0\"<<endl;\r\nelse if(income<2500.00)\r\ncout<<\"You are living in modern comfort.\"<<endl;\r\nelse \r\ncout<<\"You are well off.\"<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 964, 70, NULL, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478935, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"Enter a non_negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non_negative intreger:\";\r\ncin>>n;\r\n\r\n\r\n}\r\nwhile(n<0);\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 964, 70, NULL, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478936, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int num){\r\nif(num==0||num==1)\r\nreturn 1;\r\nelse\r\nreturn num*fact(num-1);\r\nint main(){\r\nint num;\r\ncout<<\"please enter n number:\\n\";\r\ncin>>num;\r\ncout<<\"factorial is: \"<<fact(num)<<endl; \r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 964, 70, NULL, '2019-05-13 08:08:18', '2019-05-13 08:08:18'),
(478947, 561, '1700', 899, 70, 2, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478948, 562, '1705', 899, 70, 2, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478949, 563, '1711', 899, 70, 2, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478950, 564, '1712', 899, 70, 0, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478951, 565, '1717', 899, 70, 0, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478952, 566, '1722', 899, 70, 2, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478953, 567, '1727', 899, 70, 0, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478954, 568, '#include <iostream> \r\nusing namespace std;\r\nint main() \r\n{\r\nfloat income;\r\ncout <<\"Enter your monthly income :\";\r\ncin >>income;\r\n if(income >=0.0 &&   income <1200.00)\r\n       cout<<\"you are living below the poverty line .\"<<endl;    \r\n else if(income >=1200.0 &&   income <2500.00)\r\n      cout<<\"you are living in moderate comfort .\"<<endl;   \r\n else (  income >=2500.00)\r\n       cout<<\"you are well off .\"<<endl; \r\nreturn 0;\r\n}', 899, 70, NULL, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478955, 569, '#include <iostream> \r\nusing namespace std;\r\nint main() \r\n{\r\nint n;\r\ncout <<\"Enter a non-negative integer.\";\r\ncin >>n;\r\nif(n<0)\r\n{\r\ndo\r\n{\r\ncout <<\"The integer you entered is  negative .\";\r\ncout <<\"Enter a non-negative integer.\";\r\ncin >>n;\r\n}\r\nwhile(n<0);\r\n}\r\nreturn 0;\r\n}', 899, 70, NULL, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(478956, 570, '#include <iostream> \r\nusing namespace std;\r\nint fact(x)\r\n{\r\nif(x==1||x==0)\r\n   return 1;\r\nelse\r\n  return x*fact(x-1);\r\n}\r\nint main() \r\n {\r\nint n;\r\ncout <<\"Enter your number\"<<endl;\r\ncin >>n;\r\ncout <<fact(n);     \r\nreturn 0;\r\n}', 899, 70, NULL, '2019-05-13 08:08:23', '2019-05-13 08:08:23'),
(479026, 561, '1701', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479027, 562, '1704', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479028, 563, '1711', 963, 70, 2, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479029, 564, '1712', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479030, 565, '1717', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479031, 566, '1720', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479032, 567, '1726', 963, 70, 0, '2019-05-13 08:09:33', '2019-05-13 08:09:34'),
(479033, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse  \r\ncout << \"You are well off.\" << endl;', 963, 70, NULL, '2019-05-13 08:09:33', '2019-05-13 08:09:33'),
(479034, 569, 'int n;\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"enter a nymber \\n\";\r\ncout << \"The number you entered is negative.\" << endl;\r\n            while(n<0)\r\n}', 963, 70, NULL, '2019-05-13 08:09:33', '2019-05-13 08:09:33'),
(479035, 570, '#include<iostream>\r\nusing namespace std;\r\nint fac(int n)\r\n{\r\nif(n==0)\r\nreturn 1;\r\nelse \r\nreturn n*fac(n-1)\r\n}\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter any number \\n\";\r\ncin>>n;\r\ncout<<fac(n);\r\n}', 963, 70, NULL, '2019-05-13 08:09:33', '2019-05-13 08:09:33'),
(479070, 561, '1700', 1008, 70, 2, '2019-05-13 08:10:15', '2019-05-13 08:10:15');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(479071, 562, '1706', 1008, 70, 0, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479072, 563, '1711', 1008, 70, 2, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479073, 564, '1712', 1008, 70, 0, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479074, 565, '1716', 1008, 70, 2, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479075, 566, '1720', 1008, 70, 0, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479076, 567, '1727', 1008, 70, 0, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479077, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 1008, 70, NULL, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479078, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n\r\n}     while(n<0)', 1008, 70, NULL, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479079, 570, '#include<iostream>\r\n            using namespace std;\r\n             int fact( int n)\r\n            {\r\n                 if(n==1||n==0)\r\n                         return 1;\r\n                  else \r\n                         return n*fact(n-1);\r\n                   }\r\n                      int main()\r\n{\r\n      int n;\r\n     cin>>n;\r\n cout<<   fact(n)<<\"\\n\";\r\n\r\nreturn 0;\r\n}', 1008, 70, NULL, '2019-05-13 08:10:15', '2019-05-13 08:10:15'),
(479244, 561, '1701', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479245, 562, '1706', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479246, 563, '1710', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479247, 564, '1714', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479248, 565, '1716', 1001, 70, 2, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479249, 566, '1720', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479250, 567, '1727', 1001, 70, 0, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479251, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1001, 70, NULL, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479252, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n>0);', 1001, 70, NULL, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479253, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nif ((n==1)||(n==0))\r\nreturn 1;\r\nelse\r\nreturn n*fact(n-1);\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"the value factoral is =\"<<fact(n)<<endl;\r\n}', 1001, 70, NULL, '2019-05-13 08:11:53', '2019-05-13 08:11:53'),
(479264, 561, '1701', 1006, 70, 0, '2019-05-13 08:12:55', '2019-05-13 08:12:55'),
(479265, 562, '1704', 1006, 70, 0, '2019-05-13 08:12:55', '2019-05-13 08:12:55'),
(479266, 563, '1710', 1006, 70, 0, '2019-05-13 08:12:55', '2019-05-13 08:12:56'),
(479267, 564, '1713', 1006, 70, 2, '2019-05-13 08:12:55', '2019-05-13 08:12:56'),
(479268, 565, '1717', 1006, 70, 0, '2019-05-13 08:12:55', '2019-05-13 08:12:56'),
(479269, 566, '1722', 1006, 70, 2, '2019-05-13 08:12:55', '2019-05-13 08:12:56'),
(479270, 567, '1726', 1006, 70, 0, '2019-05-13 08:12:55', '2019-05-13 08:12:56'),
(479271, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\";\r\nelse if (income >= 0.0 && income < 1200.00)\r\ncout << \"You are living below the poverty line.\" ;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\";\r\nelse\r\ncout << \"You are well off.\" << endl;\r\n}', 1006, 70, NULL, '2019-05-13 08:12:55', '2019-05-13 08:12:55'),
(479272, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0);\r\n}', 1006, 70, NULL, '2019-05-13 08:12:55', '2019-05-13 08:12:55'),
(479273, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n){\r\nif(n==0 | | n==1)\r\nreturn 1;\r\nelse\r\n{\r\nreturn n*fact(n-1);\r\n}\r\n}\r\n\r\nint main()\r\n{\r\nint n;\r\ncout <<\" enter the number \\n\";\r\ncin>>n\r\ncout<<fact(n)<<endle;\r\n}', 1006, 70, NULL, '2019-05-13 08:12:55', '2019-05-13 08:12:55'),
(479344, 561, '1700', 958, 70, 2, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479345, 562, '1705', 958, 70, 2, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479346, 563, '1710', 958, 70, 0, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479347, 564, '1714', 958, 70, 0, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479348, 565, '1717', 958, 70, 0, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479349, 566, '1722', 958, 70, 2, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479350, 567, '1725', 958, 70, 0, '2019-05-13 08:16:07', '2019-05-13 08:17:08'),
(479351, 568, '#include<iostram>\r\nusing namespace std;\r\nint main()\r\n{\r\n float income;\r\ncout << \"Enter your monthly income: \";\r\ncin>>income;\r\nif ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;\r\nsystem(\"pause\")\'\r\n}', 958, 70, NULL, '2019-05-13 08:16:07', '2019-05-13 08:16:07'),
(479352, 569, '#include<iostream>\r\nusing name space std;\r\nint main()\r\n{\r\nint n;\r\nint counter=0;\r\ndo\r\n{\r\nif(counter>0)\r\n         cout<<\"the number you entered is negative\"<<endl;\r\ncout<<\"enter a non negative integer\";<<endl;\r\ncin>>n;\r\ncounter++;\r\n}while(n<0);', 958, 70, NULL, '2019-05-13 08:16:07', '2019-05-13 08:16:07'),
(479353, 570, '#include<iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\nif(n==0)return 1;\r\nelse\r\n{\r\nreturn n*factorial(n-1);\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<factorial(n)<<endl;\r\nsystem(\"pause\");\r\n}', 958, 70, NULL, '2019-05-13 08:16:07', '2019-05-13 08:16:07'),
(479364, 561, '1701', 1013, 70, 0, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479365, 562, '1705', 1013, 70, 2, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479366, 563, '1711', 1013, 70, 2, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479367, 564, '1714', 1013, 70, 0, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479368, 565, '1717', 1013, 70, 0, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479369, 566, '1722', 1013, 70, 2, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479370, 567, '1726', 1013, 70, 0, '2019-05-13 08:16:30', '2019-05-13 08:17:04'),
(479371, 568, '#include <io stream    >\r\nusing namespace std;\r\nint main ()\r\n{\r\nfloat income;\r\nif (income >=0;&&income<1200.00)\r\ncout <<You are living below the pover\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n)', 1013, 70, NULL, '2019-05-13 08:16:30', '2019-05-13 08:16:30'),
(479372, 569, 'do{\r\nint n;\r\ncin >>n;\r\ncout <<\"the integer you entered is negative  .\"<<endl;\r\ncout  <<\"enter a non -negative integer:\"  ;\r\ncin >>n;\r\n}\r\nwhile(n<0)\r\nreturn 0;\r\n}', 1013, 70, NULL, '2019-05-13 08:16:30', '2019-05-13 08:16:30'),
(479373, 570, '#include <iostream>\r\nusing namespace std;\r\nint fact(n)\r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse {\r\nreturn n*fact(n-1);\r\n}}\r\nint main()\r\n{\r\nint x;\r\ncout <<\"enter num\"<<endl;\r\ncin >>x;\r\nint z=fact (x);\r\ncout <<z<<endl;\r\nreturn 0;\r\n}', 1013, 70, NULL, '2019-05-13 08:16:30', '2019-05-13 08:16:30'),
(479374, 561, '1702', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479375, 562, '1707', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479376, 563, '1708', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479377, 564, '1715', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479378, 565, '1717', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479379, 566, '1722', 933, 70, 2, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479380, 567, '1725', 933, 70, 0, '2019-05-13 08:16:31', '2019-05-13 09:28:19'),
(479381, 568, 'float income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\n\r\n\r\n if ( income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse if (income >= 2500.00)\r\ncout << \"You are well off.\" << endl;', 933, 70, NULL, '2019-05-13 08:16:31', '2019-05-13 08:16:31'),
(479382, 569, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{ \r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\ncin>>n;\r\nif (n>=0)\r\nreturn 0;\r\nelse\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n\r\n\r\ncin>>n;\r\n}\r\nwhile(n<0);\r\n\r\n\r\n}\r\n}', 933, 70, NULL, '2019-05-13 08:16:31', '2019-05-13 08:16:31'),
(479383, 570, '#include <iostream>\r\nusing namespace std ;\r\nint fact (int x)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nelse \r\nreturn x*fact(x-1);\r\n\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact (x);\r\n}', 933, 70, NULL, '2019-05-13 08:16:31', '2019-05-13 08:16:31'),
(479623, 561, '1702', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479624, 562, '1707', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479625, 563, '1708', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479626, 564, '1715', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479627, 565, '1718', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479628, 566, '1720', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479629, 567, '1725', 965, 70, 0, '2019-05-13 08:22:44', '2019-05-13 09:28:19'),
(479630, 568, 'cout<<\"Enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"You are going farther into debt every month.\"<<endl;\r\nelse if(income>=2500.00)\r\ncout<<\"you are well off.<<endl;', 965, 70, NULL, '2019-05-13 08:22:44', '2019-05-13 08:22:44'),
(479631, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\ncin>>n;\r\nwhile(n<0)\r\ndo\r\n{\r\ncout<<\"Enter a non-negative integer:\";\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\n}\r\nsystem(\"pause\");', 965, 70, NULL, '2019-05-13 08:22:44', '2019-05-13 08:22:44'),
(479632, 570, '#include<iostream>\r\nusing namespace std;\r\nvoid fact(int s,int t)\r\nfor(i=1;i<n;i++)\r\n{\r\n!n=n*!(n-1)*...*1;\r\n}\r\nint main()\r\n{\r\nvoid fact (int s,int t)\r\nfor(int i=1;i<n;i++)\r\n!n=n*!(n-1);\r\ncout<<!n<<endl;\r\n}\r\nsystem(\"pause\");', 965, 70, NULL, '2019-05-13 08:22:44', '2019-05-13 08:22:44'),
(479680, 561, '1700', 960, 70, 2, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479681, 562, '1705', 960, 70, 2, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479682, 563, '1708', 960, 70, 0, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479683, 564, '1712', 960, 70, 0, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479685, 565, '1717', 960, 70, 0, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479687, 566, '1722', 960, 70, 2, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479689, 567, '1725', 960, 70, 0, '2019-05-13 08:23:47', '2019-05-13 09:28:19'),
(479690, 568, 'income >=0.0&&\r\nincome >=1200.00&&\r\nif (income >=2500.00)', 960, 70, NULL, '2019-05-13 08:23:47', '2019-05-13 08:23:47'),
(479691, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\nif (n<0)\r\n{\r\ndo\r\n{        \r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative intger: \";\r\ncin>>n;\r\n}\r\nwhile(n<0);  \r\n}', 960, 70, NULL, '2019-05-13 08:23:48', '2019-05-13 08:23:48'),
(479692, 570, 'int fact(int n)\r\n{\r\nif(n==0||n==1)\r\nreturn 1;\r\nreturn n*fact(n-1) ;\r\n}', 960, 70, NULL, '2019-05-13 08:23:48', '2019-05-13 08:23:48'),
(482783, 564, '1712', 1072, 72, 0, '2019-05-13 08:48:31', '2019-05-13 08:48:33'),
(482787, 563, '1709', 1072, 72, 0, '2019-05-13 08:48:31', '2019-05-13 08:48:33'),
(482796, 571, '#incloud <iostream>\r\nusing name spaec std;\r\nfunc f{  if (x==0 )\r\nruturn o;\r\nif (x==1)\r\nreturn 1;\r\nreturn f(x-1)+f(x-z)', 1072, 72, 0, '2019-05-13 08:48:31', '2019-05-15 09:40:22'),
(482800, 572, '1728', 1072, 72, 2, '2019-05-13 08:48:31', '2019-05-13 08:48:33'),
(482806, 573, '1735', 1072, 72, 0, '2019-05-13 08:48:31', '2019-05-13 08:48:33'),
(482810, 475, '1383', 1072, 72, 2, '2019-05-13 08:48:31', '2019-05-13 08:48:34'),
(482816, 561, '1700', 1072, 72, 2, '2019-05-13 08:48:31', '2019-05-13 08:48:34'),
(482818, 467, '1354', 1072, 72, 0, '2019-05-13 08:48:31', '2019-05-13 08:48:34'),
(482820, 569, '#include <iostream>\r\nusing name space std ;\r\nvoid main()\r\n{int n;\r\ncout<<\"enter a non _neative\"<<endl;\r\ncin n;\r\ndo{\r\ncout  <<\"the integer \"<<endl;\r\ncout <<\"enter a non _negtive integer:\"<<endl;\r\n\r\n}while(n<0)\r\n\r\nreturn o;\r\n\r\n}', 1072, 72, 0, '2019-05-13 08:48:32', '2019-05-15 09:49:21'),
(482821, 574, 'int f(n)\r\nif (n>1)\r\nreturn n*f (n-1);\r\nelse\r\nreturn 1;', 1072, 72, 1, '2019-05-13 08:48:32', '2019-05-15 10:01:21'),
(485921, 564, '1713', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485923, 563, '1711', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485925, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y){\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*pow(x,y-1)\r\n}\r\nint main()', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-15 10:04:12'),
(485927, 572, '1728', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485929, 573, '1734', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485931, 475, '1383', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485932, 561, '1700', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485933, 467, '1355', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-13 08:52:47'),
(485934, 569, 'int n;\r\ndo{\r\ncin>>n;\r\nif(n<0){\r\ncout<<\"the integer you intered is negative.\"<<endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}while (n < 0)', 909, 72, 2, '2019-05-13 08:52:46', '2019-05-15 10:04:12'),
(485935, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\nint factorial=1;\r\nfor(int I=1;i<=n;i++){\r\nfactorial*=I\r\n}\r\ncout<<factorial<<endl;\r\n} \r\nint main()', 909, 72, 1, '2019-05-13 08:52:46', '2019-05-15 10:04:12'),
(486234, 564, '1713', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486235, 563, '1711', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486236, 571, 'int power(int x,int y){\r\nif(y == 0)return 1;\r\nreturn x * pow(x,y-1);\r\n}', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-15 10:06:47'),
(486237, 572, '1728', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486238, 573, '1734', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486239, 475, '1383', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486240, 561, '1700', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486241, 467, '1355', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-13 08:53:51'),
(486242, 569, 'int n;\r\ndo {\r\n      cout << \"Enter a non-negative integer: \";\r\n      cin >> n;\r\n     if(n < 0){\r\n           cout << \"The integer you entered is negative.\" << endl;\r\n     }      \r\n}while(n < 0);', 907, 72, 2, '2019-05-13 08:53:51', '2019-05-15 10:06:47'),
(486243, 574, 'int fact(int n){\r\n      int f = 1;\r\n       while(n>0){', 907, 72, 0, '2019-05-13 08:53:51', '2019-05-15 10:06:47'),
(487039, 564, '1713', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487040, 563, '1711', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487041, 571, 'int pow(int num , int p){\r\n       if(p==0) return 1;\r\n       return num*pow(num,p-1);\r\n}', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-15 10:12:43'),
(487042, 572, '1728', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487043, 573, '1734', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487044, 475, '1383', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487045, 561, '1700', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487046, 467, '1355', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-13 08:56:21'),
(487047, 569, 'int n;\r\ndo{\r\n    cout<<\" Enter a non-negative integer: \";\r\n    cin>>n;\r\n   if(n<0) cout << \"The integer you entered is negative.\" << endl;\r\n}\r\nwhile(n<0)', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-15 10:12:43'),
(487048, 574, 'int fac(int num){\r\n     sum = 1;\r\n     for (int i = 1 ; i<=num ; i++){\r\n               sum*=i;\r\n     }\r\n    return sum;\r\n}', 897, 72, 2, '2019-05-13 08:56:21', '2019-05-15 10:12:43'),
(488000, 564, '1713', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488001, 563, '1711', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488002, 571, '#inclue<iostream>\r\nusing namespace std;\r\nint po(int a,int b)\r\n{\r\nif(b == 0) return 1;\r\n return a*(a,b-1);\r\n}\r\n\r\nint main()\r\n{\r\nint x,y;\r\ncin>x>>y;\r\ncout<<po(x,y);\r\n}', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-15 10:14:38'),
(488003, 572, '1728', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488004, 573, '1734', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488005, 475, '1383', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488006, 561, '1700', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488007, 467, '1355', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-13 08:58:56'),
(488008, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\nif(n > 0) break;\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n < 0)', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-15 10:14:38'),
(488009, 574, '#include<iostream>\r\nusing namespace std;\r\nint fac(int a)\r\n{\r\nint f=1;\r\nfor(int i=1;i<=a;i++)\r\n{\r\nf=f*i;\r\n}\r\nreturn f;\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fac(x);\r\n}', 924, 72, 2, '2019-05-13 08:58:56', '2019-05-15 10:14:38'),
(488253, 564, '1712', 976, 72, 0, '2019-05-13 08:59:43', '2019-05-13 08:59:44'),
(488254, 563, '1711', 976, 72, 2, '2019-05-13 08:59:43', '2019-05-13 08:59:44'),
(488255, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nif (y==1)\r\nreturn x;\r\nelse if (y==0)\r\nreturn 1;\r\nelse\r\nreturn (z*power(x,y-1));\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin >>x>>y;\r\ncout <<power(x,y)<<endl;\r\n}', 976, 72, 1, '2019-05-13 08:59:43', '2019-05-15 10:19:41'),
(488256, 572, '1728', 976, 72, 2, '2019-05-13 08:59:43', '2019-05-13 08:59:44'),
(488257, 573, '1734', 976, 72, 2, '2019-05-13 08:59:43', '2019-05-13 08:59:44'),
(488258, 475, '1383', 976, 72, 2, '2019-05-13 08:59:43', '2019-05-13 08:59:44'),
(488259, 569, '#include<iosream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout <<\"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n<0)\r\n}', 976, 72, 1, '2019-05-13 08:59:43', '2019-05-15 10:19:41'),
(488260, 574, '#include<iostream>\r\nusing namespace std;\r\nint fac(int p)\r\n{\r\nint f=1;\r\nfor (int i=x;i>0;i--)\r\n{\r\nf=f*i;\r\n}\r\nreturn f;\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fac(x)<<endl;\r\n}', 976, 72, 2, '2019-05-13 08:59:43', '2019-05-15 10:19:41'),
(489018, 564, '1715', 1002, 72, 0, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489019, 563, '1710', 1002, 72, 0, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489020, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nif(x<0||y<0)\r\nreturn 0;\r\nelse \r\nreturn pow(x,y);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y)<<endl;\r\n\r\n}', 1002, 72, 0, '2019-05-13 09:01:39', '2019-05-15 10:22:05'),
(489021, 572, '1728', 1002, 72, 2, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489022, 573, '1735', 1002, 72, 0, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489023, 475, '1384', 1002, 72, 0, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489024, 561, '1700', 1002, 72, 2, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489025, 467, '1355', 1002, 72, 2, '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(489026, 569, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"enter a non negative integer: \";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"the integer you entered is negative . \"<<endl;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<0)\r\n\r\n}', 1002, 72, 1, '2019-05-13 09:01:39', '2019-05-15 10:22:05'),
(489027, 574, '#include <iostream>\r\nusing namespace std;\r\nint f(int x)\r\nfor(int i=1;i<=x;i++)\r\nz*=i;\r\nreturn z;\r\n\r\n\r\n\r\n}\r\nint main()\r\n\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<f(x);\r\n\r\n}', 1002, 72, 1, '2019-05-13 09:01:39', '2019-05-15 10:22:05'),
(489359, 564, '1713', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489360, 563, '1711', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489361, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x,int p)\r\n{if (p==0)\r\nreturn 1;\r\nreturn x*pow (p-1);\r\n}\r\nint main (){\r\nint c,v;\r\ncin >>c>>v;\r\ncout <<pow (c,v);\r\n\r\n\r\n\r\nreturn 0;\r\n}', 912, 72, 1, '2019-05-13 09:02:17', '2019-05-15 10:24:12'),
(489362, 572, '1728', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489363, 573, '1734', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489364, 475, '1383', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489365, 561, '1700', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489366, 467, '1355', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-13 09:02:17'),
(489367, 569, '#include <iostream >\r\nusing namespace std ;\r\nint main (){\r\nint n;\r\ndo\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}\r\n\r\n}while (n<0);\r\n\r\nreturn 0;\r\n}', 912, 72, 2, '2019-05-13 09:02:17', '2019-05-15 10:24:12'),
(489368, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact (int x)\r\n{int z=0;\r\nfor (int i=1;i<=x;i++)\r\nz*=i;\r\nreturn z;\r\n}                                                                                                                \r\nint main (){\r\nint c;\r\ncin >>c;\r\ncout <<fact(c);\r\nreturn 0;\r\n}', 912, 72, 1, '2019-05-13 09:02:17', '2019-05-15 10:24:12'),
(490732, 564, '1713', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490733, 563, '1710', 834, 72, 0, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490734, 571, '#include <iostream> \r\nusing namespace std; \r\nint FindPower(int base, int power) {\r\n   if (power == 0)\r\n      return 1;\r\n   else\r\n      return (base * FindPower(base, power-1));\r\n}  \r\nint main() {\r\n   int base = 3, power = 5;\r\n   cout<<base<<\" raised to the power \"<<power<<\" is \"<<FindPower(base, power);\r\n   return 0;', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-15 10:31:10'),
(490735, 572, '1728', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490736, 573, '1734', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490737, 475, '1383', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490738, 561, '1700', 834, 72, 2, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490739, 467, '1354', 834, 72, 0, '2019-05-13 09:05:16', '2019-05-13 09:05:16'),
(490740, 569, ';;;;', 834, 72, 0, '2019-05-13 09:05:16', '2019-05-15 10:31:10'),
(490741, 574, '#include <iostream.h>\r\n#include <stdlib.h>\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\r\n    int fact,i;\r\n\r\n    int n;\r\n\r\n\r\n\r\n    cout << \"Enter value of N:\" ; cin >> n;\r\n\r\n\r\n\r\n    fact = 1;\r\n\r\n    i = 1;\r\n\r\n    while(i<=n)\r\n    {\r\n\r\n        fact = fact * i;\r\n\r\n        i++;\r\n\r\n    }\r\n\r\n\r\n\r\n    for(i=0;i < 30;i++)\r\n    cout << \"_\";cout << \"\\n\\n\";\r\n\r\n    cout << \"Factorial of N:\" << \"\\t\" << fact << endl;\r\n\r\n    for(i=0;i << 30;i++)\r\n    cout << \"_\";cout << \"\\n\\n\";\r\n\r\n    system(\"PAUSE\");\r\n\r\n    return 0;\r\n\r\n}', 834, 72, 1, '2019-05-13 09:05:16', '2019-05-15 10:31:10'),
(491801, 564, '1715', 843, 72, 0, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491802, 563, '1711', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491803, 571, '#include <iostram>\r\nusing namespace std ;\r\n#include <cmath>\r\n  int power (int x , int y )\r\nint main ()\r\n{\r\nint x , y ;\r\ncin>>x>>y ;\r\nfor (int i ; i<=x; i++)\r\n\r\n}\r\nint power (int x , int y)\r\n{', 843, 72, 0, '2019-05-13 09:07:32', '2019-05-15 10:52:10'),
(491804, 572, '1728', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491805, 573, '1734', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491806, 475, '1383', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491807, 561, '1700', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491808, 467, '1355', 843, 72, 2, '2019-05-13 09:07:32', '2019-05-13 09:07:33'),
(491809, 569, 'int n \r\ndo (\"enter a non-negative integer \"\r\nint', 843, 72, 0, '2019-05-13 09:07:32', '2019-05-15 10:52:10'),
(491810, 574, '#include <iostream>\r\nusing namespace std ;\r\nfact (int x , int y )\r\nint main ()  \r\n{\r\n        int w ,fact=1  ;\r\ncin>>w ;\r\nfor (int i=1 ; i<=w; i++)\r\nfact += fact *i ;\r\n}\r\ncout << fact  ;\r\nreturn 0 ;\r\n}', 843, 72, 0, '2019-05-13 09:07:32', '2019-05-15 10:52:10'),
(492435, 564, '1712', 829, 72, 0, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492436, 563, '1711', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492437, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1)\r\n}                                                                                                                \r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\nsystem(\"pause\")\r\n}', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-15 10:55:46'),
(492438, 572, '1728', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492439, 573, '1734', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492440, 475, '1383', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492441, 561, '1700', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492442, 467, '1355', 829, 72, 2, '2019-05-13 09:09:01', '2019-05-13 09:09:02'),
(492443, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout<< \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}                                                 \r\nwhile(n<0)', 829, 72, 0, '2019-05-13 09:09:01', '2019-05-15 10:55:46'),
(492444, 574, '#include<iostream>\r\nusing namespace std;                                                                                                                \r\nint fact(long long x, int f=1)\r\n{\r\nfor (int i = x ; i >= 1; i--)\r\n{\r\n       f *= i;\r\n}\r\n}      \r\nint main()\r\n{\r\nlong long x;\r\nint f=1;\r\ncin>>x;\r\ncout<<fact(x,f);\r\nsystem(\"pause\")\r\n}', 829, 72, 1, '2019-05-13 09:09:01', '2019-05-15 10:55:46'),
(492543, 564, '1713', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492544, 563, '1711', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492545, 571, '#include<iostream>\r\nusing namespace std ;\r\nint power (int x; int y)\r\n{\r\nif(y==1)\r\nretrun x;\r\nelse if (y==0)\r\nreturn 1 ;\r\nelse\r\nreturn z*power(x,y-1);\r\n} \r\nint main()\r\n{\r\nint x,y;\r\ncout<<\"enter 2 number\"<<endl;\r\ncin>>x>>y;\r\ncout<<\"the power x to y is \"<<power(x,y)<<endl;\r\n}', 822, 72, 1, '2019-05-13 09:09:26', '2019-05-15 10:57:42'),
(492546, 572, '1728', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492547, 573, '1734', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492548, 475, '1383', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492549, 561, '1702', 822, 72, 0, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492550, 467, '1355', 822, 72, 2, '2019-05-13 09:09:26', '2019-05-13 09:09:26'),
(492551, 569, '#include<iostream>\r\nusing  namespace std ;\r\nint main()\r\n{\r\nint x;\r\ncout <<\"enter a non-negative integer:\";\r\ncin>>n;\r\ndo \r\n{\r\ncout<<\"the integer you entered is negative\"<<endl;\r\ncout<<Enter a non- negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<0)\r\n}', 822, 72, 1, '2019-05-13 09:09:26', '2019-05-15 10:57:42'),
(492552, 574, '#include<iostream>\r\nusing namespace std ;\r\nint fact(int p)\r\n{\r\nint f=1;\r\nfor (int i=x;i>0;i--)\r\n{\r\nf*=i;\r\n}\r\nreturn f;\r\n}\r\nint main()\r\n{\r\nint x;\r\ncout <<\"enter the number of factorial\"<<endl;\r\ncin>>x;\r\ncout<<\"fact(x)<<endl;\r\n}', 822, 72, 1, '2019-05-13 09:09:26', '2019-05-15 10:57:42'),
(493943, 564, '1713', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-13 09:12:51'),
(493944, 571, 'int pow(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1):\r\n}', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-15 10:59:10'),
(493946, 572, '1728', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-13 09:12:51'),
(493948, 573, '1734', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-13 09:12:51'),
(493950, 475, '1384', 836, 72, 0, '2019-05-13 09:12:51', '2019-05-13 09:12:52'),
(493951, 561, '1700', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-13 09:12:52'),
(493952, 467, '1355', 836, 72, 2, '2019-05-13 09:12:51', '2019-05-13 09:12:52'),
(493953, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n} while(n<0) ;', 836, 72, 1, '2019-05-13 09:12:51', '2019-05-15 10:59:10'),
(493954, 574, 'int fact (int n)\r\n{\r\nint f=1;\r\nfor(int i=i;i<n;i++)\r\nf*=i;\r\nreturn f;\r\n\r\n)', 836, 72, 1, '2019-05-13 09:12:51', '2019-05-15 10:59:10'),
(494032, 561, '1700', 842, 72, 2, '2019-05-13 09:12:58', '2019-05-13 09:12:59'),
(494033, 467, '1355', 842, 72, 2, '2019-05-13 09:12:58', '2019-05-13 09:12:59'),
(494034, 571, 'int p (int x, int y)\r\n{\r\nif ( y==0)\r\nreturn 0;\r\nreturn x * p(x, y-1);\r\n}', 842, 72, 1, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494035, 467, '1355', 842, 72, NULL, '2019-05-13 09:12:58', '2019-05-13 09:12:58'),
(494036, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\"<< end; \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n <0);', 842, 72, 1, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494037, 564, '1713', 842, 72, 2, '2019-05-13 09:12:58', '2019-05-13 09:12:59'),
(494038, 572, '1728', 842, 72, 2, '2019-05-13 09:12:58', '2019-05-13 09:12:59'),
(494039, 574, 'int fact( int x)\r\n{\r\nint y =1; \r\nfor ( int i =0; i <= x ; i++)\r\n{\r\nreturn y *=y*i;\r\n}\r\n}', 842, 72, 0, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494040, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\"<< end; \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n <0);', 842, 72, 0, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494041, 571, 'int p (int x, int y)\r\n{\r\nif ( y==0)\r\nreturn 0;\r\nreturn x * p(x, y-1);\r\n}', 842, 72, 0, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494042, 574, 'int fact( int x)\r\n{\r\nint y =1; \r\nfor ( int i =0; i <= x ; i++)\r\n{\r\nreturn y *=y*i;\r\n}\r\n}', 842, 72, 0, '2019-05-13 09:12:58', '2019-05-15 11:05:32'),
(494043, 573, '1734', 842, 72, 2, '2019-05-13 09:12:58', '2019-05-13 09:12:59'),
(494045, 572, '1728', 842, 72, NULL, '2019-05-13 09:12:58', '2019-05-13 09:12:58'),
(494046, 475, '1384', 842, 72, 0, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494047, 573, '1734', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494049, 561, '1700', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494051, 475, '1384', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494052, 467, '1355', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494053, 561, '1700', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494055, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\"<< end; \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n <0);', 842, 72, 0, '2019-05-13 09:12:59', '2019-05-15 11:05:32'),
(494056, 467, '1355', 842, 72, NULL, '2019-05-13 09:12:59', '2019-05-13 09:12:59'),
(494058, 574, 'int fact( int x)\r\n{\r\nint y =1; \r\nfor ( int i =0; i <= x ; i++)\r\n{\r\nreturn y *=y*i;\r\n}\r\n}', 842, 72, 0, '2019-05-13 09:12:59', '2019-05-15 11:05:32'),
(494059, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\"<< end; \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n <0);', 842, 72, 0, '2019-05-13 09:12:59', '2019-05-15 11:05:32'),
(494061, 574, 'int fact( int x)\r\n{\r\nint y =1; \r\nfor ( int i =0; i <= x ; i++)\r\n{\r\nreturn y *=y*i;\r\n}\r\n}', 842, 72, 0, '2019-05-13 09:12:59', '2019-05-15 11:05:32'),
(494484, 564, '1713', 947, 72, 2, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494485, 563, '1711', 947, 72, 2, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494486, 571, 'int calc_power(intx,inty)\r\nint main(){\r\nint x,y,result;\r\ncin>>x>>y;\r\nresult= calc_power(x,y);\r\ncout<<x<<\"^\"<<y<<\"=\"<<result<<endl;\r\nreturn 0;\r\n} \r\n     int calc_power(intx,inty)\r\n{\r\nif(y=0)\r\nreturn 1;\r\nelse \r\nreturn  calc_power(x,y);\r\n}', 947, 72, 0, '2019-05-13 09:13:50', '2019-05-15 11:08:01'),
(494487, 572, '1728', 947, 72, 2, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494488, 573, '1735', 947, 72, 0, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494489, 475, '1383', 947, 72, 2, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494490, 561, '1700', 947, 72, 2, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494491, 467, '1357', 947, 72, 0, '2019-05-13 09:13:50', '2019-05-13 09:13:50'),
(494492, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n                       do(\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n)            \r\nwhile (n < 0);', 947, 72, 1, '2019-05-13 09:13:50', '2019-05-15 11:08:01'),
(494493, 574, 'int fact(int n){\r\nif((n==0)||(n==1))\r\nreturn 1;\r\nelse\r\nreturn n*fact(n-1);\r\n}\r\nint fact(int n)\r\nint main()\r\n{\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\nreturn 0;\r\n}', 947, 72, 1, '2019-05-13 09:13:50', '2019-05-15 11:08:01'),
(494728, 564, '1714', 840, 72, 0, '2019-05-13 09:14:21', '2019-05-13 09:14:22'),
(494729, 563, '1711', 840, 72, 2, '2019-05-13 09:14:21', '2019-05-13 09:14:22'),
(494730, 571, '#include<iostream>\r\nusing namespace std ;\r\nint pow (int x , int y ){\r\n if ( y == 0 ){\r\nreturn 0 ;\r\n}\r\nelse {\r\nreturn x * pow( x,y-1);\r\n\r\n}                            \r\nint main\r\n{\r\nint x , y  , z ;\r\ncin >> x >> y ;\r\nz = pow(x , y ) ;\r\ncout << z << endl ;\r\n}', 840, 72, 1, '2019-05-13 09:14:21', '2019-05-15 11:10:01'),
(494731, 572, '1728', 840, 72, 2, '2019-05-13 09:14:21', '2019-05-13 09:14:22'),
(494732, 573, '1733', 840, 72, 0, '2019-05-13 09:14:21', '2019-05-13 09:14:22'),
(494733, 475, '1383', 840, 72, 2, '2019-05-13 09:14:21', '2019-05-13 09:14:22'),
(494734, 561, '1700', 840, 72, 2, '2019-05-13 09:14:22', '2019-05-13 09:14:22'),
(494735, 467, '1356', 840, 72, 0, '2019-05-13 09:14:22', '2019-05-13 09:14:22'),
(494736, 569, '#include<iostream>\r\nusing namespace std ;\r\nint main(){\r\nint n ;\r\ndo {\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\n\r\nwhile (n < 0) \r\nsystem(\"pause\") ;\r\n\r\n\r\n}', 840, 72, 1, '2019-05-13 09:14:22', '2019-05-15 11:10:01'),
(494737, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact ( int x  ){\r\nif ( x >= 0){\r\nx *= (x-1)\r\n}\r\n}\r\nint main (){\r\nint x , y ;\r\ny = fact ( x) ;\r\ncout << y << endl ;\r\nsystem(\"pause\") ;\r\n}', 840, 72, 0, '2019-05-13 09:14:22', '2019-05-15 11:10:01'),
(495358, 564, '1715', 931, 72, 0, '2019-05-13 09:15:47', '2019-05-13 09:15:47'),
(495360, 563, '1711', 931, 72, 2, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495362, 571, 'int calcpower( int x , int  y)\r\nint main()\r\n{\r\nint x , y , result;\r\ncout <<\"Please enter postive number\\n\";\r\ncin>> x;\r\ncout<<\"Please enter another postive number\\n \";\r\ncin>> y;\r\nresult = calcpower(x , y);\r\ncout<< x << \" ^ \" << y << \" = \" << result << endl;\r\nreturn 0;\r\n int calcpower( int x , int  y)\r\n{\r\nif(y = 0 )\r\nreturn 1;\r\nelse\r\nreturn calcpower( x , y - 1);\r\n}', 931, 72, 1, '2019-05-13 09:15:47', '2019-05-15 11:11:30'),
(495364, 572, '1730', 931, 72, 0, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495366, 573, '1734', 931, 72, 2, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495367, 475, '1383', 931, 72, 2, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495368, 561, '1700', 931, 72, 2, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495369, 467, '1357', 931, 72, 0, '2019-05-13 09:15:47', '2019-05-13 09:15:48'),
(495370, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}while(n<0);', 931, 72, 0, '2019-05-13 09:15:47', '2019-05-15 11:11:30'),
(495371, 574, 'int fact  (int  n);\r\n{\r\nif(( n == 1) || ( n ==0 ))\r\nreturn 1;\r\nelse\r\nreturn n *  fact(n - 1);\r\n}\r\nint fact (int n)\r\nint main()\r\n{\r\n cout<<\"Please enter postive number\\n\";\r\ncin>> n;\r\ncout<<\'The facctorial is :\" << fact(n);\r\n}', 931, 72, 1, '2019-05-13 09:15:47', '2019-05-15 11:11:30'),
(495393, 564, '1713', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495395, 563, '1710', 835, 72, 0, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495397, 571, 'int pow(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse  \r\nreturn x*pow(x,y-1);\r\n}', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-15 11:20:18'),
(495399, 572, '1728', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495401, 573, '1734', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495403, 475, '1384', 835, 72, 0, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495405, 561, '1700', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495407, 467, '1355', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-13 09:15:52'),
(495408, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0);\r\n}', 835, 72, 1, '2019-05-13 09:15:52', '2019-05-15 11:20:18'),
(495409, 574, 'int f(int n)\r\n{\r\nf=1;\r\nfor(int i=n;i>1;i--)\r\nf=f*i;\r\nreturn f;\r\n  }', 835, 72, 2, '2019-05-13 09:15:52', '2019-05-15 11:20:18'),
(495708, 564, '1714', 961, 72, 0, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495709, 564, '1714', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495710, 563, '1711', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495711, 563, '1711', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495712, 571, '#include<iostream> \r\nusing namespace std;\r\nlong long power(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn  x*power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y)<<endl;\r\n}', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-15 12:00:57'),
(495713, 571, '#include<iostream> \r\nusing namespace std;\r\nlong long power(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn  x*power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y)<<endl;\r\n}', 961, 72, 0, '2019-05-13 09:16:26', '2019-05-15 12:00:57'),
(495714, 572, '1728', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495715, 572, '1728', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495716, 573, '1734', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495717, 573, '1734', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495718, 475, '1383', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495719, 475, '1383', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495720, 561, '1700', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495721, 561, '1700', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495722, 467, '1355', 961, 72, 2, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495723, 467, '1355', 961, 72, NULL, '2019-05-13 09:16:26', '2019-05-13 09:16:26'),
(495724, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n < 0);', 961, 72, 1, '2019-05-13 09:16:26', '2019-05-15 12:00:58'),
(495725, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n < 0);', 961, 72, 0, '2019-05-13 09:16:26', '2019-05-15 12:00:58'),
(495726, 574, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int n)\r\n{\r\nint fact=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)', 961, 72, 0, '2019-05-13 09:16:26', '2019-05-15 12:00:58'),
(495727, 574, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int n)\r\n{\r\nint fact=1;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)', 961, 72, 0, '2019-05-13 09:16:26', '2019-05-15 12:00:58'),
(496575, 564, '1715', 821, 72, 0, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496577, 563, '1709', 821, 72, 0, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496579, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\ncin>>x>>y;\r\nint p=1;\r\np*=x;\r\nif(y==0){\r\nreturn 1;\r\nbreak;\r\n}\r\nelse if(y==1){\r\nreturn 1;\r\nbreak;\r\n}\r\nelse\r\nreturn x*pow(x,y-1);\r\n}\r\nint main(){\r\nint n,m;\r\ncin>>n>>m;\r\ncout<<pow(n,m);\r\n}', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-15 15:05:53'),
(496581, 572, '1728', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496583, 573, '1734', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496585, 475, '1383', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496587, 561, '1700', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496589, 467, '1355', 821, 72, 2, '2019-05-13 09:17:29', '2019-05-13 09:17:29'),
(496591, 569, NULL, 821, 72, 0, '2019-05-13 09:17:29', '2019-05-15 15:05:53'),
(496592, 574, '#include<iostream>\r\nusing namespace std;\r\nint fac(int x){\r\nint f=1;\r\ncin>>x;\r\nfor(int i=x;i>0;)\r\n\r\n\r\n\r\n}', 821, 72, 0, '2019-05-13 09:17:29', '2019-05-15 15:05:53'),
(496763, 564, '1713', 861, 72, 2, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496764, 563, '1708', 861, 72, 0, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496765, 571, 'int power ( int x ; int y )\r\n{\r\nint b = 1  \r\n(for i = 0 ; i < y ; i ++ )\r\nb*=x\r\nreturn b;\r\n}', 861, 72, 1, '2019-05-13 09:17:43', '2019-05-15 15:07:59'),
(496766, 572, '1728', 861, 72, 2, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496767, 573, '1734', 861, 72, 2, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496768, 475, '1383', 861, 72, 2, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496769, 561, '1701', 861, 72, 0, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496770, 467, '1355', 861, 72, 2, '2019-05-13 09:17:43', '2019-05-13 09:17:43'),
(496771, 569, 'int n ;\r\ncout << \" enter a non-negative integer:\";\r\ncin >> n ;\r\ndo{ cout <<\'the integer you entered is negative . \" << endl;\r\ncout<< \" Enter a non-negative integer:\";\r\ncin >>n;} while ( n<0)', 861, 72, 1, '2019-05-13 09:17:43', '2019-05-15 15:07:59'),
(496772, 574, 'int fact ( int n)\r\n{ \r\nint f= 1 \r\n( i = n ; i < n ; i--)\r\nf*=n\r\nreturn f;\r\n}', 861, 72, 1, '2019-05-13 09:17:43', '2019-05-15 15:07:59'),
(496973, 564, '1713', 809, 72, 2, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496974, 563, '1708', 809, 72, 0, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496975, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x , int y )\r\n{\r\nif (x==0)\r\nreturn 1 ; \r\nreturn x*pow(x,y-1);   \r\n}\r\nint main ( )\r\n{\r\nint x ,y ;\r\ncin>>x>>y ; \r\nint z = pow(x,y) ;\r\ncout<<z;\r\n}', 809, 72, 1, '2019-05-13 09:18:00', '2019-05-15 14:59:28'),
(496976, 572, '1728', 809, 72, 2, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496977, 573, '1733', 809, 72, 0, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496978, 475, '1382', 809, 72, 0, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496979, 561, '1700', 809, 72, 2, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496980, 467, '1355', 809, 72, 2, '2019-05-13 09:18:00', '2019-05-13 09:18:01'),
(496981, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n<0)', 809, 72, 1, '2019-05-13 09:18:00', '2019-05-15 14:59:28'),
(496982, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact (int x)\r\n{\r\nint f=1;\r\nfor (int i=0 ; i<=x ; i++)\r\n{      \r\nf*=i ;\r\n}\r\nreturn f ;\r\n}\r\nint main ( )\r\n{\r\nint x; \r\ncin>>x;\r\nint z= facet(x) ;\r\ncout<<z;\r\n}', 809, 72, 2, '2019-05-13 09:18:00', '2019-05-15 14:59:28'),
(497177, 564, '1712', 808, 72, 0, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497178, 563, '1708', 808, 72, 0, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497179, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int i ,int z)\r\n{\r\nint p=1;\r\nif(z==0)\r\n{\r\nreturn 1;\r\n}\r\nreturn i*pow(i,z--);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\nsystem (\"pause\");\r\n}', 808, 72, 2, '2019-05-13 09:18:08', '2019-05-15 15:10:32'),
(497180, 572, '1728', 808, 72, 2, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497181, 573, '1734', 808, 72, 2, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497182, 475, '1384', 808, 72, 0, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497184, 561, '1701', 808, 72, 0, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497186, 467, '1355', 808, 72, 2, '2019-05-13 09:18:08', '2019-05-13 09:18:08'),
(497188, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ndo{\r\ncout<<\"\"\r\n}\r\n}', 808, 72, 0, '2019-05-13 09:18:08', '2019-05-15 15:10:32'),
(497190, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nif(n==1)\r\n{\r\nreturn 1;\r\n}\r\nreturn n* fact(n-1);\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact(x);\r\nsystem (\"pause\");\r\n}', 808, 72, 1, '2019-05-13 09:18:08', '2019-05-15 15:10:32'),
(497350, 564, '1715', 748, 72, 0, '2019-05-13 09:18:21', '2019-05-13 09:18:21'),
(497351, 563, '1710', 748, 72, 0, '2019-05-13 09:18:21', '2019-05-13 09:18:21'),
(497352, 571, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint power(int x ; int y;  int i=; ) {\r\nx=x*x;\r\nif(i==y) return x;\r\nelse return power(x,y,++i)\r\n}\r\nint main(){\r\nint x,y;\r\ncout<<\"please enter your number\"<<endl;\r\ncin>>x;\r\ncout<<\"please enter the power\"<<endl;\r\ncin>>y;\r\nint result = power(x,y);\r\ncout<<\"the result is \"<<result<<endl;\r\n}', 748, 72, 1, '2019-05-13 09:18:21', '2019-05-15 12:05:44'),
(497353, 572, '1728', 748, 72, 2, '2019-05-13 09:18:21', '2019-05-13 09:18:21'),
(497355, 573, '1734', 748, 72, 2, '2019-05-13 09:18:21', '2019-05-13 09:18:22'),
(497357, 475, '1385', 748, 72, 0, '2019-05-13 09:18:21', '2019-05-13 09:18:22'),
(497359, 561, '1701', 748, 72, 0, '2019-05-13 09:18:21', '2019-05-13 09:18:22'),
(497361, 467, '1355', 748, 72, 2, '2019-05-13 09:18:21', '2019-05-13 09:18:22'),
(497363, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){ \r\nint n;\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\nwhile(n<0)\r\nsystem(\"pause\");\r\n}', 748, 72, 2, '2019-05-13 09:18:21', '2019-05-15 12:05:44'),
(497365, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x; ){\r\nfor(int i=0; i<x; i++){\r\nx=x*(x-i);\r\n}\r\nreturn x;\r\n\r\n}\r\nint main(){\r\nint x; \r\ncout<<\"enter your number\"<<endl;\r\ncin>>x;\r\nint r = fact(x);\r\ncout<<\"the factorial of  \"<<x<<\"is\" <<r;\r\nsystem(\"pause\");\r\n}', 748, 72, 1, '2019-05-13 09:18:21', '2019-05-15 12:05:44'),
(497702, 564, '1713', 806, 72, 2, '2019-05-13 09:18:41', '2019-05-13 11:56:10'),
(497704, 563, '1708', 806, 72, 0, '2019-05-13 09:18:41', '2019-05-13 11:56:10'),
(497706, 571, 'int power ( int x , int y )\r\n{\r\nif (y==0)\r\nreturn 1;\r\nreturn x * power( x , y-1);\r\n}', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-15 11:59:19');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(497708, 572, '1728', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-13 11:56:10'),
(497710, 573, '1734', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-13 11:56:10'),
(497712, 475, '1383', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-13 11:56:10'),
(497714, 561, '1701', 806, 72, 0, '2019-05-13 09:18:42', '2019-05-13 11:56:10'),
(497715, 467, '1355', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-13 11:56:10'),
(497716, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}   while (n < 0)', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-15 11:59:19'),
(497717, 574, 'int fact ( int x)\r\n{\r\nf=1\r\nfor ( int i=1 ; i<=x ; i++)\r\n{\r\n    f*=i;\r\n }\r\nreturn f;\r\n}', 806, 72, 2, '2019-05-13 09:18:42', '2019-05-15 11:59:19'),
(497915, 564, '1712', 819, 72, 0, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497916, 563, '1708', 819, 72, 0, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497917, 571, '#include <iostream>\r\nusing namespace std;\r\nint p(int x, int y)\r\n{\r\n\r\nint p=1;\r\nfor (int x=1;i<y;i++)\r\n{\r\nif (x&&y>0)\r\n{\r\np*=x;\r\nreturn x*p(x,y-1);\r\n}\r\n}\r\nint main ()\r\n{\r\nint n,m;\r\ncin>>n>>m;\r\ncout<<p(n,m);\r\nsystem (\"pause\");\r\n\r\n}', 819, 72, NULL, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497918, 572, '1728', 819, 72, 2, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497919, 573, '1735', 819, 72, 0, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497920, 475, '1383', 819, 72, 2, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497921, 561, '1702', 819, 72, 0, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497922, 467, '1356', 819, 72, 0, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497923, 569, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\n\r\nint n;\r\ncin>>n;\r\ndo {\r\ncout <<\"Enter a non-negative integer: \";\r\ncin>>n;\r\n\r\n}\r\nwhile\r\n(n<0)\r\n{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\n}\r\n\r\n\r\nsystem (\"pause\");\r\n\r\n}', 819, 72, NULL, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(497924, 574, '#include <iostream>\r\nusing namespace std;\r\nint f(int x)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nfor (int i=1;i<x;i++)\r\n{\r\nreturn x*f(x-1);\r\n\r\n\r\n}\r\n\r\n\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<f(n);\r\nsystem (\"pause\");\r\n\r\n}', 819, 72, NULL, '2019-05-13 09:18:52', '2019-05-13 09:18:52'),
(498135, 564, '1713', 802, 72, 2, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498136, 563, '1708', 802, 72, 0, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498137, 571, '#include <iostream>\r\nusing namespace std;\r\n  int n()\r\n{\r\nint x;\r\nint y;\r\nint res=1;\r\nfor(int i=0;i<y;i++)\r\n{\r\nres*=x;\r\n}\r\n{\r\nreturn res;\r\n}\r\n}\r\nvoid main()\r\n{\r\nint z;\r\nz=n();\r\n{\r\ncout<< z;\r\n}\r\nsystem (\"pause\");\r\n}', 802, 72, 0, '2019-05-13 09:19:11', '2019-05-15 15:39:27'),
(498138, 572, '1728', 802, 72, 2, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498139, 573, '1735', 802, 72, 0, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498140, 475, '1383', 802, 72, 2, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498141, 561, '1701', 802, 72, 0, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498142, 467, '1355', 802, 72, 2, '2019-05-13 09:19:11', '2019-05-13 09:19:11'),
(498143, 569, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"Enter a non-negative integer.\";\r\nif (', 802, 72, 0, '2019-05-13 09:19:11', '2019-05-15 15:39:27'),
(498144, 574, '#include <iostream>\r\nusing namespace std;\r\n   int n()\r\n{\r\nint x;\r\nint fact=1;\r\nfor(int i=0;i<=x;i++)\r\n{\r\nfact*=i;\r\n}\r\n{\r\nreturn fact; \r\n}\r\n}\r\nvoid main()\r\n{\r\nint r;\r\nr=n();\r\n{\r\ncout<<r ;\r\n}\r\nsystem(\"pause \");\r\n}', 802, 72, 1, '2019-05-13 09:19:11', '2019-05-15 15:39:27'),
(498327, 564, '1712', 799, 72, 0, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498329, 563, '1711', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498331, 571, '#include<iostream>\r\nusing namespace std;\r\nint n(int x,inty)\r\n{\r\nif(y==0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n{\r\nreturn x*n(x,--y);\r\n}\r\n}\r\nint main()\r\n{\r\nint a,b;\r\ncin>>a>>b;\r\ncout<<n(a,b);\r\nsystem(\"pause\");\r\n}', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-15 15:15:34'),
(498333, 572, '1728', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498334, 573, '1734', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498335, 475, '1383', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498336, 561, '1700', 799, 72, 2, '2019-05-13 09:19:21', '2019-05-13 09:20:35'),
(498337, 569, NULL, 799, 72, 0, '2019-05-13 09:19:21', '2019-05-15 15:15:34'),
(498338, 574, '#include<iostream>\r\nusing namespace std;\r\nint n(int ex)\r\n{\r\nint f=1;\r\nfor(int i=1; i<=ex;i++)\r\n{\r\nf=i*f;\r\n}\r\ncout<<f;\r\n}\r\nint main()\r\n{\r\nn(5);\r\nsystem(\"pause\");\r\n}', 799, 72, 1, '2019-05-13 09:19:21', '2019-05-15 15:15:34'),
(498349, 561, '1703', 761, 70, 0, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498350, 562, '1704', 761, 70, 0, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498351, 563, '1711', 761, 70, 2, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498352, 564, '1715', 761, 70, 0, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498353, 565, '1716', 761, 70, 2, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498354, 566, '1723', 761, 70, 0, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498355, 567, '1727', 761, 70, 0, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498356, 568, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nfloat income;\r\ncout<<\"Enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"You are going farther into debt every month.\"<<endl;\r\nelse if(income>=0.0&&income<1200.00)\r\ncout<<\"You are living below the poverty line.\"<<endl;\r\nelse if(income>=1200.00&&income<2500.00)\r\ncout<<\"You are living in moderate comfort.\"<<endl;\r\nelse\r\ncout<<\"You are well off.\"<<endl;\r\nsystem(\"pause\");\r\n}', 761, 70, NULL, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498357, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n} while(n<0);           \r\n             system(\'pause\"); }', 761, 70, NULL, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498358, 570, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x){\r\nif(x==0)\r\nreturn 1;\r\nreturn x*fact(x-1);\r\n}\r\nint main(){\r\nint x;\r\ncin>>x;\r\ncout<<fact(x)<<endl;\r\nsystem(\"pause\");\r\n}', 761, 70, NULL, '2019-05-13 09:19:22', '2019-05-13 09:19:22'),
(498395, 564, '1712', 807, 72, 0, '2019-05-13 09:19:23', '2019-05-13 09:19:55'),
(498397, 563, '1708', 807, 72, 0, '2019-05-13 09:19:23', '2019-05-13 09:19:55'),
(498399, 571, '#include<iostream>\r\nusing namespace std;\r\nint powe(int x,int y)\r\n{\r\nif(0>y) return x;\r\n return x*(x,y-1);\r\n\r\n}\r\nint main()\r\n{ int x,y;\r\ncin>>x>>y;\r\nint a=power(x,y);\r\ncout<<a;\r\n}', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-15 15:13:22'),
(498401, 572, '1728', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-13 09:19:55'),
(498403, 573, '1735', 807, 72, 0, '2019-05-13 09:19:23', '2019-05-13 09:19:56'),
(498405, 475, '1383', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-13 09:19:56'),
(498407, 561, '1700', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-13 09:19:56'),
(498409, 467, '1355', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-13 09:19:56'),
(498410, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{int n;\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\n}    while(n<o);  \r\n}', 807, 72, 2, '2019-05-13 09:19:23', '2019-05-15 15:13:22'),
(498411, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{       int p=1;\r\nfor(int i=1;i<=x;i++)\r\n{\r\np*=i;\r\n}\r\nreturn p;\r\n}\r\nint main()\r\n{\r\nint a;\r\ncin>>a;\r\ncout<<fact(a)\r\n}', 807, 72, 2, '2019-05-13 09:19:24', '2019-05-15 15:13:22'),
(498801, 564, '1714', 804, 72, 0, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498803, 563, '1708', 804, 72, 0, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498805, 571, '#include <iostream>\r\nusing namespace std;\r\ndouble power(double x,int y)\r\n{\r\nint p=1;\r\nfor(int i=0;i<y,i++)\r\np*=x;\r\nreturn p;\r\n}\r\nvoid main()\r\n{\r\ndouble z;\r\ndouble x;\r\nint y;\r\ncin>>x>>y;\r\nz=power(x,--y)\r\ncout<<\"x power y=\"<<z;\r\n}', 804, 72, 1, '2019-05-13 09:19:48', '2019-05-15 15:09:19'),
(498807, 572, '1728', 804, 72, 2, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498809, 475, '1385', 804, 72, 0, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498811, 561, '1701', 804, 72, 0, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498813, 467, '1354', 804, 72, 0, '2019-05-13 09:19:48', '2019-05-13 09:19:48'),
(498815, 569, NULL, 804, 72, 0, '2019-05-13 09:19:48', '2019-05-15 15:09:19'),
(498816, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nint f=1;\r\nfor(int i=x;i>o,i__)\r\nf*=x\r\nreturn f;\r\n}\r\nvoid main()\r\nint x;\r\nint factorial;', 804, 72, 2, '2019-05-13 09:19:48', '2019-05-15 15:09:19'),
(499206, 564, '1715', 803, 72, 0, '2019-05-13 09:19:59', '2019-05-13 09:20:00'),
(499208, 571, '#include<iostream>\r\nusing namespace std;\r\ndouble power(double x,int y);\r\n{\r\nif(y==0)\r\nreturn1;\r\nelsse\r\nreturn power(double x,int --y)\r\n}\r\nvoid main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y)\r\nsystem (\"pause\");\r\n}', 803, 72, 1, '2019-05-13 09:19:59', '2019-05-16 09:12:35'),
(499210, 572, '1728', 803, 72, 2, '2019-05-13 09:19:59', '2019-05-13 09:20:00'),
(499212, 475, '1383', 803, 72, 2, '2019-05-13 09:19:59', '2019-05-13 09:20:00'),
(499214, 561, '1701', 803, 72, 0, '2019-05-13 09:19:59', '2019-05-13 09:20:00'),
(499216, 467, '1354', 803, 72, 0, '2019-05-13 09:20:00', '2019-05-13 09:20:00'),
(499218, 569, NULL, 803, 72, 0, '2019-05-13 09:20:00', '2019-05-16 09:12:35'),
(499219, 574, 'int fact(int n)\r\n{\r\nfor( int i=1;i<=n;i++)\r\nreturn n*fact(n-1)\r\n\r\n\r\nreturn n*fact(n-1)\r\n}\r\nvoid main()\r\n{\r\nint fact;\r\nint n;\r\ncout|<<fact (n);', 803, 72, 0, '2019-05-13 09:20:00', '2019-05-16 09:12:35'),
(499431, 564, '1713', 833, 72, 2, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499432, 563, '1708', 833, 72, 0, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499433, 571, '#include<iostream>\r\nusing namespace std; \r\nint pow(int x, int y)\r\n{\r\nif (y==0)\r\nreturn 0;\r\nreturn x*pow(x,y-1)\r\n\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x,y;\r\ncout<<pow(int x, int y);\r\nreturn 0;\r\n\r\n}', 833, 72, 1, '2019-05-13 09:20:17', '2019-05-16 09:14:47'),
(499434, 572, '1728', 833, 72, 2, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499435, 573, '1733', 833, 72, 0, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499436, 475, '1384', 833, 72, 0, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499437, 561, '1701', 833, 72, 0, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499438, 467, '1355', 833, 72, 2, '2019-05-13 09:20:17', '2019-05-13 09:20:17'),
(499439, 569, 'int n;                                                                                                   \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\n}\r\nwhile(n<0);', 833, 72, 1, '2019-05-13 09:20:17', '2019-05-16 09:14:47'),
(499441, 574, '#include <iostream>\r\nusing namespace std;\r\n int f(int x, int f=1)\r\n{\r\nfor(int i=x;i>=1;i++)\r\nf*=i;\r\n int main()\r\n{\r\nint x,f=1;\r\ncin >> x;\r\ncout<<f<<endl;\r\n}\r\nreturn 0;', 833, 72, 0, '2019-05-13 09:20:17', '2019-05-16 09:14:47'),
(499514, 564, '1714', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499516, 563, '1708', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499518, 571, 'int power (int x;int y)\r\n{ for (int i=0;i<=y;i++)\r\n{\r\nx=y;\r\ny=x;\r\np*=y;\r\n}', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-15 15:46:17'),
(499520, 572, '1728', 796, 72, 2, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499522, 573, '1735', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499523, 475, '1383', 796, 72, 2, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499524, 561, '1701', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499525, 467, '1355', 796, 72, 2, '2019-05-13 09:20:23', '2019-05-13 11:56:10'),
(499526, 569, 'cout <<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo {\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\n cout<<\"Enter a non -nagative intger:\";\r\ncin>>n;\r\n}\r\nwhile (n<0)', 796, 72, 1, '2019-05-13 09:20:23', '2019-05-15 15:46:17'),
(499527, 574, 'int fact (int x)\r\n{\r\nfor (int i=0; i<=n;i--)\r\n{\r\nf*=i;\r\nreturn 0 ;\r\n}', 796, 72, 0, '2019-05-13 09:20:23', '2019-05-15 15:46:17'),
(499987, 564, '1712', 810, 72, 0, '2019-05-13 09:20:45', '2019-05-13 09:20:46'),
(499990, 563, '1708', 810, 72, 0, '2019-05-13 09:20:45', '2019-05-13 09:20:46'),
(499992, 571, '#include<iostream>\r\nusing namespace std;\r\nint n(int i=0, int x, int y)\r\n{\r\ncin>>x>>y;\r\nif( i > y )\r\nreturn 1;\r\ni++;\r\ncout<< x * n( x , y - 1) ;\r\n\r\n}                                                                                                                \r\nint main()\r\n{ \r\nn();                                                                                                               \r\n}', 810, 72, 0, '2019-05-13 09:20:46', '2019-05-15 14:57:08'),
(499994, 572, '1728', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-13 09:20:46'),
(499997, 573, '1734', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-13 09:20:47'),
(499999, 475, '1383', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-13 09:20:47'),
(500002, 561, '1700', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-13 09:20:47'),
(500004, 467, '1355', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-13 09:20:47'),
(500006, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"enter a non-negative integer: \";\r\ndo(\r\ncout<<\"The integer you entered is negative.\";\r\ncout<<\"Enter a non-negative integer: \";\r\n)\r\nwhile(n<0)\r\n}', 810, 72, 0, '2019-05-13 09:20:46', '2019-05-15 14:57:08'),
(500008, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid n()\r\n{\r\nint fac=1;\r\nint n;\r\ncin>>n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfac=fac*i;\r\n}\r\n}\r\nint main()\r\n{\r\nn();\r\nsystem(\"pause\");\r\n}', 810, 72, 2, '2019-05-13 09:20:46', '2019-05-15 14:57:08'),
(500105, 564, '1713', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500106, 563, '1708', 797, 72, 0, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500107, 571, 'include <iostream>\r\nusing namespace std;\r\nint p(int x,int y)\r\n{\r\nif(y==1)\r\nreturn x;\r\nreturn x* p(x,y-1)\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<p(x,y)\r\nsystem (\"pause\");\r\n}', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-15 15:44:43'),
(500108, 572, '1728', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500109, 573, '1735', 797, 72, 0, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500110, 475, '1383', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500111, 561, '1700', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500113, 467, '1355', 797, 72, 2, '2019-05-13 09:20:49', '2019-05-13 09:20:50'),
(500116, 569, 'include <iostream>\r\nusing namespace std;\r\nint main()                                                                                                   \r\n {\r\ndo{\r\nint n;\r\ncout<<\"enter a non -nagative integer\";\r\ncin>>n;\r\n\r\n}\r\nwhile (n<o)\r\ncout <<\"the intger you entered is negative\";\r\nsystem (\"pause\");\r\n}', 797, 72, 0, '2019-05-13 09:20:50', '2019-05-15 15:44:43'),
(500119, 574, 'include <iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\n\r\nint f=1;\r\nfor(int i=1;i<=x;i++)\r\nf*=i;\r\nreturn f;\r\n}\r\nint main()                                                                                                   \r\n {\r\nint x;\r\ncin>>x;\r\ncout<<fact(x);\r\n}', 797, 72, 2, '2019-05-13 09:20:50', '2019-05-15 15:44:43'),
(500486, 564, '1713', 759, 72, 2, '2019-05-13 09:20:59', '2019-05-13 09:21:00'),
(500487, 563, '1709', 759, 72, 0, '2019-05-13 09:20:59', '2019-05-13 09:21:00'),
(500489, 571, '#include <iostream>  \r\nusing namespace std;\r\nint pow (int x, int y) \r\n{\r\nint n;\r\ncin>>n;\r\nif(n<=y)\r\n{\r\nreturn n;\r\n}\r\n{\r\nreturn n*x*(y-1);\r\n }     \r\n}\r\nint main()\r\n{\r\ncout<< pow(5,4);\r\n}', 759, 72, 0, '2019-05-13 09:20:59', '2019-05-16 09:22:03'),
(500491, 572, '1729', 759, 72, 0, '2019-05-13 09:20:59', '2019-05-13 09:21:00'),
(500493, 573, '1733', 759, 72, 0, '2019-05-13 09:20:59', '2019-05-13 09:21:00'),
(500495, 475, '1382', 759, 72, 0, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500497, 561, '1700', 759, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500499, 467, '1355', 759, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500501, 564, '1713', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500502, 569, 'int n;\r\ncout <<\"enter a non-negative integer;\";\r\ncin >>  n;\r\ndo\r\n{\r\ncout<<\"the integer you entered is negative.\"<< endl;\r\ncout<<\"enter a non-negative integer;\"; \r\ncin>> n;\r\n}\r\nwhile(n<0)', 759, 72, 1, '2019-05-13 09:21:00', '2019-05-16 09:22:03'),
(500503, 564, '1713', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500505, 574, '#include <iostream> \r\nusing namespace std;\r\nint fac()\r\n{\r\nint n;\r\ncin>>n;\r\nint res=1;\r\nfor(int i=1;i<n;i++){  \r\nres*=i;   \r\n}\r\nreturn res; \r\n}\r\nvoid main()\r\n{\r\nint z=fac();\r\ncout<<z;\r\n}', 759, 72, 2, '2019-05-13 09:21:00', '2019-05-16 09:22:03'),
(500506, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow(int x, int y)\r\n{\r\nif (y==0)\r\nreturn x;\r\nelse\r\nreturn x*pow(x,y-1);\r\n}\r\nint main()\r\n{\r\n  int o,s,w;\r\ncout<<\"enter the positve numbers\"<<endl;\r\ncin>>o>>s;\r\nw=pow(o,s);\r\ncout<<\"the power is =\"<<w;\r\n\r\n}', 815, 72, 1, '2019-05-13 09:21:00', '2019-05-16 09:15:42'),
(500507, 563, '1708', 762, 72, 0, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500509, 572, '1728', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500510, 571, 'int pow=1, i=1;\r\nint power(int x , int y )\r\n{\r\nif (i>y)\r\n  {   return pow; }\r\npow=pow*x;\r\ni++;\r\nreturn power(x, y);\r\n}', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-16 09:08:39'),
(500512, 572, '1728', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500513, 573, '1733', 815, 72, 0, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500514, 573, '1735', 762, 72, 0, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500515, 475, '1383', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500516, 475, '1385', 762, 72, 0, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500517, 561, '1700', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:00'),
(500518, 561, '1700', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:01'),
(500519, 467, '1355', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:01'),
(500520, 467, '1355', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-13 09:21:01'),
(500521, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n  int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0);\r\n\r\n}', 815, 72, 1, '2019-05-13 09:21:00', '2019-05-16 09:15:42'),
(500522, 569, 'int n;\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif  (n < 0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\n};\r\nwhile(n < 0)', 762, 72, 2, '2019-05-13 09:21:00', '2019-05-16 09:08:39'),
(500523, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nint f=1;\r\nfor(i=1;i<=n;i++)\r\nf=f*i;\r\nreturn f;\r\n\r\n}\r\nint main()\r\n                   {\r\n                     int n,fa;\r\n                    cin>>n;\r\nfa=fact(n);\r\n                    cout<<\"factorial =<<fa<<endl;\r\n\r\n}', 815, 72, 2, '2019-05-13 09:21:00', '2019-05-16 09:15:42'),
(500524, 574, 'int factorial(int x)\r\n{       int fact=1;\r\nfor (int i=x ; i<=1;i-- )\r\n{    fact=fact*i;\r\n}\r\nreturn fact;\r\n}', 762, 72, 1, '2019-05-13 09:21:00', '2019-05-16 09:08:39'),
(500532, 564, '1713', 818, 72, 2, '2019-05-13 09:21:02', '2019-05-13 09:21:52'),
(500534, 563, '1710', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500536, 571, '#include <stdio.h>\r\n\r\nint pow(int x, int y);\r\n\r\nint main()\r\n{\r\n    int base, powerRaised, result;\r\n\r\ncout<<\"Enter base number: \";\r\n    scanf(\"%d\",&base);\r\n\r\n   cout<<\"Enter power number(positive integer): \";\r\n    scanf(\"%d\",&powerRaised);\r\n\r\n    result = power(base, powerRaised);\r\n\r\n  cout<<\"%d^%d = %d\", base, powerRaised, result;\r\n    return 0;\r\n}\r\n\r\nint power(int base, int powerRaised)\r\n{\r\n    if (powerRaised != 0)\r\n        return (base*power(base, powerRaised-1));\r\n    else\r\n        return 1;\r\n}', 818, 72, 2, '2019-05-13 09:21:02', '2019-05-15 15:34:25'),
(500538, 572, '1728', 818, 72, 2, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500539, 573, '1735', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500540, 475, '1382', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500541, 561, '1702', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500542, 467, '1354', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-13 09:21:53'),
(500543, 569, '#include<iostream>\r\nusing namespace std;\r\nvoid main(){\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n}while(n<0)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 818, 72, 1, '2019-05-13 09:21:02', '2019-05-15 15:34:25'),
(500544, 574, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 818, 72, 0, '2019-05-13 09:21:02', '2019-05-15 15:34:25'),
(500561, 564, '1712', 756, 72, 0, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500562, 563, '1708', 756, 72, 0, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500563, 571, '#include<iostream>\r\nusing namespace std;\r\nint f(int bs , int ex , int n=1 , int i=0)\r\n{\r\nif(i>ex)\r\n{return 0;}\r\nn=n*bs;\r\ni++;\r\n}', 756, 72, 1, '2019-05-13 09:21:04', '2019-05-16 09:18:24'),
(500564, 572, '1728', 756, 72, 2, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500565, 573, '1734', 756, 72, 2, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500566, 475, '1383', 756, 72, 2, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500567, 561, '1701', 756, 72, 0, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500568, 467, '1354', 756, 72, 0, '2019-05-13 09:21:04', '2019-05-13 09:21:04'),
(500569, 569, 'int f(int n)\r\n{\r\ncout<<\"The integer you entered is negative.\" << endl;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\n\r\ncout<<\"Enter a non-negative integer: \";\r\n\r\nint n;\r\ncin>>n;\r\n\r\ndo\r\n{\r\nf(n);\r\n}while(n<0)', 756, 72, 0, '2019-05-13 09:21:04', '2019-05-16 09:18:25'),
(500570, 574, 'int f( int n , int fact=1)\r\n{\r\ncin>>n;\r\nfor ( int i=1; i<=n ; i++)\r\nfact=fact*i;\r\ncout<<fact;\r\n}', 756, 72, 1, '2019-05-13 09:21:04', '2019-05-16 09:18:25'),
(500707, 564, '1713', 765, 72, 2, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500709, 563, '1709', 765, 72, 0, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500711, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nint p;\r\np=x*y;\r\nreturn p;\r\n}\r\n int main ()\r\n{   \r\nint x,y;\r\ncin>>x>>y;\r\npower(x,y);\r\ncout<<p;\r\n    system(\"pause\");\r\n}', 765, 72, 0, '2019-05-13 09:21:15', '2019-05-15 15:41:24'),
(500713, 572, '1728', 765, 72, 2, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500714, 573, '1735', 765, 72, 0, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500715, 475, '1384', 765, 72, 0, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500716, 561, '1700', 765, 72, 2, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500717, 467, '1355', 765, 72, 2, '2019-05-13 09:21:15', '2019-05-13 09:21:15'),
(500718, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ndo{\r\ncout<<\" negative integer\";\r\n}while(n<0);\r\ncout<<\"the integer you intered is non-negative \";\r\nsystem(\"pause\");\r\n}', 765, 72, 0, '2019-05-13 09:21:15', '2019-05-15 15:41:24'),
(500719, 574, '#include <iostream>\r\nusing namespace std;\r\nint f(int x)\r\n{\r\nint f;\r\nfor(int i=1;i<x;i++){\r\nf*=i;}\r\nreturn f;\r\n}\r\n  int main()\r\n{\r\nint x,y;\r\ncin>>x;\r\ny=f(x);   \r\ncout<<y;\r\nsystem(\"pause\");\r\n}', 765, 72, 2, '2019-05-13 09:21:15', '2019-05-15 15:41:24'),
(500720, 564, '1713', 751, 72, 2, '2019-05-13 09:21:16', '2019-05-13 09:21:17'),
(500721, 563, '1708', 751, 72, 0, '2019-05-13 09:21:16', '2019-05-13 09:21:17'),
(500722, 571, '#include<iostream>\r\n     using namespace std;\r\n     int pow (int x ,int y );\r\n         if (x==1)\r\nreturn 0;\r\nelse {return x*pow(x,y-1);}\r\nint main( ){\r\nint a,b;\r\ncin>>a>>b;\r\ncout<< pow(a,b);\r\nsystem (\"pause\");}', 751, 72, 1, '2019-05-13 09:21:16', '2019-05-16 09:25:14'),
(500723, 572, '1728', 751, 72, 2, '2019-05-13 09:21:16', '2019-05-13 09:21:17'),
(500724, 573, '1734', 751, 72, 2, '2019-05-13 09:21:16', '2019-05-13 09:21:17'),
(500725, 475, '1382', 751, 72, 0, '2019-05-13 09:21:16', '2019-05-13 09:21:17'),
(500726, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){       \r\n  do{          int n;\r\n                       cout <<\"enter anon nagative number \";  \r\n                      cin>>n;}\r\nwhile {      int n;\r\n              cout <<\"enter anon negative number\';\r\n            cin >>n ;\r\n           while (n<0){\r\n          cout <<\"the integer you entered is negative \";\r\nelse\r\n           cout <<\"the integer you entered is not negative \";\r\nsystem (\"pause\");\r\n}', 751, 72, 0, '2019-05-13 09:21:16', '2019-05-16 09:25:14'),
(500727, 574, '#include<iostream>\r\n using namespace std;\r\n           int main (){\r\nlong long x ,fact=1;\r\ncin>>x;\r\nfor (int i=0;i>=;i--)\r\n{\r\nint fact=fact*i\r\n}\r\n cout<<f;     \r\nsystem (\"pause\");}', 751, 72, 0, '2019-05-13 09:21:16', '2019-05-16 09:25:14'),
(500927, 564, '1713', 763, 72, 2, '2019-05-13 09:21:29', '2019-05-13 09:21:30'),
(500929, 563, '1708', 763, 72, 0, '2019-05-13 09:21:29', '2019-05-13 09:21:30'),
(500931, 571, 'int pow(int x , int y)\r\n{\r\nint p=0;\r\nfor(int i=0;i<y;i++)\r\np*=x;\r\nreturn p;\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nint p=pow(x,y);\r\ncout<<p<<endl;', 763, 72, 0, '2019-05-13 09:21:29', '2019-05-16 09:19:31'),
(500933, 572, '1728', 763, 72, 2, '2019-05-13 09:21:29', '2019-05-13 09:21:30'),
(500935, 475, '1383', 763, 72, 2, '2019-05-13 09:21:29', '2019-05-13 09:21:30'),
(500936, 561, '1700', 763, 72, 2, '2019-05-13 09:21:30', '2019-05-13 09:21:30'),
(500937, 467, '1355', 763, 72, 2, '2019-05-13 09:21:30', '2019-05-13 09:21:30'),
(500938, 569, 'do\r\n{\r\n        cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \"; \r\n}\r\nint n;\r\ncout<<\"Enter a non negative intger\" ;\r\ncin>>n;\r\nwhile (n<0)', 763, 72, 0, '2019-05-13 09:21:30', '2019-05-16 09:19:31'),
(500939, 574, 'int fact(int n)\r\n{\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\nf*=i;\r\nreturn f;     \r\n}', 763, 72, 2, '2019-05-13 09:21:30', '2019-05-16 09:19:31'),
(501096, 564, '1712', 801, 72, 0, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501097, 563, '1708', 801, 72, 0, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501098, 571, '#include<iostream>\r\nusing namespace std; \r\n int pow(int x,int y)\r\n{\r\n while (y>0)\r\n{\r\nreturn x*pow(x,y-1);\r\n}\r\nelse\r\n{\r\nreturn 1;\r\n}\r\n}\r\n\r\nint main()\r\n{\r\nint a,b;\r\ncin>>a>>b;\r\nint c=pow(a,b);\r\ncout<<c;\r\nsystem(\"pause\");\r\n}', 801, 72, 1, '2019-05-13 09:21:46', '2019-05-15 15:47:59'),
(501099, 572, '1728', 801, 72, 2, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501100, 573, '1735', 801, 72, 0, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501101, 475, '1385', 801, 72, 0, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501102, 561, '1700', 801, 72, 2, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501103, 467, '1354', 801, 72, 0, '2019-05-13 09:21:46', '2019-05-13 09:22:35'),
(501104, 569, '#include<iostream>\r\nusing namespace std;\r\nint main() \r\n{\r\nint n;\r\ncin>>n;\r\ndo{\r\ncout<<\"the integer you entered is negative\"<<endl;\r\ncout<<\"Enter a non-negative  integer:\";\r\ncin>>n;\r\n}while (n<0);\r\nsystem(\"pause\");\r\n}', 801, 72, 1, '2019-05-13 09:21:46', '2019-05-15 15:47:59'),
(501105, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nif (x<1)\r\n{\r\nreturn x*fact(x-1);\r\n}\r\nelse\r\n{\r\nreturn 1;\r\n}\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\nint c=fact(x);\r\ncout<<c; \r\nsystem(\"pause\");\r\n}', 801, 72, 1, '2019-05-13 09:21:46', '2019-05-15 15:47:59'),
(501225, 564, '1714', 844, 72, 0, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501226, 563, '1711', 844, 72, 2, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501227, 571, '#include <iostream>                                \r\nusing namespace std;\r\nint pow (int x,int y )\r\n{\r\nreturn x*(x*(y-1));\r\n}\r\nvoid main ()\r\n{\r\nint x,y ;\r\ncin >>x>>y ;\r\ncout <<pow(x,y);\r\ncout  <<endl;\r\n}', 844, 72, 0, '2019-05-13 09:21:53', '2019-05-16 09:43:37'),
(501228, 572, '1728', 844, 72, 2, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501229, 573, '1734', 844, 72, 2, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501230, 475, '1383', 844, 72, 2, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501231, 561, '1700', 844, 72, 2, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501232, 467, '1356', 844, 72, 0, '2019-05-13 09:21:53', '2019-05-13 09:21:53'),
(501233, 569, '#include <iostream>\r\nusing namespace std ;\r\n void main ()\r\n{         \r\n         int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;    \r\nif (n<0)\r\n{\r\ndo \r\n{            \r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile  (n<0)\r\n}       \r\n}      \r\nsystem (\"pause\");\r\n}', 844, 72, 1, '2019-05-13 09:21:53', '2019-05-16 09:43:37'),
(501234, 574, '#include <iostream>                                                               \r\nusing namespace std ;\r\nint fact (int x)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nreturn x*fact(x-1);      \r\n}\r\nvoid main ()\r\n{\r\nint x ;\r\ncin >>x ;\r\ncout << fact (x);\r\ncout <<endl;\r\nsystem (\"pause\");\r\n}', 844, 72, 1, '2019-05-13 09:21:53', '2019-05-16 09:43:37'),
(501245, 564, '1713', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501246, 563, '1710', 820, 72, 0, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501247, 571, 'include <iostream>\r\nusing namespace std;\r\n   int power (int x ,int y){\r\nif (y==0)\r\nreturn x;\r\nelse\r\nreturn x*power(x,y-1);\r\n}\r\nint main () {\r\nint a,b,c;\r\ncout<<\"enter your positive numbers\"<<endl;\r\ncin>>a>>b;\r\nc=power(a,b);\r\ncout<<\"power=\"c;\r\n}', 820, 72, 1, '2019-05-13 09:21:55', '2019-05-16 09:41:00'),
(501248, 572, '1728', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501249, 573, '1733', 820, 72, 0, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501250, 475, '1383', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501251, 561, '1700', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501252, 467, '1355', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-13 11:56:11'),
(501253, 569, 'include<iostream>\r\nusing namespace std;\r\n int main(){\r\nint n;\r\n   cout << \"Enter a non-negative integer: \";\r\n   cin >> n;\r\ndo{\r\n       cout << \"The integer you entered is negative.\" << endl;\r\n       cout << \"Enter a non-negative integer: \";\r\n       cin >> n;   \r\n         }while(n>0);', 820, 72, 1, '2019-05-13 09:21:55', '2019-05-16 09:41:00'),
(501254, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n){\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\nf=f*i;\r\nreturn f;\r\n}\r\nint main (){\r\n\r\nint num,factorial;\r\ncin>>num;\r\nfactorial=fact(num);\r\ncout<<\"factorial=\"<<factorial;                                                                                                         \r\n   }', 820, 72, 2, '2019-05-13 09:21:55', '2019-05-16 09:41:00'),
(501510, 564, '1713', 753, 72, 2, '2019-05-13 09:22:12', '2019-05-13 09:22:12'),
(501511, 563, '1708', 753, 72, 0, '2019-05-13 09:22:12', '2019-05-13 09:22:13'),
(501512, 571, 'int pow(int x ,int y)  \r\nreturn 1;\r\nreturn x*pow(x , y-1);\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);', 753, 72, 1, '2019-05-13 09:22:12', '2019-05-16 09:42:01'),
(501513, 572, '1728', 753, 72, 2, '2019-05-13 09:22:12', '2019-05-13 09:22:13'),
(501514, 573, '1734', 753, 72, 2, '2019-05-13 09:22:12', '2019-05-13 09:22:13'),
(501515, 475, '1382', 753, 72, 0, '2019-05-13 09:22:12', '2019-05-13 09:22:13'),
(501516, 467, '1355', 753, 72, 2, '2019-05-13 09:22:12', '2019-05-13 09:22:13'),
(501517, 569, 'int n;\r\ncout<<\"entre a non negative integer:\";\r\ncin>>n;\r\ndo {\r\ncout<<\"the integre you entered is negative \"<<endl;\r\ncout<<\"entre non negative integre\";\r\nwhile(n<0)\r\n{ cin >>n;\r\n}', 753, 72, 0, '2019-05-13 09:22:12', '2019-05-16 09:42:01'),
(501518, 574, 'int main()\r\n{\r\nlong long x , f=1;\r\ncin>>x;\r\nfor(int i=x;i>=1;i--)\r\n{\r\nf*=1;\r\n}\r\ncout f;', 753, 72, 1, '2019-05-13 09:22:12', '2019-05-16 09:42:01'),
(501711, 564, '1715', 800, 72, 0, '2019-05-13 09:22:23', '2019-05-13 09:22:25'),
(501713, 563, '1708', 800, 72, 0, '2019-05-13 09:22:24', '2019-05-13 09:22:25'),
(501715, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x,int y)\r\nint res = 1;\r\nfor ( int i=1; i<y ; i++)\r\n{\r\nres = x * i ; \r\n}\r\nreturn res ;                                                                                                               \r\n  void main()\r\n{\r\ncout<< ENT\r\n}', 800, 72, 2, '2019-05-13 09:22:24', '2019-05-15 15:43:47'),
(501717, 572, '1728', 800, 72, 2, '2019-05-13 09:22:24', '2019-05-13 09:22:25'),
(501719, 475, '1383', 800, 72, 2, '2019-05-13 09:22:24', '2019-05-13 09:22:25'),
(501721, 561, '1701', 800, 72, 0, '2019-05-13 09:22:24', '2019-05-13 09:22:25'),
(501722, 467, '1355', 800, 72, 2, '2019-05-13 09:22:24', '2019-05-13 09:22:25'),
(501723, 569, 'F', 800, 72, 0, '2019-05-13 09:22:24', '2019-05-15 15:43:47'),
(501724, 574, NULL, 800, 72, 0, '2019-05-13 09:22:24', '2019-05-15 15:43:47'),
(501917, 564, '1715', 754, 72, 0, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501918, 563, '1708', 754, 72, 0, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501919, 571, 'int pow(int x,int y)\r\n{\r\n\r\nif(y>0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n{\r\nreturn x*pow(x,y-1)\r\n}\r\n\r\n}\r\nvoid main()\r\n{\r\nint w,z;\r\ncin>>w>>z;\r\ncout<<pow(w,z);\r\nsystem(\"pause\");\r\n}', 754, 72, 1, '2019-05-13 09:22:40', '2019-05-16 09:32:54'),
(501920, 572, '1728', 754, 72, 2, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501921, 573, '1734', 754, 72, 2, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501922, 475, '1385', 754, 72, 0, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501923, 561, '1701', 754, 72, 0, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501925, 467, '1355', 754, 72, 2, '2019-05-13 09:22:40', '2019-05-13 09:22:41'),
(501927, 569, 'int n;\r\ncout<<\"enter a non negative integer\";\r\ncin>>n;\r\n  do{\r\nif(x>=0)\r\n{break;\r\n}\r\n}while;\r\nwhile(n<0)\r\n{\r\ncout<<\"enteranon negative integer\";\r\ncout<<\"enter number\";\r\ncin>>n;\r\n}', 754, 72, 0, '2019-05-13 09:22:40', '2019-05-16 09:32:54'),
(501929, 574, '#include  <iostream>\r\nusing namespace std;\r\nvoid factorial(int x)\r\n{\r\nint fact=1;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nfact=fact*i;\r\n}\r\ncout<<fact;\r\n}\r\nvoid main()\r\n{\r\nint y;\r\ncin>>y;\r\nfactorial (y);\r\nsystem(\"pause\");\r\n}', 754, 72, 2, '2019-05-13 09:22:40', '2019-05-16 09:32:54'),
(502013, 564, '1713', 862, 72, 2, '2019-05-13 09:22:53', '2019-05-13 09:22:54'),
(502014, 563, '1708', 862, 72, 0, '2019-05-13 09:22:53', '2019-05-13 09:22:54'),
(502015, 571, '#include <iostream>                                                                                             \r\nusing namespace std;     \r\nint pow(int x,int y)\r\n{\r\nif (y>0&&x>0)\r\nreturn x*pow    (x,y-1);\r\nelse\r\nreturn1;\r\n}\r\nint main()\r\n{\r\nint n,t;\r\ncin>>n>>t;\r\ncout<<pow(n,t);\r\n}', 862, 72, 2, '2019-05-13 09:22:54', '2019-05-16 09:45:44'),
(502016, 572, '1729', 862, 72, 0, '2019-05-13 09:22:54', '2019-05-13 09:22:54'),
(502017, 573, '1734', 862, 72, 2, '2019-05-13 09:22:54', '2019-05-13 09:27:58'),
(502018, 475, '1383', 862, 72, 2, '2019-05-13 09:22:54', '2019-05-13 09:27:58'),
(502019, 561, '1701', 862, 72, 0, '2019-05-13 09:22:54', '2019-05-13 09:27:58'),
(502020, 467, '1355', 862, 72, 2, '2019-05-13 09:22:54', '2019-05-13 09:27:58'),
(502021, 569, '#include <iostream>                                                                                             \r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"nter non-negative\";\r\ncin>>n\r\ndo\r\n{\r\ncout<<\"the intiger \"<<endl;\r\ncout<<\"entr\";\r\ncin>>n;\r\n}\r\nwhile (n<0)\r\n}', 862, 72, 1, '2019-05-13 09:22:54', '2019-05-16 09:45:44'),
(502022, 574, '#include <iostream>\r\nusing namespace std;\r\n                                                                                                                in f(int x)\r\n{\r\nint fact;\r\nfor (int i=0;i<=x;i++)\r\n{\r\nfact*=i;\r\n}\r\nreturn fact;\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<f(n);\r\nsystem (\"pause\");\r\n}', 862, 72, 1, '2019-05-13 09:22:54', '2019-05-16 09:45:44'),
(502091, 564, '1712', 812, 72, 0, '2019-05-13 09:23:07', '2019-05-13 11:56:11'),
(502092, 563, '1710', 812, 72, 0, '2019-05-13 09:23:07', '2019-05-13 11:56:11'),
(502094, 571, 'int p(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse \r\nreturn x*p(x,y-1)\r\n}  \r\nint main()\r\n{\r\nint i,j;\r\ncin>>i>>j;\r\ncout<<p(i,j);\r\n\r\n}', 812, 72, 2, '2019-05-13 09:23:07', '2019-05-15 15:42:48'),
(502096, 572, '1729', 812, 72, 0, '2019-05-13 09:23:07', '2019-05-13 11:56:11'),
(502098, 569, 'int n;\r\ncout<<\"  enter a non-negative integer:\"<<endl;\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"the integer you enterd is negative.\"<<endl;\r\ncout<<\"enter non-negative integer:\"\r\ncin>>n;\r\n}\r\nwhile(n<0)\r\n{cout<<\"the integer you enterd is negative.\"<<endl;\r\ncout<<\"enter non-negative integer:\"\r\ncin>>n;\r\n}', 812, 72, 0, '2019-05-13 09:23:07', '2019-05-15 15:42:48'),
(502100, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nint f=1\r\nfor(int i=1;i<x;i++)\r\nf*=i;\r\nreturn f;\r\n}\r\nvoid main ()\r\n{\r\nint y;\r\ncin>>y;\r\ncout<<fact(y)<<endl;\r\n}', 812, 72, 2, '2019-05-13 09:23:07', '2019-05-15 15:42:48'),
(502170, 564, '1714', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502171, 563, '1710', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502172, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x,int c)\r\n{\r\nif (c==0)\r\nreturn 1;\r\nif(c==1)\r\nreturn 1;\r\nreturn x*pow (x,c-1);\r\n}\r\nint main ()\r\n{\r\nint a,s;\r\nif(x>0&&c>0){\r\ncout << \"power = \"<< pow(a,s) << endl ;\r\n}\r\nreturn 0;\r\n}', 814, 72, 2, '2019-05-13 09:23:22', '2019-05-15 15:37:31'),
(502173, 572, '1729', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502174, 573, '1734', 814, 72, 2, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502175, 475, '1385', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502176, 561, '1702', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502177, 467, '1356', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-13 11:56:11'),
(502178, 569, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint n;\r\ndo \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\nwhile (n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}', 814, 72, 0, '2019-05-13 09:23:22', '2019-05-15 15:37:31'),
(502179, 574, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nint n;\r\ncin << n;\r\nint f=1;\r\nfor (int i =1;i<=n;i++)\r\nf=f*(n-1)\r\ncout << \"the factorial = \"<< f<< endl;\r\nreturn 0;\r\n\r\n\r\n\r\n}', 814, 72, 1, '2019-05-13 09:23:22', '2019-05-15 15:37:31'),
(502367, 564, '1712', 747, 72, 0, '2019-05-13 09:23:53', '2019-05-13 09:23:53'),
(502368, 563, '1710', 747, 72, 0, '2019-05-13 09:23:53', '2019-05-13 09:23:53'),
(502369, 571, 'int power(int x, int y )\r\n{\r\nif(y==1)\r\n{\r\nretutn x;\r\n}\r\nelse\r\n{\r\nreturn x*power(y-1);\r\n}     \r\n}', 747, 72, 1, '2019-05-13 09:23:53', '2019-05-16 09:46:27'),
(502370, 572, '1728', 747, 72, 2, '2019-05-13 09:23:53', '2019-05-13 09:23:53'),
(502371, 573, '1734', 747, 72, 2, '2019-05-13 09:23:53', '2019-05-13 09:23:53'),
(502372, 569, 'int n;\r\ncout <<\"enter a non_negative integer:\";\r\ncin>>n;\r\ndo;\r\n{\r\ncout<<\"the integer you entered is negative.\"<<end;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<0)', 747, 72, 1, '2019-05-13 09:23:53', '2019-05-16 09:46:27'),
(502373, 574, 'int fact=1;\r\nvoid fact(int x)\r\n{\r\nfor(int i=1; i<=x;i++)\r\n{\r\nfact*=i;\r\n}\r\ncout<<fact;\r\n}', 747, 72, 2, '2019-05-13 09:23:53', '2019-05-16 09:46:27'),
(502527, 564, '1714', 816, 72, 0, '2019-05-13 09:24:18', '2019-05-13 09:24:18'),
(502528, 563, '1708', 816, 72, 0, '2019-05-13 09:24:18', '2019-05-13 09:24:18'),
(502530, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nif (y==0)return 1;\r\nreturn x*power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y);\r\nsystem(\"pause\");\r\n}', 816, 72, 2, '2019-05-13 09:24:18', '2019-05-16 09:37:20'),
(502532, 572, '1728', 816, 72, 2, '2019-05-13 09:24:18', '2019-05-13 09:24:19'),
(502534, 573, '1734', 816, 72, 2, '2019-05-13 09:24:18', '2019-05-13 09:24:19'),
(502536, 475, '1384', 816, 72, 0, '2019-05-13 09:24:18', '2019-05-13 09:24:19'),
(502538, 561, '1701', 816, 72, 0, '2019-05-13 09:24:18', '2019-05-13 09:24:19'),
(502540, 467, '1354', 816, 72, 0, '2019-05-13 09:24:18', '2019-05-13 09:24:19'),
(502542, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nunsigned int n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin >> n;\r\ndo\r\n{\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<-1)\r\nsystem(\"pause\");', 816, 72, 1, '2019-05-13 09:24:18', '2019-05-16 09:37:20'),
(502544, 574, '#include <iostream>\r\nusing namepsace std;\r\nint fac(int x)\r\n{\r\nint p=1;\r\nfor(int i = x; i>0 ; i--)\r\n{\r\np*=i;\r\n}\r\nreturn p;\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fac(x);\r\nsystem(\"pause\");\r\n}', 816, 72, 2, '2019-05-13 09:24:18', '2019-05-16 09:37:20'),
(502596, 564, '1712', 755, 72, 0, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502597, 563, '1710', 755, 72, 0, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502598, 571, 'int  power   (int x,int y)    \r\n{\r\nif(y !=0)\r\nreturn x*power(x,y-1);\r\nelse\r\nreturn 1;\r\n\r\n\r\n}', 755, 72, 2, '2019-05-13 09:24:23', '2019-05-16 09:49:21'),
(502599, 572, '1728', 755, 72, 2, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502600, 573, '1733', 755, 72, 0, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502601, 475, '1383', 755, 72, 2, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502602, 561, '1701', 755, 72, 0, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502603, 467, '1355', 755, 72, 2, '2019-05-13 09:24:23', '2019-05-13 09:24:24'),
(502604, 569, 'do \r\nc', 755, 72, 0, '2019-05-13 09:24:23', '2019-05-16 09:49:21'),
(502605, 574, 'int factorial (int n)\r\n{\r\nint i;\r\nfor(i=1;i<=n;i++)\r\n{\r\nfact*=i;\r\n}\r\ncout<<\"factorial of\"<<i<<\"=\"<<fact<<endl;\r\n}', 755, 72, 1, '2019-05-13 09:24:24', '2019-05-16 09:49:21'),
(502789, 564, '1713', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-13 09:24:35'),
(502791, 563, '1708', 766, 72, 0, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502793, 571, 'int pow (int x,int y)\r\n{\r\nint p=1;\r\nif(y==1)\r\nreturn 1;\r\nelse\r\nreturn x*pow(x,y-1);', 766, 72, 1, '2019-05-13 09:24:35', '2019-05-16 09:29:38'),
(502795, 572, '1728', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502797, 573, '1734', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502799, 475, '1385', 766, 72, 0, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502801, 561, '1700', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502803, 467, '1355', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-13 09:24:36'),
(502805, 569, 'int n ;\r\ncout << enter non negatuibv', 766, 72, 0, '2019-05-13 09:24:35', '2019-05-16 09:29:38'),
(502806, 574, 'int fact (int n)\r\n{\r\nint res =1;\r\nfor(int i=1;i<n;i++)\r\n{\r\nres*=n\r\nreturn res ;', 766, 72, 2, '2019-05-13 09:24:35', '2019-05-16 09:29:38'),
(503004, 564, '1713', 764, 72, 2, '2019-05-13 09:24:51', '2019-05-13 09:24:51'),
(503005, 563, '1708', 764, 72, 0, '2019-05-13 09:24:51', '2019-05-13 09:24:51'),
(503006, 571, 'int pow(int x , int y)\r\n{\r\n      if(y==1)\r\nreturn 1;    \r\nelse\r\nreturn x *pow(x , y-1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 764, 72, 1, '2019-05-13 09:24:51', '2019-05-16 09:30:58'),
(503007, 572, '1728', 764, 72, 2, '2019-05-13 09:24:51', '2019-05-13 09:24:52'),
(503008, 573, '1734', 764, 72, 2, '2019-05-13 09:24:51', '2019-05-13 09:24:52'),
(503009, 475, '1384', 764, 72, 0, '2019-05-13 09:24:51', '2019-05-13 09:24:52'),
(503010, 561, '1701', 764, 72, 0, '2019-05-13 09:24:51', '2019-05-13 09:24:52'),
(503011, 467, '1355', 764, 72, 2, '2019-05-13 09:24:51', '2019-05-13 09:24:52'),
(503012, 569, 'int n;', 764, 72, 0, '2019-05-13 09:24:51', '2019-05-16 09:30:58'),
(503013, 574, 'int fact (int n)\r\n{\r\n     int res =1 ;\r\nfor (int i =0 ; i< n ; i++)\r\n    {\r\nres *= n ;\r\nreturn res ;\r\n       }\r\n}', 764, 72, 1, '2019-05-13 09:24:51', '2019-05-16 09:30:58'),
(503690, 564, '1712', 873, 72, 0, '2019-05-13 09:25:54', '2019-05-13 09:25:55'),
(503692, 563, '1711', 873, 72, 2, '2019-05-13 09:25:54', '2019-05-13 09:25:55'),
(503694, 571, 'int power(int x,int y,int p=0)\r\n{ if (y==1){return p;}\r\nelse{return x*power(x,y-1 );}   \r\n} \r\nint main(){\r\nint x,y;\r\nint a=power (x,y);\r\ncout<<x;\r\n}', 873, 72, 1, '2019-05-13 09:25:54', '2019-05-16 09:54:42'),
(503696, 572, '1728', 873, 72, 2, '2019-05-13 09:25:54', '2019-05-13 09:25:55'),
(503699, 573, '1734', 873, 72, 2, '2019-05-13 09:25:55', '2019-05-13 09:25:55'),
(503701, 475, '1383', 873, 72, 2, '2019-05-13 09:25:55', '2019-05-13 09:25:55'),
(503702, 561, '1700', 873, 72, 2, '2019-05-13 09:25:55', '2019-05-13 09:25:55'),
(503704, 467, '1355', 873, 72, 2, '2019-05-13 09:25:55', '2019-05-13 09:25:55'),
(503706, 569, 'int main()\r\n  {  int n;\r\ndo{  cout<<\"enter a non negative integer\";\r\ncin>>n;\r\n}while(n<0);           \r\n}', 873, 72, 1, '2019-05-13 09:25:55', '2019-05-16 09:54:42'),
(503708, 574, 'int fact(int n)\r\n{  int fact =1;\r\nfor(int i=1;i<n;i++)\r\n{\r\n fact=fact*i;\r\n\r\n}         return fact;\r\n}\r\nint main(){\r\nint x;\r\ncin >>x;\r\nint y=fact(x);\r\ncout<<y;\r\n}', 873, 72, 2, '2019-05-13 09:25:55', '2019-05-16 09:54:42'),
(503963, 564, '1713', 750, 72, 2, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503964, 563, '1711', 750, 72, 2, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503965, 571, '#include <iostream>\r\nusing namespace;\r\nint pow (intx,inty)\r\n{\r\nif( y==0\r\n{\r\nreturn 1;\r\n}\r\nelse\r\nx pow(x,y-1)\r\n}\r\nint main ()\r\n{\r\nintx,y;\r\ncin>>x>>;\r\ncout<<end;\r\nsystem (pause);', 750, 72, 2, '2019-05-13 09:26:25', '2019-05-16 12:31:17'),
(503966, 572, '1730', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503967, 573, '1733', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503968, 475, '1384', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503969, 561, '1701', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503970, 467, '1355', 750, 72, 2, '2019-05-13 09:26:25', '2019-05-13 09:26:26'),
(503971, 569, 'gh..', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-16 12:31:17'),
(503972, 574, '..', 750, 72, 0, '2019-05-13 09:26:25', '2019-05-16 12:31:17'),
(504053, 564, '1713', 869, 72, 2, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504054, 563, '1708', 869, 72, 0, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504055, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y,,int i=1)\r\n{\r\nif (i==y){\r\nreturn 0;\r\n}\r\nelse \r\n{\r\nx*=x;\r\ni++;\r\nreturn power (x,y,i);\r\n}\r\n}\r\nint main ()\r\n{\r\nint ,x,y,re=0;\r\ncin>>x>>y;\r\nre= power(x,y);\r\ncout<<re<<endl ;\r\n\r\n}', 869, 72, NULL, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504056, 572, '1728', 869, 72, 2, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504057, 573, '1734', 869, 72, 2, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504058, 475, '1384', 869, 72, 0, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504059, 561, '1700', 869, 72, 2, '2019-05-13 09:26:38', '2019-05-13 09:26:38'),
(504060, 467, '1355', 869, 72, 2, '2019-05-13 09:26:38', '2019-05-13 09:26:38');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(504061, 569, '#include <iostream>\r\nusing namespace std;\r\nint main (){\r\nint n;\r\n\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\n\r\n\r\n}', 869, 72, 0, '2019-05-13 09:26:38', '2019-05-16 12:34:28'),
(504062, 574, '#include <iostream>\r\nusing namespace std;\r\nint fac (int x)\r\n{\r\nif (x==0)\r\nreturn 0;\r\nelse \r\nreturn x*fac(x-1);\r\n\r\n}\r\nint main (){     \r\n\r\nint y,ans=0;\r\ncin>>y;\r\nans= fac (y);\r\ncout<<ans;', 869, 72, 1, '2019-05-13 09:26:38', '2019-05-16 12:34:28'),
(504179, 564, '1715', 865, 72, 0, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504180, 563, '1708', 865, 72, 0, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504181, 571, 'int power(int x,int y){\r\nif(y!=o)\r\nreturn x*power(x,y-1)\r\nelse \r\nreturn 1;\r\n}', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-16 09:51:03'),
(504182, 572, '1728', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504184, 573, '1734', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504186, 475, '1384', 865, 72, 0, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504188, 561, '1700', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504190, 467, '1355', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-13 09:26:56'),
(504192, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile (n < 0)\r\n}', 865, 72, 0, '2019-05-13 09:26:56', '2019-05-16 09:51:03'),
(504194, 574, 'int fact(int num){\r\nint x;\r\nx=num;\r\nfor(int i=1;i<=num;i++){\r\nx=x-1;\r\nnum=num*x;\r\n}\r\nreturn num;\r\n}', 865, 72, 2, '2019-05-13 09:26:56', '2019-05-16 09:51:03'),
(504458, 564, '1712', 825, 72, 0, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504459, 563, '1711', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504460, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nif(x==0)\r\n{\r\nreturne 1;\r\n}\r\n else\r\n{\r\nreturne x*pow(x,y-1);\r\n}\r\n}\r\nint main()\r\nint x;\r\ncin>>x;\r\nint y;\r\ncin>>y;\r\nint s=pow(x,y);\r\nif(x>0&&y>0)\r\n{\r\ncout<<s;\r\n}\r\ncout<<endl;\r\nreturne 0;\r\n}', 825, 72, 1, '2019-05-13 09:27:10', '2019-05-16 12:36:09'),
(504461, 572, '1728', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504462, 573, '1734', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504463, 475, '1383', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504464, 561, '1700', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504465, 467, '1355', 825, 72, 2, '2019-05-13 09:27:10', '2019-05-13 09:27:11'),
(504466, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter a non_negative integer: \";\r\ncin>>n;\r\ndo{\r\ncout<<\"the integer you entered is negative. \"<<endl;\r\ncout<<\"enter a non_negative interger: \";\r\ncout>>n;\r\n}while(n<0)\r\nreturne 0;    \r\n}', 825, 72, 1, '2019-05-13 09:27:10', '2019-05-16 12:36:09'),
(504467, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int bs int ex)\r\n{\r\nint num=1; \r\nfor(int i=1;i<=ex;i++)\r\n{\r\nnum=num*i;\r\n}\r\nreturne num;\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\nint s=fact( x,y);\r\ncout<<s;\r\nreturne 0;\r\n}', 825, 72, 1, '2019-05-13 09:27:10', '2019-05-16 12:36:09'),
(504659, 564, '1715', 853, 72, 0, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504660, 563, '1708', 853, 72, 0, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504661, 571, 'int power(int x,int y){\r\nif(y!=0)\r\nreturn x*power(x,y-1)\r\nelse\r\nreturn 1;\r\n}', 853, 72, 2, '2019-05-13 09:27:26', '2019-05-16 09:51:51'),
(504662, 572, '1728', 853, 72, 2, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504663, 573, '1735', 853, 72, 0, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504664, 475, '1385', 853, 72, 0, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504665, 561, '1701', 853, 72, 0, '2019-05-13 09:27:26', '2019-05-13 11:56:11'),
(504666, 467, '1354', 853, 72, 0, '2019-05-13 09:27:27', '2019-05-13 11:56:11'),
(504667, 569, 'int n;\r\ncout<<\"enter a non-negative integer is negative:\";\r\ncin>>n;\r\nwhile{\r\ncout<<\"the integer you entered is negative \"<<end;\r\ncout<<\"enter a non-negative integer\"\r\ncin>>n;\r\n\r\n}\r\ndo(n<0)', 853, 72, 0, '2019-05-13 09:27:27', '2019-05-16 09:51:51'),
(504668, 574, 'int fact(int num)   {\r\nint x=num;\r\nfor(int i=1;i<=num;i++){\r\nx=x-1;\r\nnum=num*x;\r\n}\r\nreturn num;\r\n}', 853, 72, 2, '2019-05-13 09:27:27', '2019-05-16 09:51:51'),
(504689, 564, '1713', 854, 72, 2, '2019-05-13 09:27:28', '2019-05-13 09:27:29'),
(504690, 563, '1710', 854, 72, 0, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504691, 571, 'int power(int x,int y)\r\nif(x>0){\r\nx=x*y;\r\n}else{\r\nreturn x;', 854, 72, 0, '2019-05-13 09:27:29', '2019-05-16 12:38:03'),
(504692, 572, '1730', 854, 72, 0, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504693, 573, '1733', 854, 72, 0, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504694, 475, '1383', 854, 72, 2, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504695, 561, '1700', 854, 72, 2, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504696, 467, '1355', 854, 72, 2, '2019-05-13 09:27:29', '2019-05-13 09:27:29'),
(504697, 569, 'int n;                                                                                                            \r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<Enter a non-negative integer:\";\r\n}while(n<0)', 854, 72, 1, '2019-05-13 09:27:29', '2019-05-16 12:38:03'),
(504698, 574, 'int factorial(int n)\r\nif(n>1){\r\nreturn f=f*n(n-1);\r\n}else{\r\nreturn 1;', 854, 72, 1, '2019-05-13 09:27:29', '2019-05-16 12:38:03'),
(504773, 564, '1713', 860, 72, 2, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504774, 563, '1708', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504775, 571, '#include <iostream>\r\n                 #include <cmath>\r\n                  using namespace std;\r\n                    int pow(int x,inty)\r\n{\r\n            if(x>0)||(y>0)\r\n           cout<<\"enter only positive number\\n\";\r\n           else\r\n            return xpow(x.y-1)\r\n        }\r\n         int main()\r\n{\r\nint x,y;\r\ncout<<\"enter tow numbers\\n\";\r\ncin>>x;\r\ncin>>y;\r\ncout<<pow(x,y)<<endl;\r\n}', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-16 12:39:44'),
(504776, 573, '1735', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504777, 475, '1382', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504778, 561, '1701', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504779, 467, '1354', 860, 72, 0, '2019-05-13 09:27:40', '2019-05-13 09:27:41'),
(504780, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int n  ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;        \r\ndo\r\n{     \r\n\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;           \r\n}\r\n  while (n < 0) \r\n}', 860, 72, 1, '2019-05-13 09:27:40', '2019-05-16 12:39:44'),
(504781, 574, '#include <iostream> \r\n                          using namespace std;  \r\n                         int main()\r\n{\r\n       int x, fact=0;\r\n        for (int i=1 ; i<=x ;i++)\r\n       cout<<\"enter the number\\n\";\r\n       cin>>x;\r\nfor (int i=1 ; i<=x ;i++)\r\n{\r\nfact+=fact*(x-1)\r\ncout <<fact<<endl;\r\n}', 860, 72, 0, '2019-05-13 09:27:41', '2019-05-16 12:39:44'),
(504849, 564, '1712', 922, 72, 0, '2019-05-13 09:27:49', '2019-05-13 09:27:50'),
(504850, 563, '1711', 922, 72, 2, '2019-05-13 09:27:49', '2019-05-13 09:27:50'),
(504851, 571, '.', 922, 72, 0, '2019-05-13 09:27:49', '2019-05-16 12:41:29'),
(504853, 572, '1728', 922, 72, 2, '2019-05-13 09:27:49', '2019-05-13 09:27:50'),
(504855, 573, '1735', 922, 72, 0, '2019-05-13 09:27:49', '2019-05-13 09:27:50'),
(504857, 475, '1385', 922, 72, 0, '2019-05-13 09:27:49', '2019-05-13 09:27:50'),
(504859, 561, '1700', 922, 72, 2, '2019-05-13 09:27:50', '2019-05-13 09:27:50'),
(504861, 467, '1355', 922, 72, 2, '2019-05-13 09:27:50', '2019-05-13 09:27:50'),
(504863, 569, 'int n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n<0)', 922, 72, 1, '2019-05-13 09:27:50', '2019-05-16 12:41:29'),
(504864, 574, '#include <iostream>\r\n using namespace  std;\r\nint fact (int n)\r\n{\r\n    int f=1;\r\n   for (int i=1 ; i<=n ; i++)\r\n{\r\n    f=f*i;\r\n}\r\nreturn f ;\r\n}', 922, 72, 2, '2019-05-13 09:27:50', '2019-05-16 12:41:29'),
(505024, 564, '1713', 749, 72, 2, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505025, 563, '1708', 749, 72, 0, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505026, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int a, int b)\r\n{\r\nstatic int i=1,j=1;\r\nif(i>b)\r\n{\r\nreturn j;\r\n}\r\nelse\r\n{\r\nj=j*a;\r\ni++;\r\npow(a,b);\r\n}\r\n}\r\nint main()\r\n{\r\nunsigned int a, b;\r\n	cout << \"enter the number \" << endl;\r\n	cin >> a;\r\n	cout<<\"enter the power<<endl;\r\n        cin>>b;\r\n        cout<<pow(a,b);\r\n}', 749, 72, 2, '2019-05-13 09:28:09', '2019-05-16 12:48:51'),
(505027, 573, '1734', 749, 72, 2, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505028, 475, '1383', 749, 72, 2, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505029, 561, '1703', 749, 72, 0, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505030, 467, '1355', 749, 72, 2, '2019-05-13 09:28:09', '2019-05-13 09:28:14'),
(505031, 569, NULL, 749, 72, 0, '2019-05-13 09:28:09', '2019-05-16 12:48:51'),
(505032, 574, '#include<iostream>\r\nusing namespace std;\r\nint ahmed(int a)\r\n{\r\nint i;\r\nfor(int i=1 ;i<n;i++)\r\n{\r\n\r\na=a*i;\r\n}\r\nreturn a;\r\n\r\n}\r\nint main()\r\n{\r\n\r\nint a;\r\ncin>>a;\r\ncout<<ahmed(a);\r\n}', 749, 72, 1, '2019-05-13 09:28:09', '2019-05-16 12:48:51'),
(505674, 564, '1713', 805, 72, 2, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505675, 563, '1709', 805, 72, 0, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505677, 571, '#include <iostream>\r\nusing manes space std;\r\nint power (int x ,int y);\r\nif(y==0);\r\nreturn0;\r\nreturn x *power(x,y-1);\r\nint main()\r\n{\r\nint x ,y;\r\ncin>>x>>y;\r\ncout<<\"power(x,y)>>;\r\ncout<<endl;\r\n}', 805, 72, 1, '2019-05-13 09:30:12', '2019-05-16 13:02:24'),
(505679, 572, '1728', 805, 72, 2, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505681, 573, '1734', 805, 72, 2, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505683, 475, '1385', 805, 72, 0, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505685, 561, '1703', 805, 72, 0, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505687, 467, '1354', 805, 72, 0, '2019-05-13 09:30:12', '2019-05-13 09:30:13'),
(505689, 569, '#include <iostream>\r\nusing namesspace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter anon-negative integer\">>;\r\ncin>>n;\r\ndo\r\n{\r\nif(n>0);\r\ncout<<\"the integer you enterd is non negative\">>\r\nelse\r\ncout<<\"thr integer you entered is negative\">>\r\n}\r\nwhile(n>0);\r\n}', 805, 72, 1, '2019-05-13 09:30:12', '2019-05-16 13:02:24'),
(505691, 574, '#include<iostream>\r\nusing names space std;\r\nint factorial (int x);\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout <<factorial (x);\r\ncout<<endl;\r\n\r\n\r\n\r\n\r\n}\r\nint factorial (int x)\r\n{\r\nfor(int i=1; i>=x; i++)\r\n return factorial= factorial *i;', 805, 72, 0, '2019-05-13 09:30:12', '2019-05-16 13:02:24'),
(505861, 564, '1712', 928, 72, 0, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505862, 563, '1711', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505863, 571, 'int power(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*power(x;y--);\r\n}', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-16 13:14:05'),
(505864, 572, '1728', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505865, 573, '1735', 928, 72, 0, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505866, 475, '1385', 928, 72, 0, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505867, 561, '1700', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505868, 467, '1355', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-13 09:30:46'),
(505869, 569, 'do\r\n{\r\nif(n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\nwhile(n<0);', 928, 72, 1, '2019-05-13 09:30:46', '2019-05-16 13:14:05'),
(505870, 574, 'int fact(int n)\r\n{\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\nf*=i;\r\nreturn f;\r\n{', 928, 72, 2, '2019-05-13 09:30:46', '2019-05-16 13:14:05'),
(505997, 564, '1713', 925, 72, 2, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(505998, 563, '1709', 925, 72, 0, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(505999, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y){\r\nint p=1;\r\np*=x;\r\nreturn p;\r\n}\r\nint main(){\r\nint x,y;\r\ncin>>x>>y;\r\nif(x>=0 && y>=0)\r\ncout<<pow(x,y)<<endl;\r\nsystem(\"pause\");\r\n}', 925, 72, 0, '2019-05-13 09:31:01', '2019-05-16 13:15:57'),
(506000, 572, '1728', 925, 72, 2, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(506001, 573, '1735', 925, 72, 0, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(506002, 475, '1383', 925, 72, 2, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(506003, 561, '1702', 925, 72, 0, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(506004, 467, '1354', 925, 72, 0, '2019-05-13 09:31:01', '2019-05-13 09:31:02'),
(506005, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\ndo{\r\nint n;\r\n       cout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n        cout << \"The integer you entered is negative.\" << endl;\r\n}\r\nwhile(n<0);\r\nsystem(\"pause\");\r\n}', 925, 72, 1, '2019-05-13 09:31:01', '2019-05-16 13:15:57'),
(506007, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid fact(int n){\r\nint f=1;\r\nfor(int i=1;i<=n;i++){\r\nf=f*i;\r\n}\r\nint main(){\r\nint n;\r\ncin>>n;\r\nfact(n);\r\ncout<<f<<endl;\r\nsystem(\"pause\");\r\n}', 925, 72, 1, '2019-05-13 09:31:01', '2019-05-16 13:15:57'),
(506176, 564, '1713', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506179, 563, '1711', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506182, 571, 'int pw(int x,int y,int p=1){\r\nif(y==0)\r\nreturn p;\r\nelse{\r\np*=x;\r\ny--;\r\n}\r\nreturn pw(x,y,p);\r\n}', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-16 13:17:35'),
(506185, 572, '1728', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506189, 573, '1734', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506191, 475, '1383', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506194, 561, '1702', 934, 72, 0, '2019-05-13 09:31:20', '2019-05-13 09:31:20'),
(506197, 467, '1355', 934, 72, 2, '2019-05-13 09:31:20', '2019-05-13 09:31:21'),
(506200, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout<< \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n\r\n}  \r\nwhile(n<0);', 934, 72, 1, '2019-05-13 09:31:20', '2019-05-16 13:17:35'),
(506203, 574, 'int f(int x){\r\nif(x==0)\r\nreturn 0;\r\nif(x==1)\r\nreturn 1;\r\n\r\nreturn f(x-1)+f(x-2);\r\n}', 934, 72, 0, '2019-05-13 09:31:20', '2019-05-16 13:17:35'),
(506213, 564, '1713', 826, 72, 2, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506214, 563, '1708', 826, 72, 0, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506216, 571, '#include <iostream>\r\nusing namespace std ;\r\nint pow(int x , int y)\r\n{', 826, 72, 0, '2019-05-13 09:31:21', '2019-05-16 13:15:01'),
(506218, 572, '1729', 826, 72, 0, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506220, 573, '1734', 826, 72, 2, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506222, 475, '1383', 826, 72, 2, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506224, 561, '1701', 826, 72, 0, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506226, 467, '1355', 826, 72, 2, '2019-05-13 09:31:21', '2019-05-13 09:31:21'),
(506227, 569, NULL, 826, 72, 0, '2019-05-13 09:31:21', '2019-05-16 13:15:01'),
(506228, 574, '#include<iostream>\r\nusing namespace std ;\r\nint fact (int x)\r\n{\r\nint r=1 ;\r\nfor(int i=1 ;i<=x ;i++)\r\n{\r\nr*=i;\r\n}\r\ncout<<r<<endl;\r\n}\r\nint main()\r\n{\r\nint x ;\r\ncin>>x;\r\ncout<<fact(x)<<endl;\r\nreturn 0 ;\r\n}', 826, 72, 1, '2019-05-13 09:31:21', '2019-05-16 13:15:01'),
(506317, 564, '1713', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506318, 563, '1711', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506319, 571, '#include<iostream>\r\nusing namespace std;\r\nint f(int a, int b)\r\n{\r\nif(b==1)\r\n{\r\nreturn 1;\r\n}\r\nreturn a*f(a,--b);\r\n}\r\nint main()\r\n{\r\nint x;\r\nint y;\r\ncout<<\"enter a positive base:\";\r\ncin>>x;\r\ncout<<\"enter a positive ex:\";\r\ncin>>y;\r\ncout<<f(x,y);\r\n\r\nsystem(\"pause\");\r\n\r\n}', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-16 13:24:00'),
(506320, 572, '1728', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506321, 573, '1734', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506322, 475, '1383', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506323, 561, '1700', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506324, 467, '1355', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-13 09:31:31'),
(506325, 569, '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"the integer you entered is negative.\";\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\nwhile(n<0);}\r\nsystem(\"pause\");\r\n}', 880, 72, 0, '2019-05-13 09:31:31', '2019-05-16 13:24:00'),
(506326, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid fac(int y, int f)\r\n{\r\nfor(int i=1;i<=y;i++)\r\n{\r\nf=f*i;\r\n}\r\ncout<<\"factorile  of the number\" <<y<<\"is:\"<<f;\r\n\r\n}\r\nint main()\r\n{\r\nint x;\r\ncout<<\"enter an integer:\";\r\ncin>>x;\r\nint f=1;\r\nfac(x,f);     \r\n\r\nsystem(\"pause\");\r\n\r\n}', 880, 72, 2, '2019-05-13 09:31:31', '2019-05-16 13:24:00'),
(506485, 564, '1712', 839, 72, 0, '2019-05-13 09:31:59', '2019-05-13 09:31:59'),
(506486, 563, '1711', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506487, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\n  if(y!=0)\r\n{\r\nreturn x=x*power(x,y-1);\r\n}\r\nelse\r\n{\r\nreturn x;\r\n}\r\n}\r\nvoid main()\r\n{\r\nint x,y,z;\r\ncin>>x>>y;\r\nz=power(x,y);\r\ncout<<z;\r\n\r\n}', 839, 72, 1, '2019-05-13 09:31:59', '2019-05-16 13:26:56'),
(506488, 572, '1728', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506489, 573, '1734', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506490, 475, '1383', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506491, 561, '1700', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506492, 467, '1355', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-13 09:32:00'),
(506493, 569, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\ncout<<\"Enter a non-negative intger\"<<endl;\r\ncin>>n;\r\n\r\n\r\ndo{\r\nif(n<0)\r\n{\r\ncout<<\"the intger you entered is negative<<endl;\r\ncout<<\"enter a non-negative intger\"<<endl;\r\ncin>>n;\r\n}\r\n}while(n<0);\r\n\r\n}', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-16 13:26:56'),
(506494, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid f(int x)\r\n{\r\nfor(int i=x;i>0;i--)\r\n{\r\nx=x*i;\r\n}\r\ncout<<x;\r\n}\r\nvoid main()\r\n{\r\nint n;\r\ncin>>n;\r\nf(n);\r\n\r\n}', 839, 72, 2, '2019-05-13 09:31:59', '2019-05-16 13:26:56'),
(506606, 564, '1713', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506607, 563, '1711', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506608, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y,int I,int sum)\r\n{\r\nif (I>y)\r\nreturn sum ;\r\nelse if \r\n{\r\nsum*=x;\r\nI++;\r\nreturn power(x,y,I,sum) ;\r\n}\r\n}\r\n\r\nvoid main()\r\n{\r\nint x,y;\r\ncout<<\"enter the number then its power\";\r\ncin>>x>>y;\r\nint z=power(x,y,1,0);\r\ncout<<z;\r\nsystem(\"pause\");\r\n}', 888, 72, 1, '2019-05-13 09:32:24', '2019-05-16 13:28:59'),
(506609, 572, '1728', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506610, 573, '1734', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506611, 475, '1383', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506612, 561, '1700', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506613, 467, '1355', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-13 09:32:24'),
(506614, 569, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n;\r\ndo{\r\n            cout <<\"enter non-negative integer\";     \r\n                                               cin>>n;\r\nif (n>0)\r\n{\r\nbreak;\r\n}\r\nelse \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\n}while (n<o);\r\nsystem(\"pause\")\r\n}', 888, 72, 2, '2019-05-13 09:32:24', '2019-05-16 13:28:59'),
(506615, 574, '#include <iostream>\r\nusing namespace std;\r\nint factorial(int n)\r\n{\r\nint fact=o;\r\nfor (int I=1;i<=n;i++)\r\n{\r\nfact*=I;\r\n}\r\nreturn fact;\r\nvoid main()\r\n{\r\nint n;\r\ncout<<\"enter a number \";\r\ncin>>n;\r\nint y=factorial(n);\r\n\r\ncout<<y;\r\n\r\nsystem (\"pause\")\r\n}', 888, 72, 1, '2019-05-13 09:32:24', '2019-05-16 13:28:59'),
(507040, 564, '1712', 871, 72, 0, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507041, 563, '1708', 871, 72, 0, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507042, 571, '#include<iostream>\r\nusing namespace std;\r\nint rev(int x,int y){\r\nif(y==0){\r\nreturn 1;\r\n}\r\n\r\nelse \r\n{\r\nreturn x*rev(x,y-1);\r\n}\r\n}\r\nint main(){\r\nint x,y,p;\r\ncin>>x>>y;\r\np=rev(x,y);\r\ncout<<\"the power x of y is \"<<p<<endl;\r\n\r\nsystem(\"pause\");\r\n}', 871, 72, 2, '2019-05-13 09:33:39', '2019-05-16 13:32:13'),
(507043, 572, '1728', 871, 72, 2, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507044, 573, '1735', 871, 72, 0, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507045, 475, '1384', 871, 72, 0, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507046, 561, '1700', 871, 72, 2, '2019-05-13 09:33:39', '2019-05-13 09:33:39'),
(507047, 467, '1355', 871, 72, 2, '2019-05-13 09:33:39', '2019-05-13 09:33:40'),
(507048, 569, '#include<iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\ncout<<\"Enter a non- negative integer : \";\r\ncin>>n;\r\ndo{\r\n cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0)  \r\nsystem(\"pause\");\r\n\r\n}', 871, 72, 1, '2019-05-13 09:33:39', '2019-05-16 13:32:13'),
(507049, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int n){\r\nint f=1;\r\nfor(int i=1;i<=n ; i++){\r\nf*=n;\r\n}\r\ncout<<\"the factorial of number \"<<n<<\"=\" <<f;\r\n}\r\nint main(){\r\n   int n;\r\ncin>>n;\r\nfact(n);\r\nsystem(\"pause\");\r\n}', 871, 72, 0, '2019-05-13 09:33:39', '2019-05-16 13:32:13'),
(507087, 564, '1713', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-13 09:33:42'),
(507088, 563, '1708', 757, 72, 0, '2019-05-13 09:33:42', '2019-05-13 09:33:42'),
(507089, 571, 'int pow(int x,int y)\r\n{\r\ncin>>x>>y;\r\nif(y<0)\r\n{\r\nreturn 0;\r\n}\r\nelse \r\n{\r\nint p=p*x;\r\nreturn p;\r\n}\r\n}\r\nint main()\r\n{\r\nint z=pow(x,y);\r\ncout<<z;\r\nreturn 0;\r\n}', 757, 72, 0, '2019-05-13 09:33:42', '2019-05-16 13:35:11'),
(507090, 572, '1728', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-13 09:33:42'),
(507091, 573, '1734', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-13 09:33:42'),
(507092, 475, '1385', 757, 72, 0, '2019-05-13 09:33:42', '2019-05-13 09:33:42'),
(507093, 561, '1700', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-13 09:33:43'),
(507094, 467, '1355', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-13 09:33:43'),
(507095, 569, 'int n;\r\ncout<<\"enter a non_negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non_negative integer:\";\r\ncin>>n;\r\nwhile(n>0);', 757, 72, 1, '2019-05-13 09:33:42', '2019-05-16 13:35:11'),
(507096, 574, 'int factorial(int x)\r\n{\r\nint fact=1;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nfact=fact*i;\r\n}\r\nreturn fact;\r\n}\r\nint main()\r\n{\r\nint y=factorial(x);\r\ncout<<x;  \r\nreturn 0;\r\n}', 757, 72, 2, '2019-05-13 09:33:42', '2019-05-16 13:35:11'),
(507116, 564, '1713', 886, 72, 2, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507118, 563, '1708', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507119, 571, '#include<iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nvoid int m(int x ,int y)\r\n{\r\nif (y>0)\r\n{cout << x*(x,y-1)}\r\nelse\r\nreturn 1;\r\n}\r\nint main ()\r\n{\r\nint z =m(x ,y);\r\ncout << z <<endl;\r\nreturn 0;\r\n}', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-16 13:37:15'),
(507120, 572, '1730', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507121, 573, '1732', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507122, 475, '1384', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507123, 561, '1702', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507124, 467, '1355', 886, 72, 2, '2019-05-13 09:33:43', '2019-05-13 09:33:44'),
(507125, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\n}while(n<0);', 886, 72, 1, '2019-05-13 09:33:43', '2019-05-16 13:37:15'),
(507126, 574, '#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\nvoid int fact()\r\n{\r\nint t1=0 ,t2=1 , n =100 ,m=1;\r\n\r\nwhile (m>0)\r\n{\r\nt1 =t2;\r\nm =t2;\r\nt2 =t1;\r\nm = t1 +t2;\r\n}\r\n}\r\n void main()\r\n{\r\nint z =fact (m);\r\n\r\ncout << z <<endl;\r\n\r\n}', 886, 72, 0, '2019-05-13 09:33:43', '2019-05-16 13:37:15'),
(507163, 564, '1712', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507164, 563, '1711', 878, 72, 2, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507165, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x, int y, int p, int I)\r\n{\r\nif(I>y)\r\n{\r\nreturn p;\r\n}\r\nelse\r\n{\r\nreturn p=p*x;\r\n}\r\nI++;\r\nreturn power(x,y,p,i)\r\n}\r\nvoid main()\r\n{\r\nint x , y, p=1 , I=1;\r\ncin>>x>>y;\r\nint z= power(x,y,p,i);\r\ncout<<z;\r\nsystem(\"pause\");\r\n}', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-16 13:39:18'),
(507167, 572, '1728', 878, 72, 2, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507169, 573, '1735', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507171, 475, '1383', 878, 72, 2, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507173, 561, '1701', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507175, 467, '1357', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-13 09:33:46'),
(507177, 569, 'int n;\r\ncout<<\"enter a non-negative number\":\r\ncin>>n;\r\ndo{\r\ncout<<\"enter a non-negative integer\";\r\ncin>>n;\r\nwhile(n>0); \r\nif(n<0)\r\n{\r\ncout<<the integer you enterd is negative\"<<endl;\r\n}', 878, 72, 0, '2019-05-13 09:33:46', '2019-05-16 13:39:18'),
(507179, 574, 'void fact(int x, int y, int f)\r\n{\r\nint x, y;\r\nint f=1;\r\nfor(int I=1; I<x; I++)\r\n{\r\nf=f*I;\r\n}\r\ncout<<f;\r\n}', 878, 72, 2, '2019-05-13 09:33:46', '2019-05-16 13:39:18'),
(507273, 564, '1713', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507274, 563, '1710', 847, 72, 0, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507275, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow (int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\ncout<<endl;\r\n\r\n}', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-16 13:40:22'),
(507276, 572, '1728', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507277, 573, '1734', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507278, 475, '1383', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507279, 561, '1700', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507280, 467, '1355', 847, 72, 2, '2019-05-13 09:33:52', '2019-05-13 09:33:52'),
(507281, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<\"Enter a non-negative integer: \";\r\ndo{\r\ncout<<\"The integer you entered is negative\"<<endl;\r\ncout<<\"Enter a non-negative integer: \";', 847, 72, 0, '2019-05-13 09:33:52', '2019-05-16 13:40:22'),
(507282, 574, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nlong long x;\r\nint f;\r\ncin>>x;\r\nfor(int i=x;i>=1;i--)\r\n{\r\nf*=i;\r\n}\r\ncout<<f;\r\ncout<<endl;\r\n}', 847, 72, 1, '2019-05-13 09:33:52', '2019-05-16 13:40:22'),
(507363, 564, '1712', 1032, 72, 0, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507364, 563, '1708', 1032, 72, 0, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507365, 571, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\nvoid power(int x,int y);\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\n cout<< power(x,y);\r\n\r\n}\r\nvoid power(int x,int y)\r\n{\r\n	if(y==0)\r\n		return 1;\r\n	else\r\n		return x*power(x,y-1);\r\n}', 1032, 72, 1, '2019-05-13 09:34:23', '2019-05-16 13:43:32'),
(507366, 572, '1728', 1032, 72, 2, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507367, 573, '1735', 1032, 72, 0, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507368, 475, '1383', 1032, 72, 2, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507369, 561, '1700', 1032, 72, 2, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507370, 467, '1357', 1032, 72, 0, '2019-05-13 09:34:23', '2019-05-13 09:34:23'),
(507371, 569, 'do()\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\nwhile(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \"; \r\ncin>>n;\r\n}', 1032, 72, 0, '2019-05-13 09:34:23', '2019-05-16 13:43:32'),
(507372, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid fact(int n)\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\n{\r\n	f=f*i;\r\n\r\n	return f;\r\n\r\n\r\n}\r\nint main()\r\n{\r\n	int n;\r\ncin>>n;\r\ncout<<fact(n);\r\n}', 1032, 72, 1, '2019-05-13 09:34:23', '2019-05-16 13:43:32'),
(507575, 564, '1713', 882, 72, 2, '2019-05-13 09:34:45', '2019-05-13 09:34:45'),
(507576, 563, '1710', 882, 72, 0, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507577, 571, '#include<iostream>\r\n\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nif(y>0)\r\n{\r\nreturn x*pow(x,--y);\r\n}\r\nreturn 1;\r\n}\r\n void main()\r\n{\r\nint x;\r\nint y;\r\ncin>>x;\r\ncin>>y;\r\npow(x,y);\r\n\r\n}', 882, 72, 2, '2019-05-13 09:34:45', '2019-05-20 15:37:53'),
(507578, 572, '1728', 882, 72, 2, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507579, 573, '1735', 882, 72, 0, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507580, 475, '1385', 882, 72, 0, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507581, 561, '1700', 882, 72, 2, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507582, 467, '1355', 882, 72, 2, '2019-05-13 09:34:45', '2019-05-13 09:34:46'),
(507583, 569, 'int n;\r\n   cout<<\"Enter a non-negative integer: \";\r\n    cin>>n;\r\n\r\ndo{\r\n     cout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<=-1);', 882, 72, 1, '2019-05-13 09:34:45', '2019-05-20 15:37:53'),
(507584, 574, '#include<iostream>\r\n        using namespace std;\r\nint fac(int x)\r\n{\r\nif(x==1)\r\n{\r\nreturn 1;\r\n}\r\nelse if(x>1)\r\n{\r\nreturn x*fact(x-1);\r\n}\r\n}\r\nvoid main()\r\n{\r\nint x;\r\ncin>>x;\r\nfac(x);\r\n\r\n}', 882, 72, 1, '2019-05-13 09:34:45', '2019-05-20 15:37:53'),
(507799, 564, '1712', 828, 72, 0, '2019-05-13 09:35:12', '2019-05-13 09:35:12'),
(507800, 563, '1711', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:12'),
(507801, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y){\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*power(x , y-1);\r\n}\r\nint main(){\r\nint a,b;\r\ncin>>a>>b;\r\ncout<<power(a,b);\r\nreturn 0;\r\n}', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-20 15:36:49'),
(507802, 572, '1728', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:13'),
(507803, 573, '1734', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:13'),
(507805, 475, '1385', 828, 72, 0, '2019-05-13 09:35:12', '2019-05-13 09:35:13'),
(507807, 561, '1700', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:13'),
(507809, 467, '1355', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-13 09:35:13'),
(507811, 569, '#include <iostream>\r\nusing namespace std;\r\nint main(){\r\nint n;\r\n\r\ndo{\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\n\r\n\r\n}while(n<0);\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\n}', 828, 72, 1, '2019-05-13 09:35:12', '2019-05-20 15:36:49'),
(507813, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int x){\r\nint y=1;\r\nfor(int i=1;i<=x;i++){\r\ny*=i;\r\n}\r\nreturn y;\r\n\r\n}            int main(){\r\nint a;\r\ncin>>a;\r\ncout<<fact(a);\r\n\r\n}', 828, 72, 2, '2019-05-13 09:35:12', '2019-05-20 15:36:49'),
(507885, 564, '1715', 872, 72, 0, '2019-05-13 09:35:24', '2019-05-13 09:35:25'),
(507886, 563, '1708', 872, 72, 0, '2019-05-13 09:35:24', '2019-05-13 09:35:25'),
(507887, 571, '#include<iostream>\r\nusing namespace std; \r\nint f(int x,int y)\r\n\r\n{\r\nif(y<1)\r\n{\r\nreturn 1;\r\n}\r\nelse{\r\nreturn x*(x,--y);\r\n}\r\nvoid main()\r\n{\r\nint a;\r\ncin>>a;\r\nint b;\r\ncin>>b;\r\nint z=f(a,b);\r\ncout<<z<<endl;\r\nsystem(\"pause\");\r\n}', 872, 72, 2, '2019-05-13 09:35:24', '2019-05-21 10:14:13'),
(507888, 572, '1729', 872, 72, 0, '2019-05-13 09:35:24', '2019-05-13 09:35:25'),
(507889, 573, '1735', 872, 72, 0, '2019-05-13 09:35:24', '2019-05-13 09:35:25'),
(507890, 475, '1385', 872, 72, 0, '2019-05-13 09:35:25', '2019-05-13 09:35:25'),
(507891, 561, '1702', 872, 72, 0, '2019-05-13 09:35:25', '2019-05-13 09:35:25'),
(507892, 467, '1354', 872, 72, 0, '2019-05-13 09:35:25', '2019-05-13 09:35:25'),
(507893, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\ncout<<\"Entered a non-negative integer:\";\r\ncin>>n;\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\n}while(n<0);\r\nsystem(\"pause\");\r\n}', 872, 72, 1, '2019-05-13 09:35:25', '2019-05-21 10:14:13'),
(507894, 574, '#include<iostream>\r\nusing namespace std;\r\nint f(int x)\r\nint fact=1;\r\n{\r\nfor(int i=1;i<=x;i++)\r\n{\r\nfact*=i;\r\n}\r\n\r\nreturn fact;\r\n}\r\nvoid main()\r\n\r\n{\r\nint a;\r\ncin>>a;\r\nint s=(a);\r\ncout<<s<<endl;\r\nsystem(\"pause\");\r\n}', 872, 72, 2, '2019-05-13 09:35:25', '2019-05-21 10:14:13'),
(508060, 564, '1712', 927, 72, 0, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508061, 563, '1711', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508062, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\n	if(y==0)\r\n		return 1;\r\n	else\r\n		return x*power(y-1);\r\n}\r\nint main()\r\n{\r\n	int x,y;\r\n	cin>>x>>y;\r\n	cout<<power(x,y);\r\n\r\n}', 927, 72, 1, '2019-05-13 09:35:42', '2019-05-21 10:14:54'),
(508063, 572, '1728', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508064, 573, '1735', 927, 72, 0, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508065, 475, '1383', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508066, 561, '1700', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508067, 467, '1355', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-13 09:35:42'),
(508068, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >>n;\r\n}while(n<0);', 927, 72, 1, '2019-05-13 09:35:42', '2019-05-21 10:14:54'),
(508069, 574, '#include<iostream>\r\nusing namespace std;\r\nint fac(int n)\r\n{\r\n	int f=1;\r\n	for(int i=1;i<=n;i++)\r\n		f=f*i;\r\n	return f;\r\n}\r\nint main()\r\n{\r\n	int n;\r\n	cin>>n;\r\n	cout<<fac(n);\r\n}', 927, 72, 2, '2019-05-13 09:35:42', '2019-05-21 10:14:54'),
(508389, 564, '1712', 823, 72, 0, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508390, 563, '1708', 823, 72, 0, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508391, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x, int y)\r\n{\r\nif(x==0)\r\nreturn 0;\r\nreturn x*power(x ,y-1);\r\n\r\n}\r\nint main()\r\n{\r\nint x ,y;\r\ncin >>x>>y;\r\nint z=power(x,y)\r\ncout <<z;\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nif (x==0)\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nusing namespace std;\r\nint power(int x,int y)       \r\n{\r\nif(x==0)\r\nreturn 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}', 823, 72, 1, '2019-05-13 09:36:01', '2019-05-21 10:16:16'),
(508392, 572, '1728', 823, 72, 2, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508393, 573, '1734', 823, 72, 2, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508394, 475, '1384', 823, 72, 0, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508395, 561, '1701', 823, 72, 0, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508396, 467, '1355', 823, 72, 2, '2019-05-13 09:36:01', '2019-05-13 09:36:01'),
(508397, 569, '#include<iostream>\r\nusing namespace std ;\r\nvoid main ()\r\n{\r\nint n ;\r\ncout <<\"Enter a non-negative intger\r\n}', 823, 72, 0, '2019-05-13 09:36:01', '2019-05-21 10:16:16'),
(508398, 574, '#include<iostream>\r\nusing namespace std;\r\nint (int x)\r\n{\r\nint fact =1;\r\n\r\nfor (int i =1; i<=x;i++)\r\n{\r\nfact =fact *i;\r\n}\r\nreturn fact ;\r\n}\r\nint main ()\r\n{\r\nint x ;\r\ncin x\r\nint c=fact (x);\r\ncout <<c;\r\nreturn 0;\r\n}\r\n}\r\n\r\n}', 823, 72, 2, '2019-05-13 09:36:01', '2019-05-21 10:16:16'),
(508412, 564, '1713', 874, 72, 2, '2019-05-13 09:36:03', '2019-05-13 09:36:31'),
(508413, 563, '1708', 874, 72, 0, '2019-05-13 09:36:03', '2019-05-13 09:36:31'),
(508415, 571, 'int  power(int x,int y)\r\n {\r\nif(y>0)\r\n{\r\n   return power(x,y-1);\r\n\r\n}\r\n\r\nelse return 1;\r\n\r\n}\r\n\r\nvoid main()\r\n{\r\n\r\n  int a,b;\r\n\r\n  cin>>a>>b;\r\n\r\n  cout<<power(a,b);\r\n}', 874, 72, 2, '2019-05-13 09:36:03', '2019-05-21 10:19:06'),
(508417, 572, '1728', 874, 72, 2, '2019-05-13 09:36:04', '2019-05-13 09:36:31'),
(508419, 573, '1734', 874, 72, 2, '2019-05-13 09:36:04', '2019-05-13 09:36:31'),
(508421, 475, '1383', 874, 72, 2, '2019-05-13 09:36:04', '2019-05-13 09:36:31'),
(508423, 561, '1700', 874, 72, 2, '2019-05-13 09:36:04', '2019-05-13 09:36:31'),
(508425, 467, '1354', 874, 72, 0, '2019-05-13 09:36:04', '2019-05-13 09:36:31'),
(508428, 569, '#inclue<iostream>\r\nusing namespace std;\r\nvoid main\r\n int n;\r\n  cout  <<\"enter a non-negative integer:\";\r\n  cin>>n;\r\n\r\ndo\r\n{\r\n    if (n< 0)\r\n     cout<<the integer you entered is negative\"<<endl;\r\nelse\r\n{\r\n   cout<<\"enter a non-negative\";\r\n   cin>>n;\r\n}\r\n}while(n<0);', 874, 72, 1, '2019-05-13 09:36:04', '2019-05-21 10:19:06'),
(508431, 574, 'int    factorial(int x)\r\n {\r\n   int f=1;\r\n     for (int i=1 ;i<=x;i++)\r\n    {\r\n       f*=i;\r\n\r\n   }\r\n  return f;\r\n}\r\n\r\nvoid main()\r\n{\r\n int num;\r\ncin>>num;\r\ncout<<factorial(num);', 874, 72, 2, '2019-05-13 09:36:04', '2019-05-21 10:19:06'),
(508762, 564, '1715', 851, 72, 0, '2019-05-13 09:36:45', '2019-05-13 11:56:11'),
(508763, 563, '1708', 851, 72, 0, '2019-05-13 09:36:45', '2019-05-13 11:56:11'),
(508764, 571, '#include <iostream>                                                                     \r\nusing namespace std;\r\nint pow (int x,int y){\r\nif (y==0)\r\nreturn 1;\r\nelse\r\nreturn x*pow (x,y-1);\r\n}\r\nint main ()\r\n{\r\nint x,y;\r\ncin >>x>>y;\r\ncout<<pow(x,y);\r\nreturn 0;\r\n}', 851, 72, 2, '2019-05-13 09:36:45', '2019-05-21 10:20:26'),
(508765, 572, '1728', 851, 72, 2, '2019-05-13 09:36:45', '2019-05-13 11:56:11'),
(508766, 467, '1354', 851, 72, 0, '2019-05-13 09:36:45', '2019-05-13 11:56:11'),
(508767, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter a non-negative integer:\";   \r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"the integer you intered is negative .\"<<endl;\r\ncout<<\"enter a non-negative integer.\";\r\ncin>>n;\r\n}                         \r\nwhile (n<0)\r\nreturn 0;\r\n}', 851, 72, 1, '2019-05-13 09:36:45', '2019-05-21 10:20:26'),
(508768, 574, '#include <iostream>\r\nusing namespace std;\r\nint f =1;\r\nint fact (int x)\r\n{\r\nfor (int i=1;i<=x;i++)\r\n{\r\nf = f * i;\r\n}\r\nreturn f;\r\n}\r\nint main ()\r\n{\r\nint x ;\r\ncin>>x;\r\ncout <<fact (x);\r\nreturn 0;\r\n}', 851, 72, 2, '2019-05-13 09:36:45', '2019-05-21 10:20:26'),
(508846, 564, '1713', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-13 09:36:53'),
(508847, 563, '1710', 889, 72, 0, '2019-05-13 09:36:53', '2019-05-13 09:36:53'),
(508848, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\n       if(y>0)\r\n{\r\nreturn x*pow(x,--y)\r\n\r\n}\r\n\r\nelse {\r\nreturn 1;\r\n}\r\n}\r\nint main()\r\n{\r\nint a,b;\r\ncin>>a>>b;\r\npow(a,b);\r\n\r\nint z=pow(a,b);\r\ncout<<z;\r\n}', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-21 10:17:16'),
(508849, 572, '1728', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-13 09:36:53'),
(508850, 573, '1733', 889, 72, 0, '2019-05-13 09:36:53', '2019-05-13 09:36:53'),
(508851, 475, '1383', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-13 09:36:54'),
(508852, 561, '1700', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-13 09:36:54'),
(508853, 467, '1355', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-13 09:36:54'),
(508854, 569, '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin  >>n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}while(n<0)\r\n{\r\n          cout << \"Enter a non-negative integer: \"; \r\nI++;\r\n}      \r\nreturn 0;\r\n}', 889, 72, 0, '2019-05-13 09:36:53', '2019-05-21 10:17:16'),
(508855, 574, '#include<iostream>\r\nusing namespace std;\r\nint fac(int x)\r\n{\r\nint factorial=1;\r\nfor(int I=1;i<=x;i++)\r\n{\r\nfactorial*=I;\r\n}\r\nreturn factorial;\r\n}\r\nint main()\r\n{\r\nint n;\r\ncout<<\"Enter number to get fac of it\";\r\ncin>>n;\r\nint z=fac(n);\r\ncout<<z;\r\nreturn 0;\r\n}', 889, 72, 2, '2019-05-13 09:36:53', '2019-05-21 10:17:16'),
(508866, 564, '1715', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508867, 563, '1708', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508868, 571, 'include <iostream>\r\nusing namespace std;\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\ncout<<endl ;\r\nsystem (\"pause\");   \r\n}', 850, 72, 2, '2019-05-13 09:36:54', '2019-05-20 15:39:58'),
(508869, 572, '1728', 850, 72, 2, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508870, 573, '1733', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508871, 475, '1384', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508872, 561, '1701', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508873, 467, '1354', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-13 11:56:12'),
(508874, 569, 'include <iostream>\r\nusing namespace std;  \r\nint main()\r\ncout<<\"entre a non_negative integer:\";\r\ncin>>n;\r\ndo\r\n{', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-20 15:39:58'),
(508875, 574, 'include<iostream>\r\nusing namespace std ;\r\nif(x==0)\r\nreturn1 ;', 850, 72, 0, '2019-05-13 09:36:54', '2019-05-20 15:39:58'),
(508876, 564, '1713', 890, 72, 2, '2019-05-13 09:36:54', '2019-05-13 09:36:55'),
(508877, 563, '1710', 890, 72, 0, '2019-05-13 09:36:54', '2019-05-13 09:36:55');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(508878, 571, '#include <iostream> \r\nusing namespace std;\r\npower(int x,int y)\r\n{\r\n   if(y==0)\r\n   {\r\n      return 0;}\r\n    else\r\n    {\r\n       return x*power(x,y--);\r\n      }\r\nvoid main()\r\n{\r\n  int x,y;\r\n  cin>>x,y;\r\n  cout<<power(x,y)\r\n   system(\"pause\");\r\n}', 890, 72, 1, '2019-05-13 09:36:54', '2019-05-21 10:22:53'),
(508879, 572, '1730', 890, 72, 0, '2019-05-13 09:36:54', '2019-05-13 09:36:55'),
(508880, 573, '1734', 890, 72, 2, '2019-05-13 09:36:54', '2019-05-13 09:36:55'),
(508881, 475, '1383', 890, 72, 2, '2019-05-13 09:36:55', '2019-05-13 09:36:55'),
(508882, 561, '1700', 890, 72, 2, '2019-05-13 09:36:55', '2019-05-13 09:36:55'),
(508883, 467, '1354', 890, 72, 0, '2019-05-13 09:36:55', '2019-05-13 09:36:55'),
(508884, 569, 'int n;\r\ncout<<\"Enter anon negative integer\";\r\ncin>>n;\r\ndo {\r\nif(n<0)\r\n\r\n\r\n{\r\ncout<<\"you entered a negative integer\";\r\ncout<<\"enter anegative integer\";\r\ncin>>n;\r\n}\r\nelse\r\n{\r\ncout<<\"you enetered a non negative integer\";\r\n}\r\nwhile(n!=0', 890, 72, 1, '2019-05-13 09:36:55', '2019-05-21 10:22:53'),
(508885, 574, '#include <iostream >\r\nusing namespace std;\r\nfactorial(int x)\r\n{\r\nint f=1;\r\nif(x!=0)\r\n{\r\nfor(int i=1;i<=x;i++)\r\n{\r\n  f=f*i\r\n}\r\nreturn f;\r\n}\r\nelse\r\n{\r\nreturn 0;\r\n}\r\nvoid main() \r\n{\r\nint x;\r\ncin>>x;\r\ncout<< factorial(x);\r\nsystem (\"pause\"); \r\n}', 890, 72, 2, '2019-05-13 09:36:55', '2019-05-21 10:22:53'),
(508904, 564, '1715', 887, 72, 0, '2019-05-13 09:36:55', '2019-05-13 09:36:56'),
(508905, 563, '1708', 887, 72, 0, '2019-05-13 09:36:55', '2019-05-13 09:36:56'),
(508907, 571, '#include <iostream>\r\nusing namespace std ;\r\nint power (int x,int y)\r\n{\r\nif(y > 0)\r\n{\r\nreturn (x , y-1);\r\n}\r\nelse \r\n{\r\nreturn 1 ;\r\n}\r\n}  \r\n\r\nvoid main ()\r\n{\r\nint r , h;\r\ncin>>r>>h;\r\ncout <<power (r, h);\r\n}', 887, 72, 0, '2019-05-13 09:36:55', '2019-05-21 10:24:04'),
(508910, 572, '1728', 887, 72, 2, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(508912, 573, '1734', 887, 72, 2, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(508914, 475, '1384', 887, 72, 0, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(508916, 561, '1700', 887, 72, 2, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(508918, 467, '1355', 887, 72, 2, '2019-05-13 09:36:56', '2019-05-13 09:36:56'),
(508920, 569, '#include <iostream>\r\nusing name space std ;\r\nvoid main ()\r\n{\r\nint n;\r\n\r\ndo\r\n\r\n{\r\ncout<<\"Enter a non -negative integer:\";\r\ncin>>n;\r\n\r\n}\r\nwhile (n<0)\r\n{\r\ncout<<\" This integer you entered is negative.\"<<endl;\r\n}\r\n}', 887, 72, 0, '2019-05-13 09:36:56', '2019-05-21 10:24:04'),
(508922, 574, '#iclude<iostream>  \r\nusing namespace std ; \r\nvoid factorial (int x)\r\n{\r\nint fact=1;\r\nfor(int I=1; I<=x; I++)\r\n{\r\nfact=fact*I;\r\n\r\n}\r\ncout<<fact;\r\n}\r\nvoid main ()\r\n{\r\nint x;\r\ncin>>x;\r\nfactorial(x);\r\n}', 887, 72, 2, '2019-05-13 09:36:56', '2019-05-21 10:24:04'),
(509133, 564, '1713', 767, 72, 2, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509134, 563, '1710', 767, 72, 0, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509135, 571, '#include <iostream>  \r\nusing namespace std;\r\nint pow(int x, int y)\r\n{ \r\nif( y==0)\r\n{\r\nreturn1;\r\n}\r\nelse{\r\nreturnx*pow(x , y-1)\r\n}\r\nint main()\r\n{\r\nint x , y ;\r\ncin >> x>> y;\r\ncout <<pow(x,y);\r\ncout<< endl;\r\nsystem (\"pause\")\r\n}\r\n\r\n{\r\nif (y==0)\r\n.{\r\nreturn 1;\r\n}\r\neise\r\n{\r\nreturn x*pow(x,y-1)\r\n}\r\nint main()\r\n{\r\nint x, y;\r\ncin >> x >> y;\r\ncout << pow(x , y)', 767, 72, 2, '2019-05-13 09:37:16', '2019-05-21 10:21:33'),
(509136, 572, '1728', 767, 72, 2, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509137, 573, '1733', 767, 72, 0, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509138, 475, '1382', 767, 72, 0, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509139, 561, '1702', 767, 72, 0, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509140, 467, '1355', 767, 72, 2, '2019-05-13 09:37:16', '2019-05-13 11:56:12'),
(509141, 569, NULL, 767, 72, 0, '2019-05-13 09:37:16', '2019-05-21 10:21:33'),
(509142, 574, NULL, 767, 72, 0, '2019-05-13 09:37:16', '2019-05-21 10:21:33'),
(509324, 564, '1712', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509325, 563, '1711', 876, 72, 2, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509326, 571, 'long long pow(int x,int y)\r\n{\r\nint  x,y;\r\ncin>>x>>y;\r\n\r\nfor(int i=0 ;i<y ; i++)\r\n{\r\np*=i;\r\n}\r\nreturn pow(x,y);\r\nvoid main()\r\n{\r\nint p;\r\ncout<<pow(x,y);\r\n\r\n\r\n}', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-21 10:36:20'),
(509327, 572, '1730', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509328, 573, '1735', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509329, 475, '1385', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509330, 561, '1702', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509331, 467, '1354', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-13 09:37:33'),
(509332, 569, '#include <iostream>\r\nusing namespace std ;\r\n int main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\n  do{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile}(n<0);', 876, 72, 1, '2019-05-13 09:37:32', '2019-05-21 10:36:20'),
(509333, 574, '#include <iostream>\r\nusing namespace std ;\r\nlong long fact(int x,int y)\r\n{\r\nint n;\r\ncin>>n;\r\nint f=1;\r\nfor(int i=1;i<y;i++)\r\n{\r\nf*=i;\r\n}\r\nif(x==0)\r\nreturn 1;\r\nif(x==1)\r\n\r\nreturn n*(n-1);\r\nvoid main()\r\n{\r\nint m;\r\n\r\nm=fact(x.y);\r\ncout<<m;', 876, 72, 0, '2019-05-13 09:37:32', '2019-05-21 10:36:20'),
(509334, 564, '1712', 881, 72, 0, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509335, 563, '1711', 881, 72, 2, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509336, 571, '#include <iostream>\r\n#using namespace std;\r\nint f(int n)\r\n{\r\nif(n<1)\r\nreturn 1;\r\nelse\r\nreturn n*n(n-1) ;\r\n}\r\nvoid main()\r\n{\r\n\r\nint num ;\r\ncin>>num ;\r\nint x=f(num);\r\ncout<<x<<endl;\r\n\r\n}', 881, 72, 0, '2019-05-13 09:37:34', '2019-05-21 10:41:00'),
(509337, 572, '1728', 881, 72, 2, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509338, 573, '1732', 881, 72, 0, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509339, 475, '1382', 881, 72, 0, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509340, 561, '1700', 881, 72, 2, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509341, 467, '1355', 881, 72, 2, '2019-05-13 09:37:34', '2019-05-13 09:37:43'),
(509342, 569, '#include<iostream>\r\n#using namespace  std;  \r\nvoid main()\r\n{\r\nint n;\r\nint c=0;\r\ndo\r\n{\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(c!=0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n}\r\nc++;\r\n}while (n < 0);\r\n\r\n}', 881, 72, 1, '2019-05-13 09:37:34', '2019-05-21 10:41:00'),
(509343, 574, '#include<iostream>\r\n#using namespace  std;\r\nint pow(int base,int power)\r\n{\r\nint res=1;\r\nfor(int i=1;i<=power;i++)\r\n{\r\nres=res*base;\r\n}\r\nreturn res;\r\n}\r\n\r\nvoid main()\r\n{\r\nint b;\r\nint p;\r\ncin>>b>>p;\r\nint x=pow(b,p);\r\ncout<<x<<endl;\r\n}', 881, 72, 0, '2019-05-13 09:37:34', '2019-05-21 10:41:00'),
(509523, 564, '1715', 859, 72, 0, '2019-05-13 09:37:51', '2019-05-13 09:37:52'),
(509524, 563, '1708', 859, 72, 0, '2019-05-13 09:37:51', '2019-05-13 09:37:52'),
(509525, 571, 'int power(int n){\r\n\r\nif(n==0){\r\nreturn 1;}\r\nreturn n*power(n-1);\r\n}', 859, 72, 0, '2019-05-13 09:37:52', '2019-05-21 10:38:23'),
(509526, 572, '1728', 859, 72, 2, '2019-05-13 09:37:52', '2019-05-13 09:37:52'),
(509527, 573, '1734', 859, 72, 2, '2019-05-13 09:37:52', '2019-05-13 09:37:52'),
(509528, 475, '1383', 859, 72, 2, '2019-05-13 09:37:52', '2019-05-13 09:37:52'),
(509529, 561, '1700', 859, 72, 2, '2019-05-13 09:37:52', '2019-05-13 09:37:52'),
(509530, 467, '1355', 859, 72, 2, '2019-05-13 09:37:52', '2019-05-13 09:37:52'),
(509531, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;}while(n<0);\r\n                                   }', 859, 72, 1, '2019-05-13 09:37:52', '2019-05-21 10:38:23'),
(509532, 574, 'int fact(int n){\r\n\r\nwhile(n>0){\r\n\r\nn*=(n-1);\r\n\r\nn--;\r\n}\r\nreturn n; }', 859, 72, 0, '2019-05-13 09:37:52', '2019-05-21 10:38:23'),
(509543, 564, '1713', 852, 72, 2, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509544, 563, '1709', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509545, 571, '#include <iostream>  \r\nusing namespace std ;\r\nint pow (int x , int y)\r\n{\r\nif (y==0)\r\nreturn 1 ;\r\nreturn pow*x (x,y-1)\r\n]\r\nint main  ()\r\n{\r\n   int x, y ;\r\n   cin >> x >> y ;\r\n   cout << pow (x ,y) <<endl ;\r\n   \r\n   return 0 ;\r\n}', 852, 72, 2, '2019-05-13 09:37:54', '2019-05-21 10:45:16'),
(509546, 572, '1730', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509547, 573, '1735', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509548, 475, '1382', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509549, 561, '1701', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509550, 467, '1354', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509551, 569, '#include <iostream>  \r\nusing namespace std ;       \r\nint main ()\r\n{\r\n\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo (n<0)\r\ncout << \"The integer you entered is negative.\" << endl;\r\nwhile (n>0)\r\ncout << \"Enter a non-negative integer: \";\r\ncin>> n; \r\n   cout <<\" positive \"<<endl;\r\nreturn 0 ;\r\n}', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-21 10:45:16'),
(509552, 574, '#include <iostream>  \r\nusing namespace std ;       \r\nint main ()\r\n{\r\n  int x ,f=1 ;\r\n  cin >> x ;\r\n  for (int i=x ; i>=1;i++)\r\n{\r\n   f*=i ;\r\n}\r\n  cout << \" the factorial =  \" << f <<endl;\r\n   \r\nreturn 0 ;\r\n}', 852, 72, 0, '2019-05-13 09:37:54', '2019-05-21 10:45:16'),
(509553, 564, '1713', 879, 72, 2, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509554, 563, '1708', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509555, 571, '#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nint a=1;\r\n\r\nfor(int I=1;i<=x;i++)\r\n{\r\na=a^y;\r\n}\r\nreturn x^y;\r\n}\r\nint main()\r\n{\r\nint c,b;\r\ncin>>c>>b;\r\nint z=pow(c,b);\r\ncout<<z;\r\nreturn 0;\r\n}', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-21 10:39:31'),
(509556, 572, '1730', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509557, 573, '1734', 879, 72, 2, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509558, 475, '1383', 879, 72, 2, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509559, 561, '1702', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509560, 467, '1354', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-13 09:37:54'),
(509561, 569, '#include<iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n\r\n{\r\nint n;\r\ncin>>n;\r\ndo\r\n{\r\n--x;\r\n}\r\n\r\nwhile(n< 0)\r\n{\r\n\r\ncout<<\"non negative\";\r\n\r\n}\r\n\r\nreturn o;\r\n}', 879, 72, 0, '2019-05-13 09:37:54', '2019-05-21 10:39:31'),
(509562, 574, '#include<iostream>\r\n#include<cmath>\r\n\r\nusing namespace std;\r\n\r\nvoid  fact(int a)\r\nint fact=1;\r\n\r\n{\r\n\r\nfor(int I=1;i<=a;i++)\r\n\r\n{\r\n\r\nfact =fact*I;\r\n\r\n}\r\n}\r\ncout<<fact; \r\nint main()\r\n{\r\nint n,b;\r\ncin>>n;\r\nb=fact(n);\r\ncout<<b;\r\n\r\nreturn 0;\r\n}', 879, 72, 2, '2019-05-13 09:37:54', '2019-05-21 10:39:31'),
(509718, 564, '1715', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509719, 563, '1708', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509720, 571, '#include<iostream>\r\nusing namespace std;\r\nint rec(int x,int y)\r\n{\r\nwhile(x>0&&y>o)\r\nif(x==0)\r\nreturn 0;\r\nelse if(x==1)\r\nreturn 1;\r\nelse \r\nreturn x*rec(x,y-1);\r\n}\r\nvoid main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<rec(x,y)\r\ncout<<endl;\r\nsystem(\"pause\")\r\n}', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-21 10:42:24'),
(509721, 564, '1715', 926, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509722, 572, '1730', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509723, 563, '1708', 926, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509724, 573, '1733', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509725, 571, '#include<iostream>\r\nusing namespace  std;\r\nstruct power\r\n{\r\nint x;\r\nint y;\r\n}\r\nint main()\r\n{', 926, 72, 0, '2019-05-13 09:38:10', '2019-05-21 10:47:44'),
(509726, 475, '1385', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509727, 572, '1728', 926, 72, 2, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509728, 561, '1703', 849, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509729, 573, '1734', 926, 72, 2, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509730, 467, '1355', 849, 72, 2, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509731, 475, '1383', 926, 72, 2, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509732, 569, NULL, 849, 72, 0, '2019-05-13 09:38:10', '2019-05-21 10:42:24'),
(509733, 561, '1701', 926, 72, 0, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509734, 574, '#include<iostream>\r\nusing namespace std;\r\nint factorial(int x)\r\n{\r\nint fact=1;\r\nfor(i=1;i<=x;i++)\r\nfact=fact*i;\r\nreturn fact;\r\n}\r\nvoid main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<factorial(x);\r\ncout<<endl;\r\nsystem(\"pause\")\r\n\r\n}', 849, 72, 2, '2019-05-13 09:38:10', '2019-05-21 10:42:24'),
(509735, 467, '1355', 926, 72, 2, '2019-05-13 09:38:10', '2019-05-13 09:38:11'),
(509736, 569, 'int n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0)\r\ni++;', 926, 72, 1, '2019-05-13 09:38:10', '2019-05-21 10:47:44'),
(509737, 574, 'int fact(int x)\r\nint n;\r\n{\r\nfor(int i=0;i<n;i++)\r\n{\r\nfact*=i;\r\n}\r\n}', 926, 72, 0, '2019-05-13 09:38:10', '2019-05-21 10:47:44'),
(509980, 564, '1713', 832, 72, 2, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509981, 571, '#include <iostream> \r\n                                                              using name space std;\r\n                                                                int power(int x,int y)\r\n                                                                                                                                                \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                         {\r\n                                                    if(y==0)\r\n                                                         return 1;\r\n                                                        else\r\n                                                            return x*power(x,- -y);\r\n                                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                                          }', 832, 72, 2, '2019-05-13 09:38:32', '2019-05-21 10:46:13'),
(509982, 572, '1730', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509983, 573, '1735', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509984, 475, '1384', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509985, 561, '1702', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509986, 467, '1356', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-13 09:38:33'),
(509987, 569, '#include <iostream> \r\n                     using namespace std; \r\n                  void main()\r\n                    {         int n;\r\n                             cin>>n;\r\n\r\n                       {  do\r\n                          cout<<\"The integer you entered is negative\"<<endle;\r\n                     cout<<\" Enter a non- negative integer:\";\r\n\r\n                                   while(n<o) \r\n                   } \r\n               }', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-21 10:46:13'),
(509988, 574, '#include <iostream>  \r\n                                        using namespace std;   \r\n                                    int fact(int n)\r\n                                {\r\n                                       f=1;\r\n                                     if(i', 832, 72, 0, '2019-05-13 09:38:32', '2019-05-21 10:46:13'),
(509999, 564, '1715', 877, 72, 0, '2019-05-13 09:38:35', '2019-05-13 09:38:35'),
(510000, 563, '1710', 877, 72, 0, '2019-05-13 09:38:35', '2019-05-13 09:38:35'),
(510001, 571, '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint m(int x,int y);\r\n{\r\nif(y>0)\r\n\r\n{\r\nreturn x*m(x,y-1);\r\nreturn 1;\r\n}\r\n}\r\nvoid main()\r\n\r\n{\r\n\r\nint x=5;\r\n\r\nint y=5;\r\n\r\nm(5,4);\r\n}', 877, 72, 2, '2019-05-13 09:38:35', '2019-05-21 10:48:37'),
(510002, 572, '1728', 877, 72, 2, '2019-05-13 09:38:35', '2019-05-13 09:38:35'),
(510003, 573, '1734', 877, 72, 2, '2019-05-13 09:38:35', '2019-05-13 09:38:35'),
(510004, 475, '1384', 877, 72, 0, '2019-05-13 09:38:35', '2019-05-13 09:38:36'),
(510005, 561, '1700', 877, 72, 2, '2019-05-13 09:38:35', '2019-05-13 09:38:36'),
(510006, 467, '1355', 877, 72, 2, '2019-05-13 09:38:35', '2019-05-13 09:38:36'),
(510007, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\n}while(n>0);\r\n}', 877, 72, 1, '2019-05-13 09:38:35', '2019-05-21 10:48:37'),
(510008, 574, '#include<iostream>\r\n\r\nusing namespace std;\r\nint main()\r\n{\r\nint fact=1;\r\nint n;\r\nfor(int i=1;i<=n;i++)\r\n{\r\nfact=fact*i;\r\n}\r\n}', 877, 72, 0, '2019-05-13 09:38:35', '2019-05-21 10:48:37'),
(510215, 564, '1712', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510216, 563, '1708', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510217, 571, '#include<iostream>\r\nusing namespace std;\r\n  int fun(int x,int y)\r\n\r\n{\r\nif (y==1)\r\n{\r\nreturn x;\r\n}\r\nelse return x*fun(x,y-1);\r\n\r\n\r\n\r\n}\r\n\r\nint main()\r\n{\r\n\r\nint z,w;\r\n\r\ncout<<\"enter z  then w\";\r\n\r\ncin>>z,w;\r\n\r\nint result=fun(z,w);\r\n\r\ncout<<\"result=\"<<fun(z,w);\r\n\r\nreturn 0;\r\n}', 868, 72, 2, '2019-05-13 09:39:23', '2019-05-21 10:49:46'),
(510218, 572, '1729', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510219, 573, '1735', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510220, 475, '1384', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510221, 561, '1702', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510222, 467, '1354', 868, 72, 0, '2019-05-13 09:39:23', '2019-05-13 09:39:23'),
(510223, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n int n;\r\ncout<<\"Enter a non -negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\n\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\n\r\ncout<<\"Enter a non negative integer :\";\r\n\r\ncin>>n;\r\n\r\n}while(n<0);  \r\n\r\nreturn 0;\r\n}', 868, 72, 1, '2019-05-13 09:39:23', '2019-05-21 10:49:46'),
(510224, 574, '#include<iostream>\r\nusing namespace std;\r\nint fun(int x)\r\n{\r\nint fact=1;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nfact*=i\r\n}\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter number\";\r\ncin>>n;\r\nint result =fun(n);\r\ncout<<\"result=\"<<fun(n);\r\nreturn o;\r\n}', 868, 72, 1, '2019-05-13 09:39:23', '2019-05-21 10:49:46'),
(510484, 564, '1713', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510485, 563, '1711', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510486, 571, '#include <iostream>\r\nusing namespace std ;\r\nint pow (int x,int y)\r\n{\r\n\r\nif (y==0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n{\r\nreturn x*pow(x,y-1);\r\n}\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\ncout<<endl;\r\n}', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-21 10:50:58'),
(510487, 572, '1728', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510488, 573, '1734', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510489, 475, '1383', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510490, 561, '1700', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510491, 467, '1355', 790, 72, 2, '2019-05-13 09:40:25', '2019-05-13 09:40:25'),
(510492, 569, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{ \r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\ncin>>n;\r\nif (n>=0)\r\nreturn 0;\r\nelse\r\n{\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\n\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n\r\n\r\n\r\n}\r\nwhile(n<0);\r\n\r\n\r\n}\r\n}', 790, 72, 0, '2019-05-13 09:40:25', '2019-05-21 10:50:58'),
(510493, 574, '#include <iostream>\r\nusing namespace std ;\r\nint fact (int x)\r\n{\r\nif (x==0)\r\nreturn 1;\r\nelse \r\nreturn x*fact(x-1);\r\n\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\ncout<<fact (x);\r\n}', 790, 72, 1, '2019-05-13 09:40:25', '2019-05-21 10:50:58'),
(510734, 564, '1714', 884, 72, 0, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510735, 563, '1708', 884, 72, 0, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510736, 571, 'int power(int n)\r\n{if (n==0){\r\n          return 1;}\r\nreturn n*power(n-1)}', 884, 72, 0, '2019-05-13 09:41:24', '2019-05-21 10:51:30'),
(510737, 572, '1728', 884, 72, 2, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510738, 573, '1734', 884, 72, 2, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510739, 475, '1383', 884, 72, 2, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510740, 561, '1700', 884, 72, 2, '2019-05-13 09:41:24', '2019-05-13 09:41:25'),
(510741, 467, '1355', 884, 72, 2, '2019-05-13 09:41:25', '2019-05-13 09:41:25'),
(510742, 569, 'do{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n{\r\n while (n < 0);{\r\n}', 884, 72, 0, '2019-05-13 09:41:25', '2019-05-21 10:51:30'),
(510743, 574, 'fact(n)\r\nwhile(n>0)\r\n\r\n{\r\nn*=n-1;\r\n\r\nn--;\r\n\r\n}', 884, 72, 0, '2019-05-13 09:41:25', '2019-05-21 10:51:30'),
(510888, 564, '1713', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510889, 563, '1708', 771, 72, 0, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510890, 571, 'int pow(int x , int y){\r\nif (y==0)\r\nreturn 1;\r\nreturn x*pow(x , y-1);\r\n}', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-21 10:54:13'),
(510891, 572, '1728', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510892, 573, '1735', 771, 72, 0, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510893, 475, '1385', 771, 72, 0, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510894, 561, '1700', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510895, 467, '1355', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-13 09:42:08'),
(510896, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\nif(n<0){\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}\r\n}\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 771, 72, 0, '2019-05-13 09:42:07', '2019-05-21 10:54:14'),
(510897, 574, 'int fact(int x){\r\nint f=1;\r\nfor(int i=1; i<=x;i++){\r\nf*=i;\r\n}\r\nreturn f;\r\n}', 771, 72, 2, '2019-05-13 09:42:07', '2019-05-21 10:54:14'),
(511003, 564, '1715', 870, 72, 0, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511005, 563, '1710', 870, 72, 0, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511007, 571, 'include<iostream>            \r\nusing namespace std;\r\nint F(int x,int y)\r\n{if(y==0)\r\n{return 1;}\r\nelse \r\n{return x^x power(x,--y)}\r\n}                                      \r\nint main()\r\n{int num, p;\r\ncin>>num>>p;\r\nF(num,p);\r\ncout<<F(num,p);\r\n}\r\nsystem(\"pause\";)', 870, 72, 1, '2019-05-13 09:42:24', '2019-05-21 10:57:35'),
(511009, 572, '1728', 870, 72, 2, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511010, 573, '1735', 870, 72, 0, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511011, 475, '1385', 870, 72, 0, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511012, 561, '1700', 870, 72, 2, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511013, 467, '1355', 870, 72, 2, '2019-05-13 09:42:24', '2019-05-13 09:42:24'),
(511014, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nif(n<0)\r\n{do\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n; \r\nwhile(n<0)\r\n}                      \r\nsystem(\"pause\";)', 870, 72, 1, '2019-05-13 09:42:24', '2019-05-21 10:57:35'),
(511015, 574, 'include<iostream>   \r\nusing namespace std;\r\nint F(int x)\r\n{int fact=1;\r\nfor(int i=1;i<=x;i++)\r\n{fact=fact*i;}\r\nreturn fact;\r\n}\r\nint main()\r\n{int n;\r\ncin>>n;\r\nF(n);\r\ncout<<fact;\r\n}\r\nsystem(\"pause\";)', 870, 72, 1, '2019-05-13 09:42:24', '2019-05-21 10:57:36'),
(511084, 564, '1713', 773, 72, 2, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511085, 563, '1708', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511086, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(intx,inty)\r\n{\r\nint p=1;\r\nfor(int i=1;i<y;i++)\r\nreturn p*=x\r\n}\r\nvoid main()\r\n{ \r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y)\r\n}', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-21 10:59:31'),
(511087, 572, '1728', 773, 72, 2, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511088, 573, '1735', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511089, 475, '1383', 773, 72, 2, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511090, 561, '1701', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511091, 467, '1355', 773, 72, 2, '2019-05-13 09:42:57', '2019-05-13 09:42:57'),
(511092, 569, '#include <iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint n;\r\ndo\r\n{\r\ncout<<\"Enter a non negetive integer:\";\r\ncin>>n;\r\nwhile(n<0)\r\ncout<<\"The integer you entered is negetive.\"<<endl;\r\n}\r\n}', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-21 10:59:31'),
(511093, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int n)\r\n{\r\nint f=1;\r\nfor(int i=1;i<=n;i++)\r\nreturn f*=i;\r\n} \r\nvoid main()\r\n{ \r\nint n;\r\ncin>>n;\r\ncout<<fact(n);\r\n}', 773, 72, 0, '2019-05-13 09:42:57', '2019-05-21 10:59:31'),
(511114, 564, '1713', 788, 72, 2, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511115, 563, '1708', 788, 72, 0, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511116, 571, '#include <i o stream>\r\nusing namespace std;\r\n\r\nint pow(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 0;\r\nreturn x* pow(x,y_1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\n c in>>\"x\">>\"y\";\r\nc out<<\"pow(x,y)\";\r\nc out<<end l;\r\nsystem (\"pause\");\r\n}', 788, 72, 1, '2019-05-13 09:43:09', '2019-05-21 11:01:00'),
(511117, 572, '1728', 788, 72, 2, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511118, 573, '1735', 788, 72, 0, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511119, 475, '1383', 788, 72, 2, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511120, 561, '1701', 788, 72, 0, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511121, 467, '1354', 788, 72, 0, '2019-05-13 09:43:09', '2019-05-13 09:43:09'),
(511122, 569, '#include <i o stream>\r\nusing namespace std; \r\nint main ()\r\n{\r\nc in>>n     \r\nc out<<\"enter a non-negative integer:\";\r\nc out<<\"the integer you entered is negative.\"<<end l;\r\nc out<<\"enter a non-negative integer:\";\r\n}', 788, 72, 0, '2019-05-13 09:43:09', '2019-05-21 11:01:00'),
(511123, 574, '#include <i o stream>\r\nusing namespace std;\r\nlong long fact(int x);\r\n{\r\nif(x==0)\r\nreturn 1;\r\nreturn x*fact(x_1);\r\n}\r\nint main()\r\n{\r\nint x;\r\nc in>>x;\r\nc out<<(fact x); \r\nc out<<end l;\r\nsystem (\"pause\");\r\n}', 788, 72, 1, '2019-05-13 09:43:09', '2019-05-21 11:01:00'),
(511234, 564, '1713', 921, 72, 2, '2019-05-13 09:43:33', '2019-05-13 09:43:34'),
(511235, 563, '1708', 921, 72, 0, '2019-05-13 09:43:33', '2019-05-13 09:43:34'),
(511236, 571, 'int power(int x,int y){\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*power(x,y-1);\r\n}', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-21 11:01:50'),
(511237, 572, '1728', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(511238, 573, '1734', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(511239, 475, '1383', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(511240, 561, '1700', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(511241, 467, '1355', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-13 09:43:34'),
(511242, 569, 'int n;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\ndo{\r\n   if(n<0){\r\ncout<<\"The integer you entered is negative.\"<<endl;\r\ncout<<\"Enter a non-negative integer:\";\r\n    cin>>n;\r\n   }\r\n\r\n\r\n}while(n<0);', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-21 11:01:50'),
(511243, 574, 'int  fact(int n){\r\nint f=1;\r\nfor(int i=1;i<=n;i++){\r\nf=f*i;\r\n\r\n}\r\nreturn  f;\r\n}', 921, 72, 2, '2019-05-13 09:43:34', '2019-05-21 11:01:50'),
(511254, 564, '1712', 923, 72, 0, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511255, 563, '1711', 923, 72, 2, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511256, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nif(y==0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n{\r\nreturn x*(power(x,y-1));\r\n}\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y)<<endl;\r\n}', 923, 72, 2, '2019-05-13 09:43:35', '2019-05-21 11:03:45'),
(511257, 572, '1729', 923, 72, 0, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511258, 573, '1735', 923, 72, 0, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511259, 475, '1383', 923, 72, 2, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511260, 561, '1700', 923, 72, 2, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511261, 467, '1355', 923, 72, 2, '2019-05-13 09:43:35', '2019-05-13 09:43:35'),
(511262, 569, '#include<iostream>\r\nusing name space std;\r\nint main()\r\ncout<<\"Enter a non-negative integer: \";\r\nwhile(n<0)\r\nif(n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" <<endl;\r\n}\r\nelse\r\n{\r\ncout<<\"Enter a non-negative integer:\";<<endl;\r\n}', 923, 72, 0, '2019-05-13 09:43:35', '2019-05-21 11:03:45'),
(511263, 574, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int n) \r\n{\r\nint f=1;\r\nfor(int i=0;i<=n;i++)\r\nreturn f*i;\r\n}\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n)<<endl;\r\n}', 923, 72, 0, '2019-05-13 09:43:35', '2019-05-21 11:03:45'),
(511324, 564, '1713', 781, 72, 2, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511325, 563, '1708', 781, 72, 0, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511326, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1);\r\n} \r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\ncout<<endl;\r\nsystem(\"pause\");\r\n\r\n\r\n}', 781, 72, 2, '2019-05-13 09:43:51', '2019-05-21 11:04:58'),
(511327, 572, '1728', 781, 72, 2, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511328, 573, '1735', 781, 72, 0, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511329, 475, '1384', 781, 72, 0, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511330, 561, '1701', 781, 72, 0, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511331, 467, '1354', 781, 72, 0, '2019-05-13 09:43:51', '2019-05-13 09:43:51'),
(511332, 569, 'int n;\r\n  cout<<\"Enter a non-negative integer:\";\r\n         cin>>n;\r\ndo\r\n{\r\ncout<<\"The integer you entered is negative \"<<endl;\r\ncout<<\"Enter a non -negative integer:\";\r\ncin>>n;\r\n}\r\nwhile(n<0)\r\n}', 781, 72, 1, '2019-05-13 09:43:51', '2019-05-21 11:04:58'),
(511333, 574, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nlong long x,f=1;\r\ncin>>x;\r\nfor(int i=x;i>=1;i--)\r\nf*=i;\r\ncout<<f;\r\ncout<<endl;\r\nsystem(\"pause\");\r\n}', 781, 72, 1, '2019-05-13 09:43:51', '2019-05-21 11:04:58'),
(511564, 564, '1713', 782, 72, 2, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511565, 563, '1711', 782, 72, 2, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511566, 571, '#include <iostream>\r\nusing namespace std;\r\ndouble power(double y, int x)\r\n{\r\nint p=1;\r\nfor( int i=1;i<y;i++)\r\nreturn p*=x;\r\n}\r\nvoid main()\r\nint x,y;\r\ncin>>x>>y;\r\ncout|<<\"the number of power\";', 782, 72, 0, '2019-05-13 09:45:03', '2019-05-21 11:05:44'),
(511567, 572, '1728', 782, 72, 2, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511568, 573, '1735', 782, 72, 0, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511569, 475, '1383', 782, 72, 2, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511570, 561, '1701', 782, 72, 0, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511571, 467, '1355', 782, 72, 2, '2019-05-13 09:45:03', '2019-05-13 09:45:04'),
(511572, 569, '#include <iostream>\r\nusing namespace std;\r\n{\r\nvoid main()\r\nwhile\r\n{\r\nint n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\nif (n<0)\r\ndo\r\n\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\nwhile (n>0)\r\n}', 782, 72, 0, '2019-05-13 09:45:03', '2019-05-21 11:05:44'),
(511573, 574, '#include <iostream>\r\nusing namespace std;        \r\n{\r\n        int fact(int n);\r\n\r\nint f=1;\r\nfor(int i=1;1<=n;i++)  \r\nreturn f*=i\r\n}\r\nvoid main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<f;\r\n\r\n}', 782, 72, 0, '2019-05-13 09:45:03', '2019-05-21 11:05:44'),
(511642, 564, '1713', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511643, 563, '1711', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511644, 571, '#include<iostream>\r\nusing namespace std;\r\nint power ( int a , int b )\r\n{\r\nint temb =1;\r\n\r\nif (b==0)\r\nreturn  1;\r\ntemb = power ( a , b /2 );\r\nif ( a % 2 == 2 )\r\nreturn (temb * temb) ;\r\n}\r\nint main()\r\n\r\n{\r\nint x , y ;\r\ncin>>x;\r\ncin>>y;\r\n\r\ncout<<power(x,y) ;\r\nsystem(\"pause\"\')\r\n\r\n}', 837, 72, 1, '2019-05-13 09:45:26', '2019-05-21 11:08:52'),
(511645, 572, '1728', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511646, 573, '1734', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511647, 475, '1383', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511648, 561, '1700', 837, 72, 2, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511649, 467, '1356', 837, 72, 0, '2019-05-13 09:45:26', '2019-05-13 09:45:26'),
(511650, 569, '#include<iostream>\r\nusing namespace std; \r\nint main()\r\nint n;\r\ndo while ( n<1)\r\n\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 837, 72, 0, '2019-05-13 09:45:26', '2019-05-21 11:08:52'),
(511651, 574, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\nint n, fact=1;\r\ncout<<\"enter the namber\";\r\ncin>>n;\r\nfor(int i=1;i<n;i++)\r\n{\r\nfact = fact * i ;\r\n}\r\n cout<<fact;', 837, 72, 1, '2019-05-13 09:45:26', '2019-05-21 11:08:52'),
(511652, 564, '1713', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511653, 563, '1710', 885, 72, 0, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511654, 571, 'int pow(intn)\r\n{\r\nif(n==0)\r\n\r\nreturn 1;\r\n\r\n}\r\nreturn n*pow(n-1);\r\n\r\n}', 885, 72, 0, '2019-05-13 09:45:27', '2019-05-21 11:09:20'),
(511655, 572, '1728', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511656, 573, '1734', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511657, 475, '1383', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511658, 561, '1700', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511659, 467, '1355', 885, 72, 2, '2019-05-13 09:45:27', '2019-05-13 09:45:27'),
(511660, 569, 'do{\r\ncout<<the integer negative;\r\ncout<<enter\r\ncin>>n;\r\nwhile(n<0); \r\n}', 885, 72, 0, '2019-05-13 09:45:27', '2019-05-21 11:09:20'),
(511661, 574, 'int  f(intx) \r\n{\r\n\r\nif(x==0)\r\n\r\n{ return 1;\r\n\r\n}\r\n\r\nelse{\r\n\r\n return (x)*(x-1);\r\n\r\n\r\n]', 885, 72, 0, '2019-05-13 09:45:27', '2019-05-21 11:09:20'),
(511825, 564, '1712', 1053, 72, 0, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511826, 563, '1711', 1053, 72, 2, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511827, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nint i, power=1;\r\nif(y==0)\r\nreturn 1;\r\nfor(i=1;i<=y;i++)\r\npower =power*x\r\nreturn power;\r\n}\r\nint main()\r\nint x;\r\nint y;\r\ncout<<\"x=\"<<x<endl;\r\ncout<<\"y=\"<<y<<endl;\r\ncout<<\"x power y=\"<<power<<endl;\r\nretrun 0;\r\n}', 1053, 72, 1, '2019-05-13 09:46:00', '2019-05-21 11:10:59'),
(511828, 572, '1730', 1053, 72, 0, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511829, 573, '1735', 1053, 72, 0, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511830, 475, '1383', 1053, 72, 2, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511831, 561, '1700', 1053, 72, 2, '2019-05-13 09:46:00', '2019-05-13 09:46:01'),
(511832, 467, '1355', 1053, 72, 2, '2019-05-13 09:46:01', '2019-05-13 09:46:01'),
(511833, 569, 'int n;\r\ncout<< \"enter a non-negative integer:\";', 1053, 72, 0, '2019-05-13 09:46:01', '2019-05-21 11:10:59'),
(511834, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact (int n)\r\n{\r\nint x;\r\nint y;\r\ncout<<\"Enter a number to calculate the factorial\"', 1053, 72, 0, '2019-05-13 09:46:01', '2019-05-21 11:10:59'),
(512179, 564, '1712', 857, 72, 0, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512180, 563, '1708', 857, 72, 0, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512181, 571, 'include<iostream>\r\nusing name space std ;\r\n\r\nint power (int x,int y)\r\nif (y==0)\r\nreturn 0;\r\nelse\r\nreturn x*power(x,--y);', 857, 72, 1, '2019-05-13 09:46:54', '2019-05-21 11:14:00'),
(512182, 572, '1728', 857, 72, 2, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512183, 573, '1735', 857, 72, 0, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512185, 475, '1385', 857, 72, 0, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512188, 561, '1700', 857, 72, 2, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512191, 467, '1357', 857, 72, 0, '2019-05-13 09:46:54', '2019-05-13 09:46:54'),
(512194, 569, 'include<iostream>\r\nusing name space std ;\r\nint main ( )  \r\ndo\r\n{\r\n       cout << \"The integer you entered is negative.\" << endl;  \r\n                                   cout << \"Enter a non-negative integer: \";  \r\n                                                            cin >> n;\r\n}\r\nwhile(n<0)', 857, 72, 1, '2019-05-13 09:46:54', '2019-05-21 11:14:00'),
(512197, 574, 'include<iostream>\r\nusing name space std ;\r\nint fact ( int n)\r\nint f =1;\r\nfor(int i=n;i>0;i--)\r\n{\r\n       f*=i ;     \r\n}\r\nint main ( )\r\ncout<<fact(4);', 857, 72, 1, '2019-05-13 09:46:54', '2019-05-21 11:14:00'),
(512408, 564, '1712', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-13 09:47:13'),
(512409, 563, '1711', 776, 72, 2, '2019-05-13 09:47:13', '2019-05-13 09:47:13'),
(512410, 571, 'int n()\r\n{\r\nint p=1;\r\nint x,y; \r\ncin>>x>>y;\r\nfor(int i=0;i<y;i++)\r\n{\r\np*=x;\r\n\r\nif(x>0 &&y>0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n{\r\nreturn 0;\r\n}\r\n}\r\nint main()\r\n{\r\nint z=n()\r\ncout<<z;\r\nreturn 0;\r\n              }', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-21 11:16:36'),
(512411, 572, '1728', 776, 72, 2, '2019-05-13 09:47:13', '2019-05-13 09:47:13'),
(512412, 573, '1734', 776, 72, 2, '2019-05-13 09:47:13', '2019-05-13 09:47:13'),
(512413, 475, '1385', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-13 09:47:13'),
(512414, 561, '1702', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-13 09:47:14'),
(512415, 467, '1357', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-13 09:47:14'),
(512416, 569, 'do()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<n;\r\n}\r\nwhile(n<0);\r\n{\r\n\r\n}', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-21 11:16:36'),
(512417, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid n();\r\n{\r\nint f=1;\r\nint x;\r\ncin>>x;\r\nfor(int i=0;i<x;i++)\r\n{\r\nf*=i;\r\n}\r\n}\r\nint main()\r\n{\r\nn();\r\nreturn 0;\r\n}', 776, 72, 0, '2019-05-13 09:47:13', '2019-05-21 11:16:36'),
(512458, 564, '1713', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512459, 563, '1709', 784, 72, 0, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512460, 571, '#include<iostream>\r\n    using namespace std;\r\nint  power(int x , int c)\r\n{\r\n     if (c==0)\r\n         return 1; \r\n      else\r\n        return x*power(x,c-1) \r\n}\r\n    int main()\r\n{\r\nint n,p;\r\ncout<<\"enter the number  \\n\";\r\ncin>>n;\r\ncout<<\"enter thepower  \\n\";\r\ncin>>p;\r\nint z=power(n,p);\r\ncout<<\"the result is : \"<<z;\r\n\r\n\r\n\r\nsystem(\"pause\");\r\n}', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-21 11:18:49'),
(512461, 572, '1728', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512462, 573, '1734', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512463, 475, '1383', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512464, 561, '1700', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512465, 467, '1355', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-13 09:47:17'),
(512466, 569, 'int n;\r\ncout<<\"  Enter a non-negative integer  \"<<endl;\r\ncin>>n;\r\ndo \r\n{\r\nif (n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\n\r\n}while(n<=0)', 784, 72, 2, '2019-05-13 09:47:16', '2019-05-21 11:18:49'),
(512467, 574, 'int fact(int x)\r\n                              { \r\n                               if(x==0)\r\n                                    return 1;\r\n                               else if(x==1)\r\n                                     return 1;\r\n                               else if (x>1)\r\n                               {\r\n                               return  x*fact(x-1);\r\n      \r\n                              }', 784, 72, 1, '2019-05-13 09:47:16', '2019-05-21 11:18:49'),
(512638, 564, '1713', 777, 72, 2, '2019-05-13 09:47:23', '2019-05-13 09:47:23'),
(512639, 563, '1711', 777, 72, 2, '2019-05-13 09:47:23', '2019-05-13 09:47:23'),
(512640, 571, '#include<iostream> using namespace std;   int pow(x,y);{ for*int i=1;i<=y;i++){ num=num*x;} return num;}      int main(){      int x,y,num=1; cout<<\"enter the base:\":cin x;cout<<\"enter the exponent:\";cin>>y;\r\npow(x,y);  return 0;', 777, 72, 1, '2019-05-13 09:47:23', '2019-05-21 11:12:59'),
(512641, 572, '1728', 777, 72, 2, '2019-05-13 09:47:23', '2019-05-13 09:47:24'),
(512642, 573, '1733', 777, 72, 0, '2019-05-13 09:47:23', '2019-05-13 09:47:24'),
(512643, 475, '1385', 777, 72, 0, '2019-05-13 09:47:23', '2019-05-13 09:47:24'),
(512644, 561, '1702', 777, 72, 0, '2019-05-13 09:47:23', '2019-05-13 09:47:24'),
(512645, 467, '1357', 777, 72, 0, '2019-05-13 09:47:23', '2019-05-13 09:47:24'),
(512646, 569, '# include<iostream>    \r\nusing namespace std;\r\n int main()\r\n {\r\n int n;\r\n cout<<\"Enter   a non  negative:\";    \r\n  cin>>n; \r\n  do\r\n { \r\ncout<<\"The integer you entered is negative \"<<endl;\r\ncout<<\"Enter a non  negative:\"; \r\nwhile(n<0)', 777, 72, 0, '2019-05-13 09:47:23', '2019-05-21 11:12:59'),
(512647, 574, '# include<iostream>    \r\nusing namespace std;\r\n int fact(int n)\r\n{\r\n if (n==0||n==1);\r\n return 1;\r\nelse return n*fact(n-1);}\r\nint main()\r\n  { \r\nint n ;\r\n cin>>n;\r\n cout<<fact(n)<<endl;\r\n return 0;\r\n}', 777, 72, 1, '2019-05-13 09:47:23', '2019-05-21 11:12:59'),
(512728, 564, '1715', 787, 72, 0, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512729, 563, '1711', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512730, 571, '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint pow(int x,int y )\r\n\r\n{\r\n\r\nif ( y==0)\r\n\r\nreturn 1;\r\n\r\nelse return x*pow(x,y-1);\r\n\r\n}\r\n\r\nint main()\r\n\r\n{\r\n\r\nint x,y;\r\n\r\ncin>>x>>y;\r\n\r\ncout<<pow(x,y);\r\n\r\n}', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-21 11:20:31'),
(512731, 572, '1728', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512732, 573, '1735', 787, 72, 0, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512733, 475, '1385', 787, 72, 0, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512734, 561, '1700', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512735, 467, '1355', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-13 09:47:48'),
(512736, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ndo {\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\nwhile ( n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\n}', 787, 72, 0, '2019-05-13 09:47:48', '2019-05-21 11:20:32'),
(512737, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nint fact=1;\r\nfor ( int i=1;i<=x;i++)\r\nfact*=i;\r\n\r\nreturn fact;\r\n\r\n}\r\n\r\nint main()\r\n\r\n{\r\n\r\nint x;\r\ncin>>x;\r\nint z =fact(x);\r\ncout<<z<<endl;\r\n}', 787, 72, 2, '2019-05-13 09:47:48', '2019-05-21 11:20:32'),
(512818, 564, '1712', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512819, 563, '1711', 785, 72, 2, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512820, 571, '#include <iostream>\r\nusing namespace std;\r\nint p(int &x', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-21 11:15:07'),
(512821, 572, '1728', 785, 72, 2, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512822, 573, '1733', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512823, 475, '1384', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512824, 561, '1702', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512825, 467, '1355', 785, 72, 2, '2019-05-13 09:48:00', '2019-05-13 09:48:00'),
(512826, 569, '#include  <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout <<\"Enter a non-negative integer\";\r\ncin>>n;\r\ndo (n<0)\r\n{\r\n\r\ncout', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-21 11:15:07'),
(512827, 574, '#include <iostream>\r\nusing namespace std;\r\nint f(int x)\r\n{\r\nfor(int i=1;i<x;i++)\r\nx*=i;\r\n return x;\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\nint z=f(x);\r\ncout<<z;\r\n}', 785, 72, 0, '2019-05-13 09:48:00', '2019-05-21 11:15:07'),
(512838, 564, '1713', 858, 72, 2, '2019-05-13 09:48:05', '2019-05-13 09:48:05'),
(512839, 563, '1708', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-13 09:48:05'),
(512840, 571, '#include<iostream>    \r\n     using namespace std;\r\n                int power(      int x , int y )\r\n{\r\nif(y==0 && y>0)\r\nreturn 1\r\nelse\r\nreturn(x,y-1)\r\n}\r\nint main()\r\n{\r\nint x;\r\nint y;\r\ncin>>x>>y;\r\nint z=power(x,y)\r\ncout<<z;\r\nsystem(\"Pause\");\r\n}', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-21 11:21:05'),
(512841, 572, '1728', 858, 72, 2, '2019-05-13 09:48:05', '2019-05-13 09:48:05'),
(512842, 573, '1733', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-13 09:48:05'),
(512843, 475, '1385', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-13 09:48:05'),
(512844, 561, '1701', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-13 09:48:06'),
(512845, 467, '1355', 858, 72, 2, '2019-05-13 09:48:05', '2019-05-13 09:48:06'),
(512846, 569, 'the integar you  enterd is negative -3\r\n-3-2-1', 858, 72, 0, '2019-05-13 09:48:05', '2019-05-21 11:21:05'),
(512847, 574, '#include<iostream>\r\nusing namespacs std;\r\nint main()\r\n{\r\nint fact=1;\r\nint n;\r\ncin>>n;\r\nfor(int i=0;i<=n;i++)\r\nfact=fact*i;\r\ncout<<fact;\r\nsystem(\"Pause\");\r\n}', 858, 72, 1, '2019-05-13 09:48:05', '2019-05-21 11:21:05'),
(512868, 564, '1713', 867, 72, 2, '2019-05-13 09:48:11', '2019-05-13 09:48:12'),
(512869, 563, '1711', 867, 72, 2, '2019-05-13 09:48:11', '2019-05-13 09:48:12'),
(512870, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x, inty)\r\n{\r\nif (y==0)\r\nreturn 1 ;\r\nreturn x*pow(x,y-1)\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\nsystem(\"pause\");\r\n}', 867, 72, 2, '2019-05-13 09:48:11', '2019-05-16 13:24:46'),
(512871, 572, '1728', 867, 72, 2, '2019-05-13 09:48:11', '2019-05-13 09:48:12'),
(512872, 573, '1733', 867, 72, 0, '2019-05-13 09:48:11', '2019-05-13 09:48:12'),
(512873, 475, '1384', 867, 72, 0, '2019-05-13 09:48:11', '2019-05-13 09:48:12'),
(512874, 561, '1702', 867, 72, 0, '2019-05-13 09:48:12', '2019-05-13 09:48:12'),
(512875, 467, '1355', 867, 72, 2, '2019-05-13 09:48:12', '2019-05-13 09:48:12'),
(512876, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout<<\"enter a non _negative number \";\r\ncin>>n;\r\nwhile(n<0)\r\n{\r\ncout<<\"the integer you entered is negative\"<<endl;\r\n}\r\ndo\r\n{\r\ncout<<\"enter a non-negative integer:\";\r\n}\r\ncin>>n;', 867, 72, 0, '2019-05-13 09:48:12', '2019-05-16 13:24:46'),
(512877, 574, '#include <iostream>\r\nusing namespace std;\r\nint fac(int n)=0;\r\n{\r\n     cin>>n;\r\n    fac*=fac n (n-1);\r\n}\r\nint main()', 867, 72, 0, '2019-05-13 09:48:12', '2019-05-16 13:24:46'),
(512923, 564, '1715', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512924, 563, '1711', 1229, 72, 2, '2019-05-13 09:48:16', '2019-05-13 09:48:17');
INSERT INTO `stud_ques_ans_choices` (`id`, `question_id`, `choice`, `student_id`, `exam_id`, `point`, `created_at`, `updated_at`) VALUES
(512925, 571, '#inculde <iostream>;\r\nusing namespace std;\r\nint x;\r\nlong long powr \r\ncout<<\"please enter the postive\"Endl;\r\ncin>>x;', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-21 12:00:13'),
(512926, 572, '1728', 1229, 72, 2, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512927, 573, '1735', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512928, 475, '1383', 1229, 72, 2, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512929, 561, '1700', 1229, 72, 2, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512930, 467, '1356', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-13 09:48:17'),
(512931, 569, 'int n;\r\ncout<<\"please enter a non negative integer\";\r\nwhile(n<0);', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-21 12:00:13'),
(512932, 574, '#inculde <iostream>;', 1229, 72, 0, '2019-05-13 09:48:16', '2019-05-21 12:00:13'),
(512963, 564, '1713', 779, 72, 2, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512964, 563, '1709', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512965, 571, '#include <iostream>\r\nusing namespace', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-21 12:09:23'),
(512966, 572, '1728', 779, 72, 2, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512967, 573, '1734', 779, 72, 2, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512968, 475, '1384', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512969, 561, '1702', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512970, 467, '1357', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-13 09:48:18'),
(512971, 569, '#include <iostream>\r\nusing namespace std;\r\nint main ()\r\n{\r\nintn;\r\ncout <<\"enter a non-negative integer:\";\r\ncin n;\r\ndo', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-21 12:09:23'),
(512972, 574, '#include <iostream>\r\nusing namespace std;\r\nvoid fact()\r\n\r\n{\r\ncout <<\"fact is\";\r\n  }\r\nint main()\r\n}\r\nint x,fact=1;\r\nfor (i=1; i<x;i--)\r\n\r\ncin<<x;\r\nfact*=i;\r\ncout <<fact;\r\nfact ();\r\n}', 779, 72, 0, '2019-05-13 09:48:18', '2019-05-21 12:09:23'),
(513135, 564, '1715', 783, 72, 0, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513136, 563, '1708', 783, 72, 0, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513137, 571, '#include <iostream>\r\nusing namespace std;\r\nint m(int a ,int b )\r\n{\r\nif(y==0)\r\n{\r\nreturn 1 ;\r\n}\r\nelse\r\n{\r\nreturn x*m(x,y-1);\r\n}\r\n}\r\nint main ()\r\n{\r\nint x , y,z ;\r\ncout<<\" number\";\r\ncin>>x;\r\ncout<<\" power\";\r\ncin>>y;\r\nz=m(x,y);\r\ncout<<z;\r\n\r\n}', 783, 72, 1, '2019-05-13 09:48:26', '2019-05-21 11:19:47'),
(513138, 572, '1728', 783, 72, 2, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513139, 573, '1735', 783, 72, 0, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513140, 475, '1384', 783, 72, 0, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513141, 561, '1700', 783, 72, 2, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513142, 467, '1355', 783, 72, 2, '2019-05-13 09:48:26', '2019-05-13 09:48:26'),
(513143, 569, '#include <iostream>\r\nusing namespace std;  \r\nint main ()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\n{\r\ndo\r\n{\r\ncin >> n;\r\n}\r\nwhile (n<0 )\r\ncin >> n;\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n}', 783, 72, 0, '2019-05-13 09:48:26', '2019-05-21 11:19:47'),
(513144, 574, '#include <iostream>\r\nusing namespace std;  \r\nint (int a)\r\n{\r\nint factorial = 1;\r\nfor(int i=1;i<=x;i++)\r\n{\r\nfactorial=factorial*i;\r\n}\r\ncout<<factorial;\r\n}\r\nint main ()\r\n{\r\nint x ;\r\ncin>>x;\r\na(x);\r\n}', 783, 72, 1, '2019-05-13 09:48:26', '2019-05-21 11:19:47'),
(513183, 564, '1715', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513184, 563, '1709', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513185, 571, '#include<iostream>\r\nusing namespace std;\r\nvoid power(int x,int y)\r\n{  int x,y;\r\n      cin>>x>>y;\r\nif(y==0)\r\nreturn 1;\r\nreturn x*power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint a,b;\r\ncin>|>a>>b;\r\nint z=power(a,b);\r\ncout<<z; \r\nsystem(\"pause\");\r\n}', 775, 72, 2, '2019-05-13 09:48:32', '2019-05-21 12:46:54'),
(513186, 572, '1728', 775, 72, 2, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513187, 573, '1735', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513188, 475, '1383', 775, 72, 2, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513189, 561, '1701', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513190, 467, '1355', 775, 72, 2, '2019-05-13 09:48:32', '2019-05-13 11:56:12'),
(513191, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n     int n;\r\ncout<< \"Enter a non negative integer:\";\r\ncin>>n;\r\ndo\r\n{\r\ncout<<The integer  you entered is negative .\"<<endl;\r\ncout<<\"Enter a non negative integer :\";\r\ncin>>n;\r\nwhile (n<0);\r\nsystem (\"pause\");\r\n}', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-21 12:46:54'),
(513192, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid fact(int x);\r\n{\r\n     int x;\r\ncin>>x;\r\nif (x<3)\r\nreturn 1;\r\nreturn x*fact(x-1 );\r\n}\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\nint z=fact (x);\r\ncout<<z;\r\nsystem (\"pause \");\r\n}', 775, 72, 0, '2019-05-13 09:48:32', '2019-05-21 12:46:54'),
(513279, 564, '1713', 792, 72, 2, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513280, 563, '1708', 792, 72, 0, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513281, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x , int y)\r\n{\r\nif (y==0)\r\nreturn 1;\r\nelse\r\nreturn x*power(x,y-1);\r\n}   \r\nint main()\r\n{\r\nint x , y ;\r\ncin>>x>>y;\r\ncout <<power(x,y);\r\n\r\n\r\n}', 792, 72, 2, '2019-05-13 09:48:42', '2019-05-21 12:19:26'),
(513282, 572, '1728', 792, 72, 2, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513283, 573, '1735', 792, 72, 0, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513284, 475, '1383', 792, 72, 2, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513285, 561, '1700', 792, 72, 2, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513286, 467, '1354', 792, 72, 0, '2019-05-13 09:48:42', '2019-05-13 09:48:42'),
(513287, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n; \r\ndo while (n<0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}', 792, 72, 0, '2019-05-13 09:48:42', '2019-05-21 12:19:27'),
(513288, 574, '#include <iostream>\r\nusing namespace std ;\r\nint main()\r\n{\r\nint x , f=1;\r\ncin>>x;\r\nfor (int i=x ;i>=1;i-- )\r\n{\r\nf*=i;\r\n}\r\ncout<<f;\r\n}', 792, 72, 1, '2019-05-13 09:48:42', '2019-05-21 12:19:27'),
(513289, 564, '1713', 795, 72, 2, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513290, 563, '1709', 795, 72, 0, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513291, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x , int y )\r\n{\r\n        if(y==0)\r\n            return 1;\r\n        else\r\n            return x * power(x , y-1 );\r\n}\r\nint main()\r\n{\r\n        int x , y ;\r\n        cin>>x>>y;\r\n        cout<<power(x , y )<<endl;\r\n}', 795, 72, 2, '2019-05-13 09:48:44', '2019-05-21 12:23:00'),
(513292, 572, '1728', 795, 72, 2, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513293, 573, '1733', 795, 72, 0, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513294, 475, '1383', 795, 72, 2, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513295, 561, '1701', 795, 72, 0, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513296, 467, '1357', 795, 72, 0, '2019-05-13 09:48:44', '2019-05-13 09:48:44'),
(513297, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while (n < 0)', 795, 72, 1, '2019-05-13 09:48:44', '2019-05-21 12:23:00'),
(513298, 574, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n        int n , fact =1;\r\n        cin>>n;\r\n        for(int i=1; i<=n; i++)\r\n        {\r\n                fact*=i;\r\n        }\r\n        cout<<fact<<endl;\r\n}', 795, 72, 1, '2019-05-13 09:48:44', '2019-05-21 12:23:00'),
(513569, 564, '1713', 1230, 72, 2, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513570, 563, '1711', 1230, 72, 2, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513571, 571, '.', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-21 12:23:35'),
(513572, 572, '1729', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513573, 573, '1733', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513574, 475, '1382', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513575, 561, '1700', 1230, 72, 2, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513576, 467, '1354', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-13 09:49:16'),
(513577, 569, 'int n;\r\ncout <<\"1:\";\r\ncin >>n\r\nwhile (n<0)\r\n{\r\ncout <<\"0\" <<endl;\r\ncout <<\"1\";\r\ncin >>n;\r\n}', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-21 12:23:35'),
(513578, 574, '.', 1230, 72, 0, '2019-05-13 09:49:15', '2019-05-21 12:23:35'),
(513699, 564, '1713', 791, 72, 2, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513700, 563, '1708', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513701, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(x,y){\r\nif(x==0)return 1;\r\nelse return x*power(x*y-1)\r\n}\r\nint main ( ){\r\nint x=x*+1;\r\nint y=y*+1;\r\ncin >>x>>y;\r\nint c=power(x,y);\r\ncout<<c;\r\nreturn 0;\r\n}', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-21 12:24:14'),
(513702, 572, '1728', 791, 72, 2, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513703, 573, '1733', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513704, 475, '1383', 791, 72, 2, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513705, 561, '1702', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513706, 467, '1356', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-13 09:49:24'),
(513707, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n do \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\nwhile (n<0);\r\n}', 791, 72, 0, '2019-05-13 09:49:24', '2019-05-21 12:24:14'),
(513708, 574, 'int                         int fact(n)\r\n{\r\nint f;\r\nfor(int i=1;i<n;i++)\r\nf*=n-1;\r\nreturn f;\r\nint main(){\r\nint n;\r\ncin>>n;\r\nint f=fact(n);\r\ncout<<f;\r\n}', 791, 72, 1, '2019-05-13 09:49:24', '2019-05-21 12:24:14'),
(513882, 564, '1713', 778, 72, 2, '2019-05-13 09:49:42', '2019-05-13 09:49:42'),
(513883, 563, '1708', 778, 72, 0, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513884, 571, '#include<iostream>\r\nusing namespace std;', 778, 72, 0, '2019-05-13 09:49:42', '2019-05-21 12:24:48'),
(513885, 572, '1728', 778, 72, 2, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513886, 573, '1734', 778, 72, 2, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513887, 475, '1385', 778, 72, 0, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513888, 561, '1701', 778, 72, 0, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513889, 467, '1355', 778, 72, 2, '2019-05-13 09:49:42', '2019-05-13 09:49:43'),
(513890, 569, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ndo\r\n{\r\ncout<<\"the integer you entered is negative.\"<,endl;\r\n\r\nwhile(n<0)\r\n}\r\ncout<<\"entered a non-negative integer:\";', 778, 72, 0, '2019-05-13 09:49:42', '2019-05-21 12:24:48'),
(513891, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid fact(  )\r\n{\r\nint fact=1;\r\nint x;\r\ncin>>x;\r\nfor(int i=1;i<=x;i++) \r\nfact=fact*i;\r\ncout<fact;\r\n}\r\nint main()\r\n{\r\nfact();\r\n}\r\nreturn 0;', 778, 72, 2, '2019-05-13 09:49:42', '2019-05-21 12:24:48'),
(514027, 564, '1713', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514028, 563, '1711', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514029, 571, '#include<iostream>\r\nusing namespace std;\r\nint pow(int x , int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*pow(x,y-1);\r\n}\r\nint main ()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\ncout<<endl;\r\nreturn 0;\r\n}', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-21 12:15:31'),
(514030, 572, '1728', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514031, 573, '1734', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514032, 475, '1383', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514033, 561, '1702', 770, 72, 0, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514034, 467, '1355', 770, 72, 2, '2019-05-13 09:50:03', '2019-05-13 09:50:04'),
(514035, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}while(n<0)', 770, 72, 1, '2019-05-13 09:50:03', '2019-05-21 12:15:31'),
(514036, 574, '#include<iostream>\r\nusing namespace std;\r\nlong long fact(int x)\r\n{\r\nif(x==0)\r\nreturn 1;\r\nelse\r\nint fac=1;\r\nfor(int i=1 ; i<x ; i++)\r\nreturn fac=fac*i;\r\n}                                      \r\nint main ()\r\n{\r\nint m;\r\ncin>>m;\r\ncout<<fact(x);\r\ncout<<endl;\r\n}', 770, 72, 0, '2019-05-13 09:50:03', '2019-05-21 12:15:31'),
(514167, 564, '1713', 794, 72, 2, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514168, 563, '1708', 794, 72, 0, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514169, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint a,b;\r\ncin>>a>>b;\r\nint c=power(a,b)\r\ncout<<c;\r\ncout<<endl;\r\nsystem(\"pause\");\r\n}', 794, 72, 1, '2019-05-13 09:50:18', '2019-05-21 12:28:54'),
(514170, 572, '1728', 794, 72, 2, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514171, 573, '1734', 794, 72, 2, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514173, 475, '1383', 794, 72, 2, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514175, 561, '1700', 794, 72, 2, '2019-05-13 09:50:18', '2019-05-13 09:50:19'),
(514177, 467, '1355', 794, 72, 2, '2019-05-13 09:50:19', '2019-05-13 09:50:19'),
(514179, 569, '#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nint n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0);\r\ncout<<endl;\r\nsystem(\"pause\r\n\r\n\r\n\r\n\r\n\");\r\n}', 794, 72, 1, '2019-05-13 09:50:19', '2019-05-21 12:28:54'),
(514181, 574, '#include <iostream>\r\nusing namespace std;\r\nint fac(int n)\r\n{\r\nint p=1;\r\nif(n==0||n==1)\r\n{\r\ncout<<1;\r\n}\r\nelse \r\nfor(int i=n;i>0;i--)\r\n{\r\np*=i;\r\n}\r\nreturn p;\r\nint main()\r\n{\r\nint x;\r\ncin>>x;\r\nint c=fac(x);\r\ncout<<c;\r\ncout<<endl;\r\n}\r\nsystem(\"pause\");\r\n}\r\n\r\n}', 794, 72, 2, '2019-05-13 09:50:19', '2019-05-21 12:28:54'),
(514187, 564, '1715', 830, 72, 0, '2019-05-13 09:50:19', '2019-05-13 09:50:19'),
(514188, 563, '1710', 830, 72, 0, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514189, 571, '#include<iostream>    \r\nusing namespace std;\r\nint  poewr(int x,int y)           \r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*power(x,---y);\r\n}\r\nvoid main()\r\n{\r\nint x,y;\r\ncin>>x>>y;\r\ncout<<power(x,y);\r\n}', 830, 72, 2, '2019-05-13 09:50:19', '2019-05-21 12:29:57'),
(514190, 572, '1728', 830, 72, 2, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514191, 573, '1734', 830, 72, 2, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514192, 475, '1385', 830, 72, 0, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514193, 561, '1700', 830, 72, 2, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514194, 467, '1355', 830, 72, 2, '2019-05-13 09:50:19', '2019-05-13 09:50:20'),
(514195, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\nint>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\" << endl;\r\ncout<< \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\nwhile(n<0)', 830, 72, 1, '2019-05-13 09:50:19', '2019-05-21 12:29:57'),
(514196, 574, '#include<iostream>\r\nusing namespace std;         \r\nint fact(int n)     \r\n{\r\nif(n==1)\r\nreturn 1;\r\nelse\r\nreturn n* fact(n-1);\r\n}\r\nvoid main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fact(n);\r\nsystem(\"pause\");\r\n}', 830, 72, 1, '2019-05-13 09:50:19', '2019-05-21 12:29:57'),
(514237, 564, '1712', 793, 72, 0, '2019-05-13 09:50:29', '2019-05-13 09:50:30'),
(514238, 563, '1710', 793, 72, 0, '2019-05-13 09:50:29', '2019-05-13 09:50:30'),
(514239, 571, '# include <iostream>\r\nusing namespace std ;\r\nint n(int x,int y)\r\n{\r\nif (y==1)\r\nreturn x;\r\nelse\r\nreturn x*n(x,y-1);\r\n\r\n}\r\nint main()\r\n{\r\nint a,b ;\r\ncin >>a>>b;\r\nn(a,b);\r\nreturn 0;\r\n}', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-21 12:31:17'),
(514240, 572, '1728', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-13 09:50:30'),
(514241, 573, '1735', 793, 72, 0, '2019-05-13 09:50:30', '2019-05-13 09:50:30'),
(514242, 475, '1383', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-13 09:50:30'),
(514243, 561, '1700', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-13 09:50:30'),
(514244, 467, '1355', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-13 09:50:30'),
(514245, 569, '# include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\ndo\r\n{\r\nint n;\r\ncout<<\"Enter anon -negative integer: \";\r\ncin>>n;\r\nwhile(n<0)\r\n{cout<<\"the integer you entered is negative.  \"<<end l;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n}\r\n}\r\nreturn 0;\r\n}', 793, 72, 0, '2019-05-13 09:50:30', '2019-05-21 12:31:17'),
(514246, 574, '# include <iostream >\r\nusing namespace std ;\r\nint m(int x)\r\n{\r\nint f=1;\r\ncin>>x;\r\nif(x==1)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\nfor(int i=1;i<=x;i++)\r\n{\r\nf=f*x;\r\n}\r\nreturn f;\r\n}\r\nint main()\r\n{\r\nint a;\r\ncin>>a;\r\nm(a);\r\nreturn 0;\r\n}', 793, 72, 2, '2019-05-13 09:50:30', '2019-05-21 12:31:17'),
(514323, 564, '1713', 831, 72, 2, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514324, 563, '1710', 831, 72, 0, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514325, 571, '#include<iostream>\r\nusing name space std;\r\ndouble pow(double x,int y){\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*pow(x,y-1);\r\n}\r\nvoid main()\r\n{\r\ndouble x;\r\nint y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);\r\n}', 831, 72, 2, '2019-05-13 09:51:26', '2019-05-21 11:17:46'),
(514326, 572, '1728', 831, 72, 2, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514327, 573, '1732', 831, 72, 0, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514328, 475, '1383', 831, 72, 2, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514329, 561, '1701', 831, 72, 0, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514330, 467, '1355', 831, 72, 2, '2019-05-13 09:51:26', '2019-05-13 09:51:27'),
(514331, 569, 'int n;\r\ncout<<\"enter anon-negative integer \";       \r\ncin>>n;\r\ndo\r\n{\r\n      cout<<\"the integer you entered is negative.\" <<    endl;\r\ncout<<\"enter anon-negative integer\" ;\r\ncin>>n;\r\n}(n<0)', 831, 72, 0, '2019-05-13 09:51:26', '2019-05-21 11:17:46'),
(514332, 574, '#include<iostream>\r\nusing namespace std;\r\n    int fact(int n)\r\n{\r\nint p=1;\r\nfor(int i=0;i<n;i++)\r\np+=i;\r\nreturn p;\r\n}\r\nint main()\r\n{\r\nint n=4;\r\ncout<<fact(4);\r\n}', 831, 72, 0, '2019-05-13 09:51:26', '2019-05-21 11:17:46'),
(514453, 564, '1713', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514454, 563, '1711', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514455, 571, '#include<iostream>\r\nusing namespace std;\r\nint m(int x, int y){\r\nif (y>=1){\r\nreturn x * m(x,y-1);\r\n}\r\nelse\r\n{return 1;\r\n}\r\n}\r\nint main(){\r\nint a,b;\r\ncout<<\"enter the number then the power\"<<endl;\r\ncin>>a>>b;\r\nint g=m(a,b);\r\ncout<<a<<\"^\"<<b<<\"= \"<<g<<endl;\r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-21 12:08:55'),
(514456, 572, '1728', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514457, 573, '1734', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514458, 475, '1383', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514459, 561, '1700', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514460, 467, '1355', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-13 09:51:35'),
(514461, 569, 'cout << \"Enter a non-negative integer: \";\r\ncin >> n;     \r\nif(n<0){\r\ndo\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n} while(n<0)   }', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-21 12:08:55'),
(514462, 574, '#include<iostream>\r\nusing namespace std;\r\nint n(int x){\r\nint m=1 ;\r\nfor(int i=1;i<=x;i++){\r\nm=m*i;\r\n}\r\nreturn m;\r\n}\r\nint main(){\r\nint a;\r\ncout<<\"enter the number\"<<endl; \r\n cin>>a;                                                                               \r\nint z= n(a);\r\ncout<<z<<endl;\r\nsystem(\"pause\");\r\nreturn 0\r\n\r\n\r\n\r\n;\r\n}', 789, 72, 2, '2019-05-13 09:51:35', '2019-05-21 12:08:55'),
(514520, 564, '1715', 769, 72, 0, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514521, 563, '1708', 769, 72, 0, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514522, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x , int y)\r\n{\r\nif (y<=0)\r\n{\r\nreturn 1 ;\r\n}\r\nreturn x * power( x , y-1)\r\n}\r\nvoid main()\r\n{\r\nint x , y ;\r\ncout <<\"Enter the number and the power : \" ;\r\ncin >>x >> y ;\r\nint z = power(x ; y);\r\ncout << \"power = \"<<z << endl ;\r\nsystem (\"pause\");\r\n}', 769, 72, 2, '2019-05-13 09:52:04', '2019-05-21 12:18:43'),
(514523, 572, '1728', 769, 72, 2, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514524, 573, '1735', 769, 72, 0, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514525, 475, '1383', 769, 72, 2, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514526, 561, '1701', 769, 72, 0, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514527, 467, '1355', 769, 72, 2, '2019-05-13 09:52:04', '2019-05-13 09:52:05'),
(514528, 569, '#included<iostream>\r\nusing namespace std ; \r\nint main()\r\n{\r\nint n ;\r\ncout << \"Enter a non_negative integer : \";\r\ncin >> n; \r\nif(n<0)\r\n{\r\ndo \r\n{\r\ncout << \" the integer you entered is negative. \"<<endl ;\r\ncout <<\"enter a non negative integer .\" <<endl ;\r\n}while(n<0);\r\n\r\n}\r\ncout << \" you enter a non negative number .\"<<endl ;\r\nsystem(\"pause\");\r\n}', 769, 72, 1, '2019-05-13 09:52:04', '2019-05-21 12:18:44'),
(514529, 574, '#include<iostream> \r\nusing namespace std; \r\nint fact(int x)\r\n{\r\nint f=1 ;\r\nfor(int i=1 ; i<= x ; i++)\r\n{\r\nf = f * i  ;\r\n}\r\nreturn f ;\r\n} \r\nint main()\r\n{\r\nint x ; \r\ncout << \"Enter an Integer : \";\r\ncin >> x ;\r\nint factorial = fact(x) ;\r\ncout << \"Factorial  \"<< x <<\" = \"<<factorial <<endl ;\r\nsystem(\"pause\");\r\n}', 769, 72, 2, '2019-05-13 09:52:04', '2019-05-21 12:18:44'),
(514530, 564, '1713', 798, 72, 2, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514531, 563, '1709', 798, 72, 0, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514532, 571, 'int p(int x,int y)           \r\n{\r\nif (y<1)\r\n{\r\nreturn 1;\r\n}\r\nreturn x*(x,y-1)\r\n}', 798, 72, 1, '2019-05-13 09:52:54', '2019-05-21 12:33:08'),
(514533, 572, '1728', 798, 72, 2, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514534, 573, '1734', 798, 72, 2, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514535, 475, '1383', 798, 72, 2, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514536, 561, '1701', 798, 72, 0, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514537, 467, '1355', 798, 72, 2, '2019-05-13 09:52:54', '2019-05-13 09:52:54'),
(514538, 569, 'do\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\nwhile (n < 0);\r\n{', 798, 72, 0, '2019-05-13 09:52:54', '2019-05-21 12:33:08'),
(514539, 574, 'int f(int x,int lengh) \r\nint fac=1;\r\n{\r\nfor(int i=0;i<lengh;i++)  \r\n{\r\nfac=fac*i;\r\n} \r\nreturn fac;\r\n\r\n}', 798, 72, 1, '2019-05-13 09:52:54', '2019-05-21 12:33:08'),
(514563, 564, '1713', 817, 72, 2, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514564, 563, '1709', 817, 72, 0, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514565, 571, 'int power(int x,int y)\r\n{if(y<0)\r\nreturn 1;\r\nelse \r\nreturn x+power(x,y-1);\r\n}\r\nint main()\r\n{cout<<power(5,5)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{', 817, 72, 1, '2019-05-13 09:53:13', '2019-05-21 12:34:06'),
(514566, 572, '1728', 817, 72, 2, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514567, 573, '1734', 817, 72, 2, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514568, 475, '1383', 817, 72, 2, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514569, 561, '1701', 817, 72, 0, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514570, 467, '1355', 817, 72, 2, '2019-05-13 09:53:13', '2019-05-13 09:53:13'),
(514571, 569, 'int n;\r\ncout<<\"enter a non _negtive integer\";\r\ncin>>n;\r\ndo\r\n{\r\ncout <<\"the integer you entered is negative \"<<endl;\r\ncout <<\"enter a non _negative integer\";\r\ncin>>n;\r\n}\r\nwhile (n<0);', 817, 72, 1, '2019-05-13 09:53:13', '2019-05-21 12:34:06'),
(514572, 574, 'int fact (int x)\r\n{\r\nf=1;\r\nfor (int i=1;i<x;i++)\r\n{\r\nf=f*i;\r\n}\r\n}\r\nint main(){\r\nint x;\r\ncin>>x;\r\ncout <<fact (3);\r\n}', 817, 72, 1, '2019-05-13 09:53:13', '2019-05-21 12:34:06'),
(514646, 563, '1708', 864, 72, 0, '2019-05-13 09:53:28', '2019-05-13 09:53:30'),
(514647, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow(int x,int y)    \r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1);\r\n}\r\nint main()\r\n{int x;\r\ncout<<\"enter a numper\";\r\ncin>>x\r\n{\r\ncout<<pow(x,y);\r\ncout<<endl;\r\n}\r\n}', 864, 72, 2, '2019-05-13 09:53:28', '2019-05-21 12:36:38'),
(514648, 572, '1728', 864, 72, 2, '2019-05-13 09:53:28', '2019-05-13 09:53:30'),
(514649, 569, NULL, 864, 72, 0, '2019-05-13 09:53:28', '2019-05-21 12:36:38'),
(514650, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nif(x==0)\r\nreturn 1;\r\nreturn x*(x-1);\r\n\r\n}\r\nint main\r\n{int x;\r\ncout<<\"enter numper\"\r\ncin>>x;\r\ncout<<fact(x);\r\n{\r\ncout<<endl;\r\n}\r\n}', 864, 72, 2, '2019-05-13 09:53:28', '2019-05-21 12:36:38'),
(514750, 564, '1713', 883, 72, 2, '2019-05-13 09:54:09', '2019-05-13 11:56:12'),
(514751, 563, '1708', 883, 72, 0, '2019-05-13 09:54:09', '2019-05-13 11:56:12'),
(514752, 571, '#includ<iostream>\r\nusing namespace std;\r\nint rec(int num,int p){\r\nif(p==0)\r\nreturn 1;\r\n}  \r\nelse\r\n{\r\nreturn num*rec(num,p-1) ;}\r\nint main (){\r\nint n,po;\r\nint ree=rec(n,po)\r\ncout<<ree<<endl;\r\nreturn 0;}', 883, 72, 2, '2019-05-13 09:54:09', '2019-05-21 12:34:56'),
(514753, 572, '1728', 883, 72, 2, '2019-05-13 09:54:09', '2019-05-13 11:56:12'),
(514754, 573, '1733', 883, 72, 0, '2019-05-13 09:54:09', '2019-05-13 11:56:12'),
(514755, 475, '1384', 883, 72, 0, '2019-05-13 09:54:09', '2019-05-13 11:56:12'),
(514756, 561, '1700', 883, 72, 2, '2019-05-13 09:54:09', '2019-05-13 11:56:13'),
(514757, 467, '1354', 883, 72, 0, '2019-05-13 09:54:09', '2019-05-13 11:56:13'),
(514758, 569, '#includ<iostream>\r\nusing namespace std;\r\nint main(){   int n;\r\n do{  \r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}      \r\nreturn 0;}', 883, 72, 0, '2019-05-13 09:54:09', '2019-05-21 12:34:56'),
(514759, 574, '#includ<iostream>\r\nusing namespace std; \r\nint fac(int num,int f=1){\r\nfor(int i=num;i>0;i--){\r\n f*=num;\r\n}\r\ncout<<f;\r\n}  \r\nint main (){\r\nint n;\r\ncin>>n;\r\nfac(n);\r\ncout<<endl;\r\n\r\nreturn 0;}', 883, 72, 1, '2019-05-13 09:54:09', '2019-05-21 12:34:57'),
(514929, 564, '1713', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514930, 563, '1711', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514931, 571, 'int power (int x,int y)\r\n    {\r\n     if(y==0)\r\n{\r\nreturn 1;\r\n}\r\nelse\r\n   {\r\n         return x*power(x,(y-1));\r\n}\r\n}', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-21 12:37:53'),
(514932, 572, '1728', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514933, 573, '1735', 891, 72, 0, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514934, 475, '1383', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514935, 561, '1700', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514936, 467, '1355', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-13 09:56:37'),
(514937, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo{\r\nif(n>0)\r\n{\r\nbreak;\r\n}\r\nelse\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\n}while(n<0);', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-21 12:37:53'),
(514938, 574, 'int fact(int n)\r\n    {  \r\n              int f=1;\r\n\r\n        if(n==0)\r\n{\r\n      return f\r\n}\r\n               \r\n                  for(int i=1;i<=n;i++)\r\n                  {\r\n                                 f*=i;\r\n                      }\r\n   return f;\r\n}', 891, 72, 2, '2019-05-13 09:56:37', '2019-05-21 12:37:53'),
(514939, 564, '1713', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514940, 563, '1711', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514941, 571, '#INCLUDE<IOSTREAM>\r\nUSING NAMESPACE STD;\r\nINT REC(INT X,INT Y)\r\n{\r\nINT POW=1;\r\nIF(Y==0)\r\nRETURN 0;\r\nPOW=X^Y<<ENDL;\r\n}\r\nINT MAIN()    \r\n{\r\nINT X,Y;\r\nCIN>>X>>Y;   \r\nCOUT<<X<<\"^\"<<Y<<\"=\"<<X^Y;   \r\nSYSTEM(\"PAUSE\");\r\n}', 786, 72, 0, '2019-05-13 09:56:58', '2019-05-21 12:39:19'),
(514942, 572, '1728', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514943, 573, '1734', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514944, 475, '1383', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514945, 561, '1700', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514946, 467, '1355', 786, 72, 2, '2019-05-13 09:56:58', '2019-05-13 09:56:59'),
(514947, 569, '#INCLUDE<IOSTREM>\r\nUSING NAMESPACE STD; \r\nINT MAIN()\r\n{\r\nINT NUM;\r\nCOUT<<\"ENTER NUMBER\"; \r\nCIN>>NUM;\r\nDO(N<0)\r\n{\r\nWHILE(NUM<0)\r\n{\r\nCOUT<<\"YOU ENTER NEGATIVE NUM\"<<ENDL;\r\nELSE\r\nCOUT<<\"UOU ENTERED NON NEGATIVE\";\r\n}\r\n}\r\nSYSTEM(\"PAUSE\");\r\n}', 786, 72, 0, '2019-05-13 09:56:58', '2019-05-21 12:39:19'),
(514948, 574, '#INCLUDE<IOSTREAM>\r\nUSING NAMESPACE STD;\r\nINT FACT(INT X)\r\n{\r\nFOR(INT I=1;I<N;I++)\r\n{\r\nIF(X==0)\r\nRETURN 0;\r\nIF(X==1)\r\nRETURN 1;\r\nFACT*=I;\r\n}\r\n}\r\nINT MAIN()\r\n{\r\nINT NUM ;\r\nINT FACT=1;\r\nCOUT<<\"ENTER NUMBER\";   \r\nCIN>>NUM;\r\n\r\n\r\nN();\r\n\r\n\r\nSYSTEM(\"PAUSE\");\r\nRETURN O;\r\n}', 786, 72, 0, '2019-05-13 09:56:58', '2019-05-21 12:39:19'),
(514969, 564, '1713', 752, 72, 2, '2019-05-13 09:58:17', '2019-05-13 09:58:18'),
(514970, 563, '1708', 752, 72, 0, '2019-05-13 09:58:17', '2019-05-13 09:58:18'),
(514971, 571, 'int pow(int x,int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nreturn x*pow(x,y-1)\r\n}\r\nint main;\r\n{                                                                                                            \r\nint x,y;\r\ncin>>x>>y;\r\ncout<<pow(x,y);       \r\n}', 752, 72, 2, '2019-05-13 09:58:18', '2019-05-21 12:41:10'),
(514972, 572, '1728', 752, 72, 2, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(514973, 573, '1734', 752, 72, 2, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(514974, 475, '1382', 752, 72, 0, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(514975, 561, '1701', 752, 72, 0, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(514976, 467, '1355', 752, 72, 2, '2019-05-13 09:58:18', '2019-05-13 09:58:18'),
(514977, 569, 'int n;\r\ncout<<\"Enter a non-negative integer.\";\r\ncin>>n;\r\ndo{\r\ncout<<\"The integer you entered is negative.\"<,endl;\r\ncout<<\"Enter a non-negative integer: \";\r\ncin>>n;\r\n}\r\nwhile(n<0)', 752, 72, 1, '2019-05-13 09:58:18', '2019-05-21 12:41:10'),
(514978, 574, 'long int factorial (int n);\r\nvoid main()\r\n{\r\nint n;\r\ncout<<\"Enter s number\";\r\ncin>>n;\r\ncout<<\"Factorial of <<n<<\" is \"<<factorial(n);\r\n}\r\nlong int factorial (int n)\r\n{\r\nif (n<=1)\r\nreturn 1;\r\nelse\r\nn=n*factorial(n-1)\r\nreturn n;\r\n}', 752, 72, 1, '2019-05-13 09:58:18', '2019-05-21 12:41:10'),
(514999, 564, '1712', 827, 72, 0, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515000, 563, '1708', 827, 72, 0, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515001, 571, '#include <iostream>\r\nusing namespace std;\r\nint pow (int x,int y)\r\n{\r\nint x,y;\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn x*pow(x,y-1);\r\n}\r\nint main()\r\n{\r\nint x,y;\r\ncout<<\"Enter tow number\";\r\ncin>>x>>y;\r\ncout<<\"the pow=\"<<pow(x,y)<<endl;\r\nsystem (\"pause\");\r\n}', 827, 72, 2, '2019-05-13 09:58:48', '2019-05-21 12:41:49'),
(515002, 572, '1728', 827, 72, 2, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515003, 573, '1735', 827, 72, 0, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515004, 475, '1383', 827, 72, 2, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515005, 561, '1700', 827, 72, 2, '2019-05-13 09:58:48', '2019-05-13 09:58:50'),
(515006, 467, '1355', 827, 72, 2, '2019-05-13 09:58:49', '2019-05-13 09:58:50'),
(515007, 569, 'do     \r\n{\r\ncout<<\"the integer you entered is negative.\"<<endl;\r\ncout<<\"enter a non-negative integer:\";\r\ncin>>n;\r\n\r\n\r\n}\r\nwhile (n<0)\r\n{\r\nint n;\r\ncout<<\"Enter a non-negative integer:\";\r\ncin>>n;\r\n}', 827, 72, 0, '2019-05-13 09:58:49', '2019-05-21 12:41:49'),
(515008, 574, '#include <iostream>\r\nusing namespace std;\r\n  int fun(int n)\r\n{\r\nint n;\r\nif(n==0)\r\nreturn 1;\r\nelse n*fun(n-1);\r\n}\r\n\r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\ncout<<fun(n)<<endl;\r\nsystem (\"pause\");\r\n}', 827, 72, 0, '2019-05-13 09:58:49', '2019-05-21 12:41:49'),
(515068, 564, '1715', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515069, 563, '1708', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515070, 571, 'int pow(int x , int y )\r\n{\r\nif( x > 0 )\r\nreturn x^y ;\r\nelse if (y== 0) \r\nreturn x ; \r\n}', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-21 12:42:30'),
(515071, 572, '1728', 1233, 72, 2, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515072, 573, '1735', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515073, 475, '1383', 1233, 72, 2, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515074, 561, '1702', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515075, 467, '1355', 1233, 72, 2, '2019-05-13 10:01:16', '2019-05-13 10:01:16'),
(515076, 569, 'int main()\r\n{\r\nint n ;\r\ncout << \"Enter a non-negative integer: \";\r\ncin>>n;\r\ndo \r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile (n<0) ;', 1233, 72, 1, '2019-05-13 10:01:16', '2019-05-21 12:42:30'),
(515077, 574, 'long factfunc(long n)\r\n{\r\nif   (n>o)\r\nreturn n*factfunc(n-1) \r\n}', 1233, 72, 0, '2019-05-13 10:01:16', '2019-05-21 12:42:30'),
(515118, 564, '1713', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:02'),
(515119, 563, '1711', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:02'),
(515120, 571, '#include<iostream>\r\nusing namespace std;\r\nint power(int x,int y)\r\n{\r\nif(y==0)\r\n{return(1);}\r\nelse\r\n{return(x*power(x,y-1);}\r\n}\r\nvoid main()\r\n{int x,y;\r\nif(x<0||y<0)\r\n{   cout<<\"error\";}\r\nelse\r\n{\r\ncout<<\"enter the base\";\r\ncin>>x;\r\ncout<<\"enter the power\";\r\ncin>>y;\r\nint z;\r\nz=power(x,y);\r\ncout<<z;\r\n}}', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-21 12:43:54'),
(515121, 572, '1728', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:02'),
(515122, 573, '1734', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:02'),
(515123, 475, '1385', 780, 72, 0, '2019-05-13 10:04:02', '2019-05-13 10:04:03'),
(515124, 561, '1700', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:03'),
(515125, 467, '1355', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-13 10:04:03'),
(515126, 569, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{int n;\r\ncout<<\"enter a non negative number\";\r\ncin>>n\r\nif (n<0)\r\n{do\r\n{cout<<\"the integer you intered is negative\"<<endl;\r\n    cout<<\"enter a non negative number\";\r\ncin>>n;}\r\n}while(n<0)\r\n}', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-21 12:43:54'),
(515127, 574, '#include<iostream>\r\nusing namespace std;\r\nint fact(int x,int y)\r\n{ \r\n if(x==0)\r\n {return(1);}\r\nelse\r\n{   for (int i=1;i<=x;i++)\r\n{\r\nfact=fact*i;\r\n}      \r\nreturn (fact);} \r\n}  \r\nvoid main()\r\n{int x,fact=1;\r\ncout<<\"enter the num\";\r\ncin>>x;\r\nint y;\r\ny=fact(x);\r\ncout<<y;}', 780, 72, 2, '2019-05-13 10:04:02', '2019-05-21 12:43:54'),
(515298, 564, '1715', 768, 72, 0, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515299, 563, '1708', 768, 72, 0, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515300, 571, '#include <iostream>          \r\n#include <cmath>\r\nusing namespace  std; \r\n{\r\nint x,y;\r\ncout <<\"please enter x and y to get x power y\";\r\ncin >>x>>y;\r\ncout <<\"the result of x power y is \"<<pow(x,y)<<\"\\n\";\r\n\r\n\r\n}', 768, 72, 0, '2019-05-13 10:08:52', '2019-05-21 12:44:48'),
(515301, 572, '1728', 768, 72, 2, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515302, 573, '1734', 768, 72, 2, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515303, 475, '1385', 768, 72, 0, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515304, 561, '1700', 768, 72, 2, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515305, 467, '1355', 768, 72, 2, '2019-05-13 10:08:52', '2019-05-13 10:08:53'),
(515306, 569, 'int n;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\ndo (n < 0)\r\n{\r\ncout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\n\r\ncin >> n;\r\n}\r\nwhile', 768, 72, 0, '2019-05-13 10:08:52', '2019-05-21 12:44:48'),
(515307, 574, '#include <iostream>          \r\nusing namespace  std;\r\nint fact (i)\r\nint main()  \r\n{\r\ncout <\"please,enter the number /n\";\r\ncin>>n;\r\ncout <<\"the factorial of \"<<n<<\"is\"<<fact(n)<<\"\\n\";\r\n}  \r\n                                                              \r\nint fact i\r\n{\r\nfor(int i=1; i<=n ;i++)\r\nfact*=i\r\nreturn fact;\r\n}', 768, 72, 1, '2019-05-13 10:08:52', '2019-05-21 12:44:48'),
(515368, 564, '1715', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515369, 563, '1708', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515370, 571, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint x\r\ncin x=1\r\nif\r\n{\r\nx>y\r\ncout<<x\r\n}\r\nelse\r\n{\r\ncout y\r\n}\r\nreturn0', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-21 12:45:18'),
(515371, 572, '1728', 772, 72, 2, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515372, 573, '1733', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515373, 475, '1385', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515374, 561, '1700', 772, 72, 2, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515375, 467, '1355', 772, 72, 2, '2019-05-13 10:15:24', '2019-05-13 10:15:24'),
(515376, 569, '#include <iostream>\r\nusing namespace std;     \r\nvoid main()\r\n{\r\nint n\r\ncin n=0\r\nwhile\r\n{\r\nn.0\r\ncout<<n\r\n}\r\nif else\r\n{\r\ncout false\r\n}\r\nreturn0', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-21 12:45:18'),
(515377, 574, '#include<iostream>\r\nusing namespace std;\r\nvoid main()\r\n{\r\nint fact(1)\r\nint main()\r\ncout<<the fact<<\'f\"is \r\nint fact=1\r\n{\r\nfact=1\r\nreturn fact\r\n}\r\nreturn fact\r\n}\r\nreturn0', 772, 72, 0, '2019-05-13 10:15:24', '2019-05-21 12:45:18'),
(515610, 564, '1713', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515611, 563, '1710', 856, 72, 0, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515612, 571, '#include <iostream>\r\nusing namespace std;\r\nint power(int x, int y)\r\n{\r\nif(y==0)\r\nreturn 1;\r\nelse\r\nreturn  x*power(x,y-1);\r\n}\r\nint main()\r\n{\r\nint r;   int e;\r\ncin>>r>>e;\r\nint rer=power(r,e);\r\ncout<<rer<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-21 12:45:55'),
(515613, 572, '1728', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515614, 573, '1734', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515615, 475, '1383', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515616, 561, '1702', 856, 72, 0, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515617, 467, '1355', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-13 10:47:46'),
(515618, 569, 'int n;\r\n      cout << \"Enter a non-negative integer\";\r\ncin >> n;   \r\ndo\r\n{\r\n cout << \"The integer you entered is negative.\" << endl;\r\ncout << \"Enter a non-negative integer: \";\r\ncin >> n;\r\n}\r\nwhile(n<0);', 856, 72, 1, '2019-05-13 10:47:46', '2019-05-21 12:45:55'),
(515619, 574, '#include <iostream>\r\nusing namespace std;\r\nint fact(int x)\r\n{\r\nint fac=1;\r\nfor(int i=1; i<=x; i++)\r\n{\r\nfac=fac*i;\r\n}\r\nreturn fact;\r\n}  \r\nint main()\r\n{\r\nint n;\r\ncin>>n;\r\nint fd=fact(n);\r\ncout<<fd<<endl;\r\n}\r\nsystem(\"pause\");\r\nreturn 0;', 856, 72, 2, '2019-05-13 10:47:46', '2019-05-21 12:45:55'),
(515808, 568, '#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\nfloat income;\r\ncout << \"Enter your monthly income: \";\r\ncin >> income;\r\nif (income < 0.0)\r\ncout << \"You are going farther into debt every month.\" << endl;\r\nelse if (icome=0&&income < 1200.00)\r\ncout << \"You are living below the poverty line.\" << endl;\r\nelse if (income >= 1200.00 && income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 845, 71, NULL, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515809, 567, '1725', 845, 71, 0, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515810, 566, '1722', 845, 71, 2, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515811, 565, '1717', 845, 71, 0, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515812, 564, '1713', 845, 71, 2, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515813, 563, '1710', 845, 71, 0, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515814, 562, '1705', 845, 71, 2, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515815, 561, '1700', 845, 71, 2, '2019-05-13 11:07:06', '2019-05-13 11:07:06'),
(515837, 568, 'float income;\r\ncout<<\"enter your monthly income:\";\r\ncin>>income;\r\nif(income<0.0)\r\ncout<<\"you are going farther into debt every month\"<<endl;\r\nelse if (income>=0.0 &&income<1200)\r\ncout<<\"you are living below the poverty line\"<<endl;\r\nelse if(income>=1200.00 && income<2500.00)\r\ncout<<\"you are living moderate comfort \"<<endl;\r\nelse\r\ncout<<\"you are well off\"<<endl;', 863, 71, NULL, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515838, 567, '1725', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515839, 566, '1720', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515840, 565, '1717', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515841, 564, '1714', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515842, 563, '1708', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515843, 562, '1706', 863, 71, 0, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515844, 561, '1700', 863, 71, 2, '2019-05-13 11:08:29', '2019-05-13 11:08:29'),
(515967, 568, 'income >= 0.0      \r\n                           income >= 2500.00', 866, 71, NULL, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515968, 567, '1726', 866, 71, 0, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515969, 566, '1720', 866, 71, 0, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515970, 565, '1717', 866, 71, 0, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515971, 564, '1713', 866, 71, 2, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515972, 563, '1709', 866, 71, 0, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515973, 562, '1705', 866, 71, 2, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515974, 561, '1700', 866, 71, 2, '2019-05-13 11:16:57', '2019-05-13 11:16:57'),
(515991, 568, 'float income;\r\ncout <<\"enter your monthly income\";\r\ncin >> income; \r\nif(income <0.0)\r\ncout<\"you are going farther into debt every month.\"endl;\r\nelse  if(income >=0.0)\r\ncout<<\"you are living below the poverty line.\"<<endl;\r\nelse if(income>=1200.00)\r\ncout<<\"you are living in moderate comfort.\"endl;\r\nelse if(income>=2500.00)\r\ncout<<\"you are well off.\"<<endl;', 1231, 71, NULL, '2019-05-13 11:19:30', '2019-05-13 11:19:30'),
(515992, 567, '1725', 1231, 71, 0, '2019-05-13 11:19:30', '2019-05-13 11:19:30'),
(515993, 566, '1722', 1231, 71, 2, '2019-05-13 11:19:30', '2019-05-13 11:19:30'),
(515994, 565, '1716', 1231, 71, 2, '2019-05-13 11:19:30', '2019-05-13 11:19:30'),
(515995, 564, '1712', 1231, 71, 0, '2019-05-13 11:19:30', '2019-05-13 11:19:31'),
(515996, 563, '1711', 1231, 71, 2, '2019-05-13 11:19:30', '2019-05-13 11:19:31'),
(515997, 562, '1705', 1231, 71, 2, '2019-05-13 11:19:30', '2019-05-13 11:19:31'),
(515998, 561, '1702', 1231, 71, 0, '2019-05-13 11:19:30', '2019-05-13 11:19:31'),
(516010, 568, 'float income;\r\ncin >> income;\r\nif (income<0.0)\r\ncout << \" You are going farther into debt every month.\" << endl;     \r\nelse if    (income < 1200.00) \r\n     cout << \"You are living below the poverty line.\" << endl;\r\nelse if ( income < 2500.00)\r\ncout << \"You are living in moderate comfort.\" << endl;\r\nelse \r\ncout << \"You are well off.\" << endl;', 1232, 71, NULL, '2019-05-13 11:21:54', '2019-05-13 11:21:54'),
(516011, 567, '1724', 1232, 71, 2, '2019-05-13 11:21:54', '2019-05-13 11:21:54'),
(516012, 566, '1722', 1232, 71, 2, '2019-05-13 11:21:54', '2019-05-13 11:21:54'),
(516013, 565, '1717', 1232, 71, 0, '2019-05-13 11:21:54', '2019-05-13 11:21:54'),
(516014, 564, '1713', 1232, 71, 2, '2019-05-13 11:21:54', '2019-05-13 11:21:54'),
(516015, 563, '1711', 1232, 71, 2, '2019-05-13 11:21:54', '2019-05-13 11:21:55'),
(516016, 562, '1706', 1232, 71, 0, '2019-05-13 11:21:54', '2019-05-13 11:21:55'),
(516017, 561, '1700', 1232, 71, 2, '2019-05-13 11:21:54', '2019-05-13 11:21:55'),
(516048, 568, 'else if(income >=2500)     \r\nif(income<0.0)', 855, 71, NULL, '2019-05-13 11:51:40', '2019-05-13 11:51:40'),
(516049, 567, '1726', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516050, 566, '1722', 855, 71, 2, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516051, 565, '1717', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516052, 564, '1712', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516053, 563, '1710', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516054, 562, '1706', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516055, 561, '1701', 855, 71, 0, '2019-05-13 11:51:40', '2019-05-13 11:51:41'),
(516056, 615, '1941', 1236, 88, NULL, '2020-01-17 15:00:54', '2020-01-17 15:00:54'),
(516111, 625, '1974', 1238, 94, 3, '2020-03-14 22:21:07', '2020-03-14 22:21:08'),
(516112, 626, '1980', 1238, 94, 0, '2020-03-14 22:21:07', '2020-03-14 22:21:08'),
(516113, 627, '1982', 1238, 94, 2, '2020-03-14 22:21:07', '2020-03-14 22:21:08'),
(516114, 628, '1985', 1238, 94, 5, '2020-03-14 22:21:07', '2020-03-14 22:21:09'),
(516115, 629, 'gfdfdgdgdgdgdgdgd  gdfgdfgdgd fgdfgdgdgdfg dfg dgddf dfg dfg dgd gddg dfg dg dgdfg dfg dgd gdffg dfgd gdfg dfgd dfg dg dg dgd dgdg df gdfg dfg dfg d ddg dgdg gdg dfgdfg dgdfg dgdfg dffgdg dgd dgdfgdfgdfgd gd dgdfgdg dgdfffgd gdg dfgdgd fg dgdfg dffg', 1238, 94, 5, '2020-03-14 22:21:07', '2020-03-14 14:48:52'),
(516116, 630, 'gdfgdgdgdgdgdfgdgdg dfgdg dfgdgdfgdgd gdfg dgdfgddf gdgdg dfgdfgdfgdfgdfgd gdfgdggdg dfgd', 1238, 94, 5, '2020-03-14 22:21:07', '2020-03-14 14:48:52'),
(516117, 631, '1987', 1238, 94, 0, '2020-03-14 22:21:07', '2020-03-14 22:21:09'),
(516150, 645, '2018', 1238, 95, 2, '2020-04-07 14:04:59', '2020-04-07 14:05:01'),
(516151, 646, '2022', 1238, 95, 3, '2020-04-07 14:04:59', '2020-04-07 14:05:01'),
(516152, 647, 'fsd', 1238, 95, 0, '2020-04-07 14:05:00', '2020-04-07 14:05:02'),
(516153, 647, 'fsdf', 1238, 95, 0, '2020-04-07 14:05:00', '2020-04-07 14:05:02'),
(516154, 648, 'fsdfsfsfsffdsfdf', 1238, 95, NULL, '2020-04-07 14:05:00', '2020-04-07 14:05:00'),
(516155, 649, 'ffdfffsdffds', 1238, 95, NULL, '2020-04-07 14:05:00', '2020-04-07 14:05:00'),
(516159, 645, '2019', 1238, 102, 0, '2020-04-17 07:01:34', '2020-04-17 07:01:35'),
(516160, 646, '2022', 1238, 102, 3, '2020-04-17 07:01:34', '2020-04-17 07:01:35'),
(516164, 645, '2018', 1239, 102, 2, '2020-04-17 07:24:29', '2020-04-17 07:24:32'),
(516165, 646, '2022', 1239, 102, 3, '2020-04-17 07:24:30', '2020-04-17 07:24:34'),
(516169, 645, '2018', 1238, 103, 2, '2020-04-17 18:39:23', '2020-04-17 18:39:24'),
(516170, 646, '2022', 1238, 103, 3, '2020-04-17 18:39:23', '2020-04-17 18:39:24'),
(516214, 660, '2042', 1238, 104, 2, '2020-04-17 19:10:34', '2020-04-17 19:10:36'),
(516215, 661, '2046', 1238, 104, 2, '2020-04-17 19:10:35', '2020-04-17 19:10:36'),
(516216, 662, '2050', 1238, 104, 2, '2020-04-17 19:10:35', '2020-04-17 19:10:36'),
(516217, 663, 'dasddas', 1238, 104, 0, '2020-04-17 19:10:35', '2020-04-17 19:10:36'),
(516218, 663, 'dasdasdd', 1238, 104, 0, '2020-04-17 19:10:35', '2020-04-17 19:10:36'),
(516219, 664, 'dasdasdasdasdasdadasdasdasdadadadadadasdd', 1238, 104, NULL, '2020-04-17 19:10:35', '2020-04-17 19:10:35'),
(516220, 665, 'assddadadadada', 1238, 104, NULL, '2020-04-17 19:10:35', '2020-04-17 19:10:35');

-- --------------------------------------------------------

--
-- بنية الجدول `times`
--

CREATE TABLE `times` (
  `id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `time` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `exam_id` int(11) NOT NULL,
  `enddate` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `times`
--

INSERT INTO `times` (`id`, `user_id`, `time`, `exam_id`, `enddate`, `created_at`, `updated_at`) VALUES
(97, 253, '21:22', 29, '21:37', '2018-11-28 19:22:51', '2018-11-28 19:22:51'),
(98, 253, '21:30', 24, '21:50', '2018-11-28 19:30:18', '2018-11-28 19:30:18'),
(99, 302, '10:30', 29, '10:45', '2018-11-29 08:30:13', '2018-11-29 08:30:13'),
(100, 301, '10:30', 25, '10:40', '2018-11-29 08:30:39', '2018-11-29 08:30:39'),
(101, 301, '10:30', 29, '10:45', '2018-11-29 08:30:53', '2018-11-29 08:30:53'),
(102, 316, '10:31', 29, '10:46', '2018-11-29 08:31:15', '2018-11-29 08:31:15'),
(103, 313, '10:31', 29, '10:46', '2018-11-29 08:31:21', '2018-11-29 08:31:21'),
(104, 307, '10:31', 29, '10:46', '2018-11-29 08:31:27', '2018-11-29 08:31:27'),
(105, 317, '10:31', 29, '10:46', '2018-11-29 08:31:45', '2018-11-29 08:31:45'),
(106, 309, '10:31', 29, '10:46', '2018-11-29 08:31:46', '2018-11-29 08:31:46'),
(107, 319, '10:33', 29, '10:48', '2018-11-29 08:33:35', '2018-11-29 08:33:35'),
(108, 304, '10:34', 29, '10:49', '2018-11-29 08:34:48', '2018-11-29 08:34:48'),
(109, 318, '10:34', 29, '10:49', '2018-11-29 08:34:55', '2018-11-29 08:34:55'),
(110, 310, '10:34', 29, '10:49', '2018-11-29 08:34:56', '2018-11-29 08:34:56'),
(111, 300, '10:36', 29, '10:51', '2018-11-29 08:36:47', '2018-11-29 08:36:47'),
(112, 312, '10:36', 29, '10:51', '2018-11-29 08:36:55', '2018-11-29 08:36:55'),
(113, 320, '10:40', 29, '10:55', '2018-11-29 08:40:40', '2018-11-29 08:40:40'),
(114, 321, '10:42', 29, '10:57', '2018-11-29 08:42:03', '2018-11-29 08:42:03'),
(115, 314, '10:43', 29, '10:58', '2018-11-29 08:43:03', '2018-11-29 08:43:03'),
(116, 303, '10:44', 29, '10:59', '2018-11-29 08:44:40', '2018-11-29 08:44:40'),
(117, 315, '10:44', 29, '10:59', '2018-11-29 08:44:57', '2018-11-29 08:44:57'),
(118, 305, '10:45', 29, '11:00', '2018-11-29 08:45:56', '2018-11-29 08:45:56'),
(119, 308, '10:45', 29, '11:00', '2018-11-29 08:45:58', '2018-11-29 08:45:58'),
(120, 311, '10:48', 29, '11:03', '2018-11-29 08:48:38', '2018-11-29 08:48:38'),
(121, 302, '10:52', 24, '11:12', '2018-11-29 08:52:48', '2018-11-29 08:52:48'),
(122, 278, '11:00', 28, '11:10', '2018-11-29 09:00:46', '2018-11-29 09:00:46'),
(123, 270, '12:28', 29, '12:43', '2018-11-29 10:28:56', '2018-11-29 10:28:56'),
(124, 275, '12:29', 29, '12:44', '2018-11-29 10:29:00', '2018-11-29 10:29:00'),
(125, 264, '12:29', 29, '12:44', '2018-11-29 10:29:03', '2018-11-29 10:29:03'),
(126, 262, '12:29', 29, '12:44', '2018-11-29 10:29:04', '2018-11-29 10:29:04'),
(127, 266, '12:29', 29, '12:44', '2018-11-29 10:29:04', '2018-11-29 10:29:04'),
(128, 261, '12:29', 29, '12:44', '2018-11-29 10:29:04', '2018-11-29 10:29:04'),
(129, 271, '12:29', 29, '12:44', '2018-11-29 10:29:04', '2018-11-29 10:29:04'),
(130, 268, '12:29', 29, '12:44', '2018-11-29 10:29:07', '2018-11-29 10:29:07'),
(131, 263, '12:29', 29, '12:44', '2018-11-29 10:29:16', '2018-11-29 10:29:16'),
(132, 251, '12:29', 29, '12:44', '2018-11-29 10:29:16', '2018-11-29 10:29:16'),
(133, 254, '12:29', 29, '12:44', '2018-11-29 10:29:16', '2018-11-29 10:29:16'),
(134, 252, '12:29', 29, '12:44', '2018-11-29 10:29:17', '2018-11-29 10:29:17'),
(135, 274, '12:29', 29, '12:44', '2018-11-29 10:29:18', '2018-11-29 10:29:18'),
(136, 256, '12:29', 29, '12:44', '2018-11-29 10:29:18', '2018-11-29 10:29:18'),
(137, 273, '12:29', 29, '12:44', '2018-11-29 10:29:23', '2018-11-29 10:29:23'),
(138, 269, '12:29', 29, '12:44', '2018-11-29 10:29:47', '2018-11-29 10:29:47'),
(139, 272, '12:29', 29, '12:44', '2018-11-29 10:29:49', '2018-11-29 10:29:49'),
(140, 269, '12:45', 23, '13:05', '2018-11-29 10:45:21', '2018-11-29 10:45:21'),
(141, 328, '12:47', 29, '13:02', '2018-11-29 10:47:00', '2018-11-29 10:47:00'),
(142, 326, '12:47', 29, '13:02', '2018-11-29 10:47:00', '2018-11-29 10:47:00'),
(143, 331, '12:47', 29, '13:02', '2018-11-29 10:47:01', '2018-11-29 10:47:01'),
(144, 327, '12:47', 29, '13:02', '2018-11-29 10:47:02', '2018-11-29 10:47:02'),
(145, 329, '12:47', 29, '13:02', '2018-11-29 10:47:03', '2018-11-29 10:47:03'),
(146, 324, '12:47', 29, '13:02', '2018-11-29 10:47:04', '2018-11-29 10:47:04'),
(147, 334, '12:47', 29, '13:02', '2018-11-29 10:47:05', '2018-11-29 10:47:05'),
(148, 339, '12:47', 29, '13:02', '2018-11-29 10:47:05', '2018-11-29 10:47:05'),
(149, 332, '12:47', 29, '13:02', '2018-11-29 10:47:06', '2018-11-29 10:47:06'),
(150, 330, '12:47', 29, '13:02', '2018-11-29 10:47:09', '2018-11-29 10:47:09'),
(151, 337, '12:47', 29, '13:02', '2018-11-29 10:47:11', '2018-11-29 10:47:11'),
(152, 325, '12:47', 29, '13:02', '2018-11-29 10:47:11', '2018-11-29 10:47:11'),
(153, 333, '12:47', 29, '13:02', '2018-11-29 10:47:16', '2018-11-29 10:47:16'),
(154, 342, '12:47', 29, '13:02', '2018-11-29 10:47:16', '2018-11-29 10:47:16'),
(155, 278, '12:47', 29, '13:02', '2018-11-29 10:47:36', '2018-11-29 10:47:36'),
(156, 335, '12:49', 29, '13:04', '2018-11-29 10:49:16', '2018-11-29 10:49:16'),
(157, 338, '12:50', 29, '13:05', '2018-11-29 10:50:20', '2018-11-29 10:50:20'),
(158, 340, '12:50', 29, '13:05', '2018-11-29 10:50:23', '2018-11-29 10:50:23'),
(159, 262, '12:52', 27, '13:07', '2018-11-29 10:52:45', '2018-11-29 10:52:45'),
(160, 341, '12:54', 29, '13:09', '2018-11-29 10:54:23', '2018-11-29 10:54:23'),
(161, 262, '12:54', 24, '13:14', '2018-11-29 10:54:39', '2018-11-29 10:54:39'),
(162, 260, '12:57', 29, '13:12', '2018-11-29 10:57:02', '2018-11-29 10:57:02'),
(163, 273, '12:57', 24, '13:17', '2018-11-29 10:57:06', '2018-11-29 10:57:06'),
(164, 256, '11:35', 31, '12:55', '2018-12-01 09:35:16', '2018-12-01 09:35:16'),
(165, 262, '11:40', 31, '13:00', '2018-12-01 09:40:04', '2018-12-01 09:40:04'),
(166, 133, '11:43', 31, '13:03', '2018-12-01 09:43:20', '2018-12-01 09:43:20'),
(167, 133, '11:44', 28, '11:54', '2018-12-01 09:44:01', '2018-12-01 09:44:01'),
(168, 128, '12:06', 31, '13:26', '2018-12-01 10:06:28', '2018-12-01 10:06:28'),
(169, 122, '12:06', 31, '13:26', '2018-12-01 10:06:47', '2018-12-01 10:06:47'),
(170, 113, '12:07', 31, '13:27', '2018-12-01 10:07:01', '2018-12-01 10:07:01'),
(171, 130, '12:07', 31, '13:27', '2018-12-01 10:07:18', '2018-12-01 10:07:18'),
(172, 114, '12:07', 31, '13:27', '2018-12-01 10:07:46', '2018-12-01 10:07:46'),
(173, 121, '12:07', 31, '13:27', '2018-12-01 10:07:47', '2018-12-01 10:07:47'),
(174, 112, '12:08', 31, '13:28', '2018-12-01 10:08:00', '2018-12-01 10:08:00'),
(175, 123, '12:08', 31, '13:28', '2018-12-01 10:08:07', '2018-12-01 10:08:07'),
(176, 124, '12:08', 31, '13:28', '2018-12-01 10:08:25', '2018-12-01 10:08:25'),
(177, 116, '12:08', 31, '13:28', '2018-12-01 10:08:34', '2018-12-01 10:08:34'),
(178, 126, '12:08', 31, '13:28', '2018-12-01 10:08:36', '2018-12-01 10:08:36'),
(179, 120, '12:09', 31, '13:29', '2018-12-01 10:09:01', '2018-12-01 10:09:01'),
(180, 125, '12:09', 31, '13:29', '2018-12-01 10:09:06', '2018-12-01 10:09:06'),
(181, 111, '12:09', 31, '13:29', '2018-12-01 10:09:34', '2018-12-01 10:09:34'),
(182, 115, '12:10', 31, '13:30', '2018-12-01 10:10:25', '2018-12-01 10:10:25'),
(183, 117, '12:10', 31, '13:30', '2018-12-01 10:10:26', '2018-12-01 10:10:26'),
(184, 127, '12:10', 31, '13:30', '2018-12-01 10:10:34', '2018-12-01 10:10:34'),
(185, 138, '12:11', 31, '13:31', '2018-12-01 10:11:20', '2018-12-01 10:11:20'),
(186, 119, '12:11', 31, '13:31', '2018-12-01 10:11:38', '2018-12-01 10:11:38'),
(187, 168, '12:11', 31, '13:31', '2018-12-01 10:11:47', '2018-12-01 10:11:47'),
(188, 224, '12:11', 31, '13:31', '2018-12-01 10:11:57', '2018-12-01 10:11:57'),
(189, 181, '12:12', 31, '13:32', '2018-12-01 10:12:04', '2018-12-01 10:12:04'),
(190, 167, '12:12', 31, '13:32', '2018-12-01 10:12:05', '2018-12-01 10:12:05'),
(191, 166, '12:12', 31, '13:32', '2018-12-01 10:12:08', '2018-12-01 10:12:08'),
(192, 182, '12:12', 31, '13:32', '2018-12-01 10:12:13', '2018-12-01 10:12:13'),
(193, 177, '12:12', 31, '13:32', '2018-12-01 10:12:13', '2018-12-01 10:12:13'),
(194, 141, '12:12', 31, '13:32', '2018-12-01 10:12:17', '2018-12-01 10:12:17'),
(195, 147, '12:12', 31, '13:32', '2018-12-01 10:12:20', '2018-12-01 10:12:20'),
(196, 179, '12:12', 31, '13:32', '2018-12-01 10:12:27', '2018-12-01 10:12:27'),
(197, 140, '12:12', 31, '13:32', '2018-12-01 10:12:32', '2018-12-01 10:12:32'),
(198, 226, '12:12', 31, '13:32', '2018-12-01 10:12:33', '2018-12-01 10:12:33'),
(199, 137, '12:12', 31, '13:32', '2018-12-01 10:12:34', '2018-12-01 10:12:34'),
(200, 232, '12:12', 31, '13:32', '2018-12-01 10:12:35', '2018-12-01 10:12:35'),
(201, 165, '12:12', 31, '13:32', '2018-12-01 10:12:37', '2018-12-01 10:12:37'),
(202, 163, '12:12', 31, '13:32', '2018-12-01 10:12:42', '2018-12-01 10:12:42'),
(203, 201, '12:12', 31, '13:32', '2018-12-01 10:12:42', '2018-12-01 10:12:42'),
(204, 145, '12:12', 31, '13:32', '2018-12-01 10:12:43', '2018-12-01 10:12:43'),
(205, 203, '12:12', 31, '13:32', '2018-12-01 10:12:48', '2018-12-01 10:12:48'),
(206, 212, '12:12', 31, '13:32', '2018-12-01 10:12:50', '2018-12-01 10:12:50'),
(207, 180, '12:12', 31, '13:32', '2018-12-01 10:12:52', '2018-12-01 10:12:52'),
(208, 210, '12:12', 31, '13:32', '2018-12-01 10:12:53', '2018-12-01 10:12:53'),
(209, 173, '12:12', 31, '13:32', '2018-12-01 10:12:58', '2018-12-01 10:12:58'),
(210, 172, '12:12', 31, '13:32', '2018-12-01 10:12:59', '2018-12-01 10:12:59'),
(211, 211, '12:12', 31, '13:32', '2018-12-01 10:12:59', '2018-12-01 10:12:59'),
(212, 225, '12:12', 31, '13:32', '2018-12-01 10:12:59', '2018-12-01 10:12:59'),
(213, 146, '12:13', 31, '13:33', '2018-12-01 10:13:00', '2018-12-01 10:13:00'),
(214, 178, '12:13', 31, '13:33', '2018-12-01 10:13:02', '2018-12-01 10:13:02'),
(215, 202, '12:13', 31, '13:33', '2018-12-01 10:13:02', '2018-12-01 10:13:02'),
(216, 155, '12:13', 31, '13:33', '2018-12-01 10:13:11', '2018-12-01 10:13:11'),
(217, 118, '12:13', 31, '13:33', '2018-12-01 10:13:11', '2018-12-01 10:13:11'),
(218, 205, '12:13', 31, '13:33', '2018-12-01 10:13:16', '2018-12-01 10:13:16'),
(219, 209, '12:13', 31, '13:33', '2018-12-01 10:13:16', '2018-12-01 10:13:16'),
(220, 208, '12:13', 31, '13:33', '2018-12-01 10:13:17', '2018-12-01 10:13:17'),
(221, 144, '12:13', 31, '13:33', '2018-12-01 10:13:21', '2018-12-01 10:13:21'),
(222, 131, '12:13', 31, '13:33', '2018-12-01 10:13:21', '2018-12-01 10:13:21'),
(223, 204, '12:13', 31, '13:33', '2018-12-01 10:13:25', '2018-12-01 10:13:25'),
(224, 217, '12:13', 31, '13:33', '2018-12-01 10:13:26', '2018-12-01 10:13:26'),
(225, 219, '12:13', 31, '13:33', '2018-12-01 10:13:29', '2018-12-01 10:13:29'),
(226, 214, '12:13', 31, '13:33', '2018-12-01 10:13:31', '2018-12-01 10:13:31'),
(227, 231, '12:13', 31, '13:33', '2018-12-01 10:13:32', '2018-12-01 10:13:32'),
(228, 169, '12:13', 31, '13:33', '2018-12-01 10:13:35', '2018-12-01 10:13:35'),
(229, 153, '12:13', 31, '13:33', '2018-12-01 10:13:41', '2018-12-01 10:13:41'),
(230, 191, '12:13', 31, '13:33', '2018-12-01 10:13:42', '2018-12-01 10:13:42'),
(231, 233, '12:13', 31, '13:33', '2018-12-01 10:13:42', '2018-12-01 10:13:42'),
(232, 199, '12:13', 31, '13:33', '2018-12-01 10:13:42', '2018-12-01 10:13:42'),
(233, 198, '12:13', 31, '13:33', '2018-12-01 10:13:42', '2018-12-01 10:13:42'),
(234, 186, '12:13', 31, '13:33', '2018-12-01 10:13:42', '2018-12-01 10:13:42'),
(235, 188, '12:13', 31, '13:33', '2018-12-01 10:13:43', '2018-12-01 10:13:43'),
(236, 196, '12:13', 31, '13:33', '2018-12-01 10:13:44', '2018-12-01 10:13:44'),
(237, 184, '12:13', 31, '13:33', '2018-12-01 10:13:44', '2018-12-01 10:13:44'),
(238, 185, '12:13', 31, '13:33', '2018-12-01 10:13:44', '2018-12-01 10:13:44'),
(239, 183, '12:13', 31, '13:33', '2018-12-01 10:13:45', '2018-12-01 10:13:45'),
(240, 192, '12:13', 31, '13:33', '2018-12-01 10:13:46', '2018-12-01 10:13:46'),
(241, 240, '12:13', 31, '13:33', '2018-12-01 10:13:46', '2018-12-01 10:13:46'),
(242, 132, '12:13', 31, '13:33', '2018-12-01 10:13:46', '2018-12-01 10:13:46'),
(243, 234, '12:13', 31, '13:33', '2018-12-01 10:13:48', '2018-12-01 10:13:48'),
(244, 238, '12:13', 31, '13:33', '2018-12-01 10:13:48', '2018-12-01 10:13:48'),
(245, 193, '12:13', 31, '13:33', '2018-12-01 10:13:48', '2018-12-01 10:13:48'),
(246, 187, '12:13', 31, '13:33', '2018-12-01 10:13:49', '2018-12-01 10:13:49'),
(247, 215, '12:13', 31, '13:33', '2018-12-01 10:13:49', '2018-12-01 10:13:49'),
(248, 241, '12:13', 31, '13:33', '2018-12-01 10:13:52', '2018-12-01 10:13:52'),
(249, 236, '12:13', 31, '13:33', '2018-12-01 10:13:55', '2018-12-01 10:13:55'),
(250, 243, '12:13', 31, '13:33', '2018-12-01 10:13:59', '2018-12-01 10:13:59'),
(251, 206, '12:13', 31, '13:33', '2018-12-01 10:13:59', '2018-12-01 10:13:59'),
(252, 135, '12:14', 31, '13:34', '2018-12-01 10:14:00', '2018-12-01 10:14:00'),
(253, 242, '12:14', 31, '13:34', '2018-12-01 10:14:01', '2018-12-01 10:14:01'),
(254, 248, '12:14', 31, '13:34', '2018-12-01 10:14:07', '2018-12-01 10:14:07'),
(255, 200, '12:14', 31, '13:34', '2018-12-01 10:14:10', '2018-12-01 10:14:10'),
(256, 246, '12:14', 31, '13:34', '2018-12-01 10:14:13', '2018-12-01 10:14:13'),
(257, 220, '12:14', 31, '13:34', '2018-12-01 10:14:15', '2018-12-01 10:14:15'),
(258, 150, '12:14', 31, '13:34', '2018-12-01 10:14:17', '2018-12-01 10:14:17'),
(259, 175, '12:14', 31, '13:34', '2018-12-01 10:14:19', '2018-12-01 10:14:19'),
(260, 189, '12:14', 31, '13:34', '2018-12-01 10:14:20', '2018-12-01 10:14:20'),
(261, 143, '12:14', 31, '13:34', '2018-12-01 10:14:23', '2018-12-01 10:14:23'),
(262, 158, '12:14', 31, '13:34', '2018-12-01 10:14:23', '2018-12-01 10:14:23'),
(263, 156, '12:14', 31, '13:34', '2018-12-01 10:14:32', '2018-12-01 10:14:32'),
(264, 229, '12:14', 31, '13:34', '2018-12-01 10:14:34', '2018-12-01 10:14:34'),
(265, 244, '12:14', 31, '13:34', '2018-12-01 10:14:39', '2018-12-01 10:14:39'),
(266, 151, '12:14', 31, '13:34', '2018-12-01 10:14:40', '2018-12-01 10:14:40'),
(267, 228, '12:14', 31, '13:34', '2018-12-01 10:14:40', '2018-12-01 10:14:40'),
(268, 218, '12:14', 31, '13:34', '2018-12-01 10:14:41', '2018-12-01 10:14:41'),
(269, 230, '12:14', 31, '13:34', '2018-12-01 10:14:42', '2018-12-01 10:14:42'),
(270, 136, '12:14', 31, '13:34', '2018-12-01 10:14:49', '2018-12-01 10:14:49'),
(271, 221, '12:14', 31, '13:34', '2018-12-01 10:14:51', '2018-12-01 10:14:51'),
(272, 162, '12:14', 31, '13:34', '2018-12-01 10:14:52', '2018-12-01 10:14:52'),
(273, 159, '12:14', 31, '13:34', '2018-12-01 10:14:53', '2018-12-01 10:14:53'),
(274, 142, '12:15', 31, '13:35', '2018-12-01 10:15:01', '2018-12-01 10:15:01'),
(275, 170, '12:15', 31, '13:35', '2018-12-01 10:15:07', '2018-12-01 10:15:07'),
(276, 195, '12:15', 31, '13:35', '2018-12-01 10:15:08', '2018-12-01 10:15:08'),
(277, 222, '12:15', 31, '13:35', '2018-12-01 10:15:11', '2018-12-01 10:15:11'),
(278, 157, '12:15', 31, '13:35', '2018-12-01 10:15:15', '2018-12-01 10:15:15'),
(279, 152, '12:15', 31, '13:35', '2018-12-01 10:15:16', '2018-12-01 10:15:16'),
(280, 247, '12:15', 31, '13:35', '2018-12-01 10:15:23', '2018-12-01 10:15:23'),
(281, 237, '12:15', 31, '13:35', '2018-12-01 10:15:24', '2018-12-01 10:15:24'),
(282, 235, '12:15', 31, '13:35', '2018-12-01 10:15:27', '2018-12-01 10:15:27'),
(283, 239, '12:15', 31, '13:35', '2018-12-01 10:15:36', '2018-12-01 10:15:36'),
(284, 249, '12:15', 31, '13:35', '2018-12-01 10:15:39', '2018-12-01 10:15:39'),
(285, 190, '12:15', 31, '13:35', '2018-12-01 10:15:40', '2018-12-01 10:15:40'),
(286, 139, '12:15', 31, '13:35', '2018-12-01 10:15:47', '2018-12-01 10:15:47'),
(287, 223, '12:15', 31, '13:35', '2018-12-01 10:15:51', '2018-12-01 10:15:51'),
(288, 164, '12:15', 31, '13:35', '2018-12-01 10:15:51', '2018-12-01 10:15:51'),
(289, 171, '12:15', 31, '13:35', '2018-12-01 10:15:53', '2018-12-01 10:15:53'),
(290, 213, '12:15', 31, '13:35', '2018-12-01 10:15:53', '2018-12-01 10:15:53'),
(291, 148, '12:16', 31, '13:36', '2018-12-01 10:16:13', '2018-12-01 10:16:13'),
(292, 194, '12:16', 31, '13:36', '2018-12-01 10:16:13', '2018-12-01 10:16:13'),
(293, 216, '12:16', 31, '13:36', '2018-12-01 10:16:37', '2018-12-01 10:16:37'),
(294, 207, '12:16', 31, '13:36', '2018-12-01 10:16:45', '2018-12-01 10:16:45'),
(295, 134, '12:17', 31, '13:37', '2018-12-01 10:17:20', '2018-12-01 10:17:20'),
(296, 154, '12:17', 31, '13:37', '2018-12-01 10:17:29', '2018-12-01 10:17:29'),
(297, 227, '12:17', 31, '13:37', '2018-12-01 10:17:34', '2018-12-01 10:17:34'),
(298, 160, '12:18', 31, '13:38', '2018-12-01 10:18:52', '2018-12-01 10:18:52'),
(299, 174, '12:19', 31, '13:39', '2018-12-01 10:19:27', '2018-12-01 10:19:27'),
(300, 161, '12:23', 31, '13:43', '2018-12-01 10:23:02', '2018-12-01 10:23:02'),
(301, 129, '12:23', 31, '13:43', '2018-12-01 10:23:03', '2018-12-01 10:23:03'),
(302, 149, '12:35', 31, '13:55', '2018-12-01 10:35:15', '2018-12-01 10:35:15'),
(303, 245, '12:38', 31, '13:58', '2018-12-01 10:38:22', '2018-12-01 10:38:22'),
(304, 216, '13:38', 28, '13:48', '2018-12-01 11:38:38', '2018-12-01 11:38:38'),
(305, 119, '12:51', 33, '13:11', '2018-12-03 10:51:01', '2018-12-03 10:51:01'),
(306, 253, '12:51', 33, '13:11', '2018-12-03 10:51:01', '2018-12-03 10:51:01'),
(307, 296, '13:30', 33, '13:50', '2018-12-03 11:30:41', '2018-12-03 11:30:41'),
(308, 262, '13:36', 33, '13:56', '2018-12-03 11:36:49', '2018-12-03 11:36:49'),
(309, 297, '13:39', 33, '13:59', '2018-12-03 11:39:45', '2018-12-03 11:39:45'),
(310, 336, '16:07', 34, '17:37', '2018-12-03 14:07:15', '2018-12-03 14:07:15'),
(311, 329, '16:08', 34, '17:38', '2018-12-03 14:08:00', '2018-12-03 14:08:00'),
(312, 327, '16:08', 34, '17:38', '2018-12-03 14:08:06', '2018-12-03 14:08:06'),
(313, 324, '16:08', 34, '17:38', '2018-12-03 14:08:24', '2018-12-03 14:08:24'),
(314, 339, '16:08', 34, '17:38', '2018-12-03 14:08:27', '2018-12-03 14:08:27'),
(315, 328, '16:08', 34, '17:38', '2018-12-03 14:08:43', '2018-12-03 14:08:43'),
(316, 367, '16:08', 34, '17:38', '2018-12-03 14:08:59', '2018-12-03 14:08:59'),
(317, 337, '16:09', 34, '17:39', '2018-12-03 14:09:13', '2018-12-03 14:09:13'),
(318, 330, '16:09', 34, '17:39', '2018-12-03 14:09:25', '2018-12-03 14:09:25'),
(319, 332, '16:09', 34, '17:39', '2018-12-03 14:09:32', '2018-12-03 14:09:32'),
(320, 335, '16:09', 34, '17:39', '2018-12-03 14:09:38', '2018-12-03 14:09:38'),
(321, 334, '16:09', 34, '17:39', '2018-12-03 14:09:40', '2018-12-03 14:09:40'),
(322, 340, '16:09', 34, '17:39', '2018-12-03 14:09:49', '2018-12-03 14:09:49'),
(323, 333, '16:09', 34, '17:39', '2018-12-03 14:09:54', '2018-12-03 14:09:54'),
(324, 355, '16:10', 34, '17:40', '2018-12-03 14:10:34', '2018-12-03 14:10:34'),
(325, 358, '16:10', 34, '17:40', '2018-12-03 14:10:50', '2018-12-03 14:10:50'),
(326, 369, '16:10', 34, '17:40', '2018-12-03 14:10:56', '2018-12-03 14:10:56'),
(327, 360, '16:12', 34, '17:42', '2018-12-03 14:12:03', '2018-12-03 14:12:03'),
(328, 343, '16:12', 34, '17:42', '2018-12-03 14:12:28', '2018-12-03 14:12:28'),
(329, 321, '16:12', 34, '17:42', '2018-12-03 14:12:41', '2018-12-03 14:12:41'),
(330, 261, '16:12', 34, '17:42', '2018-12-03 14:12:50', '2018-12-03 14:12:50'),
(331, 256, '16:13', 34, '17:43', '2018-12-03 14:13:04', '2018-12-03 14:13:04'),
(332, 254, '16:13', 34, '17:43', '2018-12-03 14:13:05', '2018-12-03 14:13:05'),
(333, 253, '16:13', 34, '17:43', '2018-12-03 14:13:19', '2018-12-03 14:13:19'),
(334, 274, '16:13', 34, '17:43', '2018-12-03 14:13:24', '2018-12-03 14:13:24'),
(335, 264, '16:13', 34, '17:43', '2018-12-03 14:13:35', '2018-12-03 14:13:35'),
(336, 255, '16:13', 34, '17:43', '2018-12-03 14:13:38', '2018-12-03 14:13:38'),
(337, 262, '16:13', 34, '17:43', '2018-12-03 14:13:52', '2018-12-03 14:13:52'),
(338, 320, '16:13', 34, '17:43', '2018-12-03 14:13:57', '2018-12-03 14:13:57'),
(339, 263, '16:13', 34, '17:43', '2018-12-03 14:13:57', '2018-12-03 14:13:57'),
(340, 312, '16:13', 34, '17:43', '2018-12-03 14:13:59', '2018-12-03 14:13:59'),
(341, 273, '16:14', 34, '17:44', '2018-12-03 14:14:01', '2018-12-03 14:14:01'),
(342, 265, '16:14', 34, '17:44', '2018-12-03 14:14:10', '2018-12-03 14:14:10'),
(343, 272, '16:14', 34, '17:44', '2018-12-03 14:14:15', '2018-12-03 14:14:15'),
(344, 319, '16:14', 34, '17:44', '2018-12-03 14:14:17', '2018-12-03 14:14:17'),
(345, 251, '16:14', 34, '17:44', '2018-12-03 14:14:20', '2018-12-03 14:14:20'),
(346, 260, '16:14', 34, '17:44', '2018-12-03 14:14:21', '2018-12-03 14:14:21'),
(347, 268, '16:14', 34, '17:44', '2018-12-03 14:14:21', '2018-12-03 14:14:21'),
(348, 275, '16:14', 34, '17:44', '2018-12-03 14:14:22', '2018-12-03 14:14:22'),
(349, 271, '16:14', 34, '17:44', '2018-12-03 14:14:46', '2018-12-03 14:14:46'),
(350, 318, '16:14', 34, '17:44', '2018-12-03 14:14:50', '2018-12-03 14:14:50'),
(351, 316, '16:14', 34, '17:44', '2018-12-03 14:14:51', '2018-12-03 14:14:51'),
(352, 306, '16:14', 34, '17:44', '2018-12-03 14:14:53', '2018-12-03 14:14:53'),
(353, 311, '16:14', 34, '17:44', '2018-12-03 14:14:54', '2018-12-03 14:14:54'),
(354, 301, '16:15', 34, '17:45', '2018-12-03 14:15:16', '2018-12-03 14:15:16'),
(355, 314, '16:15', 34, '17:45', '2018-12-03 14:15:27', '2018-12-03 14:15:27'),
(356, 310, '16:15', 34, '17:45', '2018-12-03 14:15:36', '2018-12-03 14:15:36'),
(357, 302, '16:15', 34, '17:45', '2018-12-03 14:15:48', '2018-12-03 14:15:48'),
(358, 304, '16:15', 34, '17:45', '2018-12-03 14:15:52', '2018-12-03 14:15:52'),
(359, 303, '16:15', 34, '17:45', '2018-12-03 14:15:53', '2018-12-03 14:15:53'),
(360, 317, '16:15', 34, '17:45', '2018-12-03 14:15:53', '2018-12-03 14:15:53'),
(361, 307, '16:15', 34, '17:45', '2018-12-03 14:15:55', '2018-12-03 14:15:55'),
(362, 300, '16:16', 34, '17:46', '2018-12-03 14:16:04', '2018-12-03 14:16:04'),
(363, 305, '16:16', 34, '17:46', '2018-12-03 14:16:11', '2018-12-03 14:16:11'),
(364, 269, '16:16', 34, '17:46', '2018-12-03 14:16:26', '2018-12-03 14:16:26'),
(365, 313, '16:16', 34, '17:46', '2018-12-03 14:16:44', '2018-12-03 14:16:44'),
(366, 331, '16:17', 34, '17:47', '2018-12-03 14:17:25', '2018-12-03 14:17:25'),
(367, 309, '16:17', 34, '17:47', '2018-12-03 14:17:34', '2018-12-03 14:17:34'),
(368, 349, '16:17', 34, '17:47', '2018-12-03 14:17:53', '2018-12-03 14:17:53'),
(369, 252, '16:18', 34, '17:48', '2018-12-03 14:18:36', '2018-12-03 14:18:36'),
(370, 341, '16:18', 34, '17:48', '2018-12-03 14:18:44', '2018-12-03 14:18:44'),
(371, 366, '16:18', 34, '17:48', '2018-12-03 14:18:53', '2018-12-03 14:18:53'),
(372, 338, '16:18', 34, '17:48', '2018-12-03 14:18:57', '2018-12-03 14:18:57'),
(373, 357, '16:19', 34, '17:49', '2018-12-03 14:19:01', '2018-12-03 14:19:01'),
(374, 370, '16:19', 34, '17:49', '2018-12-03 14:19:27', '2018-12-03 14:19:27'),
(375, 362, '16:19', 34, '17:49', '2018-12-03 14:19:48', '2018-12-03 14:19:48'),
(376, 362, '16:19', 34, '17:49', '2018-12-03 14:19:48', '2018-12-03 14:19:48'),
(377, 368, '16:19', 34, '17:49', '2018-12-03 14:19:55', '2018-12-03 14:19:55'),
(378, 325, '16:20', 34, '17:50', '2018-12-03 14:20:24', '2018-12-03 14:20:24'),
(379, 259, '16:20', 34, '17:50', '2018-12-03 14:20:31', '2018-12-03 14:20:31'),
(380, 351, '16:21', 34, '17:51', '2018-12-03 14:21:02', '2018-12-03 14:21:02'),
(381, 315, '16:21', 34, '17:51', '2018-12-03 14:21:11', '2018-12-03 14:21:11'),
(382, 342, '16:21', 34, '17:51', '2018-12-03 14:21:14', '2018-12-03 14:21:14'),
(383, 354, '16:21', 34, '17:51', '2018-12-03 14:21:17', '2018-12-03 14:21:17'),
(384, 352, '16:21', 34, '17:51', '2018-12-03 14:21:28', '2018-12-03 14:21:28'),
(385, 364, '16:21', 34, '17:51', '2018-12-03 14:21:39', '2018-12-03 14:21:39'),
(386, 350, '16:21', 34, '17:51', '2018-12-03 14:21:41', '2018-12-03 14:21:41'),
(387, 326, '16:21', 34, '17:51', '2018-12-03 14:21:50', '2018-12-03 14:21:50'),
(388, 363, '16:22', 34, '17:52', '2018-12-03 14:22:03', '2018-12-03 14:22:03'),
(389, 361, '16:22', 34, '17:52', '2018-12-03 14:22:51', '2018-12-03 14:22:51'),
(390, 356, '16:22', 34, '17:52', '2018-12-03 14:22:56', '2018-12-03 14:22:56'),
(391, 197, '16:23', 34, '17:53', '2018-12-03 14:23:10', '2018-12-03 14:23:10'),
(392, 348, '16:23', 34, '17:53', '2018-12-03 14:23:20', '2018-12-03 14:23:20'),
(393, 347, '16:23', 34, '17:53', '2018-12-03 14:23:20', '2018-12-03 14:23:20'),
(394, 365, '16:23', 34, '17:53', '2018-12-03 14:23:23', '2018-12-03 14:23:23'),
(395, 345, '16:23', 34, '17:53', '2018-12-03 14:23:40', '2018-12-03 14:23:40'),
(396, 378, '16:24', 34, '17:54', '2018-12-03 14:24:50', '2018-12-03 14:24:50'),
(397, 409, '16:24', 34, '17:54', '2018-12-03 14:24:51', '2018-12-03 14:24:51'),
(398, 297, '16:24', 34, '17:54', '2018-12-03 14:24:51', '2018-12-03 14:24:51'),
(399, 413, '16:24', 34, '17:54', '2018-12-03 14:24:52', '2018-12-03 14:24:52'),
(400, 437, '16:24', 34, '17:54', '2018-12-03 14:24:54', '2018-12-03 14:24:54'),
(401, 417, '16:24', 34, '17:54', '2018-12-03 14:24:56', '2018-12-03 14:24:56'),
(402, 381, '16:24', 34, '17:54', '2018-12-03 14:24:59', '2018-12-03 14:24:59'),
(403, 392, '16:25', 34, '17:55', '2018-12-03 14:25:00', '2018-12-03 14:25:00'),
(404, 408, '16:25', 34, '17:55', '2018-12-03 14:25:00', '2018-12-03 14:25:00'),
(405, 382, '16:25', 34, '17:55', '2018-12-03 14:25:01', '2018-12-03 14:25:01'),
(406, 386, '16:25', 34, '17:55', '2018-12-03 14:25:03', '2018-12-03 14:25:03'),
(407, 429, '16:25', 34, '17:55', '2018-12-03 14:25:04', '2018-12-03 14:25:04'),
(408, 398, '16:25', 34, '17:55', '2018-12-03 14:25:06', '2018-12-03 14:25:06'),
(409, 428, '16:25', 34, '17:55', '2018-12-03 14:25:06', '2018-12-03 14:25:06'),
(410, 397, '16:25', 34, '17:55', '2018-12-03 14:25:08', '2018-12-03 14:25:08'),
(411, 405, '16:25', 34, '17:55', '2018-12-03 14:25:09', '2018-12-03 14:25:09'),
(412, 380, '16:25', 34, '17:55', '2018-12-03 14:25:10', '2018-12-03 14:25:10'),
(413, 441, '16:25', 34, '17:55', '2018-12-03 14:25:10', '2018-12-03 14:25:10'),
(414, 418, '16:25', 34, '17:55', '2018-12-03 14:25:12', '2018-12-03 14:25:12'),
(415, 438, '16:25', 34, '17:55', '2018-12-03 14:25:12', '2018-12-03 14:25:12'),
(416, 299, '16:25', 34, '17:55', '2018-12-03 14:25:13', '2018-12-03 14:25:13'),
(417, 444, '16:25', 34, '17:55', '2018-12-03 14:25:14', '2018-12-03 14:25:14'),
(418, 396, '16:25', 34, '17:55', '2018-12-03 14:25:14', '2018-12-03 14:25:14'),
(419, 403, '16:25', 34, '17:55', '2018-12-03 14:25:15', '2018-12-03 14:25:15'),
(420, 402, '16:25', 34, '17:55', '2018-12-03 14:25:16', '2018-12-03 14:25:16'),
(421, 391, '16:25', 34, '17:55', '2018-12-03 14:25:16', '2018-12-03 14:25:16'),
(422, 423, '16:25', 34, '17:55', '2018-12-03 14:25:16', '2018-12-03 14:25:16'),
(423, 419, '16:25', 34, '17:55', '2018-12-03 14:25:17', '2018-12-03 14:25:17'),
(424, 421, '16:25', 34, '17:55', '2018-12-03 14:25:17', '2018-12-03 14:25:17'),
(425, 410, '16:25', 34, '17:55', '2018-12-03 14:25:18', '2018-12-03 14:25:18'),
(426, 416, '16:25', 34, '17:55', '2018-12-03 14:25:19', '2018-12-03 14:25:19'),
(427, 385, '16:25', 34, '17:55', '2018-12-03 14:25:19', '2018-12-03 14:25:19'),
(428, 439, '16:25', 34, '17:55', '2018-12-03 14:25:19', '2018-12-03 14:25:19'),
(429, 424, '16:25', 34, '17:55', '2018-12-03 14:25:20', '2018-12-03 14:25:20'),
(430, 443, '16:25', 34, '17:55', '2018-12-03 14:25:20', '2018-12-03 14:25:20'),
(431, 420, '16:25', 34, '17:55', '2018-12-03 14:25:21', '2018-12-03 14:25:21'),
(432, 440, '16:25', 34, '17:55', '2018-12-03 14:25:21', '2018-12-03 14:25:21'),
(433, 394, '16:25', 34, '17:55', '2018-12-03 14:25:21', '2018-12-03 14:25:21'),
(434, 390, '16:25', 34, '17:55', '2018-12-03 14:25:21', '2018-12-03 14:25:21'),
(435, 395, '16:25', 34, '17:55', '2018-12-03 14:25:24', '2018-12-03 14:25:24'),
(436, 401, '16:25', 34, '17:55', '2018-12-03 14:25:25', '2018-12-03 14:25:25'),
(437, 404, '16:25', 34, '17:55', '2018-12-03 14:25:25', '2018-12-03 14:25:25'),
(438, 383, '16:25', 34, '17:55', '2018-12-03 14:25:25', '2018-12-03 14:25:25'),
(439, 446, '16:25', 34, '17:55', '2018-12-03 14:25:27', '2018-12-03 14:25:27'),
(440, 432, '16:25', 34, '17:55', '2018-12-03 14:25:27', '2018-12-03 14:25:27'),
(441, 389, '16:25', 34, '17:55', '2018-12-03 14:25:27', '2018-12-03 14:25:27'),
(442, 407, '16:25', 34, '17:55', '2018-12-03 14:25:27', '2018-12-03 14:25:27'),
(443, 373, '16:25', 34, '17:55', '2018-12-03 14:25:28', '2018-12-03 14:25:28'),
(444, 393, '16:25', 34, '17:55', '2018-12-03 14:25:29', '2018-12-03 14:25:29'),
(445, 426, '16:25', 34, '17:55', '2018-12-03 14:25:30', '2018-12-03 14:25:30'),
(446, 384, '16:25', 34, '17:55', '2018-12-03 14:25:36', '2018-12-03 14:25:36'),
(447, 387, '16:25', 34, '17:55', '2018-12-03 14:25:36', '2018-12-03 14:25:36'),
(448, 308, '16:25', 34, '17:55', '2018-12-03 14:25:36', '2018-12-03 14:25:36'),
(449, 431, '16:25', 34, '17:55', '2018-12-03 14:25:38', '2018-12-03 14:25:38'),
(450, 400, '16:25', 34, '17:55', '2018-12-03 14:25:44', '2018-12-03 14:25:44'),
(451, 442, '16:25', 34, '17:55', '2018-12-03 14:25:44', '2018-12-03 14:25:44'),
(452, 411, '16:25', 34, '17:55', '2018-12-03 14:25:55', '2018-12-03 14:25:55'),
(453, 425, '16:26', 34, '17:56', '2018-12-03 14:26:02', '2018-12-03 14:26:02'),
(454, 399, '16:26', 34, '17:56', '2018-12-03 14:26:03', '2018-12-03 14:26:03'),
(455, 414, '16:26', 34, '17:56', '2018-12-03 14:26:08', '2018-12-03 14:26:08'),
(456, 412, '16:26', 34, '17:56', '2018-12-03 14:26:08', '2018-12-03 14:26:08'),
(457, 422, '16:26', 34, '17:56', '2018-12-03 14:26:09', '2018-12-03 14:26:09'),
(458, 415, '16:26', 34, '17:56', '2018-12-03 14:26:09', '2018-12-03 14:26:09'),
(459, 353, '16:26', 34, '17:56', '2018-12-03 14:26:15', '2018-12-03 14:26:15'),
(460, 445, '16:26', 34, '17:56', '2018-12-03 14:26:17', '2018-12-03 14:26:17'),
(461, 406, '16:26', 34, '17:56', '2018-12-03 14:26:32', '2018-12-03 14:26:32'),
(462, 376, '16:26', 34, '17:56', '2018-12-03 14:26:40', '2018-12-03 14:26:40'),
(463, 292, '16:26', 34, '17:56', '2018-12-03 14:26:44', '2018-12-03 14:26:44'),
(464, 433, '16:26', 34, '17:56', '2018-12-03 14:26:51', '2018-12-03 14:26:51'),
(465, 375, '16:26', 34, '17:56', '2018-12-03 14:26:52', '2018-12-03 14:26:52'),
(466, 284, '16:27', 34, '17:57', '2018-12-03 14:27:06', '2018-12-03 14:27:06'),
(467, 296, '16:27', 34, '17:57', '2018-12-03 14:27:07', '2018-12-03 14:27:07'),
(468, 285, '16:27', 34, '17:57', '2018-12-03 14:27:07', '2018-12-03 14:27:07'),
(469, 290, '16:27', 34, '17:57', '2018-12-03 14:27:07', '2018-12-03 14:27:07'),
(470, 280, '16:27', 34, '17:57', '2018-12-03 14:27:07', '2018-12-03 14:27:07'),
(471, 294, '16:27', 34, '17:57', '2018-12-03 14:27:09', '2018-12-03 14:27:09'),
(472, 279, '16:27', 34, '17:57', '2018-12-03 14:27:09', '2018-12-03 14:27:09'),
(473, 293, '16:27', 34, '17:57', '2018-12-03 14:27:09', '2018-12-03 14:27:09'),
(474, 288, '16:27', 34, '17:57', '2018-12-03 14:27:10', '2018-12-03 14:27:10'),
(475, 283, '16:27', 34, '17:57', '2018-12-03 14:27:11', '2018-12-03 14:27:11'),
(476, 276, '16:27', 34, '17:57', '2018-12-03 14:27:13', '2018-12-03 14:27:13'),
(477, 277, '16:27', 34, '17:57', '2018-12-03 14:27:15', '2018-12-03 14:27:15'),
(478, 278, '16:27', 34, '17:57', '2018-12-03 14:27:21', '2018-12-03 14:27:21'),
(479, 289, '16:27', 34, '17:57', '2018-12-03 14:27:21', '2018-12-03 14:27:21'),
(480, 257, '16:27', 34, '17:57', '2018-12-03 14:27:22', '2018-12-03 14:27:22'),
(481, 298, '16:27', 34, '17:57', '2018-12-03 14:27:25', '2018-12-03 14:27:25'),
(482, 287, '16:27', 34, '17:57', '2018-12-03 14:27:28', '2018-12-03 14:27:28'),
(483, 436, '16:27', 34, '17:57', '2018-12-03 14:27:41', '2018-12-03 14:27:41'),
(484, 281, '16:27', 34, '17:57', '2018-12-03 14:27:50', '2018-12-03 14:27:50'),
(485, 374, '16:28', 34, '17:58', '2018-12-03 14:28:05', '2018-12-03 14:28:05'),
(486, 295, '16:28', 34, '17:58', '2018-12-03 14:28:13', '2018-12-03 14:28:13'),
(487, 377, '16:28', 34, '17:58', '2018-12-03 14:28:27', '2018-12-03 14:28:27'),
(488, 449, '16:39', 34, '18:09', '2018-12-03 14:39:38', '2018-12-03 14:39:38'),
(489, 435, '16:39', 34, '18:09', '2018-12-03 14:39:40', '2018-12-03 14:39:40'),
(490, 448, '16:39', 34, '18:09', '2018-12-03 14:39:43', '2018-12-03 14:39:43'),
(491, 450, '16:39', 34, '18:09', '2018-12-03 14:39:45', '2018-12-03 14:39:45'),
(492, 430, '16:40', 34, '18:10', '2018-12-03 14:40:15', '2018-12-03 14:40:15'),
(493, 291, '16:43', 34, '18:13', '2018-12-03 14:43:44', '2018-12-03 14:43:44'),
(494, 434, '16:43', 34, '18:13', '2018-12-03 14:43:45', '2018-12-03 14:43:45'),
(495, 427, '16:45', 34, '18:15', '2018-12-03 14:45:21', '2018-12-03 14:45:21'),
(496, 388, '16:47', 34, '18:17', '2018-12-03 14:47:50', '2018-12-03 14:47:50'),
(497, 426, '11:16', 29, '11:31', '2018-12-12 09:16:11', '2018-12-12 09:16:11'),
(498, 493, '12:27', 37, '12:57', '2018-12-18 10:27:49', '2018-12-18 10:27:49'),
(499, 489, '12:28', 37, '12:58', '2018-12-18 10:28:24', '2018-12-18 10:28:24'),
(500, 503, '12:34', 37, '13:04', '2018-12-18 10:34:59', '2018-12-18 10:34:59'),
(501, 489, '12:40', 38, '13:40', '2018-12-18 10:40:21', '2018-12-18 10:40:21'),
(502, 504, '12:40', 38, '13:40', '2018-12-18 10:40:31', '2018-12-18 10:40:31'),
(503, 510, '12:40', 38, '13:40', '2018-12-18 10:40:31', '2018-12-18 10:40:31'),
(504, 493, '12:40', 38, '13:40', '2018-12-18 10:40:33', '2018-12-18 10:40:33'),
(505, 507, '12:40', 38, '13:40', '2018-12-18 10:40:35', '2018-12-18 10:40:35'),
(506, 529, '12:40', 38, '13:40', '2018-12-18 10:40:36', '2018-12-18 10:40:36'),
(507, 512, '12:40', 38, '13:40', '2018-12-18 10:40:37', '2018-12-18 10:40:37'),
(508, 517, '12:40', 38, '13:40', '2018-12-18 10:40:37', '2018-12-18 10:40:37'),
(509, 495, '12:40', 38, '13:40', '2018-12-18 10:40:38', '2018-12-18 10:40:38'),
(510, 485, '12:40', 38, '13:40', '2018-12-18 10:40:39', '2018-12-18 10:40:39'),
(511, 494, '12:40', 38, '13:40', '2018-12-18 10:40:39', '2018-12-18 10:40:39'),
(512, 498, '12:40', 38, '13:40', '2018-12-18 10:40:41', '2018-12-18 10:40:41'),
(513, 490, '12:40', 38, '13:40', '2018-12-18 10:40:42', '2018-12-18 10:40:42'),
(514, 508, '12:40', 38, '13:40', '2018-12-18 10:40:42', '2018-12-18 10:40:42'),
(515, 503, '12:40', 38, '13:40', '2018-12-18 10:40:44', '2018-12-18 10:40:44'),
(516, 506, '12:40', 38, '13:40', '2018-12-18 10:40:46', '2018-12-18 10:40:46'),
(517, 509, '12:40', 38, '13:40', '2018-12-18 10:40:52', '2018-12-18 10:40:52'),
(518, 492, '12:41', 38, '13:41', '2018-12-18 10:41:04', '2018-12-18 10:41:04'),
(519, 501, '12:41', 38, '13:41', '2018-12-18 10:41:49', '2018-12-18 10:41:49'),
(520, 479, '12:41', 38, '13:41', '2018-12-18 10:41:52', '2018-12-18 10:41:52'),
(521, 465, '12:41', 38, '13:41', '2018-12-18 10:41:52', '2018-12-18 10:41:52'),
(522, 463, '12:41', 38, '13:41', '2018-12-18 10:41:53', '2018-12-18 10:41:53'),
(523, 466, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(524, 461, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(525, 459, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(526, 477, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(527, 460, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(528, 486, '12:41', 38, '13:41', '2018-12-18 10:41:54', '2018-12-18 10:41:54'),
(529, 453, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(530, 456, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(531, 472, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(532, 484, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(533, 483, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(534, 467, '12:41', 38, '13:41', '2018-12-18 10:41:55', '2018-12-18 10:41:55'),
(535, 521, '12:41', 38, '13:41', '2018-12-18 10:41:56', '2018-12-18 10:41:56'),
(536, 471, '12:41', 38, '13:41', '2018-12-18 10:41:56', '2018-12-18 10:41:56'),
(537, 478, '12:41', 38, '13:41', '2018-12-18 10:41:56', '2018-12-18 10:41:56'),
(538, 480, '12:41', 38, '13:41', '2018-12-18 10:41:56', '2018-12-18 10:41:56'),
(539, 469, '12:41', 38, '13:41', '2018-12-18 10:41:56', '2018-12-18 10:41:56'),
(540, 481, '12:41', 38, '13:41', '2018-12-18 10:41:57', '2018-12-18 10:41:57'),
(541, 470, '12:41', 38, '13:41', '2018-12-18 10:41:59', '2018-12-18 10:41:59'),
(542, 473, '12:41', 38, '13:41', '2018-12-18 10:41:59', '2018-12-18 10:41:59'),
(543, 520, '12:42', 38, '13:42', '2018-12-18 10:42:01', '2018-12-18 10:42:01'),
(544, 462, '12:42', 38, '13:42', '2018-12-18 10:42:02', '2018-12-18 10:42:02'),
(545, 482, '12:42', 38, '13:42', '2018-12-18 10:42:03', '2018-12-18 10:42:03'),
(546, 464, '12:42', 38, '13:42', '2018-12-18 10:42:07', '2018-12-18 10:42:07'),
(547, 500, '12:42', 38, '13:42', '2018-12-18 10:42:08', '2018-12-18 10:42:08'),
(548, 468, '12:42', 38, '13:42', '2018-12-18 10:42:09', '2018-12-18 10:42:09'),
(549, 522, '12:42', 38, '13:42', '2018-12-18 10:42:20', '2018-12-18 10:42:20'),
(550, 476, '12:42', 38, '13:42', '2018-12-18 10:42:37', '2018-12-18 10:42:37'),
(551, 488, '12:42', 38, '13:42', '2018-12-18 10:42:37', '2018-12-18 10:42:37'),
(552, 496, '12:42', 38, '13:42', '2018-12-18 10:42:37', '2018-12-18 10:42:37'),
(553, 515, '12:42', 38, '13:42', '2018-12-18 10:42:38', '2018-12-18 10:42:38'),
(554, 474, '12:42', 38, '13:42', '2018-12-18 10:42:38', '2018-12-18 10:42:38'),
(555, 518, '12:42', 38, '13:42', '2018-12-18 10:42:38', '2018-12-18 10:42:38'),
(556, 511, '12:42', 38, '13:42', '2018-12-18 10:42:38', '2018-12-18 10:42:38'),
(557, 497, '12:42', 38, '13:42', '2018-12-18 10:42:39', '2018-12-18 10:42:39'),
(558, 525, '12:42', 38, '13:42', '2018-12-18 10:42:39', '2018-12-18 10:42:39'),
(559, 519, '12:42', 38, '13:42', '2018-12-18 10:42:39', '2018-12-18 10:42:39'),
(560, 526, '12:42', 38, '13:42', '2018-12-18 10:42:40', '2018-12-18 10:42:40'),
(561, 516, '12:42', 38, '13:42', '2018-12-18 10:42:40', '2018-12-18 10:42:40'),
(562, 523, '12:42', 38, '13:42', '2018-12-18 10:42:40', '2018-12-18 10:42:40'),
(563, 514, '12:42', 38, '13:42', '2018-12-18 10:42:41', '2018-12-18 10:42:41'),
(564, 491, '12:42', 38, '13:42', '2018-12-18 10:42:42', '2018-12-18 10:42:42'),
(565, 524, '12:42', 38, '13:42', '2018-12-18 10:42:43', '2018-12-18 10:42:43'),
(566, 528, '12:42', 38, '13:42', '2018-12-18 10:42:43', '2018-12-18 10:42:43'),
(567, 475, '12:42', 38, '13:42', '2018-12-18 10:42:43', '2018-12-18 10:42:43'),
(568, 527, '12:42', 38, '13:42', '2018-12-18 10:42:57', '2018-12-18 10:42:57'),
(569, 455, '12:44', 38, '13:44', '2018-12-18 10:44:02', '2018-12-18 10:44:02'),
(570, 454, '12:44', 38, '13:44', '2018-12-18 10:44:09', '2018-12-18 10:44:09'),
(571, 487, '12:44', 38, '13:44', '2018-12-18 10:44:31', '2018-12-18 10:44:31'),
(572, 499, '12:46', 38, '13:46', '2018-12-18 10:46:14', '2018-12-18 10:46:14'),
(573, 531, '13:02', 38, '14:02', '2018-12-18 11:02:57', '2018-12-18 11:02:57'),
(574, 513, '13:18', 38, '14:18', '2018-12-18 11:18:08', '2018-12-18 11:18:08'),
(575, 555, '14:33', 40, '15:03', '2019-01-21 12:33:07', '2019-01-21 12:33:07'),
(576, 554, '14:33', 40, '15:03', '2019-01-21 12:33:17', '2019-01-21 12:33:17'),
(577, 565, '14:33', 40, '15:03', '2019-01-21 12:33:23', '2019-01-21 12:33:23'),
(578, 545, '14:33', 40, '15:03', '2019-01-21 12:33:38', '2019-01-21 12:33:38'),
(579, 563, '14:33', 40, '15:03', '2019-01-21 12:33:43', '2019-01-21 12:33:43'),
(580, 540, '14:33', 40, '15:03', '2019-01-21 12:33:46', '2019-01-21 12:33:46'),
(581, 576, '14:33', 40, '15:03', '2019-01-21 12:33:57', '2019-01-21 12:33:57'),
(582, 553, '14:34', 40, '15:04', '2019-01-21 12:34:00', '2019-01-21 12:34:00'),
(583, 581, '14:34', 40, '15:04', '2019-01-21 12:34:00', '2019-01-21 12:34:00'),
(584, 578, '14:34', 40, '15:04', '2019-01-21 12:34:01', '2019-01-21 12:34:01'),
(585, 579, '14:34', 40, '15:04', '2019-01-21 12:34:09', '2019-01-21 12:34:09'),
(586, 535, '14:34', 40, '15:04', '2019-01-21 12:34:23', '2019-01-21 12:34:23'),
(587, 538, '14:34', 40, '15:04', '2019-01-21 12:34:29', '2019-01-21 12:34:29'),
(588, 582, '14:34', 40, '15:04', '2019-01-21 12:34:37', '2019-01-21 12:34:37'),
(589, 568, '14:35', 40, '15:05', '2019-01-21 12:35:07', '2019-01-21 12:35:07'),
(590, 549, '14:35', 40, '15:05', '2019-01-21 12:35:54', '2019-01-21 12:35:54'),
(591, 536, '14:35', 40, '15:05', '2019-01-21 12:35:59', '2019-01-21 12:35:59'),
(592, 571, '14:36', 40, '15:06', '2019-01-21 12:36:00', '2019-01-21 12:36:00'),
(593, 567, '14:36', 40, '15:06', '2019-01-21 12:36:09', '2019-01-21 12:36:09'),
(594, 564, '14:36', 40, '15:06', '2019-01-21 12:36:15', '2019-01-21 12:36:15'),
(595, 548, '14:36', 40, '15:06', '2019-01-21 12:36:24', '2019-01-21 12:36:24'),
(596, 566, '14:36', 40, '15:06', '2019-01-21 12:36:36', '2019-01-21 12:36:36'),
(597, 552, '14:37', 40, '15:07', '2019-01-21 12:37:03', '2019-01-21 12:37:03'),
(598, 574, '14:37', 40, '15:07', '2019-01-21 12:37:04', '2019-01-21 12:37:04'),
(599, 537, '14:37', 40, '15:07', '2019-01-21 12:37:05', '2019-01-21 12:37:05'),
(600, 534, '14:37', 40, '15:07', '2019-01-21 12:37:06', '2019-01-21 12:37:06'),
(601, 547, '14:37', 40, '15:07', '2019-01-21 12:37:15', '2019-01-21 12:37:15'),
(602, 541, '14:37', 40, '15:07', '2019-01-21 12:37:31', '2019-01-21 12:37:31'),
(603, 544, '14:37', 40, '15:07', '2019-01-21 12:37:52', '2019-01-21 12:37:52'),
(604, 573, '14:38', 40, '15:08', '2019-01-21 12:38:11', '2019-01-21 12:38:11'),
(605, 580, '14:38', 40, '15:08', '2019-01-21 12:38:11', '2019-01-21 12:38:11'),
(606, 551, '14:38', 40, '15:08', '2019-01-21 12:38:11', '2019-01-21 12:38:11'),
(607, 569, '14:38', 40, '15:08', '2019-01-21 12:38:27', '2019-01-21 12:38:27'),
(608, 559, '14:39', 40, '15:09', '2019-01-21 12:39:37', '2019-01-21 12:39:37'),
(609, 556, '14:39', 40, '15:09', '2019-01-21 12:39:37', '2019-01-21 12:39:37'),
(610, 572, '14:40', 40, '15:10', '2019-01-21 12:40:14', '2019-01-21 12:40:14'),
(611, 562, '14:40', 40, '15:10', '2019-01-21 12:40:53', '2019-01-21 12:40:53'),
(612, 570, '14:42', 40, '15:12', '2019-01-21 12:42:55', '2019-01-21 12:42:55'),
(613, 542, '14:43', 40, '15:13', '2019-01-21 12:43:35', '2019-01-21 12:43:35'),
(614, 550, '14:43', 40, '15:13', '2019-01-21 12:43:55', '2019-01-21 12:43:55'),
(615, 557, '14:45', 40, '15:15', '2019-01-21 12:45:26', '2019-01-21 12:45:26'),
(616, 543, '14:45', 40, '15:15', '2019-01-21 12:45:27', '2019-01-21 12:45:27'),
(617, 575, '14:49', 40, '15:19', '2019-01-21 12:49:27', '2019-01-21 12:49:27'),
(618, 560, '14:53', 40, '15:23', '2019-01-21 12:53:34', '2019-01-21 12:53:34'),
(619, 543, '14:55', 41, '15:25', '2019-01-21 12:55:04', '2019-01-21 12:55:04'),
(620, 575, '14:55', 41, '15:25', '2019-01-21 12:55:05', '2019-01-21 12:55:05'),
(621, 581, '14:55', 41, '15:25', '2019-01-21 12:55:06', '2019-01-21 12:55:06'),
(622, 578, '14:55', 41, '15:25', '2019-01-21 12:55:07', '2019-01-21 12:55:07'),
(623, 535, '14:55', 41, '15:25', '2019-01-21 12:55:07', '2019-01-21 12:55:07'),
(625, 582, '14:55', 41, '15:25', '2019-01-21 12:55:09', '2019-01-21 12:55:09'),
(626, 545, '14:55', 41, '15:25', '2019-01-21 12:55:12', '2019-01-21 12:55:12'),
(627, 540, '14:55', 41, '15:25', '2019-01-21 12:55:12', '2019-01-21 12:55:12'),
(628, 565, '14:55', 41, '15:25', '2019-01-21 12:55:12', '2019-01-21 12:55:12'),
(629, 542, '14:55', 41, '15:25', '2019-01-21 12:55:15', '2019-01-21 12:55:15'),
(630, 555, '14:55', 41, '15:25', '2019-01-21 12:55:15', '2019-01-21 12:55:15'),
(631, 560, '14:55', 41, '15:25', '2019-01-21 12:55:26', '2019-01-21 12:55:26'),
(632, 579, '14:55', 41, '15:25', '2019-01-21 12:55:27', '2019-01-21 12:55:27'),
(633, 544, '14:55', 41, '15:25', '2019-01-21 12:55:30', '2019-01-21 12:55:30'),
(634, 576, '14:55', 41, '15:25', '2019-01-21 12:55:31', '2019-01-21 12:55:31'),
(635, 548, '14:55', 41, '15:25', '2019-01-21 12:55:35', '2019-01-21 12:55:35'),
(636, 564, '14:55', 41, '15:25', '2019-01-21 12:55:44', '2019-01-21 12:55:44'),
(637, 570, '14:55', 41, '15:25', '2019-01-21 12:55:48', '2019-01-21 12:55:48'),
(638, 550, '14:55', 41, '15:25', '2019-01-21 12:55:59', '2019-01-21 12:55:59'),
(639, 561, '14:56', 41, '15:26', '2019-01-21 12:56:05', '2019-01-21 12:56:05'),
(640, 554, '14:56', 41, '15:26', '2019-01-21 12:56:07', '2019-01-21 12:56:07'),
(641, 567, '14:56', 41, '15:26', '2019-01-21 12:56:21', '2019-01-21 12:56:21'),
(642, 541, '14:56', 41, '15:26', '2019-01-21 12:56:23', '2019-01-21 12:56:23'),
(643, 568, '14:56', 41, '15:26', '2019-01-21 12:56:29', '2019-01-21 12:56:29'),
(644, 569, '15:01', 41, '15:31', '2019-01-21 13:01:12', '2019-01-21 13:01:12'),
(645, 539, '15:01', 41, '15:31', '2019-01-21 13:01:48', '2019-01-21 13:01:48'),
(646, 534, '15:10', 41, '15:40', '2019-01-21 13:10:59', '2019-01-21 13:10:59'),
(647, 538, '15:18', 41, '15:48', '2019-01-21 13:18:03', '2019-01-21 13:18:03'),
(648, 556, '15:18', 41, '15:48', '2019-01-21 13:18:04', '2019-01-21 13:18:04'),
(649, 537, '15:18', 41, '15:48', '2019-01-21 13:18:27', '2019-01-21 13:18:27'),
(650, 558, '15:18', 41, '15:48', '2019-01-21 13:18:29', '2019-01-21 13:18:29'),
(651, 547, '15:18', 41, '15:48', '2019-01-21 13:18:37', '2019-01-21 13:18:37'),
(652, 574, '15:18', 41, '15:48', '2019-01-21 13:18:40', '2019-01-21 13:18:40'),
(653, 552, '15:18', 41, '15:48', '2019-01-21 13:18:42', '2019-01-21 13:18:42'),
(654, 546, '15:18', 41, '15:48', '2019-01-21 13:18:48', '2019-01-21 13:18:48'),
(655, 551, '15:18', 41, '15:48', '2019-01-21 13:18:49', '2019-01-21 13:18:49'),
(656, 559, '15:18', 41, '15:48', '2019-01-21 13:18:54', '2019-01-21 13:18:54'),
(657, 573, '15:19', 41, '15:49', '2019-01-21 13:19:00', '2019-01-21 13:19:00'),
(658, 580, '15:19', 41, '15:49', '2019-01-21 13:19:06', '2019-01-21 13:19:06'),
(659, 583, '15:19', 40, '15:49', '2019-01-21 13:19:07', '2019-01-21 13:19:07'),
(660, 571, '15:19', 41, '15:49', '2019-01-21 13:19:09', '2019-01-21 13:19:09'),
(661, 536, '15:19', 41, '15:49', '2019-01-21 13:19:18', '2019-01-21 13:19:18'),
(662, 566, '15:19', 41, '15:49', '2019-01-21 13:19:20', '2019-01-21 13:19:20'),
(663, 562, '15:19', 41, '15:49', '2019-01-21 13:19:22', '2019-01-21 13:19:22'),
(664, 553, '15:19', 41, '15:49', '2019-01-21 13:19:23', '2019-01-21 13:19:23'),
(665, 563, '15:19', 41, '15:49', '2019-01-21 13:19:49', '2019-01-21 13:19:49'),
(666, 549, '15:19', 41, '15:49', '2019-01-21 13:19:58', '2019-01-21 13:19:58'),
(667, 572, '15:20', 41, '15:50', '2019-01-21 13:20:22', '2019-01-21 13:20:22'),
(668, 561, '15:28', 40, '15:58', '2019-01-21 13:28:28', '2019-01-21 13:28:28'),
(669, 557, '16:07', 41, '16:37', '2019-01-21 14:07:30', '2019-01-21 14:07:30'),
(670, 614, '13:31', 45, '14:21', '2019-02-28 11:31:02', '2019-02-28 11:31:02'),
(671, 778, '13:37', 45, '14:27', '2019-02-28 11:37:15', '2019-02-28 11:37:15'),
(672, 613, '11:01', 49, '11:51', '2019-03-06 09:01:15', '2019-03-06 09:01:15'),
(673, 626, '11:01', 49, '11:51', '2019-03-06 09:01:27', '2019-03-06 09:01:27'),
(674, 621, '11:01', 49, '11:51', '2019-03-06 09:01:40', '2019-03-06 09:01:40'),
(675, 605, '11:02', 49, '11:52', '2019-03-06 09:02:53', '2019-03-06 09:02:53'),
(676, 618, '11:09', 49, '11:59', '2019-03-06 09:09:49', '2019-03-06 09:09:49'),
(677, 614, '11:22', 49, '12:12', '2019-03-06 09:22:02', '2019-03-06 09:22:02'),
(678, 610, '11:23', 49, '12:13', '2019-03-06 09:23:46', '2019-03-06 09:23:46'),
(679, 620, '11:25', 49, '12:15', '2019-03-06 09:25:17', '2019-03-06 09:25:17'),
(680, 697, '12:01', 49, '12:51', '2019-03-06 10:01:45', '2019-03-06 10:01:45'),
(681, 631, '12:10', 49, '13:00', '2019-03-06 10:10:52', '2019-03-06 10:10:52'),
(682, 772, '12:18', 49, '13:08', '2019-03-06 10:18:21', '2019-03-06 10:18:21'),
(683, 702, '12:19', 49, '13:09', '2019-03-06 10:19:11', '2019-03-06 10:19:11'),
(684, 608, '11:30', 49, '12:20', '2019-03-11 09:30:41', '2019-03-11 09:30:41'),
(685, 612, '11:31', 49, '12:21', '2019-03-11 09:31:47', '2019-03-11 09:31:47'),
(686, 606, '11:33', 49, '12:23', '2019-03-11 09:33:22', '2019-03-11 09:33:22'),
(687, 642, '12:12', 49, '13:02', '2019-03-12 10:12:05', '2019-03-12 10:12:05'),
(688, 716, '12:36', 49, '13:26', '2019-03-13 10:36:24', '2019-03-13 10:36:24'),
(689, 730, '13:07', 49, '13:57', '2019-03-13 11:07:14', '2019-03-13 11:07:14'),
(690, 681, '13:36', 49, '14:26', '2019-03-13 11:36:28', '2019-03-13 11:36:28'),
(691, 736, '9:06', 49, '9:56', '2019-03-14 07:06:27', '2019-03-14 07:06:27'),
(692, 737, '9:19', 49, '10:09', '2019-03-14 07:19:44', '2019-03-14 07:19:44'),
(693, 739, '11:54', 49, '12:44', '2019-03-14 09:54:58', '2019-03-14 09:54:58'),
(694, 740, '12:26', 49, '13:16', '2019-03-14 10:26:07', '2019-03-14 10:26:07'),
(695, 680, '12:56', 49, '13:46', '2019-03-14 10:56:29', '2019-03-14 10:56:29'),
(696, 773, '13:11', 49, '14:01', '2019-03-14 11:11:42', '2019-03-14 11:11:42'),
(697, 770, '13:23', 49, '14:13', '2019-03-14 11:23:13', '2019-03-14 11:23:13'),
(698, 795, '19:47', 51, '21:17', '2019-03-14 17:47:21', '2019-03-14 17:47:21'),
(699, 111, '20:26', 51, '21:56', '2019-03-14 18:26:37', '2019-03-14 18:26:37'),
(700, 1049, '14:06', 51, '15:21', '2019-03-15 12:06:00', '2019-03-15 12:06:00'),
(701, 1009, '10:03', 51, '11:18', '2019-03-16 08:03:41', '2019-03-16 08:03:41'),
(702, 1016, '10:03', 51, '11:18', '2019-03-16 08:03:45', '2019-03-16 08:03:45'),
(703, 1017, '10:04', 51, '11:19', '2019-03-16 08:04:08', '2019-03-16 08:04:08'),
(704, 1015, '10:04', 51, '11:19', '2019-03-16 08:04:16', '2019-03-16 08:04:16'),
(705, 964, '10:04', 51, '11:19', '2019-03-16 08:04:25', '2019-03-16 08:04:25'),
(706, 1022, '10:05', 51, '11:20', '2019-03-16 08:05:02', '2019-03-16 08:05:02'),
(707, 1010, '10:05', 51, '11:20', '2019-03-16 08:05:05', '2019-03-16 08:05:05'),
(708, 1021, '10:05', 51, '11:20', '2019-03-16 08:05:19', '2019-03-16 08:05:19'),
(709, 1011, '10:05', 51, '11:20', '2019-03-16 08:05:32', '2019-03-16 08:05:32'),
(710, 1081, '10:05', 51, '11:20', '2019-03-16 08:05:33', '2019-03-16 08:05:33'),
(711, 953, '10:05', 51, '11:20', '2019-03-16 08:05:36', '2019-03-16 08:05:36'),
(712, 1078, '10:05', 51, '11:20', '2019-03-16 08:05:48', '2019-03-16 08:05:48'),
(713, 1087, '10:05', 51, '11:20', '2019-03-16 08:05:51', '2019-03-16 08:05:51'),
(714, 1077, '10:05', 51, '11:20', '2019-03-16 08:05:59', '2019-03-16 08:05:59'),
(715, 1079, '10:06', 51, '11:21', '2019-03-16 08:06:00', '2019-03-16 08:06:00'),
(716, 1014, '10:06', 51, '11:21', '2019-03-16 08:06:04', '2019-03-16 08:06:04'),
(717, 1083, '10:06', 51, '11:21', '2019-03-16 08:06:22', '2019-03-16 08:06:22'),
(718, 1080, '10:06', 51, '11:21', '2019-03-16 08:06:24', '2019-03-16 08:06:24'),
(719, 1086, '10:07', 51, '11:22', '2019-03-16 08:07:02', '2019-03-16 08:07:02'),
(720, 955, '10:07', 51, '11:22', '2019-03-16 08:07:02', '2019-03-16 08:07:02'),
(721, 1084, '10:07', 51, '11:22', '2019-03-16 08:07:14', '2019-03-16 08:07:14'),
(722, 1082, '10:07', 51, '11:22', '2019-03-16 08:07:15', '2019-03-16 08:07:15'),
(723, 930, '10:07', 51, '11:22', '2019-03-16 08:07:28', '2019-03-16 08:07:28'),
(724, 1092, '10:07', 51, '11:22', '2019-03-16 08:07:28', '2019-03-16 08:07:28'),
(725, 1023, '10:07', 51, '11:22', '2019-03-16 08:07:33', '2019-03-16 08:07:33'),
(726, 957, '10:07', 51, '11:22', '2019-03-16 08:07:39', '2019-03-16 08:07:39'),
(727, 1091, '10:07', 51, '11:22', '2019-03-16 08:07:52', '2019-03-16 08:07:52'),
(728, 940, '10:08', 51, '11:23', '2019-03-16 08:08:29', '2019-03-16 08:08:29'),
(729, 942, '10:08', 51, '11:23', '2019-03-16 08:08:36', '2019-03-16 08:08:36'),
(730, 963, '10:08', 51, '11:23', '2019-03-16 08:08:57', '2019-03-16 08:08:57'),
(731, 1095, '10:09', 51, '11:24', '2019-03-16 08:09:06', '2019-03-16 08:09:06'),
(732, 1059, '10:09', 51, '11:24', '2019-03-16 08:09:09', '2019-03-16 08:09:09'),
(733, 950, '10:09', 51, '11:24', '2019-03-16 08:09:17', '2019-03-16 08:09:17'),
(734, 1018, '10:09', 51, '11:24', '2019-03-16 08:09:22', '2019-03-16 08:09:22'),
(735, 932, '10:09', 51, '11:24', '2019-03-16 08:09:26', '2019-03-16 08:09:26'),
(736, 1057, '10:09', 51, '11:24', '2019-03-16 08:09:29', '2019-03-16 08:09:29');
INSERT INTO `times` (`id`, `user_id`, `time`, `exam_id`, `enddate`, `created_at`, `updated_at`) VALUES
(737, 1052, '10:09', 51, '11:24', '2019-03-16 08:09:39', '2019-03-16 08:09:39'),
(738, 1072, '10:09', 51, '11:24', '2019-03-16 08:09:42', '2019-03-16 08:09:42'),
(739, 1071, '10:09', 51, '11:24', '2019-03-16 08:09:44', '2019-03-16 08:09:44'),
(740, 1055, '10:09', 51, '11:24', '2019-03-16 08:09:50', '2019-03-16 08:09:50'),
(741, 1060, '10:09', 51, '11:24', '2019-03-16 08:09:51', '2019-03-16 08:09:51'),
(742, 1074, '10:09', 51, '11:24', '2019-03-16 08:09:55', '2019-03-16 08:09:55'),
(743, 1085, '10:09', 51, '11:24', '2019-03-16 08:09:56', '2019-03-16 08:09:56'),
(744, 1068, '10:09', 51, '11:24', '2019-03-16 08:09:59', '2019-03-16 08:09:59'),
(745, 1073, '10:09', 51, '11:24', '2019-03-16 08:09:59', '2019-03-16 08:09:59'),
(746, 1061, '10:09', 51, '11:24', '2019-03-16 08:09:59', '2019-03-16 08:09:59'),
(747, 1069, '10:09', 51, '11:24', '2019-03-16 08:09:59', '2019-03-16 08:09:59'),
(748, 1062, '10:10', 51, '11:25', '2019-03-16 08:10:00', '2019-03-16 08:10:00'),
(749, 1054, '10:10', 51, '11:25', '2019-03-16 08:10:01', '2019-03-16 08:10:01'),
(750, 1063, '10:10', 51, '11:25', '2019-03-16 08:10:02', '2019-03-16 08:10:02'),
(751, 1088, '10:10', 51, '11:25', '2019-03-16 08:10:05', '2019-03-16 08:10:05'),
(752, 961, '10:10', 51, '11:25', '2019-03-16 08:10:05', '2019-03-16 08:10:05'),
(753, 1090, '10:10', 51, '11:25', '2019-03-16 08:10:17', '2019-03-16 08:10:17'),
(754, 935, '10:10', 51, '11:25', '2019-03-16 08:10:17', '2019-03-16 08:10:17'),
(755, 1094, '10:10', 51, '11:25', '2019-03-16 08:10:40', '2019-03-16 08:10:40'),
(756, 952, '10:10', 51, '11:25', '2019-03-16 08:10:50', '2019-03-16 08:10:50'),
(757, 939, '10:10', 51, '11:25', '2019-03-16 08:10:51', '2019-03-16 08:10:51'),
(758, 933, '10:10', 51, '11:25', '2019-03-16 08:10:56', '2019-03-16 08:10:56'),
(759, 1070, '10:11', 51, '11:26', '2019-03-16 08:11:00', '2019-03-16 08:11:00'),
(760, 934, '10:11', 51, '11:26', '2019-03-16 08:11:11', '2019-03-16 08:11:11'),
(761, 258, '10:11', 51, '11:26', '2019-03-16 08:11:14', '2019-03-16 08:11:14'),
(762, 1065, '10:11', 51, '11:26', '2019-03-16 08:11:22', '2019-03-16 08:11:22'),
(763, 931, '10:11', 51, '11:26', '2019-03-16 08:11:29', '2019-03-16 08:11:29'),
(764, 958, '10:11', 51, '11:26', '2019-03-16 08:11:43', '2019-03-16 08:11:43'),
(765, 959, '10:11', 51, '11:26', '2019-03-16 08:11:44', '2019-03-16 08:11:44'),
(766, 967, '10:11', 51, '11:26', '2019-03-16 08:11:46', '2019-03-16 08:11:46'),
(767, 1056, '10:11', 51, '11:26', '2019-03-16 08:11:50', '2019-03-16 08:11:50'),
(768, 936, '10:12', 51, '11:27', '2019-03-16 08:12:12', '2019-03-16 08:12:12'),
(769, 956, '10:12', 51, '11:27', '2019-03-16 08:12:14', '2019-03-16 08:12:14'),
(770, 954, '10:12', 51, '11:27', '2019-03-16 08:12:26', '2019-03-16 08:12:26'),
(771, 943, '10:12', 51, '11:27', '2019-03-16 08:12:32', '2019-03-16 08:12:32'),
(772, 1051, '10:12', 51, '11:27', '2019-03-16 08:12:40', '2019-03-16 08:12:40'),
(773, 990, '10:13', 51, '11:28', '2019-03-16 08:13:26', '2019-03-16 08:13:26'),
(774, 929, '10:13', 51, '11:28', '2019-03-16 08:13:26', '2019-03-16 08:13:26'),
(775, 1064, '10:13', 51, '11:28', '2019-03-16 08:13:37', '2019-03-16 08:13:37'),
(776, 1006, '10:13', 51, '11:28', '2019-03-16 08:13:49', '2019-03-16 08:13:49'),
(777, 960, '10:13', 51, '11:28', '2019-03-16 08:13:51', '2019-03-16 08:13:51'),
(778, 1008, '10:13', 51, '11:28', '2019-03-16 08:13:51', '2019-03-16 08:13:51'),
(779, 1004, '10:14', 51, '11:29', '2019-03-16 08:14:07', '2019-03-16 08:14:07'),
(780, 947, '10:14', 51, '11:29', '2019-03-16 08:14:12', '2019-03-16 08:14:12'),
(781, 998, '10:14', 51, '11:29', '2019-03-16 08:14:14', '2019-03-16 08:14:14'),
(782, 1002, '10:14', 51, '11:29', '2019-03-16 08:14:36', '2019-03-16 08:14:36'),
(783, 994, '10:14', 51, '11:29', '2019-03-16 08:14:37', '2019-03-16 08:14:37'),
(784, 1020, '10:14', 51, '11:29', '2019-03-16 08:14:56', '2019-03-16 08:14:56'),
(785, 966, '10:14', 51, '11:29', '2019-03-16 08:14:58', '2019-03-16 08:14:58'),
(786, 976, '10:15', 51, '11:30', '2019-03-16 08:15:15', '2019-03-16 08:15:15'),
(787, 993, '10:15', 51, '11:30', '2019-03-16 08:15:22', '2019-03-16 08:15:22'),
(788, 962, '10:15', 51, '11:30', '2019-03-16 08:15:31', '2019-03-16 08:15:31'),
(789, 985, '10:15', 51, '11:30', '2019-03-16 08:15:33', '2019-03-16 08:15:33'),
(790, 968, '10:15', 51, '11:30', '2019-03-16 08:15:44', '2019-03-16 08:15:44'),
(791, 987, '10:15', 51, '11:30', '2019-03-16 08:15:44', '2019-03-16 08:15:44'),
(792, 989, '10:15', 51, '11:30', '2019-03-16 08:15:45', '2019-03-16 08:15:45'),
(793, 981, '10:15', 51, '11:30', '2019-03-16 08:15:46', '2019-03-16 08:15:46'),
(794, 977, '10:15', 51, '11:30', '2019-03-16 08:15:46', '2019-03-16 08:15:46'),
(795, 983, '10:15', 51, '11:30', '2019-03-16 08:15:54', '2019-03-16 08:15:54'),
(796, 986, '10:15', 51, '11:30', '2019-03-16 08:15:56', '2019-03-16 08:15:56'),
(797, 991, '10:15', 51, '11:30', '2019-03-16 08:15:57', '2019-03-16 08:15:57'),
(798, 984, '10:16', 51, '11:31', '2019-03-16 08:16:04', '2019-03-16 08:16:04'),
(799, 972, '10:16', 51, '11:31', '2019-03-16 08:16:05', '2019-03-16 08:16:05'),
(800, 945, '10:16', 51, '11:31', '2019-03-16 08:16:06', '2019-03-16 08:16:06'),
(801, 969, '10:16', 51, '11:31', '2019-03-16 08:16:08', '2019-03-16 08:16:08'),
(802, 978, '10:16', 51, '11:31', '2019-03-16 08:16:15', '2019-03-16 08:16:15'),
(803, 1001, '10:16', 51, '11:31', '2019-03-16 08:16:21', '2019-03-16 08:16:21'),
(804, 941, '10:16', 51, '11:31', '2019-03-16 08:16:45', '2019-03-16 08:16:45'),
(805, 938, '10:16', 51, '11:31', '2019-03-16 08:16:50', '2019-03-16 08:16:50'),
(806, 980, '10:16', 51, '11:31', '2019-03-16 08:16:52', '2019-03-16 08:16:52'),
(807, 971, '10:17', 51, '11:32', '2019-03-16 08:17:08', '2019-03-16 08:17:08'),
(808, 974, '10:17', 51, '11:32', '2019-03-16 08:17:31', '2019-03-16 08:17:31'),
(809, 949, '10:17', 51, '11:32', '2019-03-16 08:17:40', '2019-03-16 08:17:40'),
(810, 997, '10:17', 51, '11:32', '2019-03-16 08:17:52', '2019-03-16 08:17:52'),
(811, 937, '10:18', 51, '11:33', '2019-03-16 08:18:01', '2019-03-16 08:18:01'),
(812, 946, '10:20', 51, '11:35', '2019-03-16 08:20:12', '2019-03-16 08:20:12'),
(813, 970, '10:20', 51, '11:35', '2019-03-16 08:20:19', '2019-03-16 08:20:19'),
(814, 1042, '10:20', 51, '11:35', '2019-03-16 08:20:30', '2019-03-16 08:20:30'),
(815, 992, '10:21', 51, '11:36', '2019-03-16 08:21:28', '2019-03-16 08:21:28'),
(816, 982, '10:21', 51, '11:36', '2019-03-16 08:21:28', '2019-03-16 08:21:28'),
(817, 1000, '10:21', 51, '11:36', '2019-03-16 08:21:49', '2019-03-16 08:21:49'),
(818, 1012, '10:21', 51, '11:36', '2019-03-16 08:21:59', '2019-03-16 08:21:59'),
(819, 999, '10:22', 51, '11:37', '2019-03-16 08:22:01', '2019-03-16 08:22:01'),
(820, 948, '10:22', 51, '11:37', '2019-03-16 08:22:03', '2019-03-16 08:22:03'),
(821, 975, '10:22', 51, '11:37', '2019-03-16 08:22:20', '2019-03-16 08:22:20'),
(822, 1033, '10:22', 51, '11:37', '2019-03-16 08:22:23', '2019-03-16 08:22:23'),
(823, 973, '10:22', 51, '11:37', '2019-03-16 08:22:29', '2019-03-16 08:22:29'),
(824, 1036, '10:22', 51, '11:37', '2019-03-16 08:22:45', '2019-03-16 08:22:45'),
(825, 1026, '10:23', 51, '11:38', '2019-03-16 08:23:55', '2019-03-16 08:23:55'),
(826, 1007, '10:24', 51, '11:39', '2019-03-16 08:24:03', '2019-03-16 08:24:03'),
(827, 1030, '10:24', 51, '11:39', '2019-03-16 08:24:24', '2019-03-16 08:24:24'),
(828, 1047, '10:24', 51, '11:39', '2019-03-16 08:24:27', '2019-03-16 08:24:27'),
(829, 1005, '10:24', 51, '11:39', '2019-03-16 08:24:45', '2019-03-16 08:24:45'),
(830, 1041, '10:26', 51, '11:41', '2019-03-16 08:26:09', '2019-03-16 08:26:09'),
(831, 1013, '10:26', 51, '11:41', '2019-03-16 08:26:10', '2019-03-16 08:26:10'),
(832, 1039, '10:26', 51, '11:41', '2019-03-16 08:26:10', '2019-03-16 08:26:10'),
(833, 1046, '10:26', 51, '11:41', '2019-03-16 08:26:13', '2019-03-16 08:26:13'),
(834, 1035, '10:26', 51, '11:41', '2019-03-16 08:26:26', '2019-03-16 08:26:26'),
(835, 996, '10:27', 51, '11:42', '2019-03-16 08:27:10', '2019-03-16 08:27:10'),
(836, 988, '10:28', 51, '11:43', '2019-03-16 08:28:55', '2019-03-16 08:28:55'),
(837, 1027, '10:29', 51, '11:44', '2019-03-16 08:29:03', '2019-03-16 08:29:03'),
(838, 1034, '10:29', 51, '11:44', '2019-03-16 08:29:47', '2019-03-16 08:29:47'),
(839, 267, '10:31', 51, '11:46', '2019-03-16 08:31:17', '2019-03-16 08:31:17'),
(840, 951, '10:35', 51, '11:50', '2019-03-16 08:35:29', '2019-03-16 08:35:29'),
(841, 1098, '10:36', 51, '11:51', '2019-03-16 08:36:47', '2019-03-16 08:36:47'),
(842, 1099, '10:36', 51, '11:51', '2019-03-16 08:36:58', '2019-03-16 08:36:58'),
(843, 1038, '10:38', 51, '11:53', '2019-03-16 08:38:40', '2019-03-16 08:38:40'),
(844, 1097, '10:40', 51, '11:55', '2019-03-16 08:40:25', '2019-03-16 08:40:25'),
(845, 1003, '10:42', 51, '11:57', '2019-03-16 08:42:07', '2019-03-16 08:42:07'),
(846, 1103, '10:43', 51, '11:58', '2019-03-16 08:43:26', '2019-03-16 08:43:26'),
(847, 1100, '10:43', 51, '11:58', '2019-03-16 08:43:27', '2019-03-16 08:43:27'),
(848, 1102, '10:43', 51, '11:58', '2019-03-16 08:43:29', '2019-03-16 08:43:29'),
(849, 1101, '10:43', 51, '11:58', '2019-03-16 08:43:46', '2019-03-16 08:43:46'),
(850, 1106, '10:44', 51, '11:59', '2019-03-16 08:44:01', '2019-03-16 08:44:01'),
(851, 1105, '10:44', 51, '11:59', '2019-03-16 08:44:13', '2019-03-16 08:44:13'),
(852, 1107, '10:45', 51, '12:00', '2019-03-16 08:45:14', '2019-03-16 08:45:14'),
(853, 1104, '10:45', 51, '12:00', '2019-03-16 08:45:28', '2019-03-16 08:45:28'),
(854, 1112, '10:52', 51, '12:07', '2019-03-16 08:52:50', '2019-03-16 08:52:50'),
(855, 1110, '10:52', 51, '12:07', '2019-03-16 08:52:52', '2019-03-16 08:52:52'),
(856, 1108, '10:55', 51, '12:10', '2019-03-16 08:55:23', '2019-03-16 08:55:23'),
(857, 1109, '10:56', 51, '12:11', '2019-03-16 08:56:15', '2019-03-16 08:56:15'),
(858, 1111, '10:58', 51, '12:13', '2019-03-16 08:58:48', '2019-03-16 08:58:48'),
(859, 642, '11:42', 50, '12:32', '2019-03-20 09:42:58', '2019-03-20 09:42:58'),
(860, 702, '12:01', 50, '12:51', '2019-03-20 10:01:19', '2019-03-20 10:01:19'),
(861, 770, '12:12', 50, '13:02', '2019-03-20 10:12:29', '2019-03-20 10:12:29'),
(862, 730, '13:05', 50, '13:55', '2019-03-20 11:05:06', '2019-03-20 11:05:06'),
(863, 681, '13:13', 50, '14:03', '2019-03-20 11:13:05', '2019-03-20 11:13:05'),
(864, 736, '13:47', 50, '14:37', '2019-03-20 11:47:46', '2019-03-20 11:47:46'),
(865, 680, '12:40', 50, '13:30', '2019-03-21 10:40:38', '2019-03-21 10:40:38'),
(866, 662, '13:03', 50, '13:53', '2019-03-21 11:03:12', '2019-03-21 11:03:12'),
(867, 773, '13:10', 50, '14:00', '2019-03-21 11:10:04', '2019-03-21 11:10:04'),
(868, 614, '13:23', 50, '14:13', '2019-03-21 11:23:55', '2019-03-21 11:23:55'),
(869, 620, '13:24', 50, '14:14', '2019-03-21 11:24:44', '2019-03-21 11:24:44'),
(870, 605, '12:45', 50, '13:35', '2019-03-24 10:45:12', '2019-03-24 10:45:12'),
(871, 606, '12:52', 50, '13:42', '2019-03-24 10:52:41', '2019-03-24 10:52:41'),
(872, 613, '13:03', 50, '13:53', '2019-03-24 11:03:59', '2019-03-24 11:03:59'),
(873, 612, '13:06', 50, '13:56', '2019-03-24 11:06:23', '2019-03-24 11:06:23'),
(874, 739, '13:15', 50, '14:05', '2019-03-24 11:15:06', '2019-03-24 11:15:06'),
(875, 740, '13:17', 50, '14:07', '2019-03-24 11:17:14', '2019-03-24 11:17:14'),
(876, 772, '13:18', 50, '14:08', '2019-03-25 11:18:40', '2019-03-25 11:18:40'),
(877, 608, '11:50', 50, '12:40', '2019-03-27 09:50:12', '2019-03-27 09:50:12'),
(878, 621, '11:59', 50, '12:49', '2019-03-27 09:59:30', '2019-03-27 09:59:30'),
(879, 716, '12:07', 50, '12:57', '2019-03-27 10:07:45', '2019-03-27 10:07:45'),
(880, 453, '19:53', 56, '20:23', '2019-04-02 17:53:06', '2019-04-02 17:53:06'),
(881, 867, '12:28', 55, '13:58', '2019-04-03 10:28:08', '2019-04-03 10:28:08'),
(882, 957, '12:47', 55, '14:17', '2019-04-03 10:47:11', '2019-04-03 10:47:11'),
(883, 1129, '8:05', 58, '9:05', '2019-04-09 06:05:52', '2019-04-09 06:05:52'),
(884, 1133, '8:05', 58, '9:05', '2019-04-09 06:05:57', '2019-04-09 06:05:57'),
(885, 1121, '8:06', 58, '9:06', '2019-04-09 06:06:21', '2019-04-09 06:06:21'),
(886, 1135, '8:06', 58, '9:06', '2019-04-09 06:06:33', '2019-04-09 06:06:33'),
(887, 1136, '8:06', 58, '9:06', '2019-04-09 06:06:33', '2019-04-09 06:06:33'),
(888, 1123, '8:07', 58, '9:07', '2019-04-09 06:07:38', '2019-04-09 06:07:38'),
(889, 1138, '8:07', 58, '9:07', '2019-04-09 06:07:48', '2019-04-09 06:07:48'),
(890, 1124, '8:07', 58, '9:07', '2019-04-09 06:07:56', '2019-04-09 06:07:56'),
(891, 1131, '8:08', 58, '9:08', '2019-04-09 06:08:56', '2019-04-09 06:08:56'),
(892, 1134, '8:08', 58, '9:08', '2019-04-09 06:08:57', '2019-04-09 06:08:57'),
(893, 1125, '8:09', 58, '9:09', '2019-04-09 06:09:08', '2019-04-09 06:09:08'),
(894, 1126, '8:09', 58, '9:09', '2019-04-09 06:09:24', '2019-04-09 06:09:24'),
(895, 1127, '8:09', 58, '9:09', '2019-04-09 06:09:45', '2019-04-09 06:09:45'),
(896, 1128, '8:10', 58, '9:10', '2019-04-09 06:10:36', '2019-04-09 06:10:36'),
(897, 1122, '8:10', 58, '9:10', '2019-04-09 06:10:50', '2019-04-09 06:10:50'),
(898, 1130, '8:18', 58, '9:18', '2019-04-09 06:18:10', '2019-04-09 06:18:10'),
(899, 1140, '8:20', 58, '9:20', '2019-04-09 06:20:30', '2019-04-09 06:20:30'),
(900, 1139, '8:31', 58, '9:31', '2019-04-09 06:31:22', '2019-04-09 06:31:22'),
(901, 1246, '16:18', 65, '16:48', '2019-04-22 14:18:17', '2019-04-22 14:18:17'),
(902, 1252, '18:47', 34, '20:17', '2019-04-22 16:47:25', '2019-04-22 16:47:25'),
(903, 1229, '18:54', 65, '19:24', '2019-04-22 16:54:45', '2019-04-22 16:54:45'),
(904, 1252, '18:54', 65, '19:24', '2019-04-22 16:54:47', '2019-04-22 16:54:47'),
(905, 1251, '18:54', 65, '19:24', '2019-04-22 16:54:47', '2019-04-22 16:54:47'),
(906, 1244, '18:54', 65, '19:24', '2019-04-22 16:54:49', '2019-04-22 16:54:49'),
(907, 1260, '18:54', 65, '19:24', '2019-04-22 16:54:50', '2019-04-22 16:54:50'),
(908, 1253, '18:54', 65, '19:24', '2019-04-22 16:54:51', '2019-04-22 16:54:51'),
(909, 1254, '18:54', 65, '19:24', '2019-04-22 16:54:51', '2019-04-22 16:54:51'),
(910, 1265, '18:54', 65, '19:24', '2019-04-22 16:54:52', '2019-04-22 16:54:52'),
(911, 1261, '18:54', 65, '19:24', '2019-04-22 16:54:55', '2019-04-22 16:54:55'),
(912, 1266, '18:54', 65, '19:24', '2019-04-22 16:54:56', '2019-04-22 16:54:56'),
(913, 1237, '18:54', 65, '19:24', '2019-04-22 16:54:57', '2019-04-22 16:54:57'),
(914, 1264, '18:54', 65, '19:24', '2019-04-22 16:54:58', '2019-04-22 16:54:58'),
(915, 1263, '18:55', 65, '19:25', '2019-04-22 16:55:00', '2019-04-22 16:55:00'),
(916, 1255, '18:55', 65, '19:25', '2019-04-22 16:55:01', '2019-04-22 16:55:01'),
(917, 1257, '18:55', 65, '19:25', '2019-04-22 16:55:02', '2019-04-22 16:55:02'),
(918, 1259, '18:55', 65, '19:25', '2019-04-22 16:55:04', '2019-04-22 16:55:04'),
(919, 1258, '18:55', 65, '19:25', '2019-04-22 16:55:18', '2019-04-22 16:55:18'),
(920, 1233, '18:55', 65, '19:25', '2019-04-22 16:55:25', '2019-04-22 16:55:25'),
(921, 1234, '18:55', 65, '19:25', '2019-04-22 16:55:26', '2019-04-22 16:55:26'),
(922, 1238, '18:55', 65, '19:25', '2019-04-22 16:55:27', '2019-04-22 16:55:27'),
(923, 1248, '18:55', 65, '19:25', '2019-04-22 16:55:27', '2019-04-22 16:55:27'),
(924, 1227, '18:55', 65, '19:25', '2019-04-22 16:55:28', '2019-04-22 16:55:28'),
(925, 1247, '18:55', 65, '19:25', '2019-04-22 16:55:28', '2019-04-22 16:55:28'),
(926, 1242, '18:55', 65, '19:25', '2019-04-22 16:55:29', '2019-04-22 16:55:29'),
(927, 1250, '18:55', 65, '19:25', '2019-04-22 16:55:29', '2019-04-22 16:55:29'),
(928, 1235, '18:55', 65, '19:25', '2019-04-22 16:55:30', '2019-04-22 16:55:30'),
(929, 1235, '18:55', 65, '19:25', '2019-04-22 16:55:30', '2019-04-22 16:55:30'),
(930, 1239, '18:55', 65, '19:25', '2019-04-22 16:55:31', '2019-04-22 16:55:31'),
(931, 1245, '18:55', 65, '19:25', '2019-04-22 16:55:32', '2019-04-22 16:55:32'),
(932, 1240, '18:55', 65, '19:25', '2019-04-22 16:55:33', '2019-04-22 16:55:33'),
(933, 1241, '18:55', 65, '19:25', '2019-04-22 16:55:36', '2019-04-22 16:55:36'),
(934, 1232, '18:55', 65, '19:25', '2019-04-22 16:55:39', '2019-04-22 16:55:39'),
(935, 1256, '18:55', 65, '19:25', '2019-04-22 16:55:40', '2019-04-22 16:55:40'),
(936, 1236, '18:55', 65, '19:25', '2019-04-22 16:55:46', '2019-04-22 16:55:46'),
(937, 1243, '18:55', 65, '19:25', '2019-04-22 16:55:52', '2019-04-22 16:55:52'),
(938, 1262, '18:55', 65, '19:25', '2019-04-22 16:55:53', '2019-04-22 16:55:53'),
(939, 1230, '18:55', 65, '19:25', '2019-04-22 16:55:56', '2019-04-22 16:55:56'),
(940, 1231, '18:56', 65, '19:26', '2019-04-22 16:56:14', '2019-04-22 16:56:14'),
(941, 1267, '19:08', 65, '19:38', '2019-04-22 17:08:29', '2019-04-22 17:08:29'),
(942, 111, '13:05', 69, '14:35', '2019-04-24 11:05:56', '2019-04-24 11:05:56'),
(943, 1111, '13:07', 69, '14:37', '2019-04-24 11:07:12', '2019-04-24 11:07:12'),
(944, 239, '16:05', 67, '17:35', '2019-04-24 14:05:12', '2019-04-24 14:05:12'),
(945, 435, '16:05', 67, '17:35', '2019-04-24 14:05:24', '2019-04-24 14:05:24'),
(946, 348, '16:08', 67, '17:38', '2019-04-24 14:08:13', '2019-04-24 14:08:13'),
(947, 311, '16:08', 67, '17:38', '2019-04-24 14:08:14', '2019-04-24 14:08:14'),
(948, 413, '16:10', 67, '17:40', '2019-04-24 14:10:26', '2019-04-24 14:10:26'),
(949, 159, '16:10', 67, '17:40', '2019-04-24 14:10:36', '2019-04-24 14:10:36'),
(950, 219, '16:10', 67, '17:40', '2019-04-24 14:10:44', '2019-04-24 14:10:44'),
(951, 265, '16:10', 67, '17:40', '2019-04-24 14:10:47', '2019-04-24 14:10:47'),
(952, 263, '16:10', 67, '17:40', '2019-04-24 14:10:48', '2019-04-24 14:10:48'),
(953, 336, '16:10', 67, '17:40', '2019-04-24 14:10:59', '2019-04-24 14:10:59'),
(954, 120, '16:11', 67, '17:41', '2019-04-24 14:11:48', '2019-04-24 14:11:48'),
(955, 125, '16:11', 67, '17:41', '2019-04-24 14:11:49', '2019-04-24 14:11:49'),
(956, 345, '16:12', 67, '17:42', '2019-04-24 14:12:08', '2019-04-24 14:12:08'),
(957, 367, '16:12', 67, '17:42', '2019-04-24 14:12:18', '2019-04-24 14:12:18'),
(958, 134, '16:14', 67, '17:44', '2019-04-24 14:14:09', '2019-04-24 14:14:09'),
(959, 347, '16:14', 67, '17:44', '2019-04-24 14:14:31', '2019-04-24 14:14:31'),
(960, 129, '16:16', 67, '17:46', '2019-04-24 14:16:12', '2019-04-24 14:16:12'),
(961, 365, '16:16', 67, '17:46', '2019-04-24 14:16:42', '2019-04-24 14:16:42'),
(962, 160, '16:17', 67, '17:47', '2019-04-24 14:17:42', '2019-04-24 14:17:42'),
(963, 230, '16:20', 67, '17:50', '2019-04-24 14:20:17', '2019-04-24 14:20:17'),
(964, 433, '16:33', 67, '18:03', '2019-04-24 14:33:29', '2019-04-24 14:33:29'),
(965, 215, '16:34', 67, '18:04', '2019-04-24 14:34:17', '2019-04-24 14:34:17'),
(966, 184, '16:34', 67, '18:04', '2019-04-24 14:34:57', '2019-04-24 14:34:57'),
(967, 442, '16:36', 67, '18:06', '2019-04-24 14:36:21', '2019-04-24 14:36:21'),
(968, 118, '16:36', 67, '18:06', '2019-04-24 14:36:58', '2019-04-24 14:36:58'),
(969, 143, '16:37', 67, '18:07', '2019-04-24 14:37:06', '2019-04-24 14:37:06'),
(970, 370, '16:39', 67, '18:09', '2019-04-24 14:39:22', '2019-04-24 14:39:22'),
(971, 1268, '16:47', 67, '18:17', '2019-04-24 14:47:32', '2019-04-24 14:47:32'),
(972, 1121, '8:31', 70, '9:31', '2019-05-13 06:31:55', '2019-05-13 06:31:55'),
(973, 957, '9:00', 70, '10:00', '2019-05-13 07:00:13', '2019-05-13 07:00:13'),
(974, 967, '9:00', 70, '10:00', '2019-05-13 07:00:32', '2019-05-13 07:00:32'),
(975, 954, '9:00', 70, '10:00', '2019-05-13 07:00:53', '2019-05-13 07:00:53'),
(976, 1065, '9:00', 70, '10:00', '2019-05-13 07:00:57', '2019-05-13 07:00:57'),
(977, 961, '9:01', 70, '10:01', '2019-05-13 07:01:07', '2019-05-13 07:01:07'),
(978, 960, '9:01', 70, '10:01', '2019-05-13 07:01:11', '2019-05-13 07:01:11'),
(979, 955, '9:01', 70, '10:01', '2019-05-13 07:01:34', '2019-05-13 07:01:34'),
(980, 251, '9:01', 70, '10:01', '2019-05-13 07:01:43', '2019-05-13 07:01:43'),
(981, 956, '9:02', 70, '10:02', '2019-05-13 07:02:20', '2019-05-13 07:02:20'),
(982, 959, '9:02', 70, '10:02', '2019-05-13 07:02:43', '2019-05-13 07:02:43'),
(983, 942, '9:03', 70, '10:03', '2019-05-13 07:03:12', '2019-05-13 07:03:12'),
(984, 1009, '9:03', 70, '10:08', '2019-05-13 07:03:38', '2019-05-13 07:03:38'),
(985, 940, '9:03', 70, '10:08', '2019-05-13 07:03:44', '2019-05-13 07:03:44'),
(986, 930, '10:03', 70, '11:08', '2019-05-13 07:03:47', '2019-05-13 07:03:47'),
(987, 980, '9:04', 70, '10:09', '2019-05-13 07:04:04', '2019-05-13 07:04:04'),
(988, 945, '9:04', 70, '10:09', '2019-05-13 07:04:13', '2019-05-13 07:04:13'),
(989, 1054, '9:58', 71, '10:59', '2019-05-13 07:58:40', '2019-05-13 07:58:40'),
(990, 1054, '9:59', 70, '11:04', '2019-05-13 07:59:49', '2019-05-13 07:59:49'),
(991, 943, '10:03', 70, '11:08', '2019-05-13 08:03:25', '2019-05-13 08:03:25'),
(992, 1020, '10:04', 70, '11:09', '2019-05-13 08:04:13', '2019-05-13 08:04:13'),
(993, 1016, '10:04', 70, '11:09', '2019-05-13 08:04:16', '2019-05-13 08:04:16'),
(994, 1105, '10:05', 70, '11:10', '2019-05-13 08:05:33', '2019-05-13 08:05:33'),
(995, 1008, '10:05', 70, '11:10', '2019-05-13 08:05:53', '2019-05-13 08:05:53'),
(996, 1105, '10:05', 71, '11:06', '2019-05-13 08:05:54', '2019-05-13 08:05:54'),
(997, 936, '10:10', 70, '11:15', '2019-05-13 08:10:32', '2019-05-13 08:10:32'),
(998, 947, '10:14', 70, '11:19', '2019-05-13 08:14:06', '2019-05-13 08:14:06'),
(999, 974, '10:14', 70, '11:19', '2019-05-13 08:14:15', '2019-05-13 08:14:15'),
(1000, 1042, '10:14', 70, '11:19', '2019-05-13 08:14:52', '2019-05-13 08:14:52'),
(1001, 988, '10:15', 70, '11:20', '2019-05-13 08:15:12', '2019-05-13 08:15:12'),
(1002, 983, '10:15', 70, '11:20', '2019-05-13 08:15:24', '2019-05-13 08:15:24'),
(1003, 986, '10:15', 70, '11:20', '2019-05-13 08:15:44', '2019-05-13 08:15:44'),
(1004, 977, '10:16', 70, '11:21', '2019-05-13 08:16:16', '2019-05-13 08:16:16'),
(1005, 1052, '10:18', 70, '11:23', '2019-05-13 08:18:02', '2019-05-13 08:18:02'),
(1006, 1057, '10:18', 70, '11:23', '2019-05-13 08:18:10', '2019-05-13 08:18:10'),
(1007, 1068, '10:18', 70, '11:23', '2019-05-13 08:18:18', '2019-05-13 08:18:18'),
(1008, 1063, '10:18', 70, '11:23', '2019-05-13 08:18:45', '2019-05-13 08:18:45'),
(1009, 1072, '10:18', 70, '11:23', '2019-05-13 08:18:53', '2019-05-13 08:18:53'),
(1010, 946, '10:18', 70, '11:23', '2019-05-13 08:18:56', '2019-05-13 08:18:56'),
(1011, 1056, '10:19', 70, '11:24', '2019-05-13 08:19:01', '2019-05-13 08:19:01'),
(1012, 1059, '10:19', 70, '11:24', '2019-05-13 08:19:05', '2019-05-13 08:19:05'),
(1013, 1033, '10:19', 70, '11:24', '2019-05-13 08:19:06', '2019-05-13 08:19:06'),
(1014, 976, '10:19', 70, '11:24', '2019-05-13 08:19:22', '2019-05-13 08:19:22'),
(1015, 1074, '10:19', 70, '11:24', '2019-05-13 08:19:28', '2019-05-13 08:19:28'),
(1016, 982, '10:19', 70, '11:24', '2019-05-13 08:19:42', '2019-05-13 08:19:42'),
(1017, 970, '10:19', 70, '11:24', '2019-05-13 08:19:53', '2019-05-13 08:19:53'),
(1018, 1108, '10:20', 70, '11:25', '2019-05-13 08:20:35', '2019-05-13 08:20:35'),
(1019, 935, '10:21', 70, '11:26', '2019-05-13 08:21:09', '2019-05-13 08:21:09'),
(1020, 1064, '10:21', 70, '11:26', '2019-05-13 08:21:33', '2019-05-13 08:21:33'),
(1021, 973, '10:21', 70, '11:26', '2019-05-13 08:21:44', '2019-05-13 08:21:44'),
(1022, 1071, '10:21', 70, '11:26', '2019-05-13 08:21:48', '2019-05-13 08:21:48'),
(1023, 987, '10:22', 70, '11:27', '2019-05-13 08:22:31', '2019-05-13 08:22:31'),
(1024, 937, '10:22', 70, '11:27', '2019-05-13 08:22:37', '2019-05-13 08:22:37'),
(1025, 1062, '10:22', 70, '11:27', '2019-05-13 08:22:52', '2019-05-13 08:22:52'),
(1026, 972, '10:23', 70, '11:28', '2019-05-13 08:23:02', '2019-05-13 08:23:02'),
(1027, 1014, '10:23', 70, '11:28', '2019-05-13 08:23:09', '2019-05-13 08:23:09'),
(1028, 981, '10:25', 70, '11:30', '2019-05-13 08:25:13', '2019-05-13 08:25:13'),
(1029, 984, '10:25', 70, '11:30', '2019-05-13 08:25:27', '2019-05-13 08:25:27'),
(1030, 1061, '10:26', 70, '11:31', '2019-05-13 08:26:00', '2019-05-13 08:26:00'),
(1031, 1070, '10:26', 70, '11:31', '2019-05-13 08:26:35', '2019-05-13 08:26:35'),
(1032, 1069, '10:26', 70, '11:31', '2019-05-13 08:26:59', '2019-05-13 08:26:59'),
(1033, 1060, '10:27', 70, '11:32', '2019-05-13 08:27:01', '2019-05-13 08:27:01'),
(1034, 1055, '10:27', 70, '11:32', '2019-05-13 08:27:05', '2019-05-13 08:27:05'),
(1035, 969, '10:28', 70, '11:33', '2019-05-13 08:28:44', '2019-05-13 08:28:44'),
(1036, 267, '10:28', 70, '11:33', '2019-05-13 08:28:51', '2019-05-13 08:28:51'),
(1037, 1073, '10:29', 70, '11:34', '2019-05-13 08:29:20', '2019-05-13 08:29:20'),
(1038, 931, '10:29', 70, '11:34', '2019-05-13 08:29:23', '2019-05-13 08:29:23'),
(1039, 1051, '10:29', 70, '11:34', '2019-05-13 08:29:35', '2019-05-13 08:29:35'),
(1040, 941, '10:29', 70, '11:34', '2019-05-13 08:29:36', '2019-05-13 08:29:36'),
(1041, 989, '10:29', 70, '11:34', '2019-05-13 08:29:39', '2019-05-13 08:29:39'),
(1042, 1017, '10:29', 70, '11:34', '2019-05-13 08:29:54', '2019-05-13 08:29:54'),
(1043, 1010, '10:30', 70, '11:35', '2019-05-13 08:30:04', '2019-05-13 08:30:04'),
(1044, 968, '10:30', 70, '11:35', '2019-05-13 08:30:43', '2019-05-13 08:30:43'),
(1045, 978, '10:32', 70, '11:37', '2019-05-13 08:32:02', '2019-05-13 08:32:02'),
(1046, 971, '10:32', 70, '11:37', '2019-05-13 08:32:04', '2019-05-13 08:32:04'),
(1047, 975, '10:32', 70, '11:37', '2019-05-13 08:32:07', '2019-05-13 08:32:07'),
(1048, 1015, '10:32', 70, '11:37', '2019-05-13 08:32:53', '2019-05-13 08:32:53'),
(1049, 1000, '10:33', 70, '11:38', '2019-05-13 08:33:25', '2019-05-13 08:33:25'),
(1050, 1011, '10:33', 70, '11:38', '2019-05-13 08:33:28', '2019-05-13 08:33:28'),
(1051, 1101, '10:34', 70, '11:39', '2019-05-13 08:34:03', '2019-05-13 08:34:03'),
(1052, 949, '10:38', 70, '11:43', '2019-05-13 08:38:15', '2019-05-13 08:38:15'),
(1053, 999, '10:38', 70, '11:43', '2019-05-13 08:38:33', '2019-05-13 08:38:33'),
(1054, 929, '10:38', 70, '11:43', '2019-05-13 08:38:59', '2019-05-13 08:38:59'),
(1055, 1012, '10:40', 70, '11:45', '2019-05-13 08:40:05', '2019-05-13 08:40:05'),
(1056, 1005, '10:41', 70, '11:46', '2019-05-13 08:41:04', '2019-05-13 08:41:04'),
(1057, 1022, '10:41', 70, '11:46', '2019-05-13 08:41:36', '2019-05-13 08:41:36'),
(1058, 1021, '10:41', 70, '11:46', '2019-05-13 08:41:38', '2019-05-13 08:41:38'),
(1059, 990, '10:43', 70, '11:48', '2019-05-13 08:43:10', '2019-05-13 08:43:10'),
(1060, 1090, '10:45', 70, '11:50', '2019-05-13 08:45:21', '2019-05-13 08:45:21'),
(1061, 1080, '10:45', 34, '12:15', '2019-05-13 08:45:51', '2019-05-13 08:45:51'),
(1062, 1080, '10:46', 70, '11:51', '2019-05-13 08:46:10', '2019-05-13 08:46:10'),
(1063, 1082, '10:46', 70, '11:51', '2019-05-13 08:46:20', '2019-05-13 08:46:20'),
(1064, 985, '10:46', 70, '11:51', '2019-05-13 08:46:21', '2019-05-13 08:46:21'),
(1065, 1079, '10:46', 70, '11:51', '2019-05-13 08:46:36', '2019-05-13 08:46:36'),
(1066, 1092, '10:46', 70, '11:51', '2019-05-13 08:46:38', '2019-05-13 08:46:38'),
(1067, 1085, '10:46', 70, '11:51', '2019-05-13 08:46:46', '2019-05-13 08:46:46'),
(1068, 1078, '10:46', 70, '11:51', '2019-05-13 08:46:50', '2019-05-13 08:46:50'),
(1069, 1081, '10:47', 70, '11:52', '2019-05-13 08:47:13', '2019-05-13 08:47:13'),
(1070, 1095, '10:47', 70, '11:52', '2019-05-13 08:47:36', '2019-05-13 08:47:36'),
(1071, 1087, '10:47', 70, '11:52', '2019-05-13 08:47:43', '2019-05-13 08:47:43'),
(1072, 1023, '10:48', 70, '11:53', '2019-05-13 08:48:06', '2019-05-13 08:48:06'),
(1073, 939, '10:48', 70, '11:53', '2019-05-13 08:48:22', '2019-05-13 08:48:22'),
(1074, 1084, '10:48', 70, '11:53', '2019-05-13 08:48:25', '2019-05-13 08:48:25'),
(1075, 1094, '10:48', 70, '11:53', '2019-05-13 08:48:31', '2019-05-13 08:48:31'),
(1076, 1077, '10:49', 70, '11:54', '2019-05-13 08:49:46', '2019-05-13 08:49:46'),
(1077, 1006, '10:50', 70, '11:55', '2019-05-13 08:50:04', '2019-05-13 08:50:04'),
(1078, 1002, '10:50', 70, '11:55', '2019-05-13 08:50:05', '2019-05-13 08:50:05'),
(1079, 951, '10:50', 70, '11:55', '2019-05-13 08:50:16', '2019-05-13 08:50:16'),
(1080, 933, '10:51', 70, '11:56', '2019-05-13 08:51:41', '2019-05-13 08:51:41'),
(1081, 1097, '10:51', 70, '11:56', '2019-05-13 08:51:51', '2019-05-13 08:51:51'),
(1082, 992, '10:52', 70, '11:57', '2019-05-13 08:52:50', '2019-05-13 08:52:50'),
(1083, 258, '10:53', 70, '11:58', '2019-05-13 08:53:28', '2019-05-13 08:53:28'),
(1084, 1099, '10:54', 70, '11:59', '2019-05-13 08:54:20', '2019-05-13 08:54:20'),
(1085, 1103, '10:54', 70, '11:59', '2019-05-13 08:54:52', '2019-05-13 08:54:52'),
(1086, 1001, '10:55', 70, '12:00', '2019-05-13 08:55:19', '2019-05-13 08:55:19'),
(1087, 1047, '10:55', 70, '12:00', '2019-05-13 08:55:23', '2019-05-13 08:55:23'),
(1088, 1049, '10:55', 70, '12:00', '2019-05-13 08:55:42', '2019-05-13 08:55:42'),
(1089, 1003, '10:56', 70, '12:01', '2019-05-13 08:56:14', '2019-05-13 08:56:14'),
(1090, 934, '10:56', 70, '12:01', '2019-05-13 08:56:38', '2019-05-13 08:56:38'),
(1091, 1035, '10:57', 70, '12:02', '2019-05-13 08:57:27', '2019-05-13 08:57:27'),
(1092, 1107, '10:57', 70, '12:02', '2019-05-13 08:57:39', '2019-05-13 08:57:39'),
(1093, 1088, '10:58', 70, '12:03', '2019-05-13 08:58:38', '2019-05-13 08:58:38'),
(1094, 1091, '10:58', 70, '12:03', '2019-05-13 08:58:55', '2019-05-13 08:58:55'),
(1095, 950, '10:59', 70, '12:04', '2019-05-13 08:59:11', '2019-05-13 08:59:11'),
(1096, 1111, '10:59', 70, '12:04', '2019-05-13 08:59:12', '2019-05-13 08:59:12'),
(1097, 1098, '10:59', 70, '12:04', '2019-05-13 08:59:46', '2019-05-13 08:59:46'),
(1098, 1026, '11:00', 70, '12:05', '2019-05-13 09:00:15', '2019-05-13 09:00:15'),
(1099, 1013, '11:00', 70, '12:05', '2019-05-13 09:00:55', '2019-05-13 09:00:55'),
(1100, 1045, '11:01', 70, '12:06', '2019-05-13 09:01:21', '2019-05-13 09:01:21'),
(1101, 953, '11:01', 70, '12:06', '2019-05-13 09:01:39', '2019-05-13 09:01:39'),
(1102, 962, '11:01', 70, '12:06', '2019-05-13 09:01:56', '2019-05-13 09:01:56'),
(1103, 1004, '11:01', 70, '12:06', '2019-05-13 09:01:58', '2019-05-13 09:01:58'),
(1104, 963, '11:02', 70, '12:07', '2019-05-13 09:02:18', '2019-05-13 09:02:18'),
(1105, 938, '11:02', 70, '12:07', '2019-05-13 09:02:44', '2019-05-13 09:02:44'),
(1106, 1030, '11:03', 70, '12:08', '2019-05-13 09:03:14', '2019-05-13 09:03:14'),
(1107, 932, '11:03', 70, '12:08', '2019-05-13 09:03:22', '2019-05-13 09:03:22'),
(1108, 1038, '11:03', 70, '12:08', '2019-05-13 09:03:36', '2019-05-13 09:03:36'),
(1109, 1027, '11:04', 70, '12:09', '2019-05-13 09:04:41', '2019-05-13 09:04:41'),
(1110, 1007, '11:05', 70, '12:10', '2019-05-13 09:05:12', '2019-05-13 09:05:12'),
(1111, 1106, '11:05', 70, '12:10', '2019-05-13 09:05:21', '2019-05-13 09:05:21'),
(1112, 997, '11:06', 70, '12:11', '2019-05-13 09:06:06', '2019-05-13 09:06:06'),
(1113, 1104, '11:10', 34, '12:40', '2019-05-13 09:10:32', '2019-05-13 09:10:32'),
(1114, 1104, '11:11', 70, '12:16', '2019-05-13 09:11:24', '2019-05-13 09:11:24'),
(1115, 1039, '11:11', 70, '12:16', '2019-05-13 09:11:29', '2019-05-13 09:11:29'),
(1116, 952, '11:11', 70, '12:16', '2019-05-13 09:11:33', '2019-05-13 09:11:33'),
(1117, 1100, '11:11', 70, '12:16', '2019-05-13 09:11:45', '2019-05-13 09:11:45'),
(1118, 1046, '11:11', 70, '12:16', '2019-05-13 09:11:49', '2019-05-13 09:11:49'),
(1119, 1110, '11:11', 70, '12:16', '2019-05-13 09:11:51', '2019-05-13 09:11:51'),
(1120, 1041, '11:11', 70, '12:16', '2019-05-13 09:11:54', '2019-05-13 09:11:54'),
(1121, 998, '11:11', 70, '12:16', '2019-05-13 09:11:55', '2019-05-13 09:11:55'),
(1122, 1034, '11:11', 70, '12:16', '2019-05-13 09:11:59', '2019-05-13 09:11:59'),
(1123, 958, '11:12', 70, '12:17', '2019-05-13 09:12:53', '2019-05-13 09:12:53'),
(1124, 1083, '11:13', 70, '12:18', '2019-05-13 09:13:22', '2019-05-13 09:13:22'),
(1125, 1018, '11:15', 70, '12:20', '2019-05-13 09:15:11', '2019-05-13 09:15:11'),
(1126, 966, '11:18', 70, '12:23', '2019-05-13 09:18:07', '2019-05-13 09:18:07'),
(1127, 993, '11:18', 70, '12:23', '2019-05-13 09:18:45', '2019-05-13 09:18:45'),
(1128, 996, '11:19', 70, '12:24', '2019-05-13 09:19:13', '2019-05-13 09:19:13'),
(1129, 991, '11:24', 70, '12:29', '2019-05-13 09:24:00', '2019-05-13 09:24:00'),
(1130, 1035, '12:04', 34, '13:34', '2019-05-13 10:04:59', '2019-05-13 10:04:59'),
(1131, 1035, '12:14', 72, '13:16', '2019-05-13 10:14:03', '2019-05-13 10:14:03'),
(1132, 842, '12:14', 72, '13:16', '2019-05-13 10:14:18', '2019-05-13 10:14:18'),
(1133, 854, '12:14', 72, '13:16', '2019-05-13 10:14:28', '2019-05-13 10:14:28'),
(1134, 839, '12:14', 72, '13:16', '2019-05-13 10:14:28', '2019-05-13 10:14:28'),
(1135, 781, '12:14', 72, '13:16', '2019-05-13 10:14:29', '2019-05-13 10:14:29'),
(1136, 994, '12:14', 72, '13:16', '2019-05-13 10:14:29', '2019-05-13 10:14:29'),
(1137, 843, '12:14', 72, '13:16', '2019-05-13 10:14:47', '2019-05-13 10:14:47'),
(1138, 841, '12:15', 72, '13:17', '2019-05-13 10:15:38', '2019-05-13 10:15:38'),
(1139, 837, '12:15', 72, '13:17', '2019-05-13 10:15:56', '2019-05-13 10:15:56'),
(1140, 840, '12:16', 72, '13:18', '2019-05-13 10:16:08', '2019-05-13 10:16:08'),
(1141, 851, '12:16', 72, '13:18', '2019-05-13 10:16:18', '2019-05-13 10:16:18'),
(1142, 847, '12:16', 72, '13:18', '2019-05-13 10:16:18', '2019-05-13 10:16:18'),
(1143, 832, '12:16', 72, '13:18', '2019-05-13 10:16:34', '2019-05-13 10:16:34'),
(1144, 788, '12:16', 72, '13:18', '2019-05-13 10:16:37', '2019-05-13 10:16:37'),
(1145, 853, '12:16', 72, '13:18', '2019-05-13 10:16:41', '2019-05-13 10:16:41'),
(1146, 836, '12:17', 72, '13:19', '2019-05-13 10:17:02', '2019-05-13 10:17:02'),
(1147, 848, '12:17', 72, '13:19', '2019-05-13 10:17:07', '2019-05-13 10:17:07'),
(1148, 829, '12:17', 72, '13:19', '2019-05-13 10:17:09', '2019-05-13 10:17:09'),
(1149, 845, '12:17', 72, '13:19', '2019-05-13 10:17:12', '2019-05-13 10:17:12'),
(1150, 876, '12:17', 72, '13:19', '2019-05-13 10:17:13', '2019-05-13 10:17:13'),
(1151, 794, '12:17', 70, '13:22', '2019-05-13 10:17:14', '2019-05-13 10:17:14'),
(1152, 1009, '12:17', 72, '13:19', '2019-05-13 10:17:15', '2019-05-13 10:17:15'),
(1153, 796, '12:17', 72, '13:19', '2019-05-13 10:17:17', '2019-05-13 10:17:17'),
(1154, 795, '12:17', 72, '13:19', '2019-05-13 10:17:23', '2019-05-13 10:17:23'),
(1155, 834, '12:17', 72, '13:19', '2019-05-13 10:17:26', '2019-05-13 10:17:26'),
(1156, 855, '12:17', 72, '13:19', '2019-05-13 10:17:27', '2019-05-13 10:17:27'),
(1157, 789, '12:17', 72, '13:19', '2019-05-13 10:17:34', '2019-05-13 10:17:34'),
(1158, 1105, '12:17', 72, '13:19', '2019-05-13 10:17:35', '2019-05-13 10:17:35'),
(1159, 830, '12:17', 72, '13:19', '2019-05-13 10:17:37', '2019-05-13 10:17:37'),
(1160, 798, '12:17', 72, '13:19', '2019-05-13 10:17:37', '2019-05-13 10:17:37'),
(1161, 782, '12:17', 72, '13:19', '2019-05-13 10:17:40', '2019-05-13 10:17:40'),
(1162, 797, '12:17', 72, '13:19', '2019-05-13 10:17:49', '2019-05-13 10:17:49'),
(1163, 835, '12:17', 72, '13:19', '2019-05-13 10:17:58', '2019-05-13 10:17:58'),
(1164, 833, '12:17', 72, '13:19', '2019-05-13 10:17:58', '2019-05-13 10:17:58'),
(1165, 849, '12:18', 72, '13:20', '2019-05-13 10:18:04', '2019-05-13 10:18:04'),
(1166, 866, '12:18', 72, '13:20', '2019-05-13 10:18:10', '2019-05-13 10:18:10'),
(1167, 780, '12:18', 72, '13:20', '2019-05-13 10:18:16', '2019-05-13 10:18:16'),
(1168, 799, '12:18', 72, '13:20', '2019-05-13 10:18:24', '2019-05-13 10:18:24'),
(1169, 784, '12:18', 72, '13:20', '2019-05-13 10:18:39', '2019-05-13 10:18:39'),
(1170, 786, '12:18', 72, '13:20', '2019-05-13 10:18:40', '2019-05-13 10:18:40'),
(1171, 852, '12:18', 72, '13:20', '2019-05-13 10:18:55', '2019-05-13 10:18:55'),
(1172, 873, '12:18', 72, '13:20', '2019-05-13 10:18:57', '2019-05-13 10:18:57'),
(1173, 900, '12:18', 72, '13:20', '2019-05-13 10:18:58', '2019-05-13 10:18:58'),
(1174, 792, '12:19', 72, '13:21', '2019-05-13 10:19:05', '2019-05-13 10:19:05'),
(1175, 787, '12:19', 72, '13:21', '2019-05-13 10:19:34', '2019-05-13 10:19:34'),
(1176, 895, '12:20', 72, '13:22', '2019-05-13 10:20:12', '2019-05-13 10:20:12'),
(1177, 867, '12:20', 72, '13:22', '2019-05-13 10:20:27', '2019-05-13 10:20:27'),
(1178, 1016, '12:20', 72, '13:22', '2019-05-13 10:20:32', '2019-05-13 10:20:32'),
(1179, 898, '12:22', 72, '13:24', '2019-05-13 10:22:22', '2019-05-13 10:22:22'),
(1180, 869, '12:22', 72, '13:24', '2019-05-13 10:22:56', '2019-05-13 10:22:56'),
(1181, 886, '12:23', 72, '13:25', '2019-05-13 10:23:17', '2019-05-13 10:23:17'),
(1182, 897, '12:23', 72, '13:25', '2019-05-13 10:23:51', '2019-05-13 10:23:51'),
(1183, 996, '12:25', 72, '13:27', '2019-05-13 10:25:36', '2019-05-13 10:25:36'),
(1184, 783, '12:25', 72, '13:27', '2019-05-13 10:25:56', '2019-05-13 10:25:56'),
(1185, 859, '12:28', 72, '13:30', '2019-05-13 10:28:37', '2019-05-13 10:28:37'),
(1186, 887, '12:29', 72, '13:31', '2019-05-13 10:29:12', '2019-05-13 10:29:12'),
(1187, 880, '12:30', 72, '13:32', '2019-05-13 10:30:37', '2019-05-13 10:30:37'),
(1188, 893, '12:32', 72, '13:34', '2019-05-13 10:32:26', '2019-05-13 10:32:26'),
(1189, 964, '12:32', 72, '13:34', '2019-05-13 10:32:55', '2019-05-13 10:32:55'),
(1190, 861, '12:32', 72, '13:34', '2019-05-13 10:32:56', '2019-05-13 10:32:56'),
(1191, 894, '12:33', 72, '13:35', '2019-05-13 10:33:11', '2019-05-13 10:33:11'),
(1192, 868, '12:33', 72, '13:35', '2019-05-13 10:33:17', '2019-05-13 10:33:17'),
(1193, 980, '12:33', 72, '13:35', '2019-05-13 10:33:25', '2019-05-13 10:33:25'),
(1194, 883, '12:33', 72, '13:35', '2019-05-13 10:33:28', '2019-05-13 10:33:28'),
(1195, 862, '12:33', 72, '13:35', '2019-05-13 10:33:30', '2019-05-13 10:33:30'),
(1196, 856, '12:33', 72, '13:35', '2019-05-13 10:33:54', '2019-05-13 10:33:54'),
(1197, 882, '12:34', 72, '13:36', '2019-05-13 10:34:00', '2019-05-13 10:34:00'),
(1198, 884, '12:34', 72, '13:36', '2019-05-13 10:34:05', '2019-05-13 10:34:05'),
(1199, 800, '12:34', 72, '13:36', '2019-05-13 10:34:05', '2019-05-13 10:34:05'),
(1200, 922, '12:34', 72, '13:36', '2019-05-13 10:34:07', '2019-05-13 10:34:07'),
(1201, 921, '12:34', 72, '13:36', '2019-05-13 10:34:08', '2019-05-13 10:34:08'),
(1202, 904, '12:34', 72, '13:36', '2019-05-13 10:34:13', '2019-05-13 10:34:13'),
(1203, 902, '12:34', 72, '13:36', '2019-05-13 10:34:19', '2019-05-13 10:34:19'),
(1204, 911, '12:34', 72, '13:36', '2019-05-13 10:34:26', '2019-05-13 10:34:26'),
(1205, 907, '12:34', 72, '13:36', '2019-05-13 10:34:57', '2019-05-13 10:34:57'),
(1206, 865, '12:35', 72, '13:37', '2019-05-13 10:35:17', '2019-05-13 10:35:17'),
(1207, 905, '12:35', 72, '13:37', '2019-05-13 10:35:20', '2019-05-13 10:35:20'),
(1208, 912, '12:35', 72, '13:37', '2019-05-13 10:35:32', '2019-05-13 10:35:32'),
(1209, 909, '12:35', 72, '13:37', '2019-05-13 10:35:36', '2019-05-13 10:35:36'),
(1210, 892, '12:35', 72, '13:37', '2019-05-13 10:35:52', '2019-05-13 10:35:52'),
(1211, 914, '12:35', 72, '13:37', '2019-05-13 10:35:53', '2019-05-13 10:35:53'),
(1212, 919, '12:36', 72, '13:38', '2019-05-13 10:36:02', '2019-05-13 10:36:02'),
(1213, 910, '12:36', 72, '13:38', '2019-05-13 10:36:46', '2019-05-13 10:36:46'),
(1214, 901, '12:36', 72, '13:38', '2019-05-13 10:36:51', '2019-05-13 10:36:51'),
(1215, 945, '12:37', 72, '13:39', '2019-05-13 10:37:17', '2019-05-13 10:37:17'),
(1216, 940, '12:37', 72, '13:39', '2019-05-13 10:37:19', '2019-05-13 10:37:19'),
(1217, 930, '12:37', 72, '13:39', '2019-05-13 10:37:20', '2019-05-13 10:37:20'),
(1218, 913, '12:37', 72, '13:39', '2019-05-13 10:37:37', '2019-05-13 10:37:37'),
(1219, 942, '12:37', 72, '13:39', '2019-05-13 10:37:46', '2019-05-13 10:37:46'),
(1220, 957, '12:37', 72, '13:39', '2019-05-13 10:37:49', '2019-05-13 10:37:49'),
(1221, 920, '12:37', 72, '13:39', '2019-05-13 10:37:51', '2019-05-13 10:37:51'),
(1222, 955, '12:42', 72, '13:44', '2019-05-13 10:42:13', '2019-05-13 10:42:13'),
(1223, 961, '12:42', 72, '13:44', '2019-05-13 10:42:19', '2019-05-13 10:42:19'),
(1224, 959, '12:42', 72, '13:44', '2019-05-13 10:42:52', '2019-05-13 10:42:52'),
(1225, 960, '12:42', 72, '13:44', '2019-05-13 10:42:54', '2019-05-13 10:42:54'),
(1226, 958, '12:42', 72, '13:44', '2019-05-13 10:42:55', '2019-05-13 10:42:55'),
(1227, 1065, '12:43', 72, '13:45', '2019-05-13 10:43:03', '2019-05-13 10:43:03'),
(1228, 1086, '12:43', 72, '13:45', '2019-05-13 10:43:10', '2019-05-13 10:43:10'),
(1229, 790, '12:43', 72, '13:45', '2019-05-13 10:43:22', '2019-05-13 10:43:22'),
(1230, 875, '12:43', 72, '13:45', '2019-05-13 10:43:24', '2019-05-13 10:43:24'),
(1231, 954, '12:43', 72, '13:45', '2019-05-13 10:43:26', '2019-05-13 10:43:26'),
(1232, 864, '12:43', 72, '13:45', '2019-05-13 10:43:40', '2019-05-13 10:43:40'),
(1233, 917, '12:44', 72, '13:46', '2019-05-13 10:44:03', '2019-05-13 10:44:03'),
(1234, 918, '12:44', 72, '13:46', '2019-05-13 10:44:10', '2019-05-13 10:44:10'),
(1235, 956, '12:44', 72, '13:46', '2019-05-13 10:44:17', '2019-05-13 10:44:17'),
(1236, 967, '12:44', 72, '13:46', '2019-05-13 10:44:22', '2019-05-13 10:44:22'),
(1237, 823, '12:44', 72, '13:46', '2019-05-13 10:44:45', '2019-05-13 10:44:45'),
(1238, 906, '12:44', 72, '13:46', '2019-05-13 10:44:45', '2019-05-13 10:44:45'),
(1239, 950, '12:44', 72, '13:46', '2019-05-13 10:44:49', '2019-05-13 10:44:49'),
(1240, 810, '12:44', 72, '13:46', '2019-05-13 10:44:57', '2019-05-13 10:44:57'),
(1241, 818, '12:45', 72, '13:47', '2019-05-13 10:45:14', '2019-05-13 10:45:14'),
(1242, 820, '12:45', 72, '13:47', '2019-05-13 10:45:22', '2019-05-13 10:45:22'),
(1243, 809, '12:45', 72, '13:47', '2019-05-13 10:45:27', '2019-05-13 10:45:27'),
(1244, 804, '12:45', 72, '13:47', '2019-05-13 10:45:34', '2019-05-13 10:45:34'),
(1245, 816, '12:45', 72, '13:47', '2019-05-13 10:45:34', '2019-05-13 10:45:34'),
(1246, 821, '12:45', 72, '13:47', '2019-05-13 10:45:52', '2019-05-13 10:45:52'),
(1247, 872, '12:45', 72, '13:47', '2019-05-13 10:45:55', '2019-05-13 10:45:55'),
(1248, 812, '12:46', 72, '13:48', '2019-05-13 10:46:08', '2019-05-13 10:46:08'),
(1249, 803, '12:46', 72, '13:48', '2019-05-13 10:46:26', '2019-05-13 10:46:26'),
(1250, 891, '12:46', 72, '13:48', '2019-05-13 10:46:30', '2019-05-13 10:46:30'),
(1251, 802, '12:46', 72, '13:48', '2019-05-13 10:46:31', '2019-05-13 10:46:31'),
(1252, 890, '12:46', 72, '13:48', '2019-05-13 10:46:31', '2019-05-13 10:46:31'),
(1253, 815, '12:46', 72, '13:48', '2019-05-13 10:46:36', '2019-05-13 10:46:36'),
(1254, 903, '12:46', 72, '13:48', '2019-05-13 10:46:40', '2019-05-13 10:46:40'),
(1255, 822, '12:46', 72, '13:48', '2019-05-13 10:46:40', '2019-05-13 10:46:40'),
(1256, 817, '12:46', 72, '13:48', '2019-05-13 10:46:41', '2019-05-13 10:46:41'),
(1257, 806, '12:46', 72, '13:48', '2019-05-13 10:46:46', '2019-05-13 10:46:46'),
(1258, 808, '12:46', 72, '13:48', '2019-05-13 10:46:59', '2019-05-13 10:46:59'),
(1259, 826, '12:47', 72, '13:49', '2019-05-13 10:47:05', '2019-05-13 10:47:05'),
(1260, 824, '12:47', 72, '13:49', '2019-05-13 10:47:08', '2019-05-13 10:47:08'),
(1261, 811, '12:47', 72, '13:49', '2019-05-13 10:47:11', '2019-05-13 10:47:11'),
(1262, 827, '12:47', 72, '13:49', '2019-05-13 10:47:12', '2019-05-13 10:47:12'),
(1263, 923, '12:47', 72, '13:49', '2019-05-13 10:47:54', '2019-05-13 10:47:54'),
(1264, 825, '12:48', 72, '13:50', '2019-05-13 10:48:17', '2019-05-13 10:48:17'),
(1265, 814, '12:51', 72, '13:53', '2019-05-13 10:51:19', '2019-05-13 10:51:19'),
(1266, 916, '12:51', 72, '13:53', '2019-05-13 10:51:47', '2019-05-13 10:51:47'),
(1267, 915, '12:52', 72, '13:54', '2019-05-13 10:52:49', '2019-05-13 10:52:49'),
(1268, 924, '12:53', 72, '13:55', '2019-05-13 10:53:10', '2019-05-13 10:53:10'),
(1269, 831, '12:56', 72, '13:58', '2019-05-13 10:56:38', '2019-05-13 10:56:38'),
(1270, 877, '12:56', 72, '13:58', '2019-05-13 10:56:39', '2019-05-13 10:56:39'),
(1271, 885, '12:57', 72, '13:59', '2019-05-13 10:57:13', '2019-05-13 10:57:13'),
(1272, 860, '12:57', 72, '13:59', '2019-05-13 10:57:21', '2019-05-13 10:57:21'),
(1273, 838, '12:57', 72, '13:59', '2019-05-13 10:57:37', '2019-05-13 10:57:37'),
(1274, 863, '12:57', 72, '13:59', '2019-05-13 10:57:58', '2019-05-13 10:57:58'),
(1275, 858, '12:58', 72, '14:00', '2019-05-13 10:58:43', '2019-05-13 10:58:43'),
(1276, 870, '12:59', 72, '14:01', '2019-05-13 10:59:11', '2019-05-13 10:59:11'),
(1277, 828, '13:03', 72, '14:05', '2019-05-13 11:03:27', '2019-05-13 11:03:27'),
(1278, 813, '13:04', 72, '14:06', '2019-05-13 11:04:07', '2019-05-13 11:04:07'),
(1279, 819, '13:04', 72, '14:06', '2019-05-13 11:04:33', '2019-05-13 11:04:33'),
(1280, 801, '13:06', 72, '14:08', '2019-05-13 11:06:42', '2019-05-13 11:06:42'),
(1281, 850, '13:09', 72, '14:11', '2019-05-13 11:09:42', '2019-05-13 11:09:42'),
(1282, 785, '13:23', 72, '14:38', '2019-05-13 11:23:48', '2019-05-13 11:23:48'),
(1283, 1271, '13:23', 72, '14:38', '2019-05-13 11:23:58', '2019-05-13 11:23:58'),
(1284, 1272, '13:24', 72, '14:39', '2019-05-13 11:24:05', '2019-05-13 11:24:05'),
(1285, 1275, '13:28', 72, '14:43', '2019-05-13 11:28:20', '2019-05-13 11:28:20'),
(1286, 805, '13:28', 72, '14:43', '2019-05-13 11:28:37', '2019-05-13 11:28:37'),
(1287, 889, '13:45', 72, '15:00', '2019-05-13 11:45:41', '2019-05-13 11:45:41'),
(1288, 199, '13:56', 72, '15:11', '2019-05-13 11:56:03', '2019-05-13 11:56:03'),
(1289, 878, '14:25', 71, '15:26', '2019-05-13 12:25:45', '2019-05-13 12:25:45'),
(1290, 1273, '14:25', 71, '15:26', '2019-05-13 12:25:54', '2019-05-13 12:25:54'),
(1291, 1274, '14:25', 71, '15:26', '2019-05-13 12:25:56', '2019-05-13 12:25:56'),
(1292, 896, '14:34', 71, '15:35', '2019-05-13 12:34:33', '2019-05-13 12:34:33'),
(1293, 899, '14:50', 71, '15:51', '2019-05-13 12:50:05', '2019-05-13 12:50:05'),
(1294, 888, '14:58', 71, '15:59', '2019-05-13 12:58:27', '2019-05-13 12:58:27'),
(1295, 897, '15:14', 71, '16:15', '2019-05-13 13:14:05', '2019-05-13 13:14:05'),
(1297, 1280, '1:28', 87, '9:48', '2020-01-16 23:28:42', '2020-01-16 23:28:42'),
(1298, 1280, '15:23', 88, '2:43', '2020-01-17 13:23:23', '2020-01-17 13:23:23'),
(1299, 1281, '18:47', 88, '6:07', '2020-01-17 16:47:38', '2020-01-17 16:47:38'),
(1300, 1286, '14:42', 91, '15:42', '2020-03-14 21:42:48', '2020-03-14 21:42:48'),
(1301, 1286, '14:45', 92, '15:45', '2020-03-14 21:45:05', '2020-03-14 21:45:05'),
(1302, 1286, '15:33', 93, '16:33', '2020-03-14 22:33:31', '2020-03-14 22:33:31'),
(1303, 1286, '16:46', 94, '17:46', '2020-03-14 23:46:59', '2020-03-14 23:46:59'),
(1304, 1286, '18:04', 95, '19:44', '2020-04-07 16:04:30', '2020-04-07 16:04:30'),
(1305, 1286, '22:05', 97, '23:05', '2020-04-16 20:05:12', '2020-04-16 20:05:12'),
(1306, 1286, '23:23', 99, '23:56', '2020-04-16 21:23:13', '2020-04-16 21:23:13'),
(1307, 1286, '0:07', 100, '1:07', '2020-04-16 22:07:25', '2020-04-16 22:07:25'),
(1308, 1286, '10:26', 101, '12:26', '2020-04-17 08:26:08', '2020-04-17 08:26:08'),
(1309, 1286, '11:00', 102, '13:00', '2020-04-17 09:00:24', '2020-04-17 09:00:24'),
(1310, 1287, '11:19', 102, '13:19', '2020-04-17 09:19:29', '2020-04-17 09:19:29'),
(1311, 1286, '22:35', 103, '23:15', '2020-04-17 20:35:14', '2020-04-17 20:35:14'),
(1312, 1286, '23:09', 104, '23:39', '2020-04-17 21:09:13', '2020-04-17 21:09:13'),
(1313, 1286, '20:05', 106, '20:50', '2020-04-19 18:05:54', '2020-04-19 18:05:54'),
(1314, 1286, '20:06', 105, '20:36', '2020-04-19 18:06:26', '2020-04-19 18:06:26'),
(1315, 1286, '22:48', 107, '23:18', '2020-04-20 20:48:12', '2020-04-20 20:48:12');

-- --------------------------------------------------------

--
-- بنية الجدول `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `role` int(11) NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- إرجاع أو استيراد بيانات الجدول `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `password`, `role`, `remember_token`, `created_at`, `updated_at`) VALUES
(1, 'admin', 'admin@gmail.com', '$2y$10$gsNJdis7SpfaDR.D2jMtLeiOW1imx1xeIgDzzi5EBDEfFBOowv7ma', 1, '5MGJGaoStvDEubzlKnvaxw3RUKWtECn9BJKTHvkLxVOauALzUrR0zH9iv6wE', NULL, NULL),
(12, 'Dr.Mohammed', 'mohammed@gmail.com', '$2y$10$z0bSK1YkykOmiq3qW7KNx.SwfAk/xL5flZIOL5.Fy/gIgZTyMkTem', 2, NULL, '2018-10-27 14:01:30', '2018-10-29 19:30:38'),
(13, 'SA', 'sa@gmail.com', '$2y$10$Xs99dvN0h7v3Ra7Ya3RVa.MRyBIVCvhyACrBfxdL051OGQkGlsLSu', 3, 'zw7wPPgH4mQJcHAE2vwhOUJhhyw6tvhRZ7VJrGL3DxDI688S7TrKwks4Zru3', '2018-10-27 14:02:12', '2019-04-03 05:06:10'),
(15, 'admin@gmail.com', 'abdoelsayed2016@fci.au.edu.eg', '$2y$10$J.itdYt/WzsmgZ1dbKl5GORN.HnuKtBrJTqVvHi7fBuvvg1WtVpDO', 2, NULL, '2018-10-29 18:43:59', '2018-10-29 19:20:22'),
(16, 'alio.ali@gmail.com', 'ali.ali@gmail.com', '$2y$10$92ef9JdEK05i.dE7Vo/RJu4idVO0Lq55hITv2XSScwGvy8kLtdWXq', 2, '63PEbnUrqttUN5FzfLto0xDCheQWx2bjRsJCSC264mrIB9qI2Xuk2EXuWmTQ', '2018-10-31 05:31:24', '2018-10-31 09:27:31'),
(33, 'abdoo', 'abdoo@gmail.com', '$2y$10$9Q9Zzc2aX/YZJZeo5qkZz.ENn5AvRwK4bke7ppzYmBrz1zqovUXBi', 2, NULL, '2018-11-08 17:54:13', '2018-11-08 17:54:13'),
(37, 'Dr.Mamdouh', 'dr.mamdouh@gmail.com', '$2y$10$m0m7wavDpFcHTtbC45v1hesRY1HdmzDG03fIkTdwYyRv0Oaqec0xi', 2, '2rbuJfEtwWpql2ZgAH5koIjDuhxm0QQPCVNGmWLtkjWyeSbC3mLyy5b22wM8', '2018-11-10 08:25:08', '2018-11-10 08:25:08'),
(38, 'student1', 'student1@gmail.com', '$2y$10$gsNJdis7SpfaDR.D2jMtLeiOW1imx1xeIgDzzi5EBDEfFBOowv7ma', 4, 'cBOyzykJgCPjgukAvVCVb4tNM9AtF3ink1JF3MeUAQV37t5aIeZI0acVKx8V', '2018-11-10 08:32:50', '2018-11-10 08:32:50'),
(39, 'student2', 'student2@gmail.com', '$2y$10$qr0ICcffYBtrOl1EghlqhO3ZH.X7vJv/ygOy0lpy/UqIJ85QQeB/S', 4, 'yCR4Wa70QlnF77hUYsusJCltntmmINj2VQNYxQm6wRNMZT5tnUVYzc99BEWG', '2018-11-10 08:32:50', '2018-11-10 08:32:50'),
(40, 'Mamdouh Farouk', 'mamfarouk@aun.edu.eg', '$2y$10$PWaa9tFpf5742HYDZGdp6OFlJWinQU6nhPTezr9ioxN4r8OnCJRrO', 2, 'p5AbXeJDIgpKZskSnrKH1QTT11poIKfozaohX1IKwuocE1eTSNNbPxfV6Ebx', '2018-11-10 08:08:36', '2018-11-10 08:08:36'),
(41, 'ali test', 'ali@t.com', '$2y$10$tn6QVV0dZuiON8L2PikKk.11Q7tmDYmQAZDY/4a8nzjee09Vi3mvi', 4, NULL, '2018-11-10 08:19:17', '2018-11-10 08:19:17'),
(42, 'Majid Askar', 'majid@gmail.com', '$2y$10$DLNj7CU1cw6gKp4rt8S61ekOc0OqHM81lJC9CTIQM78AhbKlniVT.', 2, 'azcLL7f5E5RgH6WTtfYPCyQ0FMm8WYj3Qak4tjTcsA8A3XCp97GBQBFDgl8f', '2018-11-11 13:07:15', '2019-04-08 17:11:09'),
(43, 'ahmed', 'ahmed@gmail.com', '$2y$10$gi/Ssl3xE.s/w9TmkdV1p.2iU2ShVWKcIq.C23.MfTZlf9LrdK0Cy', 4, NULL, '2018-11-11 13:09:43', '2018-11-11 13:09:43'),
(44, 'ali', 'ali@gmail.com', '$2y$10$H5CvN1ROWE8xd6kwkYQJjO3dHWFQaFwDA0qvZDY4YtHO2mvICF5be', 4, 'iL8cspGhmDBDOL1Dw0afzyHpSwYaQJpdrUHknX7l6Nsqsq9rZF4t0XTTqO90', '2018-11-11 13:10:34', '2018-11-11 13:10:34'),
(107, 'ali', 'ali2@gmail.com', '$2y$10$MFa8Vg4ACzjwcLOnBBeYhuP6SttvQKqgKWenIiTxdgaM6iI2unjUa', 4, NULL, '2018-11-18 17:16:14', '2018-11-18 17:16:14'),
(111, 'احمد مسعد عبد العزيز محمد', '30001011858156', '$2y$10$fG64f6Dk/yld0NpaF4VGRewsqXpZXNFyfWJLlZe5YrA4kKh1d5Ujm', 4, 'Sx1YEUGfAULCYkLH4TQO0DbpG7wNxi8msouBWBbidmS7VnzjVufwr2igEhE7', '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(112, 'اروى عبد الحميد حسن صلاح الدين', '29909292700609', '$2y$10$aYe5HA8g9jBniRD2T7FPI.E48PgTIyPmDPoDmOemTRBpkZfudslFy', 4, 'YS98pIpvaZW5g1MvGhfk8sjl7mRVfU12fNcE1EyfxKfeZVjqV1uppmpmsD46', '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(113, 'اسراء على ابو الوفا على ', '29902050200305', '$2y$10$O1o9tT6jQStXIlbKmbRvkufTPiWOmJlLpWSW9n5eRfCLMDxWUUiiu', 4, 'g1BF6JNwPM5nIhsRfcWnm96IvToLDpoZJlxBPOTk5FiCNsyDi1FiFbcDMjKy', '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(114, 'اسراء قطب ابراهيم قطب ', '29902152401321', '$2y$10$QhNLDn7pLoSpODmyXiTMFew4HifRyruYSrpm.7P2t5i7bF7AKZxI2', 4, '3BOMQmn8xuvzab47pjotUMMezOFqEwLMKTMLBy93eBCne8muBQvYoEuOPzyH', '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(115, 'اسماء اسماعيل عبد الرحيم سنجاب', '29908082503006', '$2y$10$49ARWO1bBUOt3jBdVXWLW.5YHdc.IAH0oah3Nf.YrNWG.koT20LgK', 4, 'ib6ufOJDER96gmYRsTRC3Hr96eV7IOwOS2IETX9xrda0eTAbMjysXYtJlYIQ', '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(116, 'أسماء سيد احمد الريدي', '29902062403724', '$2y$10$k17pLsmJ0wsF0SQYcwJKOe3VacZhFIy4Cl6E0eN2AHYcM.xXpmP4u', 4, NULL, '2018-11-18 17:32:54', '2018-11-18 17:32:54'),
(117, 'ألاء حمادة حسانين احمد', '29810062500124', '$2y$10$jXNME67oUHqEzwSf7R05YeZdreuPdDKEkNNSFQG/g334vWEcZAHCq', 4, 'WG6tVk5nSWwusI0H2tFILKmGqY1Md12WJjOK3mavcG81UUCvOsdtuIoIf39F', '2018-11-18 17:32:55', '2018-11-18 17:32:55'),
(118, 'الشيماء احمد جاد الكريم ', '29902012703786', '$2y$10$NBZmpoG5ZeZd2ZkS2UZSRe7uPWpbQ7KbvmzD1S8POkmCgZKOkr2bu', 4, 'FiiSlKRdtYXsSxGs6UMqt2VXH0TgMpOiT7cV683USWyXSGew5gM0XEH3UqGD', '2018-11-18 17:32:55', '2018-11-18 17:32:55'),
(119, 'اميره ابراهيم على محمد ', '29906112600327', '$2y$10$X5qQnpl/JMaM0janUszgg.2LJ44XhXW76EQCyXC.CF2ERvO4iUEae', 4, 'aIXSCmJ8kjWD8kAwXBC9HlMn8xXqihhQJ9nsdP1kEOIFibbl9jV6exOP14Nd', '2018-11-18 17:32:55', '2018-11-18 17:32:55'),
(120, 'انطونيوس منير فهمى  اسكندر ', '29710292500838', '$2y$10$TeoeKp8vXvdV6EokmmsWDOoCaXdjuAC0GHu6RhkrT3hUKIRo62o7u', 4, '8MqGDBwLl8EpxsBmRw4dF06Hrv6ufIqI7jXvwfnXqA089JbKagqcxsAika9f', '2018-11-18 17:32:55', '2018-11-18 17:32:55'),
(121, 'آيات خالد حسن محمد بكرى', '29901092503328', '$2y$10$TnnKyiDvtfowl0m6YSJoW.lps5pCWg8GckhTKApq.kQouDxfl1vjO', 4, 'U7ubIJ2IhS1s0iBGOFyRbLGQ6eQUDt01QsqNqGpJvHvgRJE6HKg65NuojmWc', '2018-11-18 17:32:55', '2018-11-18 17:32:55'),
(122, 'اياد زهير عبد البديع عبد الغنى', '29907302500619', '$2y$10$PPeCfRllFNXEpD7oaugjoOUuki9i0o8iV/8a5zqiAe5PplKmVT0CO', 4, 'bMvHzTlxMblo26tEQKLVxHP66lhVVM5vNwZMNBkqYYnEq6i8L5RzN5l5FAV0', '2018-11-18 17:32:56', '2018-11-18 17:32:56'),
(123, 'ايمان محمود احمد حسين ', '29901262800284', '$2y$10$9aBkZUHuGYwc1sIigSR1xu5Cl.THeSs.6cs5ZRyquFHlQWBYVlnWC', 4, 'LVc8Rgb3IiKtdz5DvCGSGZkMQ72e1VbNVaxGJjKvC2AFrwBhM0XxYj0D38qd', '2018-11-18 17:32:56', '2018-11-18 17:32:56'),
(124, 'ايمانويل امجد اسحق عزيز', '29901012513271', '$2y$10$ZibexYvAx1uxxy88exVenexKaDTwnr/rYiQuLTrqe6Y9BIXm8qiqC', 4, 'JnrjS6xV6gEKrETcS7sl58EcgEf5MUTxvBrD2n8d8iuFQ2D3RT2Khx5bsYIV', '2018-11-18 17:32:56', '2018-11-18 17:32:56'),
(125, 'ايهاب صموئيل وهيب ناشد', '29907052500111', '$2y$10$Ol78q2i4VfU27M07ihzGnuULpW5AkIazt1HwiGKM7qJZlEwMYC8Q2', 4, 'wnrX9m8oDTtQ1ClQiJSDSNN5dTq1J55G7hjBXclBC4xzoDxPgfgooSa4IZln', '2018-11-18 17:32:56', '2018-11-18 17:32:56'),
(126, 'جرجس بطرس الفي صليب', '29906298800436', '$2y$10$VYPkzqmgkJUk3.VMqTvcVuO6a5OMML2ggig9CepEPyaKXZ4k/WVX.', 4, 'wn9ugoZKxnHUumj0AsHkNFTUmzl4Zj5wD83zoQ7LWRzmFr6fnV6BH2I4c1tp', '2018-11-18 17:32:56', '2018-11-18 17:32:56'),
(127, 'حسام حسن محمد عمار', '29904102501336', '$2y$10$TQyi3WA.ElsZHXwIuOHus.d4KjSunFUBIm5hzuke/.2HNQZwipkHC', 4, '3k2roJ4eNHugItQwuNHTAztVW7wSSDVhkx45fg2YCqip16uezGTJJDyXwb7j', '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(128, 'حسام فتحى مرسى خليل', '29908102401752', '$2y$10$URF7ETEM2/P2ZbqLltFh3uOSv.UAY/kSOxyqdrIS1Lx52mUZ2Mrda', 4, '4K7LcUFiz4GzMNgmojris5GncrRPPKwqwKZX564jWbvFdvE3iZ2NnaMGyl30', '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(129, 'دعاء محمد محمود عبدالجواد', '29907052503366', '$2y$10$Fj/Zs8lwrs3nc0Gdtcd9l.TufnN/7v9PvwW.nvba5M1DVvvATJVOK', 4, NULL, '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(130, 'رانيا محمود عبد العزيز احمد', '29903212500088', '$2y$10$6CFtst2uQIQiSADOvqa.tO6XMeXmu.CxVIal9VcywsCd4JnCL5SLG', 4, 'xI7i6bX4ZhfXSKBMXARYUJHrMSm3WherkqXu1vXkvilbDNM7ylvC9uemDkpo', '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(131, 'رؤية شريف جمال ثابت', '29905172501461', '$2y$10$YI566G2Z0TRIOJxj1Qtjp.yhlrWs6A3l8wUTdbH0rerHHsjvFy3Pq', 4, NULL, '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(132, 'ريم أحمد محمود محمد', '29812222501567', '$2y$10$o1rmpoqtU.EdNpm4fHurhuwaTRME2vXhzKvNbCo.iwNEuIZ/pupTa', 4, NULL, '2018-11-18 17:32:57', '2018-11-18 17:32:57'),
(133, 'سامر سامى سليم نخله     ', '29907152501417', '$2y$10$Vre/EbqlLjiULhelYyGcTOklXyh/nL5ObqGBcXSkkI7gdFo3dCRjq', 4, 'pGwtwcZ3a6QZxrfDBMFcRVumq2Q0SLCO4TnSf3k11BbWBy2l4X6ajcteSu3s', '2018-11-18 17:32:58', '2018-11-18 17:32:58'),
(134, 'ساندرا ممدوح امين مرقص', '29811182500787', '$2y$10$5AenPXC.blI5fSprt1ajJOcGm7ZVgxgjXI6uJRWtiR.KjdWeIj2IS', 4, '91KQylJdu6bcyKbwHTkAyiT7XUVe5k4HJIwCu0ph9Rfl4FCPcE2Qti77SZbN', '2018-11-18 17:32:58', '2018-11-18 17:32:58'),
(135, 'شيماء اشرف كامل محمد', '29812192500625', '$2y$10$IMcWQQTaYrknOxdwLkoxvuoiYXdGMEbnr6NUwGrMvIKNohlt0QM7S', 4, NULL, '2018-11-18 17:32:58', '2018-11-18 17:32:58'),
(136, 'عبد الرحمن سيد عبد الناصر اسماعيل', '29911202503677', '$2y$10$6KrT/wz8Tp13GzMwBEvnQOSDQK//TwIMBkoahUBg8CQhHet1GqoeG', 4, NULL, '2018-11-18 17:32:58', '2018-11-18 17:32:58'),
(137, 'عبد الله عبد العاطي حسن عمر', '29905022501277', '$2y$10$QOK1UQAmzGkk.upkBhfAPOZpfQKaz9sZropErO8blYDNAkRfa/cxS', 4, NULL, '2018-11-18 17:32:58', '2018-11-18 17:32:58'),
(138, 'على اسامة على ابراهيم', '29903082500277', '$2y$10$19BTdpZxYUVuTxm.CbsXE.VS5r/ElGchgYWXcql51GsjjYxrlCT5.', 4, NULL, '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(139, 'علياء حسن احمد طه', '29902132500285', '$2y$10$iKM19o89e9BxWpP0FfXeVeAk7kX6g0HU3H0FqLqZ0dajMdQUaFgcG', 4, NULL, '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(140, 'عماد نشأت جرجس ميلاد ', '29901153100051', '$2y$10$zI85qbbj8.ckExWx5biO7OzV9bPfOICMhNPW8GSHMyEM8iBIFfMw6', 4, NULL, '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(141, 'عمر صلاح محمد حميد ', '29812262502418', '$2y$10$h3Udj9TkjF2Rjdyik9.Ut.YIguuLfvCGYyFhweXjbvn.mbO9NldRC', 4, NULL, '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(142, 'عمرعبد العزيز محمد محروس', '29906032501115', '$2y$10$TkjdzMBjJpf.ARNGHqPw0.FMYBQShx3M/gDcqF9VeCXmxCBPn0zLe', 4, 'TgsZL6phlz6UvXYs8GNqLZgy8QrqEyo8RTxM6w5u5YdU3kSEN8DGe9fzpuvY', '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(143, 'فيبي ايوب قلتة جاد الله', '29811282501004', '$2y$10$MYgcg/8XGO8WW6QMMHYaAuiRH3ijzyKC7iPsrCI2Eip0XyFnAPmZK', 4, NULL, '2018-11-18 17:32:59', '2018-11-18 17:32:59'),
(144, 'لميس صبري فراج سعد الدين', '29901012807283', '$2y$10$NqZbEEsZzYKMjyrEipfdmuRDII9MrYBTg2qMP1u3oZx0eZsuL7cRy', 4, NULL, '2018-11-18 17:33:00', '2018-11-18 17:33:00'),
(145, 'مايكل ميلاد حكيم سلامه', '29907012700916', '$2y$10$uvIx75.NJ8HO42beFheqreSHS85Mu.oQUstjBKXWBuWNeBNaFGXuq', 4, NULL, '2018-11-18 17:33:00', '2018-11-18 17:33:00'),
(146, 'محمد احمد عبد الودود محمد', '29908028800097', '$2y$10$B0pdtaby5/5vwnI2XDBtruCQxmPpkcy2Rzmp.vMbLGFjEZTuYTd26', 4, NULL, '2018-11-18 17:33:00', '2018-11-18 17:33:00'),
(147, 'محمد خالد محمد عبدالمالك', '29912043200052', '$2y$10$CYk6hKuhf97btvSdOV1vPekylsHmX1KB5NbXaTcXnPlolbqav/xCm', 4, NULL, '2018-11-18 17:33:00', '2018-11-18 17:33:00'),
(148, 'محمد سيد احمد حسانى خليل ', '29811060102756', '$2y$10$3Ld15kDk.f1qWdkNkTSqSO5g0djn77jfGmPDS/j83.GkoKtRRif.K', 4, NULL, '2018-11-18 17:33:00', '2018-11-18 17:33:00'),
(149, 'محمد شعلان انور حمادة', '29710132500637', '$2y$10$AyaqvomRwtYpXms3LHE7hebFU1r7uHXodFTfFeyR5IpDCJ.eCqonO', 4, NULL, '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(150, 'محمد هشام إبراهيم جبر', '29907022500397', '$2y$10$dt9fjATlIspq1CoG0eq3/uONFwoZYGcO1zn3HqSEDhQRIcAb2BM36', 4, '32hvHJIvwPjpV8Qv86WxBVfnjezeDIXCzFMTsIF367BmOyFsl4NkvXBGQ03z', '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(151, 'محمود على ماهر محمد ', '29907120103533', '$2y$10$zNWVHMQBKLWHMObcWbFJO.NHfT5I2dXgN0YkGHdr4cmYyzgZ.btN6', 4, NULL, '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(152, 'مصطفى احمد حسن علي', '29907212701437', '$2y$10$fiRCIEYZqZNIQY9bsYz31.JxWRqacvN6VdUPi3uuXbsiU9DzeOtGC', 4, 'meHtknFiEmhbH5sqh3FmLZCowUJvM00ntzspqy6BfnYIfWpgWoUAQCrwhp2h', '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(153, 'مصطفى احمد عبد الحليم محمد', '29904102502251', '$2y$10$xhYfEIkB33bNrFIc/iQKD.np6Ftb66bAWHFgYmiXcIpt9VtN6.XiK', 4, 'REa8BWA6G9me16decNuBilqBWPUtPGtgRIP9pAG1LUY0m6E2W5CapWQU1kBz', '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(154, 'مصطفى جمال عبد العال رفاعى ', '29910012606554', '$2y$10$4NGSLKv8qtBij5LAExAy/emJLSt6x77b/gzb4D86NXLStQawP5VpG', 4, NULL, '2018-11-18 17:33:01', '2018-11-18 17:33:01'),
(155, 'مصطفى محمد محمود عبد الغفار ', '29812192500595', '$2y$10$NB5fP7hFbLeEPNCU3o.FZO5V7h4jc6DUUcueBqYtC5qaKShCEKfQy', 4, 'Nf4fQWwHjxz8U0jdZcru3arCLLCluIgKRfi8ovb8GOmyoEBhsrzPBDkU8ZR9', '2018-11-18 17:33:02', '2018-11-18 17:33:02'),
(156, 'ميرا مجدي بطرس يوسف', '29904032500442', '$2y$10$AJEegMlZbBhIIAZXNZQFi.rpg0LOsGqtJWYld5uvWn1Rerg7uT8em', 4, 'H8bYLsFf2qLZAEpO1lBO0R7gzobnkXyfVZqyhedOJoqd3wNHmbBPCEcnOyoN', '2018-11-18 17:33:02', '2018-11-18 17:33:02'),
(157, 'مينا سميح يني عطا الله', '29909122500338', '$2y$10$zkcTxSHSbU./yJDGsf4cweg1sYI5apRyePyW5ElCKINZc0k2UzSCy', 4, 'DKMGrykOk1Y8qN7NY51arrI46FnqYd9UuMNojdQ4hRcnxxBdMfk42P1czbbY', '2018-11-18 17:33:02', '2018-11-18 17:33:02'),
(158, 'نادين حازم عطية عبد العال', '29901312501607', '$2y$10$xtPOma88FL28F46Ip.OZxeIO0ZJt41Sg.U/ZjJ4obUjpB3DZnfTga', 4, 'LVco7QOhNhLujBz394ENQu0UrE7FRzuTu8htSfLXPM4pS5fZ8UB5lk2XTQfb', '2018-11-18 17:33:02', '2018-11-18 17:33:02'),
(159, 'ندى حسن اسماعيل هلال', '29907292500844', '$2y$10$lvKOTeD14Mwp3DzKeeDx9OW.2ADsBDmPRIHanBEXfrJAVLOjsDtgW', 4, 'cLVTxSYKAM1Gs7ya0gw3p6LTzyHfB7NnXQbusPJt74qkrqYjNNdRNWfz4i4F', '2018-11-18 17:33:02', '2018-11-18 17:33:02'),
(160, 'نعمة عادل حسين  عبد الرحمن', '29912282501005', '$2y$10$GgicZprX7QbE0fdpqt8xDODJyaHnokpRgSMvPkyBRI.4unrJbZtfq', 4, '9i2e74iERhj4jqSDXXpAlbjrsVYeLsDjM0W5RVNCHTTmjlqR3JKoPOwVOvL9', '2018-11-18 17:33:03', '2018-11-18 17:33:03'),
(161, 'نهى محمد صلاح الدين عبد الحميد', '2981109 2500125', '$2y$10$f8Q4hJ.GnDIwqywruX4chutnYTCxfnC3DHOHFyZZO.UyLLBC0J7Ei', 4, 'NRcDoEswShkmODW6tXR9ydIK5vODdBQe44QIUmQ3f1uD1cfkjnUKRSR2xxGI', '2018-11-18 17:33:03', '2018-11-18 17:33:03'),
(162, 'هبة مصطفي محمد احمد', '29906122500762', '$2y$10$ndMGx1Dyw1jZVQCc2qUAYuk27o42ns/aQhOQWruPbmiz4D.7PXzYm', 4, 'ZHuueHRPOSfa8KRT7hqQ9nQxLiIdfuE1i4nNdCdf2GvDaI1lqgThLbwnZsgj', '2018-11-18 17:33:03', '2018-11-18 17:33:03'),
(163, 'احمد حمدي حسن محفوظ', '29905112500172', '$2y$10$/QilTR/E100QBQaH1tDK8Oq1GDD8e51wvbxPYhI4dZQVfCiVR5AaS', 4, 'NZTEpBAO5x2GDpge10jjurs5zihGwo2IzctHxx9kgfaEHrh2tRBxOTrtIECL', '2018-11-19 11:13:29', '2018-11-19 11:13:29'),
(164, 'اسماء محمد المهدى محمد ', '29712102501364', '$2y$10$RUS7mt4RyqiTA3h82dRHJeVEfbYecw0Ad2iATcGxlidQN4b392kzK', 4, NULL, '2018-11-19 11:13:29', '2018-11-19 11:13:29'),
(165, 'الاء محمد ذكي محمد', '29905218800221', '$2y$10$7OpUfxKGtWkCXAjIwW6bzecu0FCkkbJp5y/va5CwtiVjRYwg6rSvS', 4, 'BYNFGPhoeiDHpqL9QaL6oba4KgrS2PkX53yDUQPv1pYt9XvzZXEe2DcJu2rF', '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(166, 'الاء محمود فوزي خالد', '29810152501529', '$2y$10$uf7.e.XHcenk5SooHoD20eTZso4LnjDNjthrihyGw60Iz1wpHUrhC', 4, '3xjwBuBkdHFaxdamJtJdiuxCEF3kggC4v5Ai3eRyVqcHOVxmrEeYjv7nKjTF', '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(167, 'الشيماء عبد السلام محمد متولي', '29906272501627', '$2y$10$w6EoGapvzMcjfuA3aCjSeOW8DCk056bLdVGfV2akwTh7cZOZzhYPy', 4, NULL, '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(168, 'المعتصم بالله / السيد محمد ابو العلا ', '29901202604036', '$2y$10$zDHSk2d2IwfZ4tz/lhmFXeeMTvBlM52ANcaClTj4A5xEcT.wgkXTW', 4, 'KPPViKe0gv6Tu6tC406dYwInKEG3xnnvr5HY3PNTufFGj09R1ar3yR4VwUYP', '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(169, 'امجاد محب القس هارون', '29811222500505', '$2y$10$n2uaVSNYzxpmRizmLoTmHu5NRzVFc4fIIBx1ObZoHHZZFGxxcQo3m', 4, 'fYa82LpbXUudtNo1SoindeIg5i6y9hMsSHSrJQYanGJy3JU3FhEttxGA3Jf6', '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(170, 'امل يوسف ليسى ليسى', '29806102501024', '$2y$10$R1g1ONqFLRHtElYiXhYee.u2hhkb6FcFP/fyKiGubRplUCYwszmvG', 4, '6njY7mX1DaHmher3pJnmp7sjKrA25AtAziEFbrAnmVZryuWBf9yewbpULxuX', '2018-11-19 11:13:30', '2018-11-19 11:13:30'),
(171, 'اميرة حسن عبد الغني ابراهيم', '29908148800368', '$2y$10$q0USuk35LynDzsMPcv9qS.xqFwe6com86kENkNl7zpQxTbv5J4U0S', 4, '076YbJEaXEOvePtmzvYWR8nguzUZ7jFAWOhiTmkeyiXvPmm6sfCUVeGYMsk4', '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(172, 'انجي ممدوح علي احمد', '29908042500721', '$2y$10$7QPOinGnwOQ82KQh6a0oTupS1IBymzVlLyn9cFrd921tep9ur5qUG', 4, 'Nvd4D5SI889AIgXAmA7aQtY1cMB9NzC6LKOxECoTSMWYYD1LMeCHrFwfkL1R', '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(173, 'ايمان ابراهيم ابو العلا عبد الحافظ', '29904222501046', '$2y$10$8lhcMbPJXMbZ8276EJAkxevTHaEpBYp2fMUz02JVMExMx9GhV/zF6', 4, '5ucM7Gsp1mBfVC7wovoYV5jvnP9ac8TUUhRUvMXjOzuY0Ih0Btgpc9fYOyU6', '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(174, 'ايمان محمود عبد الغني عبد اللطيف', '29810012713526', '$2y$10$josbpyiVoJBdV5f6t5lH6ewaGFBKTEKE/E6oR13GqO8Fv14UFZNvi', 4, NULL, '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(175, 'ايه جمال عبد المقصود عبد الرحيم ', '29904012503623', '$2y$10$FxtlnS3F5xKijP7YgSv0u.73e5KlFOgSqH24NcZ6YozzFBOHK/c1O', 4, NULL, '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(176, 'بشرى كريم بشرى ابراهيم', '29802142500238', '$2y$10$Kepj3gK7uR2qxlT3edSVseqliQAThtuMNFdSyS3tqwVupLuULUkGe', 4, NULL, '2018-11-19 11:13:31', '2018-11-19 11:13:31'),
(177, 'بولا جرجس يونان مقار ', '30003012700397', '$2y$10$JPXTPj6DsIB2IUXqd8p0iOuuR4kW/kU1aeWUASrYKnYJxbYtaHKOe', 4, 'sEFAUjG1rswBdqvtuAnJ6C5HPRq6PwgjYQ6owTDygBphr9hdudyRzhlyMwA5', '2018-11-19 11:13:32', '2018-11-19 11:13:32'),
(178, 'بيتر عصام ادولف شفيق', '29901012503896', '$2y$10$Euo92SYHO0RWU7reIe7kVemTIB/8Y6mtKHwytXmAvhO08tVgv/He6', 4, '6KyivyitTiJrL5gAqiKQEgFn6tXQzwMcI26OlOccP9ZIUOkFG29qhyrw9eBM', '2018-11-19 11:13:32', '2018-11-19 11:13:32'),
(179, 'جوى بركات داوود يوسف', '29810152500042', '$2y$10$JiSGb0zGo6nnZuXKmWPx6eyGW7IEYPf6YGkSQpTcV3Q2k57uXaPYm', 4, NULL, '2018-11-19 11:13:32', '2018-11-19 11:13:32'),
(180, 'جيهان حمدي حسين عيسى', '29812202500408', '$2y$10$W7HCYjowKLvbhjOO/hzl3uLfQ6R2sC2qdwGVAL2ZBzBNPOCV1eif.', 4, 'elAuXMMnP6CZQItDLs7gafvp9o77oq3ctgVUBXYdj8ZTRrvubVCtauCP5itA', '2018-11-19 11:13:32', '2018-11-19 11:13:32'),
(181, 'حسام سيد عمر محمد', '29906152402935', '$2y$10$ekXSkYyxymmobZROOjRnIOdyXJJsqy/HtfX01NAp3p59M2UcUcJZu', 4, 'GPVOaP7soyYxWiKBU8rrBqt6EEMp40Ai9iOpmDH5VBj4a46KqCL3NXLOuVK4', '2018-11-19 11:13:32', '2018-11-19 11:13:32'),
(182, 'حسام عادل مصطفى احمد', '29905242502118', '$2y$10$D8nNVY13iaEatFzHQMM0V.Kpi/9ZV6oebRUPyYJno1/W.PuHKB0Di', 4, 'phtz7ujkhdnpeJRq1ZUsT5Srm6i5sVzlzz9BWgLK30Jiq4q26btYJmcH6EAx', '2018-11-19 11:13:33', '2018-11-19 11:13:33'),
(183, 'خلود محمد عبد العزيز احمد', '29711162502461', '$2y$10$ELeh0qHbY578inJdkIPNiOFSsOcJoooRJZ.FDgQrFA0AOhTNyrpBa', 4, 'z0o8EZhBMqPVmerGzdp6wVDnq2Zzj8JxYDxq8v9X43aPD8SfH86UTLfBULPx', '2018-11-19 11:13:33', '2018-11-19 11:13:33'),
(184, 'ديانا سيحة سعد ابراهيم', '29905252400542', '$2y$10$7Y4mvfHuj815OxSh6FahWeIgSJJP.ZxrH4H0rtfZaioQuF5gdmoty', 4, NULL, '2018-11-19 11:13:33', '2018-11-19 11:13:33'),
(185, 'دينا عبد الناصر سالم حسن', '29710252504563', '$2y$10$nxWinFPlHn8qd/rE4FYpNeEdB6w0H2MuLd4zS1GzeSWjSHQiNZ21y', 4, 'bNjWgxf48muotW9JMYDfjzKEomMQCX0gV9nL2E9mXyrLAdUylujLWXywE3mf', '2018-11-19 11:13:33', '2018-11-19 11:13:33'),
(186, 'دينا عماد الدين كامل محمد', '29908072501706', '$2y$10$xj2kdPOqhR5DCVLhAyKbGe7ovnuReYoAecg8ZmTix7zNTBCq8g/LG', 4, NULL, '2018-11-19 11:13:33', '2018-11-19 11:13:33'),
(187, 'رانيا محمد هشام احمد محمد', '29901252503702', '$2y$10$1ZJ/mxBisKpaPq74jRAj/eG3JRaYUI4tdY9NhQW6tQhdKX6MeWoci', 4, 'v9kBVh9YxLLGixOJbZ80KtWGFNIBu7zUops0o994noLcZOmIRN5capOiqj05', '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(188, 'رفيدة جمال محمد ربيع', '29909092505348', '$2y$10$vI8bVKSYuazNBZ85OvWeSOPphuB0w4l99TmWW27jpiSKAWLGacwAG', 4, '7rIhCC79jMZbS8i28mpG1XaatOVcuPyXuVEyfdSaPjUznP2Ln5aeXzfoOIrJ', '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(189, 'رنيم محمد عبد الرحيم احمد', '29904143200049', '$2y$10$cF1YXa4rXS3l31hS7ZvKKuySIbyor/l5YAhA.tI0bYb5h8Zoqt3Ka', 4, 'p1QFT46hrM4KWle2Cg0ctY034XWzku0MgnGEDrxWlvfjtybONMu9qCjmRUF2', '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(190, 'زياد عبد الباسط احمد عبد المطلب', '29912172500895', '$2y$10$bT82NVPKnPKkOaHKeGH1EetWi/hGQSXQZ2KcFNnnDaFE2SrFgkclO', 4, 'YdFg4nWDr8GXYR1Rk7FkafLdlGVLRxVPs1odrRohpj91srdx3xiWabpz3KaK', '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(191, 'سارة فاروق عبد اللاه محمد', '29904032604027', '$2y$10$oK4N0hLO3yP5qHclB7FOs.rJlvoMAZ.2P2tEwVZ5YTDcca./WVdQe', 4, NULL, '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(192, 'ساندي عماد حليم جاد الله', '29907192501185', '$2y$10$g/2oVNAHcfv8UcfUK73IV.bdyTpPyWz6ynRVc72xs1238LqLe4z5G', 4, 'i3rvIvZ1FVQLbQoVQZlAb8hI9VlwVWqFXhzKyhwrdr7CNNKGQFljROCsHJ3C', '2018-11-19 11:13:34', '2018-11-19 11:13:34'),
(193, 'سلمى احمد حسين حسن', '29901242502945', '$2y$10$nqRLSEAcmtLYuuMdeC1mjuQaWDZqBg1gDsFUf2wgYpuXjW6Yk2dJi', 4, 'gN1iuVnbMxpsifeL6QLevTwEmtyxBR80fwB319eO9KRDZiXLf5V5G6sMrWcz', '2018-11-19 11:13:35', '2018-11-19 11:13:35'),
(194, 'سلوى جمال عبد اللاه طه', '29812202500343', '$2y$10$RYHvYOdXDp/pIMiCAxszxe7WDxX3A3LWDKQN3dvSTcMFtKJ2JtJs2', 4, '3GSWQRJQMZYyHAyTVEtHyHHxQuYhmnRkktOzNg19AyCaIaRcQsrAy1WQMVyL', '2018-11-19 11:13:35', '2018-11-19 11:13:35'),
(195, 'سمير منير سمير حنين  ', '29908212503755', '$2y$10$7Ow8YtiuWd8/0ovyEaKmB.X5KOUQIcOkucLBGRJpKSzEkS/8DwESC', 4, 'etRRi51qCzw7GdMev5a4YGZ4HXgUcNbbuvLk6KKHs6kdcZqwDzW7y18t8qe4', '2018-11-19 11:13:35', '2018-11-19 11:13:35'),
(196, 'سندس محمد حسين علي', '29911063200109', '$2y$10$B.vvQQYVmIY6H/zGDncI7.BcpCfsRVknFhSp1U.By0PLzJHUWvqc.', 4, 'zz719VkRgg7wb2qay9Y6DeFLfOg2WBEPzvfaZkg3eBZb9pKiftBuAauvKzeF', '2018-11-19 11:13:35', '2018-11-19 11:13:35'),
(197, 'سها عادل ابراهيم محمد', '29811062500309', '$2y$10$PSrHXIpRvtCAQkSIbFuPvuNDyYr.mI3Cpe0nC6aYVwGEL.HdA5H2G', 4, 'DOpgIiaUGTOK9eZjbUE03Zet3r4gjIUWqxYjOXR7TQlmoFcNhgu241fCjH4v', '2018-11-19 11:13:35', '2018-11-19 11:13:35'),
(198, 'سهيلة عادل فوزي محمود', '29908162601343', '$2y$10$xJIPjRma/RyHRODyql3bTOCOrxH4PEsYgXK0ZWq.Ehg0at.llWmQO', 4, '9twEJONsnY45mPDaC56GS4FimFoNnpNE9CQNU6jdtLyel6YHC8azO2r2JJxC', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(199, 'شريف احمد محمد احمد ', '29903183200215', '$2y$10$dk5hCxNfyKNhHsKi0qQWdOloUPZOoS.5CInLxdXSrUlmEx15SpjCO', 4, '7zwn2R4cbIoAi6HavhEKd0fEwjJVvFVWo0rJuXWuNUgLmFw3YVg1DZAgqdpW', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(200, 'شيري اشرف زكري اليفاز', '29906072500065', '$2y$10$feIB9QYf083OBx3idhmFIeHNZm7VUtqqCuXHPQ.OXFvvnCRkRon6i', 4, 'Dzib9oJ6L8dBe9pooWeDgfgLbA7JkatKJowZzG3fXz6WfaJJdD7R30KJkjpx', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(201, 'شيماء ممدوح احمد محمد', '29909052502168', '$2y$10$IUfAX2HIDRveoNPdVJS0demdxmKNRpf6nWUezvHxko.B7RFPviydy', 4, 'fgwTHCxkMj2dx9HdGglFNZIsiGNZA6KLekRfNqe2jbFfjtu1uiQtdzhQZwR5', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(202, 'عائشة محمد صفوت عبد الرحمن', '29909232500465', '$2y$10$6yFj8q8S7xpqcnd3qiyQE.zYb00VTIpX.63kKh3VL0shavWQC8uW6', 4, '8FNEfAe1kh0zvUQuyZeeRjujw8IHOQ3HIoi6aeEHBLM4Z8juvhFiEQrCj7d8', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(203, 'عبد الرحمن عرفة عثمان محمد', '29907012501212', '$2y$10$.COTgHRutxljYFJalfMytOXoAVMJR9mhO1lNtJw/9fGjku4TJrxM.', 4, 'V5PLZ0AcTi6w6lEVjLsJrS8wNyI9FzUmSPCs48p61duxu1JmxbgPzrrewfUL', '2018-11-19 11:13:36', '2018-11-19 11:13:36'),
(204, 'عبد الرحمن علي فرغلي هدية', '29809172501172', '$2y$10$UX06nV4L/4GLZdtgUAVhJ.6xTT2fd0a7zaFe9gbIK8w5qStdqxCO.', 4, '6ry8QSuTz1vNHvUtnIkDhmGCC6gpIUhF4dr7oLVzMllfprhXtObf7WBzffrp', '2018-11-19 11:13:37', '2018-11-19 11:13:37'),
(205, 'عبد الرحمن فرغلي رشوان فرغلى ', '29812232501212', '$2y$10$Z0jJfDjNIF1UTlLqV/V8lu.2pzshMOpFj0mzXNaMdZxts3biZidB2', 4, 'sGlflYNHjMrhyYQlyouZ6YJgPUSfxLuoFa0OksFNAZtpUGH1YCmYUeWXfLzL', '2018-11-19 11:13:37', '2018-11-19 11:13:37'),
(206, 'عزة بهاء الدين محمد مصطفى', '29907062501663', '$2y$10$q/PBrKJJZUtBuekCn1N9teRAK0MO0S450QbeVDw6i7FLmqqT/aGeq', 4, 'Zux0l3YBsjzMiNP3zV2OtF6BMnj6Zupx6zJdRWGy6YBxPkAlt6WPWP7uP6Yn', '2018-11-19 11:13:37', '2018-11-19 11:13:37'),
(207, 'علي عبد الرحمن احمد عبد الرحمن', '29904202502852', '$2y$10$iln1PJ.QcdC3woaInztLuutmvX3jG9atJxnmdb5ngOqnKpzyowKIy', 4, 'ADYmC5RxQ0a1N0QZ2O57cTm6Fl4o7Pwxx2AsTPRahtXyu96PvJCHhiGenFgg', '2018-11-19 11:13:37', '2018-11-19 11:13:37'),
(208, 'فادى ياسر زكريا فهمى ', '29905182401694', '$2y$10$Fs4odGkKqIEljaoC.uOBLu93iXTiFRflv2jdggX4avg6iaEf.hNtG', 4, 'S7vTVuHSndyy5TmUKySR62iM5S4BVLLlZBpLkgyLLgtnIaTMN2dhTXkNZ7YJ', '2018-11-19 11:13:37', '2018-11-19 11:13:37'),
(209, 'فاطمة الزهراء احمد عبدالرحمن على', '29812152500649', '$2y$10$zhaLz4c28cwPTzlhLt2yBuvKr8eBegP7jmjRo/onnTPUTGasPgQfe', 4, 'Co5phCYwzrBqxEfPS89Suxcn7XabuI4MiaIRkE0XiyAXeR2ZYUmUS0OOluTT', '2018-11-19 11:13:38', '2018-11-19 11:13:38'),
(210, 'فاطمة الزهراء محمد عباس يوسف ', '29909162501086', '$2y$10$YLx/Gei2KYOoAbuUXUPWNuVDBPF71n2RcTYx/PQsxSTfo0HMvQit2', 4, 'X2niWJ44i1mkAMacyQCuq9gckxiVjss8Gi4xEGWPlguE2EXSMf4HiSbeygPo', '2018-11-19 11:13:38', '2018-11-19 11:13:38'),
(211, 'فكري سيد فكري قرني', '29802082202135', '$2y$10$/MxYpnhVrdEtysYzGK55bOyxNISM2n6Zx5pptLyGZ7/NUqrlcTl9q', 4, 'K2zdn7s8HUmxqgh4WgGtQwC3eFm4nDoWJJqEtWTUPP2u137X0HGkJtbENfU9', '2018-11-19 11:13:38', '2018-11-19 11:13:38'),
(212, 'كيرلس ثروت فؤاد الياس', '29811202700753', '$2y$10$to6tPLFovZqKi3MGJOZwlukweKZ0/qThzTCK0RzBr7prkT9iCf1ui', 4, '0muCx0avNMlS1b9okR1Jb5yNNgURePPN1Wdy7adIeFfu8cwXsjp6KymzyLvj', '2018-11-19 11:13:38', '2018-11-19 11:13:38'),
(213, 'ماجد ناصر نجيب صالح', '29905022502559', '$2y$10$FEbiSk1i.qeys1o9rjtu6OnlFiEIhC3kY.3aGNgJWSdzZMJ2B9vgG', 4, 'JBI8pZ8rBnYYWHVgJ9cW0aigAfW2tpj8baf6zZqn7qPq6BTo7pZ1khiuEnxx', '2018-11-19 11:13:38', '2018-11-19 11:13:38'),
(214, 'مارجو صبري شنوده شحاتة', '29908282500184', '$2y$10$dfgs70/iD7X1ZvC1dfz6ruwwsSc1JgQTgHqZErOXjz.oySQ1Mepna', 4, NULL, '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(215, 'مارينا اميل بخيت لبيب ', '29809302500544', '$2y$10$ICMmCmiJoCOq48vi6uk15OehGHSXH/ziA91i3pLFvBvkjq2XbHylG', 4, NULL, '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(216, 'ماريه ابراهيم محمد ابراهيم ', '29810182502589', '$2y$10$QjpVFUv1xh4pLeoT1MT9J.C8oG9hazIesAhZOo8mNFTC6DXzp5IXu', 4, 'wJTtj4QHs1qdhF1qNKhcDVcwidBqN6KK24gmikKYUrHRcpPRlPqZdGYy62yN', '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(217, 'ماريو عبد الهادي انور ايوب', '29802222502576', '$2y$10$ZQXhx0YJIjlA.6Q0DEBW8OrZF9cMaabyFXScSuIXeLBFEq1Dn7Jz6', 4, 'ldadk4gRJMSOjQvBol6B9VgX9NMG2LiZxD4fVfq054NA7LZPJ9CDC9CHHUgb', '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(218, 'محمد اشرف سعد زين الدين', '29907122501838', '$2y$10$D2xTguO.Cbrc/ogDm1GlkuNGfs90HyDSEZvAJu30P9kN6p2GrvpXq', 4, 'H1bdeUEX4Gjn7Hqyb2ujTMFwi0QM93DeBajFQPMHHoVQrUsatRELnYRoV3HF', '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(219, 'محمد حمدي ضوي محمد', '29805072501613', '$2y$10$oAXb7RZ5RucbSS5DkucwaeUeG983LLi5R2YF836FyaykdHo4cSMzC', 4, 'fwUpcUzW9itKZXxPTCSxW4B1F4QZtWZNyoVVUFcKTn1bo2gYs3Y1oYJpB6DM', '2018-11-19 11:13:39', '2018-11-19 11:13:39'),
(220, 'محمد صابر سيد حافظ', '29804013200239', '$2y$10$ZVlq/jC/gIR7An1rkFURxOaCyPIbGdBdXtt1.s0uHkqCtJidSwX0G', 4, 'SNIN5Hjo2nlhpADcuybV7iWey8xwrdRnpIxVnbQlIr5Et4ybRHVhln6R2vjY', '2018-11-19 11:13:40', '2018-11-19 11:13:40'),
(221, 'محمد عبد الناصر حسن مصطفى', '29905042500358', '$2y$10$XvnJb5UXu58yt9NWYo.q/uwfkVp0B0HEz7KDSQqxJNX0FtiNRLJhS', 4, 'ItVCFATRdfw6Sjq317Lc75LNXSwJ1h1cntSYn2VsdqBITmPVWn49qQ64Upi3', '2018-11-19 11:13:40', '2018-11-19 11:13:40'),
(222, 'مرح عثمان علي محمد', '29909092504082', '$2y$10$or3bz6nWGtLhZ9p.nP/YVO8psAcOtirFXKlvd0Ykqm8GC3M4ZWPz2', 4, 'xB3TQVsYwI3WQ5RlL3qUpD6pyFdUzL2RQfwDWa1Q7CQodG3rrq1CjnLgNsmp', '2018-11-19 11:13:40', '2018-11-19 11:13:40'),
(223, 'مرنا مدحت شفيق مخائيل', '29811062500244', '$2y$10$6e9d/6zqF/2b7nd41kukSeK9V5xXXWekdSUBHILkMqxCMXTwNPY5W', 4, '5KgLsjVpO12BFUXeB7k0tWoQZ7aWDXphl7E1UkZlv7SQ72nlQhkThvUSAWlc', '2018-11-19 11:13:40', '2018-11-19 11:13:40'),
(224, 'مروان محمد ربيع ثايت', '29811282501675', '$2y$10$Z/yhXJDd.44.XWGzt/.PzOHf7xLvAntikWfVNeOHbfYN1u53d7e2G', 4, '5122oZhDuc8baQ2jrUYRvXanEc1V4yzoVZoxxb0zPxHcDJ6eFaHeE4CgPR4d', '2018-11-19 11:13:40', '2018-11-19 11:13:40'),
(225, 'مصطفى فتحي احمد علي', '29902208800593', '$2y$10$3xmBeab4XswEjV9g7a3ii.PIlephgOm.uCXiVmsNIpgu/ckh0E8QK', 4, 'LRVE5wVh2SN6Ukboi7r84Rhmz1YWkolGrl3a5VhMgkQjeXOBtAUCVB9RnSoK', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(226, 'مصطفى محمود كامل عثمان', '29907042502175', '$2y$10$mLhiPbNZzvZkEonUcnofyO8XyzL/P38FFGO2ILiXHAB92KuVv8bB.', 4, 'w2Wxs7FZ1JgucSJpVxn2UNufz3VGmZLl9X2OJQ2kwSo9skmdNNzjJ8WcvroZ', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(227, 'منال رياض كيلاني فياض', '29803172500425', '$2y$10$w4LbiwjffWxRUf73nED09OJ/dyzNbuxYTypd/gI.LqHOZeP3c0wb2', 4, 'fPVEbVQ4hV6yMgrC16EO9HpyyHdVHe7Ty9gWCM6ByuUF4aiGkVgIatULHwaK', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(228, 'منة الله صلاح الدين محمد عبد العزيز ادريس', '29711252500807', '$2y$10$XZunwvsXbYz0gM3kp/KD1ehGndHKvaQifRfShgeecmgJGtVVb.rYy', 4, 'W6qW4TPIYxPIvWqJ8FeEdp9eCw1R9Tx8oCLVhz4QjJJIkogBvZKKzBwgQequ', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(229, 'مى مجدى زغلول حمدان ', '29908122600808', '$2y$10$d0EQEV1ntBrONzxe8M98H.1xqN.RqROhS/xKlrGkXLE6Z.K.V1Htu', 4, 'a2iJMNNEHOKrgIqjjMljlpeiDoHdjpsS68ECsE9txCWseYovQfT9UsBRnxB4', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(230, 'ميرا عادل مكاري زكري', '29809122603361', '$2y$10$/l4kuQMdcYk6p4AXIn2LcuWdkca7w3SNt0Wy.n1bpkiQERUsOI/Me', 4, 'wVNpQguGvr0J3oxYrpxukb2rNYPfQRNKT9ww5gpZFmNA10H2JCNrzE6CsoOp', '2018-11-19 11:13:41', '2018-11-19 11:13:41'),
(231, 'ميراى ماهر سليمان صموئيل', '29907172502088', '$2y$10$U54IW1fF./j7HRLzFWrWl.x3EywoYNdemFHaG2QA6wNIKCmJJVHPu', 4, 'S0IWLkwVzPWQGMi1GoOSYuanLVJq1OpMFEZPn6r6ARVq8VIVv8SjWnZo3w1L', '2018-11-19 11:13:42', '2018-11-19 11:13:42'),
(232, 'مينا ذكي ارمانيوس حبيب', '29811112500291', '$2y$10$Af.sgZH5LYXdqTpTsJB5xeyNNtUD3iIRRLe2lE345QiPvRVQKUIJa', 4, 'dOns5LV0PZM1Zw1yUXWe1IqIdvTwyU2mRI2TS9Dae1BOlk9hhnGlwDLiTvNd', '2018-11-19 11:13:42', '2018-11-19 11:13:42'),
(233, 'مينا سمير انور جرس ', '29901142401793', '$2y$10$UcQpfZPTDJ2dvsX8EffOs.eoFxCUGx9I0HzlXLj90UXziRLX6iV8K', 4, '0S1inRQuZTM5ZsEP71ioZFP9k9znO8TaZh5hpI6K8Ryui3HfBVrFM2mJ2wAs', '2018-11-19 11:13:42', '2018-11-19 11:13:42'),
(234, 'مينا ماجد رشيد حبيب', '29710312500597', '$2y$10$Xqv4SMEwSFC1De30TcHM/Ok4VBClVel5Penu12adgQnbkTKAe7no2', 4, 'MAF6wicwqU5hZQibM656HY1E0FStuRHrsaJEwYp8j5DBOXQ0mSnpTDA5i2Kh', '2018-11-19 11:13:42', '2018-11-19 11:13:42'),
(235, 'ندى حمدي عبد الرزاق محمد', '29907012615129', '$2y$10$nzxlOvJrADnxCWUz9Y15..8vs3mnhoUIODtcZ93DuhSqnSvwpVJj6', 4, 'aI0OI56v4XWyHL4NS2obZgFBdUSrraYKVLVVUzqrVBFF6kCcG7etumdrcZVB', '2018-11-19 11:13:42', '2018-11-19 11:13:42'),
(236, 'ندى عبد اللطيف شاكر صديق', '29907222500383', '$2y$10$N0ahvMyuryEVpGrsG.Q2w.S2K.CEQD2MIEGTsObpwXQFDdeublSJO', 4, 'rlkN7XpgJfzpBMtcuAf9bCGhOOpGvTxNu8xARxP9usyLG9Qs94OzGc3cJ7oV', '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(237, 'ندى ممدوح علي كامل ابراهيم بدارى ', '29906112500128', '$2y$10$EZ.05xPeDu5XS6Z7Fy1GfO3PAABvPYtmNwN4oBu67k1sV6uZxy3Zi', 4, NULL, '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(238, 'ندى منتصر حسن عبد المجيد', '29909182600706', '$2y$10$mAvG0/9A4uNPQVu0VvO4Muk2dyWc7mCnD.M4CDOnBljGOW4cMopde', 4, NULL, '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(239, 'ندى ناصر محمود مصبح', '29905162502087', '$2y$10$UgeAw.fzGvwOy3mK/DuYIODA1FAI9jZRYEK/xMTzpVbjRwVD6ViIG', 4, 'T3nywqAE7O2VkXoWpO3FSXpxarmovR1wLadbBGmsTQskDL7YeTkk0ZU9NhuS', '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(240, 'نورهان جمال عبد المنعم محمد العسيلى', '29707240101021', '$2y$10$vldnOyQYAqZcg0qmbVtBVeYGTAYR76NQHhSSjo0r9bB0PTcq/Vvei', 4, 'F9oWHZX29YTjb9Zpkqw8euocQLAm8WKqLi2W4N9EK6V6Awr64IqjUBZ8MSEu', '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(241, 'هابى احمد نعمان جلال ', '29806272500383', '$2y$10$3RbS29jrhynxyXoTSPmOkuz1JTdhhpmNUMvdHtXAuX9i7DC.56MDO', 4, 'h7LcQeMVIX8FMTtBDEfPI0jMrYumEwtw2CR8TCVMuPijHM7b4qSqEAVR56M3', '2018-11-19 11:13:43', '2018-11-19 11:13:43'),
(242, 'هاجر علي إبراهيم زيدان', '29901092500949', '$2y$10$2dyBgPgVHX.K57wVIxCeiOT9TBdxYvNd6cmbq3oTH7a/ffZ/BAUFq', 4, NULL, '2018-11-19 11:13:44', '2018-11-19 11:13:44'),
(243, 'هدير ممدوح عبد الفتاح محمد', '29812228800469', '$2y$10$J61aI9bwYHE7psnZrthJjOg9xAqoD4rOAoQe3BPfmtGdAU4BGPysa', 4, 'yqdV1HqRZzYtx4ummUBLS0jeN8ThWa1yavN2KhyGx89kktxpVMgCSckMpDPK', '2018-11-19 11:13:44', '2018-11-19 11:13:44'),
(244, 'همس محمد رجائي محمد', '29810212500047', '$2y$10$6Tbb3m0Elc4eVsWsCmM5E.8Nlj33Kim0umV/EK8G857tBQzfsXx6.', 4, NULL, '2018-11-19 11:13:44', '2018-11-19 11:13:44'),
(245, 'هند اكرم احمد عبد المقصود', '29903202400948', '$2y$10$gDXdBYbpYcWPOI/XSQNs.e34p7JBIpY7pOZUG0SJ8LNIaaw5mH4iS', 4, 'c1J2YSqkkUtp1Z8LYb8tbO7VmCNO5laB2qTewEy9rmx16jkLGEsL4I5atbK9', '2018-11-19 11:13:44', '2018-11-19 11:13:44'),
(246, 'وئام جمال محمد حسانين', '29908142500966', '$2y$10$EiEziGAq9O.B5OViWABSk.YoqonLGOg5VhJjAPJdW/IcDp4sh9Xm2', 4, 'ffomeXkHwkJWwfBaXuEX6m3MDFIdSfaWwlsnOuM8goz6j2ADd6J6IzjUwkP3', '2018-11-19 11:13:44', '2018-11-19 11:13:44'),
(247, 'ياسمين محسن محمد حلمي راغب ', '29907192500103', '$2y$10$qh6gqn1tUPF7Q5A6CzZq1eraKRF4xUhZZ0BVI6puNXXJ07aogylMG', 4, NULL, '2018-11-19 11:13:45', '2018-11-19 11:13:45'),
(248, 'يمنى محمد سيد احمد', '29905082600924', '$2y$10$I6Gy487fvSckNZEK2mQ7GeEaGhgdrsKkbwlTI3gu6Px0hSrz8EQW.', 4, 'L0MfdJSGjl8RuPKafohKfkyPx9N4zyXSP3elFA7J2qpXruBlQBVZlRAwSEDB', '2018-11-19 11:13:45', '2018-11-19 11:13:45'),
(249, 'يوستينا سمير مرزوق زخاري', '29802012622625', '$2y$10$qXED1KHkUaMlJifwbwFthez1fxlZ312NxCCtacIY6xFqCTC6wymqa', 4, NULL, '2018-11-19 11:13:45', '2018-11-19 11:13:45'),
(250, 'ابانوب رائف نظمى ميخائيل سيف', '29809020201056', '$2y$10$R0LQoGzbhE3ilVVfY4aKSuh0LmcTsa.F4F75BTz5GW80Jsn/XEcKW', 4, NULL, '2018-11-22 05:01:36', '2018-11-22 05:01:36'),
(251, 'ابانوب زكريا لبيب نص', '29909182502038', '$2y$10$vqy3nIXSa9cpZQdqqd8ATOVdrVCIscqxEmC4oVHyDaU5VqFX6eRG6', 4, 'unmt5ZfeqIoYrx6UftgzbFp3s280iIs6g2va1lCvzjl4Chp1TBURPt21v3ir', '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(252, 'ابانوب موسى عبده ابراهيم', '29902202500776', '$2y$10$RtZqYflZwZyDrsZhaFBGZ.9OLkKvmNAlUHB4DFH1Bf1mtTMzR9yW2', 4, 'r0XH2LMNAC6pNw0GFqLgRXaQTt01I5Y2aqS3ryrXe5WSmkRh81gc3Dosyg9D', '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(253, 'ابراهيم احمد عبد الرحيم احمد', '29908162600932', '$2y$10$Z6TnCZ4x81feBLRCYol.5OdK0/GB7JXnAkwXfY1yLmcn.r/k7eWDK', 4, 'GOtGJIUpGPkerg8J17Dbe6b581dzHn8QE7h45LGse5k4Lexxqe5gKzPrSuuy', '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(254, 'ابراهيم ايمن مفلاح دمرداش', '29905308800174', '$2y$10$pLY3vz3flIzYTpaZRLQ1X.nL1osX8P2gbwJFNC8/dursrzKrxZpni', 4, '7UCe3Cg24nI4WvmljUGQxlnd0iBO8LlrCOe9na7eSHMNu3ghc4IdgqarLWwe', '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(255, 'ابراهيم محمد ابراهيم ثابت', '29907032502592', '$2y$10$w/xhXfx3nTtu2nsXq57NIulIf2cZgjlDFiKQge29dVcr1BE23NH8O', 4, NULL, '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(256, 'ابراهيم محمد احمد احمد', '29801272601056', '$2y$10$0YUdvd8q5bqXMXS4UbUwF.T5P823hPBCaCpEg4Rxbp15EtVFUEckK', 4, '40Rgg3623SRA0bKjtDbBQlFOVilxmd4nWE6wXyP5ttA4myiYfk1xpe1BxNZE', '2018-11-22 05:01:37', '2018-11-22 05:01:37'),
(257, 'احسان احمد محمد عبد الباقى', '29909182501503', '$2y$10$NXflNR8x.KiGiSheyw9ire3LNE0onxSaNAgMjxGADzIcRijMZuH6.', 4, 'wScFsBhqwvUP4UrRi0pwebzoNANrrKbcfN0BT9k49FEXy4McPG9gKak5XOEL', '2018-11-22 05:01:38', '2018-11-22 05:01:38'),
(258, 'احمد ابو الغيط السيد عليان', '29811192602138', '$2y$10$gNkFx6/Ib45Qj15kxFDR2..RB4R2FrtxoJo8dc5RrQzgc75M8//kq', 4, NULL, '2018-11-22 05:01:38', '2018-11-22 05:01:38'),
(259, 'احمد الضوى عبدالرحيم احمد', '29806202700571', '$2y$10$trU2tI8RCubVlFxaG9xI5.VHm71PGnk5VrnPj5097Xt8ohYX1mRiq', 4, 'HcZR12k3DrV2Dj8gsiHRGluV9BDV9QphQOKUM6yzeCdPmfz6lyc2OFZJU9XD', '2018-11-22 05:01:38', '2018-11-22 05:01:38'),
(260, 'احمد حسام محفوظ حسن', '29904072500356', '$2y$10$o7C9B0fFpGBZqP9Fxf3C0u9sdtACdqyGfmI1QqqwacPCXztlqPRfm', 4, NULL, '2018-11-22 05:01:38', '2018-11-22 05:01:38'),
(261, 'احمد خالد حلمى زهرى', '29907042501616', '$2y$10$MdkUC3ssXAEB02RYGnUt5utGpxHkieU1JpRbcOsUiVA1V2jpeJK.e', 4, NULL, '2018-11-22 05:01:38', '2018-11-22 05:01:38'),
(262, 'احمد سامح سيد عبد الرحيم', '29812122500555', '$2y$10$NSCp4zf.CzDFexerhCKusu.SlpqWXoH65702oMNaDrmXzRuLe2Myq', 4, '2qsJxFRCkjx36TdsaW6Zpv3lzdmsuUyJLgeX1RKHD9LF8VXk5Jwj539V5oxn', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(263, 'احمد سعد احمد مرسى', '29907192500057', '$2y$10$SspDGRcecG1GoZNXfl5OpOjy6.6pYigFQnJnHlj.wqH6PrbQ2Tncy', 4, 'Otv7gDotoZ5DJD1t3ygXKPHlljRJfc2ubxCevnCOeCD80RtWsLtmLHbd45T0', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(264, 'احمد سعيد سليم محمد', '29509302705959', '$2y$10$Tp5xJ9DKMq54KtJ.XGelduTJ2REG8KnHzPl99Zm1ibZyWkBpnkScm', 4, 'iL49cZGUCcqT1OeQh9y1rUS0WMVsbdon8206V8zQJmVBmi4rSLlURQEeI5dg', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(265, 'احمد سعيد سيد ابراهيم', '29903152501438', '$2y$10$EoDV3qZLFrPlDyLkBFXkeeK8bTfZARNvVG8w1K1nhfl6.HcK0jGki', 4, 'Al4NHbEMlhBvTqaoG2Ug5FHGn5NUncwv4px6Vo1zjT7CbWqKibT4Wd1L7uja', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(266, 'احمد عبد الحميد على عبد الجواد', '29902182601392', '$2y$10$B7tQNg8HUB/3Gy4IHOND8uae1adt/w5KCl2itGp3efwfuSj2CRpSa', 4, 'hD9MPBxAlwoLBqGeXGh4rp0LNO9aoiBuhp1ZfXx1RT2reTpEdZCSG6InGVdI', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(267, 'احمد عبدالعال شحاته عبدالعال', '29810152501057', '$2y$10$eUmxQaoJ0hyMVs4lMYB69uxUcANi0yPnouC2XiDgVbMsjeFbJovy.', 4, 'K32xB2h11i887lbBNpV9RjGFaCj6sg3QhAMwiPeDrcLX3buvGeHffzACjGq5', '2018-11-22 05:01:39', '2018-11-22 05:01:39'),
(268, 'احمد كمال محمد عثمان', '29911012501295', '$2y$10$ikJo8IHCSqFR2XX8ln1roekrkjIgfth8OaUw0iCK3xn4S46WIzWWu', 4, 'ke4rOGFyG3uaDlenfFXh3MQgPIaohgeloyjNGudwbKv8f0ZbaZ4RmJrjit9f', '2018-11-22 05:01:40', '2018-11-22 05:01:40'),
(269, 'احمد محمد عثمان ابو العلا', '29909220103231', '$2y$10$HjxXZydEvMQLivO6CTCYN.oUajm8D2hquvzwO.A.53Q005m08SKjG', 4, NULL, '2018-11-22 05:01:40', '2018-11-22 05:01:40'),
(270, 'احمد محمد محمد ربيع محمد', '29806242501393', '$2y$10$fdcEcrOZ/1CpPSzXePvzsuoW6MEnKanOPiCgBJxNHO2oIKS24sl1O', 4, NULL, '2018-11-22 05:01:40', '2018-11-22 05:01:40'),
(271, 'احمد محمد نبيل على مصطفى', '29908232500213', '$2y$10$0bY6K0l87VqPWmzlpmJLMu7sDyzyh.TGpO9OpJ0DL0FgbO5u.GCVG', 4, 'I2A8OlKzfX40ZBRFon78Vq8X1NaPLhTbtHERphNkpXS65K5JynP3zx6fWs83', '2018-11-22 05:01:40', '2018-11-22 05:01:40'),
(272, 'احمد محمود حسن محمود', '29906052500956', '$2y$10$fnw9Mvh5rrJ.r8A4HbvK8u1erKbp8E171ynqgHObwAGjiBcFvqTQK', 4, NULL, '2018-11-22 05:01:40', '2018-11-22 05:01:40'),
(273, 'احمد محمود سيد ابراهيم', '29808092500051', '$2y$10$02tQWtMOqlGdRCXDUwBJv.wzPtFoZT1GjhPp3tVFqgdr42GluKOy6', 4, NULL, '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(274, 'احمد محمود مصطفى ثابت', '29901022501255', '$2y$10$uVTo5mTmEmyIb1dxSuHYTOw/cUzw0ySHBCGeMLaeG8hQTsQY9GM8u', 4, 'gEL7VItWS0u39qQIdsqWfTD6AiIxz8BaqnzGi6UHIj2g8WfCcdFZv3Yn7zNv', '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(275, 'احمد مصطفى كامل صديق', '29903252502938', '$2y$10$dTLk1mIRLrRzAIWvaZXmxuF.w3u3B82A88wVTjaCj412rtr79LPeW', 4, 'pS1pzyI8LJ9SLvWizDXq3WY52cEIQlUiTEpfF83L3kuSrJaNQLWHYqktujXz', '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(276, 'احمد مظهر محمد حسانين', '29907072502072', '$2y$10$y1Z1CHYXJpDeFv53Z7.TY.ADmoU2NCu.QQRiNYHSVvsKi9/aQsK2u', 4, 'io95tbuKVvKLugdbYlZ5EQPir4Jrrt6BHvoYd2ufUF9FOWuas6NTANd5jTbq', '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(277, 'احمد مكرم عبدالباقى عبدالرحمن', '29810182702171', '$2y$10$VnXLQYBa9EviFADIedFssOx1pKsACWprsrvbtAUZYGpxm5h1k48Da', 4, 'YlQl0Vt80rxh9EdWwC11odQqFAwefurtchopE90FUEKf4PTlhs1yd7ZXjR1E', '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(278, 'اسلام طه عبد الرحيم سيد', '29903292500075', '$2y$10$P2eyelb/ZYFW.ncZo7ce2.mkJqt9YpzIk0gtUf3Zig2oDKwKoP9gq', 4, '3r3G84D3zc1QoBCtSer6G1EaG5iQAOIWnuWoWPo1gQUl9FlKFsGARC8cgpwu', '2018-11-22 05:01:41', '2018-11-22 05:01:41'),
(279, 'اسماء رمضان محمود مرسى‏', '29807052500184', '$2y$10$29YSk8qeSbcl/Kx7iDGTm.QtGoSx/SV9DaX9BwNc7vbAoxKbqYyYW', 4, NULL, '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(280, 'اسماء صديق سليمان داود', '29909112500887', '$2y$10$dX/AlJgnjB22lt7fF4wbh.SmtQhzBKYyMY3/UlbssaVlVYZ.LYAbS', 4, 'rhPBLyGuV1V8rVhgjz94g0zLd0qa636I1tVMaPMO76vPwPpqv79ODt7rhDry', '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(281, 'الاء عادل محمد محمود', '29808162500089', '$2y$10$wBtHH7R/BqNhtCAmiAArsOw9Yb6TSMEx08WMCdy9Q5rUmXeGT.X3G', 4, 'gD5cG5JoYWJ38FAdR4Sp9REMcbLvVWYy6B3AYqOh7Kym2Q6BE1ufs6uAgxQO', '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(282, 'الزهراء يوسف محمد فولي', '29905208801041', '$2y$10$f4lBkzWyZjHefXQazrbL..CW9ztHsFAXVKbAIf4ccTGR0nf2Ns9uq', 4, NULL, '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(283, 'امجد ضيف فرند ضيف', '29812052500234', '$2y$10$giHPgYw/jD8sOkZlxto4lesWhA908QkGdQgLTxtL1AtBA1AozP.Wa', 4, 'cVbKA9BO31B8ftsOQbCPYTdDxwT63rj12pTuTq570ADddbPWl7XrTMSBGahs', '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(284, 'امل عبد اللطيف عبد الكريم محمد', '29806132500324', '$2y$10$mzuE1pHYpjbiPwvLzIYP5eRG7sQ1R2WjTgZOzEc.Er8qk29NHJGb.', 4, '6JXtnbi6Xdkx3swukd2Sd8KMpjUWeZP5UID3h6pr9Rt9Glr3C2kNmIWu6y4K', '2018-11-22 05:01:42', '2018-11-22 05:01:42'),
(285, 'امير عبد الفتاح حسن محمد', '29901012725139', '$2y$10$RpQQL.0DGHGgU7Sn2JIAcu1txU2W.nz8OiWmzXBcUK.HheweP2g42', 4, 'mwsBqF2AWczgXkkwKZVK5BGfsYUB92E1LQYrvNU1ZUvEtTd16LoHMpLXwNdK', '2018-11-22 05:01:43', '2018-11-22 05:01:43'),
(286, 'امير كريم كامل جرجس', '29907172503971', '$2y$10$TyO2z9MzBzQh.BGGnWXTou12PtwG5oOxyVG6wbqRilaPJQ4Dy9I3K', 4, NULL, '2018-11-22 05:01:43', '2018-11-22 05:01:43'),
(287, 'اميره محمود عيد عبد الناصر', '29904112501687', '$2y$10$kiwpQoJ2Ux2RxkmEvmGreupStiIKUvF7weg02AQ2ZwRbTU44ox7dO', 4, 'RAwIlU2TYvm1QxS0YAr07rWnaWylO6YSHcrxs6Qw4nk8tGNxhVMcJ6LFE6j2', '2018-11-22 05:01:43', '2018-11-22 05:01:43'),
(288, 'اندرو ميلاد داود حنا', '29806172500238', '$2y$10$PRPuP.H4acqkLEFVDpKcEu5AQKsn98Wa5.S3nzU6Rlkwgyhtvhrd2', 4, 'Y0039MH8VJhnbQlLojrk8NJrKMHgG80vhOg5LqtroSjdsc5BZgaZOG6bEB4Y', '2018-11-22 05:01:43', '2018-11-22 05:01:43'),
(289, 'انس محمد سيد احمد', '29901012516653', '$2y$10$/zJl/VJcmsD/7wwYtP4tFee0KAFfR5ZqF2vYOutqMu0KOExyMJ9n.', 4, 'lXiz5Sa4ijsis3jWaUEERUKi3X1kMmbxB30atFlivhBDQZ2FVwNjqtkiohfS', '2018-11-22 05:01:43', '2018-11-22 05:01:43'),
(290, 'ايمن طارق احمد محمد', '29906122800278', '$2y$10$yoz0kOJOVeIoJIW2Xw4xDOFW1WWK089..jdbAyTh5ZpuKrgf5x1wu', 4, 'WmKAJENk8VdCBjihk3CE1E3yYZzut15ObMtPy7nToYLwssUklDVfRbcvwXr7', '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(291, 'ايه نبيل هلباوى محمد', '29902132500269', '$2y$10$R3pMVvPVwRlMtQrg2cLN2.H4Uc1ZGEAoPs0wL4rxHd3V51lp0lCry', 4, 'AlIDAZ7W8soxc4HVxNgAtIqShyhHB6EF3B6SgdpZm2qE0zCf818qD2RmilkI', '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(292, 'بلال احمد محمد عبد القادر', '30001012518154', '$2y$10$mBAWM/2VL.P0kIJvnXBgv.lLDHaVUQB39IdwjK5lB/DR2JBqATyfO', 4, 'NEMvXaDGYxX952JM2JR0l1hAekpqKyKJYKkR601nmCYTsHNlQppuHMcsbZLy', '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(293, 'بيشوى باسم صدقى عزيز', '30001072500971', '$2y$10$H9dmnp0sA5tmDmR6FZZBjOtxHstr4YQJZriHTrWGF.I5OJNoxhY2O', 4, NULL, '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(294, 'بيشوى جمال حلمى ايوب', '29906012505211', '$2y$10$9OHUX14SOpNa2FjIxMZlmOr6lW/iXdkBHvKCw42pnPJPX8XWZn2Mq', 4, NULL, '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(295, 'تاوضروس جمال انور نمر', '29909242501397', '$2y$10$TUn5OAnpbu4T6vMDIEN7deMYHqs9KpE1eO5LwR8UedFdceijmBYpe', 4, 'YetjU4UbT97tvMCkAJ9OgKkJAA6B6lQbdeh274x1VykDBjPs36yq6HczEmPT', '2018-11-22 05:01:44', '2018-11-22 05:01:44'),
(296, 'جاكلين سلامه مرزوق بباوى', '29907042602285', '$2y$10$A7GkfABng7EnG51ioWllc.eEa5IzetZLflwDrG7fsipLsXmrC8nMy', 4, 's9IfbEvxpvKvs9aYkF6SGCRpTUS1VYFAa7Sd8sxsJewinTohynTH3vLk8cYg', '2018-11-22 05:01:45', '2018-11-22 05:01:45'),
(297, 'جرجس موسى نصر الله عطا الله', '29805062501372', '$2y$10$kXa3jLbsldTmaPev/prug.DhbQXB.PFvIkFTia0DXeifROKfh02VK', 4, NULL, '2018-11-22 05:01:45', '2018-11-22 05:01:45'),
(298, 'جورج علاء نبيل فهمى', '29907122500319', '$2y$10$1WlM52H41R5geHv6WVlN1erFq3PFbJ3TryLYuaSVbasvAVQYsvM9q', 4, 'GosveZ3wnOIpYgSoN8m3EiYnJH7zaw97VawRH2taxW2tSG56MwjUct7E6alI', '2018-11-22 05:01:45', '2018-11-22 05:01:45'),
(299, 'حازم اكرم عبد المطلب ابو المجد', '29904150200933', '$2y$10$FQVSHgbdcEd/h.8QxAM4ouRdal26WEojvAcPTf7rSdGAvC4aPGRMy', 4, NULL, '2018-11-22 05:01:45', '2018-11-22 05:01:45'),
(300, 'حسام احمد ثابت ابو رحاب', '29810162500393', '$2y$10$iXmbGNLJr.U/dWDiwLlU6.0iRkqiI3hTMTg5Vb5jIwTMxVTfC/.Me', 4, 'Uxc02yV2fa9B0ZpU6DTyvMUJEgKT1wrgF8TuHLIWR3lnxjo8aDxnglmJsZTl', '2018-11-22 05:01:45', '2018-11-22 05:01:45'),
(301, 'حسام الدين محمد عثمان بركات', '29906252500616', '$2y$10$Gj2cxm7iMdbKzTjytmu.Buha9Zk.H5/mFM2ab/3bSQoddaPCBMNva', 4, 'IM7sRKxU2mmngiWMA6hLyjQQWJsCJdqHwzCRmKXQcj0EzKSS6sK7qoGRdnul', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(302, 'حسام عبد الحكيم سعيد عرابي', '29905262701494', '$2y$10$jAfJfwgGEDu8gP7QZ0mXv.y/sHCyT19sF0OWxYGqRDyiDGsOcIs3a', 4, 'yc7fdsS6mfctvPu0EpvfAwZBGLr6Tfyj12CKVRYswz4jTQDQ1za72pz2fOGU', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(303, 'حسام محمود فتحى محمد', '29904102500437', '$2y$10$LzFS/SXGpFenwVj2ytfII..IfwQszmCdbEw2IzD8nvM4Scm5Ro6Wi', 4, 'pgXcKMXacMuLABBWPXLONBIp3rugVXMVFsYgH6zmqgML0QKrDBL1xosjyVHO', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(304, 'حسن عبد السميع احمد حسن', '29901252603731', '$2y$10$sRHW52WOiKDZY49.1sL.CeYUTAy/sJBGJ1ncex9ViORxrxlXoBenG', 4, 'h47wmf4V1JvC6dTFWrXHsr2AjCFIRLcSpczyunE4VGHIGQFhyBIObC1ScijA', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(305, 'حسين كمال محمد عبد العال', '29711252503318', '$2y$10$LTqK.mqjMtM0ORADFjtTIuNkghJiPyu3gOpavSH8DeNwtkgKj.A76', 4, '7QmxEibMXNht0eZbSCuC3vWNdKzFsDAVJ8gIJdlIOSezY0JMBkumVKGwsNh9', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(306, 'حماده البثيونى لطفى عبدالخالق', '29708132601455', '$2y$10$Y6gh8Layd9OEaDQaWUGGoejlFfpGw6MKK/HltF0zDBme9KZOd0Agm', 4, '0PwdO98dlxJvpDwa7JSzrmlp3LqdUAZsxrOb331u4Ximr5fB7TpG0vjYhz9P', '2018-11-22 05:01:46', '2018-11-22 05:01:46'),
(307, 'خالد على حسن خالد', '29907142502377', '$2y$10$4g3I/73KFtgp4okOanxUk.zu4iws3lMjDS8bHzD4mCMh6pd4Az3Du', 4, 'Ol1OJovvGyahCV9W1FvzsIQX8knoNt2Lg6OoXcbcPZUUSOgKgAqY3cY05lTO', '2018-11-22 05:01:47', '2018-11-22 05:01:47'),
(308, 'خلود رجاء عبد الحافظ هريدي', '30002012503366', '$2y$10$SrQVvuzuFNV.qQs.jrgQXOYZ7pw.qOw9Uc4jfFvys9i42PrVAkS5u', 4, 'TNAYaEjvGFpSLtIlvYrjlQwsNeOA48VGy9ZuEVy2qWW6jTX1fpEtQLsmjvuT', '2018-11-22 05:01:47', '2018-11-22 05:01:47'),
(309, 'دعاء محمود حسن طه', '29905032702645', '$2y$10$pBgLRh2EKewLT9I0WY1yh.eQkoYx0k9AJc9eFMuW4NEaWb4RChfou', 4, 'SRPFGpQSGGH0JtcQkZvlBtyoG64cRVG46nfNJOD3j9UtvrGdYvVtjYAAMX9b', '2018-11-22 05:01:47', '2018-11-22 05:01:47'),
(310, 'رشا حمزه احمد سيد', '29906262501262', '$2y$10$ZxYNuIc67f7L2suqSKU5JOs.rMBwhB2DoUQi32EzPrmpXZJHCIoey', 4, 'I6Rg2jd6kf3uILVAYNtAhvada1Ju9RJfJrmGOcZWlT4o8RLSEds10LiAiD7C', '2018-11-22 05:01:47', '2018-11-22 05:01:47'),
(311, 'رشدى زاهر عبد النبى منصور ضاهر', '29902182502378', '$2y$10$m1kl3R3o/jvpnKCYJZKLCOmBlugDUE.b7dctuS8LPo.BT3d/xMUUS', 4, 'vYx9qczW6HZeiIdbVa1toDEBgsgY4oZokJ1kpX2Jrdw9LAgSBR7n2N5333mp', '2018-11-22 05:01:47', '2018-11-22 05:01:47'),
(312, 'رنا عصام الدين محمد على', '29903172502201', '$2y$10$EDF0Ww/xbXM8lDlumw8nZOWnQO7TjNOpL.LbHvYGmkbGnf9tkZciG', 4, 'kuMXfxtoG81CEDQnD7aYlPW194vNLStyC3AYWIYOrJp6yNCkf74BvKAWdHaZ', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(313, 'زلفى جاد النزهى السيد', '29912052601906', '$2y$10$vTU33DAGrA9h7WN8AIR.7OGCWD8RoqnOlpUAHxtiKj/30nrB0.9lG', 4, 'OrEBZ0Bs0tZJa6bu8CRMNmVdoBERuMWOIIgBcz98IIFPCQffgaPvwsHhQ0iF', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(314, 'ساره اكرم انور حليم', '29810142500249', '$2y$10$LE3pE3OpMUBUty4eVGLcPOcb29Q8I/DYEG/H517twpqoZXXh1.y4e', 4, 'gpWnHICo9gW5N0LmclWmdEOYf6Omco8BscQpJMcOAy0dnYAIkwWpN3dbryJR', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(315, 'ساره غازى عبد العزيز عبد الحكيم', '29904012503569', '$2y$10$/HgB5fJLZRS9dLyx9IPbPeUKb0SJAAiM7asAFLkJlZZdvGNhtU.nq', 4, 'gRtDZt7rx7piJ0D3QlWx9t25ImMRpLoiEwvyTlAlMiWVW3vK6aqJoeyTOzxz', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(316, 'ساره ممدوح زين محمد', '29904012508242', '$2y$10$v7auxHTwCw6ybksCMe.25OxQ/4u1WAIRxL8whxWbhYzhql/v0yTlm', 4, 'RZj1XeMFumhSyjUImOPR3EzAx6WoOyoQuMEK5AmT13s76u3K1AzOI5nc2Nzl', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(317, 'ساره نصرت حكيم عطا الله', '29901012514383', '$2y$10$XEVjWPdy8heltMwVvST72Oyycq6oyRv3OkRJ.eYGqw14TRb4EZlBG', 4, 'Smshsr74WsLatnfvpt1uhmeC1n3IbxBG8IonWmo0oTKYOlIXXISv2LMDrKEU', '2018-11-22 05:01:48', '2018-11-22 05:01:48'),
(318, 'ساميه عبد النبى احمد محمد', '29711112702868', '$2y$10$LdqchnolbzNjnjXpnqIfTeH.yylMC.N1t/3cji1mi7CdSXAcbPtIG', 4, 'lFyHGkkqUlnyezQlKyTKuE8APWxZxt29O9VGpbuWuf822j35njj2WaU78CuF', '2018-11-22 05:01:49', '2018-11-22 05:01:49'),
(319, 'ساندى ماجد شاكر سعيد', '29909102502741', '$2y$10$0kjQGyUwbgbN9yzMSImrru6Tl4p0R1sFy9BcmWPtVdF7ol4McOrNe', 4, 'hLbjzlv1sUZme0RwvVFkKmWpPIJzib9rSFIIX6DdiuGqdmM4SsbGoArKUouP', '2018-11-22 05:01:49', '2018-11-22 05:01:49'),
(320, 'سحر صلاح احمد الديهى', '29903091501006', '$2y$10$yxgPp5behaZ5GEacr1lRm./4maggM9xbaqER0xy897tnMLfDoQEpi', 4, 'aCF8oUB0Wx4zdIqKh9wMOsyE2mE0V3gkPINTJ0blpQIu5evCxif653GbzM6W', '2018-11-22 05:01:49', '2018-11-22 05:01:49'),
(321, 'سلمى السيد سليمان محمد', '29904123100102', '$2y$10$It2TEuaS92QmEXddrlxKwuQX5uuGG9P1u4XMBfvBA.3CVU2Gs86UW', 4, 'fnNV9i09nrwvb1h2I85zQmk8ZiJxOI3TPuV00BB1YDPe53aFnL6LcufVBREE', '2018-11-22 05:01:49', '2018-11-22 05:01:49'),
(322, 'admin', 'alih@gmail.com', '$2y$10$gsNJdis7SpfaDR.D2jMtLeiOW1imx1xeIgDzzi5EBDEfFBOowv7ma', 1, 'OdtRZ1gMyylK9UQsOSj7LcGEg0YGXLh8QSO8aRbnmzl9Q0DJaJLWFu5yKHRd', NULL, NULL),
(323, 'Dr Ali Hussein', 'ali.h@gmail.com', '$2y$10$gsNJdis7SpfaDR.D2jMtLeiOW1imx1xeIgDzzi5EBDEfFBOowv7ma', 2, NULL, '2018-11-28 14:54:40', '2018-11-28 14:55:04'),
(324, 'نجلاء عبد الكريم السيد السيد', '29811252603422', '$2y$10$1nJnQlfRr0bRAptwO33p9eeL7GU6/W3R5S4NlByql8VTcAlXNjzAK', 4, NULL, '2018-11-29 08:41:50', '2018-11-29 08:41:50'),
(325, 'ندا جلال قاضي عمر', '29906192700149', '$2y$10$sB84re0u8yjMPIgHHrDDR.vAAIU5zvWCPmyRbT2Ax/t1RUBknBAje', 4, NULL, '2018-11-29 08:41:50', '2018-11-29 08:41:50'),
(326, 'نرمين هابيل عبد اللاه عبد الله', '29902272601146', '$2y$10$QyYzaSXOwy2EidxLlV1AIuzeBFGUXZ6DSE2RDJXnVYotJhDpkhBw2', 4, 'lDk6B0pBL0784M8QzGczQIs3oHU8EgatiRtQO2WYrE67dRNd52k6mP4QKkDS', '2018-11-29 08:41:51', '2018-11-29 08:41:51'),
(327, 'نور الهدى نيازى مصطفى نيازى', '29807072500946', '$2y$10$pQGEKoYPqDoSKfUmgnVMoOjeznxfBvp/knFnKwdfSfmiDsAGXPMN6', 4, NULL, '2018-11-29 08:41:51', '2018-11-29 08:41:51'),
(328, 'نورهان توفيق عبد العظيم توفيق', '29909102500722', '$2y$10$kUAOROngyQlGmTlhJm2wlOQFlPE6qDKdU5yBHKrTqp5oPwrBmY2Mu', 4, NULL, '2018-11-29 08:41:51', '2018-11-29 08:41:51'),
(329, 'هدير اسامه فرج صديق', '29909012507604', '$2y$10$duotujl87Rpys2.SdpCmOOfhRilFvEwUrBa.5JW6bzzPy3DHRrp4e', 4, NULL, '2018-11-29 08:41:51', '2018-11-29 08:41:51'),
(330, 'هشام محمد محمد خلاف', '29907192502599', '$2y$10$JzIFSGwG4PIFFXfTza.H7ea9WHZUpjF7xwC.HIY70cJ7h305irIau', 4, NULL, '2018-11-29 08:41:51', '2018-11-29 08:41:51'),
(331, 'هشام مصطفى حسن حسين', '29811122503418', '$2y$10$8Zfjqa8fq9owtOFcHIpcluQkCUaTMKA2HM9SiwHhSPyf/vzRv.a7K', 4, NULL, '2018-11-29 08:41:52', '2018-11-29 08:41:52'),
(332, 'همت محمد مفتى احمد', '29909092500621', '$2y$10$yJzptolytdI/VvThENbzB.0nEk6CGRpP3iruB.WJNa.XNwVRzvJQG', 4, NULL, '2018-11-29 08:41:52', '2018-11-29 08:41:52'),
(333, 'هيثم اسعد عز الدين عبد الراضى', '29902152602173', '$2y$10$3.eDKtdXnvcK/7TYffOT3ueOgLtaXYmhAUWCn91heUfM4R0xBGcXO', 4, '1nq06fAuZCn707RLmOEiLK7AhYRT7bYsttWWRI1BUlcZMBQFGDlHAevcsHqt', '2018-11-29 08:41:52', '2018-11-29 08:41:52');
INSERT INTO `users` (`id`, `name`, `email`, `password`, `role`, `remember_token`, `created_at`, `updated_at`) VALUES
(334, 'هيسم محمد ابو العز عبد السلام', '29809202606736', '$2y$10$4nahhQymdxFGoFN1pE//i.EfnYl9E7tDApXbsEYL2tV/bMXzCjCFW', 4, NULL, '2018-11-29 08:41:52', '2018-11-29 08:41:52'),
(335, 'وليد احمد مصطفى عطيه', '29803162501971', '$2y$10$txq8rRYKAWrg22iApUa//uqdTpF0WViSH/DQAx6hV44U6JCMBWdNW', 4, 'Eia5828U7NiyUY0vXFuAXjkOmfxwhWoo4ZYSjWgs8IecxqB9lyxdRDlUc44z', '2018-11-29 08:41:52', '2018-11-29 08:41:52'),
(336, 'وليد صلاح الدين جاحر عدلى', '29811072503179', '$2y$10$TLA4fNhUtqt/D3sPhl/PhO9yui1eHol5XFgYf8ZdEn6PJFYJmnBpy', 4, NULL, '2018-11-29 08:41:52', '2018-11-29 08:41:52'),
(337, 'وليد عبد الله زيدان عبيد', '29905042800254', '$2y$10$rk5WiAlhA4OQtAUNLad6BOBAdd96XmBwehpNG92B9P6D8zXK0JNvC', 4, 'SZ4zcHWcKIxdpux3b60GRvYXoObIQf8fA6YulDSr3IK3VbBWmCR2812AP8GN', '2018-11-29 08:41:53', '2018-11-29 08:41:53'),
(338, 'وليد ممدوح فتوح قاسم', '29907012507156', '$2y$10$4En8fxOFKnABJE32cyDH.uhfxfhAi4PLPlsZ3KQdoK23j7TKb1/Ce', 4, 'OWg9iUbDrKyNcARhqgCLw01OvCFDbSllcizNTCVTg0FAIFea07Wx2XD7ajWL', '2018-11-29 08:41:53', '2018-11-29 08:41:53'),
(339, 'يحى زكريا سيد محمد', '29809252500696', '$2y$10$sb2U4mkrHRJfT4x6DiiJxeCUzFb1lP04g.iLCbGrnLXuaAAmjpsVu', 4, '7uUz3X9RzpTjho5BLzmHHtzHW18JQw7tZKGHF32HUiW1lM8eYupEbtILlc3B', '2018-11-29 08:41:53', '2018-11-29 08:41:53'),
(340, 'يونس صلاح يونس عبد الوارث', '29904252500893', '$2y$10$OEkZcYdbEMbIE2rLfp0mQOqHfEwB3ztIOQjecAYn6bpjhozei6igm', 4, 'NXxtbEiECZ1KuBicXoafDzT7qZlAMmVm8KWGij9H8tjp4EW2oAVxzQzfEpLR', '2018-11-29 08:41:53', '2018-11-29 08:41:53'),
(341, 'عبد الرحمن خليفة', '29902072500737', '$2y$10$lu.cdhAhBa/WFGherhki/u/QUwgn5BSUOd5gYlT8HiwKgyXp/5Ffq', 4, 'yVlFIPXQy8xKFP9N0bSFqzQcd4KgzpjkcrkiOTjPreLngB3RVE7v7ufiNHhr', '2018-11-29 08:41:53', '2018-11-29 08:41:53'),
(342, 'اسلام محمد امير محمد', '29811122601479', '$2y$10$vTzFYsZ078neNdQxGYrMIO2..3OWS/d3xDBwXbqJEAImZqNb.SjUO', 4, 'ECclpNbLvBk6FxkXNYC4SNoiSUdnuTYeWw4WvXnAOH4dXM9in0ILsVF6SyTK', '2018-11-29 08:41:54', '2018-11-29 08:41:54'),
(343, 'احمد بخيت محمد بخيت', '29806122500211', '$2y$10$RI1Jtx7dSsNOKfhG9g3.I.87t73KNuNmE.3Fa8LL5Noe78KwMGNUG', 4, 'VHnDpqULRKfpybYh9Lqbo79vQVgLyyAnY5hLwI3nyo2E9oZBfkZe4jRah7dV', '2018-12-03 11:53:34', '2018-12-03 11:53:34'),
(344, 'احمد شريف احمد حسين', '29702252502451', '$2y$10$iNTQUXpJKSgpqM7juj1u4eCTt.LkBSfzEbHHq9oqH6HG4rk4no9MC', 4, NULL, '2018-12-03 11:53:35', '2018-12-03 11:53:35'),
(345, 'احمد عصام الدين يونس احمد', '29612102504491', '$2y$10$6MB/3u5Si3CvM1dXl0Gj7Om.v.HAP4AhlrNoIGx4E2OhUnS93K/7a', 4, '66Z0ws8lrcFeYFzBPXQ07QjNyNg1esaoY6ngSl3Bt2fbivYu93R6zMOcGE9f', '2018-12-03 11:53:35', '2018-12-03 11:53:35'),
(346, 'احمد محمد حسين محمد', '29701142500211', '$2y$10$P/YdEvjHlDfSxlZLK/Lunev4PAq/Cz3PeGEEEcGwu.oy7kiPCDWqK', 4, NULL, '2018-12-03 11:53:35', '2018-12-03 11:53:35'),
(347, 'احمد محمد عبد السلام عمر', '29801202504771', '$2y$10$OE7NqSlwysjEQmhUl.JEnuWmVc6kxN3hmOAyjU.dnVxuHj6ZpkIwi', 4, 'ZI04J6dY7KrAdtbmMIg9BeVWIHHb93fXU3iSx5emx7POUjXzOKktLw8jfKR3', '2018-12-03 11:53:35', '2018-12-03 11:53:35'),
(348, 'اسلام اسماعيل الصادق اسماعيل', '29808022700479', '$2y$10$Dp4TM.iwOEjqMew/73DYweh8RBIpqMFVBqZJnsZ0r7lDg.57QLNFm', 4, 'S4SyaHxGSyElw6iFBAY9vMoBnNCNDln4LOGUhMU5gmtBNd2uCBom9ksdMEkC', '2018-12-03 11:53:35', '2018-12-03 11:53:35'),
(349, 'ايرينى موسى رزق الله بشاي', '29703012501781', '$2y$10$kBtGQ2dfEGX4N0A.absljOVWMUHO4wo1kKngJMIdM8IJq510WfdAG', 4, NULL, '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(350, 'حسام حسن فاروق حسن', '29803252501732', '$2y$10$v..ViCIjYb7vpibx014CiOGYhcT3utwFF8qVcMKAIZQA2T21K6iWa', 4, NULL, '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(351, 'ساره انور حنا شلبى', '29801272500748', '$2y$10$C/FrialNL/TgRFIuACL34OT6W.zfwwQws.3fJf6I/p84E/8se7Pdm', 4, NULL, '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(352, 'سليمان احمد محمد على', '29803162502535', '$2y$10$VbCagJAiKYR/hnMeU6apGu3EuNDWZktvjRrQjhwBbXCM2OhWlLqGK', 4, 'EwBn506CZlIfLen567XLTsQuQwqAElSSbY2Yc81pLM8x12xTzwdm9quDsNbd', '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(353, 'صفيه ابراهيم ابو ضيف عبد اللاه', '29604232600405', '$2y$10$oiSMmc0mNtquC6iRgMweNOrqVkcX7/cLMjvJ2Zq9qhC40kWQUkAjC', 4, '86Z8JRKmCoQ369GZdAAGOeweQjkeUFbvGhqSF6ltSOA9qbmUWWDy1t9W18T2', '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(354, 'صفيه خالد سيد احمد', '29807162502387', '$2y$10$J6KJ.ChjBL9GzGNfpuQ0.ONtR6ftsTDRXD10FGjYPxqSW/UzTP5gq', 4, 'N9KRt1EswDDgPC7Mr04rMyqFM1TjXSSBvIIR21q9a6fMEWmvF2fXaOZzhVcJ', '2018-12-03 11:53:36', '2018-12-03 11:53:36'),
(355, 'عبد الله محمد طلعت محمد', '29702102502039', '$2y$10$7q2ZJuBfWaV19mnxstRdbuoFl9f4w9FLDQV26kPTdrfyjaksnf2fu', 4, NULL, '2018-12-03 11:53:37', '2018-12-03 11:53:37'),
(356, 'محمد اشرف فرج صالح', '29805292500171', '$2y$10$.w7P7G.KqH/rBocgngRLYesyX20cFJLYHcDS4ti3YDviBbJS063w6', 4, NULL, '2018-12-03 11:53:37', '2018-12-03 11:53:37'),
(357, 'محمد راضي عبد القادر محمد', '29809252600631', '$2y$10$ycFTHQKTZOJ5AbU/m2vXbOSSDNPOv/7Ty.HMOtOCJpqr7z.ZEG6rS', 4, '8cBVXfHpnCYMvGwHwHDgzmvxDHJzllBn4ea9HHfmITGtUA7BPAZHHyTf0BZC', '2018-12-03 11:53:37', '2018-12-03 11:53:37'),
(358, 'محمد علاء مصطفى محمد', '29904012601137', '$2y$10$OeVVXMvMkemotVZsNquxhezN6JTlWerC7lV3.ZMVal1G6qMaJuFfe', 4, 'R0yZ5l90rW9y4dUZbkPtHXxqcHnqz4m96YJbVV9a6TyCDs0riYQdeDjZS4vs', '2018-12-03 11:53:37', '2018-12-03 11:53:37'),
(359, 'محمد على عاشور على', '29700062500751', '$2y$10$G0dF.GtVrwDdlqR2eP09x.PG36acxMJpxRFUkOMcSkzIQnBomhUSu', 4, NULL, '2018-12-03 11:53:37', '2018-12-03 11:53:37'),
(360, 'محمد محمد سيد على', '29812212501356', '$2y$10$zFn6BowTCzOc4MxukcMw4urJy6bvv1KBOUBk9hBkH/klxMiS.s7Du', 4, NULL, '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(361, 'محمد محمود حلمى شحاته', '29703292501099', '$2y$10$PGcRG8o9TcZt6m4jRKi2Qu1LzGyirBTyse3JEA3sdkmIlgQKkyCVq', 4, 'yUvPoGnSSNHEUpWx7uYTVyi2C2OeR4aJjY2wsUI5tx3AlAUCFkhxKeSKAoHo', '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(362, 'محمد مصطفى محمود محمد', '29611032504254', '$2y$10$tIKzDl6zeDPmt12yLTdmpu.0wk903P./jz9O8Yq0bctuKlHOjrqEu', 4, '1ZmldBvogeeBJhFFiNGY78ElIdXkTFnmUHkzGrm7NcIXD64EwQBp73YTpQIt', '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(363, 'محمود رمضان احمد محمد', '29802142503253', '$2y$10$b66vBQe.EF/yligzZO1NY.B3igjbuOe.vkarADK2/C8dc49ZpzwL.', 4, 'y2SlbBAEpxj8Ls6g10YKkmCWLT4Lsjepe94FzXKfbAlGPgLXjgawOBsW9kZt', '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(364, 'محمود عاطف محمد علاء الدين', '29511272500138', '$2y$10$ZD7U6NiZDLTZoTN1xzBMJuFLGr/X9mLv90CIq.NlGbIraUZc8RRzy', 4, 'H2ZTLiHdvCDlQ0wLeyCXVADuoO0L1a3HeYuXJuiV2afAcCfNl0BdLSwoP6Ge', '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(365, 'محمود عمران قناوى محمد', '29707282800239', '$2y$10$dKF4e/Ajsu9bfUrAEF62r.hg0np2n0OebhOmRyRBQQ3sw.FIqrBJK', 4, 'cGLHbhS9xCWvUi0p59zQ7xwN8FIOmA7fHCFnfipOfCKaICkNDk1KZ00r9Bwi', '2018-12-03 11:53:38', '2018-12-03 11:53:38'),
(366, 'محمود مصطفى شفيق رمضان', '29706012505174', '$2y$10$FAWDfyOXSuMKMxorLKTUHeRjB2GhzAB7Pl0rqLLlTudeZnqlpVyMe', 4, 'AmNkatRbfLgylw77II9E3CwFUPxktC70EAyEVnKJmCS3CrS0tFoUedVDKMKZ', '2018-12-03 11:53:39', '2018-12-03 11:53:39'),
(367, 'مصطفى خلف محمد خلف', '29705132501834', '$2y$10$uk9PnAZPMEE3L6P.1Cw9E.T6wIlDSrTtf9gTQAfBDf3TwHy3e3Z4C', 4, 'jXAtt8sGK0PSpXEOn8ssqmUP6r3wGaElBAaEUQWzktNB842tneqQGEFwlybs', '2018-12-03 11:53:39', '2018-12-03 11:53:39'),
(368, 'مصطفى عبد الحكيم مصطفى عسران', '29801012514176', '$2y$10$DkyFZHKD2.ralrjLf8l7tuEN5uz7Gg334tanw12MY9gZHHmUhGNNS', 4, NULL, '2018-12-03 11:53:39', '2018-12-03 11:53:39'),
(369, 'مينا ميلاد عشم جرجس ابراهيم', '29709010207434', '$2y$10$ViflAAoZ6DQEpa8nOcm.D.QcPGp7KTsOBAKkRuMMHVZj0JJGDC/ly', 4, 'QSKSAef5yxkoCOYK4Zb1qtphfSGgIADaN6VI6YYOmnCtDifqhxOeR8vjvd1h', '2018-12-03 11:53:39', '2018-12-03 11:53:39'),
(370, 'رومانى عاطف سعيد اسكندس', '29705012506492', '$2y$10$vp4euX3s8ziDOBAY.iFxq.oWULinISM9BkmtWGclwXbgzCaW1fM.K', 4, '3qTyPjlbkYOo36fHDDiXYLjjI3q9ly9tXiVtuY8vVyBzDwSuPp641caKo4HC', '2018-12-03 11:53:39', '2018-12-03 11:53:39'),
(371, 'احمد سعد عبد العزيز احمد', '29703012500734', '$2y$10$esY.A/n1ag/OrsEA9EYcMOICzZ.qC4C6UHCpqbE458dEjZE6xeq4m', 4, NULL, '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(372, 'خالد محمد انور ثابت', '29705252500378', '$2y$10$EmM/bMNPhtNL7GQBqfXBxeu1zV.hEKnfNy3ENSXyPO0fhpi.qPCoO', 4, NULL, '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(373, 'رامى صبرى كامل عطا', '29610142500576', '$2y$10$x42JlNzKYqHnDOuGFh1rO.8WzYjbLEId6kRdW9vSGsvqIemqiIbDm', 4, NULL, '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(374, 'عماد ماهر عبد الحميد عبد الرحيم', '29701012628398', '$2y$10$KRs1rzdoIvidHlOc95ftqOBni5e0nvPSMZh3ngPxauOYwb9wrlGxa', 4, NULL, '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(375, 'محمود السيد عبد الرحمن على', '29706262601713', '$2y$10$XBMYEV4yGKKEyiCFxAnRzesALE6XNP4NO6GJl/Iw5P5zPux9JfDxK', 4, 'BPJxmtsBGw4CADKrg8W20C0lP8m2o3qVF27jSma14j2tjPwgu0VDjmsXm0nX', '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(376, 'ريم على موسى عبد اللطيف', '29712062701021', '$2y$10$gNvasYHQ3AInHSveSGfWnej28WTA6ghSNOgmm.XO4.fqXF0Yv31ou', 4, 'csPbfLfk1AtQ6v4MfsSOExjtkSdnAYQBiVXnQLgrpN3v7PIxI6wwmi1OlrMk', '2018-12-03 12:01:46', '2018-12-03 12:01:46'),
(377, 'عمر محمد احمد عامر', '29608202600651', '$2y$10$twFcohNPi1HRQ5iZXffHF.a4HYJEr9BdTDvFt26MDEtd21HfeMFCS', 4, NULL, '2018-12-03 12:01:47', '2018-12-03 12:01:47'),
(378, 'عبد الرحمن احمد خلف محمود', '29511282600114', '$2y$10$yC/9QhINBowhAi5hOAaSnODr35QHVNxT8xx.A8Cp6l02IOtSs1pSy', 4, '4kHDgTjgzrDVDRnjA3TDoL5MwG06nRtvkjcuT3Myg3WcAWMMNZqecscriL4m', '2018-12-03 12:01:47', '2018-12-03 12:01:47'),
(379, 'ابراهيم أيمن مفلاح دمرداش', '29905308800714', '$2y$10$4VAU0UbcASpRSSLIl9EEdekoqMbn8SN9z4wGGiE2Qt897ILDvE2Z2', 4, 'DkUC8Y7JhENycZwyXhwxgDvmW3AwIWsk3owxuRH8t58uOYQdJXa97iu5fFPI', '2018-12-03 12:23:47', '2018-12-03 12:23:47'),
(380, 'سماح عصام صلاح سعد', '29904012508161', '$2y$10$b8eoAFXj5bPSDRfyWL89T.zGyJdk3uq.Dc3EGcoZ8up49C3Ozigb.', 4, 'UyMdI55DIsbp5jls0bJE4lnhJDhQLePj80OWbz2TDfbNmnBSI4HEzI7Rsdft', '2018-12-03 12:23:47', '2018-12-03 12:23:47'),
(381, 'سهيله خالد سيد محمود', '29902152500087', '$2y$10$mHjGyPjA4KacD5LWq9X8du.5YDi0DBSLtUz6W2QJ1OMG.9QU87JES', 4, 'SZhrQg9Jd6tbs1h2tMDgmZqHoKiLdHkOWcsfBYzz0CfZPnMnK2JiijfswvLL', '2018-12-03 12:23:47', '2018-12-03 12:23:47'),
(382, 'سهيله عز العرب شمس الدين حفنى', '29801182700845', '$2y$10$aw4.tpHpn/grl2gNKg48euuPnlHcGOQsGVI5JNlDyfYtgtUs0NByK', 4, NULL, '2018-12-03 12:23:48', '2018-12-03 12:23:48'),
(383, 'شذي أحمد امام احمد', '29808062500383', '$2y$10$8BehvcGU5jFOFPg4Yi4/h.ipZNd6cM92wn49F5/4NzB8yTIBbwFQG', 4, 'Rat5ItYFSXSIXAdlZHglGNmjydkCZdx0fl1EmlkXplns9aSbxBdfWmeevfMK', '2018-12-03 12:23:48', '2018-12-03 12:23:48'),
(384, 'شيماء على عبدالحميد خميس', '29902132501745', '$2y$10$c4QRhe5MEDloCx.7vjXc/OCGkZ62FxDze9OGbFMErdbIzhBFis5.q', 4, NULL, '2018-12-03 12:23:48', '2018-12-03 12:23:48'),
(385, 'شيماء كمال جمعه خليفه', '29907102502048', '$2y$10$Fb9DOIBBra/VSZgr.v9vqe9dJS20T7a6vJwPaLFMTSz6cQPo1F2Iu', 4, 'vzfFJFkuDaOUx2yaZlo5Oo5f2Ci1AVYkiqMwC3y5om9R846G0QOu3MILQMge', '2018-12-03 12:23:48', '2018-12-03 12:23:48'),
(386, 'صلاح محمد محمد منصور', '29903081601495', '$2y$10$EAm5WrvcN1Z0jK0Fcc0SgOm0ALkxvDVYSWOheQTwKo6effnN1SEtm', 4, 'azA4OPWXOnSQ6UCYJYepCX56vp7avhWPgAookVdZMOtzB2KOfxz0znCA24Sc', '2018-12-03 12:23:48', '2018-12-03 12:23:48'),
(387, 'ضحى مجدى مصطفى محمود', '29903262500801', '$2y$10$9U7gCUQdzC4ZyX20wmxjrO/rs3uk3sZ/341/AKW8HO4HQ9kLGJoHK', 4, NULL, '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(388, 'عبد الرحمن احمد عبد الرحمن قاسم', '29907152503959', '$2y$10$4KdkAixNzofmHOFTnN8GBOFAhPJ6sSQWaR7RJ9OFSVSG3GKqK/s9u', 4, NULL, '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(389, 'عبد الله محمود الخضيرى احمد', '29908292601272', '$2y$10$x29StS7DSPhx8EJ80JV8O.Kc2JEyCV6GK3Lz/kb./3eFMVWAES6r.', 4, 'qJDDd4Z6oi0jk6zliRWknywwYw7SU4oqImvrErliquTxHKy5ZW6fgcgWIvZ7', '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(390, 'عبد الناصر احمد عبد المحسن', '29710062700536', '$2y$10$WsOc/PV9oHEt9TsGz34xSeB8e9VoMMHzl5Zg0mpiJMMqqPXTybVgi', 4, NULL, '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(391, 'على محمد الرزق عبيد على', '29905012500035', '$2y$10$4QVgQ.E2VOL1FfuPl82IPuekno5jHBSMGBHj5KEZilo3ZQgjZfqRe', 4, 'TLi8sTKnRF0YsPRhyt1N7N630lGetkgPuOX7LkfrtX00L2mKwenqwTYkGhU0', '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(392, 'على محمد عبد العزيز على', '29903092501433', '$2y$10$8fYsD7Z24aPhpbzaXGkG2OjHMLWAXNJtSehHwurJsSamJaE9MW5WS', 4, 'unKNYYmSXIDYsAhmY0XH1Ws1Pocpbd4jMrjHuaNNsBog1sTKtQ6TL9R26ESp', '2018-12-03 12:23:49', '2018-12-03 12:23:49'),
(393, 'على محمود عبد العليم محمد', '29901012523056', '$2y$10$PY3TgMkmXMDKRzBvKetoLe1SQT4Eps4wqpNSXH4QuVG3kS6IKlt76', 4, 'QOznREwC0nFLkxJhWZjl5zU6wSr9ELbBZGzg4UA8OdrPFqJ0jLaaubByEj3Q', '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(394, 'على ممدوح عبد الناصر يونس', '29803012508098', '$2y$10$vO.oMaOsgii6H.JIn6inZOyN6ifN.tNFlBU/yvvB2eoJBiGZ2zJ56', 4, NULL, '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(395, 'عمادالدين ماهر عبدالنعيم احمد', '29902082700393', '$2y$10$tIiHlFgIMafIKGHs1KNwWu0wmQtEnfdGdgr6vI3zueWHNejCk5nZK', 4, 'ovkWKXtWtF9oL39c9LaAJm7yLHTsp467sGCUIEeE4VYR0c2ykX0wcYFp162o', '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(396, 'عمر جمال محمد احمد', '29910012509656', '$2y$10$CeFCDu7gz8FHFsxbUI9cVOE1jIsyL912bZpcfvC.sNKfBbsrtN5Zi', 4, 'rnMHBBdFdnBHzpl81L5862kuknJkBbMDFaNqXmwguLiZyebU5yeVvSB42Q2S', '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(397, 'عمر فتحى صلاح محمد', '29902102501732', '$2y$10$lwLGe6DAQSrThOtDsYTFAu5.Jqth78/tmtEUSYxfxwaTyhKZgEsoy', 4, NULL, '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(398, 'عمر محمد حامد عبدالسلام قطب', '29707071500131', '$2y$10$TN98UBi2kNugu6z1hc2bLepEBc0Rp/aNVdLhxzLN/DkwB.uahdSYm', 4, 'vtL31ZmnSBP11OogMaQTpgTvo5MQt2uI3D6uxPyyPDXj2VTrIXPsbcC1lmA1', '2018-12-03 12:23:50', '2018-12-03 12:23:50'),
(399, 'عمرو رجب نسيم على', '29910012712699', '$2y$10$u/O0gGfptulo1zBmkwhIQOlg.tZ/NVXZ.wE.VeyS5WDK9rEP8S59O', 4, 'UjkNspd02sFObpdIvVm3cuoHuBc76Dcl2S8kRu14m7FnrPNL7b7EYpmunedn', '2018-12-03 12:23:51', '2018-12-03 12:23:51'),
(400, 'عمرو عبد الفتاح احمد عبد الله', '29909212601974', '$2y$10$p/3S9Nz1lU3yNSVRBuLgl.eRzEOBzkircd.krED3oqcqcg815Tpcq', 4, 'do5oG2KQ0eh4et9uLmaU53YJuGphXO1lCMa8s2cJCUcdnBu45fwlruRKnRjE', '2018-12-03 12:23:51', '2018-12-03 12:23:51'),
(401, 'فاطمه الزهراء حامد عبد الظاهر ', '29902182501509', '$2y$10$5E1Dw9ot3EFiS.nSTvtWPuN.UdzH3qAGs7Mxfu578Qw6ROGkkLygS', 4, 'RdfFcIKUdYFf0YixlUAf2QLAB2ukbI0KiXpkilEh4xItaQh3WuAUCmQlrGBy', '2018-12-03 12:23:51', '2018-12-03 12:23:51'),
(402, 'فاطمه الزهراء يحيى عبد الحميد احمد', '29905102503408', '$2y$10$/hfEydEsaix56xjtJevo5ekEaYNy.qmQb25yMxU2VTkFx2Nb9G1sO', 4, 'tA5ruu2s73yxK1ZgLnnPQ0RKsSFBu8PlTUXMR05IVYf5ZREaYOXmrxv7sw5L', '2018-12-03 12:23:51', '2018-12-03 12:23:51'),
(403, 'فهد حسين عبد المعطى صابر', '29712172501159', '$2y$10$0V6zlv2TVVKeMhPhQQe7aeuodA9P8K3f5IMChtaisWahqtL.POR8G', 4, 'HB7Ny9ZXy04ammFOcOttkVFWiHTylhVL4AC4YEipyt2i9R4NL16AHgiYYzSk', '2018-12-03 12:23:51', '2018-12-03 12:23:51'),
(404, 'كريمان رفعت سعد عبد الودود‏', '29808082502927', '$2y$10$7MYl0.XB28aHoBptV2gxVesRfqZOmt8MszhU7QTwVsXq1BK3wqsru', 4, NULL, '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(405, 'كيرلس مشيل شفيق رزق', '29811012512977', '$2y$10$c2c1VbhaInmZzYbhtL5YcOIOJVmbsIVZu74mJWMBcyhV2/UVozPpS', 4, 'eCxmoIVASFTs09Z5chsZAFrpYrgtTSfCxjDmRX3HWBtwmU1tpIeoaIn3LX7m', '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(406, 'لمياء ممدوح سيد حسين', '29808152503527', '$2y$10$rH3FXTd0w2dwHU07Z.xnV.qyZcYGOC4y44qlnTXOKdjbNa6Qxih1.', 4, 'lxHMGCsCp9iZ9q3BHeQHN3d346Pm6bTVaJNypnKM270ipgJmWJgGp1i3DuUZ', '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(407, 'لوتشيا مخلص عياد بولس', '29906152800329', '$2y$10$TLbJiH14ff2rwAq9zgVzUOTDny4XLfh7V1GFX6A6208.9vjWzPpee', 4, NULL, '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(408, 'مارتينا سامح بخيت جرجس', '29809172501829', '$2y$10$SfavSURWILAxKo3NU82./.DrHG43p41/tCcTXL/5Z7d8caiLIQRSK', 4, 'wWVYPB6mu2XYxkHPpmPnwh3dp1AtQ3UN8fGRI016SNjxG7gWcdxdghz5jwoy', '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(409, 'مايكل اشرف سعد رزق الله', '29903042500932', '$2y$10$2QEJ6pnpxiFo.xyXXkR4.O8rkS3P2XOO6mH8SQNyWOkH1.PCt3WmC', 4, '5QQ0zONMIICmrN69XPAw6Sdry3mE6xbS0o3JBaazBsWQZoxAWMkAB6r0q63H', '2018-12-03 12:23:52', '2018-12-03 12:23:52'),
(410, 'محمد ابراهيم محمد ابراهيم بتاو', '29811012606998', '$2y$10$l6y61ygC/5f9BFFd91/iO.a/evI/7JaIC6w.tScjUTegNyW28/80m', 4, 'fHoUOIor4dUbahvsd2AeMzMeLq7ikUsuux22l7ITiXSdIBAflfWOJQPsa1wc', '2018-12-03 12:23:53', '2018-12-03 12:23:53'),
(411, 'محمد احمد طه سيد', '29901012502253', '$2y$10$X7jQ5p4fdEWSHVrnLO2nNugdWIUHdLmoRzIZrkXAZXhHI1TLoEphq', 4, '6BpkUU0k00HXMIgImu6XClWxUZGc3JrwztVm9cR03Fx3sVe1VkOMfnQNxJQ6', '2018-12-03 12:23:53', '2018-12-03 12:23:53'),
(412, 'محمد احمد محمد ابو اليسر', '29902092600176', '$2y$10$O4aHyD.ZisuiTU1Fc8bfv.6c8UNg8EIEwj5Y9TT61ZCdGmDmVhDxm', 4, '2iyZtVOrIbNXByf8PGvFbQMvS4Ao8wUfkVFkPvRxVv26BCXUV6frCZb1lsiV', '2018-12-03 12:23:53', '2018-12-03 12:23:53'),
(413, 'محمد احمد محمد محمد', '29904092600373', '$2y$10$Zt6SZuNuK6iWPP2VCsVEjOe3GXKOE3uKfAVIhJPlEAbXUDz4esJQ6', 4, 'agzsVii3HCxbwEXz5VIDSWA3tYEBFOv3ngu1HeSPKzmCWGM3vbbalU9XXuAg', '2018-12-03 12:23:53', '2018-12-03 12:23:53'),
(414, 'محمد حسن محمد عبد الرازق', '29804302500071', '$2y$10$swAx0Djz4kmYc0OtC9ib/OoqGgHH3DkIr7YOejCUcQexq0xnJEOmC', 4, 'gU5ybRYVl5pEEslRwNfeN67fvNhuoucE0PdYuJez92r2JzbKQMYHRdanZ1Xi', '2018-12-03 12:23:53', '2018-12-03 12:23:53'),
(415, 'محمد رفعت عبد التواب محمد', '29812012508194', '$2y$10$rm.YPmlGkhS9dAnzgHotoeWLh6ZZvvruxzKdBotKm3ayvo3B5PEb2', 4, NULL, '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(416, 'محمد سيد عبد الصبور محمود', '29908212501698', '$2y$10$MZStHzWwgIB1cBJg/CnaeulGVJn/2NF0P4jJaII2LPBoua522MZfa', 4, 'BoE59IgBivDRKkEMZDmUKtnevHlcakDw4Y65lcTeTBbKIDDxISg11uxW4vuj', '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(417, 'محمد صلاح مصطفى حسانين', '29806012508836', '$2y$10$TGyJvgHFuuDO95daBhK5T.7oOyHpOuKXaP.Hy62heF10eIlIMeLXK', 4, 'KITNRqMFaGO0GvEDPbGd6mk7EosvqVTIQPENRBTA8R18Klv34xyKIaRRl2NP', '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(418, 'محمد عبد الباسط احمد محمد', '29804202502491', '$2y$10$O9.XKPEh9pQ1QW64bCvMRuGw/ny8IOGrd1nobSxY1s576FP7fsn9S', 4, 'Orsr04tNbEnjj5FDJ42x1kxMzVJHv7y2Zf5k7MklqLbpAr6G4sUnXZqvApvE', '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(419, 'محمد عبدالعال جادالرب داود', '29906092701059', '$2y$10$VqQDDI0Fw/cQBWOPwvgBquSc9chG6E4OrnBmpp7SCahYAqHsYifzu', 4, 'ekIeYTRw1CVJaiIrVcNusIQeNEhUVevPuHmWrtrm4bzzxq9GMmOUaBmJXtS8', '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(420, 'محمد محمود عبد الواحد عبد اللطيف', '29901212600594', '$2y$10$QTRfEw5JWw541xNu14.qBewsHldgANvL0w21UbbBxYiFUJV503UPu', 4, 'iI3Go6s1V8v7fUzB0zTQQe4cr2mq0obh9TujyyoxZBHCpbIVieofnYoNUKLr', '2018-12-03 12:23:54', '2018-12-03 12:23:54'),
(421, 'محمد محمود عبدالمقصود محمود', '29804161402355', '$2y$10$Gcb.Z1YRCx5x60AEkWf4aO496Fb79cF7DL9DTCa7Nq0IUE88OTK7S', 4, NULL, '2018-12-03 12:23:55', '2018-12-03 12:23:55'),
(422, 'محمد مصطفى سعد محمد', '29711042502076', '$2y$10$QnOFDfcPCHtosy0z.3t0sepny/OIyg1oU68foPxvt3KyAWfjmKuyq', 4, 'SqGqDZhaKBJoPJcJx9jVgnHXYsZmIsFevb6JRS7FIBB7HsAimq0FGCfL1a69', '2018-12-03 12:23:55', '2018-12-03 12:23:55'),
(423, 'محمد مصطفى محمد حسين', '29904011822296', '$2y$10$tuPxhn6wRwucHcQXjLOiu.f3J6hHVzoBBv4XJN.RYn1Wr2QGwhgyi', 4, 'z7NMjjRCBUoApRSuz50XSazfpJ7eFIT0VDez9KUHr6rJ2dqGHaREKddlwAeH', '2018-12-03 12:23:55', '2018-12-03 12:23:55'),
(424, 'محمد مؤمن عبد الله احمد', '29901092500035', '$2y$10$vIM5SkubW5mNBIqZ0Aw4BOB5ow7pqCJpBA0NVhaMG4ifo.U3kXOJO', 4, 'f1YmAwElGcrqLgcSp2UDk7kZL9telruFBe1ffKJX0cmlo9lKCYuULHyMMRrc', '2018-12-03 12:23:55', '2018-12-03 12:23:55'),
(425, 'محمد ياسر محمد عبد العزيز', '29907252500639', '$2y$10$RRHI4qzGgQPoNPHMJ7VeMu/8I6RSNL5UPyMNOQ2qxTPFfQjbzmi6O', 4, NULL, '2018-12-03 12:23:55', '2018-12-03 12:23:55'),
(426, 'محمود احمد عبد الرحمن محمد', '29801212501656', '$2y$10$GAWUbjtfo/22YVqDMeOWku5IC5S6t0FmVW2mu/kf.hXA6Bx0I/6lS', 4, 'idcTdEZCJshYVPG5fePBvNckLoVbILi8t0FqNzkp4jo6oiqqBsn0pqvqJr3C', '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(427, 'محمود احمد عبد الساتر حسنين', '29810142500192', '$2y$10$xIh3k5MICN.yrEKHboCg1.ddf.H9ehC73UtRoKuQdkD2khPErP5Vy', 4, 'suNc2kjAu82XLOyxviXjgGPM3UiVcntcu58nUWxUQBYClVpjKqbt5vAVi16Z', '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(428, 'محمود خالد محمد السيد', '29810202701133', '$2y$10$DMJZ0hOFpd7OYL5E0ZPRAeQo48BYSVXiAVj6xEZYZwrKLYOTSDQ8W', 4, NULL, '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(429, 'محمود رفعت محمود محمد', '29810012507055', '$2y$10$jrNK5sXWslkB2f7p0CCwFO/q.jEFqoIV7qZzF6rXMD5ANefYFlPCe', 4, NULL, '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(430, 'محمود سمير سيد مصطفى', '29811072502091', '$2y$10$9otYlB2Kxyt6TslUG6siI./QvillRWabTx3ISobBfsK53wOoWWDg6', 4, NULL, '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(431, 'محمود عبد الغفار ابو قفه توفيق', '29805072500439', '$2y$10$KtA6YB91fxJD8mleJs0B0uWLpovnFzOIexLxrvsrziZ8Wto5MPfTC', 4, 'nmDqD9x44hBadpRpfnbwVp6kVl6kKFoAmrqHpDPq4A2IOgrWvuioVZTGTpVV', '2018-12-03 12:23:56', '2018-12-03 12:23:56'),
(432, 'محمود محمد الامين عبد المجيد ', '29909252500232', '$2y$10$j1AJ08FMeoHT5MHnsBRSyOB/lV6PGLzj3JG348g2N0ZhGE68uXQPe', 4, NULL, '2018-12-03 12:23:57', '2018-12-03 12:23:57'),
(433, 'مصطفى انور محمد قناوى', '29901052501691', '$2y$10$KPaMR81z1c63Ec.Px4eYN.d3NDs0O/vSAFosFOViTk34CyYKCOi/C', 4, '5DAAxgjoNYpXk2qo3AKX5dXXiBMSRHUB4Pwh9A7J1tksKYeXvO8vXLU1VYvu', '2018-12-03 12:23:57', '2018-12-03 12:23:57'),
(434, 'مصطفى جمال عبد الوهاب عياط', '29901142502433', '$2y$10$Cjq/T5YmOWjVOSux.ZqbAOG4tbgiCGiL5/KG71xhaCDhfBUZ0GVAa', 4, 'tRZBLh7R3QXHqPVbfL33Fnr2fEPe3pd6PYPq3PkuKG5etgR6yADBnxWy6rH9', '2018-12-03 12:23:57', '2018-12-03 12:23:57'),
(435, 'مصطفى عبد الناصر حربى احمد', '29808042501731', '$2y$10$7ndBsa6GRT2PgBbl/WicVu198z.cstFNmuYM4pAjxeLAbhNx9Bf06', 4, 'TNecZSnJNlrv5AtyWgeRHH8FEE5LbZgKjJj4f4WyhMwvQQvZQ0ABaFmUpO0w', '2018-12-03 12:23:57', '2018-12-03 12:23:57'),
(436, 'مصطفى على رشوان على', '29901052604075', '$2y$10$bjJJsEGGWtMtWJW8Pks7ZOAjsumfSHADmyDoNwmAD02XLKjWtIQ6S', 4, 'zUm93HAE7gzh8ZObeDDvna98U7hSl4jNZOnbLTzPinlnWOv8N1yR1PHGeyE1', '2018-12-03 12:23:57', '2018-12-03 12:23:57'),
(437, 'مصطفى عمار علي', '29801012500736', '$2y$10$VaUx6td8ZrIHFRPLnvbam.ZFoyME2I8Gn8xxBv.OCghy56rIlsoGa', 4, NULL, '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(438, 'مصطفى محمد مصطفى محمد', '29904032502631', '$2y$10$EOKQgadK9CzWaHyh11L5N.hh5/l0oP6v4JKq2WZwJAeJFXODCsequ', 4, NULL, '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(439, 'مصطفى ممدوح مصطفى عبد الله', '29801012518597', '$2y$10$m8q8W7OAUMZpG8KtlcWYBuOxBrMEGaFACXM6qzfY6VBt.8hZauCW.', 4, 'TGT4iVtC7SYSLHSjhMi7t8LcGMAacUtNmix7FNoyIgDrdzn1q2zve3UkdJST', '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(440, 'منحه محمد محمود محمد', '29811132500441', '$2y$10$q3DDaJEMvtsAzfFcv1y2turc3/KVy5e8HwtIrViPF5lvqx8MEPIu2', 4, 'm4sxirHxx8tlVIwvzDUzOzOvR3zaGxl8xSC2VUXpHND3ZCodHkIhB9APmYCE', '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(441, 'موسى عبد النبى احمد سليمان', '29810102702612', '$2y$10$.3e1RrQMsAhd8Vg10.5spOeG8sS4fb3PuZ2XviJHdlTAYh9Dz8VSK', 4, 'eUoNU7FRQztuF5pv2Vh4ypypbl30HGFvisQ4Mi8gyburF1VBUCVZoLkeMF3N', '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(442, 'مينا ثروت اسحاق حنس', '29908032501851', '$2y$10$DE0Xxli4ypKqoX0NExsGCevlqaH7sBeyGBF7JaA8Vh0G332G4BNxy', 4, '8wFmXmZPJ9T4sN7kgo6P3RDcTu1OI1oCKoTANp2nABsVK6oZq177oQdHyPO2', '2018-12-03 12:23:58', '2018-12-03 12:23:58'),
(443, 'مينا صفوت صبحى جندى', '29901012511651', '$2y$10$us4WoY4Jc.BJj8LDruKHxew62bB7WsQpV6Yhi45IdWHL0eAIMP3X.', 4, 'DR5z0YaI575JtqzTwWKNkD4GMHVBINPbNvr0H0uqrbpF4RQTyO3d330M0GEo', '2018-12-03 12:23:59', '2018-12-03 12:23:59'),
(444, 'مينا عياد بولس مكاريوس', '30004012800274', '$2y$10$VTuPQQ5BJs3Qohwe7dj.4OgmGOWSj4ThG5QYZz5fMuoEyRrVA6vbO', 4, 's66f1MRzYxE7IzO3cbgs4Jw7qapKXkLN0FxCjmyuQ74zRDMjhq5GGaQDyKR5', '2018-12-03 12:23:59', '2018-12-03 12:23:59'),
(445, 'مينا فتحى سليمان بخيت', '29412202601672', '$2y$10$TIvbR1EmuXp5Gs6G6QaB.uaxay21jGJxGTKf9qwfe8aGBwEE0al7S', 4, NULL, '2018-12-03 12:23:59', '2018-12-03 12:23:59'),
(446, 'مينا نبيل زكى شاكر', '29901132602235', '$2y$10$u50Mv.Aet.w7ez0jUsN1/eLgWfe05JvH9lJuHdDIS5TtzUtQ1qHNa', 4, NULL, '2018-12-03 12:23:59', '2018-12-03 12:23:59'),
(447, 'شيماء حازم سعد الدين', '29904152500462', '$2y$10$mcq3y/e7AEaMGfgJeyZan.4Du/p5kSFfOxXWxD2QFg3DsOCNvSSby', 4, NULL, '2018-12-03 12:23:59', '2018-12-03 12:23:59'),
(448, 'احمد يحيى احمد', '29203302501511', '$2y$10$OtN2CeKz3TlvSKiBE/9jwO8iu9ImOYIugAu72Q.WrANSXWRz4.SEC', 4, 'esW26rCYh25BdwWm1cd8ARp7O3D5EKPaG6h8rQtDltUA04Df8Pd9sAFdIcpH', '2018-12-03 12:36:04', '2018-12-03 12:36:04'),
(449, 'محمد على عاشور', '29711162500751', '$2y$10$3MQs2Kekv9FGhwxXMhdV0.dA8iROFu./TfYMXKyacRiQ99PAj6gvu', 4, 'BjpzrfBH9p7Syq9lAjGwzHBY8RmdsK0b7oeTrMG3dencDKqTmT3Ta9ll0wzU', '2018-12-03 12:36:04', '2018-12-03 12:36:04'),
(450, 'احمد شريف احمد حسين', '29705252502451', '$2y$10$m.VtoZdbwcpOx/OT6v8qN.HG4xECWchUrLsYWpwBedtJpk.gCxyQ6', 4, '7ZYEXMGg6ghv4TBlmh7w4NP88aDqmq0tsBla2kuSLdJYPmJgUhaEK9CSgnLa', '2018-12-03 12:36:04', '2018-12-03 12:36:04'),
(451, 'dr. nahla', 'nahla@gmail.com', '$2y$10$sdlM2/RfMJxjk1NansDHy.ClbJmDGZQUBfszkB9coy8soLyOHb7nu', 2, 'CjCc8N0it6BBwvLTEYw4KruNpGtybDma3p62JxV5YLwXHg5kEGtbI14PKNkg', '2018-12-05 13:49:33', '2018-12-05 13:49:33'),
(452, 'test12', 'dfd@gmail.com', '$2y$10$N/B8O6ixNUkcyEHfEh4jc.FJFgcYboCsq.A2a2RddJMmCmQ609wwm', 2, NULL, '2018-12-10 09:28:31', '2018-12-10 09:28:31'),
(453, 'ابانوب عمادالدين يوسف سمعان', '10000000000000', '$2y$10$QMKd5qvWU9Scc6zIiGQWF.zd.Z6dAeFz2yY2Vv4r1C91qXQlvoAS2', 4, '8qztpB0KLG8lraTnrt9FGxeJU5J0Te2u6CqoYaCmPe9DOn1vy4kMNQ3HC1ET', '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(454, 'احمد حسنى عبدالنعيم علي', '29906192502878', '$2y$10$NZxWciGHhgHYIP4JHFvga.8z.LmUX/VendknOmoTpUgA49yLDFSMm', 4, 'zW2yR6Y4QBt7eZPPsu6RD1tYixllz0IIw28gWCm18QeshmoSaJSsUoYCCzoZ', '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(455, 'احمد حسين حسن محمد', '29811102502938', '$2y$10$ZvGc20OttX5qhf/4olsC/eGgrxwG.hIg9yDMNQ3SDYagmyG6LUEqy', 4, '6ZNzh67thy1k16iHST6a2zVfYXNmL4enAoIiog3TLXWB3Xm1A4uZ5xMzFs07', '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(456, 'احمد عبدالعظيم درويش ابراهيم', '30008012501736', '$2y$10$DTPFY3JHzLdi7JgMkGuMT.JPUAh9BTU8xSVaTXhQ2BUdcHPLai/RG', 4, 'DyDgZ3zHWzcx17I6FpcvlUjBiYPgKhQwoMK4YyNywoNbvzQY6R4443XBPm8f', '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(457, 'احمد عطيه الله محمد عبدالحميد', '30003262502094', '$2y$10$0ZgulAHIC5KseDV1g.y32esnOUsXLGDmKLKBqohm8Mm9EJtiLpdIK', 4, NULL, '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(458, 'احمد محمد احمد محمد', '11000000000000', '$2y$10$qlikuH13HtRyzzRk5fzgMutWwV/k2ZLQ0yLSybp/uRPdLpODwigam', 4, NULL, '2018-12-17 07:45:45', '2018-12-17 07:45:45'),
(459, 'احمد مصطفى صبره حسين', '30008162500436', '$2y$10$mBQAaGxWsuAk6enhEqMpuuXjkD37YcKkKcQq9nDcnBmpmdVPI0hBa', 4, 'TMvVfFeUzCLjjtCVSdWi50ReP20SFB4NDFhXndYpAm3BgjJNFA4a7TrGacGU', '2018-12-17 07:45:46', '2018-12-17 07:45:46'),
(460, 'اسراء عاطف محمد عبدالغفار', '30010312501066', '$2y$10$eg5eHQpSKomAIzcbN2BTQu286coYIDysfgleOq5FltVyXYJCYcQL.', 4, 'Jns8UK85VchSf9Hj6hsaMXo7bWQFhqnm1G1qbFxKXPtSSNa4CbKvhWh4PohC', '2018-12-17 07:45:46', '2018-12-17 07:45:46'),
(461, 'اسماء ابوالليل عبدالجواد خضر', '29711032500644', '$2y$10$8nAO4CfnUkpClb2lrHHbJOOLeNadaa7ZDCr6zKqysknH4O/0vRz/S', 4, '18yxfSA9RXwe3OH518iaz2GOI7Z1Q81yjyxzNiN8X0wZgKt2p6Yac1zU2TyU', '2018-12-17 07:45:46', '2018-12-17 07:45:46'),
(462, 'اسماء يحى عبدالغنى محمد', '30006112502427', '$2y$10$QxVkEnHRG6SsX9mA2Yc1G.Xi4mGuMrQCxTe/8AE0mfCzV2rr39Q1.', 4, 'X1gTIb7mtRf0n3V9JxTtt00jDNlhcesz3PLIvVAE1YtSOABUu9QZRfbj16BT', '2018-12-17 07:45:46', '2018-12-17 07:45:46'),
(463, 'القاسم سعد مصطفى محمد', '30003132501738', '$2y$10$eAf.mVrAD0ORQiMSup6KqOEIeupcNN.MLk9qwsh28Ywz2GwhPXA1.', 4, '0eQAVOBuo2vmGNQMmbjwOCbIFVPYUXFSW6TnVtu71j3o09OH0Ywbb2MklKia', '2018-12-17 07:45:46', '2018-12-17 07:45:46'),
(464, 'الهام حسين مختار عبدالرؤف', '30006082501021', '$2y$10$gIfnPtB6Dc0n2QM.wQotmO454INCrZW//qKX7xD9SrF0pDQqHY5cm', 4, 'XJjcW6RnyxoJ5fu1N8kndeImT6MTwunuIsB2LTSLz49ETdEKfCQPbRbRpgyI', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(465, 'امال مصطفى حامد محمد احمد', '29906162501702', '$2y$10$ntcwrrVVxH3a02rMVX8VuuOIArrGuHCVTfHxV0iSUCGVQzrAPAsrO', 4, '78McXp2Jvxh64S9DyRAqmmDyJYGMTwsYiyZIgljDVuCE4HXsBFJeFNn2bArI', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(466, 'امنيه كمال السيد فضلول', '29907012615706', '$2y$10$3cvxzBGatD/Tt821XLeQGepZyasaveOxU/oArMB1YzYs7f6OkczFa', 4, 'gZlwhOjH5ec1yQPdnssO8LIAA1UXRmcY2kmnftDlJQgUf4it5qKKRg7vyW0p', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(467, 'اميره حشمت شحاته احمد', '29912072503544', '$2y$10$miUBYhA0hpjwjvK6oEGIDOTQGPlSJXgEoxYBAKljt4gmauUkLWuiK', 4, 'r7SNNT5COsgy5VpB4bWHH1sZTqBn7kWrO0JUJfjul5RAyZWbapVpgxuI251l', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(468, 'ايلاريه عاطف صلاح مسعد', '30003152502943', '$2y$10$zAS0wvD9x/CGwAQlcMb3UORULp.emV5uet42z3UnBOReZqP/tnSxq', 4, 'W3oCTnZAm98NqOEL1QnXLT6vj5uN6LsUo5yZZUVYThYKRY8uFFmh8KxnsI9t', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(469, 'باسل اسماعيل عبدالحى سليم', '30008152500519', '$2y$10$w7hwCCdkCjopk7OfkuPVr.NPha3IrXMLMRhF2nl7qC//qEYVzB.f6', 4, 'QwkFxhJ1znq9cMutSyeVr9dXDUbgAPfJ4Iz38P1df6Vt5CKWat6DvZYDSxDf', '2018-12-17 07:45:47', '2018-12-17 07:45:47'),
(470, 'باهر سامح حلمى خليل', '29911272500217', '$2y$10$IBWgUw2l4FWsppUNxiK8RepFDI8u1Y.lha1c4l.mGoi5bj0YHYu8W', 4, 'tsvOdJkPJaYfFvgjauTpGvsxTyyzGM1xk0BXLmI19lGxdN4DHcUZqdB8MLzu', '2018-12-17 07:45:48', '2018-12-17 07:45:48'),
(471, 'بسمه شلبى حلمى عياد', '30004102503163', '$2y$10$.V0zWJTErSwb5u7PQCfmTOYr1GQGdwozIeYdXNq7i9Q.q2RtBMOM2', 4, 'pxSaD3NdPjY4OHepODMVrS1YuDiQ7oE1FWpsjmBOQcnbDYagZSk5nkQNA0rJ', '2018-12-17 07:45:48', '2018-12-17 07:45:48'),
(472, 'حسن عادل حسن عبدالمحسن', '29908122502458', '$2y$10$ZLGg2agiF34VO.Nz75Oide6ELsqxFhELQPgVoHnFnGA92uBHK6YAy', 4, 'KKoEfyTpRu372uushnif4uKQB4xtlDRhu8Gs2miC5C4Bv2QmtP7vhelMNeUE', '2018-12-17 07:45:48', '2018-12-17 07:45:48'),
(473, 'حسين على حسن محمد', '29912192501596', '$2y$10$HaxqgyVFBDp0ReTkX27VDuenFPVaZPTJOew0PYnTvFZ4X9RMwu0dG', 4, 'bjUiHU9JmyPU9K0IcAwqF2vttru3z8bg57jhCXqCgIJFGoEfNw3r1cLAtnmT', '2018-12-17 07:45:48', '2018-12-17 07:45:48'),
(474, 'خالد محمد سيد فرج', '29810242500831', '$2y$10$oVdCXviV.VBkV7hZXiIK..QaOUULl2T2O4AXN/ppTx9AECwMTJctK', 4, 'elII9c1dBDwsyX8Ez8j0rLZ2yj3SAwNEnuBlzw44kV5d38uPjY1hFH4uneVI', '2018-12-17 07:45:48', '2018-12-17 07:45:48'),
(475, 'خالد محمد عبدالحفيظ محمد', '29905012504057', '$2y$10$VeSC5YUfJ.rUDn2EM2UPqO5U.6wGpx7bhYaTZubf9mvvp7mzn08zu', 4, 'JWNfnMF4yYZ18gJrSFjTehZycUYpF295OK8xkj4kuxRLnOgjW7RW4jmqFoRO', '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(476, 'داليا سمير سعدالله عشم', '11100000000000', '$2y$10$SwEi1aPAnAcvoW1ZEPWyVueIW66BG8IbNd.YssLy7tKQ8lneWiC3G', 4, 'Yq9KpYGjXzLja2Q2vBJqr90lP1UHkVDJZ1Fn73R8ShKhb5YbDmumooi3vIRz', '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(477, 'دميانه كمال نظير سعيد', '29811012501606', '$2y$10$Ghej2R9sO6NiJCNqZGECQuXzOmuyVLDgDCJ4c4uyIp/UijLCxlFFW', 4, 'bANhNps3wfPTCxeUV8N6ecFeBoDIiDqltE6QUpvTLWy1QUToiTEZIe39aLPN', '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(478, 'دنيا ياسر نادى على', '30002072502342', '$2y$10$J5zlqZq2rzK7j68KcjfkGeh/2d8fLhdjgE6Fh5CGA1ghawfwJIuHq', 4, NULL, '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(479, 'رانيا صبرى حمزه عبدالسميع', '29907242501122', '$2y$10$KOA9ds0KuWxNXeo9NV36geLQC6c8E7LD3Gord.CZRMzzcHOAeXx2O', 4, 'lMkgzoFNq3GIVsd4pacttKdv6d2URUpc7uonDaDlUxyUnRgoxROAos9pM0NC', '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(480, 'رانيا مدحت شوقى عزيز', '30005112500622', '$2y$10$wL7UkxnjINMktFjK1PscHeYpcLxVCCty2kRKs3IzjcElx8h4gocA2', 4, 'VseQqy8qKVCZClQsbq2zKADXGcdY9hwjhRYM3Wgy4sAKrQCO1IECfiqYAEyf', '2018-12-17 07:45:49', '2018-12-17 07:45:49'),
(481, 'زينب صلاح محمد عبدالغفار', '30002062500244', '$2y$10$XG66zxQkMSj2umCJOhNyr.cn4OsL9NDw/KO2rtT6kQ2vYV.Nec9WW', 4, 'qJkq5dov6OU7I5mfhPAwWwdqD58qFwZNjy8CvLbT6AbiKZnzgmfjxZSOZ6Gu', '2018-12-17 07:45:50', '2018-12-17 07:45:50'),
(482, 'سيد محمد سيد محمد', '30009212502598', '$2y$10$ayEVZqb5nS3SkkRbOxYY5.Db0Q0.2Sqs1Rp6.8h6ZE3sU.CXNV8Ly', 4, '7FvtlLZ1myF1ePqqV5eo4748S6lB1Z1YOXIr5qXC9dxCgzi0pkzlZ7pU4cJm', '2018-12-17 07:45:50', '2018-12-17 07:45:50'),
(483, 'شاهنده اشرف محمد محمد', '30005252500983', '$2y$10$7PIExJEKnCtuRdaPyD2IruRemZ4I/saGdo0hb1Nri8cluGvU1scje', 4, 'bDXnhnKHH6Hz0NbihBJSBZkpvxdT1oafWl0iSLGmVfWOhgYYe2nvNALnYRnC', '2018-12-17 07:45:50', '2018-12-17 07:45:50'),
(484, 'شنوده اشرف صموئيل عياد', '29810132500038', '$2y$10$O5dj/fDyBHgTjpbtmrFqx.qLZw/xQe4ILsD8tO0wdHhgZSKVHlITe', 4, '9nsYoOcLxMj7WfUz0otnq1oaoDaFULwdFbGt5JuF97XyurNDvDJIBsfiEB5c', '2018-12-17 07:45:50', '2018-12-17 07:45:50'),
(485, 'عبد الله جعفر عبد الله علام', '11110000000000', '$2y$10$SUNMylIm75wZgEp.I0Jyduesfrp/sRTmisgTMa9jqYOVyjyE6Vk4i', 4, NULL, '2018-12-17 07:45:50', '2018-12-17 07:45:50'),
(486, 'عبدالحميد محمود عبدالحميد محمد', '30001012500476', '$2y$10$EUW5p4L1idkaBkYqEWSoSeil7LKT.hv34nEGf3u8svF8AthYn.xHS', 4, 'Co9JahWnTkHzSHhIeO7PQUEAUQK6Dq4kmEGG9gkon2h12qTG6Pv8C9Eka6AD', '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(487, 'عبدالرحمن اسامه مصطفى حسن', '29911092502955', '$2y$10$H3zbXT9dfVtUnbMnqeL9N.Gri4plzvK8Nxqd3/v3WjWaOivfpvPm.', 4, 'sqBWVRGjUUYMmw5VO5rEx8QnRcuS7TL4D3Ns6WeW5dpvKyQck1k6rfgrvrbr', '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(488, 'عبدالرحمن على جوده على', '30008132500393', '$2y$10$9a0JY8BA2sQCabJPmnTute/.Gwx4qC7EAcI9udO0BSrNwGb7RDe1C', 4, 'FwRqg6aPI4vwncDvPDtSIU8Fy7W4Ri95y18KPwjyXwxMJbQqNdDzzCbsMP3v', '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(489, 'عبدالرحمن محمود عاطف درويش', '30007052403897', '$2y$10$Vja8fuPIZLAwocbsqyeNZuKO2/R.ZV0j3SWAx7WvfTZU8fqXIu1aG', 4, 'UA4mwzyPw404BBf0qzre1Q3Y8OI6MB3NhX8LEkwzh5bJtmpuE0n3PR97wmgt', '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(490, 'عبدالله عبدالرزاق حميد على', '30008272502531', '$2y$10$n/mPwCbnwPgo1e3t5/ZEouXPas1X1cObh3ge0/KbacfZKjbGsfXCC', 4, NULL, '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(491, 'عبير حسونه راشد سيد', '29905208800266', '$2y$10$P7wuarpOt111E31rfaoApuMp7Ddm3v.IR0sjs/hfGlEW0AzY5h13S', 4, 'gMDUWE9V2JSIZ6XW6rbyyebAd6pkBbhymZiLAkPbbGOOFrUtbYbf5FdVV9l2', '2018-12-17 07:45:51', '2018-12-17 07:45:51'),
(492, 'على خميس محمد عبدالصبور', '30009162504012', '$2y$10$qYgSS7hr5x.756YK4A5iVuwx57l72ccVbXQxRN5Z0rtrLZKeyyy.C', 4, NULL, '2018-12-17 07:45:52', '2018-12-17 07:45:52'),
(493, 'عمرو الداخلى محمد فرحان', '29812122501055', '$2y$10$A8cKoaIMH5n9RJ9t9fAYSecuqPvLeyIXtxVXZq043sROvzqBKjUH6', 4, 'ozNyM8yeds0wNizMJox8h1yMiHsLheDYpleK5H6Y4ePLIa8yStSUAJKlXHAp', '2018-12-17 07:45:52', '2018-12-17 07:45:52'),
(494, 'فادى مجدى موريس تاوضروس', '30004042502812', '$2y$10$nZqSum2fqv1I1.uJ7TTk4OmZt3p9tHO.qh4e3sMHVUa3Rbpld2BM.', 4, 'lzkFEfXmYc7siKhGQejKmdCtOB7FnuGwqnOBlEaSUoWCp117ByPirvjAjK3x', '2018-12-17 07:45:52', '2018-12-17 07:45:52'),
(495, 'فضل مصطفى حسين سيد', '30003122501799', '$2y$10$cSkhIOV4HtI2/AGv6xRcDuu1XQNrBGqH9DDM8GTqm5NHwdEO3M7yu', 4, 'XPf4Y2TcdUoEY6Q7Axyq7YgNRS1zH9YNzFmqQisGMPu91J8djfuyS3EaPbJ3', '2018-12-17 07:45:52', '2018-12-17 07:45:52'),
(496, 'كرستينا ميخائيل ثابت متى', '29901232505369', '$2y$10$l6q.vv2kFWi6dgaxGuRKWu8v1M9UHWLArN9od.xezae0IZpYDptk.', 4, 'B5owtNr918jWggGH9s7k8tB8yuqJdoCPV0C0BzB3uOlhKAMjcQimEe4Cujg7', '2018-12-17 07:45:52', '2018-12-17 07:45:52'),
(497, 'كيرلس حمدى بليغ حنا', '30007182502374', '$2y$10$RIRuEZmPseIy8/GSRUQcL.i9yWbuooDfoX/AC3iOmSKClqrM3f9X6', 4, '2sFey2ZvnkST2ZXWmCGa0mv4An2lSL5UXDiu5yeE5Xc5gdfTFnaIGLLr6AM2', '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(498, 'مؤمن احمد رمضان محجوب', '30009092501673', '$2y$10$ogFXBwwVGqImKfTubhh3Nuv3FLOisJ21RQBi.c4g6CKjNLUX11fMe', 4, '29Tb8Dt02rzklPXqiUBq0bRqyq3FHLLI1fgaeNSDz4OTVifRRgiDh6wl00H4', '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(499, 'مارلين ممدوح منصور منصور', '30003252500565', '$2y$10$asrdIdabxJkEk4qMFZphyejzYej3CgX4AcW2EFLC2EDJ7CkmW7FkS', 4, NULL, '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(500, 'ماريا مراد حنا ابراهيم', '30004012501064', '$2y$10$bjKgMErHcWjEL7y0uvYR1uiipoqK6Xnz5wmnafQlfrbcn/vC4BKd.', 4, 'TnO4JGdIeyN5wlgJRdUJF1GxD809xrhQ4BZA2J49JqZMnf73awSPBzp0rXMY', '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(501, 'ماريت رأفت ابراهيم عطيه', '30006242503247', '$2y$10$DGajk7zB0g3id..4oHOlHe42FuqEBb7jyAvhoOEwIkdyiPEJVkZEa', 4, 'mxeFYOgDhrYc0DWE7QLT0TRCO1dllY23VbQngvSJxbq58wu2wdTtQ7TRoc45', '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(502, 'محمد اسماعيل على سيد', '29912022503497', '$2y$10$Ms9ILDwhfJjEwf4gA8cTueryA1uORmkW0g9mYTWX3SY11ugttvXgS', 4, NULL, '2018-12-17 07:45:53', '2018-12-17 07:45:53'),
(503, 'محمد ايهاب حسن زكي', '30001152502177', '$2y$10$ILD2kYk5/xMXhz9OPSnZkuEiYyT0SRt1OCljidpRRFVqD5P3wAMX6', 4, 'u2w1lY82mEeyAFexPW7988qZx1pMJD3kYDLDvpstKTXWG0qHhIIm50xILXIr', '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(504, 'محمد سامى نفادى هريدى', '29902162500514', '$2y$10$q91IsBSF8lg.2be0P.Mrx.FQ8j.koe0vtxcPt8KVNEYeQM7CGPvzG', 4, NULL, '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(505, 'محمد صابر احمد سالم', '30007222501457', '$2y$10$Nhbfc.NKbqfgo.7m2vT0Ou.118msfaG3u4saw0d9go4LrHolrFkqG', 4, NULL, '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(506, 'محمد عادل عبوده كامل', '30004272500754', '$2y$10$nancHWNKxEDEI5ueHKZiBOTn9q2nWQZKW.8bDDm4CBIPxFxBApaLa', 4, NULL, '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(507, 'محمد عاطف عبدالرحيم احمد', '29902192500632', '$2y$10$cN1DgO.isMNviZ9NdQZv6uMuz6Epql/rCtb0CBDx51RBTM2nDkux2', 4, 'RIpgmLvNguvbZiOLtkd2arPYEahOLaCtBsopTwdGZjcRmk6O2t6YZY236Jb2', '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(508, 'محمد عبدالتواب فرغلى عبدالحى', '29910062501699', '$2y$10$gKsgeOvIlxAOlnC6sI4F5eDDCR0g0j20ocYjIUZYSOxNK8wR5jDMW', 4, NULL, '2018-12-17 07:45:54', '2018-12-17 07:45:54'),
(509, 'محمد ياسر عابد السيد', '30003132500952', '$2y$10$ukEokGLJA3NPpDCeQgPgg.03CWLIwKoZzBxblN6zU7fPq/7YqdObe', 4, 'jGBVZq5HONMjhw46koOrZE1QF2vN1PP4Nn28WYNVujFUc2zHfk9kg4uJXCYc', '2018-12-17 07:45:55', '2018-12-17 07:45:55'),
(510, 'محمود ابوزيد خلف الله ابوزيد', '11111000000000', '$2y$10$xQrRVoLHL6kMV63N0bNVs.aTYvGzoxrqTcLUY9a30DdrYRlVPUV32', 4, NULL, '2018-12-17 07:45:55', '2018-12-17 07:45:55'),
(511, 'محمود جمال عبدالسلام فرغلى', '29901012503314', '$2y$10$rQp.HBFweq2se65B/jAMqudRS4mypiXt9R3/IECv7iXkpNybkr.36', 4, 'Vw80Vg5T7yydYLy8QSGvIUeye4ZYZAEWudTGZHCuOc9GARJSXXySATWYBVTf', '2018-12-17 07:45:55', '2018-12-17 07:45:55'),
(512, 'محمود عصام الدين زكى خليفه', '30009282503192', '$2y$10$WIz2VCvBSnqjnlDIKL6T1elJzA/AlTTBFQVMGxzz8kWrN4rf1Px1.', 4, 'L77IrKnY8ZEyiPr48gwg1JbXgRCO8tL47JWgUaML16qMsC2c7MgcBO9vLklc', '2018-12-17 07:45:55', '2018-12-17 07:45:55'),
(513, 'مصطفى ماهر سليمان حسن', '29901012510655', '$2y$10$gm82UUlNN2hjTwa5PuUXqOVXtXmlYOvm22ZecIzlkUewVciCpiThC', 4, NULL, '2018-12-17 07:45:55', '2018-12-17 07:45:55'),
(514, 'مها اشرف ابوطالب حسن', '30005062501185', '$2y$10$sqUPQG0Sr13qQYCoAoDFf.pfIleHxz16it8UeocjilcVst6n/gh7.', 4, 'LYlIlXzN9wDAJ41XQocfGFbu4ckQ2TOpDrAPqRkmB79p7LQzFBDiFT5EZhm6', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(515, 'ميلاد صادق فخرى بباوى', '29901132501153', '$2y$10$k2DQiHTabzJNGOcjKV1MEuDz1fJ2McaMA6CBCK2SBr2Om6.iNL4ie', 4, 'BB726TAOWrMtTKH9wlQfvd3cyr9rra1r4htjXcCRWsLHUI4ENWfENcbf9rO0', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(516, 'مينا صموئيل داود مسعود', '29711052500331', '$2y$10$U8JCFipqqnk7QDnE3WjHK.DkzyWt4QytX6aJS1UP0Qq1WhKtWZGLm', 4, 'tZiUWB4PdIl9c2NLL4EoGmK6alwAhjmTYmIEwUYzWE8GKqb4twrPBPupjw2J', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(517, 'ناصر زين خلف خليل', '30006012501016', '$2y$10$DisHt/qKXUNgmiasp5lw5OUcLengGKWOzM.Cw4kN9AcmlzPi.JKRe', 4, 'vSL4tPIIbuzttMXq3Lnq8ccG66g2JkNspAbWdk1DbfWvLieyb2sLym2r9MA3', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(518, 'ندا خالد اسماعيل حمدان', '30009242500085', '$2y$10$ky0mqPhCFDpe25l7j1gPY.TkWFaBRmr45l.KYI/EjIvkDXdgB7O4e', 4, '3pyD7Q4drlHWd20w41dQP2wXUvpRKEzHNL1xF8PvcRszooaIuTw4T9RuMCys', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(519, 'ندى جمال محروس حسنين', '30005142500228', '$2y$10$FjDgOtQvU6SneLxs1E4MGOsYBQL2uv0CGjQrtQqMcx4Sf0FzHbDTS', 4, '8DwvY3sF7bhO18sXg6Xa5GGGDfQcSPqgOTiuq4lGrVEpMCMciAZ1GODTRb6N', '2018-12-17 07:45:56', '2018-12-17 07:45:56'),
(520, 'نسمه حسن عبدالله احمد', '29910132500245', '$2y$10$tCuipisu.tWb/kp8c.6inuFBVKZWCvULhFsMRZXCe7RVCQf.YXZfC', 4, '5MJRBtNwnsbXm9e3C4kTi5wOgQGzcut6rmj4gBgmOomjQVJkVgkxGFmC8bvR', '2018-12-17 07:45:57', '2018-12-17 07:45:57'),
(521, 'نفين سمير عويضه غبروش', '29907012503746', '$2y$10$4PBQHH1cgzlbqytnZXCoGOEgGRlLEil2tOD6Eu5jk1PBMd1Csff.S', 4, 'ALmJNLkFqml6LvNgeWtpxc0Q8yS4X8koD9kKgie8KkN8kobQI9X3vfY8ISM6', '2018-12-17 07:45:57', '2018-12-17 07:45:57'),
(522, 'نهال ناصر بخيت عطالله', '30001232500086', '$2y$10$QM9ZgqgEYbvxYx7nKucReuJiYKd7ntI.crlktpMnEZD3BPzQ3u9MK', 4, '7ZeNzm1K9ur7HVjZSxBpoca0xcVDGnGNOZOpa2pjqCsKgQY8dIP3iAWXA1OT', '2018-12-17 07:45:57', '2018-12-17 07:45:57'),
(523, 'نورهان علاء الدين حسين محمد', '30009282502269', '$2y$10$tVTNjSQ77ob73QwctMSpSOVAeA3gz9LHQxT2plyFVIFgtujgyZ.Ki', 4, 'uOBGlCIDYpDLfD6mgak6SFWhh541g1UMBkcgbho22ee3AA72dANGhinczXOS', '2018-12-17 07:45:57', '2018-12-17 07:45:57'),
(524, 'نورهان كمال وهبه عبدالعال', '29911282500088', '$2y$10$SMlI18AFm2PrV06Q2WFzM.ZvBDhI8VdCmbBP/7PJ5Eyv6tAcix.QC', 4, 'rOTH5XbMrEcAjX2iWHHXIL9xFe60TjvdAwE8gppG76wKr68WLvSSoxlHONYt', '2018-12-17 07:45:57', '2018-12-17 07:45:57'),
(525, 'هاجر عبدالحافظ عبدالعزيز عبدالجليل', '29910182502508', '$2y$10$xg4uA5z2yRFQPUhQ2jgyOuDsmv4anPOJnqWzZbdohmhEpSbZ1lctm', 4, 'HSII2e6AjDCF1smFImFoKxmj34lFEasHL9qExjK0foepSWeUnuQvOGZ3zVXV', '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(526, 'هبه سيد محمد سيد', '30010222502241', '$2y$10$8FToBs.F9jhOZCFBMTQsweluBN.Vb0SOJNON25FjLDsxNImEaNh96', 4, 'HBTJkUCyHsDVziUz6LSEM0M5M3huH1eFHUvvKI7t225Fmxu6l6F6c72fwsEx', '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(527, 'هدى سيد عبدالظاهر محمد', '29907312501966', '$2y$10$dleoprecgHQmhB1C6BpaOebqigczCKRK4EQic/Vr5LMrMBhkuhk6u', 4, 'AQQweckGGAUvgkgTl1PhucZLXckeZM1K7lplYmmfvuFAuj89w1lmQ1kM0V6B', '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(528, 'هشام يحيى محمود رضوان', '30002252502391', '$2y$10$F4RTi7D89xMNNcR0T68Tre6qnXpfyQpsLLcEcWiu9j9VyBgvSv1H.', 4, 'mHfyu2Sd0p081uIypWVfBWhKHrWHsssm2UIXVJ3nmi3MB186lMxu2dKAH0uQ', '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(529, 'وليد مصطفى فهمى خلف الله', '30009162501757', '$2y$10$LbvnuIcC/aUeIeWeSJ.9p.NRCWmzrXH6FCSBuPudApSDqXEZMccoa', 4, NULL, '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(530, 'Ahmed Taloba', 'taloba@gmail.com', '$2y$10$GvobFxX8jpkK1lUaSelWlO1M7iBC4X1S3d4NgmDxLI0DNzqvik27i', 2, 'STTmTHuVymRXrdWVg2mxEsWbqcrR8QzusBw2vDlySVP8AYRekwJyvD5kNQd3', '2018-12-17 07:50:59', '2018-12-17 07:50:59'),
(531, 'نورهان محمد احمد محمد ', '3000808', '$2y$10$LbvnuIcC/aUeIeWeSJ.9p.NRCWmzrXH6FCSBuPudApSDqXEZMccoa', 4, 'EU4QGlLuEG8KgEBMyujiwAGPpEUd8A4c6fp2tAXm7yV6u4X6tqRVfNFsQC5D', '2018-12-17 07:45:58', '2018-12-17 07:45:58'),
(532, 'Prof. Hosny', 'hibrahim@gmail.com', '$2y$10$sMJhGPdziTa54IWf6UOc.OLARs.KO2v7IBEnIG5abK5m5M1elDTy2', 2, 'q3S7h9R7eo22tXUP9xGspUOqI7b8Owu3A8zaC3CF0qrzyNSkI5vVVTe1MOW8', '2019-01-15 10:28:49', '2019-01-15 10:28:49'),
(533, 'test', '10000000000001', '$2y$10$anh2f9NKknRAQDnrKU02leE3oGhZRKud33BFLywi5.JmG39ipayXO', 4, 't0MsTMWP0qnqOMuDP629q7dulkVIitkHCR1cDIat2CvDIK6N9zBpCSvpnLBV', '2019-01-15 13:38:54', '2019-01-15 13:38:54'),
(534, 'احمد ابراهيم عثمان محمد', '29807272501912', '$2y$10$9Iu8cxVCX4pSvl/cSakJsumP7oL5ZeAXyjhkARnzCdtGHpmoV7ARu', 4, 'ApjTOddfycgst4G2IqRYKVXok8WFSpL7NLsjk32rHylzISSSZAV1sHOQmegh', '2019-01-20 15:10:39', '2019-01-20 15:10:39'),
(535, 'احمد الذهبى رمضان محمود طه', '29811032702098', '$2y$10$JwDdde/7go.MRpOVP.uedub..DNwtNzjNtw2jnfpLaVB3PXLzmXTS', 4, 'wqzr28yLBGsJ7Ayyc4oy8UL12bRR7AzmSOO1R6E7HGyeJKcZeLiMA9C0oPtj', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(536, 'احمد جمال ابو القاسم مسعود', '29805192501439', '$2y$10$cN.yNDe0CIyQDMy/9lqxleli4yCaxxv3ZedYC5ZIEVSxI8SlFkRY6', 4, 'ftDoLOPKhUpIlrYaaXXXZHWAQIqRSZDg4J6aX9sbUaLQIcBkZu5xWKQ4SKAS', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(537, 'احمد عبد العظيم محمد حسين', '29804072500254', '$2y$10$Jw.ZAa0Y5OpR7c2C1vUmoOJS2d1PY1qesgEgkjYnZjNT8Iuirr9dS', 4, 'tsqN231OKTIChniV9rR9wOMEBUMibz8VcXCUGatzYdpOd7GYK0SAF2sdFOMS', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(538, 'احمد ممدوح ذكريا احمد', '29712012508815', '$2y$10$/brrKfyWnXhkwNh0.pAyxuxRLbt2gQjkepDmpUDdovnaSqmpD4sUy', 4, 'v41PJwhc4P80ckhZ9ytHpQz4aJRrSZVw4gM8xaXSr1HDMr35aSEUTrMbxUCe', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(539, 'اسلام انور سليمان احمد', '29702122502493', '$2y$10$PeWMzaNfYUoMY4J0.GWEL.lr/mA11Q8j1GDK64pnhYIaoGyofL4Nq', 4, 'mTYYzdSOmCV49pW5CBSEM4lEmFINozsuVvEo9QxtqEKrUtbojCLVTYY2T974', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(540, 'اسماعيل ابراهيم عبد الشكور عبد الحميد', '29803152602698', '$2y$10$MT/G.zW.8b3h1LMElBwi.ucDDpiWh8/pbxHlqcZ2ZVzGnftovmfx6', 4, 'TQEX5vLWnRqCXFtuStaI7N0VegiWdCJqRDUF5kq05oSkBL7GuPFVCfLud6eS', '2019-01-20 15:10:40', '2019-01-20 15:10:40'),
(541, 'الحسينى حماده العارف احمد', '29704122602695', '$2y$10$3C5JTCpFiHi7fYNGejgjJe42FCQxiE0CoGgKWuSBdydt8c8wwNLli', 4, 'uTe3Xlpu7cvogNHEQtGX07o3rcW4RpGKr4Xkw0n18IAYy1whHy8UnZ8vbOym', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(542, 'ايه سيد محمد عبد النعيم', '29805202503303', '$2y$10$IUzz/qHBi/O6gEuDMCfkYun.1jEpPFo4RxWIKUfo6SzBK1.01YZ9m', 4, 'zHgyH73TOfcxgGS7ujkTpTaB2sKBVpOPnj1tuvF0BM5AnYjP3Kzv7hiccZY9', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(543, 'اية عمر بدران عمر', '29807223200061', '$2y$10$MD1fWsJdXxDbpCReSPsyuOW.eIY5rAreDw13ixENB0XxrNdnnjx6K', 4, 'eIAMkeGfNDukeYMtmngDurqCdHlarkBgwioIOFubSVYkLSPtqydJEVe8KV0l', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(544, 'ايمن ايهاب حسانين شحات', '29804092500951', '$2y$10$4FXXrwOXAIGb.mnDq2CD8.HWdkZKBWwzpurznIvUjDNI6F4TzZmVC', 4, 'J4nPTlhhjkxiXpDctfSm6LMiZicSJWmf3PVjoSr5IC4oN6dzcTycuAXdunMl', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(545, 'ايهاب اسماعيل عبد الرؤف خضيرى', '29804132600954', '$2y$10$AyY.RPZHVoKb7tYJi52aI.wmBLWDloep54Os3GWiPv2eOLdxH3TiS', 4, '7skgYIiHq8S5agsoY5GwiGqZYUStf4hjdjEX8qMUMASwgBFfdSJwrndRue2s', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(546, 'بافلى بشرى زخارى عبد المسيح', '29809132503179', '$2y$10$f9wEHGJOnlgi98aLAqouJOBchg3704QEI/KY84G0tMCCoAZeCT4dK', 4, 'HvYTE92qgUU8V10c3Im49p4g7jvsoZ30SBU1vf5qpzTFL3NNR1aDme7JiJuF', '2019-01-20 15:10:41', '2019-01-20 15:10:41'),
(547, 'جوزيف ثروت فهيم عبد الملاك', '29612092501072', '$2y$10$yI21FalB4NTNVyWPN5qmheJXOQaQyHjTCgj3bCaH7lxgTmk9p6i02', 4, 'SzFu1qxOPT8nxrIV7jUKOlU95GyNyjIf54olr6lHGGiINIAlGLy0gcO6Gz2Z', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(548, 'حسام احمد حامد عبد الرحيم', '29802242601872', '$2y$10$8yZJEsgI1T/.p2BQJX84B.rP/RzqVpEnRIRv58WsZfmQD2MKQ1GYS', 4, 'CkCf1uQmATmpCiFf6iQY8J0iQsnWlhcs7q8QlScx0jTWK7uevckb5wv2hBSc', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(549, 'حسن خلف حسن توفيق', '29809242601117', '$2y$10$X1//T5xHaMLYfRZXice5v.ZZMHJUIKFwC3a21r98dkZSyBcdXEUmm', 4, 'oeyIIoJWRrxPqPjhJgugT7xBfShuGCQpmbjy3rUL1q8XuTt6OVK28wntxR1T', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(550, 'راشيل ملاك صابر صالح', '29808082605629', '$2y$10$URTz2rh8Ndz9MtbTmb0hcOUD/z27y2MAe/AU5nzBn5fVCGFibNKge', 4, 'DimkHpAKhxd8p9W9XRhPfDTAyYMvB0akIJJTJIZ0RAolPKkeCUP8ZUvwWzfk', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(551, 'ساندرا سعيد فوزى فام', '29807222500486', '$2y$10$O2yk3aEhk2qS2tVlSem7R.BFgI50ONJuJRZOHvYvOPx05O99yMKcu', 4, 'OomqfT7mkr7z7SSh7ZWg5SCHfUaFFVdmfYVckvYbP6utW6UOUvXLyYvsQbio', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(552, 'ساهر عادل حلمى خميس', '29710192500253', '$2y$10$Phm9xBM5A1Ws03q.QLceaOpwt7ixlOTAZ..RFdop934fVz9ylU8FG', 4, 'beCnIDNAVNRF0yIpp90EKVk3OAWirbMLi3gZjbSrGuQmTjYrZZJZQZ98JeyN', '2019-01-20 15:10:42', '2019-01-20 15:10:42'),
(553, 'عبد الحميد صبرى عبد المجيد عبد الحافظ', '29801012639777', '$2y$10$sTxBiS4ebroVuoAjHLKLGe9XFLML5tgTj5YsxRF8aee0UUw0FQZRG', 4, 'KwOSEKyqI9dNuI9Yj9V2zn6p2Czo2s4RyPsg5v2GLqN2Y5l4J25F32NmXgjH', '2019-01-20 15:10:43', '2019-01-20 15:10:43'),
(554, 'عبد الرحمن ثابت احمد عبد الرحمن', '29803042600673', '$2y$10$yA9mOkrxY3A7DiUYey0t/erFa4bPJi0cW4.nxUEHquXCSM6.xD0HK', 4, '8bBLRRUQzVRTuldAEajB0wZBRPtLfuMGKAkNgInR6Y61G5Gq33zvUxapTbLR', '2019-01-20 15:10:43', '2019-01-20 15:10:43'),
(555, 'عبد الرحمن محمد نصرالدين احمد', '29710282600532', '$2y$10$B2L2Mpf0pljJXVwyWOSgoOGiPBkGywaxMd3Albrr5uP3hQAvgOnvy', 4, 'zrS3ybKucu8UvIqSwS7JOvCt2O5JesBl9ZpFtZLcHkNdfvixREFywszUIad9', '2019-01-20 15:10:43', '2019-01-20 15:10:43'),
(556, 'على محمود عبد الجواد شهاب الدين', '29802210101991', '$2y$10$5WBSNdbDzxBWiQ2aGC6Wief7awikrcOHXCC6sHHHezc6EryftLl0S', 4, 'mRi3q1lRrP0rFaY4wL3hHTyGSuJuUoYS6kjiKDtwR1BDS2m2tSTGsFifXmmG', '2019-01-20 15:10:43', '2019-01-20 15:10:43'),
(557, 'فاطمه احمد محمد محمد', '29712112700781', '$2y$10$aajFqUYtFOVHp9h6eDpdteX39X6mMKsDzrqshLb.UXCvmmpAlUTUy', 4, 'LbFL8R405N5SX2wg8ocZHfHcmkX9hyphzvVqvsSB7X2PJuP2MYLvjf1jWmpu', '2019-01-20 15:10:43', '2019-01-20 15:10:43'),
(558, 'كيرلس ايمن الفنص الفى', '29709252500357', '$2y$10$7t8OtqSjEHwyi5Yt6xmeyuD2P91KNIAG5HOZNGccrB/L0flBhS.E6', 4, 'eIQ6StWO4Mjn5BV9Q7ufoq1H246yx4C2ZyNJ47JoVr34riKYsRtaf0ncz12T', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(559, 'كيرلس ممدوح ابراهيم مهنى', '29809132503195', '$2y$10$/78XWgNaPiPgfhms4o0KAuEFwc6xt/.oXi.jPsBSC2YUBL3dVh86.', 4, 'Y2ticS7fuEJo0Vjm7Gvd9QhLqkADMKT8BSg63awzKlnvKwcMsipHKWK9dNOA', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(560, 'مادونا حليم شاكر راغب', '29706152503201', '$2y$10$lN7m6/GBoeotRjWDBaS1WejDxYfxDCmzFPDZLqCMlG3cWtn9SJePm', 4, 'uqR9KynfAfC2Do2lA6KyMkeiviDVfDCkhl7GKi3E1DBqZ78NLw9wZdXuEm9R', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(561, 'مارك مراد مكرم فؤاد', '29801042500234', '$2y$10$r0Xqar7tX7F/GHwyh0ELAOxaQMe1e.Lh3u19cV4ugpfUkqWyq5m12', 4, '0dRvXtdlL8yCY5Um1ojo5fumb3cYeffswlW6BzHYgYME5mYw2VrjTIVWiqPI', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(562, 'مجدى عادل اسحق غالى', '29709252801438', '$2y$10$xJXCFef0ktZ6JK94zMC27OTMM8fg0Inhg.xFKRTgopZojKaemthLu', 4, 'Yg9Te4Nm4hfEdULs6uQWLWthHPyzNApDPGKtbH6GHOjQdKWlOYZmeAbYu4NO', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(563, 'مجدي رشاد مريد يسي', '29809072600811', '$2y$10$85xN1c22R.p5JVBi97CAXe8RXEKtEuPdovhyHMB8kIOg02NVtxCPq', 4, 'uL1SzBmlLniXV6EOv8J8SEabQSFp8OFpFN1L32TJfuNK009VNgopPKgJZTU0', '2019-01-20 15:10:44', '2019-01-20 15:10:44'),
(564, 'محمد بهاءالدين عبد الحفيظ خليفة', '29806012611955', '$2y$10$EyfWZrJMB4V2pqADsVKGxeEYEZDTDS0jr80jwtROa49KcD5THdqeK', 4, 'pgOjY4zcu5CnEP4CZqO9DflaZL2sEsrmnDtYLVypYXcXpFmnPiAU5lSZ29I9', '2019-01-20 15:10:45', '2019-01-20 15:10:45'),
(565, 'محمد جلال على سليمان', '29707292501973', '$2y$10$L4VgkCupB9uxRZE74VLPZ..4DtWCgtyTGttb5mrQrB79sQOEkkDt2', 4, 'qjn8cQD8Zw60jjlNqHrPDCR7I7xpeBZ12tqLxuzEzF4mhmgQ34CpV2AgUOBn', '2019-01-20 15:10:45', '2019-01-20 15:10:45'),
(566, 'محمد رجب مرسى حسين', '29804202602135', '$2y$10$RDbcRSTJup5mW.D9G9FAMeSPCC/EHwjbAe2Jdyijn0WvcCec6Vr3W', 4, '2aME3l9z27nEhRw1XakhfHFN95r9MeYmkJ3GIdrGEhV9xbGo7yI7uUudwcVA', '2019-01-20 15:10:45', '2019-01-20 15:10:45'),
(567, 'محمد عادل محمود سيد', '29801242600616', '$2y$10$y03eCfDp/rWVeV6TUxiEFuFDNt6pja3ctTYdHEZ3SpSpN/MspPRyu', 4, 'qy3xaBQ1IcVyF2RnDq1o2ML6ZUW0CwyLqeQbqXZN2QLvsmlVOvXZoqiwhuv7', '2019-01-20 15:10:45', '2019-01-20 15:10:45');
INSERT INTO `users` (`id`, `name`, `email`, `password`, `role`, `remember_token`, `created_at`, `updated_at`) VALUES
(568, 'محمد محمود محمد محمود', '29801012609274', '$2y$10$eqlCYRpH/evO2/UuipfegOlPbDuTlM38eGWzg2qkHCmDiub1uJmpK', 4, 'P0ASqvFq0JMLW9jGlRJZ0rwj88ppgWHHkxIb7FHEvBDMzDRCGD3RayDGR1yg', '2019-01-20 15:10:45', '2019-01-20 15:10:45'),
(569, 'محمود صلاح محمد مصطفى', '29806162502038', '$2y$10$CO/5J4Iyh62ovAxp/kMPjev4zrmobSEg7IJiy1keA17Zc76lBTj4q', 4, 'ODeivVx5oViXEhYuI1m0r4gL28zfeOTndMTfBblUMzugZg5eDyVHoOiiwXyb', '2019-01-20 15:10:45', '2019-01-20 15:10:45'),
(570, 'مصطفى عبد الناصر يحيى خليفه', '29805022501639', '$2y$10$8EXf48IbjOfaNHIrUBoS3.8jTZIW1TUmZ/ch779AnTzX.oLz.oolG', 4, 'vSIuLfNgXsL28bESZePr2lWcCezzI8t9RAJY3WMU4Tf4tQe0BTCbksauvqzL', '2019-01-20 15:10:46', '2019-01-20 15:10:46'),
(571, 'مصطفى محمد محمود صالح', '29803202501774', '$2y$10$aEGh21KBU0FRI9WRhtJYIujVw7NNQ5Z1f4K3Sez0TGTnnNM9n4jlC', 4, 'fjlwa8yWX0jHyqYtZzIKzydDFkzQ8eReI1ZfGuF5ec1OaahxR34Js8TtMkGM', '2019-01-20 15:10:46', '2019-01-20 15:10:46'),
(572, 'موسى محمد محمد عصمان', '29612312500536', '$2y$10$FqOC2yV0mVaBY0RGKGZVDu2qx4usVRl4.4.j8G33BnNa0Vu2xXCKC', 4, 'Sg9JENZiOHaNvWZfuMRRFix6Pa5nminU7nMk4ybwzfPETNUS8uUbZu6mIzij', '2019-01-20 15:10:46', '2019-01-20 15:10:46'),
(573, 'نرمين عادل محمد عمر', '29712202601366', '$2y$10$z66yamo16ZjEsde826xaS.a7IqWwmTIoHVV3Pb2ZdQgHYeIVdhYsW', 4, 'bpo75oNLx37Xggq8uZ4AbnxFCNu4cnR0yL4iS9c7EI9AQK2fbXsLhkFzSSY4', '2019-01-20 15:10:46', '2019-01-20 15:10:46'),
(574, 'ياسر على سالم حسن', '29803082502852', '$2y$10$rSEpLyAGQhF0iRzwnwDvtu6hkK./01s18vWgt7aX8j7mfGScJKNVO', 4, 'XI1ZukknIzr1orzioV0yvaVlFcLUF1jq2uojRLPvvvqvdhpNZyBP4oQ8vDQ7', '2019-01-20 15:10:46', '2019-01-20 15:10:46'),
(575, 'يوستينا صادق فهيم ميخائيل', '29611182602726', '$2y$10$Q2DUseSX0HtH2WCT817edeqWRp6RckCNQyj3ldcMeyntEvttEezkK', 4, 'D4z1yWYWN71dfFDjXakKleHdThVmF2hcqAyPnBKc2mTKwOaMnFsOLCr6PNqP', '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(576, 'يوسف زكريا محمد يوسف', '29805102700713', '$2y$10$A9nvQ8MoYMNdZGvsWMSrFu5a7./A8HmileaQJ5BDvh3bRpmrgMqtC', 4, 'if0LhN0X52dkZZjcQUxaRiE7fsANuyscJvsFNLFnbFdtKNLQO8qkS2Fdc82d', '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(577, 'مارينا سامح شاكر مكرم الله', '29806212600443', '$2y$10$H/xdE5aW9PGxeDf0BDWAp.M4iy555ZrcxNuVEquaewnd5KSULMaP.', 4, NULL, '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(578, 'احمد محروس متولي السيد', '29601152701732', '$2y$10$RSlHDGRUW83iYQzzGiBFReOFLfQ4uHULEy5GsThP9vsspx8M1nXLW', 4, 'THwkNnWtLc1HtpK8xFQF6WOB21OjuxFNpfwyQbKBKg5ODfdUa5IKN0h5Opi3', '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(579, 'اسلام محمد امين محمد', '29603062800734', '$2y$10$Jy6pzTG182ca1EL.M6/WaONxH3mnoM84WMjzwrZG7gtONsQm.kmz.', 4, 'f5IXTPEorrVYZhw1suqvo1svPFa7sRL5UR9DAhqBpWJ0dds4pj1fFtxrKhU3', '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(580, 'خلود عمرو مصطفي البارودي محمدين', '29603242500208', '$2y$10$nvr3.t9ZB/rkFfkVd4WdU.l5CeyLt6DxpH9E87VElB4J7ajma/yKe', 4, 'tYd5DPsKePNWdR4X6elerCV6WsonKTJi6d45objqYIlJQ97P46q9rS1TFQNa', '2019-01-20 15:10:47', '2019-01-20 15:10:47'),
(581, 'احمد محمد صلاح الدين ركابى', '29612052800239', '$2y$10$Bcf6q7GWD8/bQcFIoJT8Tu3O6H/GYyCTCrhX/6jxh.V9diMla0lAi', 4, 'YStIxDMI7mtMr6V3RG8EiwD9Q1V6EfuaYumwymLp4K2F58vL1UZQTbpqgx8W', '2019-01-20 15:10:48', '2019-01-20 15:10:48'),
(582, 'هشام فرج محمود فرج', '29705202801075', '$2y$10$y5.J98RsRiLI4SyiYqkT..ulW1eo19N.ZWQfxVN./oS4YmlvbXW6S', 4, 'nITHBBOSzWEPdDxVojmdcSj19Uj0MB8fp9NmBOW9uPugCyUZEUv8GHsqGnGo', '2019-01-20 15:10:48', '2019-01-20 15:10:48'),
(583, 'محمد عبد الصبور فؤاد ', '29411262502634', '$2y$10$enzo5xZ1A85vIsKdRpWGAOBSEG0fPZ81AGxDhU5XsAZyp3O.jCQKi', 4, 'EhPUsHVgIr9aUU0pk4X607rH90aBYzAoEZqgTqboYY4Yj8RjIwGv8BrOcshc', '2019-01-20 15:10:48', '2019-01-20 15:10:48'),
(584, 'Ayman Abdo', 'ayman@gmail.com', '$2y$10$3gAqYO1SxcubBxWpnOdPquk89Cce5N2TSMrUena0f370otfqyfFkS', 2, 'DN2HMJQxmBb2WVYes4vV0qzZgBfzBe4R3SXEnOOhsJFda3L3Qa8OSAWM6Lkj', '2019-01-27 10:35:50', '2019-01-27 10:35:50'),
(585, 'asd', '22222222222222', '$2y$10$ZsHUuH20hPJsDJvjfYWf1OzLynqcI.651CsiPgxdbNXZQDO6h1Npi', 4, NULL, '2019-02-28 09:11:41', '2019-02-28 09:11:41'),
(586, 'ابانوب ايهاب خيرالله ابوسته', '29809280203494', '$2y$10$Zz3mKN/DgW4z/ABh1ZdtH.cxgjcampZWy3G6GiD9MP0NmJNSbkEyq', 4, NULL, '2019-02-28 09:14:33', '2019-02-28 09:14:33'),
(587, 'احمد جمال علام السيد', '29712012506855', '$2y$10$xBlJxSwMtF79T6y8mTP9EuQr3mfJfqUd3065ZfV7dLILBYiMTQVnK', 4, NULL, '2019-02-28 09:14:33', '2019-02-28 09:14:33'),
(588, 'احمد جمال فاروق ريان', '29802012502671', '$2y$10$3K3amSD9vEXy5JHhuu2xOO5seFVu6AAMhyIxH08WABZM64UrcgSqe', 4, NULL, '2019-02-28 09:14:33', '2019-02-28 09:14:33'),
(589, 'احمد رفعت عبد الناصر يوسف', '29711232501572', '$2y$10$Ng1LI9SsuUrCmBRXv0l43u3fgbQuWPpBcKYi8BBJX2OzI4UnpdwCC', 4, NULL, '2019-02-28 09:14:33', '2019-02-28 09:14:33'),
(590, 'احمد رمضان عبدالحافظ عبدالمحسن', '29703232500913', '$2y$10$b3xvpCp1nGFeCGfsfCQXEep1iLeBeL3lPxvf63wWldsEo2gh7Zz7K', 4, NULL, '2019-02-28 09:14:33', '2019-02-28 09:14:33'),
(591, 'احمد سيد حسن محمود', '29706112501672', '$2y$10$oxS11knHOgoZQw94ofBJL.xTmmKgWMkEO50HLc.CFvHNrhuGqZUyW', 4, NULL, '2019-02-28 09:14:34', '2019-02-28 09:14:34'),
(592, 'احمد صفوت فتحى عبد العزيز', '29802192500778', '$2y$10$xlpNZAI32uwQZ2ed9tlkAOfUYQu5ZsWKIgOgygqKSjH7sK4EHj.8q', 4, NULL, '2019-02-28 09:14:34', '2019-02-28 09:14:34'),
(593, 'احمد عادل عبد العال احمد', '29802162502393', '$2y$10$OhVsuAcOTfXMPlLv6jz1JuW..YhkOz4EbqU7/louuKRzv4AHnDO9O', 4, NULL, '2019-02-28 09:14:34', '2019-02-28 09:14:34'),
(594, 'احمد عبد الفتاح عبد المنعم بخيت', '29809152504953', '$2y$10$Wn37kS6PTs2FkWdxGCNciOwlYPcYIi702GUjDghKFupI0/wm98Jo.', 4, NULL, '2019-02-28 09:14:34', '2019-02-28 09:14:34'),
(595, 'احمد محمد عبد الرحيم محمد', '29804012507675', '$2y$10$Tbz90hpqhffePSqSNz7y9OdFWDzv6lXuv0A8szS4q.7N.CiC5YOZq', 4, NULL, '2019-02-28 09:14:34', '2019-02-28 09:14:34'),
(596, 'احمد محمد عبدالرحيم فرغلى', '29611062502191', '$2y$10$YotEAFHmw/12PBqAcNDIkuhqL6DRE8jr1swdsrc0dT09vgMHKQ3aC', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(597, 'احمد محمد قاسم احمد', '29707052502352', '$2y$10$n0a0QweCTU4iQ0VEcL4YgeQYqHfcyv6c/pLwT4JJR8/BVXEzCjVj.', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(598, 'احمد مصطفى احمد خلف', '29708202500058', '$2y$10$SJ8.ArXc50HCyHGo6k1dk.Vycd3HvBI9n/cxdFefpbMdsaA0exIzG', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(599, 'احمد مصطفى عبدالمنعم علي', '29702242500613', '$2y$10$j63ZTNTzkTfDxNjvdzN2j.AT5jt7Bpo9zdHQBLNWWqkovCiXjo/vG', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(600, 'اسامه الامير دياب فهيم', '29704292503071', '$2y$10$Q/3wGm4nFnNahSTTn27cnumEO3Y2yCL24Dtm1loPnqGm/g5oP1eO6', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(601, 'اسامه زكريا فؤاد يوسف', '29808092501074', '$2y$10$2Tp14.HmtD5q.Rbg6jOZweI9772eZOvuJXu1lWSGYuz9Bjv3DKVQe', 4, NULL, '2019-02-28 09:14:35', '2019-02-28 09:14:35'),
(602, 'اسامه سليمان عبد المجيد عبد الرحمن', '29701092502691', '$2y$10$EnmtzbVjr/zZxbM353hFTebO79JXY9QlO5Doatz3h2TVH1ZN4D70O', 4, NULL, '2019-02-28 09:14:36', '2019-02-28 09:14:36'),
(603, 'اسلام ابراهيم مرزوق محمد', '29806062503631', '$2y$10$a.dIX.91Ea3yxs5y/twg5OMEgrq.0AG0.LoWhYv76CvxYXJFWSfzO', 4, NULL, '2019-02-28 09:14:36', '2019-02-28 09:14:36'),
(604, 'اسلام محمود احمد عبدالغفار', '29706252500534', '$2y$10$8JqnE3y50WwSkYzjz6FaBO.os59uaDrRhEMGtp3TGmWvq4nILF8Ni', 4, NULL, '2019-02-28 09:14:36', '2019-02-28 09:14:36'),
(605, 'اسماء جمال محمد خليفة', '29804292501367', '$2y$10$Itao21Ogt6d4kQCJXwqQce/b.YUnl6baftHmIhAjScD/EmlNi7KiG', 4, 'TdCK6iysTE4ZezXywo0kxUZotRVmGeIwa70IDWQTKOlKbHxKCdyn93fJkVpL', '2019-02-28 09:14:36', '2019-02-28 09:14:36'),
(606, 'اسماء سيد حسن هريدى', '29712202503224', '$2y$10$KCdZ7Dg3dbnD7IHxjidshO1gioS4gGzQyBNIU5yHfQO0AxxMA1xoi', 4, '8ibzaRhoZ2MFL8C2EY3yaJD1g9tFI475JE5lVVTabIZ9edVQdOdx70P9JGUa', '2019-02-28 09:14:36', '2019-02-28 09:14:36'),
(607, 'اسماء علي حسني سعد', '29701012426485', '$2y$10$gvpoJkt3U2twsfGjfe.kTufogJHTHSwc38AiwWMxWy4DfVrXimgnu', 4, 'XxOTfxIsDrJa6x8GhoHo46LbSxpQQfKmtALDARvgFunojkjNXD3NxClTqzfi', '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(608, 'اسماء محمد حسين مرسى', '29807012509243', '$2y$10$26hJzz1oAPE1uotaRdIZ..Y9D90FqxQjIOgTKWLqEdLQK5q2JV4bK', 4, 'p56dOHa0v2cGOQmF6HBG7J8hHUSQW83N1i6g2ysSpVXQZen20AraQo9gUj4Q', '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(609, 'اشرف رشاد محمد حسن', '29804042500292', '$2y$10$0S6y/x0NwZUG2xIkz0tHnOtlCfEFWFNEESOFS8ArnyhBqkDveGnNy', 4, NULL, '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(610, 'الاء محمد محمود احمد', '29705152500087', '$2y$10$vfxPuOm8yGohG85TokLNDOnYVa2VVnMBoeiZyjzZYBUGcl.9kE4/G', 4, 'GJUHmMB1jez41zM9GErS8tDrNsnyN4NOq7yWQR6xOqXA8ljEpJY4mRXPzzgW', '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(611, 'المعتصم بالله يسن على حسين', '29809132500374', '$2y$10$.yMe/49DF7/HGr7UnEzxeudQTzBgXNnrsYQw.gpFXCVeoMByAsvzm', 4, NULL, '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(612, 'امانى صلاح على محمد', '29807192501806', '$2y$10$AzHwXeH1.fvAmASBC1Pc5uBEBg3TCXBBPMRF7yeWSaEdy38aWJcn6', 4, '1Jerpqg5OEpSBZhpJ3879CFcKb8P9arMMCpYMfyqcCe2eHreEy7D1PNtRqq5', '2019-02-28 09:14:37', '2019-02-28 09:14:37'),
(613, 'امنيه مصطفى عبدالحميد عبدالرحمن', '29611112500225', '$2y$10$X8cXfViAOWllHGeyKf2m2uTuNw3eT8HyiCqN5d7hXvytvY4/Vrh/.', 4, 'ogn9OSvtST7ntVZaXbunuIeFJZows8x0QaIRq8VOwi7GLQkjUynwgIEugi3F', '2019-02-28 09:14:38', '2019-02-28 09:14:38'),
(614, 'اميره شريف عبد الحفيظ فرغلى', '29807062500085', '$2y$10$H1To/GcTAYPmHjG/wBQLP.y4osNK7EqKNBWf.GDW2nN7jGsOhELqi', 4, 'opcsokWhzmI6KdhK3m1RgmaNdemmGXXP9McB5y3W4jZdV4Elz2Al3Bsa8Qu3', '2019-02-28 09:14:38', '2019-02-28 09:14:38'),
(615, 'اميره عادل مصطفى مبارك', '29610232500141', '$2y$10$cFIuxQsgeE6383J7nXXxY.EwluiL467YXs1VbG5KVL1TeotoQpT8O', 4, NULL, '2019-02-28 09:14:38', '2019-02-28 09:14:38'),
(616, 'اندرو صلاح حبيب يعقوب‏', '29701012505512', '$2y$10$QJ7BpQb3Kpp8XzQKqs2DJuG4/yKnBgQdfxXEUAEhx39iAQPoIXKWC', 4, NULL, '2019-02-28 09:14:38', '2019-02-28 09:14:38'),
(617, 'اندرو كرم فريد جندي', '29710063200111', '$2y$10$F.0UeaSVhGLhzc24eALj..6DvthJRpMPUGBoAVia4qjW.7FIu8vTe', 4, NULL, '2019-02-28 09:14:38', '2019-02-28 09:14:38'),
(618, 'انغام خيري على احمد', '29709072501908', '$2y$10$QiY9mgT9h0eXiSjy9FmY/uR9tRQKJVNSiCOoVuR3S7dDaJV8p5h8W', 4, 'cSWGE2IOLEODUy9IBUOHa868q0IVWWO7nPWUxzl4Kbzi0pE1n3JTsCz3zMhL', '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(619, 'ايات محمد عباس حسين', '29703202700802', '$2y$10$7cStehnZy8br3jTj6ptHBOnJOmeT.RhO/tigCLCGKW.SIR0ggbcLm', 4, NULL, '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(620, 'ايمان احمد على عبد الموجود', '29804112503243', '$2y$10$Nro0./Gu1M17GkyjTscOxOfeaqUfQMYX0yp08EasqfyPg1UkCY16W', 4, 'jsMzhtbedhuAq6ZECbonNYDLcT9tqvl8CjMKhnNAxzvuUWbP1wJdpCGWiATQ', '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(621, 'ايمان السيد محمد السيد', '29801012511746', '$2y$10$vUD4peD.sFBNQYeEATVyAemRtO7g3HpjlU1oR8BR2oPDhq5YQD1Wu', 4, '3bgf83l16xkx1VJsI1rzszriXpeE8tSmaK9o7AZWZk2gJPAYflXU99puM1nL', '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(622, 'ايمان محمد عبد الرؤف سليمان', '29706172500705', '$2y$10$GQTJ3Tc7N.icV7Wo2eX.g.DjldmpIw/XGwVbHwnlQV7iFPJZ4zt5O', 4, NULL, '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(623, 'ايمن جمال احمد زيد', '29806082501294', '$2y$10$3dp/MoltMlHwmj.b/wvxteRXoJnTR/cx5nh6KB5H9f2VYIYBIKcUW', 4, NULL, '2019-02-28 09:14:39', '2019-02-28 09:14:39'),
(624, 'ايمن عاطف عطا سيد', '29706012508939', '$2y$10$XM6InXrmW35wR./Jx0Fh9.8V4LkWVIx9U9w1xCWQ3Ohw9rEPF/I5e', 4, NULL, '2019-02-28 09:14:40', '2019-02-28 09:14:40'),
(625, 'ايناس  حمدي  سيد محمد', '29703292500505', '$2y$10$FkvVsoUfRWjEj4.c7FJI/OFX3uDVmhcvoq/LY5t3HKZGEjy05Hufm', 4, NULL, '2019-02-28 09:14:40', '2019-02-28 09:14:40'),
(626, 'ايه عاطف محمد عمران', '29809012508461', '$2y$10$kV4kugNHcOGXtbyy5A0wj.dL09cn66h59wsu.utN1V5mtpZ28C6.6', 4, 'rdc82DQ3exlGEJtgYEN0rXALV677ZBh71EboYyjhMZoXJ6J6EGzBjl933D0g', '2019-02-28 09:14:40', '2019-02-28 09:14:40'),
(627, 'بهاء وهيب فوزى بباوى', '29712092500071', '$2y$10$p6MXpuMeFuTdGm54DxMeO.zCtaxMSYj2Bep8ZtGu6E/GqvhBnnaxK', 4, NULL, '2019-02-28 09:14:40', '2019-02-28 09:14:40'),
(628, 'بولا صفوت شنوده ميخائيل', '29710312500571', '$2y$10$BjXckj2SCOQXoeHT9wfK2uScZgY1Qzr9GxFJNtktXBJpCMYhTMjsu', 4, NULL, '2019-02-28 09:14:40', '2019-02-28 09:14:40'),
(629, 'بيتر شنوده عبد الشهيد جبرة', '29806232501336', '$2y$10$wIHLHS9L7UjP4tEw8OHhde3zJjcWXJwObiSLADGLYQLhmVfFCXDWe', 4, NULL, '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(630, 'بيشوي صفوت وديع عبد السيد', '29808242501914', '$2y$10$IcN4kfQQjp62ccveCsSD0O9Dnq4bOAcO1lVlFEIGsu2C/M5DastQC', 4, NULL, '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(631, 'جهاد محمود علي محمد', '29609212504185', '$2y$10$s4jU1jLFmROre8fvutiqaexBYvjMknM7QbBIwn4YDE/UHxkh00T9W', 4, 'zhtjdxI6kdWNtvr8sQriGcC6p39Gd3V9X8Zp5EM7qea5KH4oITWeKYTez6QG', '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(632, 'جوزيف يوسف جميل زكري', '29504022503399', '$2y$10$oy4BBt6jPKWai8BdIwxAXu4KhNwmKtUEDwRU6jZYJhGWAbOZMZIDW', 4, NULL, '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(633, 'حازم خالد صبرى حسين', '29706142500433', '$2y$10$nOU97P4pviaB2BCczpbKQufYWz0IIseQvL7qLHnuBFVp/TATPkfD6', 4, 'D2G5ZsOZu2sdpzHZz1r1RdCxuKSLmwzDrwyZU8VJ5Nhg06zcE7gBPkVtywrh', '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(634, 'حسام احمد ابراهيم فرغلى', '29709012504631', '$2y$10$jbsHs/sGTLP12Xp4gDskEedUT4/sC6iuPHr5RpQkfVcOGxyCnenPq', 4, NULL, '2019-02-28 09:14:41', '2019-02-28 09:14:41'),
(635, 'حسام صلاح حسين يوسف', '29805022502732', '$2y$10$nrXlwbwIBUlUTvfjrUqBbOvNenMK4s0NykTyK3otP.KYAz./KmyJO', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(636, 'حسام محمد عبد الرحيم رياض', '29804152500735', '$2y$10$/ECju6djWIRskSS.6Bpdde.ocICmqGaRjkhhaWWEdnQfXlHfOGFUe', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(637, 'حسن كمال محمد محمد', '29808012510272', '$2y$10$Q9X/1OEG78PfyNZYFMY2jeYkuKhVoS8xrNmPRrwmch5LbNPm9L1G6', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(638, 'حسن محمد صوبى كريم', '29601072501376', '$2y$10$BCJBW0br5MqBbuGQDVPb4u1AxE5ZZHxi5bGOdZPHDlIjJhSrX/AD.', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(639, 'حسناء شعبان محمد حسانين', '29809202502728', '$2y$10$4jC.xN3SqErcgmzCpcIbC.JZs9GwMeYxPI/U5IQAus.SjLnjBbZLG', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(640, 'حسين رأفت محمد حسين', '29802132501058', '$2y$10$.zOgcIitJQQpt4Ffnop/Y.1mroksjdFrxrTmOBPi.rQSsKLJ1/1su', 4, NULL, '2019-02-28 09:14:42', '2019-02-28 09:14:42'),
(641, 'حماده فتحى عبد الجواد حسانين', '29702122501071', '$2y$10$71M1CH0Qxzt.g1SghDqevu8CELtuJkSltE2Y25oklKVeORnJT3vli', 4, NULL, '2019-02-28 09:14:43', '2019-02-28 09:14:43'),
(642, 'خالد عبد الحفيظ احمد خلاف', '29808192501837', '$2y$10$OQ/QbFXKEtXpwalne.4H4ed2MomnF8vGweM0EWHCF8NqNDOggrDvW', 4, 'bTN445UyUr8xr2nLs8tzLDZZzsjQLkCtTG9Ky44L9xi0PgERLIAlgAWM2KDi', '2019-02-28 09:14:43', '2019-02-28 09:14:43'),
(643, 'خلود حسن ربيع صالح', '29804112500228', '$2y$10$PYoECFv0xSNI1c7PfewoF.cwZGiO3Cw8cIWUm/FoHeCrZH9TiqTMa', 4, NULL, '2019-02-28 09:14:43', '2019-02-28 09:14:43'),
(644, 'رانيا بهاء محمد صلاح', '29809012503361', '$2y$10$yixVgDLGY4ExrBybyHhGfOvn1H7P/L9V20NarbFQJK7ubbW7xM1ia', 4, NULL, '2019-02-28 09:14:43', '2019-02-28 09:14:43'),
(645, 'رانيا حسن عبد الحميد خليل', '29701012508988', '$2y$10$.0zg4sN.20rP/8bKbwVam.A7e5UmCAaYTPBxaLKROBN2x8rvrm50K', 4, NULL, '2019-02-28 09:14:43', '2019-02-28 09:14:43'),
(646, 'رجاء ابو زيد عبدالحليم يوسف', '29706202501507', '$2y$10$0q5pzTrA6SAXFRrP94IWi.3gWiTSQzXcHP/1Ih5NIO8mCOd/bwzt.', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(647, 'رحاب عبد العظيم رمضان احمد', '29804012502908', '$2y$10$lhguAAb92xfsORcVueOlQOw7ppEFVNExoiYUExjep0MgJD1RCAgj6', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(648, 'رفعت حسنى سيد صالح', '29511012505195', '$2y$10$kstAJ5zy1Tg3t9PxJu5VDe1NglGzRKrrPoxposV.PRPkuPyQ5DZs6', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(649, 'رمزي يوسف لويز جيد', '29804152503114', '$2y$10$OtNC3oM4GF0p3ZRR81SiKuD0wJQoU3VT3YOCxZUCHVz8D7ICKz2Lu', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(650, 'رمضان سيد حامد احمد', '29802012513818', '$2y$10$bFg/3ghv5bsnNSGbzVvgYOI7Kghei4A.PlrzfFZFeMuNq2nV3Uvse', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(651, 'ريمون اشرف عوض نجيب', '29808172501377', '$2y$10$FNL.7berYJonILZTNlAkDubp5wI3YTNesEKA0iMVL/l2KjFvrZ3YC', 4, NULL, '2019-02-28 09:14:44', '2019-02-28 09:14:44'),
(652, 'ريهام انور شوقي محمد', '29705242501589', '$2y$10$WQUg1h3at0Nxs/HFWCb.le1AqlBYh7mrtpan.DUc5CBywGXY4e4py', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(653, 'ريهام عزت احمد عمار', '29610012502828', '$2y$10$idz9bzUmWqIaQa8SAJWrpu8KuA26TM3IydMcGAX5vsTyzleBO8DLK', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(654, 'ريهام محمد محمود حسين', '29704212401222', '$2y$10$0OBR/YQmytIGse/bncwrde63mU83Alrf9OQLfNhaloaKFv8xcniIe', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(655, 'ساره مدحت رفاعى عبد الرحيم', '29811182502348', '$2y$10$RvOVjK8lJKFJiVFOplCFoOj7YUZKcuV8EMBNgOa9/i3p2ZNw0Twsy', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(656, 'ساندرا رأفت لويز جيد', '29710202503043', '$2y$10$9FkHyqxxaIdvyUZ9AiyvCOsMdglZ8P/cwj.QtTk8KIQ5Ny/JxhH3K', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(657, 'سيد كمال سيد ابوزيد', '29809232501696', '$2y$10$SXNbIygCsv6VemtxeSc6VOPhI8pfR8.rf/iM6j2ygHfXRDUuhSM1K', 4, NULL, '2019-02-28 09:14:45', '2019-02-28 09:14:45'),
(658, 'شهاب الدين حماده احمد عبد ربه', '29711112501536', '$2y$10$syE/UU283v1eChFsNoifn.IaHnqFko49mJndM80QwhuEJWZ/2KhPy', 4, NULL, '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(659, 'شيماء علي شحاته علي', '29701022400646', '$2y$10$GDcCpHs0RXBzNm1XdD66.OKGqLjTr2NG2qKYsrjXlCbsre38DaE5S', 4, NULL, '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(660, 'شيماء محمد حسن مرسي', '29610122502203', '$2y$10$LG/aNoXTgUdaWDFtaiulk.2mckLNo5oRsovePgBb5d7EPHqJp4wAu', 4, NULL, '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(661, 'صباح نادي احمد حسن', '29509252501923', '$2y$10$Ar/UhO/CcfU9MYPqFYtEM.ErBknUntWEKDYX6C7iZ14rmei.aCYZe', 4, NULL, '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(662, 'صفاء فتحى خلف حسن', '29702172502842', '$2y$10$ehX8U7rLya2R42QRr7esEuXI8LRsg7owsbmjAdEoWh7wIs3Lr5pBe', 4, 'quvfz4jkRVEE72Wzvs5el2RZlipmLhFFFz9J8fTFActCzgGiQUAQ0T8wcjRO', '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(663, 'ضياء اشرف احمد عبد الرحيم', '29710292502113', '$2y$10$AkzQ2Lw/7XjoDMYHemBtBOpiVWFhOcSb9m4tINFcIaivKrL8s.1jC', 4, NULL, '2019-02-28 09:14:46', '2019-02-28 09:14:46'),
(664, 'ضياء الدين محمد مخبطلي احمد', '111111111', '$2y$10$z9xhSbWgiznEIf7pcQ7N3OCZWRoKiL6vbpe23D1sGLbAvpXEA.guu', 4, NULL, '2019-02-28 09:14:47', '2019-02-28 09:14:47'),
(665, 'ضياء عبد الحارث سيد علم الدين', '29802232502833', '$2y$10$aIaI0/mO1O43L6pMH4olTuOWFJANBspeXnZp0vOabyVJhE7gW01BO', 4, NULL, '2019-02-28 09:14:47', '2019-02-28 09:14:47'),
(666, 'طارق خالد نفادى عبد الحافظ', '29808162502472', '$2y$10$6OCo2L7FkP8sIZvZ7eHDUuV2JxO3tm414mBTc2g2RAzuGIRa7vO7y', 4, NULL, '2019-02-28 09:14:47', '2019-02-28 09:14:47'),
(667, 'طارق محمود عبدالرحمن خليل', '29606062500379', '$2y$10$w7BRiplVcm7kXmHN6V9x7u8CK6Y1OVFCNVGkl2Td7xFzMOUvQVJjK', 4, NULL, '2019-02-28 09:14:47', '2019-02-28 09:14:47'),
(668, 'طارق نفادي احمد ناصر', '29612012501531', '$2y$10$PsZSvhXcjT5nFX/kRNozfeJ0F5K3tVigfMeyQv.CasOXVDJwwLVxe', 4, NULL, '2019-02-28 09:14:47', '2019-02-28 09:14:47'),
(669, 'عبد الباسط ممدوح محمد محمد', '29809222500799', '$2y$10$bFd1R.VqkPENsv8gKYO.iOkH.IcDE4Vio/E9ukz32Ljo42L8sSAcm', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(670, 'عبد التواب عادل محمد عبدالوهاب', '29712122500674', '$2y$10$Uj95kGx0rt2HhcuLDB4qpe0lv.rO4Tc0f/FMrkrQvl/y.xoziDf/S', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(671, 'عبد الحميد نادى عبد الحميد محمد', '29610272501175', '$2y$10$Qc2Vsb0Yt1CXEmF436nDmePvS3z7VLJOmd27JoWKyKxWb0woKUWky', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(672, 'عبد الرحمن اشرف فتحى محمد', '29803132500899', '$2y$10$EKsqg46pebOCbtFYwBKjjev0fHGe8SfDWHt8I8buxbgcNGfjKlqUi', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(673, 'عبد الرحمن بدر سبيع محمود', '29809012502179', '$2y$10$D7LLuDRHfHP6r7hgQrr3NOp8JoPgxqB0muUJVuqmgIStKCvFd6LLi', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(674, 'عبد الرحمن حسين احمد شحاته', '29510152505997', '$2y$10$q8M.DDqQ95ShT0UJXRjAvOt3IxhL.VmwmLaqC71S3.gzt2YoWFd0G', 4, NULL, '2019-02-28 09:14:48', '2019-02-28 09:14:48'),
(675, 'عبد الرحمن حنفى قطب ابراهيم', '29807062500255', '$2y$10$zA8U4UtTDR.L2HEo6kPuU.vtP3RMvLObcxDydAxZ.gD5SzJP3N.Re', 4, NULL, '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(676, 'عبد الرحمن عادل عبد الرحمن احمد', '29809022501111', '$2y$10$rVUAvTTtFhv8gD6NUR9s1.4Y.6g55SflT0N9Ag3YxbEVX3SK6yGAq', 4, NULL, '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(677, 'عبد الرحمن محمد عبد الرحمن خليل', '29805252503011', '$2y$10$XeHw8gb/tZRrh7OEGfVwLe9i8MeZsGmjXhNX2XZoCSrRqYqmjYFqG', 4, NULL, '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(678, 'عبد الساتر حسن عبد الساتر حسين', '29809072502895', '$2y$10$LofZKRu5ds0UvkxV4JfVhewGieSpSKBpb8RuU2X1He3Ta7HeU6eJW', 4, NULL, '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(679, 'عبد الله محمد جمال على', '29807022500732', '$2y$10$QtOfIUNAUNAycx3LTnwjUOKG9zwtDa1AmKaczVBPkwMYX3QDIbChm', 4, NULL, '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(680, 'عثمان عمر عثمان احمد', '29711072500337', '$2y$10$hGT1nVhDQwbUUHWOe7d6dOXn3o8qdiSuD9BhW.8mH3kvoyoCycM.O', 4, 'ocSJHdtYm7xw6ROXShB89t5pDZYblsYcPYAlq1IKRYL3ffI9T4XpLx0HWk2p', '2019-02-28 09:14:49', '2019-02-28 09:14:49'),
(681, 'عصام جميل حسن عبد الناصر', '29711252502311', '$2y$10$RBzVAb92.6wyH3PnAZIhGO3Q5yeqZGPSGddZq6a3UhlTrn8aHrZFi', 4, 'H4r2HnC0OCr5tRiiUQjFucCVNzIprGGWcFOj9DxKQdVlP7n2vmJylvzGE4wl', '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(682, 'عصام شعبان غانم بلال', '29612142501095', '$2y$10$sg8jUo0upl9B45zFiO1Gv.mL/b1rTZ5bPrBzILdbR9FyLmHxDG9WG', 4, NULL, '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(683, 'علاء الدين السيد  عابدين صديق', '29801012635992', '$2y$10$AxeUnj9loWlqiriPo5LfyOUsNyFZE0WWZYsBkokyQ6u/4vv10AVtS', 4, NULL, '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(684, 'علاء الدين ربيع سالمان احمد', '29712022501738', '$2y$10$hoAvDgvAMxeuP7qqJ5FIIOCx8WdnMXDbI4phluPpG70I8Jh1soRdO', 4, NULL, '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(685, 'على احمد على حسين', '29712012509757', '$2y$10$7rZLNDScI1idZAgqptcq1uGbEJEqmnLjU3ze1ptp6mlwcL34W4roC', 4, NULL, '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(686, 'على كامل على يوسف', '29707072503975', '$2y$10$O0hd67j4GC10ae9YAdi5d.gAdaTjj0ZH988Xhvh79Pf8GJ6iiKBNu', 4, NULL, '2019-02-28 09:14:50', '2019-02-28 09:14:50'),
(687, 'على مدحت على زيدان', '29609012509794', '$2y$10$w8csFZ0lF8h1JTcfvbnsku1CbATGagVHOzCTPLYGbSagWIYFh3Ify', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(688, 'علياء صالح على ابوزيد', '29802192502321', '$2y$10$Om500eSrE44h2VmLc5EvSOwZCW4WjVn3EQdR1DTfmpqDoTNtDTH8G', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(689, 'علياء فرج عبد الحميد فرج', '29809192501809', '$2y$10$i7E9n9TgTCBLsUIsdva0yuPEtYzRU1tkS3Oz4nCtisJBD0meGCK9m', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(690, 'عماد زكريا مختار على', '29704222503376', '$2y$10$6tawLwybwA5hNN9XqNd5SuGsXrf4q6t9xl/vkgQ6D2p5/zywErzPS', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(691, 'عمرو عادل راضى محمود', '29712142502436', '$2y$10$WbLNJ/MxZ3FcbpMb4P6sF.3zdh3j06..AiCdsityGc/C6G7bgK/.6', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(692, 'عمرو عبد المالك ثابت عثمان', '29803012504955', '$2y$10$8VgTZq4vei8qs14G5R2U5OT5NuhCulZvNksyTfBtyOXFH2dUxQz5K', 4, NULL, '2019-02-28 09:14:51', '2019-02-28 09:14:51'),
(693, 'عمرو محمد محمد نصر', '29704062500375', '$2y$10$Q4VHlNFq0uWwF3jlI2T13.u5zSNFGqGwzbg6suYilGxeli6tYOasi', 4, NULL, '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(694, 'فاطمه الزهراء رأفت عبد الرزاق احمد', '29708282500223', '$2y$10$2jc3eNjn5jTG1D2koq552.jrJe5M.e2hN6/.jfUNvKRaTeFjpUM3C', 4, NULL, '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(695, 'فيفيان راتب بشاى بشاى', '29804122501761', '$2y$10$57/OcyIY4wqbSRAHjpkJpeejt.opwXGI5DEpGYhYaguQiPdjVSy5a', 4, NULL, '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(696, 'كاترن هنى ادوار تادرس', '29712062500424', '$2y$10$5rPknlJESNK/alxPhI94Z.oPw.4nLCyO1kYB56V67kiXlK7LLdXpq', 4, NULL, '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(697, 'كيرلس عاطف رياض ميخائيل', '29711032502159', '$2y$10$VP85PifxZ/3Wst0smBjSSeJcsylUjkixZlfTc9wrBsEyTaZIUTHQS', 4, 'yCKWj07JqT65ShAiHtm79VNoWLTk1yh4yniSluiibsb3pVP94Ko8GqJzosqT', '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(698, 'كيرلس نصرى تاودروس توفيق', '29709112501035', '$2y$10$BcdVl6OXtJAbviraWo5fQOxJax0TGIhcU.znyXE00qOIOQRzI/moO', 4, NULL, '2019-02-28 09:14:52', '2019-02-28 09:14:52'),
(699, 'مؤمن بدرى محمد عامر', '29704122501759', '$2y$10$mw0t54ofhAcP0FG/KfXAbO8f8oZgvfQo4vzzXRzAzFPqSHXkWQp5S', 4, NULL, '2019-02-28 09:14:53', '2019-02-28 09:14:53'),
(700, 'مادونا عدلى نجيب شحاته', '29712292400305', '$2y$10$EpxYPcznLIe9YwZ.mvKztOVd2ya9a6SvHYbza5itHrjCznb83CmHK', 4, NULL, '2019-02-28 09:14:53', '2019-02-28 09:14:53'),
(701, 'ماهر كميل جرجس اخنوخ', '29802212500893', '$2y$10$j3zmyDdilOEatFbl2d1YmehkJs.YIUvBUTOzzTWaV1SFdw6zc.8tK', 4, NULL, '2019-02-28 09:14:53', '2019-02-28 09:14:53'),
(702, 'مايكل زكريا حليم نسيم', '29712012509552', '$2y$10$pyeGDAbM181/Pu/Aip2/w.2WGRBlpfGbZATRwN10MIuyINcBrppBm', 4, 'cbPvwTQNyjXRzBqubHw3QvScGRBEfnDMN0yI1rPiAsHIqCc9ab9lJ445S7ib', '2019-02-28 09:14:53', '2019-02-28 09:14:53'),
(703, 'مجدى ابراهيم فولى حمدان', '29712072502816', '$2y$10$f5AHPe7r2dntG.wlwtffMuE4yrHoGF6NJv3dcLzjFoqfbzz0teh3K', 4, NULL, '2019-02-28 09:14:53', '2019-02-28 09:14:53'),
(704, 'محمد ابوبكر احمد عبد الرحمن', '29805182500337', '$2y$10$EDqGwDles8Z6j1N9m/zTiO.wSfAsdX5Q8jNwLdG6qzlfkvhekRm8i', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(705, 'محمد ابوغدير عبد الامام عبد النعيم', '29810012504978', '$2y$10$gLJQstowmIOq0KFXE4te9u5zm4812cX.8oxZ8fVdzuAzzaPc5auxq', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(706, 'محمد احمد حسانين عرابى', '29809072500299', '$2y$10$tbZR68NkmuFKcTlpQZHz3OCifBhRpWEjf97VwZr.SMeMqq1/wYbKm', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(707, 'محمد احمد سمير دياب', '29609212504037', '$2y$10$JFbmxsvRrBzWxh.m9OzgMe7wL/LP.ld01oiEt8/0e/Rk5aLYv50QG', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(708, 'محمد احمد محمد حسن', '29609082501715', '$2y$10$5bKx7P0PBjDOS6.El1MAoe1lqz609l1.UerLsFYOhT96ChFZyidou', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(709, 'محمد احمد محمد نصوح عمر', '29701232401912', '$2y$10$TKNqx5TU.L5tgqplm6Ca3.eZRUnnHopeEBFQgkh1Q/mivAjDhI4X6', 4, NULL, '2019-02-28 09:14:54', '2019-02-28 09:14:54'),
(710, 'محمد بدوى محمد عبد العال', '29701252501956', '$2y$10$GX2dyEuqfsHgCioLapuJZOlU5.FWV0.dkmQoYlPvRkLQjNtAf04c6', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(711, 'محمد حسين على محمد', '29803072503273', '$2y$10$mV8PYgYtWifsDODBOgGGBuaG2lOx4TxtASygMNliZKLCBwJmnf.76', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(712, 'محمد حمدى حسن حنفى', '29801062502535', '$2y$10$wXBZD4.r2cUP/qZFagFrfeoTn1fWCuTLM3LNfiv.SrPUaKq5Q2j82', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(713, 'محمد رفعت حسن ابراهيم', '29807042501956', '$2y$10$tlnpgtYw/M911.pCkTsBk.nSOdBKoV9p/ivqIivFpXZmi7oW2Eo8e', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(714, 'محمد سمير محروص فراج', '29809162600152', '$2y$10$Q3y8LcXCGlZok4Fu0i.ojeMmF0CiQcj6Sk3FRMeYiC9sgDCq1dZ5a', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(715, 'محمد سيد محمد حسين', '29704052502752', '$2y$10$K4xjvCGJJ7yavZUMXgVn1uNqa5Gv3ayHTx.ES9mbTDUO/M3OSMlo2', 4, NULL, '2019-02-28 09:14:55', '2019-02-28 09:14:55'),
(716, 'محمد شريف احمد محمد', '29808162500135', '$2y$10$ckVa2xs6TQb49dYoOtNnduoOPdw.CaQxpZ0pwkDh1WRqP5N1eJsE2', 4, 'RW8PVO6aOJ8LKXMo9XbiXadNhX7UQktcUQq5QvIN2OiighzBDhNkUB33MfKC', '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(717, 'محمد صلاح الدين عبد الله احمد', '29809032501497', '$2y$10$uZJHrjhPfpienLMtTGdiwebfgUuWMURFBeJd0F.ZEFeWSGMMKTON2', 4, NULL, '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(718, 'محمد عاطف حامد عمر', '29805282500393', '$2y$10$W9YtL.C5w4khBBXEFnYGtugTcjnlERCmYF2pIRJ9qCi4wnuuY85y.', 4, NULL, '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(719, 'محمد عبد العزيز قطب سيد', '29804102500238', '$2y$10$u4z9kXxnn8lwgRKFNKnfcOBasSIF1Qp.xRFyCxrw/nPzOVZJOPuZu', 4, NULL, '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(720, 'محمد عبد الله قاسم علي', '29703032500579', '$2y$10$aUStlHoYr93R74B5ht.RrOCsGYnBD/1OEIFj0P/3zDruhwd22y8SS', 4, NULL, '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(721, 'محمد عبد المحسن عبد الرحيم مصطفى', '29804102500076', '$2y$10$WhXH8U25HtHwUD2Mg/Kh2.2iU49OU7fmyCUNOWepcWHpsu3hlVth.', 4, NULL, '2019-02-28 09:14:56', '2019-02-28 09:14:56'),
(722, 'محمد عبد المعطى احمد عبد العال', '29808312501178', '$2y$10$/03S4BqmY7oSpc3edLEG6OahNVPiDxapwPLA9hQpX0gAmrVWdgQiO', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(723, 'محمد عبدالعظيم عبده عبدالحافظ', '29612272500392', '$2y$10$5FnIN.RmmoehG.RyM.3d8uurWhAGXsPxnrz7Bj34.RJKrEn8GDNUC', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(724, 'محمد عطيه محمد حسين', '29512012503997', '$2y$10$Az.X.t9rwWjC79pPKSvhW.7rTCcm9XJ38HKZhby0hD5gj8AYFxG3.', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(725, 'محمد على عبد العزيز منصور', '29809152505038', '$2y$10$bv9oI.fDRs1WajOpKpk3y.MnInwNmK9ebUklQwxgA1JAqQ0HsbjEG', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(726, 'محمد على محمد زكى', '29606022501091', '$2y$10$45WXNlPRN2iOFgu/p/eUduXsIakNArxR.GNevI5saDMKOILbRDGAa', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(727, 'محمد على محمد عاشور', '29808012501877', '$2y$10$B2fZ22kyqxg10nZZkWT0puO1h/N4YeoNJO62zMbAVyNExoiqH6rMK', 4, NULL, '2019-02-28 09:14:57', '2019-02-28 09:14:57'),
(728, 'محمد علي محمد عبدالعال', '29710242500395', '$2y$10$JteN7z8W6xlMtBU4FHgE0.4wMZ6L/tTLTpeZXDoUX0H/pND6Ov3zS', 4, NULL, '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(729, 'محمد على محمود محمد', '29711072501074', '$2y$10$RMZhf10fCCuT6.j69fRVU.KsBCd/XnwlNI/U2N3KH58z3tWsGMFyi', 4, NULL, '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(730, 'محمد عمران حسن عبد الرحيم', '29803222501657', '$2y$10$kY99mbIq3vpfSWvcZDg9I.Cn8d82W1WYBY8iGbfh1rEJtdSQOS6B.', 4, 'BBZ3lwYEE472Hq22m6O0sebpQjqt6LqGVkoYn9etLruPrh4GkFdc6kfv9uYe', '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(731, 'محمد كمال هاشم عبد العال', '29805022503933', '$2y$10$mx/jUUgqynDjQR7Rp.JeE.wd3lOtJ3.gzdRSqmWMiFj7swNrFp1CG', 4, NULL, '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(732, 'محمد محمود سيد جلال', '29512022501133', '$2y$10$9RS7mCccWkOGbbYBthtd7ejIFv0bSghHL.VnBngjLs2QyxTlVQaAm', 4, 'hmwYTRmFuOGpt25HckxAM5Dz6OWlwf3rJBO5TwkdYDqKL6IM0h0KkZtUPKFn', '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(733, 'محمد مصطفى حسن عبد العزيز', '29803092502796', '$2y$10$lH9bOCkVM4u4B2.HJqPTgONncDnPNTzp0/ugoacomDI9lo5OLurNK', 4, NULL, '2019-02-28 09:14:58', '2019-02-28 09:14:58'),
(734, 'محمد وحيد احمد محمد', '29711122503197', '$2y$10$LDxeRFoKx77u58DVXRm65ObxKGTGDvj9akCSvJL92IyDuKYAttYBO', 4, NULL, '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(735, 'محمود احمد عطيفي داده', '29802282501391', '$2y$10$9ZYQGAEV9K5wP1bQ22EiM.0zJvRKzeSYlVcmBiMslWjgXlsTh./SG', 4, NULL, '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(736, 'محمود جمال الوردانى السيد', '29803222503358', '$2y$10$W6OMbVjdBRadMelr18KjBOmEE/BUNVVqIQGaqBoBlcdlwXB5E.3lC', 4, 'roOoljxrafI4lZZjAqY0KdZLpVcyx27HJtR8fgHKtJZ8V0Vu4Z4W2aRVlARN', '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(737, 'محمود جمال سيد ظاظا', '29805012506578', '$2y$10$bnmHdGVg1aE/NiJBraCoOOF3D14ZcDZ9wNuwAsLxcrCe.CoWJQHoO', 4, 'K5HnJPsoUH9QBRTmYVeQKzc1MZkFrISxc4w6wBbM6eyrEXFde8t8QR6BRSFw', '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(738, 'محمود جميل اصيل عبد الغنى', '29804162500491', '$2y$10$VxGs9VjRyeSlgY5ikNk7WOTTnBnb0x4UbIqGN.Ex8zqe1m1ja.swS', 4, 'KxUW1EYUr10hxzR3RkgmYzrlhyc27rCoHdYFq5tFm0IfUxmpfhc5Mexmf2Xi', '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(739, 'محمود حسين قطب محمد', '29701182501074', '$2y$10$W6WaRie.mUQ/ETI5dCy1Ru.Jq/SDwrP.sBebYguSGtRjJ7.Aoc3RG', 4, '3Bm5iHFAXHyfN8kVbPWfe9hmboxsfs6RObzmZ0sfuTS4GYgwjGnyjDvoOTFI', '2019-02-28 09:14:59', '2019-02-28 09:14:59'),
(740, 'محمود دياب محمد دياب', '29809202502477', '$2y$10$uhBTcvunxAe4yQcc7M3fIu3PlRQU6OZlt73MPqlMBQPV8f6tmlyuu', 4, 'q21J9sgkDaDJCqiLEf8dZAWozMdhQSDJenKUOVvtzyCAYBTVu0038KlKjL0Q', '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(741, 'محمود صلاح محمود محمد محمود', '29706142502011', '$2y$10$45E1wBsAk7P0FPm/e6xhFe.vkSLQ1JID1r0dyYabi0PETmap7vO6W', 4, NULL, '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(742, 'محمود عبد الله عبد الحافظ صالح', '29702122503171', '$2y$10$VvSdUHaKj/A5i3zcMFUnseV30/P5WcSJxP4myUqnV4ZE9338e.e76', 4, NULL, '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(743, 'محمود عثمان عبد الحسيب عبد الظاهر', '29708252500679', '$2y$10$sQ3wapBuZuGUkHmNzhTUseDmxKxRlTUx2x.KTCtb3.k7821/m2dGe', 4, NULL, '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(744, 'محمود عصام محمد محمد', '29804302501239', '$2y$10$ZDb/0N5TtZG7xpBzsYhhwusJmILiIqPlt/NOMHHZrNbvDtyxwXti2', 4, NULL, '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(745, 'محمود عيد منصور على', '29803212500911', '$2y$10$re1skJ5BhFkx5.5pJOtPL.fxlfCntnH29Q4MAp6v.7NoQacUljRhy', 4, NULL, '2019-02-28 09:15:00', '2019-02-28 09:15:00'),
(746, 'محمود محسن عبد الكريم احمد', '29805082500437', '$2y$10$f9RZO3QVt.F9H6ezwxbgRuZJKZdHEChutCZ0SLqgsMbFhHNMQ5p2y', 4, NULL, '2019-02-28 09:15:01', '2019-02-28 09:15:01'),
(747, 'محمود محمد محمد مراد', '29712122501379', '$2y$10$aVUx5YsREQNk1i6u/BI3eusRIRH6dulR9lazebJzGAYtIJ3RZRD3a', 4, NULL, '2019-02-28 09:15:01', '2019-02-28 09:15:01'),
(748, 'محمود مهران شعبان عمارة', '29810012515198', '$2y$10$IRFdbFv9LO4oQJ/r3Xs8L.FU5SbCWk845PGEK5dLLH.eVyiLK.4aS', 4, NULL, '2019-02-28 09:15:01', '2019-02-28 09:15:01'),
(749, 'محمود يحيى ثابت حماد', '29803162500699', '$2y$10$HtcRMHF4HonYymAbSu2lL.0XjaKERERUgXKbFlhKwSvHg8pgCRSvC', 4, NULL, '2019-02-28 09:15:01', '2019-02-28 09:15:01'),
(750, 'مروان عادل محمد على', '29808082505454', '$2y$10$Ha3k7VoGHZQifsYwfFTxeexCxpfGJEW85FYb2jngqVR0Rt8m3fbjS', 4, NULL, '2019-02-28 09:15:01', '2019-02-28 09:15:01'),
(751, 'مروان محمد نصار محمد', '29611042502934', '$2y$10$MOsld0CjvNr4m58W5rEY2Onr3.NEfN7VKqH0iyoB1Kehz/RxdnDIG', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(752, 'مريم عاطف قيصر القمص ابادير', '29708232501865', '$2y$10$p8H6FbtFw647DjeDtXbLxOzMZcYPAB7RpNzWmATFwcNwlLfGYXa9W', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(753, 'مريم ماهر فرج الله عطيه', '29802102501363', '$2y$10$RyxOcF7lWmQYcUBymHi9terw.MAJ.sQLNx6.YkCOSqqaE5ZaAtcHC', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(754, 'مريم محسن محمد المصرى', '29809012504848', '$2y$10$03hrxujjs65PnBsxHim0levTScR7dGX7ZMa3gV9d1oZodbkAUh1Re', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(755, 'مصطفى احمد حلمي محمد', '29709012510274', '$2y$10$6iT8tnUFlfIT3ga3st.Nd.MXTc5T.KRbfkGDW3.3s1kmmTZ0O7jEK', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(756, 'مصطفى احمد محمد حسين', '29808172500494', '$2y$10$977DMlV0t4MhI9J1MWnoSOw1M2L0Icr/anxi2T.cA2E3549ONHiQ.', 4, NULL, '2019-02-28 09:15:02', '2019-02-28 09:15:02'),
(757, 'مصطفى جمال احمد عبد الجواد', '29606042500318', '$2y$10$sjRnJjCgVRZVy89kaU718udrRiLMkfLRHOsRt1DSu1lN/J6g5/WGu', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(758, 'مصطفى شعبان عبدالغني عبدالمتجلي', '29704082500398', '$2y$10$EHQz2Zv/v9oPR6JiqaeR2uqr/tJUBPJbFkvQWd03lDx0PKk0Q/mku', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(759, 'مصطفى علاء الدين امان الله يوسف', '29709072500111', '$2y$10$F93bJ1EHbSm82MIgzwnEOOAJbytjLi4WPKcFqYNlFiBEf3a2CwSqi', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(760, 'مصطفى محمد صديق محمود', '29808012510396', '$2y$10$Nhj1sZtxQDQMAF8.JxC2Quj1fPXumZnF/Vy2HPlh9TcZMfNrXCqo2', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(761, 'مهاب صفوت عياد بشته', '29701162500098', '$2y$10$pBMc5Tj.Ps3yAwAN7O27/ucMcUl.dtJBRgn4A1x6xLXCmEc4PCVBq', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(762, 'مورين ثروت حبيب كيرلس', '29702152506868', '$2y$10$mTq4S.9egQzyhqy9jodp/eA2dpXqIdx6MQhBSEf8SK6XHdL0yQIEa', 4, NULL, '2019-02-28 09:15:03', '2019-02-28 09:15:03'),
(763, 'ميلاد شاكر ديب شاكر', '29803012500551', '$2y$10$1qv4aP3etmTwvmKEPGO3P.QORC2G3NSU.LTQJc4Gim/O5e8lk87bW', 4, NULL, '2019-02-28 09:15:04', '2019-02-28 09:15:04'),
(764, 'مينا زهجر عبد الملاك عبد المسيح', '29610132502058', '$2y$10$PsIlN6fj/wDYQCWHaR5//e7ZLHdEd8NAA.aRqsBoj75nXyyx/xgay', 4, NULL, '2019-02-28 09:15:04', '2019-02-28 09:15:04'),
(765, 'مينا ماهر صديق ابراهيم', '29612172500637', '$2y$10$SgeQ0a5/p/AMw/eXGLLMVeOWlNBBpOu/7Jc5hmPhx5w12emT/2n5e', 4, NULL, '2019-02-28 09:15:04', '2019-02-28 09:15:04'),
(766, 'نوح نبيه نوح صموئيل', '29803152500712', '$2y$10$dWrOWM.3lp6dOM6GMu9N5eo4NbVPKpkwV/5/vVTBLj8ufI0Za8m/a', 4, NULL, '2019-02-28 09:15:04', '2019-02-28 09:15:04'),
(767, 'نورهان حمدى عبد الرحمن موسي', '29707192502301', '$2y$10$SoK2K1tfNEKQ9imsFicodeVsai6EqaZ7tCK4ngib0lDieLgzkgABC', 4, NULL, '2019-02-28 09:15:04', '2019-02-28 09:15:04'),
(768, 'نورهان فياض عماد عبد الحكيم', '29709012500503', '$2y$10$fVuU6ZJJ0ozK6hHNbUYHfeLom/n4iSoV3WyE2JkF593CxlSa3KD3W', 4, NULL, '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(769, 'نورهان نادر محمد محمد', '29801012505703', '$2y$10$1ll5osoD2l0oxCNdZA36ROj90nq3kQyWJtgCoNgJwBjNkhEMYAQDq', 4, NULL, '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(770, 'هاله حمدى خليل محمد', '29703032500625', '$2y$10$Fxt.mMeUNhN9P4JkZGJapu7ZO5JGE3O913oGO.LYyU.MW71O9hiAe', 4, 'XjEBXn6YXw3esmtSgRTDVBszqtbnNQM0Y4LFopBJP2exyOTpXgjHrmCE4ROn', '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(771, 'هايدي ثروت عبدالراضي عبدالباقي', '29611122501424', '$2y$10$1lF5f6enE9lfCgAneOoBz.I1Qs1OfBFUjDliES174DRFewCkX4up6', 4, NULL, '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(772, 'هبه عبد الرحمن على فرغلى', '29803212503104', '$2y$10$g8KfSkAM3Kr/bLIlcnqar.s9fuh2sR7QrXdEIlXbeNnPHvVsP7DQS', 4, 'NpVRZpDSNSzJpJygRTo4qgFRo9sLV5436OWa4RqaobhqrzjahQRIx3LnKUOF', '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(773, 'هبه عطيه عبدالقادر عبدالراضي', '29701222502105', '$2y$10$peM0sUkdsb80.8XBVI8B7uLYlkOuN88c9cQmt6j6GibppII93PYS.', 4, 'xAp4gIv7a9wawX8anDnf8zdGKAFW4O4NampsWJHacZ9K0EqcVLOfGeSkSQPt', '2019-02-28 09:15:05', '2019-02-28 09:15:05'),
(774, 'هبه ممدوح على حماد', '29708312501041', '$2y$10$Q.AagS6ZMZk3uQHFXYulcez7yUXsMF1b9Ed9f.HJQbqXhRGnmd/PK', 4, NULL, '2019-02-28 09:15:06', '2019-02-28 09:15:06'),
(775, 'وفاء طارق رزق عبد الصبور', '29712022500928', '$2y$10$wiOqxX5rk4IWVppAqWpL5.fo/k5lrw157grTXxXQRbL8lyuwVNQe6', 4, NULL, '2019-02-28 09:15:06', '2019-02-28 09:15:06'),
(776, 'يحيى ابراهيم حواس كمبال', '29710202501113', '$2y$10$yaZ/cD4aiPMz6I5Q2KGBQuDy.nxtRRF.i6T8bv.kRG6YIiJNc4Yqa', 4, NULL, '2019-02-28 09:15:06', '2019-02-28 09:15:06'),
(777, 'يوحنا جرجس حكيم عبيد', '29804012503556', '$2y$10$mLPmt8ftgFhsljtSRbqwIe6jADt19L03WohPHGUrLjmcGk5HYIJI6', 4, NULL, '2019-02-28 09:15:06', '2019-02-28 09:15:06'),
(778, 'hala taghyan', '123456789', '$2y$10$EhBfUgQiIZPjlsT.fo0hwu5VrMa2NTL/8orls0IOj1.5KJwXvgWBy', 4, 'myhiiBTdsCHwJLEJELwy62ytzOmOsLg0tgStIADDXqwo5igMchuPtDtAiirq', '2019-02-28 09:36:06', '2019-02-28 09:36:06'),
(779, 'mamdouh', 'mamdouh@aun.edu.ed', '$2y$10$sUA8Dmg651PZ5LOtwXXVjOcIpO6ZM/JeDfl6uvlu9di2loioS9rJu', 2, 'f9k8GkRJCDvAoPSJ79dLqLexJUiiJsLsDui5MFZbcTa6EkYG8hxpjytPYQUi', '2019-03-14 12:38:44', '2019-03-14 13:38:27'),
(780, 'ابراهيم محمد محمد عبدالستار', '30001012507993', '$2y$10$yYO2WPaRXOMWN.lUkqZi..8V483gsdp7tFEZ2LSdXyUSqWzI7hWaO', 4, NULL, '2019-03-14 13:23:54', '2019-03-14 13:23:54'),
(781, 'احمد اسامه احمد عبدالعال', '30003222502857', '$2y$10$fgFByxSIwikuR13DC621MehI5Xw8P82jnfZZvLtj1HngA/BxaKV5e', 4, '3XikBHjxTX2LKkDctikwF3D7ueJcwsKzuJA3fOcdaUCPbXWbVBHH9dNfkUTr', '2019-03-14 13:23:54', '2019-03-14 13:23:54'),
(782, 'احمد خالد سيد احمد', '29911042501311', '$2y$10$PF3ZL/aMLvFV465QePkKh./ggqHn/M.tWzIZniko.U..frj.gE902', 4, NULL, '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(783, 'احمد صلاح صابر عبداللاه', '30004022601296', '$2y$10$HR4nDwKFCQ73eB9.Meka8eZWmJpXqVif8DItXwzSSs9sBbp5lzlP.', 4, 'P4mXKJNzOc0SWnHnp2xUDHTlJpu5uRI73DV8gqO28QbuUSE0DXsYq1kdI3T4', '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(784, 'احمد عبدالعال محمد عثمان', '30007152505131', '$2y$10$4Glp/EMOCyNbUipEENqDJOMu847pRDxNFCZzv66CKd91q.ebMwdIO', 4, 'SXVyb4RxnHgCpzTuyZKsXNdhhwXGwWZyQpHWVTllwmQaamAvD6o6WeMUBYfA', '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(785, 'احمد محمد محمد فرغلي', '18741', '$2y$10$NHbIud5.ex28Vk4JUUFnru//8lcDOBmZ9B9/mZ1Q1rFq6KDP6ApE6', 4, 'CnbLklJUFxMLYJyn3boGn7UGgsn30LLdRXQJB11RIHykXkil2gIkiL2Z2bc8', '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(786, 'احمد محمود احمد امين', '29812082501499', '$2y$10$qL0smnLoY4MyKYGTiXa6B.FF5bPoMqk7AOuO3Wo3Zw0yCybn4btjq', 4, NULL, '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(787, 'احمد يحيا حسين محمود', '30012202600673', '$2y$10$4xr5AiUdAn1Np57.jK0CC.KZ7B/cr1PJa4aGFm9v9tRDYcRfa.IH.', 4, NULL, '2019-03-14 13:23:55', '2019-03-14 13:23:55'),
(788, 'ارميا نادر حلمى شرقاوى', '30001012679212', '$2y$10$uNYJ59g7zTtQRR65FWlJcu1R8UkObWDQLGnckH4OEdwrqI50wSSSG', 4, NULL, '2019-03-14 13:23:56', '2019-03-14 13:23:56'),
(789, 'اروى احمد فكرى محمد حامد', '29911082503449', '$2y$10$GFV15w3MXnBh8k1Xg7s96uoff3utbLoh.pLv1wjwmcNamhy8MeiHG', 4, NULL, '2019-03-14 13:23:56', '2019-03-14 13:23:56'),
(790, 'اسراء عادل على عبدالمتجلى', '29910082400902', '$2y$10$ep1rGwOGa4DiMqG9g/qFP.pxrehiqsljBqAtk8ZRYFUCCPnu1SPZW', 4, NULL, '2019-03-14 13:23:56', '2019-03-14 13:23:56'),
(791, 'اسراء غلاب ابراهيم س', '29812012501548', '$2y$10$KxiEdN3t5mdMH7ipYQ5C8eGKYuxzJQO4H5gh1JFcY9nqYm8khDyba', 4, NULL, '2019-03-14 13:23:56', '2019-03-14 13:23:56'),
(792, 'اسراء محمد عبداللاه احمد', '30009162603584', '$2y$10$4oivgyNobaEQfd2R8QJmFOqSGKnr62CIUYY.fQ3PEeY1xqFh7PBeG', 4, NULL, '2019-03-14 13:23:56', '2019-03-14 13:23:56'),
(793, 'اسلام رشاد محمود مصطفى', '30011172500397', '$2y$10$MGDcJcEFj0iOYunRP8FexOchfgnVvp2B3e2Y0RnitSszgnTyjpLc6', 4, NULL, '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(794, 'اسماء حامد فرغلى هديه', '30001062502909', '$2y$10$mmmJ4tOfW8S9HOgYs7MW2.avqqqxKSUbQbbxtmrB3hmYKskxbm9Vq', 4, NULL, '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(795, 'اشرقت ماهر محمود عفيفى', '30011292501508', '$2y$10$h/ugNjDJUpLq2mn4m1Q0suoa7dEPJyXaxkAf5yRA88hqHV8lpRS6K', 4, 'mK0HQ6JRcltxop59ogmTCxWpRLf22QtGXcWeipZunZbgS7awGIcfN4i7HbDs', '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(796, 'الاء ايمن عبدالغنى محمد', '30001292601566', '$2y$10$Ybo9HVEhEMTuvpFV/mIeGutRU0w14rc1Awa.wC9ySjwZ6v9k9izxy', 4, NULL, '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(797, 'الاء عاطف مبارك محمد', '30004292501129', '$2y$10$cPBORW0Ipcr5q4m4/Neo/uBivv5CaKMK.oshfaClyjG9IVC.xj.Tu', 4, NULL, '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(798, 'الاء محمد ثابت عبدالسلام', '30004112602186', '$2y$10$P6rsvQ2E7PI7XGlaosHTvOJCinUXi1reps94xnmNNgeuthBEo1dkK', 4, NULL, '2019-03-14 13:23:57', '2019-03-14 13:23:57'),
(799, 'الاء محمد عبدالعال عامر', '29912042500486', '$2y$10$muJ1CWmMnVRjiiDQHzK5TOfz8M.qQg.xgNaM9vQQHnyrp1WtxW642', 4, NULL, '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(800, 'الامير يحيى محمد الامير هاشم', '30006292500591', '$2y$10$9avwmTXpDliGrPJeBYp70erS5oAZ/bkoIB7kBJyRBPWULkYy8yRuu', 4, NULL, '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(801, 'الحسيني حسن احمد حسن', '98798708', '$2y$10$0mtnqoxusIJgXYbFknl/fuSGb9zH18Hg5SOE8WvMCkRT2JOoyM9mC', 4, 'Sy5sp2flwHHA4Cn31TAFxfSXFUZOXlblBTi3cXEYfchsRI4XgrJSQOwhAWCk', '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(802, 'الشيماء احمد حسن عبدالرحمن', '29903172500284', '$2y$10$PL3/fIiHdJhHR.wqblNSo.iVQ7Taeg2sBdtiGTqOCbMu90PEzc5V2', 4, NULL, '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(803, 'الطيب عبدالباسط مرتضى عبدالقادر', '29911022700814', '$2y$10$.tpbfG3zxxUiwH7iRDaoTuFqH7xaOBObn6CvIx6kw5LYBGZgpgHau', 4, 'CQfgEkLStg4rBFckImFaUCwVIPsxuTIqYnhyYAXhHkITJBdSJewpxtahyWz1', '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(804, 'امجد منتصر عدلى جبره', '30010012802919', '$2y$10$QbteUx5By7..zl3Ldmyb0.Ji8/4JPD3a0/Dhfp62rHk20TIg7m7NS', 4, '5j9ORTZ91Snv6s9dvTaRuHesI2KHFVUbjzukcOtm0nZuKSmFAlbPHzED9t0p', '2019-03-14 13:23:58', '2019-03-14 13:23:58'),
(805, 'انجي نمر توفيق بولس', '29903012502329', '$2y$10$APAb5w3vQrWswzI5f1bWPuaNzl8DauQajD1QJ4nUm.YI0OE7CLwI6', 4, NULL, '2019-03-14 13:23:59', '2019-03-14 13:23:59'),
(806, 'اية الله علاء محمد حسن', '30002052500424', '$2y$10$X/jfUhepQeOunzbWkKp5w.KEJKRiZnyd4aafyRcoF1c9LCKTH99WK', 4, 'lvZANBr9ekev3FLVyDBB7qJJDPqG9NLGHb5qwGAnXQktnI1hblZOn0OzeFsR', '2019-03-14 13:23:59', '2019-03-14 13:23:59'),
(807, 'ايرينى سمير هلال جزيري', '29910202502267', '$2y$10$OcgSycQBtoEs/XCDfWb8J.3QhLVdyBYeQD276Cw2hy3r4nxbKynqq', 4, NULL, '2019-03-14 13:23:59', '2019-03-14 13:23:59'),
(808, 'ايفون مخلوف عوض الله جاد', '29905132602028', '$2y$10$m5G2ry3gvJN9JKeqONdCqudpsrr24bDg0tERF175pXFzdj07tiPra', 4, NULL, '2019-03-14 13:23:59', '2019-03-14 13:23:59'),
(809, 'ايمان حمزه عبدالرؤف محمد', '30011243200063', '$2y$10$.RySNE6hfP6XrLe1L13MkuzQINxaNyIpRnuDBoWQEdA2wUsQnIvAS', 4, NULL, '2019-03-14 13:23:59', '2019-03-14 13:23:59'),
(810, 'ايمان محمد عيسى رياض', '30005152504507', '$2y$10$mkd1lQK/7x/VWi3Iho4P7eURubH5ROabNkSVBMb48txVcyIw9nte.', 4, NULL, '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(811, 'ايه احمد محمد حسين', '30003132702229', '$2y$10$mZDnck4LTo//cV3YBdx26et0iqivNnafRHmEuZjenI64pE1vt2Hf6', 4, 'HYiI1O18UuwhFo8Qx3XqMH8VhoIQHdhFXO6RhAqAzPcTVhgHsRdrKHTxtKxj', '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(812, 'ايه حسنى سعيد محمود', '30005152504787', '$2y$10$Sma8eTe96/RizRSpvxwzkezN.4x6aBu24RdpobqJpFRWwDGaAIIGu', 4, NULL, '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(813, 'ايه عبدالغفار حمزة عبدالكريم', '51865456', '$2y$10$fRDTRCH3m7rTx6oJ3QAW/.OjdD9J5DTZnqIjvJHGi5cbQhlW5OIf.', 4, NULL, '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(814, 'ايهاب راشد مسعود رضوان', '29908282502675', '$2y$10$8nHbSZ4wUFtpBqUaLe/QOerlwWdcVOkmG4rnyYPj2v9.bz.K6H5I6', 4, 'ABBA52gLAT8KKfnoNRcyBr11bztnoiWTlXzChZYn2tzSKkzdmFGgeeOFHA23', '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(815, 'بسمه خالد محمد الصاوى محمود', '30005132500424', '$2y$10$se1x3WTVLgBWZRQOfALqn.bIaYscl42tEAs3smdgHSszhpunef2we', 4, NULL, '2019-03-14 13:24:00', '2019-03-14 13:24:00'),
(816, 'بيشوى عاطف سبع فرج', '30008262502797', '$2y$10$//d4Kl5NayXzit2BeO.JTu5zNd342AocaC0JBd/EqO30YEMRl/Gr.', 4, 'anlEe3f6DOWzlx4LdAMzQw9NII0etapCzCV7m9mnPIA1UiKikBN21i6xjRx1', '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(817, 'بيشوي فايز بشير شاكر', '29906082401499', '$2y$10$Wq0xGwVxqo2FVwV2vHm/wOCISeagaFpv1ayBcmywCFgJtydcp0IYm', 4, 'PPXmm6f9io62LUgZ87654RdrjnTiZak8UKmuCkAoEbopxVU5TvBJPq1Ef0P1', '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(818, 'تسنيم محمد ابراهيم حسن', '29901162501689', '$2y$10$nEwvMMH3ye9Jq.xJjReuRuT34CesBQw6WZFRuOX8rJQkumz1.TKiW', 4, NULL, '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(819, 'جهاد بدر سعد فرغلي', '31987198', '$2y$10$Zkfz7sBa6hJCRMFeu8j.f.MQMdO9o8Jy8vct339L6T3WK/YvHyIDG', 4, 'rLiTG2DhIrSMsYNeLDyTnoVl5MGJxRaJMbQ418ofzs2aAB0keoc7cgSCJdld', '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(820, 'جون اسامه صدقى صديق', '29911132502198', '$2y$10$EM9P.Btz3.CkqwMFC0lHN.Y6UHAuR8IfStJ0ld0R9VeQO95faTana', 4, NULL, '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(821, 'حبيبه احمد صدقى عبدالله', '30012162401125', '$2y$10$j.FsP1jqWLo6YJD.A1l4.uGku1xh.OkRg28W.VODqYAfHvLOrnRxS', 4, NULL, '2019-03-14 13:24:01', '2019-03-14 13:24:01'),
(822, 'حبيبه ايمن احمد محمود', '30002012508449', '$2y$10$bGWnfR5k54aDU2J8Qbcf7.m8wzLC8ycXtGIkbMyamhR4kyTdmTHIC', 4, '4ZbpRBkt5E6KxywHWr26D9Two4y1d0bl34f3Lh6C3DUfW1TKzxvyVhq7WX7O', '2019-03-14 13:24:02', '2019-03-14 13:24:02'),
(823, 'حسن شرف الدين عبدالهادى عبدالراضى', '30004092702537', '$2y$10$n6Fum1tBbLoCcLWOY4trFuqkTeh5/L2CntZ83VnvwUhXcyxUPLtei', 4, NULL, '2019-03-14 13:24:02', '2019-03-14 13:24:02'),
(824, 'حسناء محمد كامل خالد', '30001012526602', '$2y$10$4TWePL3fYQL.CY//U0hfyej7zY.2eLDaggLsZMj6yJvbgcaUF2ikm', 4, NULL, '2019-03-14 13:24:02', '2019-03-14 13:24:02'),
(825, 'خالد كرم محمود يوسف', '30006232501637', '$2y$10$F1Orb7HRo2PG/nhLdH3Fne3paua.uFnd9/BeL.YluSTZ/JA4uTuZy', 4, NULL, '2019-03-14 13:24:02', '2019-03-14 13:24:02'),
(826, 'دعاء طه محمدين عبدالرحمن', '30009072502665', '$2y$10$xVQh3pzV6g8NCNy9u9u5ZugxYOO7M/XS7n3BSge58Wj4O3H7jLq2G', 4, NULL, '2019-03-14 13:24:02', '2019-03-14 13:24:02'),
(827, 'دعاء عبدالحافظ جاد الكريم عبدالحافظ', '30005152500161', '$2y$10$Dq6W0740zsRQUEyWWAHjPOOjABVAP9LUCFYyXdC2yyKEbMnOxXa9i', 4, NULL, '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(828, 'ديفيد حاتم جرجس اسكندر', '109849', '$2y$10$c5sC0VqHO.2q3Qc.TwxWQOWVzvSBrKjRQvSMdBdeHC.Wz7cvQDTE2', 4, 'vHRNaeJ6rT0wZr402qrefuxvesCyPPmr68E0xSwatK8r9XNNkczjshSe3Mvc', '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(829, 'دينا محمد سيد محمد', '30010012500602', '$2y$10$mvKlu6uRIzP7dP1qHZJTIeK3nS49j4AlDHyWpQ6Y/xFvS3aQYQQsG', 4, '0qgyYTLDVvbE0P6FmvS6fpmE2ILxEeh3MSr3E5RWxd9S6675DSNC6vdnw16K', '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(830, 'دينا محمود ابراهيم محمد', '30011212600284', '$2y$10$rmTEr1lWMaqO2X3vVd/Clewv4KIA7ZYxQfFOiaBahWX3YdJkFXQN2', 4, '7E6EovrwcqqhyvEBYqckRqOcTjujMaVlx8jObHgqPjCW8Zfu0trSGC6ooMdr', '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(831, 'رحمه احمد شعبان محمد', '1987154888', '$2y$10$iv9L9fPR3FRFXIV9XYrhTuHuHqSh./Q9RzPEoS9aXfyRnfd1h2weS', 4, NULL, '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(832, 'رنا محمد عبدالخالق احمد', '29907012508225', '$2y$10$w8yLLAE/8lfyadWln6A7l.pce8xrvbdws9PMRbt6/YFp9xP4Ch0y6', 4, NULL, '2019-03-14 13:24:03', '2019-03-14 13:24:03'),
(833, 'رواء اشرف محمود ابراهيم', '29902072500205', '$2y$10$k20KfDDtLi91ZMgdClqRsuPiBG.LNNFgW/3/m3YCK7Kgw4owiBnDu', 4, 'R3U8M4W63x0LXmlaziP2xVc6cVoPBxiJ4ggRHmxCOvXDAOSkGAVlRRFiYIHK', '2019-03-14 13:24:04', '2019-03-14 13:24:04'),
(834, 'ريم اشرف ذكى عفيفى محمد', '29910112500664', '$2y$10$7Pg/fhKkcV405jQPB2Djf..KLJf5PYErh3.Zjph5PtQnNhgA7dty6', 4, 'kTOD30lTlRcSuZqzhzEEVHrct6IBMF6z1tS76VFB535BRvhsvhXodS4ofiTx', '2019-03-14 13:24:04', '2019-03-14 13:24:04'),
(835, 'ريم مصطفى راشد عبدالعال', '29903042502064', '$2y$10$jCF9sVNSCoEnEK8Jjxtwoe7fcbSyuXIFNZdZeRSrcUeSPFA1i9582', 4, 'sfqPetc9teQeLN6DjlIFarV6RPbDGnhJElXL5A21iH9zySR9waXVH08ouA5s', '2019-03-14 13:24:04', '2019-03-14 13:24:04'),
(836, 'ريناد حمدى محمد مرسي', '30002212501384', '$2y$10$6W0HE834YF.JdgWnPPcEB.akwPiiD4x.qaYBEWTxBNAaoC07Ek1WO', 4, NULL, '2019-03-14 13:24:04', '2019-03-14 13:24:04'),
(837, 'ريهام محمد عبداللطيف فهمى', '29910122501944', '$2y$10$EULA2oTPpnnMzUXy.dADfOHouzDZaf3nkx2QvnOnuKm45cy0dN6g.', 4, NULL, '2019-03-14 13:24:04', '2019-03-14 13:24:04'),
(838, 'زياد عبدالطيف عبدالعال زيدان', '998798987', '$2y$10$FZgyJOFYVMEi59HpOfofWeR03jWqwRRDDMu1/7pswHiNhM9OmygwW', 4, NULL, '2019-03-14 13:24:05', '2019-03-14 13:24:05'),
(839, 'ساندى عادل لطيف بشاى', '30008012507149', '$2y$10$SFxFCEuOGoUHGfGM2.I6a.A3KmtIvlsHIaJgEYCLD8vUMcT5aO3Pa', 4, NULL, '2019-03-14 13:24:05', '2019-03-14 13:24:05');
INSERT INTO `users` (`id`, `name`, `email`, `password`, `role`, `remember_token`, `created_at`, `updated_at`) VALUES
(840, 'سلمى اسامه احمد محمد', '29910072500941', '$2y$10$zVrBFNqqAvvICQ.W0xDA/e356ApfRMuDV9AC0B1jbW8OxgdVKWQOK', 4, NULL, '2019-03-14 13:24:05', '2019-03-14 13:24:05'),
(841, 'سيلفيا ناجى نصيف نصر الله', '30003262502345', '$2y$10$ifYCYgUSyn.7ST89c5WqAe74elJi8FpkWNnkiBDePQvyCPgT3xdmC', 4, NULL, '2019-03-14 13:24:05', '2019-03-14 13:24:05'),
(842, 'شروق محمد احمد هاشم', '30001232601206', '$2y$10$NpjIBxhPRS6ZJDRv.EfLruyHrTcT6iuDpQDK.ndG0jGoC47WMea5C', 4, NULL, '2019-03-14 13:24:05', '2019-03-14 13:24:05'),
(843, 'شهد مدحت عبدالحكيم عبدالناصر الشناوي', '30007148800129', '$2y$10$xmacQzstkDaleUuNQdU38eoJE9jSS6ZAfchd8j8LSuhn8mMTitl/G', 4, 'FodoZSnuSIqOwvIqqm4eAKm83LbtllbRcXaTQ9Ytkmw0rU0Rqfy6YNZyWPlR', '2019-03-14 13:24:05', '2019-03-14 13:24:05'),
(844, 'شيرى كريم منير عطاالله', '29910162501041', '$2y$10$nZhepFfrh3gu8Mz/7a0FoetmT54I9SroOfPMlkdb7X2bOYu6F7cOO', 4, NULL, '2019-03-14 13:24:06', '2019-03-14 13:24:06'),
(845, 'عبد الرحمن ماهر حسن خليفة', '30010012802056', '$2y$10$zH6h1Prfpq6dju2jtkTsp.zjirF/X.wJnB5kJqWGw93jYEYgbdvbu', 4, NULL, '2019-03-14 13:24:06', '2019-03-14 13:24:06'),
(846, 'عبد الله محمد محمد', '29909012501053', '$2y$10$4Uu5o3tGLmoO..RfdzaDn.U3iLtuO0erbhuL2AYlJXr7edZbAfazS', 4, NULL, '2019-03-14 13:24:06', '2019-03-14 13:24:06'),
(847, 'عبدالرحمن عاطف جمال على', '30007192501015', '$2y$10$z9gcr0O1/177aLUv9r4s3.aWASTXFNjPHNIG7XgzLKuu7rZ8yCJce', 4, NULL, '2019-03-14 13:24:06', '2019-03-14 13:24:06'),
(848, 'عبدالرحمن علي مصطفى همام', '30004153200092', '$2y$10$Kvn45J/v056uncP/xdB0Qe57tj1smlco6YPjrEVn4GY487ZgKWDoC', 4, 'jpw1RSSRvmvL9TnMXRhDy5HBKnn3BlcoPtbWjnO4BQy1LvZmO8ON28n04Q72', '2019-03-14 13:24:06', '2019-03-14 13:24:06'),
(849, 'على عبدالقادر محمد ابوالعلا', '30001012529938', '$2y$10$N2lCFBUbGkd64QVcKL5dg.y/pFOJwuNVrxtRmwElnFXj.7ZnKQBYy', 4, NULL, '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(850, 'علياء محمد عبدالحليم محمد', '9797979797', '$2y$10$9eK8WmsCVTi9x62h3n2XHOoGjO5q83xvfmS7avY2mtv8W5Qy6PjAq', 4, NULL, '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(851, 'عمر احمد مصطفى توفيق', '29812032501218', '$2y$10$D0/3Ec3Es6QlNSnwJlL12OMp6K6YdSZwW1AlrnndECgXyVSgRXrPa', 4, NULL, '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(852, 'عمرو عادل احمد احمد', '30006082502532', '$2y$10$XCHlnFrp03/EjnNrij9SS.FmZ2kEDG/jkflpUHN/gwnbljfEdlj9y', 4, 'F1XF8JWaylsk7TDqqrKKQYwjXDbuyDi2uwHZS6GaDLicoHlaL9gvPALfjcIJ', '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(853, 'فارس احمد عرفه محمد النحاس احمد', '30010012716974', '$2y$10$znK/2KQlFUpRTuL3b2AT9uZ0rxqeRU8Ayg5aELPNDDqQNDYjaid42', 4, NULL, '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(854, 'فاطمه اسامه حسن حسن', '30007282500964', '$2y$10$xZb5Xbn29PiD0oyCo4KD4eE76lpnVfqNoG5eWG6ibOZQnkGaIVpI2', 4, 'bHG7Oyid6CWBIjbchlZ4Unkp2t5H8xrJRiljN03SzFbUjNEmypSHbIIzQvgi', '2019-03-14 13:24:07', '2019-03-14 13:24:07'),
(855, 'فيلوباتير نشات حكيم شرقاوى', '30008122501138', '$2y$10$7NyUxI7foiMGulxqE/Kthuv.j4lwrF4Wn8SSL/1vos/EvwjmUwcgK', 4, '7CJTICVVz0NSAWgUEhtuvXhvQUAHXT3V9tocde7F89choRvhAVNviJbMLRVl', '2019-03-14 13:24:08', '2019-03-14 13:24:08'),
(856, 'كارمينا شهدى لويس مرقس', '30007222502445', '$2y$10$HAIdocvbpRJUj3B0KWol0.4nLOZ2s4jPx06J4XRw4h7pUf2SR9Nf6', 4, NULL, '2019-03-14 13:24:08', '2019-03-14 13:24:08'),
(857, 'كارين شهاب عدلى زكى', '30010302600961', '$2y$10$qLPUX.ngu9jC2qjYRqlDS.pJfY7BQe1MkitWCWX5ZKMJN4I.z.YTW', 4, NULL, '2019-03-14 13:24:08', '2019-03-14 13:24:08'),
(858, 'كيرلس أنسي صبحي توفيق', '85858585', '$2y$10$GybUMarYIc3k015KeKFzBuw1NXFDxTcE0AN4q8.wrNiO/nno37/Ty', 4, NULL, '2019-03-14 13:24:08', '2019-03-14 13:24:08'),
(859, 'كيرلس رمسيس ذكى صموئيل', '30007292500253', '$2y$10$wYVInWsToZOWeW4qCGnVNuA/x2em00KNaryijHUBeAPpm6iQyaacy', 4, NULL, '2019-03-14 13:24:08', '2019-03-14 13:24:08'),
(860, 'مارجريت عصام  نبيه دوس', '8954561646', '$2y$10$1udt8bnN6SE51j2nFSKO7OuoiqNfn92NzNiOkGNsNvm9wwDeXcilG', 4, NULL, '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(861, 'مارجريت ماهر توفيق فرج', '29911082500709', '$2y$10$kkd2b9/2AtFCkeejIFcv0.Xt5tF3j8.PoFhSPW16lhQBExw5VLK4S', 4, NULL, '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(862, 'مارك رفعت متى عازر', '30008312500294', '$2y$10$fBB8xGRnT4oOiMbWYFz6juetNWyRvp74px2AJSZt5Ql4e.rI4/zC2', 4, 'Lza6sO3frnUPM3q1AICtpFhcTKPxk5WNMTiPV57JlXQ3sODQkPl30GpysZOP', '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(863, 'مارينا حليم شاكر راغب', '948655656', '$2y$10$Cd6IYW0kOjVeZPppMCr66u5RUnh1Vw0NwNzH2qLvshuxQoTLq2iLe', 4, NULL, '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(864, 'مارينا رفعت قرياقس عجيب', '30001162605063', '$2y$10$Bej88CaYo/9HMwIdgxMdmO2q07WolNrvYxA0DkdJcB/95e9BPbBaS', 4, NULL, '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(865, 'مارينا سمير بشاى غالى', '29912182500648', '$2y$10$.ZMbJXwrXW8HoSaY7KVbxeWUy7cSIaJiSUz.Czx0C77IhS1cryu9G', 4, NULL, '2019-03-14 13:24:09', '2019-03-14 13:24:09'),
(866, 'ماريو ايهاب جرجس بسالي', '30006182501371', '$2y$10$U0.Kp7wGEv6P3fLAECS1kutsfxK.DptG8MOKTwiu.l.9rat.y567G', 4, '4wplea25mdTIwO04AtVNlZM2i7HI1SZOOB9tXdj0TVi6x6KnAXDCDT3rzf2v', '2019-03-14 13:24:10', '2019-03-14 13:24:10'),
(867, 'محمد احمد دياب محمد', '29911152503832', '$2y$10$JJQH2PvEmNxzj4luq3zTc.Si/Ahu7mibpE4YI9njbTC6r4C294fYu', 4, 'YUV5nc98X5UGxlhRwF69atmxPA61qqZS4maLz9TkWwFMWLQus2EtJ0SFg7hu', '2019-03-14 13:24:10', '2019-03-14 13:24:10'),
(868, 'محمد سالمان محمد احمد', '29907232501655', '$2y$10$nQWovMqI.qJl8PZPvwupfeR/QXogXilfNUaph35Jwdws9/73faH4u', 4, NULL, '2019-03-14 13:24:10', '2019-03-14 13:24:10'),
(869, 'محمد شعبان البدرى محمد', '29810012632356', '$2y$10$rQIFni/o10kfZoBAHMlFIuh9QT9XjtwCTStxq/oylB2koqVHGxdUu', 4, NULL, '2019-03-14 13:24:10', '2019-03-14 13:24:10'),
(870, 'محمد عبدالقادر حسن بكر', '30006012507391', '$2y$10$pKXqjudFKrL6KCM5DqdUKe6nLQOVI3FlnDSMXZrG.V6D3sFveUvyO', 4, NULL, '2019-03-14 13:24:10', '2019-03-14 13:24:10'),
(871, 'محمد عبدالمنعم محمد سيد', '3216549889', '$2y$10$OSjq6UuSPoHsXOsfvHDfY.rcIw69VC8wbrDBYgl.9HiXvKF48vkZ2', 4, NULL, '2019-03-14 13:24:11', '2019-03-14 13:24:11'),
(872, 'محمد محمد فرغلى احمد الدغار', '30007102503398', '$2y$10$n70Idq0UAstIcrzK4Gz2pOPbCAnIj9mjFiR5fEoJ3VWg786rsm1je', 4, NULL, '2019-03-14 13:24:11', '2019-03-14 13:24:11'),
(873, 'محمد ممدوح محمد حسين', '30009062501539', '$2y$10$3ZWJgvSznXxLZSUwJ1fViOpYA89QogpHiecKC8xNwoQfR8xUIJaq.', 4, NULL, '2019-03-14 13:24:11', '2019-03-14 13:24:11'),
(874, 'محمد ياسر لملوم عبدالغنى', '30005312500414', '$2y$10$7MKtuBafCkqmKwR1nCm/HOaGUu3B93dGhW7.mYATHo6uojZMtuaB2', 4, NULL, '2019-03-14 13:24:11', '2019-03-14 13:24:11'),
(875, 'محمود سيد سعد عبدالكريم', '30006082500815', '$2y$10$Vzsz5cy33mhbHavJwJWaF.c3qXqpSh/a4QuQIjGl9muLhZa5ZlmuK', 4, NULL, '2019-03-14 13:24:11', '2019-03-14 13:24:11'),
(876, 'محمود طه عبداللاه محى الدين', '29906192500476', '$2y$10$OJlhsef2bfQnVBFYMiav1erP0HK0rS.NOgG7jok.0.2FX3UJmlq62', 4, 't87BTNOl9Ia0k1oYwpcbG4UTh8AHNA2TWxdOaqeiW18lsYTlzIMXSSVPGhsA', '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(877, 'محمود محمد ماهر ثابت', '65464564545', '$2y$10$In4fmjqEi1.2SPniSKRNm.xAdo3ajWP4D54iT47UCLSRWmrwF6tR6', 4, NULL, '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(878, 'مروة محمود سيد عبد الحليم', '29910062500404', '$2y$10$qUNBMVatvOGK5erwTVkK8.BxKNWtoOtK0yO.vMKRDG3yMDE73/xBa', 4, 'XvhSy4yU013B8XNImyG3Y02kcQo42EBV6n2smdnVkYeOUXVdAPR4yBY1t9jC', '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(879, 'مروة ممدوح طه محمد', '9798978711111', '$2y$10$ZashTXuG3mKyhMnN4o9o5O4AdEX2TWpwaM8R5mEhSMnstQNrnCC.O', 4, NULL, '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(880, 'مروه محمد السيد محمد', '30007132501903', '$2y$10$PM9CRFkicpZUhlU7UE7AK.XPKf6G3To8UH2w3q1/tbzBQcMdjmoiC', 4, NULL, '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(881, 'مريم سامى جاب الله حبيب', '29908292402369', '$2y$10$wqOYiZe/uUgE3sXPkKrSXe5pjy2GWTZ0BTgLc2yDqZ3qr7Qpob7Qe', 4, NULL, '2019-03-14 13:24:12', '2019-03-14 13:24:12'),
(882, 'مريم مجدى حلمى اسحق', '30007192501104', '$2y$10$./4b49gHHfNaBSj8YX5edOrbHCh9k7tkxGA0fU2RgoYEpzNAqAHwq', 4, NULL, '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(883, 'مصطفى احمد فرغلى رضوان على', '29902162502614', '$2y$10$zYq0gqTMg9gbq0MElb6qQOwCm247DROXGxL8XX3l1QLaIqCKQym8e', 4, 'Ax6FTR6UiHoICYo1M1idXEMLgF1P8jZc7uxyDc9Wzd7dr3u8H4lUJHCSUhOM', '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(884, 'مصطفى خلاف خليفه ابراهيم', '29906012510312', '$2y$10$a8VXBws60ffM7vPrwxHTYewkYf0jvIfpSJDylw6IxjE9L5LFxCw36', 4, 'RepDFe85uVXfpRO6FVUyIugF3YhjazXlyPi6UfyMnu9YmUVGwhp4RQcoXQfb', '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(885, 'مصطفى سامى احمد شافع', '29909202604673', '$2y$10$A6YMjLEGewJ5oqCQrRmZxO2LutX3/Ib3JDQdAXurf/3WNy09oIzN6', 4, 'mpQ2R8hFBVO9iej5nY1BUUAt4d0i1yMzHH0zmQTsRrmcV1Kysagm4PRb0eW5', '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(886, 'مصطفى سيد جابر محمود', '30009082500539', '$2y$10$E6KGHJwSIyFR5RWRmTKLzurjt5Q2sdXC3TfBaarDKGEjm4.TgbjtO', 4, NULL, '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(887, 'منار احمد شوقي رشدي محمد', '30012092400061', '$2y$10$lPk.5y6K2fGX/zM3QFBbTOrN2voINQhyp6pEfSuaax7pSeXnqab26', 4, 'QJ210AD88JdpIc7VOmVg1A4vydLab9KDj0jTMwpdUYHAqtlRt7jryzKlA1iX', '2019-03-14 13:24:13', '2019-03-14 13:24:13'),
(888, 'منار احمد محمد محمد', '30005072500302', '$2y$10$ty9pP9g0/O1jXVPLh33YJOei8OBXRxhKEtiU05whVqNfMDVLatuC6', 4, '3zJ85Mnu5izshwSsDjWY5RIuymuI4lZTWzNDmLNlXmibX5zxCk1vqZe8ddVa', '2019-03-14 13:24:14', '2019-03-14 13:24:14'),
(889, 'منار عبد الحافظ محمود عبد الحافظ', '333366998887', '$2y$10$h.yzNc50HbME80KY8Tuw.O3UVyTw7wkCcPX9eo52Hf6NDRRe6Aepi', 4, NULL, '2019-03-14 13:24:14', '2019-03-14 13:24:14'),
(890, 'منار ماهر فتح الله محمد', '29812212500562', '$2y$10$wvXmykw8sz/ZubyIT5v8Ae44MwbHdOrEAqoVJJ5/h/YFOYOq7fuvu', 4, NULL, '2019-03-14 13:24:14', '2019-03-14 13:24:14'),
(891, 'منار محمد جابر سيد', '30008182501668', '$2y$10$ZFkKy7kjH56LXR8tHB5xNeNUpFVrSsbmWNLpj8Rjog4Yn.k/ZozTi', 4, NULL, '2019-03-14 13:24:14', '2019-03-14 13:24:14'),
(892, 'منه الله صلاح سليم محمد', '29911042500986', '$2y$10$tWmdfN3V6l25iW2EzLlUxe3erzgoAgx39T/T9iazKDWrjyuAOUfvC', 4, NULL, '2019-03-14 13:24:14', '2019-03-14 13:24:14'),
(893, 'موسى صموئيل بشرى صليب', '30002072403492', '$2y$10$Yp8ffTNuignvOz8NUKb/POCLADUSp/nm8JrLUc9NSQfZ0o8delG6y', 4, 'AAGJJWmudZgM5JTtmG2Olbw7kwpjpjiGdR78hyYDGg3jfoa3h4pxuG23viXJ', '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(894, 'ميار حسن سيد محمود', '29903012501446', '$2y$10$gFqZqogRIlaLITnf6XLJgOWSaW/jCUJrFX49oPGhsJ3XD06Dy39LG', 4, 'rGzVu7B6F0C3W4WcFQGiYVHXOYH4DC9WX32ut9cuSBD3W2Stt90Wk1eH8m8T', '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(895, 'ميرنا سامى زكريا نجيب', '29911062502209', '$2y$10$PYEfogtbHRNCUPw.DtgZOOkFpht5xsmrHhyU9SrVhclm.H.dN3P7W', 4, NULL, '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(896, 'ميرنا فتحى يعقوب زكى', '30008012414647', '$2y$10$sC3X2DtYSLndoFUVgEUHIuITpiWvxRYhKUpH8kRG.Lwy7CXvubkM2', 4, NULL, '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(897, 'ميسره كمال محمود احمد', '29906152700073', '$2y$10$SLtcHFhR2W/Hw97B4gRZt.MLiQ09dlrGvqwptPNrk7SZrK1kQGvtS', 4, 'IJevMR7ytde9hf1LdYys2RVEGU9z9vpOe1VotrRu12WnbYlgerTBrXv79Dec', '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(898, 'مينا هاني ميلاد الياس', '30010012511833', '$2y$10$/UUul2ZULFJTf7q8sXFaguEi6hNPN1RIIJiC4ncCnfqmVpu084T1y', 4, 'VBoITW5hert33dIFBNhkl384OrO3N0eIxjNlBUQX3FbqHj7abIcvaBPR9jLD', '2019-03-14 13:24:15', '2019-03-14 13:24:15'),
(899, 'ميهان حسن صبرى البابلي', '30008190104643', '$2y$10$0YlFY77b8533.DDKpafJfu5XEJpWIZQBLiy9wk5NThfMLShAPaVQa', 4, NULL, '2019-03-14 13:24:16', '2019-03-14 13:24:16'),
(900, 'ناردين عماد يافت عياد', '30002172501386', '$2y$10$4qrdHjh5brz5vT2Q8hgkCuPbyujyBggBZQ9a2vr8uW.MdHsM/SHO.', 4, NULL, '2019-03-14 13:24:16', '2019-03-14 13:24:16'),
(901, 'نانسى ادوار توفيق بشاره', '30006012711908', '$2y$10$VUDmFjduJnOV0W9GAzKHGuOV3157POUITMdbXQ2lpyuacwEqBb1He', 4, NULL, '2019-03-14 13:24:16', '2019-03-14 13:24:16'),
(902, 'ندي  محمود عيد عبد الناصر', '30004292500904', '$2y$10$ffANtNe.NkNb0dy03xRyje7q1GfsfaS6xGj6SUQK5PZthm7u1oGtS', 4, NULL, '2019-03-14 13:24:16', '2019-03-14 13:24:16'),
(903, 'ندي حامد حسن احمد', '30005252503648', '$2y$10$pIP41svjU2x6yY77cMt5Ju84FTtFkXl.BZbhz7E9QHK0JNGa4Ib6G', 4, NULL, '2019-03-14 13:24:16', '2019-03-14 13:24:16'),
(904, 'ندى سمير سيد على', '29908082502549', '$2y$10$oZci1Z18LE7fnQBMcsvgve6fxTuzOeOEHm1dSaIpWStRVJXGwkpCS', 4, NULL, '2019-03-14 13:24:17', '2019-03-14 13:24:17'),
(905, 'ندى عبدالمحسن عز الدين احمد الشريف', '30002218800405', '$2y$10$fVsTRab.SKE0e8I1TEoBkuv.WWzbXBWdNHcYWbrIVv0cTo.CJeNpW', 4, '0zOCGrbNX3Gqu9oCSr58z3cyXytkqpP32nPbqDIl0WTZOn8M8rXlOdNquh4m', '2019-03-14 13:24:17', '2019-03-14 13:24:17'),
(906, 'ندى علام احمد على', '29905232500982', '$2y$10$1ub1izFVJMHqP6lsjELNsuxR/Hdxj3g6eXm.nqEmPM8vNSACis9.O', 4, NULL, '2019-03-14 13:24:17', '2019-03-14 13:24:17'),
(907, 'ندى مجدى محمد محمد', '30007142500085', '$2y$10$ImQUckqz5D9VMBnUYHmv7eaGqxrAUmZG.BNG4qvoL8A9xIA30Nr26', 4, NULL, '2019-03-14 13:24:17', '2019-03-14 13:24:17'),
(908, 'نشوى رفعت محمد عبدالشافى', '29901242701743', '$2y$10$RL4uP0GhsdWSX9Z1mqUS3OJPrwycj.ASNzNnhokwTN.t2D4fsf8Dm', 4, NULL, '2019-03-14 13:24:17', '2019-03-14 13:24:17'),
(909, 'نورهان خالد محمد عبدالعال', '29912292500325', '$2y$10$BxzEZoY2eS1bT.SAoOgX6eAjzgS7BhLFmhAgP/z49lyah40itvBb6', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(910, 'نورهان عادل عبدالرحيم سيد', '30008152503224', '$2y$10$C.fCYsrOrpZuXVyOIG6cB.8fueZJIJ/OlNDmoAHTioqy0hEQfAIaS', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(911, 'نيره انور هاشم فراج', '30010122500268', '$2y$10$Ge29IeTAQ4yb6ryvO4oBguhblLnMb0gFFqLWBERZ00levyW8z8vzi', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(912, 'هاجر سيد احمد عبدالعزيز', '30006022500905', '$2y$10$t35mlKXAfN2397F4CZXGxuB0a7CQb9S9y0qFF6BaZ6W4g2UxHhTsq', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(913, 'هدير فيصل منير امير', '30008052500864', '$2y$10$mAMryHnqsAh0pOjmGa.9MeqpcX8FvGghr3zYBUEO4bif93bYJVx.y', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(914, 'هلا ياسر محمد عبدالجواد', '30006262103148', '$2y$10$R6bcIdJ3Vfoi7t/qBprolugRFhqL1iKzEhyHqi6rcuyUE.EgaQyr6', 4, NULL, '2019-03-14 13:24:18', '2019-03-14 13:24:18'),
(915, 'وفاء حماده عبدالجليل عبدالرحيم', '74185296311', '$2y$10$NDD13nCPoCcXkORTubKb7e0d7zFX88Kf7.oIGyzrGuHUA.Q/TRDT2', 4, NULL, '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(916, 'وليد عصام الدين محمد ابوالغيط', '30005082500274', '$2y$10$AETnpTXshltnmGwM7hTtp.DdwnYAqG1AFbpKE/jn1/u.cHd5dq0uC', 4, 'ZDl4Ig346KSIDVvXdIBtnWZF7fvCk9YzRHhNxbxUoUAOrTl8KHFmEpspFb8q', '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(917, 'يارا عصام الدين عبدالعزيز يوسف', '29911122501401', '$2y$10$VYxh1yngaXvRgYV3eoRr5.PH1vICBJ3S.3FEv1eFo3CZGYJLMyby.', 4, NULL, '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(918, 'يارا عونى اسماعيل السيد', '29903192600307', '$2y$10$ztzlH3OjqFLlMhgrA4Dsw.H5oAJ6xL2qBo/Mw/r1yMdThcWcfNdzS', 4, NULL, '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(919, 'ياسمين احمد صبرى دردير', '30001132702226', '$2y$10$s0x.ssLwD6Or12qZT8ysT.cMwpbj5bqpOWHE9QRLVEbT1HWlwoaOG', 4, NULL, '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(920, 'يوستينا رافت صبحى فلتس', '30002062601989', '$2y$10$5iP1jm0pPYgYbw25ahYVyOJLpwpOBOXLgOJa.LSkhZoQD.NtL.h62', 4, NULL, '2019-03-14 13:24:19', '2019-03-14 13:24:19'),
(921, 'يوستينا مجدى غالى عبدالمسيح', '30006132502407', '$2y$10$W2OS5U4s/Rceyviy/y73UO.QZm1lsTOHs9i9nKH0WEW44AXxGDSgm', 4, NULL, '2019-03-14 13:24:20', '2019-03-14 13:24:20'),
(922, 'يوسف برتى هنرى س', '29902012510236', '$2y$10$VjthPbMCDU/BBhdo0dprvudnPbwUKBlhtRS6ju1Ny5Pb8c/O/MOYe', 4, NULL, '2019-03-14 13:24:20', '2019-03-14 13:24:20'),
(923, 'يوسف خليفة احمد محمود', '29903132502292', '$2y$10$eLhyplfWopTZEYZ1GZUIi.BVcpXyGhxMN6jyaKfRlMgGPH4BIHIba', 4, '4aguQUkCHuotj2FZsDwjCt2nMbMFIAyaQVKwWjLPIYq3lukkaMohKBD7N18c', '2019-03-14 13:24:20', '2019-03-14 13:24:20'),
(924, 'يوسف شعبان سيد محمد', '30010188800734', '$2y$10$20kHBNlTP.sS.06eDfLKDex5L7ED1XRzw8MDraRFOyiNXPgpu61PS', 4, 'GumpPiYSQr91meVThVqqPUm2kimjTF0ChMEh31HGRLMYi6viOqscWHlBWw5N', '2019-03-14 13:24:20', '2019-03-14 13:24:20'),
(925, 'احمد ناصر شعبان صابر', '30007012501772', '$2y$10$e7n34C73ycVpyXqROYIVYeoi3SrziqN3/uy/wdsEui18Fqv48tQjS', 4, NULL, '2019-03-14 13:24:20', '2019-03-14 13:24:20'),
(926, 'رانيا احمد هيكل احمد شحاته', '30004242501624', '$2y$10$CaqNvNKg1z8Yfn0Ai//L6OhBGz29KPS/Lk7VaPDPoXMRsvC4TnACi', 4, NULL, '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(927, 'محمد احمد سيد محمد', '30004012506872', '$2y$10$xX90/BLiQxIb9r.g9mG8R.F65BiLKEFgIqvhNxN96v.bUiOXnBluK', 4, NULL, '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(928, 'معاذ زكريا محروس محمود', '30005172500257', '$2y$10$He3JexXZOf2T0vuaL8136uLiJEIm/bU3TIT6A2RFLajXtx3VeMfQa', 4, NULL, '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(929, 'ابانوب كميل عويضه متى', '29903052601133', '$2y$10$HLpk5uUOoj2IEnlPRF6HNunK8vGYtjMJcZ3l6Fgai3Z8iszKcQBLe', 4, '38LWzL1fCfLm7FaA178ciceTyncraFD4eQKURLbz6PeuagylCHGmD8JUtDFr', '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(930, 'ابراهيم محمد على ابراهيم', '29501012722956', '$2y$10$d7S4zDCeaH3w24aZeL441uKEMHmTI0HjBEE.3qQfgHJhxlZDNtD9y', 4, 'EGd28hdZPrrlIIJVmj7jd6zOG4kQKv34aGnyRnsEA82XKEfrBEwpR744cRYN', '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(931, 'احمد ابراهيم حسين احمد', '29909232800574', '$2y$10$xBjEAbc6Wx./8Cuf1pvMTebv8daVkMIsIg2YRLxGsPPi7tfAKeFZK', 4, 'ZBhXEGRyru76T6oXReW4bAZq5E7JUVmUR0RuMMKqZCGMcZ9jIlO3aqlV7F3W', '2019-03-14 13:24:21', '2019-03-14 13:24:21'),
(932, 'احمد اسماعيل لمعى محمد', '29905012506912', '$2y$10$4s0Ig9.hvP9MCZoWmGmqcONuD/Z7iqYSEtu/H9zP/EDHb1D8CeAgW', 4, 'fTelJzX31IKRUOtYwaNZ7v2PnSPnwUbeIxxKnkKiNmVRmwX5GvBYdeCRUPQ7', '2019-03-14 13:24:22', '2019-03-14 13:24:22'),
(933, 'احمد جمال احمد الطاهر', '30009172703196', '$2y$10$OzhGpevPtfN2FpIJLvkf2e6HYjyplS/DSU7DdrYDitOfZnyS0HAWW', 4, 'lXElSR0Srql9CbwSFf7R6mit3WLxUo41BY3aj5U2HuwWnmPlz4M1VWXaehRl', '2019-03-14 13:24:22', '2019-03-14 13:24:22'),
(934, 'احمد جمال السيد ابوالعلا', '30004011612415', '$2y$10$lI164AzmT3data9UEIYP/eINZJ2x57BI62g0GuexAhsnDl1vVXZGa', 4, 'Ahpxd9tHazJoXWSL7Wkep2UPGBgAN4SnppxvEAVAsTdpVvxr0dHq7NseBJba', '2019-03-14 13:24:22', '2019-03-14 13:24:22'),
(935, 'احمد خليفه حسين احمد', '30002162500217', '$2y$10$x8xXxEDwzOKj84VcfFVo5e4jUl9tyOXgO5HFrsdkshltBN13rQ4f2', 4, 'Cf1T1PeLw7jYalcFgQQr0Bvpqd5CbPs19p2Fmwfc9aLqCFC3kquCGntmsy62', '2019-03-14 13:24:22', '2019-03-14 13:24:22'),
(936, 'احمد رفعت ثابت كامل', '29902022603496', '$2y$10$pWJFHj..8846ImVu1MsCxeSqBhRedsWNfowH7FbAKm21X1iuziTz.', 4, '0vXvQCbsm6r72GY21gzWSXq322IZXpg7Yi4LFphqN9dZSzvP9Bbzq8AhDNYU', '2019-03-14 13:24:22', '2019-03-14 13:24:22'),
(937, 'احمد رفعت عبدالحفيظ عبدالمحسن', '29905042601073', '$2y$10$L2zcxO5uWF3qmyhMpZ2Bru1RobqmaM0nPzv02xJ6cNZnYd3ixop8G', 4, 'WVyTXycRYfwtIlscIJopyJSyoD1POlr2vaec8yZWjM2iXahv0ECQLDg3eDi3', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(938, 'احمد عبداللطيف محمد عبدالباقى', '30009152500817', '$2y$10$XGQ4kJud6CXeZHOR4kFAqOVlD/ckEcG7kul1EFyuEzUHQinhQXiHC', 4, 'UezOgkxBimqyMqR9xSGXIECPDsV26KENxxbPIE0tGrHczbarDi6tMqeOZb4C', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(939, 'احمد عبدالناصر محمد ابراهيم', '30003212500376', '$2y$10$X/L/Cx2NscyaSkRXllsK6uNva48KlGg6aEpURBAdlkPti6dAdnIi6', 4, 'gkyr1f6spsnqGWIo8vA5nIc1vP3TV7vEzLTAMnAUZZaZgBgM26de7Cshe68K', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(940, 'احمد عزت جابر على', '30006202505115', '$2y$10$9oHIOvpHUtOng/EgGWXPIeSfJe6couFgOjOdg8qXqNSAh4yLa3Wr2', 4, 'VwpiFcL7O2bsuSPVjp9Hg45EdkTXq41OecUnsa9q5NrgMqIvwqKsKGlUCSx9', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(941, 'احمد محمد عبدالبصير جلال', '30004118800591', '$2y$10$SAj2cxPH47ylf0yvcm.78ep4KZy44ZK8GfApYmIjAsBDf0mb53wcu', 4, 'NjKAypYmCrLPQVKlyphrl29rE4VYGLWFW7w9CfWD9UX5BhhFgrrVrQoYAuiN', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(942, 'احمد محمد عبدالحميد حسن', '30006152502772', '$2y$10$UVm.d2rpWIUs4YVHYgYX9OjMBxH2IIZlNco0KT/RErkhFa98CcFS.', 4, 'ZCC8X5J4IhEbDbzvSbTCWk6aQRMF8AiZXt3v9BqYoVn3U6QNAJJfs4e4yT7Y', '2019-03-14 13:24:23', '2019-03-14 13:24:23'),
(943, 'احمد محمد فتحى عثمان', '30005112502099', '$2y$10$OysvIEIImPLFYt6.J/XpBeeEbGL0h1B7DyAUnihDx1DEomcCRCEjO', 4, 'KzK9hj9RQibARN2V9qZcdnBR0rLsv858wjkFnN6clKb1ei9isHWfLvBhynAM', '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(944, 'احمد محمود احمد عبدالعال', '29905302600651', '$2y$10$JKlGjnNumjsjvKjiVXDnM.6K35g2o/QTvLxZ6tdjP7.UHBXFJ64wm', 4, NULL, '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(945, 'احمد مصطفى توفيق عبداللاه', '29909302500476', '$2y$10$16OY5qyl27UM2ClyPuQbYu5uu7kPPQvHLWQnKyL20h8ItO4asMJRO', 4, 'XuUqCq5Gyct9VFYRBDxJV3UGosCWfqzgE0obdqJ89EauYg4uVqFnLZMAa9M4', '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(946, 'احمد مصطفى عبدالحميد محمود', '30006212502572', '$2y$10$5P7gE3Hq4.RYVGj1UayqLucGOI/m.VzTcRcdIBwUSg0d.FQjIX7l2', 4, 'rYhscvETFM5LVQGp2ylj7YgAiXIygFiB1VcbA9Ygoui4g4shLgiwiosJOMpB', '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(947, 'احمد ناصر محمد عبود', '29811202503397', '$2y$10$eKl54gowzp4d9lZLWu00cuXYElfoQOHsj7FhGb9CWiLI7u6wLZ.zq', 4, '3qnEFAk5Oudn78TR2IyGqUqSzx3NTD6mcrWqdmmkWk0xcEuICyHugSkoSUf6', '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(948, 'اركان عصام الدين فوزي شرقاوي', '30003022500736', '$2y$10$egIyafsZOYtxhfq1kj4DW.TWDYSKOiuFCVnir4HGYv/PBF3c6FQ0y', 4, 'dTo8GaHjQXk0cYIhMsZz0RpWVce34MjfFVII8pOYXojETOq2OHRbcW5Y4Ln1', '2019-03-14 13:24:24', '2019-03-14 13:24:24'),
(949, 'اسحاق سعد عوض سعد', '30001113200031', '$2y$10$zsUJWgBaVecM1cBzs0luBuibhOKirLZbpPTeCZV6mjr5CUnOjhaiK', 4, 'SNo1OGNTzlu6JOQMxcUoSDmzjT90uU2R2Xt1wUZjqZuTuclLt1EdNtBX0JGj', '2019-03-14 13:24:25', '2019-03-14 13:24:25'),
(950, 'اسلام ايمن احمد محمد', '29905012606852', '$2y$10$A5je5ueQLOb9JxEwIDBCoeRSg.81.GYuQle2mC3/KTF6JTu74dMQC', 4, 'Q0HMwbxacidrSZfSLaUlchaYW2v6SwiYOntBliTU5PMW4b2XyCtJml6PXruW', '2019-03-14 13:24:25', '2019-03-14 13:24:25'),
(951, 'اسلام محمد عبدالله زناتى', '29903202503178', '$2y$10$2H9q1E5/xx1VEGRyyRWDCe/mGppDwbj8f9qinVo3rb3U2dbyHw2s6', 4, '4mBJB9Zrf8Jhw5RgEwfkdsQOF21ZrQA8zt0SxNOvl4MFrfEmMlC5xdjDCvtJ', '2019-03-14 13:24:25', '2019-03-14 13:24:25'),
(952, 'اسماعيل عونى على مخلوف', '29912162601758', '$2y$10$rdQvagIGZWQFf83auPBRoOX3YYHiGCoozW4.hTZjlocUxZX1gpMHy', 4, 'XxjsrldQjOWpIqmhjcpZ529zbu6YuMHWcvtfYFB8l5fIvBzZiv56GuTCEIf1', '2019-03-14 13:24:25', '2019-03-14 13:24:25'),
(953, 'العمده سلطان عبدالعزيز احمد', '30003072500397', '$2y$10$fl2XgRRDoreQ2dVnCzoNsOJnpdG6S9H63n1V1v/S6A3G.7khysUum', 4, 'JKoX1tJj7LR7YfliSP09ZL4Ln267neiMUwTKz9JKwkjsWvlCztlAvXFoDjdr', '2019-03-14 13:24:25', '2019-03-14 13:24:25'),
(954, 'امنية أحمد بكر صديق', '30009258800127', '$2y$10$ARst8a1vQ/rIcLr2MkSKp.cQgj8DB0gh5xNJRB8JqKi9M7zeUjT9.', 4, 'O4FRYNlysUruzFaTeYpDgEAkMmUiePv1JWbteb1k8xMKFtzyDXayUirrzX21', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(955, 'امنيه محمد عبدالعال عثمان', '30006192500845', '$2y$10$cE0c6tVv8PfAyjj.DnNSQeQLRfkTlvfkOZse9hXZ2CMZo.NMjGss.', 4, 'ylS2peVNJ8oIb8vU8OT9zFJIaw6dFqYYVVQF43xdwv2fukDlv9MXzGJi9Ptm', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(956, 'انتصار عاطف عبدالرحمن عمر', '29912042501121', '$2y$10$Z6NghRuz8k7rde3gIl.j4e9gcYKHonp/UDgAzdE9OBDEH.6VOTApC', 4, 'wm3Dn88Kg2r0YSzbuV633M5DiFlYy9GV8iVFznz2DElrKHD1uxkSgtEDE1gV', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(957, 'اندرو حليم مترى اسكاروس', '29911202500775', '$2y$10$npJUFLe2fcyIykCoBO0pl.BK6hmD8mKNGjzVPysWWYmXXD7cRgveK', 4, 'tzjTCBPgIhtNDJDV8ph9wRbilF0GGxoEmlIH9d1ovOpeXe2oIbqzBF4n26RQ', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(958, 'ايه ابوالعلا خالد سيد', '29811102502105', '$2y$10$0O1mWatHvnUu2QKblDKWqen3iGepczqpJtgPM2660C9tSEgo9WjDq', 4, 'TVU32E83QW7sCwamtyVCArsjST9dWZW66nHU2egO9K2Gk4zEvVFMaKnsmm7D', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(959, 'ايه عبدالعظيم حسن احمد', '30009142800243', '$2y$10$p0fssODKFtc9VYMh8G5GAeiRJUtQIM7/FRszjwoZ9uzgFNBpnnmhe', 4, '6KyU8wGlybaZykJq4r9Lp6z37ZhLl2Nga6ioIVmnjiwOiUiconot8GPa2n79', '2019-03-14 13:24:26', '2019-03-14 13:24:26'),
(960, 'ايه عمر محمد السايح', '29803192700765', '$2y$10$XK0CovxmnKJLiJVlZ/XUSeldUE9OFIxC1nUWV.lALJY.2rvxE/pIC', 4, 'ZImfmneCkE2j4ei6Msjj353F7RjoQqDAnuLgy8uPBWCa40Xk0YZTtCKXoP25', '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(961, 'ايه غانم بيومى حسانين', '30012052503445', '$2y$10$C.hIp0/NwS5gXLpLCg26buNm29h2FDXEzmKw3utihO1Iq3RlzWeMW', 4, '7EwfAy0WN8qb6vlOreTD88nbj72WT6kSU3IwUYQpBXnaOHgMaquvA2AQThOg', '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(962, 'باسل امجد لبيب جرجس', '30003042500856', '$2y$10$Q3pKR5ta79u0aZFJ1Fq9.OvwMb3.b651JGAmCfYPNqRL6A8MBLZm.', 4, 'xG0Ek6O0sgJQGe8ranl3VGamNAHUOEqrHoG5wulwcVDAVHB8fyffL2iq0FbN', '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(963, 'بكر حسنى احمد همام', '30005152606172', '$2y$10$q1g0uRhNndeNfI/WAxdqH./s5pjx.qBXr104iOsUHthVX/KiyP3qO', 4, 'rKRfIsOwT02toIuy6T8d8XhPoQxvWJbOVxGvaCeD2kzVdX01fsLFRTO6PCHN', '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(964, 'بولا سمير اشعيا حنس', '29804152701056', '$2y$10$t3Km8DlVdTu6iKYwlrGwSO1NINCUbVtvAOpoL0avc.BghJzi3rBvC', 4, 'z4MAv9OFwT7zJ4GhJAcX5zyIhkHBWiEZbAidOMxn351Prv6v4TLLIQoDqUjj', '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(965, 'بيشوى عاطف توفيق شاكر', '30001012518839', '$2y$10$bfX.2ZidmqcwP5uRMsvgeeFQqSbATp4qwnUDcRUPcrxuJ3fZ/e4M2', 4, NULL, '2019-03-14 13:24:27', '2019-03-14 13:24:27'),
(966, 'حسام حامد خليل محمد', '29908072602871', '$2y$10$f2OYGpUabqYplDze95lZp.OdROWYsTXCBJNgudJ4NAbgo5KVdqRl2', 4, 'YzpzJbR2A9MhtUpyeHNhTrzd7R7Nqo1mBs5YQZHne6ovnjYYo6AHNqa4IgMW', '2019-03-14 13:24:28', '2019-03-14 13:24:28'),
(967, 'حمزه عبدالرحمن محمد عبدالله', '30001072500076', '$2y$10$LoDEZv6YV/IRqBuQt4IMB.KTmtztcsG1Bx16dDFX/2C89ZIzae.Qu', 4, 'bIP74PjPNX2iofpNV83Pnne4r1WvLyYpL6zTAjPqiAZGEZ4raldQ2cQB0JxZ', '2019-03-14 13:24:28', '2019-03-14 13:24:28'),
(968, 'خالد سالمان احمد سالمان', '29805142501772', '$2y$10$EB4qwFqz1zDGcBVCllHEX.Fnr6CNSPWlgFQvThOLaBb04hBhkn8Vm', 4, 'H3lFntwtSM6mR21G6ml3ICqpKYP3um3hpWRZjr70WdNi2ubyi9bEnr8F17qS', '2019-03-14 13:24:28', '2019-03-14 13:24:28'),
(969, 'خلف مصباح خلف مخلوف', '29910252504112', '$2y$10$GoPFqT9YplHbzlyZAyUj9OBl.zu6ceV/jAvwILlBUK4iOAA0uC.wK', 4, 'SuvFmojnIpgE42pujUgc3GNgcz0922DSDjrIJnHqnF7o9gwjWbWguXYOhMNG', '2019-03-14 13:24:28', '2019-03-14 13:24:28'),
(970, 'خلود الحسينى احمد محمد', '30001092500609', '$2y$10$.CIrtLNQY3quyQAIhMzAvOlqI0/YeVmfTusvMxD7cmP0mV/hGrrB6', 4, 'GBxzOxX8njLdx9MHPVhOR8PgKL8FnBK3e6syJiXLDHApgiVXeenmxHcBLj10', '2019-03-14 13:24:28', '2019-03-14 13:24:28'),
(971, 'دعاء ابراهيم محمد احمد', '30009232800285', '$2y$10$jmFDNJjIsbfYLUcxbxB8z.km1Y1U8cOiQ3C5OgJKtBpdVneu5QNsm', 4, 'iaFZcvQG7ssspGFrad49ywwCXL8beShkLMI2FyFo67WFj4Uh9gW5aLsKpcyx', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(972, 'دعاء احمد سالمان احمد', '30003013100326', '$2y$10$CG7/r2kM9p5K2ZBrg..m4uXc6OnF9D1Qk0GB409HjfNfsyxEKWDIi', 4, 'D7u1buHIuNmrBFb8AVUiXcPbjBdLLASbzUdfRQ9u633hirp5J3u3VnYuKMoY', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(973, 'دعاء سعد الدين يسن احمد', '30004292600763', '$2y$10$DC5yNqdXtT/vhbSpIRxyq.Lspl8JsqrLltsytKcWjHzUk.LJctwiu', 4, 'zOOTXH6VA4JC9Zac4e2UkDt0lyx6r1o9J0tj7YPonML1gs5l1hJlXF6lhTRf', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(974, 'دميان رفيق تاوضروس دميان', '30007122601934', '$2y$10$RzzhRFpk51SvopohAyv88uhYeTTHf.b8Clv4yLEoR.ENdlkOinOKi', 4, 'd1XARpzEGkkfRuKGNxMfbVFBnjpqo7ebLlnq2p1OG1q4bwO3UEOnb60SglAU', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(975, 'دولاجى باقى فرهيد شاكر', '30009092602283', '$2y$10$.gF1Ydf33HoQtu9dOFDDQ.XGbw4P0esG8GdPRYywltwApdmlpEWyq', 4, 'Jqmhyb9wKxXTBE4x1fXzUvmfLhqLrjEeNuXrMTIBneIg16j1KR5r9QvAeAfL', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(976, 'دينا ابوزيد فرغلى عبدالحليم', '30004272501181', '$2y$10$QihdbYySdp6bS78NfjzbN.t66fjyRC.EDtjb7INzFX4OxtMS/RzrW', 4, 'Cu0a6KegHtPLdZYFPqpUoTeD82QMKSBxvazw6CyEwJ8M44Q9m4ShYhWRNmM5', '2019-03-14 13:24:29', '2019-03-14 13:24:29'),
(977, 'رامى منازع علام زناتى', '30008052601679', '$2y$10$OK/hokDJcLiGYutQEQDok.fFJglZNN7QIq3ZM5c9DVn3X8XHpwP9u', 4, 'ESiFC3L46P0FhCysl4ic9yvdcW1sVU9PvQVEeTMzD0jROGCnXqIQc4rNgyuK', '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(978, 'رانيا كامل حبشى عبيد', '30006182601864', '$2y$10$YFZDRh5OI9lJP8AUaRF4/Ouo96GvErjvqPd.Y7gw77eke./CxU7RW', 4, 'dRVTcKpKsxwdT2SPo8MDVVdJQiNxVjH3JIwlaLiz60mYJza2eMnhGPEnLM4V', '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(979, 'رضوى هشام محمدحسني علم الدين', '30004252500367', '$2y$10$15xBz6qPZbKFdpq30A3Agu6ZDNZgMiQK0TgyBMQmN8B38Npsol66u', 4, NULL, '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(980, 'سعد صفوت سعد الدين محمد', '29909152600892', '$2y$10$QjZtz8IelfoDnM4IOIu3NObv7yJsr518OHXj6jnJuwH2X8.5Y6L8W', 4, 'xb5mS6ULNh6irZMvQaHwjvcppSMeCJvu4cEb2Sfc9hyhikvEaHDtbtARpvVV', '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(981, 'سلام راضى رمضان عثمان', '29911012620537', '$2y$10$AIU88Xp30wil91J6D4EcNOUCazuGvz8IlM45/VZenwDHephM0FdY6', 4, '8RbGnV3IdrsELR3ho2goBzIDPs2FGTnLUK7BUZc7wuLOq22ViotwIRQL4NrU', '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(982, 'سنا عبدالباقى راضى عبدالباقى', '30004168800703', '$2y$10$THdWHZb4yrwVVovUMqKcYuR.cm1yIjcePZAO7oDivK8s7K7aSkH/S', 4, 'oAMKvjHrN6CNmj1WhOCzFTTuVNozXiW9rN4zkXRV6U04Cy3pJWVtN2g0blH4', '2019-03-14 13:24:30', '2019-03-14 13:24:30'),
(983, 'شهاب هشام انور امين', '30003312500497', '$2y$10$WjDB.dlFe0hv29xjn7dEfeogNyvm1Jzgl/SRQBSdNptiFbaMDsL2m', 4, 'yWdrlSFmWclwMhnC5ANIkR7dSqJylgJyTVhJKiPK5ss2H4efbDVGtWIhjxCn', '2019-03-14 13:24:31', '2019-03-14 13:24:31'),
(984, 'ضياء الدين محمود محمد احمد', '30002132600136', '$2y$10$0TQiXCnPX0aUQ0cKjeTg9.X.rtmFTE1df/lyrChkFvcjEpNTlXU9O', 4, 'gvouoGhcBmFzUREtKED2U7UF1KVqCnIXyVQil1OxScEGeNb3Hzjo59a2xk0p', '2019-03-14 13:24:31', '2019-03-14 13:24:31'),
(985, 'عبد الله محمد محمود ابوبريك', '30003228800795', '$2y$10$AtZEpCxElXW7GtJw33H/v.IoV6vU0MhAnZg00HM5inN3QGdwB1B/u', 4, 'h8r8DRSKxuGHchbC8bBGKAxxPkAuzy2GmMATrmdDzgm4oTwD9nea034FrBJE', '2019-03-14 13:24:31', '2019-03-14 13:24:31'),
(986, 'عبدالرحمن جمال احمد محمد', '29912112500535', '$2y$10$JIXCOH40GXuIdbM98ee4U.L6xxsNpufS2i4IYP0aVYLijXNVtmO5q', 4, '3jJiyWc3QnH4zyDErVSwG6XK8tLocxJ9q1T2Ki513d2s4PD8e699oESDWTYB', '2019-03-14 13:24:31', '2019-03-14 13:24:31'),
(987, 'عبدالرحمن سيد عبدالرحمن سيد', '30003262700295', '$2y$10$vdRp4y.dmMmdjJFbwnewOuxAuGVvF5dw45hGi26mdDqbth.xv4dFy', 4, 'MdR01nGDawi6p8BByWqs1wucgUcAFB71QAQBAspT0ymA2ExbgqB2T3SaZlMd', '2019-03-14 13:24:31', '2019-03-14 13:24:31'),
(988, 'عبدالرحمن ماهر مخلوف محمود', '30002152607971', '$2y$10$uwqnj.kwCU3BpXbhhR4AzOH4NLcbH8nYyHvBOy5.xNGH8zWpyFrMe', 4, '1mSz7kvTP9sxerVCVo8iLxEAtRPVlwtd1iqGAIWAah64Oclvn42VuglttF0M', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(989, 'عبدالعزيز ناصر فتحى محمد', '30006242502836', '$2y$10$Y8C7.JeXmi3ez2zluTbHze7RDbpDN6Ol2Eu1HJYMXhhd1KJ77UaL.', 4, 'RvqxyxFhxemrZ2qkgdrpEqehMrZlnLwz84YoklCCb9ltvISgMmSRUNnQ6dqI', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(990, 'عبدالله احمد حمدى محمد', '30005062501177', '$2y$10$Dwjx5RxISrJ76CZ0tsEViuRMfte7rUdi6Pv/razZW22TchdXjEdPm', 4, 'bjP1caWsWl5rZon8WQzw15L8bWCdxgdsCdJZgNYPCLuf48g3k61vW2SKeAVL', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(991, 'عبدالله احمد عبدالباسط محمد', '29912272500299', '$2y$10$xVRrZkfrUKucDhqSytTHc.xW2hItIBPH.FUzYVVx9x.UeS8syWdFa', 4, 'FrWDZzgsbSBzjU2QnBgB9K25eXrLAvn5i06wZAOkfUdY17hHWjp4qs9T2uHH', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(992, 'عبدالله احمد مهدى عبدالسلام', '29905032600893', '$2y$10$NZGL40UYanNGAtkmj91MGuM8Le36oXBhECg5Q2pYaPvCnZ5WI/6E.', 4, 'd2Npa5xs0vdbxJDjwll0IWYY0FrpOwbj7vrsEl0ilHXNNAUOgqO219EI87Tb', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(993, 'عبدالله الوردانى السيد محمود', '29910102602531', '$2y$10$yqRxVUyzRVGZlIQeTKftIuTVmv8W9LFzc7xGofyq31m9xWqCKq9S2', 4, '43SdcpN20BoFqkDUu1uvxMkifSRjmXJ5o39vArzTyJJ3xjKAFHGqAwMxKO5A', '2019-03-14 13:24:32', '2019-03-14 13:24:32'),
(994, 'عبدالله صلاح الدين عبدالله عثمان', '30003142800318', '$2y$10$WzLw7/cISnJ1.qVx18hwjeLM5Nqrn4DTef.oJHjeq.jxobcpt03gi', 4, 'leyF3OePht0meGgPHr0hOqkH0dsOfP1Hrh95ovouDFVJlKr80sB2ZnkOx56u', '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(995, 'عبدالله عاطف عبدالعظيم على', '29811092502292', '$2y$10$.zGDvWhe2iRAy5elHgaam.fuOseon/gRVFmroZqIpLgKvagQ0ef3i', 4, NULL, '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(996, 'عثمان على محمد منصور', '30001112500473', '$2y$10$XxbxK2LQTug18HkjMj73FuGcW.vDosubkW4ZpFlB9ZtV3VmDU/1qa', 4, 'RcTz8RppqFLaYb0yQG2WhkifXB7VgBcr4AmgkZuaHFVmb7gk82wnAF4wW8O0', '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(997, 'عدنان مصطفى فريد فهمى محمد', '29903162602992', '$2y$10$C4zq0Gpx0Tqm7PwqB7Ewh.DX/9Lfwjx7veDtvvkt3ffsRVBYX2RFS', 4, '0pml3LYXa1ZMLhFbgTPjblJZApg8Cdi0CauYUC9cfzOE9rjUYZCkrABm6ad1', '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(998, 'علاء جاد عدلى حنا', '29805012505211', '$2y$10$xd5QbwEUx9NkXXaUx27OdOR9X2G5FmtMasImX5j0ukIXC.WGhSfc.', 4, 'kSNd1PQLyw97eb7NITm2G9uyvi4seCsLlV9Gf6IMNc3RSV4p3wKuFTp3SOrG', '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(999, 'على احمد عبدالحميد احمد', '30003262600258', '$2y$10$0IXVXBFK1qzAh1VUzuTs7.GfeJAL7on9gnsl187i4Al6m4rgitWne', 4, 'lXn5GsJ5DYFOf9GYiwagtxIFr9EY4CZOgUkaed0SfPQ0Fk01LltxaGcRUdGo', '2019-03-14 13:24:33', '2019-03-14 13:24:33'),
(1000, 'على قضب محمد علي', '30007312500034', '$2y$10$Z0lwGwhfwYhW3o8wFix9b.JPWh/4tuzsDMxmjVXwLuSZfo/bmSF4i', 4, 'KyEjVlRxsw40zKfoWQpGUnMf6FdN2mJQNyZnt9xq7bbmEMFmDhAQoHuJsD5B', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1001, 'على ماهر محمود محمد', '29911182601839', '$2y$10$EtiLxdnFZSxfeGlanUOqS.g7RHnspFDil/4J.iiNwKnj8Y9TsnA1K', 4, '1Lt6nI4q6XE3KUqkQuDh6BIK8PJ1Cu8DnEoi0hveQvfOTFpTMkkdbZDsUX0L', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1002, 'علياء احمد على احمد', '30007152606086', '$2y$10$/di9ybCnNDO7Wt8U07n6F.lRfPIGgBhRQXmAhiNf9gzPNGYKPIBwC', 4, 'Wclse8wkzk66jCpR3n5cZMHjrlPFVbkdscekePFZDw7CDf2EfGoeLDroX6oh', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1003, 'عمر اشرف عمر عجمى', '30005082602238', '$2y$10$JELQsZYYB9Xp9S1aIxzXd.VZW6hNkps9yuQUzOO.dgFnXwEs3twC.', 4, 'PURsyEmlL0QgrcVjlXMnsHqWBFa3DN8p6aWeMG3MbpaRt0AsJ7IFCtdLBdb1', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1004, 'عمر عبدالرازق عبدالعال سويفى', '29909302502274', '$2y$10$olA8skXr7KDMKt3vFriY8O6uNPoyFF2wcEwuttUSLn0nypFFvfIh6', 4, 'VD0VGHJ6G0kqzhubmMDt7MGyHbdfhZRJzJd7THzSYXZKWt5DxQw0QVfMRMFm', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1005, 'عمر عبدالناصر احمد سيد', '29802082706036', '$2y$10$yAfFK7j9L4STKBwrccAqKOF80ZDQjWQ5vmPBve7OK6U5tnl5NfZXm', 4, 'CjgJ4mhhdBawTp7KJwOI6zM0ZsMV46pq2jZrW6LFNYSAYsfl1FylIOqerHk1', '2019-03-14 13:24:34', '2019-03-14 13:24:34'),
(1006, 'فاطمه عبدالحكيم محمد صادق', '30009012508508', '$2y$10$nitPoo3Hho/uBJLNVO9cU.gXNnmSDl3RU767TFqc0wajSPacGMFs6', 4, NULL, '2019-03-14 13:24:35', '2019-03-14 13:24:35'),
(1007, 'فايز حشمت فايز فهمي', '30009012620472', '$2y$10$pUklYc5Z6fSm8iNpuh7aw.y1bEj7ojwXlBaZetgL07OTk4QH.TjNO', 4, 'ofQXWEne6cwzyRYMFvdMFNtatb8g2KPIT8mVDEMRBo8Ud9dCkeJqKU8g5ZJK', '2019-03-14 13:24:35', '2019-03-14 13:24:35'),
(1008, 'كريم خالد على احمد', '30008132500431', '$2y$10$Y6H3tRG3LHcrw.PCInOJvuc8cs.DLwOzXxGkxUR2AXw/M/M60KZkW', 4, 'X2WvOJ2EekK3qkb2dE6A0rzWu7x7YhEhK4uhYJqNkdVJpRtfE0PCYL0b3W58', '2019-03-14 13:24:35', '2019-03-14 13:24:35'),
(1009, 'كيرلس انسى صبحى انيس', '30101212501692', '$2y$10$z0bs.Bxk.ThIwhSikTQ1e.ephuNQQg1jLdWG226K5AuU8UpzVscyi', 4, 'PYArsLI3Svpcl90Ls1SNj1joalNmjn3GctSAl8DMetJOZLSA90FmzQGnXQT5', '2019-03-14 13:24:35', '2019-03-14 13:24:35'),
(1010, 'كيرلس رومانى صموئيل ميخائيل', '29910282501797', '$2y$10$idGq5BswxR5PKFNllfz0OuvtPdKMuF4uyAR6azjVBBi0cT5Ev5QQO', 4, 'y8DPfXYSG2YinGD23kOzCDmdvPEmBjmxE3i0xpAe3UKFuF38wVnmS8YZDxUB', '2019-03-14 13:24:35', '2019-03-14 13:24:35'),
(1011, 'كيرلس نادى اسرافيم تاوضروس', '30009192501832', '$2y$10$588.dAIcGUivlwfd28GRoOtSOylqRqYpNVhAsvO87SH75o69l7JRC', 4, 'gaYwkr45Z1P98LMVKxawBNVoY7kOTxKbOJzRJSkCSFYGuVk58Rs9lTVL1LaD', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1012, 'ماتيوس متياس اسعد فهيم', '30002052503695', '$2y$10$DYEz94BJM99lANr2rCwUkeMQDFtDNkkpwYtOTqEl7Em9SZ0JE9THa', 4, 'vKGCEZIrFqfXhpJ6L54OwkO1x70BDyImF6hT0s7c5rp1xfm1YucB1zEURUHw', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1013, 'مايكل ميلاد لبيب فرج', '30008242502251', '$2y$10$JbUt0fCX.LBDpvDA8DHgWO/DP1V0lxm7EbYMWiQUj5eeZ6WskQTwW', 4, 'pHMO0oiyv9PTKMAH8Q301HkfvFfAtzZOp90NFhg394fwXwkx4C0ky3dgIZCt', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1014, 'محمد احمد حسن احمد', '30005273100039', '$2y$10$DI5r0MU0X2X10wmprg1vyuo86X7G9MT4BbgrNLYFML4aElZ0orC7u', 4, 'HWJPY9Pdy4vzx7bEH9MjEkjC7ovvKVya4sosoH8yElcM9Srd7KJSy5AgJxp2', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1015, 'محمد احمد حسن شحاته', '30001202700919', '$2y$10$ORIxEmuQSNXHMD2oDQ9Px.BUmd3ilScatPlUIHiUo/b939c5C.iju', 4, 'GfDLOwucxQCxQ7pPp0fWZHeYnhO8dRDIENV5NzydVpPwFpKrxHM03JAcPnbA', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1016, 'محمد احمد طه احمد', '30006142501735', '$2y$10$ipaNb7s.kS3j0NrA9B8oseBCXd/bUhVHlUAqENAFKYaoiBovZe5qG', 4, 'gls16x4ZEi0jqBTvNsilsd5ALAsAhd7IVE4z7RtSfSeeDxdkdoEFEj9tEyvF', '2019-03-14 13:24:36', '2019-03-14 13:24:36'),
(1017, 'محمد احمد محمد على', '29905042500935', '$2y$10$xtjNCAykJsp0BQ5riYWoaeGrF3H7x7IaXCpP2joOdNYH/mXek/b0C', 4, '3LfGjkSj4d19OfmORXz7R8Wg3usXnMgBiherbuawqDLeXK3r2wGuez5CdnQN', '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1018, 'محمد احمد هاشم محمود', '29903012704312', '$2y$10$9OdBS7cFzZ4AvvlGocMiIejpHbKQWveiDDTI1je9W89w9HYRLKTyi', 4, 'IYDVxYAtdn19LlU1CNfizXffy5wTvAuRgnNA4w4zW7XzJFyqFdoXYuRsVMU5', '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1019, 'محمد انور نجيب عبدالنبى', '29911082501799', '$2y$10$Ct5AAbZBeLP7zq7/1uZDVuGBT5rjhNqHSxlJAj.QgBhtzcPi6Q0VO', 4, NULL, '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1020, 'محمد ايمن على سليم', '30101248800653', '$2y$10$qSozvnuFJi4WzOncU1RwZucfmn7vAtr/HeHNnPXM6a6mxPUlkp4DK', 4, 'NZo6GJaLzuNafpHSM9XJpLeliAgFXaZm6ql0xCIzyutCGJ2yALx7Vk8vdjJK', '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1021, 'محمد ايمن محمد عبدالمطلب', '29907152603317', '$2y$10$paNX9GoZJQoJ7OQPO4fbNOeERDYqnk0NwbBAX6M18DBHpbDdNMAh6', 4, 'jh72aMUlzFlfdEqgNZuxis0ifhpr364zl8GJni7IBF2EaAt7EyweLpuZ0uKJ', '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1022, 'محمد جادالرب عبدالحميد محمد', '29707132502418', '$2y$10$lYYkehkhHdKKlBT6XGVp7OaDIxNyNBPFnr4bs3bPf2KUt3hIVkeDC', 4, 'kaDvEWwrSNGANvCXrSZSfvFVCb2AKP9Q1wURUAyDia3vYS1En9LXGo9ydxX0', '2019-03-14 13:24:37', '2019-03-14 13:24:37'),
(1023, 'محمد جمال عبدالناصر احمد عبدالحافظ', '29906052602376', '$2y$10$UfMdmeFJtKYuYucaclR9xeIM086oO4DwUxwfnWyEXpT9xbzd/Ktbu', 4, 'OmwItp6WLiBqiL105CZ5N8amMoPbeiRcWvMwkwCjBNQyzcw0MdFYXxUEqVV7', '2019-03-14 13:24:38', '2019-03-14 13:24:38'),
(1024, 'محمد حسام الدين محمود عاطف حسن الشاذلى', '30010272600392', '$2y$10$1TrHuOPL4REFzFEqa34QZeRGhs6MVFMPnb1lN2/I0..bjE9sOk7sC', 4, NULL, '2019-03-14 13:24:38', '2019-03-14 13:24:38'),
(1025, 'محمد حسين السيد حسين الرزاز', '30006211200513', '$2y$10$.1Kr19Jt.XObNAAz7Kksdu6JpQhiMmxqQLdBp6vsype4GWm0sorEG', 4, NULL, '2019-03-14 13:24:38', '2019-03-14 13:24:38'),
(1026, 'محمد حمدي عبدالرحيم احمد', '30008012802337', '$2y$10$wh36rOEblB5EEAnHPXjqQu9hFncZNkTbAzrTMhKRWqUjuM2kgaKSe', 4, NULL, '2019-03-14 13:24:38', '2019-03-14 13:24:38'),
(1027, 'محمد حنفي محمود سيد', '30005063200057', '$2y$10$Q0wXHuOiuz43jDrhn9rNT.1jNWs3mK./HvHheKJqXDZu7hss7a/ny', 4, 'Zcb076bAusYYMUfbEdJIVllWMkJbbxTDA9AVvplydHVSMPdaqoSY4Cvzs0V4', '2019-03-14 13:24:38', '2019-03-14 13:24:38'),
(1028, 'محمد خضر احمد هاشم', '30003272600256', '$2y$10$4fwEKLneIOvVmfzfSGjC/eyBWOnA635uoSDI6vFqHuOTdrFHRBBMG', 4, NULL, '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1029, 'محمد رشوان عبدالودود محمد', '30007228800774', '$2y$10$4yf1eEcGH3aq47xe0C4.4ehNMXPnT0dvG.uYgpKouzCA/rx.e3Hna', 4, NULL, '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1030, 'محمد رمضان جاد الله محمد', '30002012613595', '$2y$10$avw1KbmVp/pxLxb15Gnfw.FDG/I.6Wc2ENMFiGkJDZkTlzzxv/aKC', 4, NULL, '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1031, 'محمد سامي وهبه متيرد', '30009251101177', '$2y$10$OhyfrArin1tsxggHaIOIHerFnbW4d4ahNt.axFBLwa1RKS8cEKFD6', 4, NULL, '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1032, 'محمد سيد محمود عبداللاه', '29910032501996', '$2y$10$XxUQOY9q9kR2wCAlaYqWQeWfEjjO3OR5mSQgRYOXmhse8RBx2HkAG', 4, NULL, '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1033, 'محمد سيد محمود يوسف', '29911112500695', '$2y$10$uFnPbJ4XQQRX9N47h9aQaunNry4C3Y3YtHkw1utDPA7IEYRUz7hrW', 4, 'RZ5wp2DLFZdwjodo69cQcEWf68NWs3t2z22ufLRy5PZNSWWOi4qxTwZiFA1m', '2019-03-14 13:24:39', '2019-03-14 13:24:39'),
(1034, 'محمد صالح فكرى عبدالمجيد', '29810252500414', '$2y$10$AQ8sa8HG0/v1AgQsCH9zVOLOX4FyJxLQrdBRK.e2U9WQYC5uQTpve', 4, 'gWXFz2PnfwfbS0efHB4YtOZJU19wf2PH4LTWU6L2NZvUVDBYXZV2RfclK0Sy', '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1035, 'محمد صبرى رجب عبدالله', '30010012626371', '$2y$10$4lPgfpA.HqdTjvFMoMibGeggQJqzKNuN3ptU55Q3oqL9nDQEeRnOm', 4, 'AYiywpFCe645dLu9bQfUUlGCRI3zoU2H8oBtPhTq8qWzZM2HKg8syIbor1iQ', '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1036, 'محمد صفوت خضر حسين', '30001022502116', '$2y$10$eD8UX5dVNZQA4.6NdWwF4u8ubxyu8Zg8QaSTNXUInlJmteEj3/nMK', 4, NULL, '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1037, 'محمد صلاح احمد عبدالحافظ', '30002022502635', '$2y$10$iRoNiXLF9xbmzdtYtfHx2em9dVgU6GuC8TMM0oiI7Z2RJZcss3ugm', 4, NULL, '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1038, 'محمد طارق محمد ابوالمجد', '30103202503711', '$2y$10$lFUMcAsmk4VH0DSzpH8UqemiiEcx8oTvPfggTYcXPY0AE/rVka/Gy', 4, 'STdEu77NDwJDfXT4yDadVYdFc8koUUrM0TsK4tEW0Viv52uCeYE0NIbiKg6E', '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1039, 'محمد عبدالحكيم عبدالعاطى عبدالحكيم', '29905308800093', '$2y$10$v094ipyFeVN6waWElC5IE.WiSQ/B4IZu8ZqWdPLpV2OhszKWdDJga', 4, 'b21b8fxSg7HVzOgUwmg51PGpSa4oTurQcGlkVRslXtIqAz2en02iSE1NIfgU', '2019-03-14 13:24:40', '2019-03-14 13:24:40'),
(1040, 'محمد عصام محمد حامد', '30005018800116', '$2y$10$xEnPMVo7BuOGlVm6EP5cH.E8qP/HYqFk3Pd1Ep/PazImOt5jwpVD6', 4, NULL, '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1041, 'محمد فتوح محمود بهجه', '30001012670398', '$2y$10$UhxFJMINIAMJvIVe0q4IT.GYlAzUB.2SWEyFS.GqTHb3IsYhEpwMG', 4, NULL, '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1042, 'محمد محمود عبدالتواب يوسف', '30008312500111', '$2y$10$xqUm012X49tproXCO3qRu.2q8SA.goobY/lrPbdRuATiGYPZ6TxYS', 4, 'FTAiCwZvS3Rhn5x8epJxAGCueIYRCH1wSQugoSILtiWzfVfFIU80nYchrStl', '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1043, 'محمد محمود عفيفى عطية', '30005171402316', '$2y$10$KMAMHldvhZt5kqDV49JcuOpAWUQDxU6vHA3Qpr0wxbCLr5GlHRad6', 4, NULL, '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1044, 'محمد محى الدين سلامه محمد', '29907252502755', '$2y$10$vWYpSU5W7Wl5VzJGXsmg3OsVAjozvZMX5yUCuC84sYf9clOaixoF2', 4, 'lGygSFEjWh91ab9hto9pmUsvUdj0m9pwYGf52IyyI1CboQGNYuiHflu7bs81', '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1045, 'محمد مصطفى فتحى عبدالجابر', '30002192501374', '$2y$10$1gt8P0BKuSSBM6Bf7vcR8ejD3G9vstcnZBLln5UVoCHZl/oGao2om', 4, 'haZDJtGc3cPi115PxAi99HjY987Vyth1VZXBgX4LeBRbdyixT9ALB06UcJUG', '2019-03-14 13:24:41', '2019-03-14 13:24:41'),
(1046, 'محمد ممدوح فتحى احمد', '29812292501017', '$2y$10$3VDWUoRE2v7WM4rTG77MM.3jiT5aGtDHVp14lI/N3yCs.Nt0hbmwq', 4, 'eWjQCp3HpgL8SAT8cS10t9SEGQJHaVmpnkqcdkXvdm9fyERS4naODHAHc9Zz', '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1047, 'محمد نصر عبدالرازق جودة', '29911192500593', '$2y$10$WeIojbnqPDj5MsnXT76pquXXNY.qrr3KjGu6nbSmhyzgGn9Z0dsU.', 4, 'swXGb6VWRMiJaWHOzlq2UR0P4AWESh2bMvNs9guv0KfhU2q1sSNhmThlyvAP', '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1048, 'محمد يكن محمد جاد الرب', '30011268801096', '$2y$10$2VyEgq0vYF23toIj6Qe4AuVXBAUqP8JgE/GD94bo8.vmuxax97BLO', 4, NULL, '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1049, 'محمد يوسف محمد مصطفى', '30001013100757', '$2y$10$uDSU8S9bA6wP3.hAee7y1O3tPKaLuyTKBvdpcmnXnZkOrigaenuke', 4, 'PCpG606cQWt1wB1w7pZdP5Uk7EzHoPkgd9UkKWGNw8dWn7YL0mvOEiMRlvik', '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1050, 'محمود ابراهيم خميس متولى', '29909132501154', '$2y$10$S3IoSlREhAojnagUz7q6B.aWyjfnCfpAb4bbNh9PwNYBWeW3wo1pS', 4, NULL, '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1051, 'محمود حسين عبد ربه عبدالعليم', '30001250202874', '$2y$10$pVMKKfRB/37wDQO7.UX15OgbUqJDLB0E6qRv8iPdydiy4VYzpyKIy', 4, '2VlzzLOzP2Ocq20M5D1eKrJ371Lvkiyr85GSb52KsuYJNbJSVgCP1EE7RGFn', '2019-03-14 13:24:42', '2019-03-14 13:24:42'),
(1052, 'محمود حمدى مرسى احمد', '30001092600255', '$2y$10$Sy2/XBki3/b5uGA3YWiL.utXdUcZ9JboaoIfy7LyvAeVEdV8UAxPm', 4, 'xeo3Nu0pqMLl7hNs59VxKGU85BJoM05E0dTMs0YKus2pW0TfiLo88HcA3xh7', '2019-03-14 13:24:43', '2019-03-14 13:24:43'),
(1053, 'محمود حنفى محمود عبدالكريم', '29909012505695', '$2y$10$zNZn9yo.WpyXkp71k6UqeekC6xL0gBP2DFqwA844BqA6rGQGjG4SC', 4, NULL, '2019-03-14 13:24:43', '2019-03-14 13:24:43'),
(1054, 'محمود رجب بكري علي', '30003282701611', '$2y$10$MnwN7kqO.UA3Bnu/DdU/JOs4e7DPhNgq7SEUJX2VpzRj.vk0Nlrni', 4, 'uo63sb2DRPJoAcENgQ0aGr2kivt2l8A4gK3yzYQwCfJ1WvNMATP08VSpXGnI', '2019-03-14 13:24:43', '2019-03-14 13:24:43'),
(1055, 'محمود سيد حسن سيد', '30002212500752', '$2y$10$o1Kf4v79gJ5.sC76LMf2Cew8I/qRJQ1qUCpml93v40aCM.RLTijKy', 4, 'wwSjHQBpux3okEE5xxqHpD8Pxd2Fe7OXZC1AsGund8AxboMaSqI4xyjkFWkU', '2019-03-14 13:24:43', '2019-03-14 13:24:43'),
(1056, 'محمود عبدالرحيم عباس حسنين', '30001102700873', '$2y$10$RYnuU/qBVyKMmVJDY/6kM.HoL7TldhFPvjmfYUs1pZztHCW2felaW', 4, 'q1UBZUqyASFggSAuw1jetOKZ8pCv6psv3ljXjtCGCjexK3BmU8nifJiaKEM0', '2019-03-14 13:24:43', '2019-03-14 13:24:43'),
(1057, 'محمود عبدالكريم محمد خلف', '30006192502295', '$2y$10$TH2uwqBhbnFXjyg6oURNhuXcjMEdCRl9C1Nu/rg0UVLaiFTLPRaHK', 4, 'jZizCBtYJxESvJRhSmpoorFT2siS3xqxGRHnp9awPcaFhx1M74LQioN3L4a3', '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1058, 'محمود علاء القياس ابراهيم القياس', '30009090202512', '$2y$10$qvCcSg8e2fQzG4nr4x28eu9oAlcvyZ8n0zAp2MOugZ8bKC.xX/qae', 4, NULL, '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1059, 'محمود عماد الدين عبدالسلام اسماعيل', '29902012701015', '$2y$10$JI1F41Wxw7OCPxu39DDy3u6e7IaC834SY1NsxmEWQFd95uW61.r5S', 4, 'E5OPyLwk5qRr46AGpr8IF8jESiheADP4lR5cUG4dqDE7IvYDpQTBNFFg27Kt', '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1060, 'محمود محمد ابوضيف عبدالحفيظ', '30005012608515', '$2y$10$nLgIM3wRozI0a/ydyZ4syuapUUzD8sT8PUpqwKX90H7K0tml.23nm', 4, '234dmWEXvwtdvLGRUH0Lv5dEJyE65SJdOHqZtpWJhsVQr9iCSbYTbUaIjk32', '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1061, 'محمود محمد الصادق علي محمود', '30009302801578', '$2y$10$IfZ9jBQx6mLGD6WzXygWh.15I.fJZvgme0SZQQB9H4pBr7.YHZWQG', 4, 'zlZ7tqZI3rcg5upLEx9WvLD33FJkRbufFRZYNGaJ6kZSsnS9m5TZpMh3obxw', '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1062, 'محمود محمد سيد محمد', '30005242501116', '$2y$10$9cj0bnaOdNRjXMykFUC/F.TImpDPYBlc.ZGF5teZn.X5qLzpHeETm', 4, 'nzKOhoAcUjAy2Ylf09bjZ4RVRx5pIvqjlvyyuZIjbxm7X6Lji65KngVLCwt0', '2019-03-14 13:24:44', '2019-03-14 13:24:44'),
(1063, 'محمود محمد محمود عبدالعال', '30008092502495', '$2y$10$xr81yaDq.8OCSnLokHxKuO19j1kBHOYSLundZaxYERYViBHsj6dqG', 4, 'xuXkju8oPWHZ0R53N9mgsffodBjPrNpIi6ZHfrK8yeDw1JzinHECefYvTBlq', '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1064, 'محمود ناجى رمضان على', '29810242502737', '$2y$10$H6Mrx/6QrkwnmjYAYaGcWeuhDawFPbheYSNsVozqOIElQrkuROguW', 4, 'lxK0PhkZ3Nph2mfZxEDjYGlerM1LzE85Ad5ioWlY1k6o9O0AII8pxORLTBof', '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1065, 'مروه عبداللاه على محمدين', '29911012506084', '$2y$10$e/U0u6sS7GeGhHIRt0ll7.RM2Fp69WHN62uqE9hMb1FHo9if5HZ22', 4, 'xKlm8JKJzbPEopR6iXLbf94WrkqfdenHD4Vom01MqsBHpLlNxWgCIbHikone', '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1066, 'مريم اسامه عثمان على', '30009302500624', '$2y$10$XDuDfWV.LXNEE9q4t5CyC.zIXfyrY.a8tn7KoHecNOZ.44dqKL1/u', 4, NULL, '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1067, 'مصطفى احمد محمد السيد مرسى', '29812271400679', '$2y$10$qGFfgixGuf.3PtVpfPzDR.G16dgJcPFYrQRYwx8/cptmu2F21lWyi', 4, NULL, '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1068, 'مصطفى احمد محمد حسن', '30008032502992', '$2y$10$WV5WJPpiiun6OJZgU/XAZ.4PmZsQUgTYQHSZGIvbosuLldWx0BAoC', 4, 'Jm7hVJlyILyoxPnu2N8rlYjwSOpYDba73UZWdcCFHPYsYYSMG1wTobJZLKPw', '2019-03-14 13:24:45', '2019-03-14 13:24:45'),
(1069, 'مصطفى حسنى فرغلى محمد', '29905062502373', '$2y$10$QxY9IguEuK6O6mwHFz2Y.ezicMPe1UEM3fQH1Nrq726b9au8RlCu6', 4, 'HhwaZnxA8Bde48zZdtll0N6d2Q6AUwW3EHLOSrS76I3WxICiCiqYW5RSr3OV', '2019-03-14 13:24:46', '2019-03-14 13:24:46'),
(1070, 'مصطفي حسين امين محمود', '29907242701156', '$2y$10$W1ERWyAHF50OYlIzt5alpOPfDcjbVZ./28DnOqMWkxEIJoXaHVZaW', 4, 'hdr5kaMhDHblyCisAxZwTjyRCLjtibRI7x0VKkxto1nUwURh39rV8X1gJFT2', '2019-03-14 13:24:46', '2019-03-14 13:24:46'),
(1071, 'مصطفى سمير مصطفى محفوظ', '29905082501292', '$2y$10$aT51LrJWh1DLIgNuba8uKeTjk9px66neW1m.Yvx5lqCSVC.5.h9JW', 4, '2le5ZKWRATNcMnjuxPlE4B60b0yjIRw3JRwOrV16psHzkR99gH2PxRiqHZNS', '2019-03-14 13:24:46', '2019-03-14 13:24:46'),
(1072, 'مصطفى طلعت حسن احمد', '29909242500951', '$2y$10$6nWst0kKvP4TEx/D.z4IDO106R3ngRbmPsrlL40DyL7NGPXiMI9KW', 4, 'MtegBR1I3L3lThZHXsF1qu4bW0LrbYRCEL2sHqTUcwy3Ssm0vDkm3vEvx2nr', '2019-03-14 13:24:46', '2019-03-14 13:24:46'),
(1073, 'مصطفي عادل محمد ابوبكر', '30012103200094', '$2y$10$.1Hq0C3U.22WNem85gWaBealRoZlcUVukObnW9Ys0iUahtZFSjLHu', 4, 'DsTm7fIJgGhlQlv2FonuTxjQKmW6htfmiI8ef4qO0OAAOfxLrdBCUNKGZw6x', '2019-03-14 13:24:46', '2019-03-14 13:24:46'),
(1074, 'مصطفي عطيه احمد حسن', '30009102703873', '$2y$10$.sEDjF212d9Pxa5WlQyJG.rmBo.E8rJ.XBsE1EeYuu8ZEsMwVfMSi', 4, 'pL24iASH9RdK9ay0peQRuisnIz0Ob7LuLzT3uXqJmLfHp7mSZcqGr00lec01', '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1075, 'مصطفى محمد بخيت عبدالكريم', '30004012606214', '$2y$10$s23ikVazzsaQ86gm7cWbtOaZ/.7BDCaQPcs0p.Bd7KfHfVEW0Da3O', 4, NULL, '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1076, 'مصطفى محمد عبدالمجيد ابراهيم دسوقى', '30010211402938', '$2y$10$ylijKasFJJs5Zq7NR/9d4el28.jCZMkYoGjaK8jvbcxqvSOy15SfG', 4, NULL, '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1077, 'مصطفى مقنع حسان عباس', '30003012511039', '$2y$10$C6/h4cyAD89qnnB0ki0clOo790xsW7QwU.BI/UCpLPt60f2SXOhza', 4, 'KCd3s8WGpRhHweoT6LHbWgIkZkBlXowBMLWIXa6alECXA2HgA1g9OXBtfEEs', '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1078, 'مهند هشام عبدالمنعم عبدالسلام', '30001242501315', '$2y$10$Etq/HFx/YkO3rd1wUFV6.uS4Ns74bUC8HrfYPtrk32cyUQdk0h2F6', 4, 'SjPDoJf1Eclu5GUA0LNnU0KKq7tE305dEUais89JveLNP9XecXID19nYLnFN', '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1079, 'مولر مجدي نمر جاد الكريم', '30007072502077', '$2y$10$IcUC9QFfykQmHTdY.cscWuWHo51iabUFFU9FmtcLGBEGF6mzvDUjK', 4, NULL, '2019-03-14 13:24:47', '2019-03-14 13:24:47'),
(1080, 'ميار عاطف نجيب عبد الظاهر', '30001052503206', '$2y$10$zKKMKktitbBp/pX/hH64w.xY3EUPnlWpWkpkCUxllCaKbmjRyONxm', 4, NULL, '2019-03-14 13:24:48', '2019-03-14 13:24:48'),
(1081, 'ميرنا حربى عبدالشهيد رزق', '29901012516483', '$2y$10$gv7ENxjcZAXZlQOGx8ZzuuDNtW22qIxSd/7k2o5oXKl7NQTA6zMv6', 4, NULL, '2019-03-14 13:24:48', '2019-03-14 13:24:48'),
(1082, 'مينا عماد حليم اسحق', '29812052502792', '$2y$10$neiisp3h06A7hz0fKKGiRefLQeybTQwKygT3OFnd5mPso7HH8w8jq', 4, '7YGtiw5uPMZeh714XuWJQaQuRy55uTzZv4A3kXcbp75kEe8F8XJkLYnYai1l', '2019-03-14 13:24:48', '2019-03-14 13:24:48'),
(1083, 'مينا ميلاد محروس يعقوب', '30008022500096', '$2y$10$Vl/TbS/9vzBILU0ncM/qPeNo5fsY/AOdetQHGBNMuPbXYC./B/spq', 4, 'ryHLhKNfbwUeTG75ivxLLOb3VkNGJcV0NNJ3ZwgnPTDAjBEWyCMow3RFwwkx', '2019-03-14 13:24:48', '2019-03-14 13:24:48');
INSERT INTO `users` (`id`, `name`, `email`, `password`, `role`, `remember_token`, `created_at`, `updated_at`) VALUES
(1084, 'نجم الدين عثمان سيد حسين', '30008142501916', '$2y$10$di9mH5G4O5xub6ns6ZPDluuXcE2p3akLkbfJQIWeDkGNpe8qtDiuu', 4, 'IPomgS97cUegYO118qrve6k3z9Tn9MdGSSGTqooMyw1D5YqfJ0t8PIyoJLZj', '2019-03-14 13:24:48', '2019-03-14 13:24:48'),
(1085, 'نحمده محمد عبدالباسط حسين', '30006252500629', '$2y$10$ZwdXBG4oa7m7oDq0kWJfb.DG/.qvFPG2o/SayTr4bBMyj/LVkIsdW', 4, NULL, '2019-03-14 13:24:48', '2019-03-14 13:24:48'),
(1086, 'ندى وائل مصطفى محمود', '30006072501864', '$2y$10$JEEjuxLnnZ1EeWTB9NbKtO307yFef5dB9CThzMM3uKbf0OW7MJvnq', 4, 'hqGLB702bv5rl9vd6RXlDWqwxskLzfz3WRiel3UNg1nBzY0GfgeE2SD7kdiy', '2019-03-14 13:24:49', '2019-03-14 13:24:49'),
(1087, 'نور محمد المختار سيد', '30005282500775', '$2y$10$rI4MF4mnzfisMAxdJC/INub2XNfJEE/jQdYafWIT6VY3yxTI2uNRi', 4, '3ZaJjhIa73KEPOZlOLCL8UwiFPPCMf7V3Z9S6Jwws9qk11uRNYPn4A3cgkrG', '2019-03-14 13:24:49', '2019-03-14 13:24:49'),
(1088, 'نورا محمد عبداللاه سليمان', '29903032500446', '$2y$10$jKmwqSPiw7MXNuUmfQ4CbeEc5Rh2zGp5WXkIppcwuj36NDDSvzrHe', 4, NULL, '2019-03-14 13:24:49', '2019-03-14 13:24:49'),
(1089, 'هند جمعه علي بسيوني', '30003263200164', '$2y$10$n9SnyRRd8KK2TNESd4M/PeTOZuuj6C7TR1F.LCRLHEQe/LyTOfq9K', 4, NULL, '2019-03-14 13:24:49', '2019-03-14 13:24:49'),
(1090, 'وجدى سيد على خلاف', '30002022500691', '$2y$10$Xu4KBlhxDkoC9u83Zxh88OQJYHPwYjkxB.Ndk.rrR4wETsGFO7gqe', 4, 'QJJwuwyijoiNOIpipVK8fBTtVQVZ97eWWRhsXfK0G4qsWMiijeSWy8vbH4ML', '2019-03-14 13:24:49', '2019-03-14 13:24:49'),
(1091, 'ولاء عبدالحكيم محمد عبدالصمد', '29909112603082', '$2y$10$p4hy2kjhkv8uQVGFfGNSj.a9e4mlHOaoLv31MmQHpXGLQ3GhKrN5a', 4, NULL, '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1092, 'ياسمين محمود عبدالعظيم احمد مطر', '29901281402389', '$2y$10$KZ6QtHEHB0eIWVmwFgmDtOOovmzuIpwCEIFOqO0pVn3uL.PZlfLAe', 4, 'eDk5I02S2EdI99NgwUby1G1Uh9vubbRvyTqEWan3cKSRFksnsRPEHeGDIkBo', '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1093, 'يوسف أحمد محمد كامل موقع', '30003140202359', '$2y$10$0Ua9dYpZSEz9EqHutgrxpOzE8G3NfOtTw1rpxTiQczbdDS/FYeZUW', 4, NULL, '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1094, 'يوسف احمد نجاح مهران', '30002052500599', '$2y$10$tzpVzU6GOL.4Uc.UtLaV6.TawcYVJKtuuEuVavtu9nkAI0LDF5PYm', 4, 'Q4NxuZCoGa224fM91lsQwcaKw74zmGJ4WKFMzzZCbZ28UHYeLqWHFZvOsbhj', '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1095, 'يوسف السيد يوسف عبدالله', '30007152606574', '$2y$10$wasp5B92x3Mgb8ATyfXkwO.OtdA8/2TgrqYqAEO8iVaTGisK7PzQm', 4, 'AEV4FXv88FDvFJEt9OONZi1fgDfEmv1fVkWfBWOmxOejbH15qHsnoMcE3RpG', '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1096, 'يوسف عمرو محمد ابراهيم', '30008040103118', '$2y$10$XSuFHWm6HIYkl/vx7Wdlqejt2S2J5biFIpVb3KbrrOnueQwzsAqhO', 4, NULL, '2019-03-14 13:24:50', '2019-03-14 13:24:50'),
(1097, 'محمود ايمن السيد', '29902192100111', '$2y$10$nTKqnyM2q6qaBMScSQhc2eWtMC2ZN3luUjZSOpVptedJNYtjbWP5q', 4, 'n4q2MLyjNv0lFbszNEFLoPgg4zIyItaxzaKew5P4fwKcpIMQF8uXyNFvHhSd', '2019-03-16 06:31:37', '2019-03-16 06:31:37'),
(1098, 'محمد محروص تركى', '29812012604959', '$2y$10$5w4mHVuqpHya3XGsN1KKq.Az/M7IlRSexAHxUNKBRUDNZc0NlRgKS', 4, 'OQGZiiSSdDQrrfYA8yyMXyrNzZ4mwUQqGhc0I1ZgorJWg0UVbSuQ9geYnm6s', '2019-03-16 06:32:10', '2019-03-16 06:32:10'),
(1099, 'عمر محمد عادل', '29809092502913', '$2y$10$tLl45VE3HGHM3s6udDgvZuttjzgQRorVvUSyOLeaDPvhSMRpuryJC', 4, 'JRn7ZgOPhamKuqqPtKuyhrr9NgQJq7qiySUfvbNTf5FzSbZ1yjrhgIjO0S6k', '2019-03-16 06:32:38', '2019-03-16 06:32:38'),
(1100, 'فادى اشرف سمير', '29905032502174', '$2y$10$tvqYlMo/GRWKlob0X6fiUezYuugVLfYAuIHKfUVGUyIXJsOA5hy.K', 4, 'CzDbptTpTWcP9M3E46nFiPdrPyH4avjpSd3J2Ow0cklWj8PHTscJLDM1kTIa', '2019-03-16 06:37:15', '2019-03-16 06:37:15'),
(1101, 'فادى طلعت مختار', '29805182500159', '$2y$10$SxWH4qTX2Z1KCg7E3cAAce7sHZjcyy2c554.VRRXgxIwEL6g7A7KS', 4, 'KjGXWi6OE6Bns5YXy9G0C8wOiZAH7tI7xZmU8pXEjjW1MPrMeDbJn5ZY8XjK', '2019-03-16 06:37:58', '2019-03-16 06:37:58'),
(1102, 'فاو تاج الدين', '29711252602618', '$2y$10$r/LLjrIz2gDUHSHDEDvpQ.LvA8felpsTpFHK.q5nCrBDcEEiuJ7dS', 4, NULL, '2019-03-16 06:38:29', '2019-03-16 06:38:29'),
(1103, 'شريف محمد احمد', '29811212500698', '$2y$10$rqR0TBggkDC3ogHPMrW67eJszqihmmAfSE3x4JdwTqyo8rj9iGukC', 4, 'D78Ch9IIXWsbfSzxYOzj6Eg9KZDAzQ4UD6lBL2S1RaePhhSI9gQGhcNxyHQR', '2019-03-16 06:39:02', '2019-03-16 06:39:02'),
(1104, 'عبد الحميد محمد عبد الحميد', '29701202503036', '$2y$10$7k9G8eVv/hhfNltUEJ9rP.g1NmA55lnIDO52PozJH.k86luIna7DO', 4, '1DkaLBhVtc9GLpJvO4NhFZZjDRnm48Srb4u4DgIK99ZV93ht2WHfuNA8ZAJC', '2019-03-16 06:39:41', '2019-03-16 06:39:41'),
(1105, 'حسام احمد', '29801262500634', '$2y$10$e94vha5v6TxOwBrnDWswpevBOhF/9Wyc7LyflmVYEOn5CCwsG8oj2', 4, 'xvyggX3fQOVCgCTBzPKuZUm4h5oyVEe2AL4hAtfOWqvQRBYTrTB5tOLjsqut', '2019-03-16 06:40:34', '2019-03-16 06:40:34'),
(1106, 'مصطفى حسن محمد', '29801012518619', '$2y$10$HwlMUWNMxfSwIEtANlBwju1ui3vUlnb4EqSpjOFJ3XnVJ.ZoISeTC', 4, 'SZFLK38jZNMf5hXiDVl3VUlU7ftzkwqY82qDdm0jD78My4rCOWARInVRRlaC', '2019-03-16 06:41:08', '2019-03-16 06:41:08'),
(1107, 'محمد سيد حسن', '29804122503675', '$2y$10$YMcSDbjvivo9JBMubN2Wa.wnXsXhRR4z7SXbf0M6dwWHwz1KwQr3u', 4, '4gDShNguLwJxTmElMCV5hPj8JaexqCxAvSh7p7WhxSJZflN4gYvnd53Yiq5G', '2019-03-16 06:42:18', '2019-03-16 06:42:18'),
(1108, 'عمر محمد عبد العظيم', '29607182500713', '$2y$10$HyM8ql8lAOmedloX5pI/PeyU1ALqnnQfmALE.95nhPm./vUX9ITx2', 4, 'mnabO0n0Pfej3aayz0Cq2BTstI0c7a7QikKDi6PbYsfNynMTFzskMmRUKW9f', '2019-03-16 06:48:11', '2019-03-16 06:48:11'),
(1109, 'محمد عاطف قطب', '29807022500317', '$2y$10$G9vOyTpE4v5oKCDTK9LkSOcD/9800RHxBL9D9ySfUB0Jdug1xnfFC', 4, NULL, '2019-03-16 06:48:37', '2019-03-16 06:48:37'),
(1110, 'محمد كرم صديق', '29908112500538', '$2y$10$5oWiOq3fy3U2maDDUb7eCegMEsN63fSByy3G9Be1BaU/vsPwaGrt6', 4, '6Z6ov9Xl7BY57mtbC6t30ZQs2PsrHSTcuOB5MD313DmXQduNI9aSu8es6OY7', '2019-03-16 06:48:59', '2019-03-16 06:48:59'),
(1111, 'على حسن دسوقى', '29901022607035', '$2y$10$pZ2CN7fOwY.wokl97yfJdeEkZHMVppdpz16Cshy8pURbRv9SxDncC', 4, '4uim9ssoiMjqNnpgv8bP8K9Wz617XSieoutEh6B3sqSJBVKIFknDBQdPTnf1', '2019-03-16 06:49:23', '2019-03-16 06:49:23'),
(1112, 'عبدالرحمن احمد طه', '29901012711898', '$2y$10$8GG86qwUpLoCaYf598QpHeLRnDC7v6nomvXm56eBk0p7lZUhljfaK', 4, '71ugjvkfKvd1GVvtdneFXzIMxRVCQiPqhCrZcoGBYEuzP2KEzj3rhqLvWRyA', '2019-03-16 06:49:45', '2019-03-16 06:49:45'),
(1113, 'Hosam Ragab', 'hossamr_1@hotmail.com', '$2y$10$r8FIMKT7vRmseDfBN1LDOeledG5NiqL5wRU2j2OAQIKarznRovDpS', 2, 'vRJpT3BGTS6qLsLoJ8NmPWnUkFJ41KiX8Ck6JdcNSPz4Wpc58SCkGiYEbJ6h', '2019-03-26 06:14:22', '2019-03-26 06:14:22'),
(1114, 'menna', 'mennaelattar3@gmail.com', '$2y$10$lMiUtUTWFuKFN7sm0Om5RuMtMfVb/zkRy25OSgm3aCSUD0nlZaAfi', 1, 'zmbLAywHbLFBygrNN4kgXsqzlYBzXR2HsXzXHl37dbmMU5oii2UQb1VbPLKS', NULL, NULL),
(1115, 'Majid Askar', 'majid1@gmail.com', '$2y$10$swjBH03rnlDuPQT9J8YqqOhmz6DCXPr3sJXHSFBHBQRCuY0KI3vZy', 2, 'uojmK2f3nqRDXoL7kiyzxmFbTrveuFZuVwEw5PwT8ckJBxiowt4d6RKgNaGq', '2019-04-01 07:06:10', '2019-04-01 07:06:10'),
(1116, 'testE', 't@gamil.com', '$2y$10$9t18foN5tECF4kA51NqpRO3U7LHwNEfGEbpFyQgXVVWviLXerq636', 4, 'UCt0jnRVLc07OgaiB3x8nWqRURT6qzs0sc0CM3HO0qXVT48KHq6RYE3isoPM', '2019-04-02 15:41:42', '2019-04-02 15:41:42'),
(1120, 'menna', 'mennaelattar33@gmail.com', '$2y$10$iyvsiWzkbf7gwWM8uiGpR.p7dRVboBy3vW74J5sclnox8qwviKuqC', 4, 'N5gOM33MMo1eLRyla6Hqj082bwds3qVXsCcE6Lzrq5lKlV9JJEvOeIumperi', '2019-04-03 06:20:50', '2019-04-03 06:20:50'),
(1121, 'ابراهيم احمد حامد عبدالكريم', '29809122800396', '$2y$10$Z3K9XQFj7AxWYfeALbsSu.OJwdoRitxnb27M2IuDStcrPcQHaAmMa', 4, 'rYAJPFGqxfo9j0fidP1EVDyznD36D2Xmfxy6HVW0nrTwUHXk4dwDT0qUzt4c', '2019-04-09 03:51:17', '2019-04-09 03:51:17'),
(1122, 'احمد حسنى حامد خالد', '29809192604934', '$2y$10$pnhTNJUTrA.fw0BaVC0Pd.S8xd3gEKVYpZgr8jOF2l/LZ5rpgLb.u', 4, 'sAQ8lwO3JVkx0Fq74ezh5w3qlReTnvsFG3G0LJ8F76WDoJN6Y3NcUZWguVLQ', '2019-04-09 03:51:17', '2019-04-09 03:51:17'),
(1123, 'احمد رضا رجب غريب', '29608072500137', '$2y$10$l.Qau0VHSYZo9qUOQtB/S.EGhmhGlIqh1YMih/30gpJZyD0Q9mNMK', 4, NULL, '2019-04-09 03:51:17', '2019-04-09 03:51:17'),
(1124, 'احمد علاء احمد محمد', '29802282601174', '$2y$10$//1MKoLpcps8folKw3H8QebpbaMu5kmu.w5HN3oCfuWePa5nCG3I.', 4, 'MCnFmjOznBinRfzpaVJhU1xjceNdOFlzDE0jElDmyX9zTdMl3Phoi68IIxZk', '2019-04-09 03:51:17', '2019-04-09 03:51:17'),
(1125, 'اسراء رشاد توفيق احمد', '29804282102588', '$2y$10$B8XKouivtrOqijE9q69dxeUd/kqj99C5pX2gU.ikZ9faDpynshuze', 4, 'PqaHSe6Y1L9HSpFfXwTNfuWjQtZtoTskuso7mGVvHlCbUEjceXEa4RTv4a2A', '2019-04-09 03:51:18', '2019-04-09 03:51:18'),
(1126, 'امال عثمان عبد المعز حسان', '29711102601249', '$2y$10$iPTY.ygSU8PjN2y0einBgeYkpgWsdIAtv0eO8.cB7OdfaU0ed/Dn.', 4, 'W8KIDgfp5VzIyuOk0alAxFMjAPofW60bNhkZTmuTOdmdoSD5MHuI1fn5BjzB', '2019-04-09 03:51:18', '2019-04-09 03:51:18'),
(1127, 'بيتر محروس عزيز لبيب', '29612162500532', '$2y$10$YvbdslB0qWouazEcZOCdmuo/BJIMxfPRH78KeJEdyDTu.UHXRQv5q', 4, 'mpdotVPzaSIIOxJhT6UKQ0HzOccwlXXEhKph2Wfr5mgzkdXPgy1ZuKcg6pKu', '2019-04-09 03:51:18', '2019-04-09 03:51:18'),
(1128, 'دنيا محمد عبد الرحيم', '2970317104447', '$2y$10$ocoCERYlMZpOhrRSDWLlPeQ5FGHa99Nd3nmcxoXDCd9b.362msUJG', 4, '6M586goZWE5tTQlrWcOF06jLXGrRKjyw68Crc6i2WnD2e9v03yVimu6nVfTr', '2019-04-09 03:51:18', '2019-04-09 03:51:18'),
(1129, 'سهير احمد احمد عبد الرحيم', '29712242600222', '$2y$10$.uUmVVw.8AEmrAijOA.n5.TSG4Ztdzu73MkEyfwr9gGqqjuaFiF86', 4, 'X6Dgi95bpDVgnW0mB6eZEnwMKGXy2Dd76FORFWPn6cSwCNnEHJ4MTVbwiWrO', '2019-04-09 03:51:18', '2019-04-09 03:51:18'),
(1130, 'عبد الرحمن على سيد تهامي', '29803292500372', '$2y$10$BygxYPUkjdlarI5j.kCiHOPlWsJbR8azU9jKqQQ.dbDuJjHnnHoeq', 4, '6ARw7jzJbPhTwnoeSygMrj4DOlB1blsVvEAx6qtBqowcqv5S9BDcNRQ2GHLx', '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1131, 'كريم عاطف محمد بقلى', '29801282500096', '$2y$10$TN99qOkSbGCTVGYma3eQJOrDrwndRkkDuCKRumKJNiCJWJ/TRsSW.', 4, NULL, '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1132, 'محمد على عثمان سيد', '29809022502096', '$2y$10$mfYLYyLF1OWLVryOEuGTAu0gMqclPA/HBoO8PjLmAxdvE1N/sxGSO', 4, NULL, '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1133, 'محمد فتحى قطب محمد', '29711242500175', '$2y$10$y/.NFyTumrMfXqEPRhyrOuHkXZ52O/06vatD2RWm7zPhDC26CqJuS', 4, NULL, '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1134, 'محمد مصطفى أحمد سيد', '29801202702416', '$2y$10$ymp.b1bFdez.e.o7oGFP3.PSl8HI1nK0LWe2.qd2yclXTxUpjW6Rm', 4, 'E7wtHTnvGZjQsTmaiILv1jqcPr0n9W39qU3blPhrRqUniHACFK5Xq3AHKv9q', '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1135, 'محمد يوسف مصطفي أحمد', '29805033200118', '$2y$10$f9EIiCNNLmWLjy5wGgYFKOvloU5y4/Xs4T/QmT7bs2zcV2J3l4JmK', 4, 'WNBSVg0qG7dUnVWLcr7KJGZtYecot0BSdXezC8zWCKTddEoEBwWxRbg153XS', '2019-04-09 03:51:19', '2019-04-09 03:51:19'),
(1136, 'مؤمن احمد مصطفى عبد الفتاح', '29807192800838', '$2y$10$5eSEJOHtYk0yKjwyQ3QileXg7KKdFPXc.rt/zqmZp4K5RL.vajY7C', 4, 'gBKx5llNJQoFtfpzfvPhxeMKFKZG1Ftxc737JMGrXQXEpWBu7Zsp5SrCDL5A', '2019-04-09 03:51:20', '2019-04-09 03:51:20'),
(1137, 'نرمين عبد العظيم عبد الرازق احمد', '29711262501348', '$2y$10$cD8QLgYkZ1uCPFSsCMlB5OfCEx6qbc8Xk/M/ZBXNaWT9l3rJaK4cW', 4, NULL, '2019-04-09 03:51:20', '2019-04-09 03:51:20'),
(1138, 'نفيسه محمد احمد عبد الرحيم', '29710222601041', '$2y$10$mF4pimDi1/sgjxMHJfSzMuDh3b616N9EWdfeoSz/XXIaKorIkeXui', 4, 'AsNfq5IcYthXbDgVb0EtbUiiV21sIWZrwowDJzUIU8IME9l3W5xy6ANV4uzx', '2019-04-09 03:51:20', '2019-04-09 03:51:20'),
(1139, 'محمد سيد عبد الغنى حسن', '29401052505554', '$2y$10$3k9Ves8g.u/4n7Jf6ALJSOpcNy8u0N21YYpIdzuFVWOXv43WQSXOe', 4, 'PitFuBMSOa3ZswA8tCpgAoCBSklZoyNCm0yVPDB07rKHiN0zoPAWCF2VfF9o', '2019-04-09 03:51:20', '2019-04-09 03:51:20'),
(1140, 'عمر ممدوح إسماعيل', '11111111111111', '$2y$10$aDb.5aovCQWTfyd8RHU7z.jS5TNH9dR3IHLYoBKDjHY0afa6rEQ5e', 4, 'uMkpQ02NX4998EowicqO0zdjBx3f1WfdCs3cyz9Qbzcu7hiWGXj17T07cgfI', '2019-04-09 04:19:26', '2019-04-09 04:19:26'),
(1141, 'Dr. Mohamed Mostafa', 'hamd4572eg@yahoo.com', '$2y$10$a9t2zQjovoasXaNSUyTB5O.fqla9Vl.shT6L8SC9cN8XnwMZgKRQW', 2, 'M5txFj8ayY6FelUJ7uUsvH4zOIr7qWzaRb63FjMJpOECSsBNscxu1iQWuRjj', '2019-04-14 11:54:28', '2019-04-22 12:06:06'),
(1142, 'dr.rania', 'rania8681@yahoo.com', '$2y$10$D0rWgRMh/kEZDGiyjiWM6enm3i2NZJDEmWIvr5MF8Nsh7HUQGm1v.', 2, 'QKDup6I8NGUJ9M5fn65yunigboiAmPBWWF8wty0VgxSqhBuh3PQMaWmTcED1', '2019-04-14 16:15:18', '2019-04-14 16:15:18'),
(1143, 'ابتسام فتحى محمد احمد', '30008142500685', '$2y$10$Pz7wj/4/qV47OAj9V5Rif.2AX6nQ0EHeZz7C1Yw0WnAt3fYwmYhlu', 4, NULL, '2019-04-15 06:36:42', '2019-04-15 06:36:42'),
(1144, 'ازهار فرغلى محمد محمود', '30003082501766', '$2y$10$G4E/6nyzpv2J0Ig5/jvXiuUpBOXwdUZ3YaXDnsse9DWvxMXLjWm9y', 4, NULL, '2019-04-15 06:36:43', '2019-04-15 06:36:43'),
(1145, 'اسراء جمال فتحى عبدالقادر', '30009012505983', '$2y$10$pxBs1imzMcq4G5Bx7ImYPeq67ii7.zNoArkxvJwAnYVEJuos5SkQS', 4, NULL, '2019-04-15 06:36:43', '2019-04-15 06:36:43'),
(1146, 'اسماء عبدالسميع هلالى على', '30009092501207', '$2y$10$xkY5jPnyPSBHlnwiS6HI8eY6EN/mKSloPxGVXtZd45VFmhHyuNH6.', 4, NULL, '2019-04-15 06:36:43', '2019-04-15 06:36:43'),
(1147, 'اسماء مصطفى كامل عبدالعال', '29909052500068', '$2y$10$MSZ2bXg5k4sOpEjPpBacWuQH/MSTpH2ntD32TWrbmfOCv8B2rBcLa', 4, NULL, '2019-04-15 06:36:43', '2019-04-15 06:36:43'),
(1148, 'الهام عادل حسنى عبدالبارى', '29911182500587', '$2y$10$.4ybkfeSYLGWFgNe/Spnkeh6/CU6KCiSdDu0X4gO0LRfFfwK/etO6', 4, NULL, '2019-04-15 06:36:43', '2019-04-15 06:36:43'),
(1149, 'ام هاشم محسن عبده عبداللطيف', '30001222502889', '$2y$10$roY6k.yjLrF6SwIVahrFyeRzqibjE8jEVRpr3hsT3hlmO4vxzNQIW', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1150, 'امانى محمود يوسف تمام', '29911032500945', '$2y$10$b4moXWZEcTCNBI7s/3Td8ujhRA/bpwxY1tPBgyR8PQRWF61lN7uw2', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1151, 'امل ايهاب سيد شاكر', '30008152503062', '$2y$10$17acN8LiMHiIjspdE6maD.ML8G.0v10ya4S2QG9nD722X8yWJ1vjW', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1152, 'امل محمود على عيسى', '30002152504648', '$2y$10$gjhEJHGfLyE9qt2NplcHfuHnDKCMtcCL.7I4KW0VNzxddID5xta06', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1153, 'اميره انور عبدالعال عبدالعليم', '30006012502764', '$2y$10$QxxWWwcQqXbWecj9KZXemusYYYS9neX6CWpr8zoNm3OtCp2AcTIwC', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1154, 'اميره لطفى عبدالجابر احمد', '30006022500921', '$2y$10$XdzjPxtSWmfLwWVzaolId.Zm.a9obsjCTj4KLS2ogAd8HVYz1hs/O', 4, NULL, '2019-04-15 06:36:44', '2019-04-15 06:36:44'),
(1155, 'اميمه احمد سيد حسين', '30001032503943', '$2y$10$Qe09XlZegNKFxU/7a6LRiuYtCbS4QcQDavCh3uNMhKyixhH8SPAAy', 4, NULL, '2019-04-15 06:36:45', '2019-04-15 06:36:45'),
(1156, 'انجى جمال شحات صليب', '30010012502729', '$2y$10$HcG1P.HdJENuJ0UL.kLP4uJD4Z05M..FO8oBgUoI1H6vRHMsUOtLK', 4, NULL, '2019-04-15 06:36:45', '2019-04-15 06:36:45'),
(1157, 'ايه احمد منير فايق', '29911012501546', '$2y$10$3toFqSGl8o57IVicH5ElYeyTkjYx09R9bwly.LbaKvw47z0/rxv16', 4, NULL, '2019-04-15 06:36:45', '2019-04-15 06:36:45'),
(1158, 'ايه بهاء الدين فؤاد محمد', '30008102501328', '$2y$10$T8Y6xLYKqP5cORJwUhqVAOrxxM9cK.6EhWQYorV/xLv1M/Fjy/tWu', 4, NULL, '2019-04-15 06:36:45', '2019-04-15 06:36:45'),
(1159, 'ايه عبدالحكم عبدالستار يونس', '29912072503269', '$2y$10$DxEiy2NSWFDJsIOdfeloMeSXB86P6NesebuDnD/6Ax7JJMwRAP.F.', 4, NULL, '2019-04-15 06:36:45', '2019-04-15 06:36:45'),
(1160, 'ايه محمد على محمد', '30004122500101', '$2y$10$VTzkcIjVnmTPT2gFzmZ2S.Cvg54opYkaOxrfKzCmYbvYDWQVkzgdu', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1161, 'بسمه على سليم محمد', '30008202504065', '$2y$10$GR0LizIdX5iXeC33LJblM.3jAXKa5cIbR1.i/O06K8ohsPzpOoQsS', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1162, 'بيشوى هانى فخرى عوض', '30008192502158', '$2y$10$sHmJI0dQMaY4BPZrmOm7oeHVL52iUk13UV8o4ZwbWWac5gzpjGo5G', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1163, 'جيلان طه خليفه احمد', '30008282502424', '$2y$10$y3h43iiz9NBBwu1LNd02z.hg0iZ22nMClscX54./dqc4i803t/PrC', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1164, 'حسناء عاطف محمد عبدالعاطى', '30006152501083', '$2y$10$C/dWrNzi9DILQf8br3C24eWSSv5qsfK1sUqGoVriGH8hbd9AWYQ1u', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1165, 'حنان سمير عزيز ابراهيم', '29801292500809', '$2y$10$N4SzwCN4wyHgeWwYHmFgZu2jsYqBL0DhJK0v5ZG4dlMjdQ6cDzgc2', 4, NULL, '2019-04-15 06:36:46', '2019-04-15 06:36:46'),
(1166, 'خلود خالد قاسم قوشتي', '30006012506182', '$2y$10$z1xXieyR/g2vdqjMfHrkB.1awbIxcRqgDCvGmXIKkc5LWPBGFySaS', 4, NULL, '2019-04-15 06:36:47', '2019-04-15 06:36:47'),
(1167, 'دعاء حامد احمد عبدالموجود', '29912152502883', '$2y$10$sSrjKp1p4n3fg801vimHBO9gWKtRV137vz2vgSS3M2WNw7pPgbvnK', 4, NULL, '2019-04-15 06:36:47', '2019-04-15 06:36:47'),
(1168, 'دعاء عاطف عبد المنعم اسماعيل', '30003042502344', '$2y$10$R1pZ93x9D0kneaRrnd4queJelTYlInfIvFbiCnj9euomt6QGzBEIO', 4, NULL, '2019-04-15 06:36:47', '2019-04-15 06:36:47'),
(1169, 'دنيا نبيل رشدى خليل', '30005052500865', '$2y$10$FxTtqYCaHm9S8r7qOiSMVet6977nDyzaPNTMvfKDGyeakEYrtBNR.', 4, NULL, '2019-04-15 06:36:47', '2019-04-15 06:36:47'),
(1170, 'دينا سعد محمد عبدالكريم', '30009202501364', '$2y$10$6Wqpilct3R5WWSHh5f57WOvl/jiZ8.Ku9gGGpQzLt6PdoVqOOJVty', 4, NULL, '2019-04-15 06:36:47', '2019-04-15 06:36:47'),
(1171, 'رانيا محمود منصور حسن', '29912212500923', '$2y$10$hz4pP4Go5zUV91xyQUhQF.L/aDrel4a33QWwWjoTzxzECBMUXsi/C', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1172, 'رانيا ناجح رياض ابراهيم', '30007042501084', '$2y$10$Lrwe1TVBM7Gzn2doJzKxRe6quXw8DBKJKBO/btv9QhQevpT.g6dA6', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1173, 'رحمه الامير محمد عبدالحافظ', '30004142500922', '$2y$10$FIiTo.81aEyP27C4GxMTMecx7mV9xMtdHAZegZTbpF7cTrpNE2jjS', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1174, 'رشا عواد بسيونى عواد', '30001122500609', '$2y$10$20eNqoO0tmPo71OGvyatYeSpIvsNCZZKLxEG1UwmTgd.ECN8BepvS', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1175, 'روفيده مدحت مصطفى احمد', '30001242502664', '$2y$10$WQq/uGoDTCdjfaQhYFBIO.qOcEzLy4PIrQHcMpTiz/A0PkDoAUakW', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1176, 'ساره جبر سعد جبر', '30101012521567', '$2y$10$LkP3kL1FRwK8ADljIOScPurLC3EpppFXt2WtBuR/sXs86TWzj4gTK', 4, NULL, '2019-04-15 06:36:48', '2019-04-15 06:36:48'),
(1177, 'ساره خليل ابراهيم خليفه', '29910092500867', '$2y$10$WalWeC0Oah3bRB/LkFgK.ezSxqtSflTYbxOS.VSBaaaq075TWcR2y', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1178, 'سلمى حمدى محمد محمد', '29910282502149', '$2y$10$g1nJupoQzwn5VpqfN9EO6.d7KKO/5kjRM4jv9tg6wkCNaA4UsHWey', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1179, 'سلوى صبره خلف محمد', '29906102500243', '$2y$10$xLX0UiV6p9mVOlFzkCaxI.CC75bJEEYaGN/72P0m8gXbyqSWk/4sK', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1180, 'شيماء محمد احمد محمد', '29911122500766', '$2y$10$jGoQzYnqs.TqffXYu5KtRuIonGA77PK9m56QLncFGTnQxtZa6svna', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1181, 'شيماء مصطفى محمد سليمان', '30006142500666', '$2y$10$t6.hpY8RiTS9T36rLHp8FOhPkJRf7P97Cnk4NZVD4lglpTkNOGGdC', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1182, 'صابرين خلف عبدالحى عبدالقادر', '30006182502181', '$2y$10$Jy5s2/rWvsOn9zEMjf5NMeXS2FIZYP6j8L68vT2O7Ad/wmTSgZvim', 4, NULL, '2019-04-15 06:36:49', '2019-04-15 06:36:49'),
(1183, 'صفاء فوزى نقى شرابين', '30001302501026', '$2y$10$IKShVCKQCofFFBo4pGvhNu0O9SbAYxK1c6fB5HulYJFSsSQlVPOHO', 4, NULL, '2019-04-15 06:36:50', '2019-04-15 06:36:50'),
(1184, 'صموئيل فوزى جرجس صاروفيم', '30102082501071', '$2y$10$WCA/WCEuoGACisiaMXKHQ.ScSTufGTu3qSN5XP5GOQ8KGnMQQyJQi', 4, NULL, '2019-04-15 06:36:50', '2019-04-15 06:36:50'),
(1185, 'عبدالرحمن على محمد سيد', '30006102501619', '$2y$10$o6Iv7k.2WQoKJLk2JWe8QOrQt38LsDy7N7wD7ogzzda5jMhbcjS2e', 4, NULL, '2019-04-15 06:36:50', '2019-04-15 06:36:50'),
(1186, 'عبير عبدالرحمن محمد احمد', '30005312501143', '$2y$10$TFXW14608nG8EisM1u2zIOJrSUQNz0yKmff972woAkxGq783FbBuG', 4, NULL, '2019-04-15 06:36:50', '2019-04-15 06:36:50'),
(1187, 'عبير غلاب عبدالله سيد', '30007092502847', '$2y$10$F6bIkBLNhSHVsmloiSuMQeApmVbH91IDe1pYQGzHKJcDbXyRlVMUG', 4, NULL, '2019-04-15 06:36:50', '2019-04-15 06:36:50'),
(1188, 'علياء علاء على احمد', '29911272501507', '$2y$10$APkskeaFvfkXVv5BIN.qMetv/gFJufpj00h3/mE/YNd/xby0gmoDi', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1189, 'عمرو محمد محمود على', '30006182501193', '$2y$10$AcSpFvuhQRDwNVuunTi.LemZ8NWsjwOkmhpyTx1Edo8pAazFHsQQ.', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1190, 'فاطمه راوى عباس حسن', '29910202505703', '$2y$10$cLw5LAd7HmojMcly3URUyugKB3vTBFK/2Zd8dNXIeZd42dLTu48uW', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1191, 'كارولين ابراهيم ذكى جاد السيد', '30008092501545', '$2y$10$Z2eus3iYyx8sVI/YGr7Jf.LZxT.jyhLg6Jno1VPi/lxMRDkb7Qbk2', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1192, 'ماجده داود عزيز سليمان', '30001252505025', '$2y$10$LsIiOCTVdV541h5n1mb5EO7NTVqNqNt5LdnpCsAG5IGn8ue4Hbz32', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1193, 'مادونا فكهى نسيم واصف', '30005282502646', '$2y$10$/71XIZVbHfyVZteQRiqMmOyc2RkuG9AsAoEjJLn6fwDdZZfqvqiZS', 4, NULL, '2019-04-15 06:36:51', '2019-04-15 06:36:51'),
(1194, 'مارى صلاح شفيق جندى', '30005012505945', '$2y$10$1L.Fpy4goAs2G9QtkQ4JkepcGR.0QA0zscb74pjPrGHQReJUjHIwa', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1195, 'مارى عياد عبدالملاك جاب الله', '29911012510804', '$2y$10$G26OPP6PJtbk4H7oG47GXeNYTi66vCQ/8cHz3RKjx6odBrW6vR99O', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1196, 'مارى كمال كامل مسعود', '29912012501062', '$2y$10$3Xk5fnyuTWmdBB9Q30EafOE9nliAlEiYL1hNRv7Mm9qJFh7CJJcl6', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1197, 'مارى منير صادق جبره', '29912162502229', '$2y$10$dS/uESCZSRTu5F0EMVpPqOvmEebZyxHowgV0fnE91qQxyEMliHOQK', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1198, 'ماريا اميل كرم حنا', '29911232601304', '$2y$10$7OxeJBuzTkGH99vrsIH9NurU34DKfpJmVeDykGeKt1T5R5HwmSUF6', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1199, 'ماريا صلاح ابراهيم حنا', '30006182500707', '$2y$10$b.cMlitPSzE2n6Zivd4j0u2BMXQ7jyxOBJYWwu3vUPW5QpRDNHyDy', 4, NULL, '2019-04-15 06:36:52', '2019-04-15 06:36:52'),
(1200, 'محمد اسامه حسن زارع', '29907302500333', '$2y$10$AeVldSJPpTJGm.aDdbPwx.qA/uLWa4RmVFVI3egyTCuQzfbnmeVre', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1201, 'محمد تغيان رمضان على', '29912262501173', '$2y$10$vFM2HVLDYmd.58htBDgrq.aINGkOGIFhx.MwjqKCwBEgCzA0dQFXW', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1202, 'محمد عبدالفتاح يونس طالب', '30003122502337', '$2y$10$wXznswUq3GCy2i4J6KKhOet8qtDuZWGZSJLyvq/srLbpKT8kYaCfi', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1203, 'مدرونا حناوى ميخائيل حناوى', '30005212500662', '$2y$10$Fi5IqGIujDRELHM2D6EC9OnBMFJutgzdWUhEfbWPPkuYj2N8q28K2', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1204, 'مديحه محمد محمود محمد', '30009032502026', '$2y$10$7tOrjtzzq5WUJiDRN1UbPeQdH3P7EsgFvSy48wKuBcYDpjMpDmh8m', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1205, 'مرام صلاح شحاته احمد', '30009202501542', '$2y$10$slO0PQ8npBIcrNyYDE2.1OCF7P8JWo2WR9juEny4l87MwtzWsv4ry', 4, NULL, '2019-04-15 06:36:53', '2019-04-15 06:36:53'),
(1206, 'مروه بلال عبدالفضيل عياط', '29912090104509', '$2y$10$euavnVmQO5PTGqtY7judyerNOvW0U.GVUginbvqITct2Nkk8fDO36', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1207, 'مروه صلاح محمود سيد', '30006142500828', '$2y$10$/xQ1Lf0FcHfSnT9zDNkiLe5HlhkHvZngKz2gtCCvF/2/Bc9noHCRC', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1208, 'مريم صليب رشدى صليب', '30007092501786', '$2y$10$SCrzzl4i7PB2ZGTIWRtkSu4Q3gVIE7Y4mwtE7D4sr5opKnqhFdrRO', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1209, 'مريم عاطف محمد مرسي', '30008022503001', '$2y$10$aFXB/zWQj5PE3Fnvc4s7KetdtyJ1u0FnPPgrVtLMYaZDgqJLx8zeS', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1210, 'مصطفى عبدالشافى ابراهيم محمود', '30009232502454', '$2y$10$Wu0Y9eN/Goh6IQkMenBGzeMyxJujO5tgL.tGXlyiRv3acGW0.kH.2', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1211, 'منار جمال كامل محمد', '29902132501184', '$2y$10$TSK8bEFyIzUVrZAl6QzfHeZkLcSJmDiLGNpU.JPa.tLl92QNV7kiu', 4, NULL, '2019-04-15 06:36:54', '2019-04-15 06:36:54'),
(1212, 'منار فتحى عايد توفيق', '29904012512622', '$2y$10$.UA84kf8DmdMrAJnsacK7.ZafGXBt7LZZMtvHHqXRq5RGWL5EyH62', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1213, 'منار محمد همام حسانين', '30001012520582', '$2y$10$zC9fzzB9PC9rDQthklGHUebIay9pY8oEadGvB0eLB4XQxXOyLEKtO', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1214, 'منار مصطفى محمد احمد', '30003012506809', '$2y$10$GUDOXhN2IzlAaac6JxDMNeYUXL6UZZnqIphsA1mBf1KTn6vsv50t.', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1215, 'منار منصور عباس على', '30007052503123', '$2y$10$jv2b4GQcsvUjq1LFPqJYzegsCvknQc1PTVoOTaTMOXDwBgBUXwPlu', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1216, 'مينا وليم زكي جرجس', '29804212503836', '$2y$10$0Bg9MPQHdR1xeFq22H/d7OjXjHXtUDUh3CAjbu3wb.VBO/jVIzBSC', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1217, 'ندى عبدالله عبدالبارى محمد', '30004012500823', '$2y$10$zFg52588Pwf2Rp5Ko/0yB.bGfVhEOUCwOcyQ7MkJsAg7ule1GCQLy', 4, NULL, '2019-04-15 06:36:55', '2019-04-15 06:36:55'),
(1218, 'نسمه عبدالرحيم عبدالشافى محمد', '29911042502067', '$2y$10$Opwr.a38GZxE.IQHhJJXOu6VhhgwPAh.iFKHR6caiRtfwShGHsBdG', 4, NULL, '2019-04-15 06:36:56', '2019-04-15 06:36:56'),
(1219, 'نهير عاطف حسن على', '30004272501246', '$2y$10$HjeLChKR3e47HAZ3E/EscOqYTEGI5biEDWRlcnMajn3j9yg5ZM.oe', 4, NULL, '2019-04-15 06:36:56', '2019-04-15 06:36:56'),
(1220, 'نوره ايمن حسن عبدالحميد', '30001212500543', '$2y$10$AopL2LGOJohd5OTs87z2yeYoqEyesbx5dh7WIzGUyfwd8u55.Y3xO', 4, NULL, '2019-04-15 06:36:56', '2019-04-15 06:36:56'),
(1221, 'نورهان عبدالنعيم عادل محمد', '30005292501583', '$2y$10$D1O2ZkDPijA8W0eB/rDfpOEKl8GwA4..aaeW7JF8vUlXtS6xuSlHC', 4, NULL, '2019-04-15 06:36:56', '2019-04-15 06:36:56'),
(1222, 'نورهان على مصطفى على', '30002112500143', '$2y$10$YXLJTOJI.ZOe4sQqqp9mjOjn3h6OwaiOjIxN3AX6zI4qqCb..Pjaa', 4, NULL, '2019-04-15 06:36:56', '2019-04-15 06:36:56'),
(1223, 'هاجر على محمود محمد', '30004272500665', '$2y$10$J96fjvSjIYEZ6AShRpEDEOTA/GNkFE.WHZFUUnaWaFRy6fgC58I1e', 4, NULL, '2019-04-15 06:36:57', '2019-04-15 06:36:57'),
(1224, 'هاجر محمد عبد الغنى على', '29708132501728', '$2y$10$SNuFZIydaYWphfJ1lB567e8beP0.S5JLNEnbQzxWDgq8Cw3Vrs7fW', 4, NULL, '2019-04-15 06:36:57', '2019-04-15 06:36:57'),
(1225, 'ورده وديع ذكى مسعود', '30001132502243', '$2y$10$b7pU.QrzIcOXFjondM0Mgux0RyVr2/RJEkdxaOSK7fnXBcaYbnBjy', 4, NULL, '2019-04-15 06:36:57', '2019-04-15 06:36:57'),
(1226, 'ياسمين خالد على عبدالناصر', '30005012503721', '$2y$10$PgBapOYdM3YCljet/8j9jO5GYMQWIB0dVXrRO5hfIqMBoKLGkg3zi', 4, NULL, '2019-04-15 06:36:57', '2019-04-15 06:36:57'),
(1227, 'أحمد عوني احمد حسين', '1001', '$2y$10$8JR4BUBa1Au1OuPt1PIqBel6O1n5YhYJiTLdkSj4JG4.xmgAHS38u', 4, NULL, '2019-04-22 10:19:11', '2019-04-22 10:19:11'),
(1228, 'اسلام عبده محمد عبده القصيري', '1002', '$2y$10$uj9yZK/icM1xYj8gNakqxeBeINs2.6QMoiJUAAF1iJC/yMUdrr78y', 4, NULL, '2019-04-22 10:19:11', '2019-04-22 10:19:11'),
(1229, 'اسماء جمال عبد الناصر', '1003', '$2y$10$DC6AwKTC0xwv5o0cl9rOI.Xhp4hbSPXv8FQM0UVlY5OLxbgIxv2CS', 4, 'QSUxiYPFfv4hVLIaplHpJMjlnop23Cdz3vq9PmOawe8PDJv5eLoiUxDszYpM', '2019-04-22 10:19:11', '2019-04-22 10:19:11'),
(1230, 'اسهام سعد صدقى', '1004', '$2y$10$rLBkJF19hc8k8HRvWvonS.1fsK2hF1X6zNBvpWl4Sk8ZT.UeXhBVK', 4, NULL, '2019-04-22 10:19:11', '2019-04-22 10:19:11'),
(1231, 'الهام صموئيل محروس', '1005', '$2y$10$UZzlWNMVBehCxILk8rj2b.oqu5g.81a.SsIUcFgkK5p/IE1Ed2VmC', 4, NULL, '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1232, 'امال جابر عبد الرحمن', '1006', '$2y$10$8f9/xdwbhPvOzRtWT0MgJuymrlyjuV2bhY2A1aYPeGev3Ri5xAvxe', 4, NULL, '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1233, 'اميرة محمد احمد', '1007', '$2y$10$SAkHjO7XKe/1MoA5YDb39eAlpq218.bvK0cmqysvYo1n1CJLnSaQ2', 4, NULL, '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1234, 'ايمان يوسف زكريا', '1008', '$2y$10$EqCrjx0J6SsaM.VwwvM6Ye2I39gktoY8jK4BMQlKeOBCkUk7N/ZYu', 4, NULL, '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1235, 'ايه الله محمود محمد', '1009', '$2y$10$LYKxodBQYuZBiWHYzae2m.2LrTPxZ8yWaR/.eq7cpq4cKvzSDA9PC', 4, NULL, '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1236, 'تهاني محمد السعيد', '1010', '$2y$10$7g9ellBz3GhUboGw1SzaZ.LCk5ncbE5i3GuCrCQqOLhzkKVIqWGPe', 4, '9MvUWxTZFz05NRxV4PMqbp5ArGOHWaYztv2FWSqCfVfGl5Lsmyvg7SOVWtz2', '2019-04-22 10:19:12', '2019-04-22 10:19:12'),
(1237, 'جيهان كرم بولس', '1011', '$2y$10$8JE71A7H5PkS3hic/rsxzOKYsRuF4g9lwxInmbf9Lxm5LrB7FIBwe', 4, 'xTEUFp0cdBdkUuY8D9YKPONR9dgeCqAIgrp1Mxqk8rW0VTP3BYDNKew7oImh', '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1238, 'خالد زكي عبد الحافظ', '1012', '$2y$10$KxMPIN7Y04zhTQY4cud3gu00D3b1pmd2zqN4Z26IrdPP9nmTqiiqe', 4, NULL, '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1239, 'دعاء محمد على', '1013', '$2y$10$950..b6b7cdrhMvNC2WIkO30WYzZ.sp1kUOnJKkldIeRRAZtg7w/G', 4, NULL, '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1240, 'رباب عاطف فتحي', '1014', '$2y$10$9LHGBTnFAztMqVTYZlC1NeVr8A5x8Iuniil0oMFq.RDiR0pbMv7l6', 4, NULL, '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1241, 'رضه زكي على', '1015', '$2y$10$.TXVDC0JwfcSR/J1I0WXJ.HO5gY850qolNRGfnQQK1h34FT8lIwsS', 4, NULL, '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1242, 'سهير حمد الله على', '1016', '$2y$10$7bhQIFPbU9Iu5XZkWBcjbOyE5FTD8.bPwsLLYytVl/m/eRJNxVo.a', 4, NULL, '2019-04-22 10:19:13', '2019-04-22 10:19:13'),
(1243, 'سهير فتحي ابراهيم', '1017', '$2y$10$m.WpP.wF3FB4Ur04k54Y0.jGBsz1env86rNY2SSXmH35dSvb0UQUa', 4, 'lEWXDVnsfTy4L9M5xdbwWuuei8nOjCWsA26nFUWMljhEdv4pMA8GmeMqRnbu', '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1244, 'سوزى وجدى مكاري', '1018', '$2y$10$gdh2yCXETpLtNAnN.T8SAOGIQdqMIMsj./Pw4EUchHYnhrCmGniFi', 4, NULL, '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1245, 'شادية خلف الله عزيز', '1019', '$2y$10$mgG7DHgEtw6PElbbLB5NbecdsivdSTI7RqbZHHmXtwsVh4rwm9mc.', 4, NULL, '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1246, 'علاء محمد توفيق', '1020', '$2y$10$7csRt.E5r5jC9YsKXOIQwerG0Fc9yoP9hVhpWPDSQ371QOgN1ZcZq', 4, 'UQOjBqHB79WSbxu3ocpG6lUeVhqHjmIBrztqOGtiOhmKfJErK0UP5OCNsjxq', '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1247, 'عمرو محمد عبد الكريم', '1021', '$2y$10$IFXMyNlzHuuM.alcTRVhVOgnby3R/B2ovzPStwFf/67hLaHTZCrfi', 4, NULL, '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1248, 'عمير ابراهيم احمد', '1022', '$2y$10$V4gaDmxmCpZkhnjAmCKmPetkDckurLj/gwMoo4wRnYjApMdqYvvtS', 4, NULL, '2019-04-22 10:19:14', '2019-04-22 10:19:14'),
(1249, 'عنتر عبد الصبور عبد الرحيم', '1023', '$2y$10$7KfVqIs36lso.VOx6XY.fusdTln3X2JlWFXs1z08/UGwHKO637GAq', 4, NULL, '2019-04-22 10:19:15', '2019-04-22 10:19:15'),
(1250, 'فاطمة ابراهيم على', '1024', '$2y$10$ykh8GRmkgNSHABF293EqgukzxrfD5nL7j6MW0/Zl4KWreUjByFWZm', 4, NULL, '2019-04-22 10:19:15', '2019-04-22 10:19:15'),
(1251, 'ماجدة محمود احمد', '1025', '$2y$10$iEBItYu5MpQkzpoeEX9jjOvWwCXnLlSJ3xrmYOHYzJ8B1Yd2g8gCW', 4, '3GAiqhxJhM55Cpz5F3H6Kduqjwjtc7FUCFM4D5I12qXM7uMhQLlH9kDQmQ6U', '2019-04-22 10:19:15', '2019-04-22 10:19:15'),
(1252, 'محمد عشري شعبان', '1026', '$2y$10$ea6/WyfOXxPH8Z/c/QEKc.tAweYcEEp3wCfoA08gg0wJpae8lfU8K', 4, 'Abh8VnFIPpC7ChEIS2gg6YDMuxiQFiMNS6Ijc4ZGIr3n8hxmpotuCYRyLnjp', '2019-04-22 10:19:15', '2019-04-22 10:19:15'),
(1253, 'محمد مصطفى محمدسيد', '1027', '$2y$10$BaCHaP9GBxVuGFkybD2xyOLomr5CJbaZXWKU9BwIG8ExqbYfYaGlG', 4, 'nSYRgMrskWqw1rpNkWHDVW5gDHzjUOZAMtdtCErCo2xnGBdjaANCcmswpSuP', '2019-04-22 10:19:15', '2019-04-22 10:19:15'),
(1254, 'مادلين ابراهيم شوقى', '1028', '$2y$10$hYIDToJnNNutTjxUsmCut.4Iju7JCL8iAZsalWZwtuHK2WHzkfXEm', 4, '2mkT5rHn10IAHC7PvY0cfx5AQRvCqkiGwUN2XKhRrIpvTxTqjlLmDOLzH7j4', '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1255, 'مرفت رشاد شاكر', '1029', '$2y$10$sFryDQLu8BAIXPRH3coAZuF.bpnYAHs0geVleJqsOg5xkOcdsHU9u', 4, 'pxotB3e1yufquCd18FQGS1OTEU3c0o5GupPWMPLT9npw0Fh4cjch18Yz6hF2', '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1256, 'مصطفى عبد النظير محمد', '1030', '$2y$10$vMHXJ6oJ2ET.JOe637WuD.7Fqw0F5VQQsuuEf6CzBvc0uDQ/t4vHm', 4, 'FHj9GFgQNkNWjCQHsPPy48wg2rMD8V3GPIjB9t7z7xvBtt8q2H5fFVhyxFVk', '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1257, 'نجلاء فكري عبد الله', '1031', '$2y$10$o7TPjMSP6Dml.LL4Lvdm4e5oUJe1hBj6oeUXV.zC6a9BlanD2N2xy', 4, NULL, '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1258, 'نجوى رزق حبيب', '1032', '$2y$10$v0satJSyWY8JzKEwZehkkek1Wene19pdTRCnHfjIctWc3h8AKY3T.', 4, 'fOcQflMljJlcihSiihVaYnkfWhNdicxbZOtbNZ00f88Z20RnTFdwH0RVwjnb', '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1259, 'نعمة محمد عبد الحميد', '1033', '$2y$10$EK4VgP12.0a6RCEwoYbVmeECH3lnglyKIUjLKPEsO/64LNpYWueNK', 4, 'OIA8kba8HEAlq2lAPdKd9VCJaysR9SWPEA47IoHxAf6AhoSgy9mJF2OY5ci2', '2019-04-22 10:19:16', '2019-04-22 10:19:16'),
(1260, 'نهال محمد يونس', '1034', '$2y$10$pkciriYqM6.XyTxhDrMIyuOpa7zMO8t93BmRue.QYR620lIll12HO', 4, NULL, '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1261, 'نيفين موريس جاد', '1035', '$2y$10$5FFwMzTncIqIawLG2eP1GeCBNVBVtCfqRSXvsw4BIrRpqkc1/ZEfi', 4, 'yhCKlZmSeafCtc1WOb4wWC4BewCTGuHXKstJaM1HYAv8EMVWRTQPdNKC6BYf', '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1262, 'هبه محمد عبد الله', '1036', '$2y$10$ZBbdwFhwHWLtksWEzOhTTeuHTVvgNZhY4ws8TBXG4GtxuFQ7j6xEC', 4, '0GvW78CP5wbTZEbwIBBqpTq6qbf9fvH8Bi6BFSVDsQnOZQ6cpf7Dkjsc0rgd', '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1263, 'هبه محمد فراج', '1037', '$2y$10$GtBBmfsIw5t19Sq6yVOBa.pBPzcfCg9AA8ZZrvUSgbG0jUXroh9Qi', 4, 'aJ6KXiirVVgRzd13oTeBgqbTJRIicbNa74rnFbmBXSFIqSGyOrikDrnrSR6o', '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1264, 'هدى عيد عبد الرسول', '1038', '$2y$10$QptApKBBfIaurYPCNbJGTuaVZJhP9rPFPEHXs2hzYxpt74IFB8wiy', 4, 'GBT4MiGC9KsJ5CcmbRJyoDHjoifOdhqWwVx2LrMgKMMSt4tESLQqLn2rzOoo', '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1265, 'هيام همام احمد', '1039', '$2y$10$JV.KNcCKN1kw3JsJyCnd3u.T2IephdA5Fwqh/YojXgyhJ3TLv6/ve', 4, '0gC4bpw0JteT8g6jClnb4heNlBvoqdhFxfx6R7WU77r3YGB6M4PXTzEoF8Xn', '2019-04-22 10:19:17', '2019-04-22 10:19:17'),
(1266, 'وليد محمد عبد الحفيظ', '1040', '$2y$10$Erp/xFahD10lLQfNHGS1..TVN3MxPB6ipPZr.fy9GX0OWb0zXa62i', 4, 'SA3bAOKNyGJoLBKA3YaqN7rt2d65FdALGcobL4eIgdc9OIIwI3CaqmeoofyC', '2019-04-22 10:19:18', '2019-04-22 10:19:18'),
(1267, 'علاء محمد توفيق', '3030', '$2y$10$UWXFgsatOCSX1zWcWFRvG.F.ycVljel0Q3hutZyYRDRI.jH1j6Q5O', 4, 'I8UrGCDfV2964qfk7vwhLLvemqOce4nSpIuNQhbSOzhjs5Mbw7iRLX9Cqv4R', '2019-04-22 15:06:27', '2019-04-22 15:06:27'),
(1268, 'ليلى احمد خليفة', '29908012611227', '$2y$10$N9LwKa2tX66msNBP0Wd5lOYbcw4TjUhao9d.mX/ifGLbHr4lBVyLq', 4, NULL, '2019-04-24 12:45:51', '2019-04-24 12:45:51'),
(1269, 'أندرو حليم 1', '112233445566', '$2y$10$Bvghf1/2dzXLDbQsbi/SEOfWJQxr7wW2VWW7TvqQKudot8qwJha/W', 4, NULL, '2019-05-13 06:24:55', '2019-05-13 06:24:55'),
(1270, 'اندرو حليم مترى اسكاروس2', '11223344556677', '$2y$10$DkZMXtn1xfhe3QPEVDBq9.Q7KcX6W/UUQ9XouVDOXwr6N2yaXlIeO', 4, NULL, '2019-05-13 06:32:56', '2019-05-13 06:32:56'),
(1271, 'شريف مجدى هلال', '963852741', '$2y$10$nNdlwbWA3OwFxlOTG2PUZOciTR4F323XCrsvzRx8MLgCtrQi72S2K', 4, 'jVWgWUOM2YtADrMp58yY6ppKfsPm2RcNEz0ypnxz8tvRVlcEVpZurwtetRxK', '2019-05-13 09:08:15', '2019-05-13 09:08:15'),
(1272, 'كيرلس ماجد', '147258369', '$2y$10$8bPymihsSEDUR79xce/ggu1k.bqy88cU4/LBD/EjiwSWDMrFSLVri', 4, '25MUUruF6pkxvqTTqm1q0QEaPGEJZnt9GeLEsmKHxEHP8XU1b136ZdvruH3p', '2019-05-13 09:09:09', '2019-05-13 09:09:09'),
(1273, 'شروق محمود محمد', '55513292', '$2y$10$cxy52oxm/dGW9nfPjVOKOO/XGS7IM1CNLKurcPW3K.axArvxhq1D.', 4, NULL, '2019-05-13 09:17:27', '2019-05-13 09:17:27'),
(1274, 'رودينة على حسن', '66613293', '$2y$10$MOUVxKtnk6fZ.D.us6W6FuAieroH2qduPJT0xF9R0VBgyPFXPuhjO', 4, 'LTWeHsnBzkTICGzSGBp8auzyaipMDFhFDUJi6uhmS2Plf4925E9ouRY9op6G', '2019-05-13 09:18:12', '2019-05-13 09:18:12'),
(1275, 'خالد محمد راشد', '555666', '$2y$10$XH7iKPNsFEYPjfHOC4BfoeIUQTSVhZg8W7uCU4EvNK/3OSj3hMRWK', 4, 'Iyp1aQHoN0bBk2uMm4bxqD2BZxFPX65Rr8ccOw7Y4HqVh4GyqRSnbx1Jj6fC', '2019-05-13 09:25:38', '2019-05-13 09:25:38'),
(1276, 'hamada', 'hamada@gmail.com', '$2y$10$sUxrXPcwH0X33bOLCyI2WOe1jqdfU3ev0fWyQBLBjhoj8qow9P3cy', 2, NULL, '2019-11-13 06:30:13', '2019-11-13 06:30:13'),
(1277, 'kkkkk', 'kkk@gmail.com', '$2y$10$tNSSKEO4U5JIvgNvC0WDLuhqN74OX.Q4T9fVje73n/YYUVbX/IuDe', 4, NULL, '2019-11-13 06:47:55', '2019-11-13 06:47:55'),
(1278, 'asddddd', 'asd@gmail.com', '$2y$10$4XPMFX96atUKr6nY3wAQB.tZkwFJOHBB3QZEKLHXYpQ5sBH9DTxaG', 2, 'fcjS0lWemr1SjKTlvmVF5k312M114OQFW5jY05MwrQnaF2RbfAwpLGCQGdBV', '2020-01-15 10:55:10', '2020-01-15 10:55:10'),
(1279, 'adel', 'adel@gmail.com', '$2y$10$7wrQneOZxFZCUXm7z7WzpetWiRhXECp3uAO7CdGZbrUuX2UeYHivC', 3, 'qLCHNuYm5rFsGHC1NejgB6GE2rGRKWb7LcNZ3qw90lpN4yxlDvtVP76DD5Sl', '2020-01-15 11:13:20', '2020-01-15 11:13:20'),
(1280, 'hhghghghg', 'student@gmail.com', '$2y$10$MJC8lebBED4EjVZmO4bfOugrnfI8/NvP6/WD/TiHQtJZLE2VKIsr2', 4, 'bCFSP7ld2Z1o3RC2lvZsp0tkj2kAzjrA9pGfZrnNFiSG8EYAlrCWlfrqdvHb', '2020-01-15 11:14:27', '2020-01-15 11:14:27'),
(1281, 'asdsdadsa', 'student23@gmail.com', '$2y$10$tJP58GwVDiAgR9O5znsHhONADzXL.guhsFFPBFOTLM68QM0FMfBWa', 4, 'fEEvkRSCd8E8LE9LAs0iwY9Z12gk0Xn7PRCy7RsnijZQ7NhERyDke1tkwxiG', '2020-01-15 11:16:28', '2020-01-15 11:16:28'),
(1282, 'admin', 'admintest@gmail.com', '$2y$10$tJP58GwVDiAgR9O5znsHhONADzXL.guhsFFPBFOTLM68QM0FMfBWa', 1, 'a4EavQDstLmlfjyJv980Ey1WnzU2CvmVXUVWhNGnIZFSDpLS4kcLLpMG4riD', NULL, NULL),
(1283, 'doctor test', 'doctor@gmail.com', '$2y$10$B4ai8PCU1cfD8oagmIh/L.8fcmGzNyTiB/pKD4FKKmDAGdZAqxKfW', 2, NULL, '2020-02-02 10:28:13', '2020-02-02 10:28:13'),
(1284, 'testdoc', 'testdoc@gmail.com', '$2y$10$s9zK2aqqgcZkRVUPi07nDeMj56svFXFw8QyB8sZ/SK4fn2c0BL5PK', 2, 'pSRGJpo6EsqVAnAHYGo6UdJLnpm7DQ5alA2haNvELo9PUAiEwozHWdpp99KZ', '2020-03-14 18:50:46', '2020-03-14 18:50:46'),
(1285, 'testaff', 'testaff@gmail.com', '$2y$10$7i98DDZDGwdkBLdFZiPqC.DLPiE7HGaw75r1yk5rI0EXpMWq0tJJu', 3, '2ruOBhPzVTrBr4hq2Bvu9n4fEyYe8B4LluEvmBamBxmk2XxblVFMGhhL9uMY', '2020-03-14 18:51:53', '2020-03-14 18:51:53'),
(1286, 'testst1', 'testst1@gmail.com', '$2y$10$JZkmErlfU6TbfNKx8HohKedyA0Bq4BDXnHV3W6CQe0YR10y3md0su', 4, 'LIKkxBRCs14f64IcGWeGYDAJhDdZt4X0Y6fEzciLf58JSJOX0kgKauicEmly', '2020-03-14 19:11:20', '2020-03-14 19:11:20'),
(1287, 'testst2', 'testst2@gmail.com', '$2y$10$rSb/uCjWHceIrsZOm/PWR.VDpnkcfIrAJEG5i4UPZQQ6XCeFZSegW', 4, '8BAsSHcRj7AD1gNj7YzhYkKO8IWpksICcOORDsvW37h5wCvgPYUrp2LR9jWq', '2020-03-14 19:11:54', '2020-03-14 19:11:54'),
(1288, 'mahmoud', 'testst3@gmail.com', '$2y$10$EQ1DiE6y9LsVJ1chon509.8.9wd44ADjV3n7KDK9T0RRsKLO3lyF.', 4, NULL, '2020-04-20 20:46:38', '2020-04-20 20:46:38'),
(1289, 'mahmoud2', 'testst4@gmail.com', '$2y$10$wTyAGn80nZyEYXQXKG6/sugLGh/v2/29IrqDJeTfBpnNR1D.IWSau', 4, NULL, '2020-04-20 20:53:27', '2020-04-20 20:53:27'),
(1290, 'mahmoud', 'testst5@gmail.com', '$2y$10$rfTKeAlH6y1UgDsXnO8TdO0XFzhPr1ILTKaTkhzpQA9zM/x3tpO9O', 4, NULL, '2020-04-20 20:55:25', '2020-04-20 20:55:25'),
(1291, 'mahmoud', 'testst6@gmail.com', '$2y$10$GKOB8EUDqDHZb8RtJKQgsumn8uQokXzwgJyUfcgMyC3Fm7PmfzIwe', 4, NULL, '2020-04-20 21:30:28', '2020-04-20 21:30:28'),
(1292, 'mahmoud', 'testst7@gmail.com', '$2y$10$wie18QgzLemIzpUttG2lOeVjxIW7pU3gWHsbK5ETbZ0mGSti2u5UK', 4, NULL, '2020-04-21 07:34:15', '2020-04-21 07:34:15'),
(1293, 'ddsa', 'testst8@gmail.com', '$2y$10$PseM6ZAcCDvJCYodordQW.l.uZzTDIyUZ0L0KPkC9GrbHk93FieLy', 4, NULL, '2020-04-21 07:57:53', '2020-04-21 07:57:53'),
(1294, 'dsadd', 'testst9@gmail.com', '$2y$10$kW80mrzo/2qXYEPWRb8FqOzDmaiCZ3Gt4ZTjZfUOyShW09zwtfPVC', 4, NULL, '2020-04-21 08:00:07', '2020-04-21 08:00:07'),
(1295, 'Ahmed Ali', 'testst10@gmail.com', '$2y$10$JuW7.evxEpvHzEvfcc2y9.fXIR9MiUZx7Q6t0HMFOlQCR0mruhWoa', 4, '04ih1G1C55HGnNs4hp35EspQWGl3HVhoDgmLqV7XCeoys1FvUsJp5Y1icDL1', '2020-04-21 08:09:03', '2020-04-21 08:09:03'),
(1296, 'testsads', 'testst12@gmail.com', '$2y$10$Zw1KgiYiYEbu86u8WPRY2Oke0i2j4vxqC8uktmh4mIrEBZhOR6UtG', 4, 'dFMJeNYc5TqBpue4E8NL9W4UESBtp6y0x33VGf74fcE6mEsJhP80htQWOTi5', '2020-04-21 08:43:04', '2020-04-21 08:43:04');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `classes`
--
ALTER TABLE `classes`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `DEPARTMENT_ID` (`DEPARTMENT_ID`),
  ADD KEY `id_2` (`id`);

--
-- Indexes for table `departments`
--
ALTER TABLE `departments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `FACULTY_ID` (`FACULTY_ID`);

--
-- Indexes for table `exams`
--
ALTER TABLE `exams`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `id_2` (`id`),
  ADD KEY `STAFF_ID` (`STAFF_ID`),
  ADD KEY `SEMESTER_ID` (`SEMESTER_ID`);

--
-- Indexes for table `exam_student_model`
--
ALTER TABLE `exam_student_model`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `faculties`
--
ALTER TABLE `faculties`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `ilos`
--
ALTER TABLE `ilos`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `COURSE_ID` (`COURSE_ID`),
  ADD KEY `ILO_TYPE_ID` (`ILO_TYPE_ID`);

--
-- Indexes for table `ilo_types`
--
ALTER TABLE `ilo_types`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`);

--
-- Indexes for table `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `QUESTION_TYPE_ID` (`QUESTION_TYPE_ID`),
  ADD KEY `EXAM_ID` (`EXAM_ID`),
  ADD KEY `course_id` (`course_id`);

--
-- Indexes for table `question_choices`
--
ALTER TABLE `question_choices`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `question_choice_images`
--
ALTER TABLE `question_choice_images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_exams`
--
ALTER TABLE `question_exams`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `exam_id` (`exam_id`);

--
-- Indexes for table `question_ilos`
--
ALTER TABLE `question_ilos`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `ILO_ID` (`ILO_ID`);

--
-- Indexes for table `question_images`
--
ALTER TABLE `question_images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_types`
--
ALTER TABLE `question_types`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `report_attachement`
--
ALTER TABLE `report_attachement`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `sas`
--
ALTER TABLE `sas`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `SA_FACULTY_ID` (`SA_FACULTY_ID`),
  ADD KEY `user_id` (`user_id`);

--
-- Indexes for table `semesters`
--
ALTER TABLE `semesters`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `sessions`
--
ALTER TABLE `sessions`
  ADD UNIQUE KEY `sessions_id_unique` (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `staff`
--
ALTER TABLE `staff`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `FACULTY_ID` (`FACULTY_ID`),
  ADD KEY `DEPARTMENT_ID` (`DEPARTMENT_ID`),
  ADD KEY `user_id` (`user_id`);

--
-- Indexes for table `staff_courses`
--
ALTER TABLE `staff_courses`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `STAFF_ID` (`STAFF_ID`),
  ADD KEY `COURSE_ID` (`COURSE_ID`);

--
-- Indexes for table `students`
--
ALTER TABLE `students`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `id_2` (`id`),
  ADD KEY `FACULTY_ID` (`FACULTY_ID`),
  ADD KEY `DEPARTMENT_ID` (`DEPARTMENT_ID`);

--
-- Indexes for table `student_cource_exams`
--
ALTER TABLE `student_cource_exams`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `STUDENT_ID` (`STUDENT_ID`),
  ADD KEY `COURSE_ID` (`COURSE_ID`),
  ADD KEY `EXAM_ID` (`EXAM_ID`),
  ADD KEY `SEMESTER_ID` (`SEMESTER_ID`);

--
-- Indexes for table `student_exams`
--
ALTER TABLE `student_exams`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `student_id` (`student_id`),
  ADD KEY `exam_id` (`exam_id`);

--
-- Indexes for table `student_exam_images`
--
ALTER TABLE `student_exam_images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `student_question_answers`
--
ALTER TABLE `student_question_answers`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Indexes for table `stud_ques_ans_choices`
--
ALTER TABLE `stud_ques_ans_choices`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `question_id` (`question_id`),
  ADD KEY `student_id` (`student_id`),
  ADD KEY `exam_id` (`exam_id`);

--
-- Indexes for table `times`
--
ALTER TABLE `times`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `user_id` (`user_id`),
  ADD KEY `exam_id` (`exam_id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`),
  ADD KEY `id` (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `classes`
--
ALTER TABLE `classes`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `courses`
--
ALTER TABLE `courses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=36;

--
-- AUTO_INCREMENT for table `departments`
--
ALTER TABLE `departments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `exams`
--
ALTER TABLE `exams`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=108;

--
-- AUTO_INCREMENT for table `exam_student_model`
--
ALTER TABLE `exam_student_model`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=103;

--
-- AUTO_INCREMENT for table `faculties`
--
ALTER TABLE `faculties`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `ilos`
--
ALTER TABLE `ilos`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT for table `ilo_types`
--
ALTER TABLE `ilo_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=38;

--
-- AUTO_INCREMENT for table `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=666;

--
-- AUTO_INCREMENT for table `question_choices`
--
ALTER TABLE `question_choices`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2054;

--
-- AUTO_INCREMENT for table `question_choice_images`
--
ALTER TABLE `question_choice_images`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=40;

--
-- AUTO_INCREMENT for table `question_exams`
--
ALTER TABLE `question_exams`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=911;

--
-- AUTO_INCREMENT for table `question_ilos`
--
ALTER TABLE `question_ilos`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=628;

--
-- AUTO_INCREMENT for table `question_images`
--
ALTER TABLE `question_images`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=25;

--
-- AUTO_INCREMENT for table `question_types`
--
ALTER TABLE `question_types`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `report_attachement`
--
ALTER TABLE `report_attachement`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `sas`
--
ALTER TABLE `sas`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `semesters`
--
ALTER TABLE `semesters`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `staff`
--
ALTER TABLE `staff`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=27;

--
-- AUTO_INCREMENT for table `staff_courses`
--
ALTER TABLE `staff_courses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=75;

--
-- AUTO_INCREMENT for table `students`
--
ALTER TABLE `students`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1246;

--
-- AUTO_INCREMENT for table `student_cource_exams`
--
ALTER TABLE `student_cource_exams`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2157;

--
-- AUTO_INCREMENT for table `student_exams`
--
ALTER TABLE `student_exams`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1320;

--
-- AUTO_INCREMENT for table `student_exam_images`
--
ALTER TABLE `student_exam_images`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=308;

--
-- AUTO_INCREMENT for table `student_question_answers`
--
ALTER TABLE `student_question_answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `stud_ques_ans_choices`
--
ALTER TABLE `stud_ques_ans_choices`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=516221;

--
-- AUTO_INCREMENT for table `times`
--
ALTER TABLE `times`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1316;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1297;

--
-- قيود الجداول المحفوظة
--

--
-- القيود للجدول `ilos`
--
ALTER TABLE `ilos`
  ADD CONSTRAINT `ilos_ibfk_1` FOREIGN KEY (`COURSE_ID`) REFERENCES `courses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `ilos_ibfk_2` FOREIGN KEY (`ILO_TYPE_ID`) REFERENCES `ilo_types` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- القيود للجدول `questions`
--
ALTER TABLE `questions`
  ADD CONSTRAINT `questions_ibfk_1` FOREIGN KEY (`EXAM_ID`) REFERENCES `exams` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `questions_ibfk_2` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `questions_ibfk_3` FOREIGN KEY (`QUESTION_TYPE_ID`) REFERENCES `question_types` (`id`);

--
-- القيود للجدول `question_exams`
--
ALTER TABLE `question_exams`
  ADD CONSTRAINT `question_exams_ibfk_1` FOREIGN KEY (`exam_id`) REFERENCES `exams` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- القيود للجدول `question_ilos`
--
ALTER TABLE `question_ilos`
  ADD CONSTRAINT `question_ilos_ibfk_1` FOREIGN KEY (`ILO_ID`) REFERENCES `ilos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- القيود للجدول `staff_courses`
--
ALTER TABLE `staff_courses`
  ADD CONSTRAINT `staff_courses_ibfk_1` FOREIGN KEY (`STAFF_ID`) REFERENCES `staff` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `staff_courses_ibfk_2` FOREIGN KEY (`COURSE_ID`) REFERENCES `courses` (`id`);

--
-- القيود للجدول `students`
--
ALTER TABLE `students`
  ADD CONSTRAINT `students_ibfk_1` FOREIGN KEY (`FACULTY_ID`) REFERENCES `faculties` (`id`),
  ADD CONSTRAINT `students_ibfk_2` FOREIGN KEY (`DEPARTMENT_ID`) REFERENCES `departments` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
